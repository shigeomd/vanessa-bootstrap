//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиСервер.ФормаНастройкиУзловПриСозданииНаСервере(ЭтаФорма, Отказ);
	
	Если Не ЗначениеЗаполнено(ПравилаОтправкиДокументов) Тогда
		ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачалаВыгрузкиДокументов) Тогда
		ДатаНачалаВыгрузкиДокументов = НачалоГода(ТекущаяДатаСеанса());
	КонецЕсли;
	
	РежимСинхронизацииОрганизаций =
		?(ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьДанныеПоВсемОрганизациям")
	;
	
	ПолучитьОписаниеКонтекста();
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ИспользоватьОтборПоОрганизациям =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям")
	;
	
	Если Не ИспользоватьОтборПоОрганизациям Тогда
		Организации.Очистить();
	КонецЕсли;
	
	ПолучитьОписаниеКонтекста();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзловКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыОтправлятьАвтоматическиПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательДокументыНеОтправлятьПриИзменении(Элемент)
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьВидимостьИДоступность()

	Элементы.НастройкиВыгрузкиДанных.Доступность =
		(ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация")
	;
	
	Элементы.Организации.Доступность =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям")
	;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		ЭлементКоллекции.Использовать = Включить;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьОписаниеКонтекста()
	
	ОписаниеКонтекста = НСтр("ru = 'Вся нормативно-справочная информация автоматически регистрируется к отправке;'");
	
	Если ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация" Тогда
		Если ЗначениеЗаполнено(ДатаНачалаВыгрузкиДокументов) Тогда
			ОписаниеКонтекста = ОписаниеКонтекста + Символы.ПС + НСтр("ru = 'Документы автоматически регистрируются к отправке начиная с %ДатаНачала%;'");
			ОписаниеКонтекста = СтрЗаменить(ОписаниеКонтекста,"%ДатаНачала%", Формат(ДатаНачалаВыгрузкиДокументов, "ДФ=dd.MM.yyyy"));
		Иначе
			ОписаниеКонтекста = ОписаниеКонтекста + Символы.ПС + НСтр("ru = 'Все документы автоматически регистрируются к отправке;'");
		КонецЕсли;
		Если ИспользоватьОтборПоОрганизациям Тогда
			ПредставлениеКоллекции = ИспользуемыеЭлементы("Организации");
			ОписаниеКонтекста = ОписаниеКонтекста + Символы.ПС + НСтр("ru = 'Отправлять документы с отбором по организациям: %ПредставлениеКоллекции%;'");
			ОписаниеКонтекста = СтрЗаменить(ОписаниеКонтекста, "%ПредставлениеКоллекции%", ПредставлениеКоллекции);
		Иначе
			ОписаниеКонтекста = ОписаниеКонтекста + Символы.ПС + НСтр("ru = 'по всем организациям'");
		КонецЕсли;
	ИначеЕсли ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
		ОписаниеКонтекста = ОписаниеКонтекста + Символы.ПС + НСтр("ru = 'Документы не отправляются;'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИспользуемыеЭлементы(ИмяТаблицы)
	
	Возврат СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(
			ЭтаФорма[ИмяТаблицы].Выгрузить(Новый Структура("Использовать", Истина)).ВыгрузитьКолонку("Представление"),
			Символы.ПС
	);
	
КонецФункции
