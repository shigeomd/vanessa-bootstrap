#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ПроцедурыИФункцииБсп

#Область НастройкиПоУмолчанию

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//      ВерсияКорреспондента - Строка - версия корреспондента
//      ИмяФормы             - Строка - имя формы
//
// Возвращаемое значение:
//      Структура - структура отборов на узле плана обмена
// 
Функция НастройкаОтборовНаУзле(ВерсияКорреспондента, ИмяФормы, IDНастройки = "") Экспорт
	
	Если IDНастройки = "ОбменУТБП" Тогда
		Возврат Неопределено;
	Иначе
		СтруктураНастроек = Новый Структура;
		
		СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям", Ложь);
		СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов",    НачалоГода(ТекущаяДата()));
		СтруктураНастроек.Вставить("ВыгружатьАналитикуПоСкладам",     Истина);
		СтруктураНастроек.Вставить("ВерсияФорматаОбмена",             "1.0");
		СтруктураНастроек.Вставить("ПравилаОтправкиСправочников",     "АвтоматическаяСинхронизация");
		СтруктураНастроек.Вставить("ПравилаОтправкиДокументов",       "АвтоматическаяСинхронизация");
		
		СтруктураНастроек.Вставить("РежимВыгрузкиПриНеобходимости",   Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости);
		
		СтруктураТабличнойЧастиОрганизации = Новый Структура("Организация", Новый Массив);
		СтруктураНастроек.Вставить("Организации", СтруктураТабличнойЧастиОрганизации);
		
		Возврат СтруктураНастроек;
	КонецЕсли;
	
КонецФункции

// Возвращает структуру значений по умолчению для узла;
// Структура настроек повторяет состав реквизитов шапки плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//      ВерсияКорреспондента - Строка - версия корреспондента
//      ИмяФормы             - Строка - имя формы
//
// Возвращаемое значение:
//      Структура - структура значений по умолчанию на узле плана обмена
// 
Функция ЗначенияПоУмолчаниюНаУзле(ВерсияКорреспондента, ИмяФормы, IDНастройки = "") Экспорт
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("НоменклатурнаяГруппаПоУмолчанию",                  Неопределено);
	СтруктураНастроек.Вставить("СтатьяПрочихДоходовРасходов_ОприходованиеТоваров", Неопределено);
	СтруктураНастроек.Вставить("СкладПоУмолчанию",                                 Неопределено);
	СтруктураНастроек.Вставить("ПравилаЗагрузкиПодразделений",                     "НеЗагружать");
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена базы корреспондента с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//      ВерсияКорреспондента - Строка - версия корреспондента
//      ИмяФормы             - Строка - имя формы
//
// Возвращаемое значение:
//      Структура - структура отборов на узле плана обмена базы корреспондента
// 
Функция НастройкаОтборовНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы, IDНастройки = "") Экспорт
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает структуру значений по умолчению для узла базы корреспондента;
// Структура настроек повторяет состав реквизитов шапки плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//      ВерсияКорреспондента - Строка - версия корреспондента
//      ИмяФормы             - Строка - имя формы
// 
// Возвращаемое значение:
//      Структура - структура значений по умолчанию на узле плана обмена базы корреспондента
//
Функция ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы, IDНастройки = "") Экспорт
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область ВыводОписаний

// Возвращает представление команды создания нового обмена данными.
//
// Возвращаемое значение:
//  Строка, Неогранич - представление команды, выводимое в пользовательском интерфейсе.
//
// Например:
//	Возврат НСтр("ru = 'Создать обмен в распределенной информационной базе'");
//
Функция ЗаголовокКомандыДляСозданияНовогоОбменаДанными() Экспорт
	
	Возврат НСтр("ru = 'Любая программа с поддержкой универсального формата данных'");
	
КонецФункции

// Возвращает краткую информацию по обмену, выводимую при настройке синхронизации данных.
//
Функция КраткаяИнформацияПоОбмену(IDНастройки = "") Экспорт
	
	Если IDНастройки = "ОбменУТБП" Тогда
		ПоясняющийТекст = НСтр("ru = 'Данная настройка позволит отправлять данные из программы ""1С:Управление торговлей базовая, редакция 11.1"",
		|в программу ""Бухгалтерия предприятия, редакция 3.0"". Синхронизация данных выполняется в одностороннем режиме.'");
	ИначеЕсли IDНастройки = "ОбменУПБП" Тогда
		ПоясняющийТекст = НСтр("ru = 'Данная настройка позволит синхронизировать данные между программами ""Бухгалтерия предприятия, редакция 3.0"",
		|и ""1С:ERP Управление предприятием 2.0"". В синхронизации участвуют документы и нормативно-справочная информация.'");
	Иначе
		ПоясняющийТекст = НСтр("ru = 'Позволяет синхронизировать данные между любыми программами, поддерживающими универсальный формат обмена ""Enterprise Data"".'");
	КонецЕсли;
	
	Возврат ПоясняющийТекст;
	
КонецФункции

// Возвращаемое значение: Строка - Ссылка на подробную информацию по настраиваемой синхронизации,
// в виде гиперссылки или полного пути к форме
Функция ПодробнаяИнформацияПоОбмену(IDНастройки = "") Экспорт
	Возврат "ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Форма.ПодробнаяИнформация";
КонецФункции

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//      НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена,
//                                           полученная при помощи функции НастройкаОтборовНаУзле().
//      ВерсияКорреспондента - Строка - версия корреспондента
//
// Возвращаемое значение:
//     Строка - описание ограничений миграции данных для пользователя
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, IDНастройки = "") Экспорт
	ТекстОписания = "";
	
	Если IDНастройки <> "ОбменУТБП" Тогда
		Если НастройкаОтборовНаУзле.ПравилаОтправкиСправочников = "АвтоматическаяСинхронизация" Тогда
			ТекстОписания = НСтр("ru = 'Вся нормативно-справочная информация регистрируется к отправке'");
		ИначеЕсли НастройкаОтборовНаУзле.ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости" Тогда
			ТекстОписания = НСтр("ru = 'К отправке регистрируется только используемая в документах нормативно-справочная информация'");
		ИначеЕсли НастройкаОтборовНаУзле.ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
			ТекстОписания = НСтр("ru = 'Данные отправляться не будут'");
		КонецЕсли;

		ТекстОписания = ТекстОписания + ";";
		
		Если НастройкаОтборовНаУзле.ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация" Тогда
			
			Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов) Тогда
				ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Документы автоматически регистрируются к отправке начиная с %ДатаНачала%;'");
				ТекстОписания = СтрЗаменить(ТекстОписания,"%ДатаНачала%", Формат(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов, "ДЛФ=D"));
			Иначе
				ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Все документы автоматически регистрируются к отправке;'");
			КонецЕсли;
			
		ИначеЕсли НастройкаОтборовНаУзле.ПравилаОтправкиДокументов = "ИнтерактивнаяСинхронизация" Тогда
			
			ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Пользователь самостоятельно отбирает и регистрирует документы к отправке;'");
			
		ИначеЕсли НастройкаОтборовНаУзле.ПравилаОтправкиДокументов = "НеСинхронизировать"
			И Не НастройкаОтборовНаУзле.ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
			
			ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Документы не отправляются;'");
			
		КонецЕсли;

		Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
			
			КоллекцияЗначений = НастройкаОтборовНаУзле.Организации.Организация;
			ПредставлениеКоллекции = СокращенноеПредставлениеКоллекцииЗначений(КоллекцияЗначений);
			ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Отправлять данные с отбором по организациям: %ПредставлениеКоллекции%;'");
			ТекстОписания = СтрЗаменить(ТекстОписания, "%ПредставлениеКоллекции%", ПредставлениеКоллекции);
			
		Иначе
			
			Если Не НастройкаОтборовНаУзле.ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
				
				ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Отправлять данные по всем организациям'");
				
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		ТекстОписания = НСтр("ru = 'Данные отправляться не будут'");
	КонецЕсли;
	
	Возврат ТекстОписания;
	
КонецФункции

// Возвращает строку описания значений по умолчанию для пользователя;
// Прикладной разработчик на основе установленных значений по умолчанию на узле должен сформировать строку описания 
// удобную для восприятия пользователем.
// 
// Параметры:
//      ЗначенияПоУмолчаниюНаУзле - Структура - структура значений по умолчанию на узле плана обмена,
//                                              полученная при помощи функции ЗначенияПоУмолчаниюНаУзле().
// 
//      ВерсияКорреспондента - Строка - версия корреспондента
//
// Возвращаемое значение:
//      Строка - описание для пользователя значений по умолчанию
//
Функция ОписаниеЗначенийПоУмолчанию(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента, IDНастройки = "") Экспорт
	
	ТекстОписания = НСтр("ru = 'Номенклатурная группа для загружаемой номенклатуры по умолчанию: %Значение%';");
	Если ЗначениеЗаполнено(ЗначенияПоУмолчаниюНаУзле.НоменклатурнаяГруппаПоУмолчанию) Тогда
		ТекстОписания = СтрЗаменить(ТекстОписания, "%Значение%", Строка(ЗначенияПоУмолчаниюНаУзле.НоменклатурнаяГруппаПоУмолчанию));
	Иначе
		ТекстОписания = СтрЗаменить(ТекстОписания, "%Значение%", НСтр("ru = 'не указана'"));
	КонецЕсли;
	
	ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Статья прочих доходов при оприходовании товаров: %Значение%';");
	Если ЗначениеЗаполнено(ЗначенияПоУмолчаниюНаУзле.СтатьяПрочихДоходовРасходов_ОприходованиеТоваров) Тогда
		ТекстОписания = СтрЗаменить(ТекстОписания, "%Значение%", Строка(ЗначенияПоУмолчаниюНаУзле.СтатьяПрочихДоходовРасходов_ОприходованиеТоваров));
	Иначе
		ТекстОписания = СтрЗаменить(ТекстОписания, "%Значение%", НСтр("ru = 'не указана'"));
	КонецЕсли;
	
	ТекстОписания = ТекстОписания + Символы.ПС + НСтр("ru = 'Склад по умолчанию для документов движения ТМЦ: %Значение%';");
	Если ЗначениеЗаполнено(ЗначенияПоУмолчаниюНаУзле.СкладПоУмолчанию) Тогда
		ТекстОписания = СтрЗаменить(ТекстОписания, "%Значение%", Строка(ЗначенияПоУмолчаниюНаУзле.СкладПоУмолчанию));
	Иначе
		ТекстОписания = СтрЗаменить(ТекстОписания, "%Значение%", НСтр("ru = 'не указан'"));
	КонецЕсли;
	
	Возврат ТекстОписания;
	
КонецФункции

// Возвращает строку описания ограничений миграции данных для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных отборов на узле базы корреспондента должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//      НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена базы корреспондента,
//                                           полученная при помощи функции НастройкаОтборовНаУзлеБазыКорреспондента().
//      ВерсияКорреспондента - Строка - версия корреспондента
//
// Возвращаемое значение:
//      Строка - строка описания ограничений миграции данных для пользователя
//
Функция ОписаниеОграниченийПередачиДанныхБазыКорреспондента(НастройкаОтборовНаУзле, ВерсияКорреспондента, IDНастройки = "") Экспорт
	Возврат "";
КонецФункции

// Возвращает строку описания значений по умолчанию для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных значений по умолчанию на узле базы корреспондента должен сформировать строку описания 
// удобную для восприятия пользователем.
// 
// Параметры:
//      ЗначенияПоУмолчаниюНаУзле - Структура - структура значений по умолчанию на узле плана обмена базы корреспондента,
//                                              полученная при помощи функции ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента().
//      ВерсияКорреспондента - Строка - версия корреспондента
//
// Возвращаемое значение:
//      Строка - строка описания для пользователя значений по умолчанию
//
Функция ОписаниеЗначенийПоУмолчаниюБазыКорреспондента(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента, IDНастройки = "") Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область КонстантыИПроверкаПараметровУчета

Функция ПояснениеДляНастройкиПараметровУчета() Экспорт
	Возврат "";
КонецФункции

Функция ПояснениеДляНастройкиПараметровУчетаБазыКорреспондента(ВерсияКорреспондента) Экспорт
	Возврат "";
КонецФункции

Процедура ОбработчикПроверкиПараметровУчета(Отказ, Получатель, Сообщение) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПереопределяемаяНастройкаДополненияВыгрузки

// Предназначена для настройки вариантов интерактивной настройки выгрузки по сценарию узла.
// Для настройки необходимо установить значения свойств параметров в необходимые значения.
//
// Параметры:
//     Получатель - ПланОбменаСсылка - Узел, для которого производится настройка
//     Параметры  - Структура        - Параметры для изменения. Содержит поля:
//
//         ВариантБезДополнения - Структура     - настройки типового варианта "Не добавлять".
//                                                Содержит поля:
//             Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//             Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 1.
//             Заголовок     - Строка - позволяет переопределить название типового варианта.
//             Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//
//         ВариантВсеДокументы - Структура      - настройки типового варианта "Добавить все документы за период".
//                                                Содержит поля:
//             Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//             Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 2.
//             Заголовок     - Строка - позволяет переопределить название типового варианта.
//             Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//
//         ВариантПроизвольныйОтбор - Структура - настройки типового варианта "Добавить данные с произвольным отбором".
//                                                Содержит поля:
//             Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//             Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 3.
//             Заголовок     - Строка - позволяет переопределить название типового варианта.
//             Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//
//         ВариантДополнительно - Структура     - настройки дополнительного варианта по сценарию узла.
//                                                Содержит поля:
//             Использование            - Булево            - флаг разрешения использования варианта. По умолчанию Ложь.
//             Порядок                  - Число             - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 4.
//             Заголовок                - Строка            - название варианта для отображения на форме.
//             ИмяФормыОтбора           - Cтрока            - Имя формы, вызываемой для редактирования настроек.
//             ЗаголовокКомандыФормы    - Cтрока            - Заголовок для отрисовки на форме команды открытия формы настроек.
//             ИспользоватьПериодОтбора - Булево            - флаг того, что необходим общий отбор по периоду. По умолчанию Ложь.
//             ПериодОтбора             - СтандартныйПериод - значение периода общего отбора, предлагаемого по умолчанию.
//
//             Отбор                    - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию узла.
//                                                            Содержит колонки:
//                 ПолноеИмяМетаданных - Строка                - полное имя метаданных регистрируемого объекта, отбор которого описывает строка.
//                                                               Например "Документ._ДемоПоступлениеТоваров". Можно  использовать специальные 
//                                                               значения "ВсеДокументы" и "ВсеСправочники" для отбора соответственно всех 
//                                                               документов и всех справочников, регистрирующихся на узле Получатель.
//                 ВыборПериода        - Булево                - флаг того, что данная строка описывает отбор с общим периодом.
//                 Период              - СтандартныйПериод     - значение периода общего отбора для метаданных строки, предлагаемого по умолчанию.
//                 Отбор               - ОтборКомпоновкиДанных - отбор по умолчанию. Поля отбора формируются в соответствии с общим правилами
//                                                               формирования полей компоновки. Например, для указания отбора по реквизиту
//                                                               документа "Организация", необходимо использовать поле "Ссылка.Организация"
Процедура НастроитьИнтерактивнуюВыгрузку(Получатель, Параметры) Экспорт
	
	Если Получатель.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать 
		И Получатель.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать Тогда
		
		Параметры.ВариантВсеДокументы.Использование      = Ложь;
		Параметры.ВариантБезДополнения.Использование     = Ложь;
		Параметры.ВариантПроизвольныйОтбор.Использование = Ложь;
		Параметры.ВариантДополнительно.Использование     = Ложь;
		
	Иначе
		
		//Отключаем вариант "ВариантВсеДокументы"
		
		Параметры.ВариантВсеДокументы.Использование      = Ложь;
		
		//Настраиваем вариант "Без дополнения" 
		Параметры.ВариантБезДополнения.Использование = Истина;
		Параметры.ВариантБезДополнения.Порядок       = 3;
		Параметры.ВариантБезДополнения.Заголовок     = НСтр("ru = 'Не добавлять документы к отправке'") 
			+ Символы.ПС 
			+ "Отправлять только нормативно-справочную информацию, измененную с момента последней отправки.";
		
		//Настраиваем вариант "Произвольный отбор" 
		Параметры.ВариантПроизвольныйОтбор.Использование = Истина;
		Параметры.ВариантПроизвольныйОтбор.Порядок       = 2;
		
		Если Получатель.ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
			Параметры.ВариантПроизвольныйОтбор.Заголовок = НСтр("ru = 'Добавить справочники'");
		Иначе
			Параметры.ВариантПроизвольныйОтбор.Заголовок = НСтр("ru = 'Добавить произвольные справочники и документы'");
		КонецЕсли;
		
		Если Не Получатель.ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
			// Вычисляем и устанавливаем параметры сценария
			ПараметрыПоУмолчанию = ПараметрыВыгрузкиПоУмолчанию(Получатель);
			
			// Настраиваем вариант "Дополнительно" по сценарию узла
			Параметры.ВариантДополнительно.Использование            = Истина;
			Параметры.ВариантДополнительно.Порядок                  = 1;
			Параметры.ВариантДополнительно.Заголовок                = НСтр("ru='Отправить все документы'");
			Параметры.ВариантДополнительно.ИмяФормыОтбора           = "ПланОбмена.ОбменУправлениеТорговлейБухгалтерияПредприятия30.Форма.НастройкаВыгрузки";
			Параметры.ВариантДополнительно.ЗаголовокКомандыФормы    = НСтр("ru='Выбрать организации для отбора'");
			Параметры.ВариантДополнительно.ИспользоватьПериодОтбора = Истина;
			Параметры.ВариантДополнительно.ПериодОтбора             = ПараметрыПоУмолчанию.Период;
			//Параметры.ВариантДополнительно.ПредставлениеОтбора      = ПараметрыПоУмолчанию.ПредставлениеОтбора;
			
			// Добавляем строка настройки отбора 
			СтрокаОтбора = Параметры.ВариантДополнительно.Отбор.Добавить();
			СтрокаОтбора.ПолноеИмяМетаданных = "ВсеДокументы";
			СтрокаОтбора.ВыборПериода = Истина;
			СтрокаОтбора.Период       = ПараметрыПоУмолчанию.Период;
			СтрокаОтбора.Отбор        = ПараметрыПоУмолчанию.Отбор;
		Иначе
			Параметры.ВариантДополнительно.Использование            = Ложь;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

// Возвращает представление отбора для варианта дополнения выгрузки по сценарию узла.
// См. описание "ВариантДополнительно" в процедуре "НастроитьИнтерактивнуюВыгрузку"
//
// Параметры:
//     Получатель - ПланОбменаСсылка - Узел, для которого определяется представление отбора
//     Параметры  - Структура        - Характеристики отбора. Содержит поля:
//         ИспользоватьПериодОтбора - Булево            - флаг того, что необходимо использовать общий отбор по периоду.
//         ПериодОтбора             - СтандартныйПериод - значение периода общего отбора.
//         Отбор                    - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию узла.
//                                                        Содержит колонки:
//                 ПолноеИмяМетаданных - Строка                - полное имя метаданных регистрируемого объекта, отбор которого описывает строка.
//                                                               Например "Документ._ДемоПоступлениеТоваров". Могут быть использованы специальные 
//                                                               значения "ВсеДокументы" и "ВсеСправочники" для отбора соответственно всех 
//                                                               документов и всех справочников, регистрирующихся на узле Получатель.
//                 ВыборПериода        - Булево                - флаг того, что данная строка описывает отбор с общим периодом.
//                 Период              - СтандартныйПериод     - значение периода общего отбора для метаданных строки.
//                 Отбор               - ОтборКомпоновкиДанных - поля отбора. Поля отбора формируются в соответствии с общим правилами
//                                                               формирования полей компоновки. Например, для указания отбора по реквизиту
//                                                               документа "Организация", будет использовано поле "Ссылка.Организация"
//
// Возвращаемое значение: 
//     Строка - описание отбора
//
Функция ПредставлениеОтбораИнтерактивнойВыгрузки(Получатель, Параметры) Экспорт
	
	Если Параметры.ИспользоватьПериодОтбора Тогда
		Если ЗначениеЗаполнено(Параметры.ПериодОтбора) Тогда
			ОписаниеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='за период: %1'"), НРег(Параметры.ПериодОтбора));
		Иначе
			ДатаНачалаВыгрузки = Получатель.ДатаНачалаВыгрузкиДокументов;
			Если ЗначениеЗаполнено(ДатаНачалаВыгрузки) Тогда
				ОписаниеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='начиная с даты начала отправки документов: %1'"), Формат(ДатаНачалаВыгрузки, "ДЛФ=DD"));
			Иначе
				ОписаниеПериода = НСтр("ru='за весь период учета'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		ОписаниеПериода = "";
	КонецЕсли;
	
	СписокОрганизаций = ОрганизацииОтбораИнтерактивнойВыгрузки(Параметры.Отбор);
	
	Если СписокОрганизаций.Количество()=0 Тогда
		ОписаниеОтбораОрганизации = НСтр("ru='по всем организациям'");
	Иначе
		ОписаниеОтбораОрганизации = "";
		Для Каждого Элемент Из СписокОрганизаций Цикл
			ОписаниеОтбораОрганизации = ОписаниеОтбораОрганизации+ ", " + Элемент.Представление;
		КонецЦикла;
		ОписаниеОтбораОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='с отбором по организациям: %1'"), СокрЛП(Сред(ОписаниеОтбораОрганизации, 2)));
	КонецЕсли;

	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Будут отправлены все документы %1,
		         |%2'"),
		ОписаниеПериода,  ОписаниеОтбораОрганизации
	);
	
КонецФункции

// Расчет параметров выгрузки по умолчанию.
//
// Параметры:
//     Получатель - ПланОбменаСсылка - Узел, для которого производитсят настройка
//
// Возвращаемое значение - Структура - содержит поля:
//     ПредставлениеОтбора - Строка - текстовое описание отбора по умолчанию 
//     Период              - СтандартныйПериод     - значение периода общего отбора по умолчанию
//     Отбор               - ОтборКомпоновкиДанных - отбор
//
Функция ПараметрыВыгрузкиПоУмолчанию(Получатель)
	
	Результат = Новый Структура;
	
	// Период по умолчанию
	Результат.Вставить("Период", Новый СтандартныйПериод);
	Результат.Период.Вариант = ВариантСтандартногоПериода.ПрошлыйМесяц;
	
	// Отбор по умолчанию и его представление
	КомпоновщикОтбора = Новый КомпоновщикНастроекКомпоновкиДанных;
	Результат.Вставить("Отбор", КомпоновщикОтбора.Настройки.Отбор);
	
	// Общее представление, период не включаем, так как в этом сценарии поле периода будет редактироваться отдельно
	Результат.Вставить( "ПредставлениеОтбора", 
	                    СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	                    НСтр("ru='Будут отправлены все документы за %1'"),
	                    НРег(Строка(Результат.Период.Вариант))));
	
	Возврат Результат;
КонецФункции

// Возвращает список организаций по таблице отбора (см "ПредставлениеОтбораИнтерактивнойВыгрузки")
// Также используется из демонстрационной формы "НастройкаВыгрузки" этого плана обмена.
//
// Параметры:
//     ТаблицаОтбора - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию узла. Содержит колонки:
//         ПолноеИмяМетаданных - Строка
//         ВыборПериода        - Булево
//         Период              - СтандартныйПериод
//         Отбор               - ОтборКомпоновкиДанных
//
// Возвращаемое значение:
//     СписокЗначений - значение - ссылка на организацию, представление - наименование
//
Функция ОрганизацииОтбораИнтерактивнойВыгрузки(Знач ТаблицаОтбора) Экспорт
	
	Результат = Новый СписокЗначений;
	
	Если ТаблицаОтбора.Количество()=0 Или ТаблицаОтбора[0].Отбор.Элементы.Количество()=0 Тогда
		// Нет данных отбора
		Возврат Результат;
	КонецЕсли;
		
	// Мы знаем состав отбора, так как помещали туда сами - или из "НастроитьИнтерактивнуюВыгрузку"
	// или как результат редактирования в форме
	
	СтрокаДанных = ТаблицаОтбора[0].Отбор.Элементы[0];
	Отобранные   = СтрокаДанных.ПравоеЗначение;
	ТипКоллекции = ТипЗнч(Отобранные);
	
	Если ТипКоллекции=Тип("СписокЗначений") Тогда
		Для Каждого Элемент Из Отобранные Цикл
			ДобавитьСписокОрганизций(Результат, Элемент.Значение);
		КонецЦикла;
		
	ИначеЕсли ТипКоллекции=Тип("Массив") Тогда
		ДобавитьСписокОрганизций(Результат, Отобранные);
		 
	ИначеЕсли ТипКоллекции=Тип("СправочникСсылка.Организации") Тогда
		Если Результат.НайтиПоЗначению(Отобранные)=Неопределено Тогда
			Результат.Добавить(Отобранные, Отобранные.Наименование);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Добавляет в список органинизаций коллекцию
//
// Параметры:
//     Список      - СписокЗначений - дополняемый список
//     Организации - коллекция организаций
// 
Процедура ДобавитьСписокОрганизций(Список, Знач Организации)
	
	Для Каждого Организация Из Организации Цикл
		
		Если ТипЗнч(Организация)=Тип("Массив") Тогда
			ДобавитьСписокОрганизций(Список, Организация);
			Продолжить;
		КонецЕсли;
		
		Если Список.НайтиПоЗначению(Организация)=Неопределено Тогда
			Список.Добавить(Организация, Организация.Наименование);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Позволяет переопределить настройки плана обмена, заданные по умолчанию.
// Значения настроек по умолчанию см. в ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию
// 
// Параметры:
// Настройки - Структура - Сеодержит настройки по умолчанию
//
Процедура ОпределитьНастройки(Настройки, IDНастройки = "") Экспорт
	
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.ПутьКФайлуКомплектаПравилНаПользовательскомСайте = "https://users.v8.1c.ru/distribution/project/EnterpriseERP20";
	Настройки.ПутьКФайлуКомплектаПравилВКаталогеШаблонов = "\1c\enterprise";
	
	Если IDНастройки = "ОбменУТБП" Тогда
		Настройки.Вставить("ЗаголовокКомандыДляСозданияНовогоОбменаДанными", НСтр("ru = '1С:Управление торговлей базовая, редакция 11.1'"));
		Настройки.Вставить("ЗаголовокПомощникаСозданияОбмена",               НСтр("ru = 'Настройка синхронизации с программой ""1С:Управление торговлей базовая, редакция 11.1""'"));
		Настройки.Вставить("ЗаголовокУзлаПланаОбмена",                       НСтр("ru = 'Синхронизация с программой ""1С:Управление торговлей базовая, редакция 11.1""'"));
		Настройки.Вставить("НаименованиеКонфигурацииКорреспондента",         НСтр("ru = '1С:Управление торговлей базовая, редакция 11.1'"));
	ИначеЕсли IDНастройки = "ОбменУПБП" Тогда
		Настройки.Вставить("ЗаголовокКомандыДляСозданияНовогоОбменаДанными", НСтр("ru = '1С:ERP Управление предприятием 2.0'"));
		Настройки.Вставить("ЗаголовокПомощникаСозданияОбмена",               НСтр("ru = 'Настройка синхронизации с программой ""1С:ERP Управление предприятием 2.0""'"));
		Настройки.Вставить("ЗаголовокУзлаПланаОбмена",                       НСтр("ru = 'Синхронизация с программой ""1С:ERP Управление предприятием 2.0""'"));
		Настройки.Вставить("НаименованиеКонфигурацииКорреспондента",         НСтр("ru = '1С:ERP Управление предприятием 2.0'"));
	ИначеЕсли IDНастройки = "ОбменУниверсальный" Тогда
		Настройки.Вставить("ЗаголовокКомандыДляСозданияНовогоОбменаДанными", НСтр("ru = 'Другая программа'"));
		Настройки.Вставить("ЗаголовокПомощникаСозданияОбмена",               НСтр("ru = 'Настройка синхронизации данных через универсальный формат'"));
		Настройки.Вставить("ЗаголовокУзлаПланаОбмена",                       НСтр("ru = 'Синхронизация данных через универсальный формат'"));
		Настройки.Вставить("НаименованиеКонфигурацииКорреспондента",         НСтр("ru = 'Другая программа'"));
	Иначе
		Настройки.Вставить("НаименованиеКонфигурацииКорреспондента",         НСтр("ru = 'Через универсальный формат обмена'"));
	КонецЕсли;
	
	Настройки.ВариантыНастроекОбмена = МассивДоступныхВариантовНастроекОбмена();
	Настройки.Вставить("ЭтоПланОбменаXDTO", Истина);
	
КонецПроцедуры

// Возвращает имя файла настроек по умолчанию;
// В этот файл будут выгружены настройки обмена для приемника;
// Это значение должно быть одинаковым в плане обмена источника и приемника.
// 
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  Строка, 255 - имя файла по умолчанию для выгрузки настроек обмена данными
//
Функция ИмяФайлаНастроекДляПриемника() Экспорт
	
	Возврат НСтр("ru = 'Синхронизация данных через универсальный формат'");
	
КонецФункции

// Возвращает пользовательскую форму для создания начального образа базы.
// Эта форма будет открыта после завершения настройки обмена с помощью помощника.
// Для планов обмена не РИБ функция возвращает пустую строку
//
// Возвращаемое значение:
//  Строка, Неогранич - имя формы
//
// Например:
//	Возврат "ПланОбмена._ДемоРаспределеннаяИнформационнаяБаза.Форма.ФормаСозданияНачальногоОбраза";
//
Функция ИмяФормыСозданияНачальногоОбраза() Экспорт
	
	Возврат "";
	
КонецФункции

// Определяет, будет ли использоваться помощник для создания новых узлов плана обмена.
//
// Возвращаемое значение:
//  Булево - признак использования помощника.
//
Функция ИспользоватьПомощникСозданияОбменаДанными() Экспорт
	
	Возврат Истина;
	
КонецФункции

//Возвращает возможность использование данного плана обмена в модели сервсиа
 //
Функция ПланОбменаИспользуетсяВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает признак того, что план обмена поддерживает обмен данными с корреспондентом, работающим в модели сервиса.
// Если признак установлен, то становится возможным создать обмен данными когда эта информационная база
// работает в локальном режиме, а корреспондент в модели сервиса.
//
Функция КорреспондентВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает массив используемых транспортов сообщений для этого плана обмена
//
// 1. Например, если план обмена поддерживает только два транспорта сообщений FILE и FTP,
// то тело функции следует определить следующим образом:
//
//	Результат = Новый Массив;
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
//	Возврат Результат;
//
// 2. Например, если план обмена поддерживает все транспорты сообщений, определенных в конфигурации,
// то тело функции следует определить следующим образом:
//
//	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
//
// Возвращаемое значение:
//  Массив - массив содержит значения перечисления ВидыТранспортаСообщенийОбмена
//
Функция ИспользуемыеТранспортыСообщенийОбмена() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.EMAIL);
	Возврат Результат;
	
КонецФункции

//Возвращает режим запуска, в случае интерактивного инициирования синхронизации
//Возвращаемые значения АвтоматическаяСинхронизация Или ИнтерактивнаяСинхронизация
//На основании этих значений запускается либо помощник интерактивного обмена, либо автообмен
Функция РежимЗапускаСинхронизацииДанных(УзелИнформационнойБазы) Экспорт

	Возврат "АвтоматическаяСинхронизация";
	
КонецФункции

//Возвращает сценарий работы помощника интерактивного сопостовления
//НеОтправлять, ИнтерактивнаяСинхронизацияДокументов, ИнтерактивнаяСинхронизацияСправочников либо пустую строку
Функция ИнициализироватьСценарийРаботыПомощникаИнтерактивногоОбмена(УзелИнформационнойБазы) Экспорт
	
	Если УзелИнформационнойБазы.ПравилаОтправкиДокументов = "ИнтерактивнаяСинхронизация" Тогда
		
		Возврат "ИнтерактивнаяСинхронизацияДокументов";
		
	ИначеЕсли УзелИнформационнойБазы.ПравилаОтправкиДокументов = "НеСинхронизировать"
		И УзелИнформационнойБазы.ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
		
		Возврат "НеОтправлять";
		
	Иначе
		
		Возврат "ИнтерактивнаяСинхронизацияСправочников";
		
	КонецЕсли;
КонецФункции

Функция ОбщиеДанныеУзлов(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

// Возвращает сокращенное строковое представление коллекции значений
// 
// Параметры:
//  Коллекция 						- массив или список значений.
//  МаксимальноеКоличествоЭлементов - число, максимальное количество элементов включаемое в представление.
//
// Возвращаемое значение:
//  Строка.
//
Функция СокращенноеПредставлениеКоллекцииЗначений(Коллекция, МаксимальноеКоличествоЭлементов = 2)
	
	СтрокаПредставления = "";
	
	КоличествоЗначений			 = Коллекция.Количество();
	КоличествоВыводимыхЭлементов = Мин(КоличествоЗначений, МаксимальноеКоличествоЭлементов);
	
	Если КоличествоВыводимыхЭлементов = 0 Тогда
		
		Возврат "";
		
	Иначе
		
		Для НомерЗначения = 1 По КоличествоВыводимыхЭлементов Цикл
			
			СтрокаПредставления = СтрокаПредставления + Коллекция.Получить(НомерЗначения - 1) + ", ";	
			
		КонецЦикла;
		
		СтрокаПредставления = Лев(СтрокаПредставления, СтрДлина(СтрокаПредставления) - 2);
		Если КоличествоЗначений > КоличествоВыводимыхЭлементов Тогда
			СтрокаПредставления = СтрокаПредставления + ", ... ";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрокаПредставления;
	
КонецФункции

Функция ПолучитьПредставлениеКонфигурацииКорреспондента(КраткоеИмяКонфигурации) Экспорт
	КраткоеИмяКонфигурации = СокрЛП(КраткоеИмяКонфигурации);
	Если КраткоеИмяКонфигурации = "БухгалтерияПредприятия" Тогда
		Возврат НСтр("ru = 'Бухгалтерия предприятия, ред.3.0'");
	ИначеЕсли КраткоеИмяКонфигурации = "УправлениеТорговлей" Тогда
		Возврат НСтр("ru = 'Управление торговлей, ред.11'");
	ИначеЕсли КраткоеИмяКонфигурации = "Розница" Тогда
		Возврат НСтр("ru = 'Розница, ред.2.0'");
	ИначеЕсли КраткоеИмяКонфигурации = "УправлениеНебольшойФирмой" Тогда
		Возврат НСтр("ru = 'Управление небольшой фирмой, ред.1.4'");
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

Функция МассивДоступныхВариантовНастроекОбмена()
	
	МассивНастроек = Новый Массив();
	
	МассивНастроек.Добавить("ОбменУТБП");
	МассивНастроек.Добавить("ОбменУПБП");
	МассивНастроек.Добавить("ОбменУниверсальный");
	
	Возврат МассивНастроек;
	
КонецФункции

#КонецОбласти

#Область ОбменЧерезФормат

Функция ФорматОбмена() Экспорт
	
	Возврат "http://v8.1c.ru/edi/edi_stnd/EnterpriseData";
	
КонецФункции

Процедура ПолучитьВерсииФорматаОбмена(ВерсииФормата) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	| СинхронизацияДанныхЧерезУниверсальныйФормат.ПутьКМенеджеруОбмена
	|ИЗ
	| ПланОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат КАК СинхронизацияДанныхЧерезУниверсальныйФормат
	|ГДЕ
	| СинхронизацияДанныхЧерезУниверсальныйФормат.ПутьКМенеджеруОбмена <> """"");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВерсииФормата.Вставить("1.0.beta", ВнешниеОбработки.Создать(Выборка.ПутьКМенеджеруОбмена));
		ВерсииФормата.Вставить("1.0", ВнешниеОбработки.Создать(Выборка.ПутьКМенеджеруОбмена));
	Иначе
		ВерсииФормата.Вставить("1.0.beta", МенеджерОбменаЧерезУниверсальныйФормат);
		ВерсииФормата.Вставить("1.0", МенеджерОбменаЧерезУниверсальныйФормат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли