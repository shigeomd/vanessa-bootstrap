<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="">2.01</ВерсияФормата>
	<Ид>a60eecf1-19f6-4cd7-9a33-8a5d3c5e10d6    </Ид>
	<Наименование>Упрощенная система налогообложения, ред. 1.3 --&gt; Бухгалтерия предприятия КОРП</Наименование>
	<ДатаВремяСоздания>2015-03-16T11:57:05</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="7.7" ВерсияКонфигурации="7.70.235" СинонимКонфигурации="">Упрощенная система налогообложения, ред. 1.3</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="3.0.39.32" СинонимКонфигурации="Бухгалтерия предприятия КОРП, редакция 3.0">БухгалтерияПредприятияКОРП</Приемник>
	<ПослеЗагрузкиПравилОбмена>//настройки выгрузки документов
НС = 0;
Если ТаблицаНастройкиПараметров.НайтиЗначение("_ВыгружатьНеПроведенные",НС,"Имя") = 1 Тогда
	ТаблицаНастройкиПараметров.УстановитьЗначение(НС,"Значение",0)
КонецЕсли;
НС = 0;
Если ТаблицаНастройкиПараметров.НайтиЗначение("_ВыгружатьПроведенные",НС,"Имя") = 1 Тогда
	ТаблицаНастройкиПараметров.УстановитьЗначение(НС,"Значение",1)
КонецЕсли;
НС = 0;
Если ТаблицаНастройкиПараметров.НайтиЗначение("_ВыгружатьУдаленные",НС,"Имя") = 1 Тогда
	ТаблицаНастройкиПараметров.УстановитьЗначение(НС,"Значение",0)
КонецЕсли;
НС = 0;
Если ТаблицаНастройкиПараметров.НайтиЗначение("ПрефиксОрганизации",НС,"Имя") = 1 Тогда
	Если СокрЛП(Метаданные.Константа("ПрефиксДляВыгрузкиВ1СБухгалтерию8").ПолныйИдентификатор())&lt;&gt;"" Тогда
		ТаблицаНастройкиПараметров.УстановитьЗначение(НС,"Значение",Константа.ПрефиксДляВыгрузкиВ1СБухгалтерию8);
	КонецЕсли;
КонецЕсли;</ПослеЗагрузкиПравилОбмена>
	<ПередВыгрузкойДанных>Если ПустоеЗначение(ДатаНачала) = 1 Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Не указана дата начала периода выгрузки!");
	Иначе   
		Сообщить("Не указана дата начала периода выгрузки!");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;
Если ДатаНачала &gt; ДатаОкончания Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
	Иначе
		Сообщить("Неправильно задан период выгрузки!"+РазделительСтрок+
		"Дата начала больше даты окончания периода.");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;
Если ДатаОкончания &gt; КонецРассчитанногоПериодаБИ() Тогда
	Если Форма.МодальныйРежим() = 0 Тогда
		Предупреждение("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
	Иначе           
		Сообщить("За выбранный период итоги не рассчитаны!"+РазделительСтрок+
		"Расчет итогов выполняется в режиме"+РазделительСтрок+
		"""Операции - Управление бухгалтерскими итогами"".");
	КонецЕсли;
	Отказ = 1;
КонецЕсли;

Если СокрЛП(Метаданные.Константа("ПрефиксДляВыгрузкиВ1СБухгалтерию8").ПолныйИдентификатор())&lt;&gt;"" Тогда
	Константа.ПрефиксДляВыгрузкиВ1СБухгалтерию8 = Параметры.ПрефиксОрганизации;
КонецЕсли;

Параметры.ДатаВводаОстатков = ДатаНачала;
Параметры.ДатаКонцаПериодаВыгрузки = ДатаОкончания;

// Установка параметров, полученных программно
Если Параметры.П_ПараметрыПомощника = 1 Тогда
	
	РазмерСписка = ПравилаВыгрузкиСписок.РазмерСписка();
	Для Ном = 1 По РазмерСписка Цикл	
		ЗначениеСписка = ПравилаВыгрузкиСписок.ПолучитьЗначение(Ном);
		
		Если Лев(ЗначениеСписка,4) = "спр_" Тогда
			ПравилаВыгрузкиСписок.Пометка(Ном, Параметры.П_ВыгружатьСправочники);
		ИначеЕсли Лев(ЗначениеСписка,4) = "док_" Тогда
			ПравилаВыгрузкиСписок.Пометка(Ном, Параметры.П_ВыгружатьДокументы);
		ИначеЕсли Лев(ЗначениеСписка,4) = "ост_" Тогда
			ПравилаВыгрузкиСписок.Пометка(Ном, Параметры.П_ВыгружатьОстатки);
		ИначеЕсли Лев(ЗначениеСписка,3) = "об_" Тогда
			ПравилаВыгрузкиСписок.Пометка(Ном, Параметры.П_ВыгружатьОбороты);
		ИначеЕсли Лев(ЗначениеСписка,2) = "д_" Тогда
			ПравилаВыгрузкиСписок.Пометка(Ном, Параметры.П_ВыгружатьДокументы);
		КонецЕсли;
				
	КонецЦикла;
	
Иначе
	
	Параметры.П_ВыгружатьСправочники = 0;
	Параметры.П_ВыгружатьОстатки     = 0;
	Параметры.П_ВыгружатьОбороты     = 0;
	Параметры.П_ВыгружатьДокументы   = 0;	
	
	РазмерСписка = ПравилаВыгрузкиСписок.РазмерСписка();
	Для Ном = 1 По РазмерСписка Цикл	
		ЗначениеСписка = ПравилаВыгрузкиСписок.ПолучитьЗначение(Ном);
		ПометкаСписка  = ПравилаВыгрузкиСписок.Пометка(Ном);
		
		Если Лев(ЗначениеСписка,3) = "об_" Тогда
			Если (Параметры.П_ВыгружатьОбороты = 0) И (ПометкаСписка = 1) Тогда
				Параметры.П_ВыгружатьОбороты = 1;
			КонецЕсли;
		КонецЕсли;
		
		Если Лев(ЗначениеСписка,4) = "док_" Тогда
			Если (Параметры.П_ВыгружатьДокументы = 0) И (ПометкаСписка = 1) Тогда
				Параметры.П_ВыгружатьДокументы = 1;
			КонецЕсли;
		КонецЕсли;
		
		Если Лев(ЗначениеСписка,4) = "спр_" Тогда
			Если (Параметры.П_ВыгружатьСправочники = 0) И (ПометкаСписка = 1) Тогда
				Параметры.П_ВыгружатьСправочники = 1;
			КонецЕсли;
		КонецЕсли;
		
		Если Лев(ЗначениеСписка,4) = "ост_" Тогда
			Если (Параметры.П_ВыгружатьОстатки = 0) И (ПометкаСписка = 1) Тогда
				Параметры.П_ВыгружатьОстатки = 1;
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;
	
КонецЕсли;

// Промерка параметров выгрузки оборотов
Если Параметры.П_ВыгружатьОбороты = 1 Тогда
	Если ПустоеЗначение(Параметры.ГраницаВыгрузкиОборотов) = 1 Тогда
		Если Форма.МодальныйРежим() = 0 Тогда
			Предупреждение("Не указана граница периода выгрузки оборотов!");
		Иначе   
			Сообщить("Не указана граница периода выгрузки оборотов!");
		КонецЕсли;
		Отказ = 1;
	Иначе
		Если Параметры.ГраницаВыгрузкиОборотов &lt; ДатаНачала Тогда
			Если Форма.МодальныйРежим() = 0 Тогда
				Предупреждение("Неправильно задан период выгрузки!"+РазделительСтрок+
				"Граница периода выгрузки оборотов меньше даты начала периода.");
			Иначе
				Сообщить("Неправильно задан период выгрузки!"+РазделительСтрок+
				"Граница периода выгрузки оборотов меньше даты начала периода.");
			КонецЕсли;
			Отказ = 1;
		КонецЕсли;
		Если Параметры.ГраницаВыгрузкиОборотов &gt; ДатаОкончания Тогда
			Если Форма.МодальныйРежим() = 0 Тогда
				Предупреждение("Неправильно задан период выгрузки!"+РазделительСтрок+
				"Граница периода выгрузки оборотов больше даты окончания периода.");
			Иначе           
				Сообщить("Неправильно задан период выгрузки!"+РазделительСтрок+
				"Граница периода выгрузки оборотов больше даты окончания периода.");
			КонецЕсли;
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

// Установка дат выгрузки оборотов и документов
Если Параметры.П_ВыгружатьОбороты = 1 Тогда
	
	Параметры.ДатаНачалаВыгрузкиОборотов    = ДатаНачала;
	Параметры.ДатаОкончанияВыгрузкиОборотов = Параметры.ГраницаВыгрузкиОборотов;
	
	//****************
	Параметры.ДатаНачалаВыгрузкиДокументов = Параметры.ГраницаВыгрузкиОборотов + 1;
	//****************
	Параметры.ДатаОкончанияВыгрузкиДокументов = ДатаОкончания;
	
Иначе
	
	Параметры.ДатаНачалаВыгрузкиДокументов = ДатаНачала;
	Параметры.ДатаОкончанияВыгрузкиДокументов = ДатаОкончания;
	
КонецЕсли;

Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 0;
                                                   
Параметры.СчетВводаОстатков = СчетПоКоду("00");
Параметры.ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаВводаОстатков);

Параметры.СписокРаботников = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокРаботников.НоваяКолонка("ФизЛицо"); // общее во всех талицах

Параметры.ПодразделениеОрганизации = "Основное подразделение";

Параметры.ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КодВычета");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("ПериодЗавершения", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛ.НоваяКолонка("КоличествоДетей", "Число");

Параметры.ВычетыСотрудниковпоНДФЛЛичный = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Физлицо");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("КодВычетаЛичный");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("Период", "Дата");
Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяКолонка("ПериодЗавершения", "Дата");

Параметры.ДлинаКода = 9; // стандартная длина кодов справочников в 8.2

Параметры.СписокСчетовСкладскогоУчета = "10.1,10.2,10.3,43,41.1,41.2,41.3";
Параметры.СписокСчетовРасчетов = "";

Параметры.ИмяТаблицы = "";

Параметры.СписокОС = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокОС.НоваяКолонка("ОсновноеСредство");
Параметры.СписокОС.НоваяКолонка("Контрагент");
Параметры.СписокОС.НоваяКолонка("ТекущаяСтоимостьБУНач", "Число");
Параметры.СписокОС.НоваяКолонка("ТекущаяСтоимостьБУКон", "Число");
Параметры.СписокОС.НоваяКолонка("ТекущаяСтоимостьНУ", "Число");
Параметры.СписокОС.НоваяКолонка("НакопленнаяАмортизацияБУНач", "Число");
Параметры.СписокОС.НоваяКолонка("НакопленнаяАмортизацияБУКон", "Число");
Параметры.СписокОС.НоваяКолонка("НакопленнаяАмортизацияНУ", "Число");
Параметры.СписокОС.НоваяКолонка("СчетУчетаБУ");
Параметры.СписокОС.НоваяКолонка("СчетУчетаНУ");
Параметры.СписокОС.НоваяКолонка("СчетАмортизацииБУ");
Параметры.СписокОС.НоваяКолонка("СчетАмортизацииНУ");
Параметры.СписокОС.НоваяКолонка("СтоимостьДо2002НУ", "Число");
Параметры.СписокОС.НоваяКолонка("АмортизацияДо2002НУ", "Число");

Параметры.СписокОСКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокОС.Выгрузить(Параметры.СписокОСКон);

Параметры.СписокНМА = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокНМА.НоваяКолонка("НМА");
Параметры.СписокНМА.НоваяКолонка("СчетУчетаНМА");
Параметры.СписокНМА.НоваяКолонка("ТекущаяСтоимостьБУНач", "Число");
Параметры.СписокНМА.НоваяКолонка("ТекущаяСтоимостьБУКон", "Число");
Параметры.СписокНМА.НоваяКолонка("ТекущаяСтоимостьНУ", "Число");
Параметры.СписокНМА.НоваяКолонка("НакопленнаяАмортизацияБУНач", "Число");
Параметры.СписокНМА.НоваяКолонка("НакопленнаяАмортизацияБУКон", "Число");
Параметры.СписокНМА.НоваяКолонка("НакопленнаяАмортизацияНУ", "Число");
Параметры.СписокНМА.НоваяКолонка("СчетУчетаБУ");
Параметры.СписокНМА.НоваяКолонка("СчетУчетаНУ");
Параметры.СписокНМА.НоваяКолонка("СчетАмортизацииБУ");
Параметры.СписокНМА.НоваяКолонка("СчетАмортизацииНУ");
Параметры.СписокНМА.НоваяКолонка("СтоимостьДо2002НУ", "Число");
Параметры.СписокНМА.НоваяКолонка("АмортизацияДо2002НУ", "Число");

Параметры.СписокНМАКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.СписокНМА.Выгрузить(Параметры.СписокНМАКон);

СпрВалюты = СоздатьОбъект("Справочник.Валюты");
Если (СпрВалюты.НайтиПоКоду("810") = 1)	Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
ИначеЕсли (СпрВалюты.НайтиПоКоду("643") = 1) Тогда
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
Иначе
	СпрВалюты.Новый();
	СпрВалюты.Код = "643";
	СпрВалюты.Наименование = "руб.";
	СпрВалюты.ПолнНаименование = "Российский рубль";
	СпрВалюты.Записать();
	СпрВалюты.Курс.Установить('01.01.1980', 1);
	СпрВалюты.Кратность.Установить('01.01.1980', 1);	
	Параметры.Рубли = СпрВалюты.ТекущийЭлемент();
КонецЕсли;

Параметры.ПараметрыАлгоритмов = СоздатьОбъект("СписокЗначений");
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ОсновнойСклад", Константа.ОсновнойСклад);

Параметры.ПараметрыАлгоритмов.Установить("ТипСчетаРасчетов",0);

Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");

Параметры.ТаблицаНДС = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаНДС.НоваяКолонка("Сумма");
Параметры.ТаблицаНДС.НоваяКолонка("НДС");
Параметры.ТаблицаНДС.НоваяКолонка("Контрагент");
Параметры.ТаблицаНДС.НоваяКолонка("Договор");
Параметры.ТаблицаНДС.НоваяКолонка("ВидРасчетов");
Параметры.ТаблицаНДС.НоваяКолонка("Ключ");
Параметры.ТаблицаНДСНач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаНДСКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСНач);
Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСКон);

Параметры.ТаблицаПроводок = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводок.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводок.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводок.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводок.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводок.НоваяКолонка("Сумма", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСуммаДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСуммаКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("КоличествоДт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("КоличествоКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Содержание", "Строка");
//*********************************************************
// Исключительно для упрощения формирования документа ВНО
Параметры.ТаблицаПроводок.НоваяКолонка("СчетУчета");
Параметры.ТаблицаПроводок.НоваяКолонка("СуммаКт", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Валюта");
Параметры.ТаблицаПроводок.НоваяКолонка("ВалютнаяСумма", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Количество", "Число");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто1");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто2");
Параметры.ТаблицаПроводок.НоваяКолонка("Субконто3");
Параметры.ТаблицаПроводок.НоваяКолонка("ОтражениеВУСН");


Параметры.ТаблицаПроводокОбороты = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СчетКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КодСчетаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("СубконтоКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("Сумма");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("ВалютнаяСуммаКт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоДт");
Параметры.ТаблицаПроводокОбороты.НоваяКолонка("КоличествоКт");

Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("Подотчетник");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("РасчетныйДокумент");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяКолонка("ВидЗадолженности");

Параметры.ОстаткиПоВзаиморасчетамСПоставщиками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("Контрагент");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("ДоговорКонтрагента");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("РасчетныйДокумент");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("Валюта");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("СуммаВзаиморасчетовВал");
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.НоваяКолонка("СчетУчета");

Параметры.ОстаткиПоВзаиморасчетамCСотрудниками = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("Работник");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("ОтражениеВУСН");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("Ведомость");
Параметры.ОстаткиПоВзаиморасчетамCСотрудниками.НоваяКолонка("СчетУчета");

Параметры.ОстаткиПоВзаиморасчетамСПокупателями = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("Контрагент");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ДоговорКонтрагента");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("РасчетныйДокумент");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ДоходЕНВД");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("ДоходКомитента");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("Валюта");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("СуммаВзаиморасчетовВал");
Параметры.ОстаткиПоВзаиморасчетамСПокупателями.НоваяКолонка("СчетУчета");

Параметры.ОстаткиПоВзаиморасчетамПоНалогам = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("ВидЗадолженности");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("СчетРасчетовПоНалогу");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ОстаткиПоВзаиморасчетамПоНалогам.НоваяКолонка("ОтражениеВУСН");

Параметры.ОстаткиПоТМЦ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("Номенклатура");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("СчетУчета");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("Склад");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("ДокументОприходования");
Параметры.ОстаткиПоТМЦ.НоваяКолонка("Количество");

Параметры.ОстаткиПоТМЦПереданные = СоздатьОбъект("ТаблицаЗначений");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("Номенклатура");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("СчетУчета");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("Контрагент");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("ДоговорКонтрагента");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("ДокументПередачи");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("ДокументОприходования");
Параметры.ОстаткиПоТМЦПереданные.НоваяКолонка("Количество");

Параметры.РасходыНоменклатура	= СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыНоменклатура.НоваяКолонка("Номенклатура");
Параметры.РасходыНоменклатура.НоваяКолонка("СчетУчета"); 			
Параметры.РасходыНоменклатура.НоваяКолонка("ДокументОприходования");
Параметры.РасходыНоменклатура.НоваяКолонка("СтатусыПартийУСН");
Параметры.РасходыНоменклатура.НоваяКолонка("Контрагент");
Параметры.РасходыНоменклатура.НоваяКолонка("ДоговорКонтрагента");
Параметры.РасходыНоменклатура.НоваяКолонка("РасчетныйДокумент");
Параметры.РасходыНоменклатура.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.РасходыНоменклатура.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыНоменклатура.НоваяКолонка("Склад");
Параметры.РасходыНоменклатура.НоваяКолонка("Валюта");
Параметры.РасходыНоменклатура.НоваяКолонка("Количество", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("Сумма", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("НДС", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("СуммаВал", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("НДСВал", "Число");
Параметры.РасходыНоменклатура.НоваяКолонка("ПартияСинхронизации");

Параметры.ВременнаяТаблицаРасчетов = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("ТабличнаяЧасть");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("Контрагент");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("ДоговорКонтрагента");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("РасчетныйДокумент");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("ОтражениеВНУ");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("Валюта");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("Сумма");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("СуммаВзаиморасчетов");
Параметры.ВременнаяТаблицаРасчетов.НоваяКолонка("НДС");

Параметры.ВременнаяТаблицаРасчетовНач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВременнаяТаблицаРасчетовКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВременнаяТаблицаРасчетов.Выгрузить(Параметры.ВременнаяТаблицаРасчетовНач);
Параметры.ВременнаяТаблицаРасчетов.Выгрузить(Параметры.ВременнаяТаблицаРасчетовКон);

Параметры.СтрокаТаблицыЗначений = СоздатьОбъект("ТаблицаЗначений");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("РБП");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Номенклатура");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СчетУчета");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СтатусыПартийУСН");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СчетПолучателя");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Контрагент");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ДоговорКонтрагента");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ДокументОприходования");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("РасчетныйДокумент");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ОтражениеВУСН");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Валюта");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Количество");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("Сумма", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("НДС", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("СуммаВал", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("НДСВал", "Число");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ПартияСинхронизации");
Параметры.СтрокаТаблицыЗначений.НоваяКолонка("ИндексСтроки", "Число");

Параметры.РасходыУслуги = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыУслуги.НоваяКолонка("Номенклатура");
Параметры.РасходыУслуги.НоваяКолонка("Контрагент");
Параметры.РасходыУслуги.НоваяКолонка("ДоговорКонтрагента");
Параметры.РасходыУслуги.НоваяКолонка("РасчетныйДокумент");
Параметры.РасходыУслуги.НоваяКолонка("ОтражениеВУСН"); 
Параметры.РасходыУслуги.НоваяКолонка("Валюта");
Параметры.РасходыУслуги.НоваяКолонка("Сумма");
Параметры.РасходыУслуги.НоваяКолонка("НДС");

Параметры.РасходыРБП = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыРБП.НоваяКолонка("РБП");
Параметры.РасходыРБП.НоваяКолонка("Контрагент");
Параметры.РасходыРБП.НоваяКолонка("ДоговорКонтрагента");
Параметры.РасходыРБП.НоваяКолонка("РасчетныйДокумент");
Параметры.РасходыРБП.НоваяКолонка("СтатусыОплатыРасходовУСН");
Параметры.РасходыРБП.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыРБП.НоваяКолонка("Валюта");
Параметры.РасходыРБП.НоваяКолонка("Сумма", "Число");
Параметры.РасходыРБП.НоваяКолонка("НДС", "Число");
Параметры.РасходыРБП.НоваяКолонка("СуммаВал", "Число");
Параметры.РасходыРБП.НоваяКолонка("НДСВал", "Число");

Параметры.РасходыНалоги = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыНалоги.НоваяКолонка("СчетРасчетовПоНалогу");
Параметры.РасходыНалоги.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыНалоги.НоваяКолонка("Сумма");

Параметры.РасходыЗарплата = СоздатьОбъект("ТаблицаЗначений");
Параметры.РасходыЗарплата.НоваяКолонка("Работник");
Параметры.РасходыЗарплата.НоваяКолонка("ОтражениеВУСН");
Параметры.РасходыЗарплата.НоваяКолонка("Сумма");

Параметры.ТаблицаМХ = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаМХ.НоваяКолонка("СчетаУчета");
Параметры.ТаблицаМХ.НоваяКолонка("Период");
Параметры.ТаблицаМХ.НоваяКолонка("Номенклатура");
Параметры.ТаблицаМХ.НоваяКолонка("КлючПоиска");
Параметры.ТаблицаМХ.НоваяКолонка("ТаблицаИтоговМХ");

Параметры.ТаблицаМХНач = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХНач);
Параметры.ТаблицаМХКон = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХКон);

Параметры.ВыгружатьБезВалют = СоздатьОбъект("СписокЗначений");
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("10.3"));
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("10.13"));
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("41.3"));
Параметры.ВыгружатьБезВалют.ДобавитьЗначение(СчетПоКоду("97.4"));

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ПодготовитьТаблицуМХ();
	Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХКон);
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ТаблицаМХ.УдалитьСтроки();
ПодготовитьТаблицуМХ();
Параметры.ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХНач);

Параметры.ТаблицаДоговоров = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаДоговоров.НоваяКолонка("Договор");
Параметры.ТаблицаДоговоров.НоваяКолонка("ВидыДоговора");

//*********************************************************
// Перенос учетной политики
//определим даты измения учетной политики
СписокКонстант = СоздатьОбъект("СписокЗначений");
СписокКонстант.ДобавитьЗначение("ТарифСтраховыхВзносов");
СписокКонстант.ДобавитьЗначение("ОбъектНалогообложения");
СписокКонстант.ДобавитьЗначение("РозницаОблагаетсяЕНВД");
СписокКонстант.ДобавитьЗначение("ПорядокПризнанияМатериальныхРасходов");
СписокКонстант.ДобавитьЗначение("ПорядокПризнанияРасходовПоТоварам");
СписокКонстант.ДобавитьЗначение("ВыделятьВходящийНДС");
СписокКонстант.ДобавитьЗначение("ОсобенностиИсчисленияНДФЛ");

ОказаниеУслуг = 0;
ВыпускПродукции = 0;
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, "20",,, 1);

БухИт.ВыбратьСубконто();
Пока  БухИт.ПолучитьСубконто() = 1 Цикл
	ЗначСубконто = БухИт.Субконто(1);
	Если ПустоеЗначение(ЗначСубконто) = 0 Тогда
		Если (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.ОказаниеУслуг)
			ИЛИ (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.ОказаниеУслугЕНВД) Тогда
			ОказаниеУслуг = 1;
		ИначеЕсли (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.Торговля)
			ИЛИ (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.Производство) Тогда		
			ВыпускПродукции = 1;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

ТаблицаИзмененийУП = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзмененийУП.НоваяКолонка("ДатаИзменения");
Периодический = СоздатьОбъект("Периодический");
Для НомерКонстанты = 1 По СписокКонстант.РазмерСписка() Цикл
	Периодический.ИспользоватьОбъект(СписокКонстант.ПолучитьЗначение(НомерКонстанты));
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаИзмененийУП.НоваяСтрока();
		ТаблицаИзмененийУП.ДатаИзменения = КонМесяца(Периодический.ДатаЗнач);
	КонецЦикла;
КонецЦикла;

ВыгрузитьПоПравилу(,,,, "УчетнаяПолитикаОрганизаций");

//выгружаем изменения УП
ТаблицаИзмененийУП.Свернуть("ДатаИзменения","");
ТаблицаИзмененийУП.Сортировать("ДатаИзменения");
ТаблицаИзмененийУП.ВыбратьСтроки();
Пока ТаблицаИзмененийУП.ПолучитьСтроку()=1 Цикл
	ВД = СоздатьОбъект("СписокЗначений");
	ВД.ДобавитьЗначение(ТаблицаИзмененийУП.ДатаИзменения, "ДатаУчетнойПолитики");
	ВД.ДобавитьЗначение(ОказаниеУслуг, "ОказаниеУслуг");
	ВД.ДобавитьЗначение(ВыпускПродукции, "ВыпускПродукции");
	ВД.ДобавитьЗначение(?((ОказаниеУслуг = 1) ИЛИ (ВыпускПродукции = 1), 1, 0), "ВедетсяПроизводственнаяДеятельность");

	ВыгрузитьПоПравилу(ВД,,ВД,, "УчетнаяПолитикаОрганизаций");	
КонецЦикла;

ВыгрузитьПоПравилу(,,,, "УчетнаяПолитикаПоНДФЛ");
ВыгрузитьПоПравилу(,,,, "ПрименяемыеТарифыСтраховыхВзносов");

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Раздел1", "");

Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.УдалитьСтроки();
НУ_ОстаткиПоВзаиморасчетамСПодотчетниками();
НУ_ОстаткиПоВзаиморасчетамСПоставщиками();
Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками.УдалитьСтроки();
Параметры.ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();
Параметры.ТаблицаНДС.Выгрузить(Параметры.ТаблицаНДСНач);
Параметры.ТаблицаНДС.УдалитьСтроки();

Параметры.ТаблицаСчетовРазделовУчета = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("СчетаГруппы");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("Счета");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("СчетаИсключения");
Параметры.ТаблицаСчетовРазделовУчета.НоваяКолонка("РазделУчета");

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ОсновныеСредства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "01, 02, 03";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """010""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """10"", ""11"", ""001"", ""011""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НематериальныеАктивыИНИОКР";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "04, 05";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "КапитальныеВложения";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "07, 08";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Материалы";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "10";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """10.11"",""10.12"",""10.13""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НезавершенноеПроизводство";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "20, 23";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Товары";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "41";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ГотоваяПродукцияИПолуфабрикаты";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "43, 21";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ТоварыОтгруженные";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "45";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "ДенежныеСредства";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "50, 51, 52, 53, 54, 55, 56, 57, 58, 59";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПоставщикамиИПодрядчиками";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "60";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """60.3"", ""60.4""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПокупателямиИЗаказчиками";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "62";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыПоНалогамИСборам";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "68, 69";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПерсоналомПоОплатеТрудаИДепонентам";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "70";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """76.4""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПодотчетнымиЛицами";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "71";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСУчредителями";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "75";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасчетыСПрочимиДебиторамиИКредиторами";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "76";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76.1"", ""76.3"", ""76.4"", ""76.11"", ""76.АВ"", ""76.Н"", ""76.Н.1"", ""76.Н.2"", ""76.Н.3""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСПоПриобретеннымЦенностям";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "19";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "НДСПоАвансамПолученным";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= """76.АВ""";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= """76""";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "Капитал";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "80, 81, 82, 83, 84, 85, 86";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";

Параметры.ТаблицаСчетовРазделовУчета.НоваяСтрока();
Параметры.ТаблицаСчетовРазделовУчета.РазделУчета	 	= "РасходыБудущихПериодов";
Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы		= "97";
Параметры.ТаблицаСчетовРазделовУчета.Счета				= "";
Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения	= "";


//****************************************************************************************
// Подготовим список счетов, не принимаемых для НУ

Параметры.СписокСчетовНеПринимаемыхВНУ = СоздатьОбъект("СписокЗначений");
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("10.1"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("10.11"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("19.1"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("41.1"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("44.1"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("60.1"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("60.11"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("62.4"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("62.44"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("66.2"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("66.22"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("67.2"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("67.22"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("71.1"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("71.11"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("73.4"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("76.5"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("76.55"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("90.2"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("90.3"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("91.2"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("91.3"));
Параметры.СписокСчетовНеПринимаемыхВНУ.ДобавитьЗначение(СчетПоКоду("97.1"));

//*********************************************************
// Сформируем список розничных складов, используемых как НТТ
Параметры.СписокСкладовНТТ = СоздатьОбъект("СписокЗначений");
ПКО = СоздатьОбъект("Документ.ПриходныйОрдер");
ПКО.ВыбратьДокументы(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
Пока ПКО.ПолучитьДокумент()=1 Цикл
	Если (ПКО.РозничнаяВыручка = 1) и (ПКО.ФормироватьПроводки = 1) Тогда
		Если Параметры.СписокСкладовНТТ.НайтиЗначение(ПКО.ТорговаяТочка)=0 Тогда
			 Параметры.СписокСкладовНТТ.ДобавитьЗначение(ПКО.ТорговаяТочка);
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

//*********************************************************
// Сформируем список счетов, которые не нужно переносить
Параметры.СписокНеПереносящихсяСчетов   = СоздатьОбъект("СписокЗначений");
Параметры.СписокСчетовУчетаРасчетов     = СоздатьОбъект("СписокЗначений");
Параметры.СписокСчетовНалоговогоУчетаНУ = СоздатьОбъект("СписокЗначений");
Счета = СоздатьОбъект("Счет");
Счета.ВыбратьСчета();
Пока Счета.ПолучитьСчет()=1 Цикл
	Если Счета.ПринадлежитГруппе(СчетПоКоду("ДФЛ"))=1 Тогда
		Параметры.СписокНеПереносящихсяСчетов.ДобавитьЗначение(Счета.ТекущийСчет());
	ИначеЕсли Счета.ПринадлежитГруппе(СчетПоКоду("ПП"))=1 Тогда
		Параметры.СписокНеПереносящихсяСчетов.ДобавитьЗначение(Счета.ТекущийСчет());
	ИначеЕсли Счета.ПринадлежитГруппе(СчетПоКоду("СВЗ"))=1 Тогда
		Параметры.СписокНеПереносящихсяСчетов.ДобавитьЗначение(Счета.ТекущийСчет());
	ИначеЕсли Счета.ПринадлежитГруппе(СчетПоКоду("НДС"))=1 Тогда
		Параметры.СписокНеПереносящихсяСчетов.ДобавитьЗначение(Счета.ТекущийСчет());
	ИначеЕсли Счета.ПринадлежитГруппе(СчетПоКоду("ПС"))=1 Тогда
		Параметры.СписокНеПереносящихсяСчетов.ДобавитьЗначение(Счета.ТекущийСчет());
	ИначеЕсли Лев(Счета.Код,1)="Н" Тогда
		Параметры.СписокСчетовНалоговогоУчетаНУ.ДобавитьЗначение(Счета.ТекущийСчет());
	ИначеЕсли (Счета.ТекущийСчет() = СчетПоКоду("70"))
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("62"))=1)
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("60"))=1) 
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("76"))=1)
		ИЛИ (Счета.ТекущийСчет() = СчетПоКоду("63"))
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("66"))=1)
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("67"))=1)
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("71"))=1)
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("73"))=1)
		ИЛИ (Счета.ПринадлежитГруппе(СчетПоКоду("75"))=1) Тогда
		Параметры.СписокСчетовУчетаРасчетов.ДобавитьЗначение(Счета.ТекущийСчет());
	КонецЕсли;
КонецЦикла;

//*********************************************************

Параметры.ТаблицаВедомостейПоКассе = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаВедомостейПоКассе.НоваяКолонка("Ведомость");
Параметры.ТаблицаВедомостейПоКассе.НоваяКолонка("Сумма");
Параметры.ТаблицаВедомостейПоКассе.НоваяКолонка("Дата");

//*********************************************************

Параметры.ТаблицаВедомостейПоБанку = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаВедомостейПоБанку.НоваяКолонка("Ведомость");
Параметры.ТаблицаВедомостейПоБанку.НоваяКолонка("Выписка");
Параметры.ТаблицаВедомостейПоБанку.НоваяКолонка("СтрокаВыписки");
СписокВедомостей = СоздатьОбъект("ТаблицаЗначений");
СписокВедомостей.НоваяКолонка("Ведомость");
СписокВедомостей.НоваяКолонка("Контрагент");
СписокВедомостей.НоваяКолонка("Договор");
СписокВедомостей.НоваяКолонка("Сумма");
СписокВедомостей.НоваяКолонка("Дата");

Ведомость = СоздатьОбъект("Документ.ВыплатаЗП");
Ведомость.ВыбратьДокументы(Параметры.ДатаВводаОстатков-3,Параметры.ДатаКонцаПериодаВыгрузки);
Пока Ведомость.ПолучитьДокумент()=1 Цикл
	Если Ведомость.Проведен()=0 Тогда
		Продолжить;
	КонецЕсли;
	Если Ведомость.ПорядокВыплаты &lt;&gt; 0 Тогда
		СписокВедомостей.НоваяСтрока();
		СписокВедомостей.Ведомость = Ведомость.ТекущийДокумент();
		СписокВедомостей.Контрагент = Ведомость.Контрагент;
		СписокВедомостей.Договор = Ведомость.Договор;
		СписокВедомостей.Сумма = Ведомость.Итог("КВыдаче");
		СписокВедомостей.Дата  = Ведомость.ДатаДок;
	КонецЕсли;
КонецЦикла;

//заполним соответствия строк выписки и ведомостей на оплату по банку
Выписка = СоздатьОбъект("Документ.Выписка");
Выписка.ВыбратьДокументы(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
Пока Выписка.ПолучитьДокумент()=1 Цикл
	Выписка.ВыбратьСтроки();
	Пока Выписка.ПолучитьСтроку()=1 Цикл
		Если (Выписка.КоррСчет = СчетПоКоду("76.ЗП")) и (Выписка.Расход&lt;&gt;0) Тогда
			СписокВедомостей.ВыбратьСтроки();
			Пока СписокВедомостей.ПолучитьСтроку()=1 Цикл
				РазницаДней = Выписка.ДатаДок - СписокВедомостей.Дата;
				Если (РазницаДней&gt;=0) и (РазницаДней&lt;3) 
					и (СписокВедомостей.Сумма = Выписка.Расход)
					и (СписокВедомостей.Контрагент = Выписка.Субконто1)
					и (СписокВедомостей.Договор = Выписка.Субконто2) Тогда
					Параметры.ТаблицаВедомостейПоБанку.НоваяСтрока();
					Параметры.ТаблицаВедомостейПоБанку.Ведомость = СписокВедомостей.Ведомость;
					Параметры.ТаблицаВедомостейПоБанку.Выписка = Выписка.ТекущийДокумент();
					Параметры.ТаблицаВедомостейПоБанку.СтрокаВыписки = Выписка.НомерСтроки;
					СписокВедомостей.УдалитьСтроку(СписокВедомостей.НомерСтроки);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;



</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>Если (Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1) Тогда
	ГраницаДатыПриема = Параметры.ДатаВводаОстатков-1;
	
	Если Параметры.П_ВыгружатьОбороты = 1 Тогда
		ГраницаДатыПриема = Параметры.ГраницаВыгрузкиОборотов;
	КонецЕсли;
	
	//*******************************************************
	//выгружаем сведения о сотрудниках принятых и уволенных до начала переноса
	// делаем это только один раз - при условии что были выгружены кадровые документы
	// и остатки на начало
	
	Сотрудники = СоздатьОбъект("Справочник.Сотрудники");
	Сотрудники.ВыбратьЭлементы();
	Пока Сотрудники.ПолучитьЭлемент()=1 Цикл
		Если Сотрудники.ХарактерРаботы.Получить(ГраницаДатыПриема) = Перечисление.ХарактерРаботы.ТрудовойДоговор Тогда
			ВыгрузитьПоПравилу(Сотрудники.ТекущийЭлемент(),,,, "ПринятыеРаботники");
		КонецЕсли;	
	КонецЦикла;
	
	Если ПустоеЗначение(Параметры.ГраницаВыгрузкиОборотов) = 1 Тогда
		ГраницаДатыУвольнения = Параметры.ДатаВводаОстатков;
	Иначе
		ГраницаДатыУвольнения = Параметры.ГраницаВыгрузкиОборотов;
	КонецЕсли;
	
	Если Параметры.СписокРаботников.КоличествоСтрок() &lt;&gt; 0 Тогда
		Параметры.СписокРаботников.ВыбратьСтроки();
		Пока Параметры.СписокРаботников.ПолучитьСтроку() = 1 Цикл
			Параметры.ПараметрыАлгоритмов.Установить("ФизЛицо", Параметры.СписокРаботников.ФизЛицо);
			ДатаУвольнения = ОпределитьДатуУвольнения(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, Отказ);			
			Если ДатаУвольнения = Дата(0) Тогда
				Продолжить;
			ИначеЕсли ДатаУвольнения &gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
				Продолжить;
			ИначеЕсли ДатаУвольнения &lt; Параметры.ДатаВводаОстатков Тогда
				Продолжить;
			ИначеЕсли ДатаУвольнения &gt; ГраницаДатыУвольнения Тогда
				Продолжить;
			КонецЕсли;		
			ВыгрузитьПоПравилу(Параметры.СписокРаботников.ФизЛицо,,,, "УволенныеРаботники");
		КонецЦикла;		
	КонецЕсли;
КонецЕсли;

Параметры.ТаблицаДоговоров.ВыбратьСтроки();
Пока Параметры.ТаблицаДоговоров.ПолучитьСтроку() = 1 Цикл
	ВидыДоговора = Параметры.ТаблицаДоговоров.ВидыДоговора;
	ВидыДоговора.Сортировать("ВесДоговора -,ВидДоговора +");
	ВидыДоговора.ВыбратьСтроки();
	//выбираем самую первую строчку
	Если ВидыДоговора.ПолучитьСтроку()=1 Тогда
		Если (ПустоеЗначение(ВидыДоговора.ВидДоговора) = 0) И (ВидыДоговора.ВидДоговора&lt;&gt;"Прочее") Тогда
			ВД = СоздатьОбъект("СписокЗначений");
			ВД.ДобавитьЗначение(ВидыДоговора.ВидДоговора, "ВидДоговора");
			ВыгрузитьПоПравилу(Параметры.ТаблицаДоговоров.Договор,, ВД,, "ДоговорыКонтрагентовПоВидам");
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;


ВходящиеДанные = СоздатьОбъект("СписокЗначений");
//****************************************
// Ищем и выгружаем расходные кассовые ордера по зарплате
СписокРКО = СоздатьОбъект("ТаблицаЗначений");
СписокРКО.НоваяКолонка("РКО");
СписокРКО.НоваяКолонка("Сумма");
СписокРКО.НоваяКолонка("Дата");

РКО = СоздатьОбъект("Документ.РасходныйОрдер");
РКО.ВыбратьДокументы(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки+3);
Пока РКО.ПолучитьДокумент()=1 Цикл
	Если РКО.Проведен()=0 Тогда
		Продолжить;
	КонецЕсли;
	//получим РКО, которые не формируют проводки и относятся к выплате ЗП
	Если РКО.КоррСчет = СчетПоКоду("70") Тогда		
		СписокРКО.НоваяСтрока();
		СписокРКО.РКО = РКО.ТекущийДокумент();
		СписокРКО.Сумма = РКО.Сумма;
		СписокРКО.Дата  = РКО.ДатаДок;
	КонецЕсли;
КонецЦикла;
СписокРКО.Сортировать("Дата");
ТаблицаВедомостейПоКассе = Параметры.ТаблицаВедомостейПоКассе;
ТаблицаВедомостейПоКассе.Сортировать("Дата");

//теперь распределим РКО по ведомостям
ТаблицаВедомостейПоКассе.ВыбратьСтроки();
Пока ТаблицаВедомостейПоКассе.ПолучитьСтроку()=1 Цикл
	Найдено = 0;
	СписокРКО.ВыбратьСтроки();
	Пока СписокРКО.ПолучитьСтроку()=1 Цикл
		РазницаДней = СписокРКО.Дата - ТаблицаВедомостейПоКассе.Дата;
		Если (РазницаДней&gt;=0) и (РазницаДней&lt;3) и (СписокРКО.Сумма = ТаблицаВедомостейПоКассе.Сумма) Тогда
			//нашли - выгружаем РКО
			ВД = СоздатьОбъект("СписокЗначений");
			ВД.Установить("ЗарплатнаяВедомость",ТаблицаВедомостейПоКассе.Ведомость);
			ВыгрузитьПоПравилу(СписокРКО.РКО,,ВД,,"РасходныйОрдер");
			СписокРКО.УдалитьСтроку(СписокРКО.НомерСтроки);
			Найдено = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Найдено = 0 Тогда
		//не нашли              
		ВыгрузитьПоПравилу(ТаблицаВедомостейПоКассе.Ведомость,,,,"РасходныйКассовыйОрдер_ВыплатаЗП");
	КонецЕсли;
КонецЦикла;

//****************************************
// Добавляем сведени о конфигурации и ИБ
ВыгрузитьСведенияОбИБ();

//****************************************
// Добавляем код проверок данных
Проверки();
</ПослеВыгрузкиДанных>
	<ПередЗагрузкойДанных>//*********************************************************************************************
// Настройка параметров учета
//*********************************************************************************************

// Склады
// если не включен складской учет - то включим его принудительно

ПараметрыУчета = ОбщегоНазначенияБПВызовСервера.ОпределитьПараметрыУчета();
Если ПараметрыУчета.СкладскойУчет &lt;&gt; 1
	ИЛИ НЕ Константы.ИспользоватьСтатьиДвиженияДенежныхСредств.Получить()
	ИЛИ ПараметрыУчета.ВестиУчетПоРаботникам &lt;&gt; 1 Тогда
	ПараметрыУчета.СкладскойУчет = 1;
	ПараметрыУчета.ВестиПартионныйУчет = Истина;
	ПараметрыУчета.ВестиУчетПоСтатьямДДС = Истина;
	ПараметрыУчета.ВестиУчетПоРаботникам = 1;
	ОбщегоНазначенияБПВызовСервера.ПрименитьПараметрыУчета(ПараметрыУчета);
КонецЕсли;

//*********************************************************************************************

Параметры.Вставить("ПараметрыАлгоритмов",Новый Структура);

НаборКонстант = Константы.СоздатьНабор("ВедетсяПроизводственнаяДеятельность, ВедетсяРозничнаяТорговля, ИспользуетсяУСН, ВедетсяДеятельностьПоДоговорамКомиссииНаПродажу, ИспользоватьНесколькоСкладов, ИспользоватьТипыЦенНоменклатуры");
НаборКонстант.Прочитать();
НаборКонстант.ВедетсяПроизводственнаяДеятельность = Истина;
НаборКонстант.ВедетсяРозничнаяТорговля = Истина;
НаборКонстант.ИспользуетсяУСН = Истина;
НаборКонстант.ВедетсяДеятельностьПоДоговорамКомиссииНаПродажу = Истина;
НаборКонстант.ИспользоватьНесколькоСкладов = Истина;
НаборКонстант.ИспользоватьТипыЦенНоменклатуры = Истина;
НаборКонстант.Записать();
</ПередЗагрузкойДанных>
	<ПослеЗагрузкиДанных>НаборЗаписей = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.СоздатьНаборЗаписей();
НаборЗаписей.Прочитать();

Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
	ЗаписьНабора.ОсновноеРабочееМестоВОрганизации = Истина;
КонецЦикла;

Попытка
	НаборЗаписей.Записать();
Исключение
КонецПопытки;

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ВводНачальныхОстатков.Ссылка,
|	ВводНачальныхОстатков.РазделУчета
|ИЗ
|	Документ.ВводНачальныхОстатков КАК ВводНачальныхОстатков
|ГДЕ
|	ВводНачальныхОстатков.Организация = &amp;Организация";
Запрос.УстановитьПараметр("Организация", Параметры.Организация);

Результат = Запрос.Выполнить().Выгрузить();
Для Каждого СтрокаТаблицы ИЗ Результат Цикл
	
	Объект = СтрокаТаблицы.Ссылка.ПолучитьОбъект();
	
	ТаблицаРасчетыПоЗаработнойПлате = Объект.РасчетыПоЗаработнойПлате;
	Если ТаблицаРасчетыПоЗаработнойПлате.Количество() &lt;&gt; 0 Тогда
		Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчетыПоЗаработнойПлате Цикл		
			Если СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам Тогда			
				Если ЗначениеЗаполнено(СтрокаТаблицы.Ведомость) Тогда
					ДокументДепонирования = СтрокаТаблицы.Ведомость.ПолучитьОбъект();
					ДокументДепонирования.Зарплата.Очистить();			
					ДокументДепонирования.Записать();
				КонецЕсли;
			КонецЕсли;		
		КонецЦикла;
		Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчетыПоЗаработнойПлате Цикл		
			Если СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам Тогда			
				Если ЗначениеЗаполнено(СтрокаТаблицы.Ведомость) Тогда
					ДокументДепонирования						= СтрокаТаблицы.Ведомость.ПолучитьОбъект();
					НоваяСтрокаДокумента						= ДокументДепонирования.Зарплата.Добавить();
					НоваяСтрокаДокумента.ФизЛицо				= СтрокаТаблицы.РаботникОрганизации;
					НоваяСтрокаДокумента.Сумма					= СтрокаТаблицы.Сумма;
					НоваяСтрокаДокумента.ВыплаченностьЗарплаты	= Перечисления.ВыплаченностьЗарплаты.Задепонировано;
					ДокументДепонирования.Записать();
				КонецЕсли;		
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
	
	//**************************************************************
	Если (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.НезавершенноеПроизводство)
		ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями)
		ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Капитал)
		ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ОтложенныеНалоговыеАктивыОбязательства) 	
		ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета) 
		ИЛИ (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ДенежныеСредства) Тогда
		
		КоллекцияОбъектов = Объект.БухСправка;
		
		//обрабатываем субконто БУ
		Параметры.ПараметрыАлгоритмов.Очистить();
		Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "БухСправка");
		Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетУчета");
		Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","Субконто");
		Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
		Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
		
	КонецЕсли;
	
	//**************************************************************
	Если (Объект.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.НематериальныеАктивыИНИОКР) Тогда
		
		ТаблицаНМА = Объект.НМА;
		
		Для Каждого СтрокаТаблицыНМА ИЗ ТаблицаНМА Цикл
			
			Если ЗначениеЗаполнено(СтрокаТаблицыНМА.НематериальныйАктив) Тогда
				
				НМА = СтрокаТаблицыНМА.НематериальныйАктив.ПолучитьОбъект();
				
				Если СтрокаТаблицыНМА.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации Тогда
					НМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив;
					СтрокаТаблицыНМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив;
				Иначе
					НМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР;
					СтрокаТаблицыНМА.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР;
				КонецЕсли;
				
				НМА.Записать();
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
	
КонецЦикла;</ПослеЗагрузкиДанных>
	<ПослеЗагрузкиОбъекта>Если ИмяТипаОбъекта = "Справочник" ИЛИ ИмяТипаОбъекта = "ПланВидовХарактеристик" Тогда
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Объект.УстановитьНовыйКод();
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Сотрудники") Тогда
		Объект.ОбменДанными.Загрузка = Ложь;
		Попытка
			Объект.Записать();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
ИначеЕсли ИмяТипаОбъекта = "Документ" Тогда
	Если Не ЗначениеЗаполнено(Объект.Номер) Тогда
		Объект.УстановитьНовыйНомер();
	КонецЕсли;
КонецЕсли;</ПослеЗагрузкиОбъекта>
	<Параметры>
		<Параметр Имя="_ВыгружатьНеПроведенные                           " Наименование="Выгружать непроведенные документы" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="_ВыгружатьПроведенные                             " Наименование="Выгружать проведенные документы" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="_ВыгружатьУдаленные                               " Наименование="Выгружать помеченные на удаление документы" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременнаяТаблицаРасчетов                          " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременнаяТаблицаРасчетовКон                       " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременнаяТаблицаРасчетовНач                       " Наименование="ВременнаяТаблицаРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгружатьБезВалют                                 " Наименование="ВыгружатьБезВалют" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгружатьКоды                                     " Наименование="ВыгружатьКодыСправочников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгрузитьКадровыеДокументыПрошлыхПериодов         " Наименование="ВыгрузитьКадровыеДокументыПрошлыхПериодов         " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛ                           " Наименование="Таблицы вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВычетыСотрудниковпоНДФЛЛичный                     " Наименование="Таблица личных вычетов сотрудников по НДФЛ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ГраницаВыгрузкиОборотов                           " Наименование="Граница выгрузки оборотов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Дата" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаВводаОстатков                                 " Наименование="Дата ввода остатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаКонцаПериодаВыгрузки                          " Наименование="Дата конца периода выгрузки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаНачалаВыгрузкиДокументов                      " Наименование="Дата начала выгрузки документов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаНачалаВыгрузкиОборотов                        " Наименование="Дата начала выгрузки оборотов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаОкончанияВыгрузкиДокументов                   " Наименование="Дата окончания выгрузки документов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаОкончанияВыгрузкиОборотов                     " Наименование="Дата окончания выгрузки оборотов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДлинаКода                                         " Наименование="Длина кодов справочников" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ИмяТаблицы                                        " Наименование="Имя таблицы прочих расходов                                        " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОбъектНалогообложения                             " Наименование="ОбъектНалогообложения" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Организация                                       " Наименование="Организация" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамCСотрудниками              " Наименование="ОстаткиПоВзаиморасчетамCСотрудниками" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамПоНалогам                  " Наименование="ОстаткиПоВзаиморасчетамПоНалогам" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамСПодотчетниками            " Наименование="ОстаткиПоВзаиморасчетамСПодотчетниками" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамСПокупателями              " Наименование="ОстаткиПоВзаиморасчетамСПокупателями" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоВзаиморасчетамСПоставщиками              " Наименование="ОстаткиПоВзаиморасчетамСПоставщиками" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоТМЦ                                      " Наименование="ОстаткиПоТМЦ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОстаткиПоТМЦПереданные                            " Наименование="ОстаткиПоТМЦПереданные" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="П_ВыгружатьДокументы                              " Наименование="Выгружать документы" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="П_ВыгружатьОбороты                                " Наименование="Выгружать обороты" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="П_ВыгружатьОстатки                                " Наименование="Выгружать остатки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="П_ВыгружатьСправочники                            " Наименование="Выгружать справочники" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="П_ПараметрыПомощника                              " Наименование="Использовать параметры помощника (изменять не рекомендуется)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПараметрыАлгоритмов                               " Наименование="ПараметрыАлгоритмов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПодразделениеОрганизации                          " Наименование="ПодразделениеОрганизации                          " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПрефиксОрганизации                                " Наименование="Префикс документов организации                             " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыЗарплата                                   " Наименование="РасходыЗарплата" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыНалоги                                     " Наименование="РасходыНалоги" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыНоменклатура                               " Наименование="РасходыНоменклатура" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыРБП                                        " Наименование="РасходыРБП" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РасходыУслуги                                     " Наименование="РасходыУслуги" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Рубли                                             " Наименование="Рубли" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНеПереносящихсяСчетов                       " Наименование="Список счетов, проводки с которыми не переносятся" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНМА                                         " Наименование="СписокНМА" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНМАКон                                      " Наименование="СписокНМАКон" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОС                                          " Наименование="СписокОС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокОСКон                                       " Наименование="СписокОСКон" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокРаботников                                  " Наименование="СписокРаботников                                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСкладовНТТ                                  " Наименование="Список складов НТТ                                  " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовНалоговогоУчетаНУ                     " Наименование="Список счетов налогового учета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовНеПринимаемыхВНУ                      " Наименование="СписокСчетовНеПринимаемыхВНУ                      " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовРасчетов                              " Наименование="СписокСчетовРасчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовСкладскогоУчета                       " Наименование="СписокСчетовСкладскогоУчета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокСчетовУчетаРасчетов                         " Наименование="Список счетов учета расчетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СпрВалюты                                         " Наименование="СпрВалюты" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СтрокаТаблицыЗначений                             " Наименование="СтрокаТаблицыЗначений" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СчетВводаОстатков                                 " Наименование="СчетВводаОстатков" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаВедомостейПоБанку                          " Наименование="Таблица ведомостей выплаты ЗП через банк" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаВедомостейПоКассе                          " Наименование="Таблица ведомостей выплаты ЗП через кассу" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаДоговоров                                  " Наименование="ТаблицаДоговоров" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаМХ                                         " Наименование="ТаблицаМХ" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаМХКон                                      " Наименование="ТаблицаМХКон" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаМХНач                                      " Наименование="ТаблицаМХНач" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаНДС                                        " Наименование="ТаблицаНДС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаНДСКон                                     " Наименование="ТаблицаНДС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаНДСНач                                     " Наименование="ТаблицаНДС" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводок                                   " Наименование="ТаблицаПроводок" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаПроводокОбороты                            " Наименование="ТаблицаПроводокОбороты" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаСчетовРазделовУчета                        " Наименование="Таблица соответствий разделов учета документа ввода остатков и счетов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>ОбъектыУчета</Код>
			<Наименование>Объекты учета</Наименование>
			<Порядок>50</Порядок>
			<Группа>
				<Код>Справочники</Код>
				<Наименование>Справочники</Наименование>
				<Порядок>100</Порядок>
				<Правило>
					<Код>БанковскиеСчета</Код>
					<Наименование>СправочникСсылка.БанковскиеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
					<Порядок>50</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.БанковскиеСчета</Источник>
					<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
					<Свойства>
						<Свойство>
							<Код>11</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование>Номер --&gt; НомерСчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>БанкОрганизации --&gt; Банк</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
							<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>МесяцПрописью --&gt; МесяцПрописью</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="МесяцПрописью" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="МесяцПрописью" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>СуммаБез00Копеек --&gt; СуммаБезКопеек</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="СуммаБез00Копеек" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаБезКопеек" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидСчета</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Расчетный";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>НомерИДатаРазрешения --&gt; НомерИДатаРазрешения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерИДатаРазрешения" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ДатаОткрытияСчета --&gt; ДатаОткрытия</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ДатаОткрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОткрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ДатаЗакрытияСчета --&gt; ДатаЗакрытия</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="ДатаЗакрытияСчета" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаЗакрытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Владелец</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Владелец" Вид="Свойство"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСчета = Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	Значение = Параметры.Рубли;
	ИмяПКО = "Валюты";
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ВсегдаУказыватьКПП --&gt; ВсегдаУказыватьКПП</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НоменклатурныеГруппы</Код>
					<Наименование>СправочникСсылка.ВидыНоменклатуры --&gt; СправочникСсылка.НоменклатурныеГруппы</Наименование>
					<Порядок>100</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<Источник>СправочникСсылка.ВидыДеятельности</Источник>
					<Приемник>СправочникСсылка.НоменклатурныеГруппы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентов</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>150</Порядок>
					<ПередВыгрузкой>ВидДоговора = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
ВесДоговора = Параметры.ПараметрыАлгоритмов.Получить("ВесДоговора");
Если (ПустоеЗначение(Источник) = 0) и (ВидДоговора &lt;&gt; "Прочее") и (ПустоеЗначение(ВидДоговора) = 0) Тогда
	Если ПустоеЗначение(ВесДоговора)=1 Тогда
		ВесДоговора = 1;
	КонецЕсли;
	Если Источник.ЭтоГруппа() = 0 Тогда
		НомСтр = 0;
		Если Параметры.ТаблицаДоговоров.НайтиЗначение(Источник, НомСтр, "Договор") = 0 Тогда
			Параметры.ТаблицаДоговоров.НоваяСтрока();
			Параметры.ТаблицаДоговоров.Договор = Источник;
			Параметры.ТаблицаДоговоров.ВидыДоговора = СоздатьОбъект("ТаблицаЗначений");
			Параметры.ТаблицаДоговоров.ВидыДоговора.НоваяКолонка("ВидДоговора");
			Параметры.ТаблицаДоговоров.ВидыДоговора.НоваяКолонка("ВесДоговора");
			Параметры.ТаблицаДоговоров.ВидыДоговора.НоваяСтрока();
			Параметры.ТаблицаДоговоров.ВидыДоговора.ВидДоговора = ВидДоговора;
			Параметры.ТаблицаДоговоров.ВидыДоговора.ВесДоговора = ВесДоговора;
		Иначе
			ВидыДоговора = Параметры.ТаблицаДоговоров.ПолучитьЗначение(НомСтр,"ВидыДоговора");
			НомВид = 0;
			Если ВидыДоговора.НайтиЗначение(ВидДоговора,НомВид,"ВидДоговора")=1 Тогда
				ВидыДоговора.ПолучитьСтрокуПоНомеру(НомВид);
				ВидыДоговора.ВесДоговора = ВидыДоговора.ВесДоговора + ВесДоговора;
			Иначе
				ВидыДоговора.НоваяСтрока();
				ВидыДоговора.ВидДоговора = ВидДоговора;
				ВидыДоговора.ВесДоговора = ВесДоговора;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора","");</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Параметры.ВыгружатьКоды = 1 Тогда
	Значение = ПривестиНомерКДлине(Источник.Код, Параметры.ДлинаКода);
	
Иначе
	Отказ = 1 ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование>ВалютаДоговора --&gt; ВалютаВзаиморасчетов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВалютаВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.ВалютаДоговора) = 1 Тогда
	Значение = Параметры.Рубли;
	//ИмяПКО = "ВалютаРуб";
Иначе
	Значение = Источник.ВалютаДоговора;
	//ИмяПКО = "Валюты";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; РасчетыВУсловныхЕдиницах</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="РасчетыВУсловныхЕдиницах" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ОплатаДоговора = 2 Тогда
	Значение = 0;
ИначеЕсли ПустоеЗначение(Источник.ВалютаДоговора) = 0 Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование> --&gt; ВидДоговора</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора")) = 0 Тогда
	Значение = Параметры.ПараметрыАлгоритмов.Получить("ВидДоговора");
Иначе
	Значение = "Прочее";
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>ВидДоговора --&gt; ВидВзаиморасчетов</Наименование>
								<Порядок>850</Порядок>
								<Источник Имя="ВидДоговора" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоговоров"/>
								<Приемник Имя="ВидВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.ВидыВзаиморасчетов"/>
								<КодПравилаКонвертации>ВидыВзаиморасчетов                                </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорыКонтрагентовПоВидам</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; СправочникСсылка.ДоговорыКонтрагентов</Наименование>
					<Порядок>200</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>1</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Владелец --&gt; Владелец</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидДоговора</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтавкиНДС</Код>
					<Наименование>СправочникСсылка.СтавкиНДС --&gt; ПеречислениеСсылка.СтавкиНДС</Наименование>
					<Порядок>250</Порядок>
					<ПередВыгрузкой>Если Источник.Ставка = 18 Тогда
	Значение = "НДС18";
	
ИначеЕсли Источник.Ставка = 10 Тогда
	Значение = "НДС10";
	
ИначеЕсли Источник.Ставка = 20 Тогда
	Значение = "НДС20";
	
Иначе
	Значение = "БезНДС";
КонецЕсли;</ПередВыгрузкой>
					<Источник>СправочникСсылка.СтавкиНДС</Источник>
					<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
					<Свойства/>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Контрагенты</Код>
					<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.Контрагенты</Наименование>
					<Порядок>300</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Контрагенты</Источник>
					<Приемник>СправочникСсылка.Контрагенты</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>12</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>9</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, СокрЛП(Лев(Источник.ИНН, 10)), СокрЛП(Источник.ИНН));
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Значение = ?(СтрДлина(СокрЛП(Источник.ИНН)) &gt; 12, СокрЛП(Сред(Источник.ИНН, 12, 9)), "");
	
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>8</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>ОсновнойДоговор --&gt; ОсновнойДоговорКонтрагента</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ОсновнойДоговор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
								<Приемник Имя="ОсновнойДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>ОсновнойСчет --&gt; ОсновнойБанковскийСчет</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ОсновнойСчет" Вид="Реквизит" Тип="СправочникСсылка.РасчетныеСчета"/>
								<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
								<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование>ВидКонтрагента --&gt; ЮридическоеФизическоеЛицо</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="ВидКонтрагента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыКонтрагентов"/>
								<Приемник Имя="ЮридическоеФизическоеЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
								<КодПравилаКонвертации>ЮрФизЛицо                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование> --&gt; ДокументУдостоверяющийЛичность</Наименование>
								<Порядок>1100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументУдостоверяющийЛичность" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = ", серия: " + Источник.ДокументСерия + ", № " + Источник.ДокументНомер + ", выдан: "+ Источник.ДокументДатаВыдачи + ", " + Источник.ДокументКемВыдан;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>КодОКПО --&gt; КодПоОКПО</Наименование>
								<Порядок>1150</Порядок>
								<Источник Имя="КодОКПО" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ГоловнойКонтрагент</Наименование>
								<Порядок>1200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГоловнойКонтрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>15</Код>
							<Наименование> --&gt; КонтактнаяИнформация</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КонтактнаяИнформация" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа()=1 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
	КоллекцияОбъектов.НоваяКолонка("Тип");
	КоллекцияОбъектов.НоваяКолонка("Вид");
	КоллекцияОбъектов.НоваяКолонка("АдресЭП");
	КоллекцияОбъектов.НоваяКолонка("Город");
	КоллекцияОбъектов.НоваяКолонка("ДоменноеИмяСервера");
	КоллекцияОбъектов.НоваяКолонка("ЗначенияПолей");
	КоллекцияОбъектов.НоваяКолонка("НомерТелефона");
	КоллекцияОбъектов.НоваяКолонка("НомерТелефонаБезКодов"); 
	КоллекцияОбъектов.НоваяКолонка("Представление");
	КоллекцияОбъектов.НоваяКолонка("Регион");
	КоллекцияОбъектов.НоваяКолонка("Страна");

	//Телефон контрагента
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Телефон";
	КоллекцияОбъектов.Вид = "ТелефонКонтрагента";
	КоллекцияОбъектов.Представление = СокрЛП(Источник.Телефоны);
	КоллекцияОбъектов.ЗначенияПолей = "НомерТелефона="+СокрЛП(Источник.Телефоны);
	КоллекцияОбъектов.НомерТелефона = СокрЛП(Источник.Телефоны);
	КоллекцияОбъектов.НомерТелефонаБезКодов = СокрЛП(Источник.Телефоны); 

    //Юридический адрес контрагента
	Параметры.ПараметрыАлгоритмов.Установить("Адрес", Источник.ЮридическийАдрес);
	СтруктураАдреса = ПолучитьСтруктуруАдреса();
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Адрес";
	КоллекцияОбъектов.Вид = "ЮрАдресКонтрагента";
	КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
	КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
	КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
	КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
	КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");

    //Фактический адрес
	Параметры.ПараметрыАлгоритмов.Установить("Адрес", Источник.ПочтовыйАдрес);
	СтруктураАдреса = ПолучитьСтруктуруАдреса();
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Адрес";
	КоллекцияОбъектов.Вид = "ФактАдресКонтрагента";
	КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
	КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
	КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
	КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
	КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");

    //Почтовый адрес
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Адрес";
	КоллекцияОбъектов.Вид = "ПочтовыйАдресКонтрагента";
	КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
	КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
	КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
	КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
	КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; Тип</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Вид</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Вид" Вид="Реквизит" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; АдресЭП</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="АдресЭП" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; Город</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; ДоменноеИмяСервера</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоменноеИмяСервера" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; ЗначенияПолей</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЗначенияПолей" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; НомерТелефона</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерТелефона" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; НомерТелефонаБезКодов</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерТелефонаБезКодов" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; Представление</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Представление" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; Регион</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Регион" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; Страна</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Страна" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>16</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; СтранаРегистрации</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтранаРегистрации" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
							<КодПравилаКонвертации>СтранаРегистрации                                 </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "643";
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Код", Значение);</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.ДоходыБудущихПериодов --&gt; СправочникСсылка.ДоходыБудущихПериодов</Наименование>
					<Порядок>350</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ДоходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.ДоходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Склады</Код>
					<Наименование>СправочникСсылка.МестаХранения --&gt; СправочникСсылка.Склады</Наименование>
					<Порядок>400</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.МестаХранения</Источник>
					<Приемник>СправочникСсылка.Склады</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ТипСклада --&gt; ТипСклада</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ТипСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыСкладов"/>
							<Приемник Имя="ТипСклада" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыСкладов"/>
							<КодПравилаКонвертации>ВидыСкладов                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСклада = Перечисление.ТипыСкладов.Розничный Тогда
	Если Параметры.СписокСкладовНТТ.НайтиЗначение(Источник)&gt;0 Тогда
		Значение = "НеавтоматизированнаяТорговаяТочка";
	Иначе
		Значение = "РозничныйМагазин";
	КонецЕсли;
Иначе
	Значение = "ОптовыйСклад";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ТипЦен --&gt; ТипЦенРозничнойТорговли</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦенРозничнойТорговли" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НематериальныеАктивы</Код>
					<Наименование>СправочникСсылка.НематериальныеАктивы --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>450</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.НематериальныеАктивы</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>9</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа()=1 Тогда
	Отказ = 1;
Иначе
	Значение = "НематериальныйАктив";
КонецЕсли;
	
</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>3</Код>
								<Наименование>Группа --&gt; ВидНМА</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Группа" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНМА"/>
								<Приемник Имя="ВидНМА" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНМА"/>
								<КодПравилаКонвертации>ВидыНМА                                           </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>1050</Порядок>
								<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; ПрочиеСведения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
Иначе
	Значение = СокрЛП(Источник.ПрочиеСведения) + " # ИНН организации: " + СокрЛП(Константа.ИННОрганизации) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НомераГТД</Код>
					<Наименование>СправочникСсылка.ГТД --&gt; СправочникСсылка.НомераГТД</Наименование>
					<Порядок>500</Порядок>
					<Источник>СправочникСсылка.ГТД</Источник>
					<Приемник>СправочникСсылка.НомераГТД</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Номенклатура</Код>
					<Наименование>СправочникСсылка.Номенклатура --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>550</Порядок>
					<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 0 Тогда
	Отказ = 0;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа()=0 Тогда
	Если Источник.АлкогольнаяПродукция = 1 Тогда
		ВыгрузитьПоПравилу(Источник,,,,"СведенияОбАлкогольнойПродукции");
	КонецЕсли;
КонецЕсли;
</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Номенклатура</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>РодительНоменклатуры                              </КодПравилаКонвертации>
							<ПередВыгрузкой>ТипНоменклатуры = Источник.ТипНоменклатуры;

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
			
	ИмяГруппы = "Товары";
	Если ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		ИмяГруппы = "Продукция";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал Тогда
		ИмяГруппы = "Материалы";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		ИмяГруппы = "Услуги";
	КонецЕсли;
	
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = 1;
Иначе
	
	ИмяГруппы = Источник.Родитель.Наименование + " (" + ТипНоменклатуры + ")";
	ИмяПКО = "РодительНоменклатуры";
	
КонецЕсли;

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("ТипНоменклатуры", ТипНоменклатуры);
ИсходящиеДанные.Установить("Наименование", ИмяГруппы);</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда
	Отказ = 0;
Иначе
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство Поиск="true">
								<Код>5</Код>
								<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.ПолнНаименование) = 1 Тогда
	Значение = Источник.Наименование;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование>ВидНоменклатуры --&gt; НоменклатурнаяГруппа</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="ВидДеятельности" Вид="Реквизит" Тип="СправочникСсылка.ВидыДеятельности"/>
								<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.ЕдиницыИзмерений"/>
								<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
								<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="СправочникСсылка.СтавкиНДС"/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(Источник.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
	
ИначеЕсли Источник.СтавкаНДС.Ставка = 18 Тогда
	Значение = "НДС18";
	
ИначеЕсли Источник.СтавкаНДС.Ставка = 10 Тогда
	Значение = "НДС10";
	
ИначеЕсли Источник.СтавкаНДС.Ставка = 20 Тогда
	Значение = "НДС20";
	
Иначе
	Значение = "БезНДС";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>СтранаПроисхождения --&gt; СтранаПроисхождения</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>КлассификаторСтранМира                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование> --&gt; Услуга</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Если Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
	Значение = 1;
	
ИначеЕсли Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
	Значение = 1;
	
ИначеЕсли Источник.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
	Значение = 1;
	
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование>Производитель --&gt; Производитель</Наименование>
								<Порядок>1050</Порядок>
								<Источник Имя="Производитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<Приемник Имя="Производитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>Импортер --&gt; Импортер</Наименование>
								<Порядок>1100</Порядок>
								<Источник Имя="Импортер" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<Приемник Имя="Импортер" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КлассификаторСтранМира</Код>
					<Наименование>Строка --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
					<Порядок>600</Порядок>
					<НеЗамещать>true</НеЗамещать>
					<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
					<Источник>Строка</Источник>
					<Приемник>СправочникСсылка.СтраныМира</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник = 1 Тогда
	Значение = "РОССИЯ";
Иначе
	Значение = Источник;
КонецЕслИ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; НаименованиеПолное</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник = 1 Тогда
	Значение = "Российская Федерация";
Иначе
	Значение = Источник;
КонецЕслИ;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник = 1 Тогда
	Значение = 643;
Иначе
	Значение = Источник;
КонецЕслИ;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_4</Код>
					<Наименование>СправочникСсылка.ОбъектыВнеоборотныхАктивов --&gt; СправочникСсылка.Номенклатура</Наименование>
					<Порядок>650</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыВнеоборотныхАктивов</Источник>
					<Приемник>СправочникСсылка.Номенклатура</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "С"+ПривестиНомерКДлине(Источник.Код, 7);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("Наименование", "Оборудование (объекты основных средств)");
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Услуга</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Услуга" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Отказ  = Источник.ЭтоГруппа(); Значение = 0;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_3</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.ОбъектыСтроительства</Наименование>
					<Порядок>700</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыВнеоборотныхАктивов</Источник>
					<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОбъектыСтроительства_08_5_08_8</Код>
					<Наименование>СправочникСсылка.ОбъектыСтроительства --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
					<Порядок>750</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОбъектыВнеоборотныхАктивов</Источник>
					<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>3</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "С"+ПривестиНомерКДлине(Источник.Код, 7);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true" Обязательное="true">
							<Код>6</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>ОбъектыСтроительства_08_5_08_8                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; НаименованиеПолное</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); Значение = Источник.Наименование;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();
Значение = "НематериальныйАктив";

Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	Счет = ВходящиеДанные.Получить("Счет");
	Если ПустоеЗначение(Счет) = 0 Тогда
		Если Счет = СчетПоКоду("08.8") Тогда
			Значение = "РасходыНаНИОКР";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОсновныеСредства</Код>
					<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.ОсновныеСредства</Наименование>
					<Порядок>800</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОсновныеСредства</Источник>
					<Приемник>СправочникСсылка.ОсновныеСредства</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>10</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>7</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>//Значение = ПривестиНомерКДлине(Источник.Код, 8);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>ПрочиеСведения --&gt; Комментарий</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = СокрЛП(Источник.ПрочиеСведения + " # ИНН организации: " + СокрЛП(Константа.ИННОрганизации) + "; инв. ном.: " + СокрЛП(Источник.Код) + " #");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>3</Код>
								<Наименование>Группа --&gt; ГруппаОС</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Группа" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
								<Приемник Имя="ГруппаОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
								<КодПравилаКонвертации>ГруппыОС                                          </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование>ПрочиеСведения --&gt; НаименованиеПолное</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ПрочиеСведения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>ШифрПоЕНАОФ --&gt; ШифрПоЕНАОФ</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕН"/>
								<Приемник Имя="ШифрПоЕНАОФ" Вид="Реквизит" Тип="СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов"/>
								<КодПравилаКонвертации>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>2</Код>
								<Наименование>АмортизационнаяГруппа --&gt; АмортизационнаяГруппа</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<Приемник Имя="АмортизационнаяГруппа" Вид="Реквизит" Тип="ПеречислениеСсылка.АмортизационныеГруппы"/>
								<КодПравилаКонвертации>АмортизационныеГруппы                             </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрочиеДоходыИРасходы</Код>
					<Наименование>СправочникСсылка.ПрочиеДоходыИРасходы --&gt; СправочникСсылка.ПрочиеДоходыИРасходы</Наименование>
					<Порядок>850</Порядок>
					<Источник>СправочникСсылка.ПрочиеДоходыИРасходы</Источник>
					<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ВидПрочихДоходовИРасходов --&gt; ВидПрочихДоходовИРасходов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
							<КодПравилаКонвертации>ВидыПрочихДоходовИРасходов                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Значение = "ОсновнаяСистемаНалогообложения";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РасходыБудущихПериодов</Код>
					<Наименование>СправочникСсылка.РасходыБудущихПериодов --&gt; СправочникСсылка.РасходыБудущихПериодов</Наименование>
					<Порядок>900</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ПослеЗагрузки>
//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетЗатрат");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоЗатрат");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
</ПослеЗагрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.РасходыБудущихПериодов</Источник>
					<Приемник>СправочникСсылка.РасходыБудущихПериодов</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>4</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаНачалаСписания --&gt; ДатаНачалаСписания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДатаНачалаСписания" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачалаСписания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаОкончанияСписания --&gt; ДатаОкончанияСписания</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ДатаОкончанияСписания" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияСписания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>СчетЗатрат --&gt; СчетЗатрат</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Основной"/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Субконто1 --&gt; СубконтоЗатрат1</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Субконто1" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Субконто2 --&gt; СубконтоЗатрат2</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="Субконто2" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Субконто3 --&gt; СубконтоЗатрат3</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="Субконто3" Вид="Реквизит"/>
							<Приемник Имя="СубконтоЗатрат3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВидРБП</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРБП" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРБП"/>
							<ПередВыгрузкой>Значение = "Прочие";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; СпособПризнанияРасходов</Наименование>
							<Порядок>1550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПризнанияРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПризнанияРасходов"/>
							<ПередВыгрузкой>Значение = "ПоМесяцам";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ВидАктива</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидАктива" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыАктивовДляРБП"/>
							<ПередВыгрузкой>Значение = "ПрочиеОборотныеАктивы";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Резервы</Код>
					<Наименование>СправочникСсылка.Резервы --&gt; СправочникСсылка.Резервы</Наименование>
					<Порядок>950</Порядок>
					<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Резервы</Источник>
					<Приемник>СправочникСсылка.Резервы</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>2</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ФизическиеЛица</Код>
					<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>1000</Порядок>
					<ПослеВыгрузки>Если Источник.ЭтоГруппа() = 0 Тогда

	ВычетыСотрудниковпоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковпоНДФЛ");
	ВычетыСотрудниковпоНДФЛ.ИспользоватьВладельца(Источник);
	Параметры.ВычетыСотрудниковпоНДФЛ.УдалитьСтроки();
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.УдалитьСтроки();

	НомСтроки = 0;
	Если Параметры.СписокРаботников.НайтиЗначение(Источник, НомСтроки, "ФизЛицо") = 0 Тогда
		Параметры.СписокРаботников.НоваяСтрока();
		Параметры.СписокРаботников.ФизЛицо = Источник;
	КонецЕсли;
	
	ПолноеИмя = Источник.Наименование;
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Фамилия", Фамилия);
		ВходящиеДанные.Установить("Имя", ИмяОтчество);
		ВходящиеДанные.Установить("Отчество", "");

		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			
			ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
			ВходящиеДанные.Установить("Отчество", Отчество);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОФизЛиц");
	КонецЕсли;

	ВыгрузитьПоПравилу(Источник,,,, "СведенияОбИнвалидностиФизлиц");
	ВыгрузитьПоПравилу(Источник,,,, "ПаспортныеДанныеФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусФизЛицКакНалогоплательщиковНДФЛ");
	ВыгрузитьПоПравилу(Источник,,,, "ГражданствоФизЛиц");
	ВыгрузитьПоПравилу(Источник,,,, "СтатусыЗастрахованныхФизическихЛиц");

	ВыгрузитьПоПравилу(Источник,,,, "ДоходыПредыдущегоМестаРаботыНДФЛ");
	
    //Выгрузка стандартных вычетов сотрудника
	ВычетыСотрудниковпоНДФЛ.ВыбратьЭлементы();
	Пока ВычетыСотрудниковпоНДФЛ.ПолучитьЭлемент() = 1 Цикл
		
		Если ВычетыСотрудниковпоНДФЛ.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "103")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "104")
			И (ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009 &lt;&gt; "105") Тогда
			
			Параметры.ВычетыСотрудниковпоНДФЛ.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛ.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета = ВычетыСотрудниковпоНДФЛ.ВидВычета;
			Параметры.ВычетыСотрудниковпоНДФЛ.КоличествоДетей = 1;
			Параметры.ВычетыСотрудниковпоНДФЛ.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
			Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаОкончания) = 1, "",КонМесяца(ВычетыСотрудниковпоНДФЛ.ДатаОкончания));			
			
		Иначе
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.НоваяСтрока();
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Физлицо = Источник;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный = ВычетыСотрудниковпоНДФЛ.ВидВычета;
			Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период = ?(ПустоеЗначение(ВычетыСотрудниковпоНДФЛ.ДатаНачала) = 1, "",НачМесяца(ВычетыСотрудниковпоНДФЛ.ДатаНачала));
		КонецЕсли;
		
	КонецЦикла;
	
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.Свернуть("Физлицо, КодВычетаЛичный, Период","");
	
	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаПериодов.НоваяКолонка("Период");
	//Формируем структуру для стандартного вычета
	//Получим список периодов
	Параметры.ВычетыСотрудниковпоНДФЛ.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛ.ПолучитьСтроку() = 1 Цикл
		ТаблицаПериодов.НоваяСтрока();
		ТаблицаПериодов.Период = НачМесяца(Параметры.ВычетыСотрудниковпоНДФЛ.Период);
	КонецЦикла;
	Параметры.ВычетыСотрудниковпоНДФЛЛичный.ВыбратьСтроки();
	Пока Параметры.ВычетыСотрудниковпоНДФЛЛичный.ПолучитьСтроку() = 1 Цикл
		ТаблицаПериодов.НоваяСтрока();
		ТаблицаПериодов.Период = НачМесяца(Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период);
	КонецЦикла;
	ТаблицаПериодов.Свернуть("Период","");
	ТаблицаПериодов.Сортировать("Период");
	
	ТаблицаПериодов.ВыбратьСтроки();
	Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(ТаблицаПериодов.Период) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Месяц", ТаблицаПериодов.Период);
		ВходящиеДанные.Установить("Дата", ТаблицаПериодов.Период);
		ВходящиеДанные.Установить("Сотрудник", Источник);
		ИзменитьЛичныйВычет = 0;
		КодЛичногоВычета = 0;
		Параметры.ВычетыСотрудниковпоНДФЛЛичный.ВыбратьСтроки();
		Пока Параметры.ВычетыСотрудниковпоНДФЛЛичный.ПолучитьСтроку()=1 Цикл
			Если НачМесяца(Параметры.ВычетыСотрудниковпоНДФЛЛичный.Период) = ТаблицаПериодов.Период Тогда
				ИзменитьЛичныйВычет = 1;
				КодЛичногоВычета = Параметры.ВычетыСотрудниковпоНДФЛЛичный.КодВычетаЛичный;
			КонецЕсли;
		КонецЦикла;
		ВходящиеДанные.Установить("ИзменитьЛичныйВычет", ИзменитьЛичныйВычет);		
		Если ИзменитьЛичныйВычет = 1 Тогда
			ВходящиеДанные.Установить("КодВычетаЛичный", КодЛичногоВычета);
		КонецЕсли;
		
		ВычетыНаДетей = СоздатьОбъект("ТаблицаЗначений");
		ВычетыНаДетей.НоваяКолонка("КодВычета");
		ВычетыНаДетей.НоваяКолонка("ДействуетДо");
		
		ИзменитьВычетыНаДетей = 0;
		Параметры.ВычетыСотрудниковпоНДФЛ.ВыбратьСтроки();
		Пока Параметры.ВычетыСотрудниковпоНДФЛ.ПолучитьСтроку()=1 Цикл
			Если НачМесяца(Параметры.ВычетыСотрудниковпоНДФЛ.Период) = ТаблицаПериодов.Период Тогда
				ИзменитьВычетыНаДетей = 1;
				ВычетыНаДетей.НоваяСтрока();
				ВычетыНаДетей.КодВычета   = Параметры.ВычетыСотрудниковпоНДФЛ.КодВычета;
				ВычетыНаДетей.ДействуетДо = 
					?(ПустоеЗначение(Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения)=1,
					КонГода(Параметры.ДатаКонцаПериодаВыгрузки),Параметры.ВычетыСотрудниковпоНДФЛ.ПериодЗавершения);
			КонецЕсли;
		КонецЦикла;
		
		ВходящиеДанные.Установить("ИзменитьВычетыНаДетей", ИзменитьВычетыНаДетей);		
		ВходящиеДанные.Установить("ВычетыНаДетей", ВычетыНаДетей);
	    ВыгрузитьПоПравилу(ВходящиеДанные, , ВходящиеДанные, , "ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ");
	КонецЦикла;

КонецЕсли;</ПослеВыгрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.Сотрудники</Источник>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>11</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Источник.Код;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ИНН --&gt; ИНН</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.ЭтоГруппа() = 1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>1</Код>
							<Наименование> --&gt;</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>3</Код>
								<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
								<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование>МестоРождения --&gt; МестоРождения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование>Пол --&gt; Пол</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.Пол"/>
								<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическогоЛица"/>
								<КодПравилаКонвертации>ПолФизическихЛиц                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование>СтраховойНомерПФР --&gt; СтраховойНомерПФР</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование>Наименование --&gt; ФИО</Наименование>
								<Порядок>950</Порядок>
								<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
								<Приемник Имя="ФИО" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>12</Код>
							<Наименование> --&gt; КонтактнаяИнформация</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КонтактнаяИнформация" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа()=1 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
	КоллекцияОбъектов.НоваяКолонка("Тип");
	КоллекцияОбъектов.НоваяКолонка("Вид");
	КоллекцияОбъектов.НоваяКолонка("АдресЭП");
	КоллекцияОбъектов.НоваяКолонка("Город");
	КоллекцияОбъектов.НоваяКолонка("ДоменноеИмяСервера");
	КоллекцияОбъектов.НоваяКолонка("ЗначенияПолей");
	КоллекцияОбъектов.НоваяКолонка("НомерТелефона");
	КоллекцияОбъектов.НоваяКолонка("НомерТелефонаБезКодов"); 
	КоллекцияОбъектов.НоваяКолонка("Представление");
	КоллекцияОбъектов.НоваяКолонка("Регион");
	КоллекцияОбъектов.НоваяКолонка("Страна");

	//Телефон физ.лица
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Телефон";
	КоллекцияОбъектов.Вид = "ТелефонДомашнийФизическиеЛица";
	КоллекцияОбъектов.Представление = СокрЛП(Источник.Телефон);
	КоллекцияОбъектов.ЗначенияПолей = "НомерТелефона="+СокрЛП(Источник.Телефон);
	КоллекцияОбъектов.НомерТелефона = СокрЛП(Источник.Телефон);
	КоллекцияОбъектов.НомерТелефонаБезКодов = СокрЛП(Источник.Телефон); 

	// Адрес по прописке физ.лица
	Параметры.ПараметрыАлгоритмов.Установить("Адрес", Источник.АдресПрописка);
	СтруктураАдреса = ПолучитьСтруктуруАдреса();
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Адрес";
	КоллекцияОбъектов.Вид = "АдресПоПропискеФизическиеЛица";
	КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
	КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
	КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
	КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
	КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");

	// Фактический адрес физ.лица
	Параметры.ПараметрыАлгоритмов.Установить("Адрес", Источник.АдресФакт);
	СтруктураАдреса = ПолучитьСтруктуруАдреса();
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Тип = "Адрес";
	КоллекцияОбъектов.Вид = "АдресМестаПроживанияФизическиеЛица";
	КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
	КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
	КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
	КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
	КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Тип</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Вид</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Вид" Вид="Реквизит" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; АдресЭП</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="АдресЭП" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; Город</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ДоменноеИмяСервера</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоменноеИмяСервера" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; ЗначенияПолей</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЗначенияПолей" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; НомерТелефона</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерТелефона" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; НомерТелефонаБезКодов</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерТелефонаБезКодов" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Представление</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Представление" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Регион</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Регион" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Страна</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Страна" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиЗатратНаПроизводство</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратНаПроизводство --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1050</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.СтатьиЗатрат</Источник>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true" Обязательное="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатратНаПроизводство                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ВидРасходовНУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Значение = "ПрочиеРасходы";
Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа(); 
ОтнесениеРасходовКДеятельностиЕНВД();
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ТЗР</Код>
					<Наименование>СправочникСсылка.СтатьиЗатратНаПроизводство --&gt; СправочникСсылка.СтатьиЗатрат</Наименование>
					<Порядок>1100</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Транспортно - заготовительные расходы (1С:Бухгалтерия 7.7)";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ВидРасходовНУ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
							<ПередВыгрузкой>Значение = "ПрочиеРасходы";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
							<ПередВыгрузкой>ОтнесениеРасходовКДеятельностиЕНВД();</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЦенныеБумаги</Код>
					<Наименование>СправочникСсылка.ЦенныеБумаги --&gt; СправочникСсылка.ЦенныеБумаги</Наименование>
					<Порядок>1150</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ЦенныеБумаги</Источник>
					<Приемник>СправочникСсылка.ЦенныеБумаги</Приемник>
					<Свойства>
						<Свойство Отключить="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СотрудникиКонтрагенты</Код>
					<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
					<Порядок>1200</Порядок>
					<ПослеВыгрузки>	ПолноеИмя = Источник.Наименование;
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Фамилия", Фамилия);
		ВходящиеДанные.Установить("Имя", ИмяОтчество);
		ВходящиеДанные.Установить("Отчество", "");
		
		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			
			ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
			ВходящиеДанные.Установить("Отчество", Отчество);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОФизЛицКонтр");
	КонецЕсли;
</ПослеВыгрузки>
					<Источник>СправочникСсылка.Контрагенты</Источник>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СотрудникиОрганизаций</Код>
					<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.СотрудникиОрганизаций</Наименование>
					<Порядок>1250</Порядок>
					<ПослеВыгрузки>ВыгрузитьПоПравилу(Источник,,,,"БухучетЗарплатыСотрудников");
ВыгрузитьПоПравилу(Источник,,,,"ТекущиеКадровыеДанныеСотрудников");
ВыгрузитьПоПравилу(Источник,,,,"ТекущаяТарифнаяСтавкаСотрудников");</ПослеВыгрузки>
					<Источник>СправочникСсылка.Сотрудники</Источник>
					<Приемник>СправочникСсылка.Сотрудники</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; ФизическоеЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>13</Код>
							<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ТекущийПроцентСевернойНадбавки</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущийПроцентСевернойНадбавки" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = Источник.ПроцентСевернойНадбавки.Получить(Параметры.ДатаВводаОстатков);</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтатьиДвиженияДенежныхСредств</Код>
					<Наименование>Справочник: Движения денежных средств</Наименование>
					<Порядок>1300</Порядок>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ДвиженияДенежныхСредств</Источник>
					<Приемник>СправочникСсылка.СтатьиДвиженияДенежныхСредств</Приемник>
					<Свойства>
						<Свойство Отключить="true" Поиск="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Родитель --&gt; Родитель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ДвиженияДенежныхСредств"/>
							<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true" Обязательное="true">
							<Код>5</Код>
							<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ВидДвижения --&gt; ВидДвиженияДенежныхСредств</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ВидДвижения" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДвиженийДенежныхСредств"/>
							<Приемник Имя="ВидДвиженияДенежныхСредств" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДвиженийДенежныхСредств"/>
							<ПередВыгрузкой>Если Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "СредстваПолученныеОтПокупателейИЗаказчиков";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
		
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоПрочимОперациям Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПрочиеПоступленияПоИнвестиционнойДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
		
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ЦелевоеФинансирование Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.БезвозмездныеПоступления Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КредитыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ЗаймыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ДивидендыПроцентыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПолученныеДивиденды";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПолученоИзБанкаНаличными Тогда
	Отказ = 1;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КупляПродажаИностраннойВалюты Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПрочиеПоступления Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеПоступленияПоТекущейДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПрочиеПоступленияПоИнвестиционнойДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПрочиеРасходыПоФинансовойДеятельности";
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ОплатаОборотныхАктивов";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ОплатаТруда Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ОплатаТруда";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПлатежиВСоциальныеФонды Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ОплатаПоПенсионнымПланам";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыданныеПодотчетныеСуммы Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеРасходыПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ДолевоеУчастиеВСтроительстве Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеРасходыПоТекущейДеятельности";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеМашинОборудованияИТранспортныхСредств Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПриобретениеОбъектовОсновныхСредств";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ФинансовыеВложения Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПриобретениеЦенныхБумагИИныхФинансовыхВложений";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ДивидендыПроцентыВыплаченные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ВыплатаДивидендовПроцентов";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПлатежиВБюджет Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "РасчетыПоНалогамИСборам";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВозвратКредитовИЗаймов Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПогашениеЗаймовИКредитов";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.СданоВБанкНаличными Тогда
	Отказ = 1;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПрочиеВыплатыИПеречисления Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Текущая Тогда
		Значение = "ПрочиеРасходыПоТекущейДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПрочиеРасходыПоИнвестиционнойДеятельности";
		
	ИначеЕсли Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПрочиеРасходыПоФинансовойДеятельности";
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиЦенныхБумаг Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ВыручкаОтПродажиЦенныхБумагИИныхФинансовыхВложений";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПроцентыПолученные Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПолученныеПроценты";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПоступленияОтПогашенияЗаймов Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеДочернихОрганизаций Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ПриобретениеДочернихОрганизаций";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПредоставленныеЗаймы Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Инвестиционная Тогда
		Значение = "ЗаймыПредоставленныеДругимОрганизациям";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПоступленияОтЭмиссииАкций Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПоступленияОтЭмиссииАкций";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
ИначеЕсли Источник.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПогашениеОбязательствПоФинансовойАренде Тогда
	Если Источник.РазрезДеятельности = Перечисление.РазрезыДеятельности.Финансовая Тогда
		Значение = "ПогашениеОбязательствПоФинансовойАренде";
		
	Иначе
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ГТД_КлассификаторСтранМира</Код>
					<Наименование>Справочник: Грузовые таможенные декларации</Наименование>
					<Порядок>1350</Порядок>
					<НеЗамещать>true</НеЗамещать>
					<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
					<Источник>СправочникСсылка.ГТД</Источник>
					<Приемник>СправочникСсылка.СтраныМира</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование>СтранаПроисхождения --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>КодПоОКСМ --&gt; Код</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="КодПоОКСМ" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВидыДоходов</Код>
					<Наименование>Справочник: Виды доходов</Наименование>
					<Порядок>1400</Порядок>
					<Источник>СправочникСсылка.ВидыДоходов</Источник>
					<Приемник>СправочникСсылка.ВидыДоходовНДФЛ</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; СтавкаНалогообложенияРезидента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложенияРезидента" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
							<ПередВыгрузкой>Если Источник.Код = "1010" Тогда
	Значение = "Ставка09";
ИначеЕсли Найти(",2610,1210,3020,2740,",","+Источник.Код+",") &gt; 0  Тогда
	Значение = "Ставка35";
Иначе
	Значение = "Ставка13";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВидыАлкогольнойПродукции</Код>
					<Наименование>Справочник: Виды алкогольной продукции</Наименование>
					<Порядок>1450</Порядок>
					<Источник>СправочникСсылка.ВидыАлкогольнойПродукции</Источник>
					<Приемник>СправочникСсылка.ВидыАлкогольнойПродукции</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование>Код --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>КодВидаПродукции --&gt; КодВидаПродукции</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="КодВидаПродукции" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КодВидаПродукции" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Предприниматель</Код>
					<Наименование>: </Наименование>
					<Порядок>1500</Порядок>
					<ПослеВыгрузки>ПолноеИмя = Константа.ПолноеНаименованиеОрганизации;
ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
Если ПозицияПервогоПробела &lt;&gt; 0 Тогда
	Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
	ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
	ИмяОтчество = СокрЛ(ИмяОтчество);
	Имя = Лев(ИмяОтчество, 1)+".";
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Фамилия", Фамилия);
	ВходящиеДанные.Установить("Имя", ИмяОтчество);
	ВходящиеДанные.Установить("Отчество", "");

	ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
	Если ПозицияВторогоПробела &lt;&gt; 0 Тогда
		Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
		Отчество = СокрЛ(Отчество);
		
		ВходящиеДанные.Установить("Имя", Лев(ИмяОтчество, ПозицияВторогоПробела));
		ВходящиеДанные.Установить("Отчество", Отчество);
	КонецЕсли;
	
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ФИОПредпринимателя");
КонецЕсли;

</ПослеВыгрузки>
					<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Константа.НаименованиеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ФИО</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФИО" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Константа.ПолноеНаименованиеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ИНН</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = СокрЛП(Константа.ИННОрганизации);</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>3</Код>
							<Наименование> --&gt; КонтактнаяИнформация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КонтактнаяИнформация" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Тип");
КоллекцияОбъектов.НоваяКолонка("Вид");
КоллекцияОбъектов.НоваяКолонка("АдресЭП");
КоллекцияОбъектов.НоваяКолонка("Город");
КоллекцияОбъектов.НоваяКолонка("ДоменноеИмяСервера");
КоллекцияОбъектов.НоваяКолонка("ЗначенияПолей");
КоллекцияОбъектов.НоваяКолонка("НомерТелефона");
КоллекцияОбъектов.НоваяКолонка("НомерТелефонаБезКодов"); 
КоллекцияОбъектов.НоваяКолонка("Представление");
КоллекцияОбъектов.НоваяКолонка("Регион");
КоллекцияОбъектов.НоваяКолонка("Страна");

//Телефон физ.лица
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Телефон";
КоллекцияОбъектов.Вид = "ТелефонДомашнийФизическиеЛица";
КоллекцияОбъектов.Представление = СокрЛП(Константа.ТелефоныОрганизации);
КоллекцияОбъектов.ЗначенияПолей = "НомерТелефона="+СокрЛП(Константа.ТелефоныОрганизации);
КоллекцияОбъектов.НомерТелефона = СокрЛП(Константа.ТелефоныОрганизации);
КоллекцияОбъектов.НомерТелефонаБезКодов = СокрЛП(Константа.ТелефоныОрганизации); 

// Адрес по прописке физ.лица
Параметры.ПараметрыАлгоритмов.Установить("Адрес", Константа.АдресОрганизации);
СтруктураАдреса = ПолучитьСтруктуруАдреса();
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Адрес";
КоллекцияОбъектов.Вид = "АдресПоПропискеФизическиеЛица";
КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");

// Фактический адрес физ.лица
Параметры.ПараметрыАлгоритмов.Установить("Адрес", Константа.ПочтовыйАдресОрганизации);
СтруктураАдреса = ПолучитьСтруктуруАдреса();
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Адрес";
КоллекцияОбъектов.Вид = "АдресМестаПроживанияФизическиеЛица";
КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; АдресЭП</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="АдресЭП" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; Вид</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Вид" Вид="Реквизит" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Город</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ДоменноеИмяСервера</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоменноеИмяСервера" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; ЗначенияПолей</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЗначенияПолей" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; НомерТелефона</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерТелефона" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; НомерТелефонаБезКодов</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерТелефонаБезКодов" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Представление</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Представление" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Регион</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Регион" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Страна</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Страна" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; Тип</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Группа>
				<Код>Перечисления</Код>
				<Наименование>Перечисления</Наименование>
				<Порядок>200</Порядок>
				<Правило>
					<Код>ВидыПлатежейВБюджет</Код>
					<Наименование>ПеречислениеСсылка.ВидыПлатежейВБюджет --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
					<Порядок>300</Порядок>
					<Источник>ПеречислениеСсылка.ВидыПлатежей</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Налог --&gt; Налог</Наименование>
							<Порядок>100</Порядок>
							<Источник>Налог</Источник>
							<Приемник>Налог</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НалогСам --&gt; НалогСам</Наименование>
							<Порядок>200</Порядок>
							<Источник>НалогСам</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НалогАкт --&gt; НалогАкт</Наименование>
							<Порядок>300</Порядок>
							<Источник>НалогАкт</Источник>
							<Приемник>НалогАкт</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>Штраф --&gt; Штраф</Наименование>
							<Порядок>400</Порядок>
							<Источник>Штраф</Источник>
							<Приемник>Штраф</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>Пени --&gt; ПениСам</Наименование>
							<Порядок>500</Порядок>
							<Источник>ПениСам</Источник>
							<Приемник>ПениСам</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ПениАкт --&gt; ПениАкт</Наименование>
							<Порядок>600</Порядок>
							<Источник>ПениАкт</Источник>
							<Приемник>ПениАкт</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>НеПринято --&gt; НеПринято</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринято</Источник>
							<Приемник>НеПринято</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>ПолученоИзФонда --&gt; ПолученоИзФонда</Наименование>
							<Порядок>800</Порядок>
							<Источник>ПолученоИзФонда</Источник>
							<Приемник>ПолученоИзФонда</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>РасходыПоСтрахованию --&gt; РасходыПоСтрахованию</Наименование>
							<Порядок>900</Порядок>
							<Источник>РасходыПоСтрахованию</Источник>
							<Приемник>РасходыПоСтрахованию</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыПлатежейВФонды</Код>
					<Наименование>ПеречислениеСсылка.ВидыПлатежейВФонды --&gt; ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Наименование>
					<Порядок>400</Порядок>
					<Источник>ПеречислениеСсылка.ВидыПлатежей</Источник>
					<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Взносы --&gt; Налог</Наименование>
							<Порядок>100</Порядок>
							<Источник>Налог</Источник>
							<Приемник>Налог</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ВзносыСам --&gt; НалогСам</Наименование>
							<Порядок>200</Порядок>
							<Источник>НалогСам</Источник>
							<Приемник>НалогСам</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ВзносыАкт --&gt; НалогСам</Наименование>
							<Порядок>300</Порядок>
							<Источник>НалогАкт</Источник>
							<Приемник>НалогАкт</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ПениСам --&gt; ПениСам</Наименование>
							<Порядок>400</Порядок>
							<Источник>ПениСам</Источник>
							<Приемник>ПениСам</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ПениАкт --&gt; ПениАкт</Наименование>
							<Порядок>500</Порядок>
							<Источник>ПениАкт</Источник>
							<Приемник>ПениАкт</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>Путевки --&gt; РасходыПоСтрахованию</Наименование>
							<Порядок>600</Порядок>
							<Источник>РасходыПоСтрахованию</Источник>
							<Приемник>РасходыПоСтрахованию</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>НеПринято --&gt; НеПринято</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринято</Источник>
							<Приемник>НеПринято</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>Штраф --&gt; Штраф</Наименование>
							<Порядок>800</Порядок>
							<Источник>Штраф</Источник>
							<Приемник>Штраф</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ПолученоИзфонда --&gt; ПолученоИзФонда</Наименование>
							<Порядок>900</Порядок>
							<Источник>ПолученоИзФонда</Источник>
							<Приемник>ПолученоИзФонда</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>УровниБюджетов</Код>
					<Наименование>ПеречислениеСсылка.Бюджеты --&gt; ПеречислениеСсылка.УровниБюджетов</Наименование>
					<Порядок>600</Порядок>
					<Источник>ПеречислениеСсылка.Бюджеты</Источник>
					<Приемник>ПеречислениеСсылка.УровниБюджетов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>3</Код>
							<Наименование>Федеральный --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>100</Порядок>
							<Источник>Федеральный</Источник>
							<Приемник>ФедеральныйБюджет</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>Республиканский --&gt; РегиональныйБюджет</Наименование>
							<Порядок>200</Порядок>
							<Источник>Республиканский</Источник>
							<Приемник>РегиональныйБюджет</Приемник>
						</Значение>
						<Значение>
							<Код>1</Код>
							<Наименование>Местный --&gt; МестныйБюджет</Наименование>
							<Порядок>300</Порядок>
							<Источник>Местный</Источник>
							<Приемник>МестныйБюджет</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПрибылиИУбытки</Код>
					<Наименование>ПеречислениеСсылка.ПрибылиИУбытки --&gt; ПеречислениеСсылка.ПрибылиИУбытки</Наименование>
					<Порядок>900</Порядок>
					<Источник>ПеречислениеСсылка.ПрибылиИУбытки</Источник>
					<Приемник>ПеречислениеСсылка.ПрибылиИУбытки</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>4</Код>
							<Наименование>ПрибыльУбытокОтПродаж --&gt; ПрибыльУбытокОтПродаж</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПрибыльУбытокОтПродаж</Источник>
							<Приемник>ПрибыльУбытокОтПродаж</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>СальдоПрочихДоходовРасходов --&gt; СальдоПрочихДоходо</Наименование>
							<Порядок>200</Порядок>
							<Источник>СальдоПрочихДоходовРасходов</Источник>
							<Приемник>СальдоПрочихДоходовИРасходов</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ЧрезвычайныеДоходы --&gt; ЧрезвычайныеДоходыРасходы</Наименование>
							<Порядок>300</Порядок>
							<Источник>ЧрезвычайныеДоходы</Источник>
							<Приемник>ЧрезвычайныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ЧрезвычайныеРасходы --&gt; ЧрезвычайныеДоходыРасходы</Наименование>
							<Порядок>400</Порядок>
							<Источник>ЧрезвычайныеРасходы</Источник>
							<Приемник>ЧрезвычайныеДоходыРасходы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НалоговыеСанкции --&gt; НалоговыеСанкции</Наименование>
							<Порядок>600</Порядок>
							<Источник>НалоговыеСанкции</Источник>
							<Приемник>НалоговыеСанкции</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>НеПринимаемыеДляЦелейНалогообложения --&gt; ПрибыльУб</Наименование>
							<Порядок>700</Порядок>
							<Источник>НеПринимаемыеДляЦелейНалогообложения</Источник>
							<Приемник>ПрибыльУбытокОтПродаж</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ОбъектыНалогообложенияПоУСН</Код>
					<Наименование>ПеречислениеСсылка.ВариантОбъектаНалогообложения --&gt; ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН</Наименование>
					<Порядок>1000</Порядок>
					<Источник>ПеречислениеСсылка.ВариантОбъектаНалогообложения</Источник>
					<Приемник>ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Доходы --&gt; Доходы</Наименование>
							<Порядок>100</Порядок>
							<Источник>Доходы</Источник>
							<Приемник>Доходы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ДоходыМинусРасходы --&gt; ДоходыМинусРасходы</Наименование>
							<Порядок>200</Порядок>
							<Источник>ДоходыМинусРасходы</Источник>
							<Приемник>ДоходыМинусРасходы</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПорядокПризнанияРасходовПоТоварам</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов --&gt; ПеречислениеСсылка.ПорядокПризнанияМатер</Наименование>
					<Порядок>1100</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоФактуПолученияДохода --&gt; ПоФактуПолученияДохода</Наименование>
							<Порядок>200</Порядок>
							<Источник>ПоФактуПолученияДохода</Источник>
							<Приемник>ПоФактуПолученияДохода</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ПоФактуРеализации --&gt; ПоФактуРеализации</Наименование>
							<Порядок>300</Порядок>
							<Источник>ПоФактуРеализации</Источник>
							<Приемник>ПоФактуРеализации</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ПорядокПризнанияМатериальныхРасходов</Код>
					<Наименование>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов --&gt; ПеречислениеСсылка.ПорядокПризнанияМатер</Наименование>
					<Порядок>3400</Порядок>
					<Источник>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов</Источник>
					<Приемник>ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ПоОплатеПоставщику --&gt; ПоОплатеПоставщику</Наименование>
							<Порядок>100</Порядок>
							<Источник>ПоОплатеПоставщику</Источник>
							<Приемник>ПоОплатеПоставщику</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ПоФактуСписания --&gt; ПоФактуСписания</Наименование>
							<Порядок>200</Порядок>
							<Источник>ПоФактуСписания</Источник>
							<Приемник>ПоФактуСписания</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>УменьшатьРасходыНаОстатокНЗП --&gt; УменьшатьРасходыН</Наименование>
							<Порядок>300</Порядок>
							<Источник>УменьшатьРасходыНаОстатокНЗП</Источник>
							<Приемник>УменьшатьРасходыНаОстатокНЗП</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ОсобенностиИсчисленияНДФЛ</Код>
					<Наименование> --&gt; ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Наименование>
					<Порядок>3500</Порядок>
					<Источник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Источник>
					<Приемник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>СтандартныеВычетыВПределахМесячногоДохода --&gt; Стан</Наименование>
							<Порядок>100</Порядок>
							<Источник>СтандартныеВычетыВПределахМесячногоДохода</Источник>
							<Приемник>СтандартныеВычетыВПределахМесячногоДохода</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>СтандартныеВычетыНарастающимИтогом --&gt; Стандартные</Наименование>
							<Порядок>200</Порядок>
							<Источник>СтандартныеВычетыНарастающимИтогом</Источник>
							<Приемник>СтандартныеВычетыНарастающимИтогом</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ДвиженияЦелевыхСредств</Код>
					<Наименование>Перечисление: Источники целевых поступлений</Наименование>
					<Порядок>3550</Порядок>
					<Источник>ПеречислениеСсылка.ИсточникиЦелевыхПоступлений</Источник>
					<Приемник>ПеречислениеСсылка.ДвиженияЦелевыхСредств</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ВступительныеВзносы --&gt; ВступительныеВзносы</Наименование>
							<Порядок>50</Порядок>
							<Источник>ВступительныеВзносы</Источник>
							<Приемник>ВступительныеВзносы</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ДобровольныеВзносы --&gt; ДобровольныеВзносы</Наименование>
							<Порядок>100</Порядок>
							<Источник>ДобровольныеВзносы</Источник>
							<Приемник>ДобровольныеВзносы</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ЧленскиеВзносы --&gt; ЧленскиеВзносы</Наименование>
							<Порядок>150</Порядок>
							<Источник>ЧленскиеВзносы</Источник>
							<Приемник>ЧленскиеВзносы</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ДругиеИсточники --&gt; ПрочиеПоступления</Наименование>
							<Порядок>200</Порядок>
							<Источник>ДругиеИсточники</Источник>
							<Приемник>ПрочиеПоступления</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ИзБюджета --&gt; ПрочиеПоступления</Наименование>
							<Порядок>250</Порядок>
							<Источник>ИзБюджета</Источник>
							<Приемник>ПрочиеПоступления</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ИзВнебюджетныхФондов --&gt; ПрочиеПоступления</Наименование>
							<Порядок>300</Порядок>
							<Источник>ИзВнебюджетныхФондов</Источник>
							<Приемник>ПрочиеПоступления</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыСобытийОС</Код>
					<Наименование>Перечисление: </Наименование>
					<Порядок>3600</Порядок>
					<Источник>ПеречислениеСсылка.СостоянияОС</Источник>
					<Приемник>ПеречислениеСсылка.ВидыСобытийОС</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>В_Запасе --&gt; Прочее</Наименование>
							<Порядок>50</Порядок>
							<Источник>В_Запасе</Источник>
							<Приемник>Прочее</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>В_Эксплуатации --&gt; ПринятиеКУчету</Наименование>
							<Порядок>100</Порядок>
							<Источник>В_Эксплуатации</Источник>
							<Приемник>ПринятиеКУчету</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>Выбыло --&gt; Списание</Наименование>
							<Порядок>150</Порядок>
							<Источник>Выбыло</Источник>
							<Приемник>Списание</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>Иное --&gt; Прочее</Наименование>
							<Порядок>200</Порядок>
							<Источник>Иное</Источник>
							<Приемник>Прочее</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>НаКапитальномРемонте --&gt; КапитальныйРемонт</Наименование>
							<Порядок>250</Порядок>
							<Источник>НаКапитальномРемонте</Источник>
							<Приемник>КапитальныйРемонт</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>НаКонсервации --&gt; Прочее</Наименование>
							<Порядок>300</Порядок>
							<Источник>НаКонсервации</Источник>
							<Приемник>Прочее</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ПереданоВТекущуюАренду --&gt; Прочее</Наименование>
							<Порядок>350</Порядок>
							<Источник>ПереданоВТекущуюАренду</Источник>
							<Приемник>Прочее</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВариантыУчетаРасходовДляНУ</Код>
					<Наименование>Перечисление: Варианты учета расходов для целей налогового учета</Наименование>
					<Порядок>3650</Порядок>
					<Источник>ПеречислениеСсылка.ВариантыУчетаРасходовДляНУ</Источник>
					<Приемник>ПеречислениеСсылка.ОтражениеВУСН</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>НеПринимаются --&gt; НеПринимаются</Наименование>
							<Порядок>50</Порядок>
							<Источник>НеПринимаются</Источник>
							<Приемник>НеПринимаются</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>Принимаются --&gt; Принимаются</Наименование>
							<Порядок>100</Порядок>
							<Источник>Принимаются</Источник>
							<Приемник>Принимаются</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>Распределяются --&gt; Распределяются</Наименование>
							<Порядок>150</Порядок>
							<Источник>Распределяются</Источник>
							<Приемник>Распределяются</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыДвиженийДенежныхСредств</Код>
					<Наименование>Перечисление: Виды движений денежных средств</Наименование>
					<Порядок>3700</Порядок>
					<Источник>ПеречислениеСсылка.ВидыДвиженийДенежныхСредств</Источник>
					<Приемник>ПеречислениеСсылка.ВидыДвиженийДенежныхСредств</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>АрендныеПлатежиРоялтиЛицензионныеПлатежиГонорарыКо</Наименование>
							<Порядок>50</Порядок>
							<Источник>АрендныеПлатежиРоялтиЛицензионныеПлатежиГонорарыКомиссионные</Источник>
							<Приемник>АрендныеПлатежиРоялтиЛицензионныеПлатежиГонорарыКомиссионные</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>ВыплатаДивидендов --&gt; ВыплатаДивидендов</Наименование>
							<Порядок>100</Порядок>
							<Источник>ВыплатаДивидендов</Источник>
							<Приемник>ВыплатаДивидендов</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>ВыплатаПроцентовВСвязиСоСтроительством --&gt; Выплата</Наименование>
							<Порядок>150</Порядок>
							<Источник>ВыплатаПроцентовВСвязиСоСтроительством</Источник>
							<Приемник>ВыплатаПроцентовВСвязиСоСтроительством</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>ВыплатаПроцентовПоДолговымОбязательствам --&gt; Выпла</Наименование>
							<Порядок>200</Порядок>
							<Источник>ВыплатаПроцентовПоДолговымОбязательствам</Источник>
							<Приемник>ВыплатаПроцентовПоДолговымОбязательствам</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>ВыпускДолговыхИнструментов --&gt; ВыпускДолговыхИнстр</Наименование>
							<Порядок>250</Порядок>
							<Источник>ВыпускДолговыхИнструментов</Источник>
							<Приемник>ВыпускДолговыхИнструментов</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ВыручкаОтПродажиВнеоборотныхАктивовКромеФинансовых</Наименование>
							<Порядок>300</Порядок>
							<Источник>ВыручкаОтПродажиВнеоборотныхАктивовКромеФинансовых</Источник>
							<Приемник>ВыручкаОтПродажиВнеоборотныхАктивовКромеФинансовых</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>ОплатаТруда --&gt; ОплатаТруда</Наименование>
							<Порядок>350</Порядок>
							<Источник>ОплатаТруда</Источник>
							<Приемник>ОплатаТруда</Приемник>
						</Значение>
						<Значение>
							<Код>8</Код>
							<Наименование>ПлатежиСобственникамВСвязиСВыкупомАкцийИлиПриВыход</Наименование>
							<Порядок>400</Порядок>
							<Источник>ПлатежиСобственникамВСвязиСВыкупомАкцийИлиПриВыходеИзСоставаУчастников</Источник>
							<Приемник>ПлатежиСобственникамВСвязиСВыкупомАкцийИлиПриВыходеИзСоставаУчастников</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>ПогашениеДолговыйЦенныхБумагВозвратКредитовИЗаймов</Наименование>
							<Порядок>450</Порядок>
							<Источник>ПогашениеДолговыйЦенныхБумагВозвратКредитовИЗаймов</Источник>
							<Приемник>ПогашениеДолговыйЦенныхБумагВозвратКредитовИЗаймов</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>ПогашениеОбязательствПоФинансовойАренде --&gt; Погаше</Наименование>
							<Порядок>500</Порядок>
							<Источник>ПогашениеОбязательствПоФинансовойАренде</Источник>
							<Приемник>ПогашениеОбязательствПоФинансовойАренде</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>ПоступлениеДенежныхВкладовСобственников --&gt; Поступ</Наименование>
							<Порядок>550</Порядок>
							<Источник>ПоступлениеДенежныхВкладовСобственников</Источник>
							<Приемник>ПоступлениеДенежныхВкладовСобственников</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>ПоступлениеОтДивидендовПроцентовПоДолговымФинансов</Наименование>
							<Порядок>600</Порядок>
							<Источник>ПоступлениеОтДивидендовПроцентовПоДолговымФинансовымВложениям</Источник>
							<Приемник>ПоступлениеОтДивидендовПроцентовПоДолговымФинансовымВложениям</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>ПоступленияОтПерепродажиФинансовыхВложений --&gt; Пос</Наименование>
							<Порядок>650</Порядок>
							<Источник>ПоступленияОтПерепродажиФинансовыхВложений</Источник>
							<Приемник>ПоступленияОтПерепродажиФинансовыхВложений</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>ПоступленияОтПогашенияЗаймовПредоставленныхДругимО</Наименование>
							<Порядок>700</Порядок>
							<Источник>ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям</Источник>
							<Приемник>ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование>ПоступленияОтПогашенияЗаймовПродажиДолговыхЦенныхБ</Наименование>
							<Порядок>750</Порядок>
							<Источник>ПоступленияОтПогашенияЗаймовПродажиДолговыхЦенныхБумаг</Источник>
							<Приемник>ПоступленияОтПогашенияЗаймовПродажиДолговыхЦенныхБумаг</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование>ПоступленияОтПродажиАкцийДругихОрганизаций --&gt; Пос</Наименование>
							<Порядок>800</Порядок>
							<Источник>ПоступленияОтПродажиАкцийДругихОрганизаций</Источник>
							<Приемник>ПоступленияОтПродажиАкцийДругихОрганизаций</Приемник>
						</Значение>
						<Значение>
							<Код>17</Код>
							<Наименование>ПоступленияОтЭмиссииАкций --&gt; ПоступленияОтЭмиссии</Наименование>
							<Порядок>850</Порядок>
							<Источник>ПоступленияОтЭмиссииАкций</Источник>
							<Приемник>ПоступленияОтЭмиссииАкций</Приемник>
						</Значение>
						<Значение>
							<Код>18</Код>
							<Наименование>ПриобретениеАкцийДругихОрганизаций --&gt; Приобретени</Наименование>
							<Порядок>900</Порядок>
							<Источник>ПриобретениеАкцийДругихОрганизаций</Источник>
							<Приемник>ПриобретениеАкцийДругихОрганизаций</Приемник>
						</Значение>
						<Значение>
							<Код>19</Код>
							<Наименование>ПриобретениеДолговыхЦенныхБумагПредоставлениеЗаймо</Наименование>
							<Порядок>950</Порядок>
							<Источник>ПриобретениеДолговыхЦенныхБумагПредоставлениеЗаймов</Источник>
							<Приемник>ПриобретениеДолговыхЦенныхБумагПредоставлениеЗаймов</Приемник>
						</Значение>
						<Значение>
							<Код>20</Код>
							<Наименование>ПриобретениеДочернихОрганизаций --&gt; ПриобретениеДо</Наименование>
							<Порядок>1000</Порядок>
							<Источник>ПриобретениеДочернихОрганизаций</Источник>
							<Приемник>ПриобретениеДочернихОрганизаций</Приемник>
						</Значение>
						<Значение>
							<Код>21</Код>
							<Наименование>ПриобретениеСозданиеМодернизацияРеконструкцияВнеоб</Наименование>
							<Порядок>1050</Порядок>
							<Источник>ПриобретениеСозданиеМодернизацияРеконструкцияВнеоборотныхАктивов</Источник>
							<Приемник>ПриобретениеСозданиеМодернизацияРеконструкцияВнеоборотныхАктивов</Приемник>
						</Значение>
						<Значение>
							<Код>22</Код>
							<Наименование>ПрочиеПоступленияПоИнвестиционнойДеятельности --&gt; </Наименование>
							<Порядок>1100</Порядок>
							<Источник>ПрочиеПоступленияПоИнвестиционнойДеятельности</Источник>
							<Приемник>ПрочиеПоступленияПоИнвестиционнойДеятельности</Приемник>
						</Значение>
						<Значение>
							<Код>23</Код>
							<Наименование>ПрочиеПоступленияПоФинансовойДеятельности --&gt; Проч</Наименование>
							<Порядок>1150</Порядок>
							<Источник>ПрочиеПоступленияПоФинансовойДеятельности</Источник>
							<Приемник>ПрочиеПоступленияПоФинансовойДеятельности</Приемник>
						</Значение>
						<Значение>
							<Код>24</Код>
							<Наименование>ПрочиеРасходыПоИнвестиционнойДеятельности --&gt; Проч</Наименование>
							<Порядок>1200</Порядок>
							<Источник>ПрочиеРасходыПоИнвестиционнойДеятельности</Источник>
							<Приемник>ПрочиеРасходыПоИнвестиционнойДеятельности</Приемник>
						</Значение>
						<Значение>
							<Код>25</Код>
							<Наименование>ПрочиеРасходыПоФинансовойДеятельности --&gt; ПрочиеРа</Наименование>
							<Порядок>1250</Порядок>
							<Источник>ПрочиеРасходыПоФинансовойДеятельности</Источник>
							<Приемник>ПрочиеРасходыПоФинансовойДеятельности</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ВидыЛицензийНаПродажуАлкоголя</Код>
					<Наименование>Перечисление: Виды лицензий на продажу алкоголя</Наименование>
					<Порядок>3750</Порядок>
					<Источник>ПеречислениеСсылка.ВидыЛицензийНаПродажуАлкоголя</Источник>
					<Приемник>ПеречислениеСсылка.ВидыЛицензийНаПродажуАлкоголя</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>АлкогольнаяПродукция --&gt; АлкогольнаяПродукция</Наименование>
							<Порядок>50</Порядок>
							<Источник>АлкогольнаяПродукция</Источник>
							<Приемник>АлкогольнаяПродукция</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>Пиво --&gt; Пиво</Наименование>
							<Порядок>100</Порядок>
							<Источник>Пиво</Источник>
							<Приемник>Пиво</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>СпиртосодержащаяНеПищеваяПродукция --&gt; Спиртосодер</Наименование>
							<Порядок>150</Порядок>
							<Источник>СпиртосодержащаяНеПищеваяПродукция</Источник>
							<Приемник>СпиртосодержащаяНеПищеваяПродукция</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>СпиртосодержащаяПищеваяПродукция --&gt; Спиртосодержа</Наименование>
							<Порядок>200</Порядок>
							<Источник>СпиртосодержащаяПищеваяПродукция</Источник>
							<Приемник>СпиртосодержащаяПищеваяПродукция</Приемник>
						</Значение>
					</Значения>
				</Правило>
			</Группа>
			<Группа>
				<Код>Документы</Код>
				<Наименование>Документы</Наименование>
				<Порядок>300</Порядок>
				<Правило>
					<Код>Партия</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; ДокументСсылка.Партия</Наименование>
					<Порядок>50</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник.Владелец;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКомитентом</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКомитентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("76.5"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник);
СчетаРасчетов = ПолучитьСчетаРасчетов();
Значение = СчетаРасчетов.Получить("СчетРасчетовЗаКомиссионныеТовары");</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентом</Код>
					<Наименование>СправочникСсылка.Договоры --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>100</Порядок>
					<Источник>СправочникСсылка.Договоры</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник.Владелец;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКомитентом</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКомитентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("76.5"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник);
СчетаРасчетов = ПолучитьСчетаРасчетов();
Значение = СчетаРасчетов.Получить("СчетРасчетовЗаКомиссионныеТовары");</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентомСтр</Код>
					<Наименование>Строка --&gt; ДокументСсылка.ДокументРасчетовСКонтрагентом</Наименование>
					<Порядок>150</Порядок>
					<Источник>Строка</Источник>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение("Справочник.Договоры");</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДокументРасчетовСКонтрагентом_Документ</Код>
					<Наименование>: </Наименование>
					<Порядок>200</Порядок>
					<Приемник>ДокументСсылка.ДокументРасчетовСКонтрагентом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Если Источник.ДатаДок &lt; Параметры.ДатаВводаОстатков Тогда
	Значение = Параметры.ДатаВводаОстатков - 1;
Иначе
	Значение = Источник.ДатаДок;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Метаданные.Документ(Источник.Вид()).РеквизитШапки("Контрагент").Выбран()=1 Тогда
	Значение = Источник.Контрагент;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Метаданные.Документ(Источник.Вид()).РеквизитШапки("Договор").Выбран()=1 Тогда
	Значение = Источник.Договор;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Метаданные.Документ(Источник.Вид()).РеквизитШапки("Договор").Выбран()=1 Тогда
	Если ПустоеЗначение(Источник.Договор)=0 тогда
		Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
	Иначе
		Значение = Параметры.Рубли;
	КонецЕсли;
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если Метаданные.Документ(Источник.Вид()).РеквизитТабличнойЧасти("Всего").Выбран()=1 Тогда
	Значение = Источник.Итог("Всего");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКомитентом</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКомитентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Метаданные.Документ(Источник.Вид()).РеквизитШапки("Договор").Выбран()=1 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("76.5"));
	Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
	СчетаРасчетов = ПолучитьСчетаРасчетов();
	Значение = СчетаРасчетов.Получить("СчетРасчетовЗаКомиссионныеТовары");
Иначе
	Значение = "76.09";
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЗаписьКУДиР</Код>
					<Наименование> --&gt; ДокументСсылка.ЗаписьКУДиР</Наименование>
					<Порядок>250</Порядок>
					<ПередВыгрузкой>Если (ВходящиеДанные.Получить("Раздел1").КоличествоСтрок() = 0) и (ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0) и (ВходящиеДанные.Получить("НМА").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<Приемник>ДокументСсылка.ЗаписьКУДиР</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();
Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДопКомментарий"))=0 Тогда
		Значение = Значение + " # " + ВходящиеДанные.Получить("ДопКомментарий");
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>4</Код>
							<Наименование> --&gt; Строки</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Строки" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("Раздел1");
Если КоллекцияОбъектов.КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; ДатаНомер</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНомер" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; Содержание</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; Графа4</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа4" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Графа5</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа5" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Графа6</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа6" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Графа7</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа7" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; ДоходыЕНВД</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоходыЕНВД" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt; ОС</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; ОсновноеСредство</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; ДатаОплаты</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Графа5_ПервоначальнаяСтоимость</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа5_ПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Графа6_ОстаточнаяСтоимость</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа6_ОстаточнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; Графа8_КолКварталовВОтчетномПериоде</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа8_КолКварталовВОтчетномПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; Графа9_КолКварталовВНалПериоде</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа9_КолКварталовВНалПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Графа10_ДоляРасходовЗаНалПериод</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа10_ДоляРасходовЗаНалПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Графа11_ДоляРасходовЗаКвартал</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа11_ДоляРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; Графа12_СуммаРасходовЗаОтчетнПериод</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа12_СуммаРасходовЗаОтчетнПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Графа13_СуммаРасходовЗаКвартал</Наименование>
								<Порядок>1000</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа13_СуммаРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Графа14_РасходыПрошлыхПериодов</Наименование>
								<Порядок>1100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа14_РасходыПрошлыхПериодов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
								<Порядок>1200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>25</Код>
							<Наименование> --&gt; НМА</Наименование>
							<Порядок>550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; НематериальныйАктив</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
								<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; ДатаОплаты</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Графа5_ПервоначальнаяСтоимость</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа5_ПервоначальнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; Графа6_ОстаточнаяСтоимость</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа6_ОстаточнаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Графа8_КолКварталовВОтчетномПериоде</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа8_КолКварталовВОтчетномПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; Графа9_КолКварталовВНалПериоде</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа9_КолКварталовВНалПериоде" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; Графа10_ДоляРасходовЗаНалПериод</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа10_ДоляРасходовЗаНалПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; Графа11_ДоляРасходовЗаКвартал</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа11_ДоляРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; Графа12_СуммаРасходовЗаОтчетнПериод</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа12_СуммаРасходовЗаОтчетнПериод" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; Графа13_СуммаРасходовЗаКвартал</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа13_СуммаРасходовЗаКвартал" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; Графа15_ОстатокРасходов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Графа15_ОстатокРасходов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Группа>
					<Код>ДокументыПараметровОС</Код>
					<Наименование>ДокументыПараметровОС                             </Наименование>
					<Порядок>300</Порядок>
					<Правило>
						<Код>ВыработкаОС</Код>
						<Наименование>: </Наименование>
						<Порядок>50</Порядок>
						<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузкиДляОборотов();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("Дата"));</ПередВыгрузкой>
						<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
						<Приемник>ДокументСсылка.ВыработкаОС</Приемник>
						<Свойства>
							<Свойство Поиск="true">
								<Код>2</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Поиск="true">
								<Код>1</Код>
								<Наименование> --&gt; Комментарий</Наименование>
								<Порядок>100</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство Поиск="true">
								<Код>3</Код>
								<Наименование> --&gt; Дата</Наименование>
								<Порядок>150</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование> --&gt; ПометкаУдаления</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
							<Группа>
								<Код>5</Код>
								<Наименование> --&gt; ОС</Наименование>
								<Порядок>250</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
								<Свойство>
									<Код>7</Код>
									<Наименование> --&gt; ОсновноеСредство</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
									<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>6</Код>
									<Наименование> --&gt; Количество</Наименование>
									<Порядок>100</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>8</Код>
									<Наименование> --&gt; ПараметрВыработки</Наименование>
									<Порядок>150</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ПараметрВыработки" Вид="Реквизит" Тип="СправочникСсылка.ПараметрыВыработкиОС"/>
									<КодПравилаКонвертации>ПараметрыВыработкиОС                              </КодПравилаКонвертации>
									<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
								</Свойство>
							</Группа>
						</Свойства>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ИзменениеСостоянияОС</Код>
						<Наименование>: </Наименование>
						<Порядок>100</Порядок>
						<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузкиДляОборотов();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(ВходящиеДанные);</ПередВыгрузкой>
						<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
						<Приемник>ДокументСсылка.ИзменениеСостоянияОС</Приемник>
						<Свойства>
							<Свойство Поиск="true">
								<Код>2</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Поиск="true">
								<Код>1</Код>
								<Наименование> --&gt; Комментарий</Наименование>
								<Порядок>100</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство Поиск="true">
								<Код>3</Код>
								<Наименование> --&gt; Дата</Наименование>
								<Порядок>150</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование> --&gt; ВлияетНаНачислениеАмортизации</Наименование>
								<Порядок>200</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВлияетНаНачислениеАмортизации" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; НачислятьАмортизацию</Наименование>
								<Порядок>250</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НачислятьАмортизацию" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
								<Порядок>300</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
								<Порядок>350</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; СобытиеОС</Наименование>
								<Порядок>400</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ПометкаУдаления</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
							</Свойство>
							<Группа>
								<Код>10</Код>
								<Наименование> --&gt; ОС</Наименование>
								<Порядок>500</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
								<Свойство>
									<Код>11</Код>
									<Наименование> --&gt; ОсновноеСредство</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
									<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
								</Свойство>
							</Группа>
						</Свойства>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ИзменениеПараметровНачисленияАмортизацииОС</Код>
						<Наименование>: </Наименование>
						<Порядок>150</Порядок>
						<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузкиДляОборотов();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(ВходящиеДанные);</ПередВыгрузкой>
						<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
						<Приемник>ДокументСсылка.ИзменениеПараметровНачисленияАмортизацииОС</Приемник>
						<Свойства>
							<Свойство Поиск="true">
								<Код>2</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Поиск="true">
								<Код>1</Код>
								<Наименование> --&gt; Комментарий</Наименование>
								<Порядок>100</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство Поиск="true">
								<Код>5</Код>
								<Наименование> --&gt; Дата</Наименование>
								<Порядок>150</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
								<Порядок>200</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
								<Порядок>250</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; ПометкаУдаления</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
							<Группа>
								<Код>7</Код>
								<Наименование> --&gt; ОС</Наименование>
								<Порядок>350</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
								<Свойство>
									<Код>12</Код>
									<Наименование> --&gt; ОсновноеСредство</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
									<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>8</Код>
									<Наименование> --&gt; КоэффициентАмортизацииБУ</Наименование>
									<Порядок>100</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="КоэффициентАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>9</Код>
									<Наименование> --&gt; КоэффициентУскоренияБУ</Наименование>
									<Порядок>150</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="КоэффициентУскоренияБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>10</Код>
									<Наименование> --&gt; ОбъемПродукцииРаботБУ</Наименование>
									<Порядок>200</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ОбъемПродукцииРаботБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>11</Код>
									<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизацииБУ</Наименование>
									<Порядок>250</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>13</Код>
									<Наименование> --&gt; ПРДляВычисленияАмортизации</Наименование>
									<Порядок>300</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ПРДляВычисленияАмортизации" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>14</Код>
									<Наименование> --&gt; СрокИспользованияДляВычисленияАмортизацииБУ</Наименование>
									<Порядок>350</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="СрокИспользованияДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>15</Код>
									<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
									<Порядок>400</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>16</Код>
									<Наименование> --&gt; СрокПолезногоИспользованияНУ</Наименование>
									<Порядок>450</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="СрокПолезногоИспользованияНУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
								<Свойство>
									<Код>17</Код>
									<Наименование> --&gt; СтоимостьДляВычисленияАмортизацииБУ</Наименование>
									<Порядок>500</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="СтоимостьДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
								</Свойство>
							</Группа>
						</Свойства>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ИзменениеСпособовОтраженияРасходовПоАмортизацииОС</Код>
						<Наименование>: </Наименование>
						<Порядок>200</Порядок>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(ВходящиеДанные);</ПередВыгрузкой>
						<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
						<Приемник>ДокументСсылка.ИзменениеСпособовОтраженияРасходовПоАмортизацииОС</Приемник>
						<Свойства>
							<Свойство Поиск="true">
								<Код>2</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Поиск="true">
								<Код>1</Код>
								<Наименование> --&gt; Комментарий</Наименование>
								<Порядок>100</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство Поиск="true">
								<Код>4</Код>
								<Наименование> --&gt; Дата</Наименование>
								<Порядок>150</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование> --&gt; СпособОтраженияРасходовПоАмортизации</Наименование>
								<Порядок>200</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
								<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
								<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Дата",ВходящиеДанные.Получить("ДатаСведений"));</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; ПометкаУдаления</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
							<Группа>
								<Код>6</Код>
								<Наименование> --&gt; ОС</Наименование>
								<Порядок>300</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
								<Свойство>
									<Код>7</Код>
									<Наименование> --&gt; ОсновноеСредство</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
									<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
								</Свойство>
							</Группа>
						</Свойства>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ВыработкаНМА</Код>
						<Наименование>: </Наименование>
						<Порядок>250</Порядок>
						<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузкиДляОборотов();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(ВходящиеДанные);</ПередВыгрузкой>
						<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
						<Приемник>ДокументСсылка.ВыработкаНМА</Приемник>
						<Свойства>
							<Свойство Поиск="true">
								<Код>2</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Поиск="true">
								<Код>1</Код>
								<Наименование> --&gt; Комментарий</Наименование>
								<Порядок>100</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство Поиск="true">
								<Код>3</Код>
								<Наименование> --&gt; Дата</Наименование>
								<Порядок>150</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование> --&gt; ПометкаУдаления</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
							<Группа>
								<Код>5</Код>
								<Наименование> --&gt; НМА</Наименование>
								<Порядок>250</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
								<Свойство>
									<Код>7</Код>
									<Наименование> --&gt; НематериальныйАктив</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
									<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>6</Код>
									<Наименование> --&gt; Количество</Наименование>
									<Порядок>100</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								</Свойство>
							</Группа>
						</Свойства>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ИзменениеСпособовОтраженияРасходовПоАмортизацииНМА</Код>
						<Наименование>: </Наименование>
						<Порядок>300</Порядок>
						<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузкиДляОборотов();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(ВходящиеДанные);</ПередВыгрузкой>
						<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
						<Приемник>ДокументСсылка.ИзменениеСпособовОтраженияРасходовПоАмортизацииНМА</Приемник>
						<Свойства>
							<Свойство Поиск="true">
								<Код>2</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Поиск="true">
								<Код>4</Код>
								<Наименование> --&gt; Дата</Наименование>
								<Порядок>100</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство Поиск="true">
								<Код>1</Код>
								<Наименование> --&gt; Комментарий</Наименование>
								<Порядок>150</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>3</Код>
								<Наименование> --&gt; СпособОтраженияРасходовПоАмортизации</Наименование>
								<Порядок>200</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
								<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование> --&gt; ПометкаУдаления</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
							<Группа>
								<Код>6</Код>
								<Наименование> --&gt; НМА</Наименование>
								<Порядок>300</Порядок>
								<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
								<Свойство>
									<Код>7</Код>
									<Наименование> --&gt; НематериальныйАктив</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя="" Вид=""/>
									<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
									<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
								</Свойство>
							</Группа>
						</Свойства>
						<Значения/>
					</Правило>
				</Группа>
				<Правило>
					<Код>АвансовыйОтчет</Код>
					<Наименование>Документ: Авансовый отчет</Наименование>
					<Порядок>350</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "Прочее");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетЗатрат");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","Субконто");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);

//обрабатываем субконто НУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "Прочее");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетЗатратНУ");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоНУ");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);</ПослеЗагрузки>
					<Источник>ДокументСсылка.АвансовыйОтчет</Источник>
					<Приемник>ДокументСсылка.АвансовыйОтчет</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Валюта --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ?(ПустоеЗначение(Источник.Валюта) = 0,Источник.Валюта,Параметры.Рубли);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КурсДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если Источник.Валюта.Выбран()=1 Тогда
	Значение = Источник.Валюта.Курс.Получить(Источник.ДатаДок);
Иначе
	Значение = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КратностьДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если Источник.Валюта.Выбран()=1 Тогда
	Значение = Источник.Валюта.Кратность.Получить(Источник.ДатаДок);
Иначе
	Значение = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НазначениеАванса</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазначениеАванса" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 Тогда
	Значение = Источник.Договор.Наименование;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПриложеноДок --&gt; КоличествоДокументов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПриложеноДок" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоличествоДокументов" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>НаЛистах --&gt; КоличествоЛистов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="НаЛистах" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоличествоЛистов" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; НДСВключенВСтоимость</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВСтоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение("Справочник.МестаХранения");
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(Источник.ОсновноеСредство)=0 Тогда
		Если Источник.ОсновноеСредство.Вид()="МестаХранения" Тогда
			Значение = Источник.ОсновноеСредство;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = Источник.Итог("Сумма");</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>16</Код>
							<Наименование> --&gt; ТипЦен</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>Сотрудник --&gt; ФизЛицо</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>СотрудникиКонтрагенты                             </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>59</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидДокВходящий");
КоллекцияОбъектов.НоваяКолонка("ДатаВходящегоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерВходящегоДокумента");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДС");
КоллекцияОбъектов.НоваяКолонка("Поставщик");
КоллекцияОбъектов.НоваяКолонка("ПредъявленСФ");
КоллекцияОбъектов.НоваяКолонка("НомерСФ");
КоллекцияОбъектов.НоваяКолонка("ДатаСФ");
КоллекцияОбъектов.НоваяКолонка("СчетФактура");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");
КоллекцияОбъектов.НоваяКолонка("ОтражениеВУСН");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("10"))=1)
			или (Источник.КоррСчет=СчетПоКоду("07"))
			или (Источник.КоррСчет=СчетПоКоду("08.4"))
			или (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("41"))=1) 
			или (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("43"))=1) Тогда
			
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВидДокВходящий = Источник.НаименованиеДокумента;
		КоллекцияОбъектов.ДатаВходящегоДокумента  = Источник.ДатаДокумента;
		КоллекцияОбъектов.НомерВходящегоДокумента = Источник.НомерДокумента;
		
		Счет = Источник.КоррСчет;
		Для к=1 по Счет.КоличествоСубконто() цикл
			ВидСубконтоИсточника = Счет.ВидСубконто(к);
			Если (ВидСубконтоИсточника = ВидыСубконто.Номенклатура) тогда
				Если к = 1 тогда
					КоллекцияОбъектов.Номенклатура = Источник.Субконто1;
				ИначеЕсли к=2 тогда
					КоллекцияОбъектов.Номенклатура = Источник.Субконто2;
				ИначеЕсли к=3 тогда
					КоллекцияОбъектов.Номенклатура = Источник.Субконто3;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
        КоллекцияОбъектов.Количество    = Источник.Количество;
		КоллекцияОбъектов.Цена          = (Источник.Сумма - Источник.НДС)/?(Источник.Количество = 0,1,Источник.Количество);
        КоллекцияОбъектов.Сумма         = (Источник.Сумма - Источник.НДС);
		КоллекцияОбъектов.СуммаНДС      = Источник.НДС;
		Если ПустоеЗначение(Источник.СтавкаНДС) = 1 Тогда
			КоллекцияОбъектов.СтавкаНДС = "БезНДС";
		ИначеЕсли Источник.СтавкаНДС.Ставка = 0 Тогда
			Если Найти(Источник.СтавкаНДС.Наименование,"0")&gt;0 Тогда
				КоллекцияОбъектов.СтавкаНДС = "БезНДС";
			Иначе
				КоллекцияОбъектов.СтавкаНДС = "НДС0";
			КонецЕсли;
		Иначе
			//определяем ставку
			Ставка = Источник.НДС / (Источник.Сумма - Источник.НДС);
			Если Ставка&gt;0.19 Тогда
				КоллекцияОбъектов.СтавкаНДС = "НДС20";
			ИначеЕсли Ставка&gt;0.17 Тогда
				КоллекцияОбъектов.СтавкаНДС = "НДС18";
			Иначе
				КоллекцияОбъектов.СтавкаНДС = "НДС10";
			КонецЕсли;
		КонецЕсли;
		КоллекцияОбъектов.СчетУчета = Источник.КоррСчет;
		КоллекцияОбъектов.СчетУчетаНДС = "19.03";
		КоллекцияОбъектов.ОтражениеВУСН = Источник.УчетРасходовДляНУ;
		
	КонецЕсли;
	
КонецЦикла;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>60</Код>
								<Наименование> --&gt; ВидДокВходящий</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДокВходящий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>65</Код>
								<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>61</Код>
								<Наименование> --&gt; ДатаВходящегоДокумента</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>68</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
								<КодПравилаКонвертации>ВариантыУчетаРасходовДляНУ                        </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>64</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>63</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>78</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>73</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>71</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>74</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>75</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>76</Код>
								<Наименование> --&gt; СчетУчетаНДС</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство Отключить="true">
								<Код>69</Код>
								<Наименование> --&gt; Поставщик</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Поставщик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>70</Код>
								<Наименование> --&gt; ПредъявленСФ</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПредъявленСФ" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>62</Код>
								<Наименование> --&gt; ДатаСФ</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаСФ" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>67</Код>
								<Наименование> --&gt; НомерСФ</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерСФ" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>77</Код>
								<Наименование> --&gt; СчетФактура</Наименование>
								<Порядок>850</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетФактура" Вид="Реквизит" Тип="ДокументСсылка.СчетФактураПолученный"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>66</Код>
								<Наименование> --&gt; НомерГТД</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство Отключить="true">
								<Код>72</Код>
								<Наименование> --&gt; СтранаПроисхождения</Наименование>
								<Порядок>950</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>КлассификаторСтранМира                            </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>34</Код>
							<Наименование> --&gt; Прочее</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Прочее" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидДокВходящий");
КоллекцияОбъектов.НоваяКолонка("ДатаВходящегоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерВходящегоДокумента");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Поставщик");
КоллекцияОбъектов.НоваяКолонка("ПредъявленСФ");
КоллекцияОбъектов.НоваяКолонка("ДатаСФ");
КоллекцияОбъектов.НоваяКолонка("НомерСФ");
КоллекцияОбъектов.НоваяКолонка("Содержание");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетЗатрат");
КоллекцияОбъектов.НоваяКолонка("ПодразделениеЗатрат");
КоллекцияОбъектов.НоваяКолонка("Субконто1");
КоллекцияОбъектов.НоваяКолонка("Субконто2");
КоллекцияОбъектов.НоваяКолонка("Субконто3");
КоллекцияОбъектов.НоваяКолонка("СчетЗатратНУ");
КоллекцияОбъектов.НоваяКолонка("СубконтоНУ1");
КоллекцияОбъектов.НоваяКолонка("СубконтоНУ2");
КоллекцияОбъектов.НоваяКолонка("СубконтоНУ3");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетФактура");
КоллекцияОбъектов.НоваяКолонка("ОтражениеВУСН");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	Счет = Источник.КоррСчет;
	Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", Счет);
	ТипСчетаРасчетов = ОпределитьСчетУчетаРасчетовСКонтрагентами();

	Если (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("10"))=0)
		и (Источник.КоррСчет&lt;&gt;СчетПоКоду("07"))
		и (Источник.КоррСчет&lt;&gt;СчетПоКоду("08.4"))
		и (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("41"))=0) 
		и (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("43"))=0) 
		и (ТипСчетаРасчетов = 0 ) Тогда
		
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВидДокВходящий = Источник.НаименованиеДокумента;
		КоллекцияОбъектов.ДатаВходящегоДокумента  = Источник.ДатаДокумента;
		КоллекцияОбъектов.НомерВходящегоДокумента = Источник.НомерДокумента;
		
		КоллекцияОбъектов.Субконто1    = Источник.Субконто1;
		КоллекцияОбъектов.Субконто2    = Источник.Субконто2;
		КоллекцияОбъектов.Субконто3    = Источник.Субконто3;
		КоллекцияОбъектов.Сумма        = Источник.Сумма - Источник.НДС;
		КоллекцияОбъектов.СуммаНДС     = Источник.НДС;
		Если ПустоеЗначение(Источник.СтавкаНДС) = 1 Тогда
			КоллекцияОбъектов.СтавкаНДС = "БезНДС";
		ИначеЕсли Источник.СтавкаНДС.Ставка = 0 Тогда
			Если Найти(Источник.СтавкаНДС.Наименование,"0")&gt;0 Тогда
				КоллекцияОбъектов.СтавкаНДС = "БезНДС";
			Иначе
				КоллекцияОбъектов.СтавкаНДС = "НДС0";
			КонецЕсли;
		Иначе
			//определяем ставку
			Ставка = Источник.НДС / (Источник.Сумма - Источник.НДС);
			Если Ставка&gt;0.19 Тогда
				КоллекцияОбъектов.СтавкаНДС = "НДС20";
			ИначеЕсли Ставка&gt;0.17 Тогда
				КоллекцияОбъектов.СтавкаНДС = "НДС18";
			Иначе
				КоллекцияОбъектов.СтавкаНДС = "НДС10";
			КонецЕсли;
		КонецЕсли;
		КоллекцияОбъектов.Содержание   = Строка(Источник.Субконто1);
		КоллекцияОбъектов.СчетЗатрат   = Источник.КоррСчет;
		КоллекцияОбъектов.СчетУчетаНДС = "19.03";
		КоллекцияОбъектов.ОтражениеВУСН = Источник.УчетРасходовДляНУ;
	КонецЕсли;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; ВидДокВходящий</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДокВходящий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; ДатаВходящегоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>45</Код>
								<Наименование> --&gt; Содержание</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>55</Код>
								<Наименование> --&gt; СчетЗатрат</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; ПодразделениеЗатрат</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>47</Код>
								<Наименование> --&gt; Субконто1</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто1" Вид="Реквизит"/>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>48</Код>
								<Наименование> --&gt; Субконто2</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто2" Вид="Реквизит"/>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>49</Код>
								<Наименование> --&gt; Субконто3</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто3" Вид="Реквизит"/>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>53</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>46</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>54</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>57</Код>
								<Наименование> --&gt; СчетУчетаНДС</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
								<КодПравилаКонвертации>ВариантыУчетаРасходовДляНУ                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>19</Код>
							<Наименование> --&gt; ОплатаПоставщикам</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплатаПоставщикам" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидДокВходящий");
КоллекцияОбъектов.НоваяКолонка("ДатаВходящегоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерВходящегоДокумента");
КоллекцияОбъектов.НоваяКолонка("Контрагент");
КоллекцияОбъектов.НоваяКолонка("ДоговорКонтрагента");
КоллекцияОбъектов.НоваяКолонка("КратностьВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("КурсВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("Содержание");
КоллекцияОбъектов.НоваяКолонка("СпособПогашенияЗадолженности");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СуммаВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетовПоАвансам");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетовСКонтрагентом");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Счет = Источник.КоррСчет;
	Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", Счет);
	ТипСчетаРасчетов = ОпределитьСчетУчетаРасчетовСКонтрагентами();
	
	Если ТипСчетаРасчетов &lt;&gt; 0 Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВидДокВходящий = Источник.НаименованиеДокумента;
		КоллекцияОбъектов.ДатаВходящегоДокумента  = Источник.ДатаДокумента;
		КоллекцияОбъектов.НомерВходящегоДокумента = Источник.НомерДокумента;

		Для к=1 по Счет.КоличествоСубконто() цикл
			ВидСубконтоИсточника = Счет.ВидСубконто(к);
			Если (ВидСубконтоИсточника = ВидыСубконто.Контрагенты) Тогда
				КоллекцияОбъектов.Контрагент = Источник.ПолучитьАтрибут("Субконто"+к);
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				КоллекцияОбъектов.ДоговорКонтрагента = Источник.ПолучитьАтрибут("Субконто"+к);
			КонецЕсли;
		КонецЦикла;
		
		КоллекцияОбъектов.КурсВзаиморасчетов = ?(ПустоеЗначение(Источник.Валюта)=1,1,Источник.Валюта.Курс.Получить(Источник.ДатаДок));
		Кратность = ?(ПустоеЗначение(Источник.Валюта)=1,1,Источник.Валюта.Кратность.Получить(Источник.ДатаДок));
		Кратность = ?(Кратность=0,1,Кратность);
        КоллекцияОбъектов.КратностьВзаиморасчетов      = Кратность;
		КоллекцияОбъектов.СпособПогашенияЗадолженности = "Автоматически";
		КоллекцияОбъектов.Сумма = Источник.Сумма;
		КоллекцияОбъектов.СуммаВзаиморасчетов = Источник.Сумма;
		//по счету определяем пару расчетных счетов
		Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
		Параметры.ПараметрыАлгоритмов.Установить("Договор", КоллекцияОбъектов.ДоговорКонтрагента);
		СчетаРасчетов = ПолучитьСчетаРасчетов();
		
		КоллекцияОбъектов.СчетУчетаРасчетовПоАвансам     = СчетаРасчетов.Получить("СчетАвансов");
		КоллекцияОбъектов.СчетУчетаРасчетовСКонтрагентом = СчетаРасчетов.Получить("СчетРасчетов");
	КонецЕсли;
	
КонецЦикла;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; ВидДокВходящий</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДокВходящий" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; ДатаВходящегоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Контрагент</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>27</Код>
								<Наименование> --&gt; Сделка</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сделка" Вид="Реквизит"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Содержание</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; СпособПогашенияЗадолженности</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособПогашенияЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Взаимозачет</Код>
					<Наименование>Документ: Зачет взаимных требований</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

	Если Источник.ИспользоватьВспомогательныйСчет = 1 Тогда
		
		ВходящиеДанные.Установить("ВидОперации","Прочее");
		
		ВходящиеДанные.Установить("СчетДт",Источник.СчетСписания);
		ВходящиеДанные.Установить("СчетКт",Источник.СчетСписания);
		
	Иначе	
	
		ТаблицаДокумента = СоздатьОбъект("ТаблицаЗначений");
		Источник.ВыгрузитьТабличнуюЧасть(ТаблицаДокумента);
	
		ПризнакПрочего = 0;
		
		ПризнакВидовДоговоровДебиторскойЗадолженности = "";
		ПризнакВидовДоговоровКредиторскойЗадолженности = "";
		
		ТаблицаДокумента.ВыбратьСтроки();
		Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл
			
			Если СокрЛП(ТаблицаДокумента.ВидЗадолженности) = "Дебиторская" Тогда
				
				Если ПризнакВидовДоговоровДебиторскойЗадолженности = "" Тогда
					
					Если ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
						ПризнакВидовДоговоровДебиторскойЗадолженности = "СПокупателем";
					ИначеЕсли ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
						ПризнакВидовДоговоровДебиторскойЗадолженности = "СПоставщиком";
					Иначе
						
						ПризнакПрочего = 1;
						Прервать;
						
					КонецЕсли;
					
				Иначе
					
					ПризнакВидаДоговораТекущейСтроки = "";
					
					Если ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
						ПризнакВидаДоговораТекущейСтроки = "СПокупателем";
					ИначеЕсли ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
						ПризнакВидаДоговораТекущейСтроки = "СПоставщиком";
					Иначе
						
						ПризнакПрочего = 1;
						Прервать;
						
					КонецЕсли;
					
					Если ПризнакВидаДоговораТекущейСтроки &lt;&gt; ПризнакВидовДоговоровДебиторскойЗадолженности Тогда
						
						ПризнакПрочего = 1;
						Прервать;
						
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				Если ПризнакВидовДоговоровКредиторскойЗадолженности = "" Тогда
					
					Если ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
						ПризнакВидовДоговоровКредиторскойЗадолженности = "СПокупателем";
					ИначеЕсли ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
						ПризнакВидовДоговоровКредиторскойЗадолженности = "СПоставщиком";
					Иначе
						
						ПризнакПрочего = 1;
						Прервать;
						
					КонецЕсли;
					
				Иначе
					
					ПризнакВидаДоговораТекущейСтроки = "";
					
					Если ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
						ПризнакВидаДоговораТекущейСтроки = "СПокупателем";
					ИначеЕсли ТаблицаДокумента.Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
						ПризнакВидаДоговораТекущейСтроки = "СПоставщиком";
					Иначе
						
						ПризнакПрочего = 1;
						Прервать;
						
					КонецЕсли;
					
					Если ПризнакВидаДоговораТекущейСтроки &lt;&gt; ПризнакВидовДоговоровКредиторскойЗадолженности Тогда
						
						ПризнакПрочего = 1;
						Прервать;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПризнакПрочего = 1 Тогда
			
			ВходящиеДанные.Установить("ВидОперации","Прочее");
		
			ВходящиеДанные.Установить("СчетДт",ПолучитьПустоеЗначение());
			ВходящиеДанные.Установить("СчетКт",ПолучитьПустоеЗначение());
			
		Иначе
			
			Если ПризнакВидовДоговоровДебиторскойЗадолженности &lt;&gt; ПризнакВидовДоговоровКредиторскойЗадолженности Тогда
				
				Если (ПризнакВидовДоговоровДебиторскойЗадолженности = "СПокупателем")
					И (ПризнакВидовДоговоровКредиторскойЗадолженности = "СПоставщиком") Тогда
					
					ВходящиеДанные.Установить("ВидОперации","ЗачетЗадолженности");
					ВходящиеДанные.Установить("ВидАвансаЗадолженности","ЗадолженностьПокупателя");
					ВходящиеДанные.Установить("ТипАвансаЗадолженности", ?(Источник.Дебитор = Источник.Кредитор, "СамогоКонтрагента", "ТретьегоЛица"));
					
					ВходящиеДанные.Установить("СчетДт",ПолучитьПустоеЗначение());
					ВходящиеДанные.Установить("СчетКт",ПолучитьПустоеЗначение());
					
				Иначе
					
					ВходящиеДанные.Установить("ВидОперации","Прочее");
		
					ВходящиеДанные.Установить("СчетДт",ПолучитьПустоеЗначение());
					ВходящиеДанные.Установить("СчетКт",ПолучитьПустоеЗначение());
					
				КонецЕсли;
				
			Иначе
				
				Если ПризнакВидовДоговоровДебиторскойЗадолженности = "СПокупателем" Тогда
					
					ВходящиеДанные.Установить("ВидОперации","ЗачетАвансов");
					ВходящиеДанные.Установить("ВидАвансаЗадолженности","АвансыПокупателя");
					ВходящиеДанные.Установить("ТипАвансаЗадолженности", ?(Источник.Дебитор = Источник.Кредитор, "СамогоКонтрагента", "ТретьегоЛица"));
					
					ВходящиеДанные.Установить("СчетДт",ПолучитьПустоеЗначение());
					ВходящиеДанные.Установить("СчетКт",ПолучитьПустоеЗначение());
					
				Иначе
					
					ВходящиеДанные.Установить("ВидОперации","ЗачетАвансов");
					ВходящиеДанные.Установить("ВидАвансаЗадолженности","АвансыПоставщику");
					ВходящиеДанные.Установить("ТипАвансаЗадолженности", ?(Источник.Дебитор = Источник.Кредитор, "СамогоКонтрагента", "ТретьегоЛица"));
					
					ВходящиеДанные.Установить("СчетДт",ПолучитьПустоеЗначение());
					ВходящиеДанные.Установить("СчетКт",ПолучитьПустоеЗначение());
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;	
	
	КонецЕсли;
</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто дебета
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетДт");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоДт");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);

//обрабатываем субконто кредита
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетКт");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоКт");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);</ПослеЗагрузки>
					<Источник>ДокументСсылка.Взаимозачет</Источник>
					<Приемник>ДокументСсылка.КорректировкаДолга</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>13</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийКорректировкаДолга"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; КурсДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КратностьДокумента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Дебитор --&gt; КонтрагентДебитор</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Дебитор" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="КонтрагентДебитор" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Кредитор --&gt; КонтрагентКредитор</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Кредитор" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="КонтрагентКредитор" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>ИспользоватьВспомогательныйСчет --&gt; ИспользоватьВспомогательныйСчет</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИспользоватьВспомогательныйСчет" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ИспользоватьВспомогательныйСчет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетДт</Наименование>
							<Порядок>650</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>Субконто1 --&gt; СубконтоДт1</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Субконто1" Вид="Реквизит"/>
							<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
							<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("СчетДт");
Если (ПустоеЗначение(Счет)=0) Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
	ПриВыгрузкеСубконто();	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>Субконто2 --&gt; СубконтоДт2</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="Субконто2" Вид="Реквизит"/>
							<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
							<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("СчетДт");
Если (ПустоеЗначение(Счет)=0) Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
	ПриВыгрузкеСубконто();	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>Субконто3 --&gt; СубконтоДт3</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Субконто3" Вид="Реквизит"/>
							<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
							<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("СчетДт");
Если (ПустоеЗначение(Счет)=0) Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
	ПриВыгрузкеСубконто();	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СчетКт</Наименование>
							<Порядок>850</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>Субконто1 --&gt; СубконтоКт1</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="Субконто1" Вид="Реквизит"/>
							<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
							<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("СчетКт");
Если (ПустоеЗначение(Счет)=0) Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
	ПриВыгрузкеСубконто();	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>Субконто2 --&gt; СубконтоКт2</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="Субконто2" Вид="Реквизит"/>
							<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
							<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("СчетКт");
Если (ПустоеЗначение(Счет)=0) Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
	ПриВыгрузкеСубконто();	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>Субконто3 --&gt; СубконтоКт3</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="Субконто3" Вид="Реквизит"/>
							<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
							<ПередВыгрузкой>Счет = ВходящиеДанные.Получить("СчетКт");
Если (ПустоеЗначение(Счет)=0) Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
	ПриВыгрузкеСубконто();	
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СуммаДтЗадолженности</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДтЗадолженности" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Значение = Значение + Источник.СуммаДеб;
КонецЦикла;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СуммаКтЗадолженности</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКтЗадолженности" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Значение = Значение + Источник.СуммаКред;
КонецЦикла;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ВидАвансаЗадолженности</Наименование>
							<Порядок>1150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидАвансаЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыАвансаЗадолженности"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ТипАвансаЗадолженности</Наименование>
							<Порядок>1200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТипАвансаЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыЗадолженности"/>
						</Свойство>
						<Группа>
							<Код>24</Код>
							<Наименование> --&gt; КредиторскаяЗадолженность</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КредиторскаяЗадолженность" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидЗадолженности");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетов");
КоллекцияОбъектов.НоваяКолонка("ДоговорКонтрагента");
КоллекцияОбъектов.НоваяКолонка("КратностьВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("КурсВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СуммаВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СуммаНУ");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Курс = 1;
	Кратность = 1;
	Если Источник.Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
			Валюта = Источник.Договор.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			Курс = Валюта.Курс.Получить(Источник.ДатаДок);
		КонецЕсли;
	КонецЕсли;
	
	Если Источник.СуммаКред &lt;&gt; 0 Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВидЗадолженности    = "Кредиторская";
		Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
		СчетаРасчетов = ПолучитьСчетаРасчетов();
		
		Если Источник.Счет.ПринадлежитГруппе(СчетПоКоду("62"))=1 Тогда
			КоллекцияОбъектов.СчетУчетаРасчетов = СчетаРасчетов.Получить("СчетАвансов");
		Иначе
			КоллекцияОбъектов.СчетУчетаРасчетов = СчетаРасчетов.Получить("СчетРасчетов");
		КонецЕсли;

		КоллекцияОбъектов.ДоговорКонтрагента  = Источник.Договор;
		КоллекцияОбъектов.КратностьВзаиморасчетов = Кратность;
		КоллекцияОбъектов.КурсВзаиморасчетов  = Курс;
		КоллекцияОбъектов.Сумма               = Источник.СуммаКред;
		КоллекцияОбъектов.СуммаВзаиморасчетов = ?(Курс = 0, 0, Источник.СуммаКред * Кратность / Курс );
	КонецЕсли;
КонецЦикла;

Если КоллекцияОбъектов.КоличествоСтрок() = 0 Тогда 
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",ОбъектКоллекции.ДоговорКонтрагента);
Параметры.ПараметрыАлгоритмов.Установить("Счет",ОбъектКоллекции.СчетУчетаРасчетов);
ОпределитьВидДоговора();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; СчетУчетаРасчетов</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>34</Код>
							<Наименование> --&gt; ДебиторскаяЗадолженность</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДебиторскаяЗадолженность" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидЗадолженности");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетов");
КоллекцияОбъектов.НоваяКолонка("ДоговорКонтрагента");
КоллекцияОбъектов.НоваяКолонка("КратностьВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("КурсВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СуммаВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СуммаНУ");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Курс = 1;
	Кратность = 1;
	Если Источник.Договор.Выбран() = 1 Тогда
	    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
			Валюта = Источник.Договор.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			Курс = Валюта.Курс.Получить(Источник.ДатаДок);
		КонецЕсли;
	КонецЕсли;
	
	Если Источник.СуммаДеб &lt;&gt; 0 Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВидЗадолженности    = "Дебиторская";
		Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.Счет);
		Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
		СчетаРасчетов = ПолучитьСчетаРасчетов();
		
		Если Источник.Счет.ПринадлежитГруппе(СчетПоКоду("62"))=1 Тогда
			КоллекцияОбъектов.СчетУчетаРасчетов = СчетаРасчетов.Получить("СчетРасчетов");
		Иначе
			КоллекцияОбъектов.СчетУчетаРасчетов = СчетаРасчетов.Получить("СчетАвансов");
		КонецЕсли;
		
		КоллекцияОбъектов.ДоговорКонтрагента  = Источник.Договор;
		КоллекцияОбъектов.КратностьВзаиморасчетов = Кратность;
		КоллекцияОбъектов.КурсВзаиморасчетов  = Курс;
		КоллекцияОбъектов.Сумма               = Источник.СуммаДеб;
		КоллекцияОбъектов.СуммаВзаиморасчетов = ?(Курс = 0, 0, Источник.СуммаДеб * Кратность / Курс );
	КонецЕсли;
КонецЦикла;

Если КоллекцияОбъектов.КоличествоСтрок() = 0 Тогда 
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",ОбъектКоллекции.ДоговорКонтрагента);
Параметры.ПараметрыАлгоритмов.Установить("Счет",ОбъектКоллекции.СчетУчетаРасчетов);
ОпределитьВидДоговора();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; СчетУчетаРасчетов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВыпускПродукции</Код>
					<Наименование>Документ: Выпуск продукции</Наименование>
					<Порядок>450</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ВыпускПродукции</Источник>
					<Приемник>ДокументСсылка.ОтчетПроизводстваЗаСмену</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; НДСвСтоимостиТоваров</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСвСтоимостиТоваров" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействиеНДСВСтоимостиТоваров"/>
							<ПередВыгрузкой>Значение = "НеИзменять";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("20");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ПодразделениеЗатрат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование>ТабличнаяЧасть --&gt; Продукция</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Продукция" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>14</Код>
								<Наименование>Товар --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Товар" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство Отключить="true">
								<Код>10</Код>
								<Наименование> --&gt; ЕдиницаИзмерения</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>12</Код>
								<Наименование> --&gt; КоличествоМест</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КоличествоМест" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; НоменклатурнаяГруппа</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Товар)=0 Тогда
	Значение = ОбъектКоллекции.Товар.ВидДеятельности;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование>Стоимость --&gt; ПлановаяСтоимость</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="Стоимость" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ПлановаяСтоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>17</Код>
								<Наименование> --&gt; Спецификация</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Спецификация" Вид="Реквизит" Тип="СправочникСсылка.СпецификацииНоменклатуры"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>Сумма --&gt; СуммаПлановая</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаПлановая" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Счет</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Счет" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = СчетПоКоду("43");</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>21</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Доверенность</Код>
					<Наименование>Документ: Доверенность</Наименование>
					<Порядок>500</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.Доверенность</Источник>
					<Приемник>ДокументСсылка.Доверенность</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>ДатаДействия --&gt; ДатаДействия</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ДатаДействия" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>НаПолучениеОт --&gt; НаПолучениеОт</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="НаПолучениеОт" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НаПолучениеОт" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПоДокументу --&gt; ПоДокументу</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПоДокументу" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПоДокументу" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>РасчетныйСчет --&gt; БанковскийСчетОрганизации</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="РасчетныйСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<Приемник Имя="БанковскийСчетОрганизации" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Поставщик --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Поставщик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>9</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>12</Код>
							<Наименование> --&gt; Сделка</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сделка" Вид="Реквизит"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>Сотрудник --&gt; ФизЛицо</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>14</Код>
							<Наименование>ТабличнаяЧасть --&gt; Товары</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>17</Код>
								<Наименование>Товар --&gt; НаименованиеТовара</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Товар" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="НаименованиеТовара" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаПоКлассификатору</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.ЕдиницыИзмерений"/>
								<Приемник Имя="ЕдиницаПоКлассификатору" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
								<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИнвентаризацияТМЦ_ТМЦ</Код>
					<Наименование>Документ: Инвентаризация</Наименование>
					<Порядок>550</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидТМЦ&lt;&gt;1) и (Источник.ВидТМЦ&lt;&gt;3) Тогда
	Отказ = 1;	
КонецЕсли;</ПередВыгрузкой>
					<ПослеВыгрузкиВФайл>//выгружаем теперь документы движения по складу, если нужно
ОтклонениеНедостача = 0;
ОтклонениеИзлишек = 0;
ОтклонениеРозница = 0;
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если (Источник.ВидТМЦ = 1) и (СокрЛП(Источник.ФормироватьПроводку) = "Нет") Тогда
		Продолжить;
	КонецЕсли;
	Если ПустоеЗначение(Источник.МПЗ)=0 Тогда
		Если Источник.МПЗ.Вид()&lt;&gt;"Номенклатура" Тогда
			Продолжить;
		КонецЕсли;
	КонецЕсли;
	Отклонение = ?(Источник.ВидТМЦ = 3,Источник.ОтклНедостача, Источник.Количество - Источник.КоличествоУчет);
	Если (Отклонение &gt; 0) Тогда
		ОтклонениеИзлишек = ОтклонениеИзлишек + Отклонение;
	ИначеЕсли (Отклонение &lt; 0) Тогда
		ОтклонениеНедостача = ОтклонениеНедостача - Отклонение;
	КонецЕсли;
	Если (Источник.ВидТМЦ = 3) Тогда
		ОтклонениеРозница = ОтклонениеРозница + Источник.КоличествоУчет + Источник.ОтклНедостача - Источник.Количество;
	КонецЕсли;
КонецЦикла;


ИнвентаризацияВходящиеДанные = СоздатьОбъект("СписокЗначений");
ИнвентаризацияВходящиеДанные.Установить("ИнвентаризацияТоваровНаСкладе",Источник);
Если ОтклонениеИзлишек &gt; 0 Тогда
	ВыгрузитьПоПравилу(Источник,,ИнвентаризацияВходящиеДанные,,"ИнвентаризацияТМЦ_Оприходывание");
КонецЕсли;
Если ОтклонениеНедостача &gt; 0 Тогда
	ВыгрузитьПоПравилу(Источник,,ИнвентаризацияВходящиеДанные,,"ИнвентаризацияТМЦ_СписаниеТоваров");	
КонецЕсли;
Если ОтклонениеРозница &gt; 0 Тогда
	ВыгрузитьПоПравилу(Источник,,ИнвентаризацияВходящиеДанные,,"ИнвентаризацияТМЦ_Розница");	
КонецЕсли;</ПослеВыгрузкиВФайл>
					<Источник>ДокументСсылка.ИнвентаризацияТМЦ</Источник>
					<Приемник>ДокументСсылка.ИнвентаризацияТоваровНаСкладе</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ДатаНачала --&gt; ДатаНачалаИнвентаризации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачалаИнвентаризации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ДатаОкончанияИнвентаризации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончанияИнвентаризации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ДокументОснованиеВид</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснованиеВид" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ОснованиеДата --&gt; ДокументОснованиеДата</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ОснованиеДата" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДокументОснованиеДата" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ОснованиеНомер --&gt; ДокументОснованиеНомер</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ОснованиеНомер" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ДокументОснованиеНомер" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ОтветственноеЛицо</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтветственноеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Если (Источник.ВидТМЦ=1) Тогда
	Значение = Источник.ВыбМОЛСклада; 
Иначе
	Значение = Источник.РозничныйСклад.МОЛ; 
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>13</Код>
							<Наименование> --&gt; ИнвентаризационнаяКомиссия</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентаризационнаяКомиссия" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Председатель");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");

Если ПустоеЗначение(Источник.Председатель)=0 Тогда 
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Председатель = 1;
	КоллекцияОбъектов.ФизЛицо = Источник.Председатель;
КонецЕсли;

Для к = 1 по 3 Цикл
	Если ПустоеЗначение(Источник.ПолучитьАтрибут("Член"+к))=0 Тогда 
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ФизЛицо = Источник.ПолучитьАтрибут("Член"+к);
	КонецЕсли;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Председатель</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Председатель" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>16</Код>
							<Наименование>ТабличнаяЧасть --&gt; Товары</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>19</Код>
								<Наименование>МПЗ --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="МПЗ" Вид="Реквизит"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.МПЗ)=0 Тогда
	Если ОбъектКоллекции.МПЗ.Вид()="ОбъектыВнеоборотныхАктивов" Тогда
		ИмяПКО = "ОбъектыСтроительства_08_4";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование>Счет --&gt; СчетУчета</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Счет" Вид="Реквизит" Тип="ПланСчетовСсылка.Основной"/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>КоличествоУчет --&gt; КоличествоУчет</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="КоличествоУчет" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоУчет" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование>Цена --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Если Источник.ВидТМЦ = 1 Тогда
	Значение = ?(ОбъектКоллекции.Количество=0,0,ОбъектКоллекции.Сумма / ОбъектКоллекции.Количество);
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование>Сумма --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Если Источник.ВидТМЦ = 3 Тогда
	Значение = ОбъектКоллекции.Цена * ОбъектКоллекции.Количество;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование>СуммаУчет --&gt; СуммаУчет</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="СуммаУчет" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаУчет" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Если Источник.ВидТМЦ = 3 Тогда
	Значение = ОбъектКоллекции.Цена * ОбъектКоллекции.КоличествоУчет;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование>Цена --&gt; ЦенаВРознице</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаВРознице" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИнвентаризацияТМЦ_СписаниеТоваров</Код>
					<Наименование>Документ: Инвентаризация</Наименование>
					<Порядок>600</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<ПослеЗагрузки>//заполняем СуммаДокумента
Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ИнвентаризацияТМЦ</Источник>
					<Приемник>ДокументСсылка.СписаниеТоваров</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ИнвентаризацияТоваровНаСкладе</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентаризацияТоваровНаСкладе" Вид="Реквизит" Тип="ДокументСсылка.ИнвентаризацияТоваровНаСкладе"/>
							<КодПравилаКонвертации>ИнвентаризацияТМЦ_ТМЦ                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<ПередВыгрузкой>Если Источник.ВидТМЦ = 1 Тогда
	Значение = Источник.МестоХранения;
Иначе
	Значение = Источник.РозничныйСклад;	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("Себестоимость");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДСВРознице");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");
КоллекцияОбъектов.НоваяКолонка("ОтражениеВУСН");

СебестоимостьТоваров = СоздатьОбъект("ТаблицаЗначений");
СебестоимостьТоваров.НоваяКолонка("Номенклатура");
СебестоимостьТоваров.НоваяКолонка("Счет");
СебестоимостьТоваров.НоваяКолонка("Количество");
СебестоимостьТоваров.НоваяКолонка("Сумма");

//получаем себестоимость из движений
Операция = Источник.Операция;
Операция.ВыбратьПроводки();
Пока Операция.ПолучитьПроводку()=1 Цикл
	
	Если (Найти(",10.1,10.2,10.3,41.1,41.2,41.3,43,004,",","+СокрЛП(Операция.Дебет.Счет)+",")&gt;0) Тогда
		СебестоимостьТоваров.НоваяСтрока();
		СебестоимостьТоваров.Номенклатура = Операция.Дебет.Субконто(1);
		СебестоимостьТоваров.Счет = Операция.Дебет.Счет;
		СебестоимостьТоваров.Количество = Операция.Количество;
		СебестоимостьТоваров.Сумма = Операция.Сумма;
	ИначеЕсли (Найти(",10.1,10.2,10.3,41.1,41.2,41.3,43,004,",","+СокрЛП(Операция.Кредит.Счет)+",")&gt;0) Тогда
		СебестоимостьТоваров.НоваяСтрока();
		СебестоимостьТоваров.Номенклатура = Операция.Кредит.Субконто(1);
		СебестоимостьТоваров.Счет = Операция.Кредит.Счет;
		СебестоимостьТоваров.Количество = Операция.Количество;
		СебестоимостьТоваров.Сумма = Операция.Сумма;
	КонецЕсли;
КонецЦикла;

СебестоимостьТоваров.Свернуть("Номенклатура,Счет","Количество,Сумма");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если (Источник.ВидТМЦ = 1) и (СокрЛП(Источник.ФормироватьПроводку) = "Нет") Тогда
		Продолжить;
	КонецЕсли;
	Отклонение = ?(Источник.ВидТМЦ = 3,Источник.ОтклНедостача,Источник.Количество - Источник.КоличествоУчет);
	Если (Отклонение &gt;= 0) Тогда
		Продолжить;
	КонецЕсли;
	Себестоимость = 0;
	СебестоимостьТоваров.ВыбратьСтроки();
	Пока СебестоимостьТоваров.ПолучитьСтроку()=1 Цикл
		Если (СебестоимостьТоваров.Номенклатура = Источник.МПЗ) и (СебестоимостьТоваров.Счет = Источник.Счет) Тогда
			Себестоимость = ?(СебестоимостьТоваров.Количество = 0,0,СебестоимостьТоваров.Сумма / СебестоимостьТоваров.Количество);
		КонецЕсли;
	КонецЦикла;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.МПЗ;
	КоллекцияОбъектов.Количество   = -Отклонение;
	КоллекцияОбъектов.Коэффициент  = 1;
	КоллекцияОбъектов.Цена = ?(Источник.ВидТМЦ = 3, Себестоимость, Источник.Цена);
	КоллекцияОбъектов.Сумма = ?(Источник.ВидТМЦ = 3, -Отклонение * Себестоимость, Источник.СуммаУчет - Источник.Сумма);
	КоллекцияОбъектов.Себестоимость = ?(Источник.ВидТМЦ = 3, -Отклонение * Себестоимость, Источник.СуммаУчет - Источник.Сумма);
	КоллекцияОбъектов.СчетУчета = Источник.Счет;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Номенклатура)=0 Тогда
	Если ОбъектКоллекции.Номенклатура.Вид()="ОбъектыВнеоборотныхАктивов" Тогда
		ИмяПКО = "ОбъектыСтроительства_08_4";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Себестоимость</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Себестоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; СтавкаНДСВРознице</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДСВРознице" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИнвентаризацияТМЦ_Оприходывание</Код>
					<Наименование>Документ: Инвентаризация</Наименование>
					<Порядок>650</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<ПослеЗагрузки>//заполняем СуммаДокумента
Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ИнвентаризацияТМЦ</Источник>
					<Приемник>ДокументСсылка.ОприходованиеТоваров</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ИнвентаризацияТоваровНаСкладе</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентаризацияТоваровНаСкладе" Вид="Реквизит" Тип="ДокументСсылка.ИнвентаризацияТоваровНаСкладе"/>
							<КодПравилаКонвертации>ИнвентаризацияТМЦ_ТМЦ                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ВидТМЦ = 1 Тогда
	Значение = Источник.МестоХранения;
Иначе
	Значение = Источник.РозничныйСклад;	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>СтатьяПрочихДоходов --&gt; СтатьяПрочихДоходовРасходов</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="СтатьяПрочихДоходов" Вид="Реквизит" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<Приемник Имя="СтатьяПрочихДоходовРасходов" Вид="Реквизит" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.СтатьяПрочихДоходов) = 1 Тогда
	Значение = 1;
	ИмяПКО = "ПрочиеДоходыИРасходыБезвозмездно";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДСВРознице");
КоллекцияОбъектов.НоваяКолонка("ЦенаВРознице");
КоллекцияОбъектов.НоваяКолонка("СуммаВРознице");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");
КоллекцияОбъектов.НоваяКолонка("ОтражениеВУСН");

СебестоимостьТоваров = СоздатьОбъект("ТаблицаЗначений");
СебестоимостьТоваров.НоваяКолонка("Номенклатура");
СебестоимостьТоваров.НоваяКолонка("Счет");
СебестоимостьТоваров.НоваяКолонка("Количество");
СебестоимостьТоваров.НоваяКолонка("Сумма");

//получаем себестоимость из движений
Операция = Источник.Операция;
Операция.ВыбратьПроводки();
Пока Операция.ПолучитьПроводку()=1 Цикл
	Если (Найти(",10.1,10.2,10.3,41.1,41.2,41.3,43,004,",","+СокрЛП(Операция.Дебет.Счет)+",")&gt;0) Тогда
		СебестоимостьТоваров.НоваяСтрока();
		СебестоимостьТоваров.Номенклатура = Операция.Дебет.Субконто(1);
		СебестоимостьТоваров.Счет = Операция.Дебет.Счет;
		СебестоимостьТоваров.Количество = Операция.Количество;
		СебестоимостьТоваров.Сумма = Операция.Сумма;
	ИначеЕсли (Найти(",10.1,10.2,10.3,41.1,41.2,41.3,43,004,",","+СокрЛП(Операция.Кредит.Счет)+",")&gt;0) Тогда
		СебестоимостьТоваров.НоваяСтрока();
		СебестоимостьТоваров.Номенклатура = Операция.Кредит.Субконто(1);
		СебестоимостьТоваров.Счет = Операция.Кредит.Счет;
		СебестоимостьТоваров.Количество = Операция.Количество;
		СебестоимостьТоваров.Сумма = Операция.Сумма;
	КонецЕсли;
КонецЦикла;

СебестоимостьТоваров.Свернуть("Номенклатура,Счет","Количество,Сумма");


Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если (Источник.ВидТМЦ = 1) и (СокрЛП(Источник.ФормироватьПроводку) = "Нет") Тогда
		Продолжить;
	КонецЕсли;
	Отклонение = ?(Источник.ВидТМЦ = 3,Источник.ОтклНедостача,Источник.Количество - Источник.КоличествоУчет);
	Если (Отклонение &lt;= 0) Тогда
		Продолжить;
	КонецЕсли;
	
	Себестоимость = 0;
	СебестоимостьТоваров.ВыбратьСтроки();
	Пока СебестоимостьТоваров.ПолучитьСтроку()=1 Цикл
		Если (СебестоимостьТоваров.Номенклатура = Источник.МПЗ) и (СебестоимостьТоваров.Счет = Источник.Счет) Тогда
			Себестоимость = ?(СебестоимостьТоваров.Количество = 0,0,СебестоимостьТоваров.Сумма / СебестоимостьТоваров.Количество);
		КонецЕсли;
	КонецЦикла;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.МПЗ;
	КоллекцияОбъектов.Количество   = Отклонение;
	КоллекцияОбъектов.Коэффициент  = 1;
	КоллекцияОбъектов.Сумма = ?(Источник.ВидТМЦ = 3,Отклонение*Себестоимость, Источник.Сумма - Источник.СуммаУчет);
	Если Источник.ВидТМЦ = 1 Тогда
		КоллекцияОбъектов.Цена = ?(КоллекцияОбъектов.Количество=0,0,КоллекцияОбъектов.Сумма / КоллекцияОбъектов.Количество);
	Иначе
		КоллекцияОбъектов.Цена = Себестоимость;
	КонецЕсли;

	КоллекцияОбъектов.СчетУчета = Источник.Счет;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Номенклатура)=0 Тогда
	Если ОбъектКоллекции.Номенклатура.Вид()="ОбъектыВнеоборотныхАктивов" Тогда
		ИмяПКО = "ОбъектыСтроительства_08_4";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; ЦенаВРознице</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЦенаВРознице" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; СуммаВРознице</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВРознице" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; СтавкаНДСВРознице</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДСВРознице" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИнвентаризацияТМЦ_Розница</Код>
					<Наименование>Документ: Инвентаризация</Наименование>
					<Порядок>700</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если Источник.ВидТМЦ &lt;&gt; 3 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<ПослеЗагрузки>// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "АгентскиеУслуги");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ИнвентаризацияТМЦ</Источник>
					<Приемник>ДокументСсылка.ОтчетОРозничныхПродажах</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой> Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийОтчетОРозничныхПродажах"/>
							<ПередВыгрузкой>Если Параметры.СписокСкладовНТТ.НайтиЗначение(Источник.МестоХранения)&gt;0 Тогда
	Значение = "ОтчетНТТОПродажах";
Иначе
	Значение = "ОтчетККМОПродажах";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КратностьДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КурсДокумента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ИнвентаризацияТоваровНаСкладе</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентаризацияТоваровНаСкладе" Вид="Реквизит" Тип="ДокументСсылка.ИнвентаризацияТоваровНаСкладе"/>
							<КодПравилаКонвертации>ИнвентаризацияТМЦ_ТМЦ                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ВидДвижения --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ВидДвижения" Вид="Реквизит" Тип="СправочникСсылка.ДвиженияДенежныхСредств"/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СчетКасса</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКасса" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("50.1");</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>16</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Себестоимость");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");  
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетДоходов");
КоллекцияОбъектов.НоваяКолонка("Субконто");
КоллекцияОбъектов.НоваяКолонка("СчетРасходов");  
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДСПоРеализации");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	ОтклонениеРозница = Источник.КоличествоУчет + Источник.ОтклНедостача - Источник.Количество;
	Если (ОтклонениеРозница &lt;= 0) Тогда
		Продолжить;
	КонецЕсли;
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.МПЗ;
	КоллекцияОбъектов.Количество   = ОтклонениеРозница;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.СуммаПродажи;
	КоллекцияОбъектов.СтавкаНДС = "БезНДС";
	
	Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
	Параметры.ПараметрыАлгоритмов.Установить("Товар",Источник.МПЗ);
	КоллекцияОбъектов.СчетУчета = ПолучитьСчетУчетаТоваров();
	
	Если (Источник.ЕНВД = 0) 
		И (Источник.МПЗ.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.УслугаЕНВД) Тогда
		КоллекцияОбъектов.СчетДоходов = "90.01.1";
		КоллекцияОбъектов.СчетРасходов = "90.02.1";
	Иначе
		КоллекцияОбъектов.СчетДоходов = "90.01.2";
		КоллекцияОбъектов.СчетРасходов = "90.02.2";
	КонецЕсли;
	КоллекцияОбъектов.Субконто = Источник.МПЗ.ВидДеятельности;
	КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Себестоимость</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Себестоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; СчетРасходов</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИнвентаризацияТМЦ_ОС</Код>
					<Наименование>Документ: Инвентаризация</Наименование>
					<Порядок>750</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидТМЦ&lt;&gt;2) Тогда
	Отказ = 1;	
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ИнвентаризацияТМЦ</Источник>
					<Приемник>ДокументСсылка.ИнвентаризацияОС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ДатаНачала --&gt; ДатаНачалаИнвентаризации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачалаИнвентаризации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ОснованиеДата --&gt; ДокументОснованиеДата</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ОснованиеДата" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДокументОснованиеДата" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ОснованиеНомер --&gt; ДокументОснованиеНомер</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ОснованиеНомер" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ДокументОснованиеНомер" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; ИнвентаризационнаяКомиссия</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентаризационнаяКомиссия" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Председатель");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");

Если ПустоеЗначение(Источник.Председатель)=0 Тогда 
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Председатель = 1;
	КоллекцияОбъектов.ФизЛицо = Источник.Председатель;
КонецЕсли;

Для к = 1 по 3 Цикл
	Если ПустоеЗначение(Источник.ПолучитьАтрибут("Член"+к))=0 Тогда 
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ФизЛицо = Источник.ПолучитьАтрибут("Член"+к);
	КонецЕсли;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Председатель</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Председатель" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>12</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>15</Код>
								<Наименование>МПЗ --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="МПЗ" Вид="Реквизит"/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; НаличиеПоДаннымУчета</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НаличиеПоДаннымУчета" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.КоличествоУчет &gt; 0, 1, 0);</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; НаличиеФактическое</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НаличиеФактическое" Вид="Реквизит" Тип="Булево"/>
								<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.Количество &gt; 0, 1, 0);</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование>СуммаУчет --&gt; СтоимостьПоДаннымУчета</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="СуммаУчет" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СтоимостьПоДаннымУчета" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование>Сумма --&gt; СтоимостьФактическая</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СтоимостьФактическая" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НачислениеЗП_13</Код>
					<Наименование>Документ: Начисление зарплаты</Наименование>
					<Порядок>800</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
НДФЛ_13 = глПолучитьНалог("НДФЛ");
Ставка13 = НДФЛ_13.Ставка.Получить(КонМесяца(Источник.ДатаДок));
СтавкаНДФЛ = глСтавкаНДФЛ(Источник.ВидНачисления, , КонМесяца(Источник.ДатаДок));
Если СтавкаНДФЛ &lt;&gt; Ставка13 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<ПослеВыгрузки>СпособОтражения = СоздатьОбъект("СписокЗначений");
СпособОтражения.Установить("Счет", Источник.СчетЗатрат);
СпособОтражения.Установить("Субконто1", Источник.Субконто1);
СпособОтражения.Установить("Субконто2", Источник.Субконто2);
СпособОтражения.Установить("Субконто3", Источник.Субконто3);
ВыгрузитьПоПравилу(СпособОтражения,,,,"СпособыОтраженияЗарплатыВБухУчете");</ПослеВыгрузки>
					<ПослеЗагрузки>РасчетЗарплатыБазовый.ЗаполнитьНДФЛиВзносы(Объект);</ПослеЗагрузки>
					<Источник>ДокументСсылка.НачислениеЗП</Источник>
					<Приемник>ДокументСсылка.НачислениеЗарплаты</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>8</Код>
							<Наименование> --&gt; КраткийСоставДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КраткийСоставДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; МесяцНачисления</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНачисления" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = НачМесяца(Источник.ДатаДок);</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>10</Код>
							<Наименование> --&gt; Начисления</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ПодразделениеОрганизации");
КоллекцияОбъектов.НоваяКолонка("Физлицо");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Начислено");
КоллекцияОбъектов.НоваяКолонка("РайонныйКоэффициент");
КоллекцияОбъектов.НоваяКолонка("СевернаяНадбавка");
КоллекцияОбъектов.НоваяКолонка("Результат");
КоллекцияОбъектов.НоваяКолонка("ОписаниеОшибок");
КоллекцияОбъектов.НоваяКолонка("КодДоходаНДФЛ");
КоллекцияОбъектов.НоваяКолонка("КодВычета");
КоллекцияОбъектов.НоваяКолонка("СуммаВычета");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ПодразделениеОрганизации = Параметры.ПодразделениеОрганизации;
	КоллекцияОбъектов.Физлицо    = Источник.Сотрудник;
	КоллекцияОбъектов.Сотрудник  = Источник.Сотрудник;
	КоллекцияОбъектов.ВидРасчета = Источник.ВидНачисления;
	КоллекцияОбъектов.Начислено  = Источник.Оклад;
	КоллекцияОбъектов.РайонныйКоэффициент = Источник.НачисленоРК;
	КоллекцияОбъектов.СевернаяНадбавка    = Источник.НачисленоСН;
	КоллекцияОбъектов.Результат     = Источник.Оклад + Источник.НачисленоРК + Источник.НачисленоСН;
	КоллекцияОбъектов.КодДоходаНДФЛ = ?(Источник.ВидНачисления.Выбран()=1,Источник.ВидНачисления.ВидДохода,"");
	//КоллекцияОбъектов.КодВычета   = Источник.КВыплате;
	//КоллекцияОбъектов.СуммаВычета = Источник.КВыплате;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; Начисление</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
								<КодПравилаКонвертации>ВидыНачислений                                    </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник.ВидНачисления;
Если Источник.ИспользоватьСчетДокумента=1 Тогда
	ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("СчетЗатрат",Источник.СчетЗатрат);
	ИсходящиеДанные.Установить("Субконто1",Источник.Субконто1);
	ИсходящиеДанные.Установить("Субконто2",Источник.Субконто2);
	ИсходящиеДанные.Установить("Субконто3",Источник.Субконто3);
	ИсходящиеДанные.Установить("ОтражениеВУСН",Источник.ВидНачисления.ПриниматьДляНУ);
Иначе
	ИсходящиеДанные  = СоздатьОбъект("СписокЗначений");
	ИсходящиеДанные.Установить("СчетЗатрат",ОбъектКоллекции.Сотрудник.СчетЗатрат.Получить(КонМесяца(Источник.ДатаДок)));
	ИсходящиеДанные.Установить("Субконто1",ОбъектКоллекции.Сотрудник.Субконто1.Получить(КонМесяца(Источник.ДатаДок)));
	ИсходящиеДанные.Установить("Субконто2",ОбъектКоллекции.Сотрудник.Субконто2.Получить(КонМесяца(Источник.ДатаДок)));
	ИсходящиеДанные.Установить("Субконто3",ОбъектКоллекции.Сотрудник.Субконто3.Получить(КонМесяца(Источник.ДатаДок)));
	ИсходящиеДанные.Установить("ОтражениеВУСН",Источник.ВидНачисления.ПриниматьДляНУ);
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; Результат</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; КодВычета</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетовНДФЛ"/>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; СуммаВычета</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НачислениеЗП_Прочее</Код>
					<Наименование>Документ: Начисление зарплаты</Наименование>
					<Порядок>850</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
НДФЛ_13 = глПолучитьНалог("НДФЛ");
Ставка13 = НДФЛ_13.Ставка.Получить(КонМесяца(Источник.ДатаДок));
СтавкаНДФЛ = глСтавкаНДФЛ(Источник.ВидНачисления, , КонМесяца(Источник.ДатаДок));
Если СтавкаНДФЛ = Ставка13 Тогда
	Отказ = 1;
КонецЕсли;

//перенесем движения документа через операцию
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Операция = Источник.Операция;
Операция.ВыбратьПроводки();
Пока Операция.ПолучитьПроводку()=1 Цикл
	Проводки.НоваяСтрока();
	Проводки.СчетДт = Операция.Дебет.Счет;
	Проводки.СчетКт = Операция.Кредит.Счет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по Проводки.СчетДт.КоличествоСубконто() Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = Проводки.СчетДт.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = Операция.Дебет.Субконто(НомерСубконто);
	КонецЦикла;

	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по Проводки.СчетКт.КоличествоСубконто() Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = Проводки.СчетКт.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = Операция.Кредит.Субконто(НомерСубконто);
	КонецЦикла;
	Проводки.Сумма = Операция.Сумма;
	Проводки.Содержание = Операция.СодержаниеПроводки;
КонецЦикла;

Если Проводки.КоличествоСтрок()&gt;0 Тогда
	ВхДанные = СоздатьОбъект("СписокЗначений");
	ВхДанные.Установить("Хозрасчетный", Проводки);
	ВхДанные.Установить("Содержание", "Дополнительные проводки к документу "+строка(источник));
	ВхДанные.Установить("Дата", ПолучитьДатуV8(Источник.ДатаДок,Источник.ПолучитьВремя()));
	ВыгрузитьПоПравилу(,, ВхДанные,, "ОперацияБух");
КонецЕсли;</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>ДокументСсылка.НачислениеЗП</Источник>
					<Приемник>ДокументСсылка.ОперацияНалоговогоУчетаПоНДФЛ</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>7</Код>
							<Наименование> --&gt; СведенияОДоходах</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СведенияОДоходах" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("СведенияОДоходах");		</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; ДатаПолученияДохода</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаПолученияДохода" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; КодДохода</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
								<КодПравилаКонвертации>ВидыДоходов                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; СуммаДохода</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; КодВычета</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетовНДФЛ"/>
								<КодПравилаКонвертации>ВидыВычетовНДФЛ                                   </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; СуммаВычета</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; СуммаНалогаИсчисленная</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНалогаИсчисленная" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ДатаОперации</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОперации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = НачМесяца(Источник.ДатаДок);</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>17</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Сотрудник");</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>19</Код>
							<Наименование> --&gt; НДФЛУдержанный</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДФЛУдержанный" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("НДФЛУдержанный");</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; КодДохода</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
								<КодПравилаКонвертации>ВидыДоходов                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; СтавкаНалогообложения</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНалогообложения" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВыплатаЗПБанк</Код>
					<Наименование>Документ: Выплата зарплаты</Наименование>
					<Порядок>900</Порядок>
					<ПередВыгрузкой>Если Источник.ПорядокВыплаты = 0 Тогда
	Отказ = 1;
КонецЕсли;

ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");	
КонецЕсли;

ОбъектСоздан = 1;

Попытка
	Инфо = СоздатьОбъект("AddIn.V7SysInfo");
Исключение
	ОбъектСоздан = 0;
КонецПопытки;

ТЧ = СоздатьОбъект("ТаблицаЗначений");

ТЧ.НоваяКолонка("Сотрудник");
ТЧ.НоваяКолонка("ИдСтроки");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку() = 1 Цикл
	ТЧ.НоваяСтрока();
	ТЧ.Сотрудник = Источник.Сотрудник;
	Если ОбъектСоздан = 1 Тогда
		ТЧ.ИдСтроки = Инфо.СоздатьGUID();
	Иначе
		ТЧ.ИдСтроки = Источник.НомерСтроки;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ТабличнаяЧасть", ТЧ);</ПередВыгрузкой>
					<ПриВыгрузке>Если Источник.ПорядокВыплаты = 0 Тогда
	Параметры.ТаблицаВедомостейПоКассе.НоваяСтрока();
	Параметры.ТаблицаВедомостейПоКассе.Ведомость = Источник;
	Параметры.ТаблицаВедомостейПоКассе.Сумма = Источник.Итог("КВыдаче");
	Параметры.ТаблицаВедомостейПоКассе.Дата = Источник.ДатаДок;
КонецЕсли;</ПриВыгрузке>
					<ПослеЗагрузки>ОтказЗаписи = Ложь;
ВзаиморасчетыССотрудниками.ВедомостьПередЗаписью(Объект, ОтказЗаписи, РежимЗаписиДокумента.Запись);</ПослеЗагрузки>
					<Источник>ДокументСсылка.ВыплатаЗП</Источник>
					<Приемник>ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>11</Код>
							<Наименование> --&gt; ЗарплатныйПроект</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗарплатныйПроект" Вид="Реквизит" Тип="СправочникСсылка.ЗарплатныеПроекты"/>
							<КодПравилаКонвертации>ЗарплатныеПроекты                                 </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Контрагент) = 0 Тогда
	Если ПустоеЗначение(Источник.Контрагент.ОсновнойСчет) = 0 Тогда
		Значение = Источник.Контрагент.ОсновнойСчет;
	Иначе
		РС = СоздатьОбъект("Справочник.РасчетныеСчета");
		РС.ИспользоватьВладельца(Источник.Контрагент);
		РС.ВыбратьЭлементы();
		Если РС.ПолучитьЭлемент()=1 Тогда
			Значение = РС;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ДатаЧисло(Источник.ДатаДок)&gt;15 Тогда
	Значение = НачМесяца(Источник.ДатаДок);
Иначе
	Значение = НачМесяца(НачМесяца(Источник.ДатаДок)-1);
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="СправочникСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "Зарплата";</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование>ТабличнаяЧасть --&gt; Зарплата</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>9</Код>
								<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование>КВыдаче --&gt; КВыплате</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="КВыдаче" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КВыплате" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Подразделение</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.Сотрудник Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПериодВзаиморасчетов" Вид="Реквизит" Тип="Дата"/>
								<ПередВыгрузкой>Значение = Источник.ДатаДок;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>12</Код>
							<Наименование>ТабличнаяЧасть --&gt; ФизическиеЛица</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ФизическиеЛица" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>13</Код>
								<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>15</Код>
							<Наименование>ТабличнаяЧасть --&gt; Состав</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Состав" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.Сотрудник Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; Округление</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Округление" Вид="Реквизит" Тип="СправочникСсылка.СпособыОкругленияПриРасчетеЗарплаты"/>
							<КодПравилаКонвертации>СпособыОкругленияПриРасчетеЗарплаты               </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Без округления";
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВыплатаЗПКасса</Код>
					<Наименование>Документ: Выплата зарплаты</Наименование>
					<Порядок>900</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;	
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");	
КонецЕсли;

ОбъектСоздан = 1;

Попытка
	Инфо = СоздатьОбъект("AddIn.V7SysInfo");
Исключение
	ОбъектСоздан = 0;
КонецПопытки;

ТЧ = СоздатьОбъект("ТаблицаЗначений");

ТЧ.НоваяКолонка("Сотрудник");
ТЧ.НоваяКолонка("ИдСтроки");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку() = 1 Цикл
	ТЧ.НоваяСтрока();
	ТЧ.Сотрудник = Источник.Сотрудник;
	Если ОбъектСоздан = 1 Тогда
		ТЧ.ИдСтроки = Инфо.СоздатьGUID();
	Иначе
		ТЧ.ИдСтроки = Источник.НомерСтроки;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ТабличнаяЧасть", ТЧ);</ПередВыгрузкой>
					<ПриВыгрузке>Если Источник.ПорядокВыплаты = 0 Тогда
	Параметры.ТаблицаВедомостейПоКассе.НоваяСтрока();
	Параметры.ТаблицаВедомостейПоКассе.Ведомость = Источник;
	Параметры.ТаблицаВедомостейПоКассе.Сумма = Источник.Итог("КВыдаче");
	Параметры.ТаблицаВедомостейПоКассе.Дата = Источник.ДатаДок;
КонецЕсли;</ПриВыгрузке>
					<Источник>ДокументСсылка.ВыплатаЗП</Источник>
					<Приемник>ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ДатаЧисло(Источник.ДатаДок)&gt;15 Тогда
	Значение = НачМесяца(Источник.ДатаДок);
Иначе
	Значение = НачМесяца(НачМесяца(Источник.ДатаДок)-1);
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="СправочникСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "Зарплата";</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование>ТабличнаяЧасть --&gt; Зарплата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>9</Код>
								<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование>КВыдаче --&gt; КВыплате</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="КВыдаче" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КВыплате" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; Подразделение</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.Сотрудник Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПериодВзаиморасчетов" Вид="Реквизит" Тип="Дата"/>
								<ПередВыгрузкой>Значение = Источник.ДатаДок;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>12</Код>
							<Наименование>ТабличнаяЧасть --&gt; Состав</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Состав" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.Сотрудник Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>13</Код>
							<Наименование>ТабличнаяЧасть --&gt; ФизическиеЛица</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ФизическиеЛица" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>19</Код>
								<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РасходныйКассовыйОрдер_ВыплатаЗП</Код>
					<Наименование>Документ: Выплата зарплаты</Наименование>
					<Порядок>950</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<ПослеЗагрузки>//*****************************************************
//устанавливаем нужный вид поля контрагент
ИмяСправочника         = "Контрагенты";
ИмяРасчетногоДокумента = "АвансовыйОтчет";

Если Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВыдачаПодотчетномуЛицу ИЛИ
	Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
	ИмяСправочника = "ФизическиеЛица";

ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ПрочийРасход Тогда
	// Прочее оприходование денежных средств пока не реализовано.
КонецЕсли;

Если ТипЗнч(Объект.Контрагент) &lt;&gt; Тип("СправочникСсылка." + ИмяСправочника) Тогда
	Объект.Контрагент = Справочники[ИмяСправочника].ПустаяСсылка();
КонецЕсли;</ПослеЗагрузки>
					<Источник>ДокументСсылка.ВыплатаЗП</Источник>
					<Приемник>ДокументСсылка.РасходныйКассовыйОрдер</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Префикс","В");
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");
Параметры.ПараметрыАлгоритмов.Установить("Префикс","");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>5</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРКО"/>
							<ПередВыгрузкой>Значение = "ВыплатаЗаработнойПлатыПоВедомостям";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Выдать</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Выдать" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Основание</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ПоДокументу</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПоДокументу" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ПлатежнаяВедомость</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежнаяВедомость" Вид="Реквизит"/>
							<КодПравилаКонвертации>ВыплатаЗПКасса                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>ВидДвижения --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ВидДвижения" Вид="Реквизит" Тип="СправочникСсылка.ДвиженияДенежныхСредств"/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = Источник.Итог("КВыдаче");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СчетКасса</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКасса" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("50.1");</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>16</Код>
							<Наименование> --&gt; ВыплатаЗаработнойПлаты</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВыплатаЗаработнойПлаты" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Ведомость");
КоллекцияОбъектов.НоваяКолонка("СуммаКВыплате");
	
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Ведомость = Источник;
КоллекцияОбъектов.СуммаКВыплате = Источник.Итог("КВыдаче");</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Ведомость</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Ведомость" Вид="Реквизит"/>
								<КодПравилаКонвертации>ВыплатаЗПКасса                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; СуммаКВыплате</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаКВыплате" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>17</Код>
							<Наименование> --&gt; РасшифровкаПлатежа</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасшифровкаПлатежа" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
//создаем одну пустую строку
КоллекцияОбъектов.НоваяКолонка("НомСтроки");
КоллекцияОбъектов.НоваяКолонка("СуммаВзаиморасчетов");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.НомСтроки = 1;
КоллекцияОбъектов.СуммаВзаиморасчетов = 0;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВедомостьНаВыплатуЗарплатыВБанк</Код>
					<Наименование>: </Наименование>
					<Порядок>1000</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();

Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");	
КонецЕсли;

ОбъектСоздан = 1;

Попытка
	Инфо = СоздатьОбъект("AddIn.V7SysInfo");
Исключение
	ОбъектСоздан = 0;
КонецПопытки;

ТЧ = СоздатьОбъект("ТаблицаЗначений");

ТЧ.НоваяКолонка("Сотрудник");
ТЧ.НоваяКолонка("ИдСтроки");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку() = 1 Цикл
	Если Источник.КоррСчет = СчетПоКоду("70") Тогда
		ТЧ.НоваяСтрока();
		ТЧ.Сотрудник = Источник.Субконто1;
		Если ОбъектСоздан = 1 Тогда
			ТЧ.ИдСтроки = Инфо.СоздатьGUID();
		Иначе
			ТЧ.ИдСтроки = Источник.НомерСтроки;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Если ТЧ.КоличествоСтрок() &gt; 0 Тогда
	ВходящиеДанные.Установить("ТабличнаяЧасть", ТЧ);
КонецЕсли;</ПередВыгрузкой>
					<Приемник>ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.Вид()="РасходныйОрдер" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Префикс","Р");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("Префикс","В");
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");
Параметры.ПараметрыАлгоритмов.Установить("Префикс","");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ПолучитьДатуV8(Источник.ДатаДок,Источник.ПолучитьВремя());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = НачМесяца(Источник.ДатаДок);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; Округление</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Округление" Вид="Реквизит" Тип="СправочникСсылка.СпособыОкругленияПриРасчетеЗарплаты"/>
							<КодПравилаКонвертации>СпособыОкругленияПриРасчетеЗарплаты               </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "Без округления";
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", Значение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="СправочникСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "Зарплата";</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>12</Код>
							<Наименование> --&gt; ЗарплатныйПроект</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗарплатныйПроект" Вид="Реквизит" Тип="СправочникСсылка.ЗарплатныеПроекты"/>
							<КодПравилаКонвертации>ЗарплатныеПроекты                                 </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.Вид() = "Выписка" Тогда
	Если ПустоеЗначение(Источник.БанковскийСчет)=0 Тогда
		Значение = Источник.БанковскийСчет;
	КонецЕсли;
Иначе
	Значение = Константа.ОсновнойБанковскийСчет;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ПометкаУдаления</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = Источник.ПометкаУдаления();</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; Зарплата</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизическоеЛицо");
КоллекцияОбъектов.НоваяКолонка("КВыплате");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если Источник.КоррСчет = СчетПоКоду("70") Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.Сотрудник = Источник.Субконто1;
		КоллекцияОбъектов.ФизическоеЛицо = Источник.Субконто1;
		КоллекцияОбъектов.КВыплате = Источник.Расход;
	КонецЕсли;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; КВыплате</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КВыплате" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; ФизическоеЛицо</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.Сотрудник Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПериодВзаиморасчетов" Вид="Реквизит" Тип="Дата"/>
								<ПередВыгрузкой>Значение = Источник.ДатаДок;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>13</Код>
							<Наименование> --&gt; ФизическиеЛица</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическиеЛица" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ФизическоеЛицо");
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если Источник.КоррСчет = СчетПоКоду("70") Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ФизическоеЛицо = Источник.Субконто1;
	КонецЕсли;
КонецЦикла;

</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ФизическоеЛицо</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>15</Код>
							<Наименование> --&gt; Состав</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состав" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ФизическоеЛицо");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если Источник.КоррСчет = СчетПоКоду("70") Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ФизическоеЛицо = Источник.Субконто1;
	КонецЕсли;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.ФизическоеЛицо Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; ФизическоеЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИсправлениеСчетаФактуры</Код>
					<Наименование>Документ: Исправление сч.-факт.выд.</Наименование>
					<Порядок>1250</Порядок>
					<ПередВыгрузкой>Если Источник.СводныйСчетФактура = 1 Тогда
	Отказ = 1;
Иначе

ПроверитьНаВозможностьВыгрузки();

Если ПустоеЗначение(Источник.ДокументОснование) = 1 Тогда
	Отказ = 1;
КонецЕсли;

Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокумент", Источник);
Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокументОснование", Источник.ДокументОснование);
ПолучитьИсправляемыйСчетФактуру();
ВходящиеДанные.Установить("ДокументОснованиеДляКорректировки",Параметры.ПараметрыАлгоритмов.Получить("ИсправляемыйДокумент"));

КонецЕсли;</ПередВыгрузкой>
					<ПослеВыгрузкиВФайл>ВыгрузитьПоПравилу(Источник,,,, "ИсправлениеСчетаФактуры_СчетФактура");</ПослеВыгрузкиВФайл>
					<ПослеЗагрузки>// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Услуги") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "АгентскиеУслуги");

</ПослеЗагрузки>
					<Источник>ДокументСсылка.ИсправлениеСчетаФактуры</Источник>
					<Приемник>ДокументСсылка.КорректировкаРеализации</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>14</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийИсправленияПоступленияРеализации"/>
							<ПередВыгрузкой>Значение = "ИсправлениеОшибки";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Грузоотправитель --&gt; Грузоотправитель</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Грузополучатель --&gt; Грузополучатель</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ДокументРеализации</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументРеализации" Вид="Реквизит"/>
							<ПередВыгрузкой>ДокументОснованиеДляКорректировки = ВходящиеДанные.Получить("ДокументОснованиеДляКорректировки");
Если ПустоеЗначение(ДокументОснованиеДляКорректировки) = 0 Тогда
	Если ДокументОснованиеДляКорректировки.Вид() = "СчетФактура" Тогда
		Параметры.ПараметрыАлгоритмов.Установить("СчетФактура", ДокументОснованиеДляКорректировки);
		УстановитьПараметрыДокументаОснованияСчетаФактуры();
	Иначе
		Значение = ДокументОснованиеДляКорректировки;
	КонецЕсли;
	Если ПустоеЗначение(ИмяПКО) = 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Документ", Значение);
		ОпределитьПКОДляДокумента();
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ИсправляемыйДокументРеализации</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсправляемыйДокументРеализации" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
	Если Источник.ДокументОснование.Вид()="СчетФактура" Тогда
		Параметры.ПараметрыАлгоритмов.Установить("СчетФактура", Источник.ДокументОснование);
		УстановитьПараметрыДокументаОснованияСчетаФактуры();
	Иначе
		Значение = Источник.ДокументОснование;
	КонецЕсли;
	Если ПустоеЗначение(ИмяПКО) = 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Документ", Значение);
		ОпределитьПКОДляДокумента();
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; КорректироватьБУиНУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КорректироватьБУиНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>22</Код>
							<Наименование>ТабличнаяЧасть --&gt; Товары</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Товар) = 0 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		Если (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД)Тогда
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>27</Код>
								<Наименование>Товар --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Товар" Вид="Реквизит"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Товар) = 0 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		ИмяПКО = "Номенклатура";
	ИначеЕсли ОбъектКоллекции.Товар.Вид() = "ОсновныеСредства" Тогда
		ИмяПКО = "ОсновныеСредства";
	ИначеЕсли ОбъектКоллекции.Товар.Вид() = "НематериальныеАктивы" Тогда
		ИмяПКО = "НематериальныеАктивы";
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоИзменения</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоКорректировки</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>45</Код>
								<Наименование>Цена --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>46</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоИзменения</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>47</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоКорректировки</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование>Сумма --&gt; Сумма</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоИзменения</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоКорректировки</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоИзменения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоКорректировки</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДС / (ОбъектКоллекции.Сумма - ОбъектКоллекции.НДС);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; СтавкаНДСДоИзменения</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДСДоИзменения" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДСДоИзменения / (ОбъектКоллекции.СуммаДоИзменения - ОбъектКоллекции.НДСДоИзменения);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование>ГТД --&gt; НомерГТД</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="ГТД" Вид="Реквизит" Тип="СправочникСсылка.ГТД"/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование>ГТД --&gt; НомерГТДДоИзменения</Наименование>
								<Порядок>850</Порядок>
								<Источник Имя="ГТД" Вид="Реквизит" Тип="СправочникСсылка.ГТД"/>
								<Приемник Имя="НомерГТДДоИзменения" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование>ГТД --&gt; СтранаПроисхождения</Наименование>
								<Порядок>900</Порядок>
								<Источник Имя="ГТД" Вид="Реквизит" Тип="СправочникСсылка.ГТД"/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование>ГТД --&gt; СтранаПроисхожденияДоИзменения</Наименование>
								<Порядок>950</Порядок>
								<Источник Имя="ГТД" Вид="Реквизит" Тип="СправочникСсылка.ГТД"/>
								<Приемник Имя="СтранаПроисхожденияДоИзменения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>48</Код>
							<Наименование>ТабличнаяЧасть --&gt; Услуги</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Услуги" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Отказ = 1;
Если ПустоеЗначение(ОбъектКоллекции.Товар) = 0 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		Если (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД)Тогда
			Отказ = 0;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>53</Код>
								<Наименование>Товар --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Товар" Вид="Реквизит"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>50</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>51</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоИзменения</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>52</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоКорректировки</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>68</Код>
								<Наименование>Цена --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>69</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоИзменения</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>70</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоКорректировки</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>59</Код>
								<Наименование>Сумма --&gt; Сумма</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>60</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоИзменения</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>61</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоКорректировки</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>56</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДС / (ОбъектКоллекции.Сумма - ОбъектКоллекции.НДС);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>57</Код>
								<Наименование> --&gt; СтавкаНДСДоИзменения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДСДоИзменения" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДСДоИзменения / (ОбъектКоллекции.СуммаДоИзменения - ОбъектКоллекции.НДСДоИзменения);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>62</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>63</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоИзменения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>64</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоКорректировки</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИсправлениеСчетаФактуры_СчетФактура</Код>
					<Наименование>Документ: Исправление сч.-факт.выд.</Наименование>
					<Порядок>1300</Порядок>
					<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокумент", Источник);
Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокументОснование", Источник.ДокументОснование);
ПолучитьИсправляемыйСчетФактуру();

ВходящиеДанные.Установить("ИсправляемыйДокумент", Параметры.ПараметрыАлгоритмов.Получить("ИсправляемыйДокумент"));

</ПередВыгрузкой>
					<ПослеЗагрузки>Объект.ОпределениеПараметровСчетаФактурыНаРеализацию();</ПослеЗагрузки>
					<Источник>ДокументСсылка.ИсправлениеСчетаФактуры</Источник>
					<Приемник>ДокументСсылка.СчетФактураВыданный</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>25</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВидСчетаФактуры</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСчетаФактуры" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидСчетаФактурыВыставленного"/>
							<ПередВыгрузкой>Значение = "НаРеализацию";
Если ПустоеЗначение(Источник.ДокументОснование)=0 Тогда
	Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
		Значение = "Корректировочный";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>ИсправлениеСчетаФактуры                           </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Исправление</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Исправление" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>НомерИсправления --&gt; НомерИсправления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="НомерИсправления" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="НомерИсправления" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ДатаИсходногоДокумента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаИсходногоДокумента" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
	Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
		Если ПустоеЗначение(Источник.ДокументОснование.ДокументОснование)=0 Тогда
			Значение = Источник.ДокументОснование.ДокументОснование.ДатаДок;
		КонецЕсли;
	Иначе
		Значение = Источник.ДокументОснование.ДатаДок;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; НомерИсходногоДокумента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерИсходногоДокумента" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
	Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
		Если ПустоеЗначение(Источник.ДокументОснование.ДокументОснование)=0 Тогда
			Значение = Источник.ДокументОснование.ДокументОснование.НомерДок;
		КонецЕсли;
	Иначе
		Значение = Источник.ДокументОснование.НомерДок;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; НомерИсправляемогоКорректировочногоДокумента</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерИсправляемогоКорректировочногоДокумента" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
	Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
		Значение = Источник.ДокументОснование.НомерДок;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ДатаИсправляемогоКорректировочногоДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаИсправляемогоКорректировочногоДокумента" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
	Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
		Значение = Источник.ДокументОснование.ДатаДок;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ИсправляемыйСчетФактура</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсправляемыйСчетФактура" Вид="Реквизит" Тип="ДокументСсылка.СчетФактураВыданный"/>
							<ПередВыгрузкой>
Значение = ВходящиеДанные.Получить("ИсправляемыйДокумент");
Параметры.ПараметрыАлгоритмов.Установить("Документ",Значение);
ОпределитьПКОДляДокумента();
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ДатаПлатРасчДок --&gt; ДатаПлатежноРасчетногоДокумента</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="ДатаПлатРасчДок" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаПлатежноРасчетногоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>НомерПлатРасчДок --&gt; НомерПлатежноРасчетногоДокумента</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="НомерПлатРасчДок" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерПлатежноРасчетногоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; КодВидаОперации</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВидаОперации" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "01";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; КодСпособаВыставления</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодСпособаВыставления" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>29</Код>
							<Наименование> --&gt; ПлатежноРасчетныеДокументы</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежноРасчетныеДокументы" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДатаДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерДокумента");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.ДатаДокумента = Источник.ДатаПлатРасчДок;
КоллекцияОбъектов.НомерДокумента = Источник.НомерПлатРасчДок;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; ДатаДокумента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; НомерДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>32</Код>
							<Наименование> --&gt; ДокументыОснования</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументыОснования" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДокументОснование");

КоллекцияОбъектов.НоваяКолонка("ДатаИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("УчитыватьИсправлениеИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("ДатаИсправленияИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерИсправленияИсходногоДокумента");

Если Источник.СводныйСчетФактура = 0 Тогда
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ДокументОснование = Источник;
	Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
		Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
			КоллекцияОбъектов.УчитыватьИсправлениеИсходногоДокумента = Источник.ДокументОснование.УчитыватьИсправлениеИсходногоДокумента;
			КоллекцияОбъектов.ДатаИсправленияИсходногоДокумента = Источник.ДокументОснование.ДатаИсправленияИсходногоДокумента;
			КоллекцияОбъектов.НомерИсправленияИсходногоДокумента = Источник.ДокументОснование.НомерИсправленияИсходногоДокумента;
			Если ПустоеЗначение(Источник.ДокументОснование.ДокументОснование)=0 Тогда
				КоллекцияОбъектов.ДатаИсходногоДокумента = Источник.ДокументОснование.ДокументОснование.ДатаДок;
				КоллекцияОбъектов.НомерИсходногоДокумента = Источник.ДокументОснование.ДокументОснование.НомерДок;
			КонецЕсли;
		Иначе
			КоллекцияОбъектов.ДатаИсходногоДокумента = Источник.ДокументОснование.ДатаДок;
			КоллекцияОбъектов.НомерИсходногоДокумента = Источник.ДокументОснование.ДокументОснование.НомерДок;
		КонецЕсли;
	КонецЕсли;	
Иначе
	Таб = СоздатьОбъект("ТаблицаЗначений");
	Источник.ВыгрузитьТабличнуюЧасть(Таб);
    Таб.Свернуть("СчетФактураОснование, СчетФактураДатаИсходногоДокумента, СчетФактураНомерИсходногоДокумента, СчетФактураДатаИсправленияИсходногоДокумента, СчетФактураНомерИсправленияИсходногоДокумента, СчетФактураУчитыватьИсправлениеИсходногоДокумента",);
	Таб.ВыбратьСтроки();
	Пока Источник.ПолучитьСтроку() = 1 Цикл
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ДокументОснование = Таб.СчетФактураОснование;
		КоллекцияОбъектов.ДатаИсходногоДокумента = Таб.СчетФактураДатаИсходногоДокумента;
		КоллекцияОбъектов.НомерИсходногоДокумента = Таб.СчетФактураНомерИсходногоДокумента;
		Если Таб.СчетФактураОснование.Вид()="КорректировочныйСчетФактура" Тогда
			КоллекцияОбъектов.УчитыватьИсправлениеИсходногоДокумента = Таб.ДокументОснование.УчитыватьИсправлениеИсходногоДокумента;
			КоллекцияОбъектов.ДатаИсправленияИсходногоДокумента = Таб.ДокументОснование.ДатаИсправленияИсходногоДокумента;
			КоллекцияОбъектов.НомерИсправленияИсходногоДокумента = Таб.ДокументОснование.НомерИсправленияИсходногоДокумента;
		КонецЕсли;	
	КонецЦикла;
КонецЕсли;

	</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; ДокументОснование</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
								<КодПравилаКонвертации>ИсправлениеСчетаФактуры                           </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; ДатаИсправленияИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаИсправленияИсходногоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; ДатаИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаИсходногоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; НомерИсправленияИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерИсправленияИсходногоДокумента" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; НомерИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерИсходногоДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; УчитыватьИсправлениеИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="УчитыватьИсправлениеИсходногоДокумента" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КорректировочныйСчетФактура</Код>
					<Наименование>Документ: Корректировочный сч.-факт.выд.</Наименование>
					<Порядок>1350</Порядок>
					<ПередВыгрузкой>Если Источник.СводныйСчетФактура = 1 Тогда
	Отказ = 1;
Иначе

ПроверитьНаВозможностьВыгрузки();

Если ПустоеЗначение(Источник.ДокументОснование) = 1 Тогда
	Отказ = 1;
КонецЕсли;

Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокумент", Источник);
Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокументОснование", Источник.ДокументОснование);
ПолучитьИсправляемыйСчетФактуру();
ВходящиеДанные.Установить("ДокументОснованиеДляКорректировки",Параметры.ПараметрыАлгоритмов.Получить("ИсправляемыйДокумент"));	

КонецЕсли;</ПередВыгрузкой>
					<ПослеВыгрузкиВФайл>ВыгрузитьПоПравилу(Источник,,,, "КорректировочныйСчетФактура_СчетФактура");</ПослеВыгрузкиВФайл>
					<ПослеЗагрузки>//Объект.ЗаполнитьСвойстваШапки();
	
// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Услуги") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "АгентскиеУслуги");

</ПослеЗагрузки>
					<Источник>ДокументСсылка.КорректировочныйСчетФактура</Источник>
					<Приемник>ДокументСсылка.КорректировкаРеализации</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийИсправленияПоступленияРеализации"/>
							<ПередВыгрузкой>Значение = "СогласованноеИзменение";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ДокументРеализации</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументРеализации" Вид="Реквизит"/>
							<ПередВыгрузкой>ДокументОснованиеДляКорректировки = ВходящиеДанные.Получить("ДокументОснованиеДляКорректировки");
Если ПустоеЗначение(ДокументОснованиеДляКорректировки) = 0 Тогда
	Если ДокументОснованиеДляКорректировки.Вид() = "СчетФактура" Тогда
		Параметры.ПараметрыАлгоритмов.Установить("СчетФактура", ДокументОснованиеДляКорректировки);
		УстановитьПараметрыДокументаОснованияСчетаФактуры();
	Иначе
		Значение = ДокументОснованиеДляКорректировки;
	КонецЕсли;
	Если ПустоеЗначение(ИмяПКО) = 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Документ", Значение);
		ОпределитьПКОДляДокумента();
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ИсправляемыйДокументРеализации</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсправляемыйДокументРеализации" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("СчетФактура", Источник.ДокументОснование);
	УстановитьПараметрыДокументаОснованияСчетаФактуры();
	Если ПустоеЗначение(ИмяПКО) = 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Документ", Значение);
		ОпределитьПКОДляДокумента();
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КорректироватьБУиНУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КорректироватьБУиНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>15</Код>
							<Наименование>ТабличнаяЧасть --&gt; Товары</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Товар) = 0 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		Если (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД)Тогда
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>20</Код>
								<Наименование>Товар --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Товар" Вид="Реквизит"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Товар) = 0 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		ИмяПКО = "Номенклатура";
	ИначеЕсли ОбъектКоллекции.Товар.Вид() = "ОсновныеСредства" Тогда
		ИмяПКО = "ОсновныеСредства";
	ИначеЕсли ОбъектКоллекции.Товар.Вид() = "НематериальныеАктивы" Тогда
		ИмяПКО = "НематериальныеАктивы";
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоИзменения</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоКорректировки</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование>Цена --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование>НДСДоИзменения --&gt; ЦенаДоИзменения</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоКорректировки</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДС / (ОбъектКоллекции.Сумма - ОбъектКоллекции.НДС);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; СтавкаНДСДоИзменения</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДСДоИзменения" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДСДоИзменения / (ОбъектКоллекции.СуммаДоИзменения - ОбъектКоллекции.НДСДоИзменения);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование>Сумма --&gt; Сумма</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоИзменения</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоКорректировки</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоИзменения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоКорректировки</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>41</Код>
							<Наименование>ТабличнаяЧасть --&gt; Услуги</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Услуги" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Отказ = 1;
Если ПустоеЗначение(ОбъектКоллекции.Товар) = 0 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		Если (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга)
			ИЛИ (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД)Тогда
			Отказ = 0;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>46</Код>
								<Наименование>Товар --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Товар" Вид="Реквизит"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>43</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>44</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоИзменения</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>45</Код>
								<Наименование>КоличествоДоИзменения --&gt; КоличествоДоКорректировки</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="КоличествоДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="КоличествоДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>61</Код>
								<Наименование>Цена --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>62</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоИзменения</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>63</Код>
								<Наименование>ЦенаДоИзменения --&gt; ЦенаДоКорректировки</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="ЦенаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="ЦенаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>52</Код>
								<Наименование>Сумма --&gt; Сумма</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>53</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоИзменения</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>54</Код>
								<Наименование>СуммаДоИзменения --&gt; СуммаДоКорректировки</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="СуммаДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>49</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДС / (ОбъектКоллекции.Сумма - ОбъектКоллекции.НДС);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>50</Код>
								<Наименование> --&gt; СтавкаНДСДоИзменения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДСДоИзменения" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДСДоИзменения / (ОбъектКоллекции.СуммаДоИзменения - ОбъектКоллекции.НДСДоИзменения);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>55</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>56</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоИзменения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоИзменения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>57</Код>
								<Наименование>НДСДоИзменения --&gt; СуммаНДСДоКорректировки</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="НДСДоИзменения" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДСДоКорректировки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КорректировочныйСчетФактура_СчетФактура</Код>
					<Наименование>Документ: Корректировочный сч.-факт.выд.</Наименование>
					<Порядок>1400</Порядок>
					<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокумент", Источник);
Параметры.ПараметрыАлгоритмов.Установить("КорректировкаДокументОснование", Источник.ДокументОснование);
ПолучитьИсправляемыйСчетФактуру();

ВходящиеДанные.Установить("ИсправляемыйДокумент", Параметры.ПараметрыАлгоритмов.Получить("ИсправляемыйДокумент"));

</ПередВыгрузкой>
					<ПослеЗагрузки>Если Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию
	 ИЛИ Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
	 Объект.ОпределениеПараметровСчетаФактурыНаРеализацию();
КонецЕсли;</ПослеЗагрузки>
					<Источник>ДокументСсылка.КорректировочныйСчетФактура</Источник>
					<Приемник>ДокументСсылка.СчетФактураВыданный</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>24</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВидСчетаФактуры</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСчетаФактуры" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидСчетаФактурыВыставленного"/>
							<ПередВыгрузкой>Значение = "Корректировочный";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>КорректировочныйСчетФактура                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ДатаИсходногоДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаИсходногоДокумента" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование)=0 Тогда
	Значение = Источник.ДокументОснование.ДатаДок;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; НомерИсходногоДокумента</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерИсходногоДокумента" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументОснование)=0 Тогда
	Значение = Источник.ДокументОснование.НомерДок;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ИсправляемыйСчетФактура</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсправляемыйСчетФактура" Вид="Реквизит" Тип="ДокументСсылка.СчетФактураВыданный"/>
							<ПередВыгрузкой>
Значение = ВходящиеДанные.Получить("ИсправляемыйДокумент");
Параметры.ПараметрыАлгоритмов.Установить("Документ",Значение);
ОпределитьПКОДляДокумента();
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; КодВидаОперации</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВидаОперации" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "01";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; КодСпособаВыставления</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодСпособаВыставления" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; СчетФактураБезНДС</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетФактураБезНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>26</Код>
							<Наименование> --&gt; ПлатежноРасчетныеДокументы</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежноРасчетныеДокументы" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДатаДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерДокумента");

КоллекцияОбъектов.НоваяСтрока();
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; ДатаДокумента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; НомерДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>29</Код>
							<Наименование> --&gt; ДокументыОснования</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументыОснования" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДокументОснование");

КоллекцияОбъектов.НоваяКолонка("ДатаИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("УчитыватьИсправлениеИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("ДатаИсправленияИсходногоДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерИсправленияИсходногоДокумента");

Если Источник.СводныйСчетФактура = 0 Тогда
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ДокументОснование = Источник;	
	Если ПустоеЗначение(Источник.ДокументОснование)=0 Тогда
		КоллекцияОбъектов.ДатаИсходногоДокумента = Источник.ДокументОснование.ДатаДок;
		КоллекцияОбъектов.НомерИсходногоДокумента = Источник.ДокументОснование.НомерДок;
	КонецЕсли;	
	Если ПустоеЗначение(Источник.ДокументОснование) = 0 Тогда
		Если Источник.ДокументОснование.Вид()="КорректировочныйСчетФактура" Тогда
			КоллекцияОбъектов.УчитыватьИсправлениеИсходногоДокумента = Источник.ДокументОснование.УчитыватьИсправлениеИсходногоДокумента;
			КоллекцияОбъектов.ДатаИсправленияИсходногоДокумента = Источник.ДокументОснование.ДатаИсправленияИсходногоДокумента;
			КоллекцияОбъектов.НомерИсправленияИсходногоДокумента = Источник.ДокументОснование.НомерИсправленияИсходногоДокумента;
		КонецЕсли;
	КонецЕсли;	
Иначе
	Таб = СоздатьОбъект("ТаблицаЗначений");
	Источник.ВыгрузитьТабличнуюЧасть(Таб);
    Таб.Свернуть("СчетФактураОснование, СчетФактураДатаИсходногоДокумента, СчетФактураНомерИсходногоДокумента, СчетФактураДатаИсправленияИсходногоДокумента, СчетФактураНомерИсправленияИсходногоДокумента, СчетФактураУчитыватьИсправлениеИсходногоДокумента",);
	Таб.ВыбратьСтроки();
	Пока Источник.ПолучитьСтроку() = 1 Цикл
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ДокументОснование = Таб.СчетФактураОснование;
		КоллекцияОбъектов.ДатаИсходногоДокумента = Таб.СчетФактураДатаИсходногоДокумента;
		КоллекцияОбъектов.НомерИсходногоДокумента = Таб.СчетФактураНомерИсходногоДокумента;
		Если Таб.СчетФактураОснование.Вид()="КорректировочныйСчетФактура" Тогда
			КоллекцияОбъектов.УчитыватьИсправлениеИсходногоДокумента = Таб.ДокументОснование.УчитыватьИсправлениеИсходногоДокумента;
			КоллекцияОбъектов.ДатаИсправленияИсходногоДокумента = Таб.ДокументОснование.ДатаИсправленияИсходногоДокумента;
			КоллекцияОбъектов.НомерИсправленияИсходногоДокумента = Таб.ДокументОснование.НомерИсправленияИсходногоДокумента;
		КонецЕсли;	
	КонецЦикла;
КонецЕсли;

	</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; ДокументОснование</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
								<КодПравилаКонвертации>КорректировочныйСчетФактура                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; ДатаИсправленияИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаИсправленияИсходногоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; ДатаИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаИсходногоДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; НомерИсправленияИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерИсправленияИсходногоДокумента" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; НомерИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерИсходногоДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; УчитыватьИсправлениеИсходногоДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="УчитыватьИсправлениеИсходногоДокумента" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СчетФактура</Код>
					<Наименование>Документ: Сч.-факт.выд.</Наименование>
					<Порядок>1450</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
					<ПослеЗагрузки>Если Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс Тогда
	// найдем договор из документа-основания и установим его таким же, как у счета-фактуры
	// это необходимо из-за того, что договор может отличаться в выписке и в счете-фактуре
	Попытка
		НовыйДоговор = Объект.ДокументыОснования[0].ДокументОснование.ДоговорКонтрагента;
	Исключение
		НовыйДоговор = Неопределено;
	КонецПопытки;
	Если НовыйДоговор &lt;&gt; Неопределено Тогда
		Объект.ДоговорКонтрагента = НовыйДоговор;
	КонецЕсли;
КонецЕсли;
Объект.ОпределениеПараметровСчетаФактурыНаРеализацию();</ПослеЗагрузки>
					<Источник>ДокументСсылка.СчетФактура</Источник>
					<Приемник>ДокументСсылка.СчетФактураВыданный</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>21</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВидСчетаФактуры</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСчетаФактуры" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидСчетаФактурыВыставленного"/>
							<ПередВыгрузкой>Значение = "НаРеализацию";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>ДокументОснование --&gt; ДокументОснование</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДокументОснование" Вид="Реквизит"/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("СчетФактура", Источник);
УстановитьПараметрыДокументаОснованияСчетаФактуры();
Если ПустоеЗначение(ИмяПКО) = 1 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ", Значение);
	ОпределитьПКОДляДокумента();
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(Источник.Договор)=0) Тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ДатаПлатРасчДок --&gt; ДатаПлатежноРасчетногоДокумента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ДатаПлатРасчДок" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаПлатежноРасчетногоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>НомерПлатРасчДок --&gt; НомерПлатежноРасчетногоДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="НомерПлатРасчДок" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерПлатежноРасчетногоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>12</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>13</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Значение = Значение + Источник.Сумма + Источник.НДС;
КонецЦикла;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>14</Код>
							<Наименование> --&gt; СуммаНДС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>15</Код>
							<Наименование> --&gt; СуммаНДСДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНДСДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Значение = Значение + Источник.НДС;
КонецЦикла;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетФактураБезНДС</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетФактураБезНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; КодВидаОперации</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВидаОперации" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "01";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; КодСпособаВыставления</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодСпособаВыставления" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>16</Код>
							<Наименование> --&gt; ПлатежноРасчетныеДокументы</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежноРасчетныеДокументы" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДатаДокумента");
КоллекцияОбъектов.НоваяКолонка("НомерДокумента");
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.ДатаДокумента = Источник.ДатаПлатРасчДок;
КоллекцияОбъектов.НомерДокумента = СокрЛП(Источник.НомерПлатРасчДок);</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ДатаДокумента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаДокумента" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; НомерДокумента</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерДокумента" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>19</Код>
							<Наименование> --&gt; ДокументыОснования</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументыОснования" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДокументОснование");
КоллекцияОбъектов.НоваяКолонка("ИмяПКО");

ЭтоРеализация = 0;
Если ПустоеЗначение(Источник.ДокументОснование)=0 Тогда
	Если Источник.ДокументОснование.Вид() = "Реализация" Тогда
		ЭтоРеализация = 1;
	КонецЕсли;
КонецЕсли;

Если ЭтоРеализация = 1 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ", Источник.ДокументОснование);
	СписокПКОРеализации = ПолучитьСписокПравилКОРеализации();
    Для к=1 По СписокПКОРеализации.РазмерСписка() Цикл
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ДокументОснование = Источник.ДокументОснование;
		КоллекцияОбъектов.ИмяПКО = СписокПКОРеализации.ПолучитьЗначение(к);
	КонецЦикла;
Иначе
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ДокументОснование = Источник.ДокументОснование;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; ДокументОснование</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ИмяПКО)=0 Тогда
	ИмяПКО = ОбъектКоллекции.ИмяПКО;
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("СчетФактура", Источник);
	УстановитьПараметрыДокументаОснованияСчетаФактуры();
	Если ПустоеЗначение(ИмяПКО) = 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Документ", Значение);
		ОпределитьПКОДляДокумента();
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СчетФактура_ДокументОснование</Код>
					<Наименование>Документ: Сч.-факт.выд.</Наименование>
					<Порядок>1500</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<ПослеЗагрузки>// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = Объект.ТоварыИУслуги.Итог("Сумма") + ?(Не Объект.СуммаВключаетНДС, Объект.ТоварыИУслуги.Итог("СуммаНДС"), 0);

</ПослеЗагрузки>
					<Источник>ДокументСсылка.СчетФактура</Источник>
					<Приемник>ДокументСсылка.ОтражениеНачисленияНДС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>12</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Грузоотправитель --&gt; Грузоотправитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Грузополучатель --&gt; Грузополучатель</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>14</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ФормироватьПроводки</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФормироватьПроводки" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ПрямаяЗаписьВКнигу</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПрямаяЗаписьВКнигу" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>16</Код>
							<Наименование>ТабличнаяЧасть --&gt; ТоварыИУслуги</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ТоварыИУслуги" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ВидЦенности</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидЦенности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЦенностей"/>
								<ПередВыгрузкой>Если ОбъектКоллекции.Товар.Выбран()=1 Тогда
	Если ОбъектКоллекции.Товар.Вид() = "ОсновныеСредства" Тогда
		Значение = "ОС";
	ИначеЕсли ОбъектКоллекции.Товар.Вид() = "НематериальныеАктивы" Тогда
		Значение = "НМА";
	ИначеЕсли ОбъектКоллекции.Товар.Вид() = "Номенклатура" Тогда
		Если (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
			 или (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция)
			 или (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии) Тогда
			Значение = "Товары"; 
		ИначеЕсли (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал) Тогда
			Значение = "Материалы";
		ИначеЕсли (ОбъектКоллекции.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга) Тогда
			Значение = "ПосредническиеУслуги"; 
		Иначе
			Значение = "ПрочиеРаботыИУслуги";
		КонецЕсли;
	Иначе          
		Значение = "ПрочиеРаботыИУслуги";		
	КонецЕсли;
Иначе
	Значение = "ПрочиеРаботыИУслуги";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование>Товар --&gt; Номенклатура</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Товар" Вид="Реквизит"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование>Цена --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование>Сумма --&gt; Сумма</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СтавкаНДС) = 1 Тогда
	Значение = "БезНДС";
ИначеЕсли ОбъектКоллекции.СтавкаНДС.Ставка = 0 Тогда
	Если Найти(ОбъектКоллекции.СтавкаНДС.Наименование,"0")&gt;0 Тогда
		Значение = "БезНДС";
	Иначе
		Значение = "НДС0";
	КонецЕсли;
Иначе
	//определяем ставку
	Ставка = ОбъектКоллекции.НДС / (ОбъектКоллекции.Сумма - ОбъектКоллекции.НДС);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	Иначе
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "90.01.1";</ПередВыгрузкой>
							</Свойство>
							<Свойство Отключить="true">
								<Код>25</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Товар", ОбъектКоллекции.Товар);
Значение = ПолучитьСчетУчетаТоваров();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "90.03";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование>ГТД --&gt; НомерГТД</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="ГТД" Вид="Реквизит" Тип="СправочникСсылка.ГТД"/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование>ГТД --&gt; СтранаПроисхождения</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="ГТД" Вид="Реквизит" Тип="СправочникСсылка.ГТД"/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Реализация_Продажа</Код>
					<Наименование>Документ: Реализация</Наименование>
					<Порядок>1550</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидОтгрузки &lt;&gt; 0) И (Источник.ВидОтгрузки &lt;&gt; 1) Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("62.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовПоТаре", СчетаРасчетов.Получить("СчетРасчетовПоТаре"));</ПередВыгрузкой>
					<ПослеЗагрузки>// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Услуги") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "АгентскиеУслуги");

</ПослеЗагрузки>
					<Источник>ДокументСсылка.Реализация</Источник>
					<Приемник>ДокументСсылка.РеализацияТоваровУслуг</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРеализацияТоваров"/>
							<ПередВыгрузкой>Значение = "ПродажаКомиссия";
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Грузоотправитель --&gt; Грузоотправитель</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Грузополучатель --&gt; Грузополучатель</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>РасчетныйСчет --&gt; БанковскийСчетОрганизации</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="РасчетныйСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<Приемник Имя="БанковскийСчетОрганизации" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоТаре</Наименование>
							<Порядок>1100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоТаре" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>25</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетДоходов");
КоллекцияОбъектов.НоваяКолонка("Субконто");
КоллекцияОбъектов.НоваяКолонка("СчетРасходов");
КоллекцияОбъектов.НоваяКолонка("ПереданныеСчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДСПоРеализации");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");

Если ПустоеЗначение(Константа.ДатаНачалаБухОтчетности) = 1 Тогда
    Использовать91 = 0;
Иначе
	Использовать91 = ?(Константа.ДатаНачалаБухОтчетности &gt; Источник.ДатаДок, 0, 1);
КонецЕсли;

//сначала заполним таблицу из документа
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	Если (Источник.Номенклатура.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.Продукция)
		и (Источник.Номенклатура.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.Материал)
		и (Источник.Номенклатура.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.ТоварНаКомиссии)
		и (Источник.Номенклатура.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.Товар) Тогда
		Продолжить;
	КонецЕсли;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.Номенклатура;
	КоллекцияОбъектов.Количество = Источник.Количество;
	КоллекцияОбъектов.Коэффициент = 1;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.Сумма;
	
	СтавкаНДС = Источник.СтавкаНДС;
	Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
	ПолучитьСтавкуНДС();
	КоллекцияОбъектов.СтавкаНДС =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	
	КоллекцияОбъектов.СуммаНДС = Источник.НДС;
	
	Если ПустоеЗначение(Источник.Номенклатура) = 0 Тогда
		Если Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
			КоллекцияОбъектов.СчетДоходов = "90.01.2";
			КоллекцияОбъектов.СчетРасходов = "90.02.2";
			КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
			КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
		ИначеЕсли (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал) И (Использовать91=1) Тогда
			КоллекцияОбъектов.СчетДоходов = "91.01";
			КоллекцияОбъектов.СчетРасходов = "91.02";
			КоллекцияОбъектов.Субконто = Источник.СтатьяПрочихДоходовИРасходов;
			КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "91.02";
		Иначе
			КоллекцияОбъектов.СчетДоходов = "90.01.1";
			КоллекцияОбъектов.СчетРасходов = "90.02.1";
			КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
			КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
		КонецЕсли;
	КонецЕсли;

	Если Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии Тогда
		КоллекцияОбъектов.ПереданныеСчетУчета = "004.02";
	ИначеЕсли Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
		КоллекцияОбъектов.ПереданныеСчетУчета = "45.01";
	ИначеЕсли Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		КоллекцияОбъектов.ПереданныеСчетУчета = "45.02";
	Иначе
		КоллекцияОбъектов.ПереданныеСчетУчета = "45.03";
	КонецЕсли;
		
	Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
	Параметры.ПараметрыАлгоритмов.Установить("Товар",Источник.Номенклатура);
	КоллекцияОбъектов.СчетУчета = ПолучитьСчетУчетаТоваров();
	
КонецЦикла;

РаспределитьГТД();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>44</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство Отключить="true">
								<Код>34</Код>
								<Наименование> --&gt; Себестоимость</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Себестоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; НомерГТД</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; СтранаПроисхождения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Субконто)=0 Тогда
	Если ОбъектКоллекции.Субконто.Вид()="ПрочиеДоходыИРасходы" Тогда
		ИмяПКО = "ПрочиеДоходыИРасходы";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; СчетРасходов</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; ПереданныеСчетУчета</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПереданныеСчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>43</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>45</Код>
							<Наименование> --&gt; Услуги</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Услуги" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Содержание");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетДоходов");
КоллекцияОбъектов.НоваяКолонка("Субконто");
КоллекцияОбъектов.НоваяКолонка("СчетРасходов");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДСПоРеализации");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");

Если ПустоеЗначение(Константа.ДатаНачалаБухОтчетности) = 1 Тогда
    Использовать91 = 0;
Иначе
	Использовать91 = ?(Константа.ДатаНачалаБухОтчетности &gt; Источник.ДатаДок, 0, 1);
КонецЕсли;

//сначала заполним таблицу из документа
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	КоллекцияОбъектов.Содержание = ?(ПустоеЗначение(Источник.Номенклатура.ПолнНаименование) = 0, Источник.Номенклатура.ПолнНаименование, Источник.Номенклатура.Наименование);
	
	Если (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция)
		или (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал)
		или (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии)
		или (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		или (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга) Тогда
		Продолжить;
	КонецЕсли;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.Номенклатура;	
	КоллекцияОбъектов.Количество = Источник.Количество;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.Сумма;
		
	СтавкаНДС = Источник.СтавкаНДС;
	Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
	ПолучитьСтавкуНДС();
	КоллекцияОбъектов.СтавкаНДС =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	
	КоллекцияОбъектов.СуммаНДС = Источник.НДС;
	
	Если ПустоеЗначение(Источник.Номенклатура) = 0 Тогда
		Если Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
			КоллекцияОбъектов.СчетДоходов = "90.01.2";
			КоллекцияОбъектов.СчетРасходов = "90.02.2";
			КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
			КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
		ИначеЕсли (Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал) И (Использовать91=1) Тогда
			КоллекцияОбъектов.СчетДоходов = "91.01";
			КоллекцияОбъектов.СчетРасходов = "91.02";
			КоллекцияОбъектов.Субконто = Источник.СтатьяПрочихДоходовИРасходов;
			КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "91.02";
		Иначе
			КоллекцияОбъектов.СчетДоходов = "90.01.1";
			КоллекцияОбъектов.СчетРасходов = "90.02.1";
			КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
			КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
		КонецЕсли;
	КонецЕсли;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>47</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>46</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>48</Код>
								<Наименование> --&gt; Содержание</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>56</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>51</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>49</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>52</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>53</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>50</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Субконто)=0 Тогда
	Если ОбъектКоллекции.Субконто.Вид()="ПрочиеДоходыИРасходы" Тогда
		ИмяПКО = "ПрочиеДоходыИРасходы";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>54</Код>
								<Наименование> --&gt; СчетРасходов</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>55</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>57</Код>
								<Наименование> --&gt; Содержание</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Реализация_ОтчетКомитентуОПродажах</Код>
					<Наименование>Документ: Реализация</Наименование>
					<Порядок>1600</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидОтгрузки &lt;&gt; 0) Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("62.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетРасчетовЗаКомиссионныеТовары"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));

</ПередВыгрузкой>
					<ПослеЗагрузки>Если ЗначениеЗаполнено(Объект.СчетДоходов) Тогда
	СведенияОСчете = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Объект.СчетДоходов);
	Если СведенияОСчете.КоличествоСубконто&gt; 0 Тогда
		Объект.Субконто = СведенияОСчете.ВидСубконто1ТипЗначения.ПривестиЗначение(Объект.Субконто);
	КонецЕсли;
КонецЕсли;

// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары");
Объект.СуммаВознаграждения = Объект.Товары.Итог("СуммаВознаграждения")+?(Объект.СуммаВключаетНДС,0,Объект.Товары.Итог("СуммаНДСВознаграждения"));
	
</ПослеЗагрузки>
					<Источник>ДокументСсылка.Реализация</Источник>
					<Приемник>ДокументСсылка.ОтчетКомитентуОПродажах</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийОтчетКомитентуОПродажах"/>
							<ПередВыгрузкой>Значение = "ОтчетОПродажах";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СпособРасчетаКомиссионногоВознаграждения</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособРасчетаКомиссионногоВознаграждения" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения"/>
							<ПередВыгрузкой>Значение = "НеРассчитывается";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ПроцентКомиссионногоВознаграждения</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентКомиссионногоВознаграждения" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СтавкаНДСВознаграждения</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДСВознаграждения" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "БезНДС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>17</Код>
							<Наименование> --&gt; СуммаВознаграждения</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВознаграждения" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СчетДоходов</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "90.01.1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Субконто</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто" Вид="Реквизит"/>
							<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(Источник.Номенклатура)=0 Тогда
		Если Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
			Если ПустоеЗначение(Источник.Номенклатура.ВидДеятельности)=0 Тогда
				Значение = Источник.Номенклатура.ВидДеятельности;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "90.03";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; УдержатьВознаграждение</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УдержатьВознаграждение" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; УслугаПоВознаграждению</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УслугаПоВознаграждению" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(Источник.Номенклатура)=0 Тогда
		Если Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
			Значение = Источник.Номенклатура;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>25</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СуммаВознаграждения");
КоллекцияОбъектов.НоваяКолонка("СуммаНДСВознаграждения");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если (Источник.Номенклатура.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.ПосредническаяУслуга) Тогда
		Продолжить;
	КонецЕсли;

	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.СуммаВознаграждения = Источник.Сумма;
	КоллекцияОбъектов.СуммаНДСВознаграждения = Источник.НДС;
КонецЦикла;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; СуммаВознаграждения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВознаграждения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; СуммаНДСВознаграждения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДСВознаграждения" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Реализация_ОтчетКомиссионераОПродажах</Код>
					<Наименование>Документ: Реализация</Наименование>
					<Порядок>1650</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидОтгрузки &lt;&gt; 2) Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("62.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансамВыданным", СчетаРасчетов.Получить("СчетРасчетовЗаКомиссионныеТовары"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));
Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("60.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовЗаПосредническиеУслуги", СчетаРасчетов.Получить("СчетРасчетов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансамПолученным", СчетаРасчетов.Получить("СчетАвансов"));
                                                 </ПередВыгрузкой>
					<Источник>ДокументСсылка.Реализация</Источник>
					<Приемник>ДокументСсылка.ОтчетКомиссионераОПродажах</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Грузоотправитель --&gt; Грузоотправитель</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузоотправитель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Грузополучатель --&gt; Грузополучатель</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Грузополучатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СпособРасчетаКомиссионногоВознаграждения</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособРасчетаКомиссионногоВознаграждения" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения"/>
							<ПередВыгрузкой>Значение = "НеРассчитывается";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ПроцентКомиссионногоВознаграждения</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентКомиссионногоВознаграждения" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СтавкаНДСВознаграждения</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДСВознаграждения" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "БезНДС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; СуммаВознаграждения</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВознаграждения" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СчетУчетаНДС</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "19.03";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансамВыданным</Наименование>
							<Порядок>1350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансамВыданным" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; СчетУчетаРасчетовЗаПосредническиеУслуги</Наименование>
							<Порядок>1450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовЗаПосредническиеУслуги" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансамПолученным</Наименование>
							<Порядок>1500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансамПолученным" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; УдержатьВознаграждение</Наименование>
							<Порядок>1550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УдержатьВознаграждение" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>33</Код>
							<Наименование> --&gt; Покупатели</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Покупатели" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВыставленСФ");
КоллекцияОбъектов.НоваяКолонка("ДатаСФ");
КоллекцияОбъектов.НоваяКолонка("КлючСтроки");
КоллекцияОбъектов.НоваяКолонка("Покупатель");
КоллекцияОбъектов.НоваяКолонка("СчетФактура");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Покупатель = Источник.Контрагент;
КоллекцияОбъектов.КлючСтроки = 1;
//найдем счет-фактуру
СчетФактура = СоздатьОбъект("Документ");
СчетФактура.ВыбратьПодчиненныеДокументы(НачГода(Источник.ДатаДок),КонГода(Источник.ДатаДок),Источник);
ДокументСчетФактура = "";
Пока СчетФактура.ПолучитьДокумент() = 1 Цикл
	Если (СчетФактура.Проведен() = 1) и (СчетФактура.Вид() = "СчетФактура") Тогда
		ДокументСчетФактура = СчетФактура.ТекущийДокумент();
	КонецЕсли;
КонецЦикла;
Если ПустоеЗначение(ДокументСчетФактура)=0 Тогда
	КоллекцияОбъектов.ВыставленСФ = 1;
	КоллекцияОбъектов.ДатаСФ = ДокументСчетФактура.ДатаДок;
	КоллекцияОбъектов.СчетФактура = ДокументСчетФактура;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; КлючСтроки</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КлючСтроки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; Покупатель</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Покупатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; ВыставленСФ</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВыставленСФ" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; ДатаСФ</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаСФ" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; СчетФактура</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетФактура" Вид="Реквизит" Тип="ДокументСсылка.СчетФактураВыданный"/>
								<КодПравилаКонвертации>СчетФактура                                       </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>39</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетДоходов");
КоллекцияОбъектов.НоваяКолонка("Субконто");
КоллекцияОбъектов.НоваяКолонка("СчетРасходов");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДСПоРеализации");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");
КоллекцияОбъектов.НоваяКолонка("КлючСтроки");

//сначала заполним таблицу из документа
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.КлючСтроки = 1;
	КоллекцияОбъектов.Номенклатура = Источник.Номенклатура;
	КоллекцияОбъектов.Количество = Источник.Количество;
	КоллекцияОбъектов.Коэффициент = 1;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.Сумма;
	
	СтавкаНДС = Источник.СтавкаНДС;
	Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
	ПолучитьСтавкуНДС();
	КоллекцияОбъектов.СтавкаНДС =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	
	КоллекцияОбъектов.СуммаНДС = Источник.НДС;
	
	КоллекцияОбъектов.СчетДоходов = "90.01.1";
	КоллекцияОбъектов.СчетРасходов = "90.02.1";
	Если ПустоеЗначение(Источник.Номенклатура)=0 Тогда
		КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
		Если Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии Тогда
			КоллекцияОбъектов.СчетУчета = "004.02";
		ИначеЕсли Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			КоллекцияОбъектов.СчетУчета = "45.01";
		ИначеЕсли Источник.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			КоллекцияОбъектов.СчетУчета = "45.02";
		Иначе
			КоллекцияОбъектов.СчетУчета = "45.03";
		КонецЕсли;
	КонецЕсли;

	КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
КонецЦикла;

РаспределитьГТД();</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; КлючСтроки</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КлючСтроки" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>46</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>43</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>45</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>61</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>52</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>49</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>54</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>57</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>51</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
							</Свойство>
							<Свойство>
								<Код>58</Код>
								<Наименование> --&gt; СчетРасходов</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>59</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>60</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>47</Код>
								<Наименование> --&gt; НомерГТД</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>50</Код>
								<Наименование> --&gt; СтранаПроисхождения</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Реализация_ОтчетОРозничныхПродажах</Код>
					<Наименование>Документ: Реализация</Наименование>
					<Порядок>1700</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидОтгрузки &lt;&gt; 3) Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
</ПередВыгрузкой>
					<Источник>ДокументСсылка.Реализация</Источник>
					<Приемник>ДокументСсылка.ОтчетОРозничныхПродажах</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>10</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийОтчетОРозничныхПродажах"/>
							<ПередВыгрузкой>Если Параметры.СписокСкладовНТТ.НайтиЗначение(Источник.МестоХранения)&gt;0 Тогда
	Значение = "ОтчетНТТОПродажах";
Иначе
	Значение = "ОтчетККМОПродажах";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КратностьДокумента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КурсДокумента</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ДвижениеДенежныхСредств --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ДвижениеДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.ДвиженияДенежныхСредств"/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СчетКасса</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКасса" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,?(Источник.Договор.ВалютаДоговора = Параметры.Рубли, СчетПоКоду("50.1") ,СчетПоКоду("50.11")),СчетПоКоду("50.1"));
Иначе
	Значение = СчетПоКоду("50.1");
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>16</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Себестоимость");
//КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетУчета"); 
КоллекцияОбъектов.НоваяКолонка("СчетДоходов");
КоллекцияОбъектов.НоваяКолонка("Субконто");
КоллекцияОбъектов.НоваяКолонка("СчетРасходов");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДСПоРеализации");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");
КоллекцияОбъектов.НоваяКолонка("Себестоимость");

ЭтоСкладНТТ = 0;
//для склада НТТ "Сумма включает НДС" должна быть всегда установлен
Если Источник.МестоХранения.ТипСклада = Перечисление.ТипыСкладов.Розничный Тогда
	Если Параметры.СписокСкладовНТТ.НайтиЗначение(Источник.МестоХранения)&gt;0 Тогда
		ЭтоСкладНТТ = 1;
	КонецЕсли;
КонецЕсли;

//сначала заполним таблицу из документа
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.Номенклатура;
	КоллекцияОбъектов.Количество = Источник.Количество;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.Сумма;
	
	Если Источник.ЕНВД = 0 Тогда
		СтавкаНДС = Источник.СтавкаНДС;
		Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
		ПолучитьСтавкуНДС();
		КоллекцияОбъектов.СтавкаНДС =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	Иначе
		КоллекцияОбъектов.СтавкаНДС = "БезНДС";
	КонецЕсли;
	
	КоллекцияОбъектов.СуммаНДС = Источник.НДС;
		
	Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
	Параметры.ПараметрыАлгоритмов.Установить("Товар",Источник.Номенклатура);
	КоллекцияОбъектов.СчетУчета = ПолучитьСчетУчетаТоваров();
	
	Если (Источник.ЕНВД = 0)
		и (Источник.Номенклатура.ТипНоменклатуры &lt;&gt; Перечисление.ТипыНоменклатуры.УслугаЕНВД) Тогда
		КоллекцияОбъектов.СчетДоходов = "90.01.1";
		КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
		КоллекцияОбъектов.СчетРасходов = "90.02.1";
	Иначе
		КоллекцияОбъектов.СчетДоходов = "90.01.2";
		КоллекцияОбъектов.Субконто = Источник.Номенклатура.ВидДеятельности;
		КоллекцияОбъектов.СчетРасходов = "90.02.2";
	КонецЕсли;
		
	КоллекцияОбъектов.СчетУчетаНДСПоРеализации = "90.03";
	
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; Себестоимость</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Себестоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; СчетРасходов</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; НомерГТД</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; СтранаПроисхождения</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПеремещениеМПЗ_ТребованиеНакладная</Код>
					<Наименование>Документ: Перемещение МПЗ</Наименование>
					<Порядок>1900</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидПеремещения &lt;&gt; 0) ИЛИ (Источник.УчитыватьНаМЦ &lt;&gt; 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетЗатрат");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","Субконто");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПеремещениеМПЗ</Источник>
					<Приемник>ДокументСсылка.ТребованиеНакладная</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СчетаУчетаЗатратВТаблице</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетаУчетаЗатратВТаблице" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>СчетЗатрат --&gt; СчетЗатрат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Основной"/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ПодразделениеЗатрат</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Субконто1 --&gt; Субконто1</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Субконто1" Вид="Реквизит"/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Субконто2 --&gt; Субконто2</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Субконто2" Вид="Реквизит"/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Субконто3 --&gt; Субконто3</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Субконто3" Вид="Реквизит"/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НДСвСтоимостиТоваров</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСвСтоимостиТоваров" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействиеНДСВСтоимостиТоваров"/>
							<ПередВыгрузкой>Значение = "НеИзменять";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>УчетРасходовДляНУ --&gt; ОтражениеВУСН</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="УчетРасходовДляНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовДляНУ"/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<КодПравилаКонвертации>ВариантыУчетаРасходовДляНУ                        </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>17</Код>
							<Наименование>ТабличнаяЧасть --&gt; Материалы</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Материалы" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>20</Код>
								<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; Счет</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Счет" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
Параметры.ПараметрыАлгоритмов.Установить("Товар",ОбъектКоллекции.Номенклатура);
Значение = ПолучитьСчетУчетаТоваров();
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
								<КодПравилаКонвертации>ВариантыУчетаРасходовДляНУ                        </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник.УчетРасходовДляНУ;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПеремещениеМПЗ_ПередачаМатериаловВЭксплуатацию</Код>
					<Наименование>Документ: Перемещение МПЗ</Наименование>
					<Порядок>1950</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидПеремещения &lt;&gt; 0) ИЛИ (Источник.УчитыватьНаМЦ &lt;&gt; 1) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПеремещениеМПЗ</Источник>
					<Приемник>ДокументСсылка.ПередачаМатериаловВЭксплуатацию</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Местонахождение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Местонахождение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование>ТабличнаяЧасть --&gt; ИнвентарьИХозяйственныеПринадлежности</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ИнвентарьИХозяйственныеПринадлежности" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>10</Код>
								<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
								<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
Параметры.ПараметрыАлгоритмов.Установить("Товар",ОбъектКоллекции.Номенклатура);
Значение = ПолучитьСчетУчетаТоваров();
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник.МОЛ;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
								<КодПравилаКонвертации>ВариантыУчетаРасходовДляНУ                        </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник.УчетРасходовДляНУ;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПеремещениеМПЗ_ПеремещениеТоваров</Код>
					<Наименование>Документ: Перемещение МПЗ</Наименование>
					<Порядок>2000</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ВидПеремещения &lt;&gt; 1) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПеремещениеМПЗ</Источник>
					<Приемник>ДокументСсылка.ПеремещениеТоваров</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; НДСвСтоимостиТоваров</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСвСтоимостиТоваров" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействиеНДСВСтоимостиТоваров"/>
							<ПередВыгрузкой>Значение = "НеИзменять";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>МестоХранения --&gt; СкладОтправитель</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="СкладОтправитель" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>МестоХраненияПриемник --&gt; СкладПолучатель</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="МестоХраненияПриемник" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="СкладПолучатель" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>10</Код>
							<Наименование>ТабличнаяЧасть --&gt; Товары</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Номенклатура)=0 Тогда
	Если ОбъектКоллекции.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>17</Код>
								<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Если ОбъектКоллекции.Количество &lt;&gt; 0 Тогда
	Значение = ОбъектКоллекции.Сумма / ОбъектКоллекции.Количество;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>Сумма --&gt; Себестоимость</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Себестоимость" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
Параметры.ПараметрыАлгоритмов.Установить("Товар",ОбъектКоллекции.Номенклатура);
Значение = ПолучитьСчетУчетаТоваров();
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; НовыйСчетУчета</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НовыйСчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХраненияПриемник);
Параметры.ПараметрыАлгоритмов.Установить("Товар",ОбъектКоллекции.Номенклатура);
Значение = ПолучитьСчетУчетаТоваров();
</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>24</Код>
							<Наименование>ТабличнаяЧасть --&gt; ТоварыНаКомиссии</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ТоварыНаКомиссии" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Отказ = 1;
Если ПустоеЗначение(ОбъектКоллекции.Номенклатура)=0 Тогда
	Если ОбъектКоллекции.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии Тогда
		Отказ = 0;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>30</Код>
								<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование>Количество --&gt; Количество</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Если ОбъектКоллекции.Количество &lt;&gt; 0 Тогда
	Значение = ОбъектКоллекции.Сумма / ОбъектКоллекции.Количество;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
Параметры.ПараметрыАлгоритмов.Установить("Товар",ОбъектКоллекции.Номенклатура);
Значение = ПолучитьСчетУчетаТоваров();
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; НовыйСчетУчета</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НовыйСчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХраненияПриемник);
Параметры.ПараметрыАлгоритмов.Установить("Товар",ОбъектКоллекции.Номенклатура);
Значение = ПолучитьСчетУчетаТоваров();
</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>НезавершенноеПроизводство</Код>
					<Наименование>Документ: Незавершенное производство</Наименование>
					<Порядок>2050</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.НезавершенноеПроизводство</Источник>
					<Приемник>ДокументСсылка.ИнвентаризацияНЗП</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "20.01";</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>7</Код>
							<Наименование>ТабличнаяЧасть --&gt; Состав</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Состав" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>8</Код>
								<Наименование>ВидДеятельности --&gt; НоменклатурнаяГруппа</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ВидДеятельности" Вид="Реквизит" Тип="СправочникСсылка.ВидыДеятельности"/>
								<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
								<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование>УчетРасходовДляНУ --&gt; ОтражениеВУСН</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="УчетРасходовДляНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовДляНУ"/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование>Остаток --&gt; Сумма</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Остаток" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; СуммаНУ</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНУ" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Если (ОбъектКоллекции.УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются)
	или (ОбъектКоллекции.УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Распределяются) Тогда
	Значение = ОбъектКоллекции.Остаток;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Счет</Код>
					<Наименование>Документ: Счет</Наименование>
					<Порядок>2100</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.Счет</Источник>
					<Приемник>ДокументСсылка.СчетНаОплатуПокупателю</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ОрганизацияПолучатель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОрганизацияПолучатель" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Значение = ?(Кратность=0, 1, Кратность);
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Курс = Валюта.Курс.Получить(Источник.ДатаДок);
		Значение = ?(Курс=0, 1, Курс);
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>12</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>РасчетныйСчет --&gt; СтруктурнаяЕдиница</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="РасчетныйСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<Приемник Имя="СтруктурнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = Источник.Итог("Всего");</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>17</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если (Источник.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар)
		или (Источник.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга)
		или (Источник.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция) 
		или (Источник.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал)
		или (Источник.Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии) Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.Номенклатура = Источник.Товар;
		КоллекцияОбъектов.Количество = Источник.Количество;
		КоллекцияОбъектов.Цена = Источник.Цена;
		КоллекцияОбъектов.Сумма = Источник.Всего;
		КоллекцияОбъектов.СуммаНДС = Источник.НДС;
		
		Если Источник.НДС = 0 Тогда
			КоллекцияОбъектов.СтавкаНДС = "БезНДС";
		Иначе
			//определяем ставку
			Ставка = Источник.НДС / (Источник.Всего - Источник.НДС);
			Если Ставка&gt;0.19 Тогда
				КоллекцияОбъектов.СтавкаНДС = "НДС20";
			ИначеЕсли Ставка&gt;0.17 Тогда
				КоллекцияОбъектов.СтавкаНДС = "НДС18";
			Иначе
				КоллекцияОбъектов.СтавкаНДС = "НДС10";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

Если КоллекцияОбъектов.КоличествоСтрок()=0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеМПЗ</Код>
					<Наименование>Документ: Поступление МПЗ</Наименование>
					<Порядок>2150</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("60.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовПоТаре", СчетаРасчетов.Получить("СчетРасчетовПоТаре"));
                                                 </ПередВыгрузкой>
					<ПослеЗагрузки>Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПоступлениеМПЗ</Источник>
					<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг"/>
							<ПередВыгрузкой>Значение = "ПокупкаКомиссия";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ТипЦен --&gt; ТипЦен</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦен"/>
							<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
							<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ДатаДокВходящий --&gt; ДатаВходящегоДокумента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ДатаДокВходящий" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>НомерДокВходящий --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="НомерДокВходящий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>МестоХранения --&gt; Склад</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="МестоХранения" Вид="Реквизит" Тип="СправочникСсылка.МестаХранения"/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>900</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоТаре</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоТаре" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; НДСВключенВСтоимость</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВСтоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>23</Код>
							<Наименование> --&gt; Товары</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДС");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");
КоллекцияОбъектов.НоваяКолонка("ОтражениеВУСН");

//сначала заполним таблицу из документа
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.Номенклатура;
	КоллекцияОбъектов.Количество = Источник.Количество;
	КоллекцияОбъектов.Коэффициент = 1;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.Всего;
	
	СтавкаНДС = Источник.СтавкаНДС;
	Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
	ПолучитьСтавкуНДС();
	КоллекцияОбъектов.СтавкаНДС =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	
	КоллекцияОбъектов.СуммаНДС = Источник.НДС;
	Параметры.ПараметрыАлгоритмов.Установить("ТоварМестоХранения",Источник.МестоХранения);
	Параметры.ПараметрыАлгоритмов.Установить("Товар", Источник.Номенклатура);
	КоллекцияОбъектов.СчетУчета = ПолучитьСчетУчетаТоваров();

	КоллекцияОбъектов.ОтражениеВУСН = ?(Источник.НеПринимаемые = 1, "НеПринимаются", "Принимаются");
	
	КоллекцияОбъектов.СчетУчетаНДС = "19.03";
	
	КоллекцияОбъектов.НомерГТД = Источник.ГТД;
	КоллекцияОбъектов.СтранаПроисхождения = Источник.ГТД;
КонецЦикла;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; СчетУчетаНДС</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; НомерГТД</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; СтранаПроисхождения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УслугиСтороннихОрганизаций</Код>
					<Наименование>Документ: Услуги сторонних организаций</Наименование>
					<Порядок>2200</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", ?(Источник.ТипИсполнителя = 0, СчетПоКоду("60.1"), СчетПоКоду("76.5")));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовПоТаре", СчетаРасчетов.Получить("СчетРасчетовПоТаре"));
</ПередВыгрузкой>
					<ПослеЗагрузки>Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);

//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "Услуги");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетЗатрат");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","Субконто");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
</ПослеЗагрузки>
					<Источник>ДокументСсылка.УслугиСтороннихОрганизаций</Источник>
					<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>14</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг"/>
							<ПередВыгрузкой>Значение = "ПокупкаКомиссия";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ДатаДокВходящий --&gt; ДатаВходящегоДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ДатаДокВходящий" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>НомерДокВходящий --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="НомерДокВходящий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; НДСВключенВСтоимость</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВСтоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>900</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоТаре</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоТаре" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>22</Код>
							<Наименование>ТабличнаяЧасть --&gt; Услуги</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Услуги" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>27</Код>
								<Наименование>НаименованиеУслуги --&gt; Содержание</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="НаименованиеУслуги" Вид="Реквизит" Тип="Строка"/>
								<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование>Всего --&gt; Цена</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Всего" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование>Всего --&gt; Сумма</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="Всего" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>СтавкаНДС = ОбъектКоллекции.СтавкаНДС;
Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
ПолучитьСтавкуНДС();
Значение =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; ПодразделениеЗатрат</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование>СчетЗатрат --&gt; СчетЗатрат</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Основной"/>
								<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; Субконто1</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто1" Вид="Реквизит"/>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто1);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; Субконто2</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто2" Вид="Реквизит"/>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; Субконто3</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто3" Вид="Реквизит"/>
								<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто3);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; СчетУчетаНДС</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "19.04";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование>УчетРасходовДляНУ --&gt; ОтражениеВУСН</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="УчетРасходовДляНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовДляНУ"/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
								<КодПравилаКонвертации>ВариантыУчетаРасходовДляНУ                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПлатежноеПоручение</Код>
					<Наименование>Документ: Плат.пор.</Наименование>
					<Порядок>2250</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();

Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Плательщик = "";БанкПлательщика = "";НомерСчетаПлательщика = "";БИКБанкаПлательщика = "";СчетБанкаПлательщика = "";ИННплательщика="";	
глПлатежныеРеквизиты(Источник.РасчетныйСчет, Плательщик, БанкПлательщика, НомерСчетаПлательщика, БИКБанкаПлательщика, СчетБанкаПлательщика, ИННплательщика,, 2);
Плательщик = СокрЛП(?(Источник.ПеречислениеНалога=1, Константа.НаименованиеПлательщикаПриПеречисленииНалогов, Плательщик));
ВходящиеДанные.Установить("ТекстПлательщика",Плательщик);
ВходящиеДанные.Установить("ИННПлательщика",?(Источник.ПеречислениеНалога=1,?(ПустаяСтрока(ИННплательщика)=1,"0", ИННплательщика), ИННплательщика));
ВходящиеДанные.Установить("КПППлательщика", ?(Источник.ПеречислениеНалога=1,?(ПустаяСтрока(Источник.КППплательщика)=1,"0", Источник.КППплательщика), Источник.КППплательщика));

Получатель = "";БанкПолучателя = "";НомерСчетаПолучателя = "";БИКБанкаПолучателя = "";СчетБанкаПолучателя = "";ИННполучателя="";
глПлатежныеРеквизиты(Источник.СчетКонтрагента, Получатель, БанкПолучателя, НомерСчетаПолучателя, БИКБанкаПолучателя, СчетБанкаПолучателя, ИННполучателя,, 2);
ВходящиеДанные.Установить("ТекстПолучателя",Получатель);
ВходящиеДанные.Установить("ИННПолучателя",ИННполучателя);
ВходящиеДанные.Установить("КПППолучателя",?(Источник.ПеречислениеНалога=1,?(ПустаяСтрока(Источник.КППполучателя)=1,"0", Источник.КППполучателя), Источник.КППполучателя));

Если ПустоеЗначение(Источник.РасчетныйСчет)=0 тогда
	Если Источник.РасчетныйСчет.ТипСчета=Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
		ВходящиеДанные.Установить("ВалютаДокумента", Параметры.Рубли);
	ИначеЕсли ПустоеЗначение(Источник.Договор)=0 Тогда
		ВходящиеДанные.Установить("ВалютаДокумента", ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли));
	Иначе
		ВходящиеДанные.Установить("ВалютаДокумента", Параметры.Рубли);
	КонецЕсли;
Иначе
	ВходящиеДанные.Установить("ВалютаДокумента", Параметры.Рубли);
КонецЕсли;</ПередВыгрузкой>
					<ПослеЗагрузки>Если Объект.ПеречислениеВБюджет Тогда
	СсылкаПредопределенного = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыНалоговИПлатежейВБюджет.ПрочиеНалогиИСборы");
	Если ЗначениеЗаполнено(СсылкаПредопределенного) Тогда
		Объект.Налог = СсылкаПредопределенного;
	КонецЕсли;
КонецЕсли;</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПлатежноеПоручение</Источник>
					<Приемник>ДокументСсылка.ПлатежноеПоручение</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>13</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>14</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>25</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>РасчетныйСчет --&gt; СчетОрганизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="РасчетныйСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<Приемник Имя="СчетОрганизации" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>ВидПлатежаСтрока --&gt; ВидПлатежа</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ВидПлатежаСтрока" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ВидПлатежа" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; НазначениеПлатежа</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазначениеПлатежа" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>СтрСуммаНДС = ФормирСуммаНДС(Источник.АвтоПодстСуммыНДС,Источник.Сумма,Источник.НДС,Источник.СтНДС);
Значение = СокрЛП(Источник.Содержание)+" "+СокрЛП(СтрСуммаНДС);
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>КодБК --&gt; КодБК</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="КодБК" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КодБК" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>КодОКАТО --&gt; КодОКАТО</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="КодОКАТО" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КодОКАТО" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>СчетКонтрагента --&gt; СчетКонтрагента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="СчетКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.РасчетныеСчета"/>
							<Приемник Имя="СчетКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ТекстПлательщика</Наименование>
							<Порядок>750</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекстПлательщика" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ИННПлательщика</Наименование>
							<Порядок>800</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИННПлательщика" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; КПППлательщика</Наименование>
							<Порядок>850</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПППлательщика" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ТекстПолучателя</Наименование>
							<Порядок>900</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекстПолучателя" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ИННПолучателя</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИННПолучателя" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; КПППолучателя</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПППолучателя" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Оплачено</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Оплачено" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;
ПодчДок = СоздатьОбъект("Документ");
Если ПодчДок.ВыбратьПодчиненныеДокументы(Источник.ДатаДок,Источник.ДатаДок+15,Источник) = 1 Тогда
	Пока ПодчДок.ПолучитьДокумент() = 1 Цикл
		Если ПодчДок.Вид() = "Выписка" Тогда
			Значение = 1;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>Очередность --&gt; ОчередностьПлатежа</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="Очередность" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ОчередностьПлатежа" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>ПеречислениеНалога --&gt; ПеречислениеВБюджет</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="ПеречислениеНалога" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПеречислениеВБюджет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>СтатусСоставителяПлДок --&gt; СтатусСоставителя</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="СтатусСоставителяПлДок" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="СтатусСоставителя" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>ПоказательТипа --&gt; ПоказательТипа</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="ПоказательТипа" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПоказательТипа" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ПоказательПериода --&gt; ПоказательПериода</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="ПоказательПериода" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПоказательПериода" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПоказательОснования --&gt; ПоказательОснования</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="ПоказательОснования" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПоказательОснования" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ПоказательНомера --&gt; ПоказательНомера</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="ПоказательНомера" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПоказательНомера" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПоказательДаты --&gt; ПоказательДаты</Наименование>
							<Порядок>1450</Порядок>
							<Источник Имя="ПоказательДаты" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ПоказательДаты" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ПоказательДаты)=1 Тогда
	Значение = 0;
Иначе
	Значение = Формат(Источник.ПоказательДаты,"ДДДММГГГГ");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ВидПеречисленияВБюджет</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПеречисленияВБюджет" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПеречисленийВБюджет"/>
							<ПередВыгрузкой>Если (Источник.ПоказательОснования = "ТП") или (Источник.ПоказательОснования = "ЗД") или
	   (Источник.ПоказательОснования = "БФ") или (Источник.ПоказательОснования = "ТР") или
	     (Источник.ПоказательОснования = "РС") или (Источник.ПоказательОснования = "ОТ") или
		   (Источник.ПоказательОснования = "РТ") или (Источник.ПоказательОснования = "ВУ") или
		     (Источник.ПоказательОснования = "ПР") или (Источник.ПоказательОснования = "АП") или
			   (Источник.ПоказательОснования = "АР") Тогда

	Значение = "НалоговыйПлатеж";
ИначеЕсли (Источник.ПоказательОснования = "ДЕ") или (Источник.ПоказательОснования = "ПО") или
	       (Источник.ПоказательОснования = "КВ") или (Источник.ПоказательОснования = "КТ") или
	        (Источник.ПоказательОснования = "ИД") или (Источник.ПоказательОснования = "ИП") или
  	         (Источник.ПоказательОснования = "ТУ") или (Источник.ПоказательОснования = "БД") или
	          (Источник.ПоказательОснования = "ИН") или (Источник.ПоказательОснования = "КП") Тогда
	Значение = "ТаможенныйПлатеж";
Иначе
	Значение = "ИнойПлатеж";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>29</Код>
							<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>1550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>Сумма --&gt; СуммаДокумента</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.СтавкаНДС)=0 Тогда
	//определим НДС расчетным методом
	Значение = "БезНДС";
	
	Если (Источник.Сумма - Источник.НДС)&lt;&gt;0 Тогда
		Ставка = Источник.НДС / (Источник.Сумма - Источник.НДС);
		Если Ставка&gt;0.19 Тогда
			Значение = "НДС20";
		ИначеЕсли Ставка&gt;0.17 Тогда
			Значение = "НДС18";
		ИначеЕсли Ставка &gt; 0 Тогда
			Значение = "НДС10";
		КонецЕсли;
	КонецЕсли;

Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>НДС --&gt; СуммаНДС</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>1750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийСписаниеДенежныхСредств"/>
							<ПередВыгрузкой>Если Источник.ПеречислениеНалога = 1 Тогда
	Значение = "ПеречислениеНалога";
Иначе
	Значение = "ПрочееСписание";
КонецЕсли;	</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>ИдентификаторПлатежа --&gt; ИдентификаторПлатежа</Наименование>
							<Порядок>1800</Порядок>
							<Источник Имя="ИдентификаторПлатежа" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ИдентификаторПлатежа" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ВидНалоговогоОбязательства</Наименование>
							<Порядок>1850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидНалоговогоОбязательства" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
							<ПередВыгрузкой>Значение = "Налог";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование>КодОКАТО --&gt; КодОКАТО</Наименование>
							<Порядок>1900</Порядок>
							<Источник Имя="КодОКАТО" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КодОКАТО" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Выписка_Списание</Код>
					<Наименование>Документ: Выписка</Наименование>
					<Порядок>2300</Порядок>
					<ПриВыгрузке>ПроверитьНаВозможностьВыгрузки();

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
Источник.ВыгрузитьТабличнуюЧасть(ТаблицаСтрок);
ТаблицаСтрок.НоваяКолонка("ВидОперации");
ТаблицаСтрок.НоваяКолонка("УникальностьОперации");
ТаблицаСтрок.НоваяКолонка("Контрагент");
ТаблицаСтрок.НоваяКолонка("Договор");
ТаблицаСтрок.НоваяКолонка("Банк");
ТаблицаСтрок.НоваяКолонка("ДоговорБанка");
ТаблицаСтрок.НоваяКолонка("Сумма");
ТаблицаСтрок.НоваяКолонка("БанковскийСчет");
ТаблицаСтрок.НоваяКолонка("СчетКонтрагента");
ТаблицаСтрок.НоваяКолонка("СтавкаНДС");
ТаблицаСтрок.НоваяКолонка("РучнаяНастройка_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа4_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа5_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа6_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа7_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("ДоходыЕНВД_УСН", "Число", 15, 2);

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Если Источник.БанковскийСчет.ТипСчета = Перечисление.ТипыБанковскихСчетов.Валютный Тогда
	Валютный = 2;
	Курс = Источник.Валюта.Курс.Получить(Источник.ДатаДок);
	Кратность = Источник.Валюта.Кратность.Получить(Источник.ДатаДок);
	Кратность = ?(Кратность=0,1,Кратность);
Иначе 
	Валютный = 1;
	Курс = 1;
	Кратность = 1;
КонецЕсли; 

СчН01 = СчетПоКоду("Н01"); 
СчН03 = СчетПоКоду("Н03");
СчН05 = СчетПоКоду("Н05");

ТаблицаРучногоУчетаУСН = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРучногоУчетаУСН.НоваяКолонка("НомерСтрокиДокумента");
ТаблицаРучногоУчетаУСН.НоваяКолонка("Доходы","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("Расходы","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("ДоходыБУ","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("РасходыБУ","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("ДоходыЕНВД","Число", 15, 2);

Операция = Источник.Операция;
Операция.ВыбратьПроводки();
Пока Операция.ПолучитьПроводку()=1 Цикл
	ТаблицаРучногоУчетаУСН.НоваяСтрока();
	ТаблицаРучногоУчетаУСН.НомерСтрокиДокумента = Операция.НомерСтрокиДокумента();
	Если Операция.Кредит.Счет  = СчН01 Тогда
		ТаблицаРучногоУчетаУСН.Доходы = ТаблицаРучногоУчетаУСН.Доходы + Операция.Сумма;
	ИначеЕсли Операция.Кредит.Счет = СчН03 Тогда
		ТаблицаРучногоУчетаУСН.ДоходыБУ = ТаблицаРучногоУчетаУСН.ДоходыБУ + Операция.Сумма;
	ИначеЕсли Операция.Кредит.Счет = СчН05 Тогда
		ТаблицаРучногоУчетаУСН.ДоходыЕНВД = ТаблицаРучногоУчетаУСН.ДоходыЕНВД + Операция.Сумма;
	КонецЕсли;
	
	Если Операция.Дебет.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда
		ТаблицаРучногоУчетаУСН.Расходы = ТаблицаРучногоУчетаУСН.Расходы + Операция.Сумма;
	ИначеЕсли Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0 Тогда
		ТаблицаРучногоУчетаУСН.РасходыБУ = ТаблицаРучногоУчетаУСН.РасходыБУ + Операция.Сумма;
	КонецЕсли;
КонецЦикла;

ТаблицаРучногоУчетаУСН.Свернуть("НомерСтрокиДокумента", "Доходы,Расходы,ДоходыБУ,РасходыБУ,ДоходыЕНВД");

//Определим, нужна ли ручная настройка УСН
Если Константа.ОбъектНалогообложения.Получить(Источник.ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
	ДоходыРасходы = 1;
Иначе
	ДоходыРасходы = 0;
КонецЕсли;

//классифицируем строки выписки
ТаблицаСтрок.ВыбратьСтроки();
Пока ТаблицаСтрок.ПолучитьСтроку()=1 Цикл
	ВидДвижения = ?(ПустоеЗначение(ТаблицаСтрок.ВидДвижения)=0,ТаблицаСтрок.ВидДвижения.ВидДвижения,"");
	Если ТаблицаСтрок.Приход=0 Тогда
		Если ТаблицаСтрок.КоррСчет.Выбран() = 0 Тогда //счет не указан
			ВалютаДоговора = ?(ПустоеЗначение(ТаблицаСтрок.Субконто2) = 0,ТаблицаСтрок.Субконто2.ВалютаДоговора,"");
			Если ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
				ТаблицаСтрок.КоррСчет = ?(Валютный = 1, СчетПоКоду("60.2"), СчетПоКоду("60.22"));
			    ТаблицаСтрок.ВидОперации = "ОплатаПоставщику";
			Иначе
				ТаблицаСтрок.ВидОперации = "ПрочееСписание";
			КонецЕсли;
		Иначе  //счет указан
			Если ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("60"))=1 Тогда
				ТаблицаСтрок.ВидОперации = "ОплатаПоставщику";
			ИначеЕсли ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("62"))=1 Тогда
				ТаблицаСтрок.ВидОперации = "ВозвратПокупателю";
			ИначеЕсли (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("68"))=1) или 
				        (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("69"))=1)Тогда
				ТаблицаСтрок.ВидОперации = "ПеречислениеНалога";
			ИначеЕсли (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("55"))=1) Тогда
				ТаблицаСтрок.ВидОперации = "ПереводНаДругойСчет";
			ИначеЕсли (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("66"))=1) или 
				        (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("67"))=1)Тогда
				ТаблицаСтрок.ВидОперации = "РасчетыПоКредитамИЗаймам";
			ИначеЕсли (ТаблицаСтрок.КоррСчет = СчетПоКоду("70")) Тогда
				ТаблицаСтрок.ВидОперации = "ПеречислениеЗП";
			ИначеЕсли (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.ЗП")) Тогда
				ТаблицаСтрок.ВидОперации = "ПеречислениеЗП";
			ИначеЕсли (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.1")) Тогда
				ТаблицаСтрок.ВидОперации = "ПрочееСписание";
			ИначеЕсли (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("71"))=1) Тогда
                ТаблицаСтрок.ВидОперации = "ПеречислениеПодотчетномуЛицу";
				//ТаблицаСтрок.Банк = Источник.БанковскийСчет.БанкОрганизации;
				//ТаблицаСтрок.СчетКонтрагента = Источник.БанковскийСчет;
			ИначеЕсли (ТаблицаСтрок.КоррСчет=СчетПоКоду("76.5"))или (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.6"))
				или (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.55")) или (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.66")) Тогда
				Если (ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности) или 
					  (ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоПрочимОперациям)  Тогда
					ТаблицаСтрок.ВидОперации = "ВозвратПокупателю";
				ИначеЕсли (ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг) Тогда
					ТаблицаСтрок.ВидОперации = "ОплатаПоставщику";
				Иначе
					ТаблицаСтрок.ВидОперации = "ПрочиеРасчетыСКонтрагентами";
					Если ТаблицаСтрок.Субконто2.Выбран()=1 Тогда
						//посмотрим, какой максимальный тип договора имеется
						НомСтр = 0;
						Если Параметры.ТаблицаДоговоров.НайтиЗначение(ТаблицаСтрок.Субконто2, НомСтр, "Договор") &lt;&gt; 0 Тогда
							ВидыДоговора = Параметры.ТаблицаДоговоров.ПолучитьЗначение(НомСтр,"ВидыДоговора");
							ВидыДоговора.Сортировать("ВесДоговора -,ВидДоговора +");
							ВидыДоговора.ВыбратьСтроки();
							//выбираем самую первую строчку
							Если ВидыДоговора.ПолучитьСтроку()=1 Тогда
								ВидДоговора = ВидыДоговора.ВидДоговора;
								Если (ВидДоговора = "СПоставщиком")или (ВидДоговора="СКомитентом") Тогда
									ТаблицаСтрок.ВидОперации = "ОплатаПоставщику";
								ИначеЕсли (ВидДоговора = "СПокупателем")или (ВидДоговора="СКомиссионером") Тогда
									ТаблицаСтрок.ВидОперации = "ВозвратПокупателю";
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли (ТаблицаСтрок.КоррСчет=СчетПоКоду("57.11")) Тогда
				ТаблицаСтрок.ВидОперации = "ПрочиеРасчетыСКонтрагентами";
				ТаблицаСтрок.Банк = Источник.БанковскийСчет.БанкОрганизации;
				ТаблицаСтрок.ДоговорБанка    = СоздатьОбъект("СписокЗначений");
				ТаблицаСтрок.ДоговорБанка.ДобавитьЗначение(Источник.БанковскийСчет.БанкОрганизации, "Банк");
				ТаблицаСтрок.ДоговорБанка.ДобавитьЗначение(Источник.Валюта, "Валюта");
				// получение наличных в кассу из банка отражается в кассовых документах
			ИначеЕсли ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("50"))=1 Тогда
				Продолжить;	
			ИначеЕсли (ТаблицаСтрок.КоррСчет = СчетПоКоду("51")) или (ТаблицаСтрок.КоррСчет = СчетПоКоду("52")) или
				  (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("55"))=1) Тогда
				Продолжить;	
			Иначе
				//если на счете есть субконто контрагент и договор - то используем вид операции "Прочие расчеты с контрагентами"
				Счет = ТаблицаСтрок.КоррСчет;
				СубконтоЕсть = 0;
				Для к=1 по Счет.КоличествоСубконто() Цикл
					СубконтоЕсть = СубконтоЕсть + ?(Счет.ВидСубконто(к) = ВидыСубконто.Контрагенты,3,?(Счет.ВидСубконто(к) = ВидыСубконто.Договоры,1,0));
				КонецЦикла;
				ТаблицаСтрок.ВидОперации = ?(СубконтоЕсть = 4,"ПрочиеРасчетыСКонтрагентами","ПрочееСписание");
			КонецЕсли;
		КонецЕсли;
		ТаблицаСтрок.Сумма = ТаблицаСтрок.Расход;
		ТаблицаСтрок.БанковскийСчет = Источник.БанковскийСчет;
	ИначеЕсли ТаблицаСтрок.КоррСчет.Выбран()=1 Тогда
		//в Бух7 списание с одного расчетного счета на другой попадает в выписку того счета, на который приходят денежные средства
		//в Бух8 наоборот, эта операция определяется документом того счета, с которого списываются денежные средства
		Если (ТаблицаСтрок.КоррСчет = СчетПоКоду("51")) или (ТаблицаСтрок.КоррСчет = СчетПоКоду("52")) или
			  (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("55"))=1) Тогда
				ТаблицаСтрок.ВидОперации = "ПереводНаДругойСчет";
				ТаблицаСтрок.Сумма = ТаблицаСтрок.Приход;
				ТаблицаСтрок.БанковскийСчет = ТаблицаСтрок.Субконто1;
				ТаблицаСтрок.Субконто1 = Источник.БанковскийСчет;
		Иначе
			Продолжить;
		КонецЕсли;
	Иначе
		Продолжить;
	КонецЕсли;
	
	//заполняем контрагента и договор
	Счет = ТаблицаСтрок.КоррСчет;
	Для к=1 по Счет.КоличествоСубконто() Цикл
		Если (Счет.ВидСубконто(к) = ВидыСубконто.Контрагенты) или (Счет.ВидСубконто(к) = ВидыСубконто.Сотрудники) Тогда
			ТаблицаСтрок.Контрагент = ТаблицаСтрок.ПолучитьЗначение(ТаблицаСтрок.НомерСтроки,"Субконто"+к);
		ИначеЕсли Счет.ВидСубконто(к) = ВидыСубконто.Договоры Тогда
			ТаблицаСтрок.Договор = ТаблицаСтрок.ПолучитьЗначение(ТаблицаСтрок.НомерСтроки,"Субконто"+к);
		//ИначеЕсли Счет.ВидСубконто(к) = ВидыСубконто.БанковскиеСчета Тогда
		//	ТаблицаСтрок.СчетКонтрагента = ТаблицаСтрок.ПолучитьЗначение(ТаблицаСтрок.НомерСтроки,"Субконто"+к);
		КонецЕсли;
	КонецЦикла;
	
	//пытаемся определить контрагента, если он не заполнен
	Если (ПустоеЗначение(ТаблицаСтрок.Контрагент)=1) и (ПустоеЗначение(ТаблицаСтрок.ПервичныйДокумент)=0) Тогда
		Если (Метаданные.Документ(ТаблицаСтрок.ПервичныйДокумент.Вид()).РеквизитШапки("Контрагент").Выбран()=1) Тогда
			ТаблицаСтрок.Контрагент = ТаблицаСтрок.ПервичныйДокумент.Контрагент;			
		КонецЕсли;
	КонецЕсли;	
	Если (ПустоеЗначение(ТаблицаСтрок.Контрагент)=1) и (ПустоеЗначение(ТаблицаСтрок.ДокументПоставки)=0) Тогда
		Если (Метаданные.Документ(ТаблицаСтрок.ДокументПоставки.Вид()).РеквизитШапки("Контрагент").Выбран()=1) Тогда
			ТаблицаСтрок.Контрагент = ТаблицаСтрок.ДокументПоставки.Контрагент;			
		КонецЕсли;
	КонецЕсли;
	
	//пытаемся определить счет контрагента, если он не заполнен
	//Если (ПустоеЗначение(ТаблицаСтрок.СчетКонтрагента)=1) и (ПустоеЗначение(ТаблицаСтрок.ПервичныйДокумент)=0) Тогда
	//	Если (Метаданные.Документ(ТаблицаСтрок.ПервичныйДокумент.Вид()).РеквизитШапки("СчетКонтрагента").Выбран()=1) Тогда
	//		ТаблицаСтрок.СчетКонтрагента = ТаблицаСтрок.ПервичныйДокумент.СчетКонтрагента;			
	//	КонецЕсли;
	//КонецЕсли;
	//Если (ПустоеЗначение(ТаблицаСтрок.СчетКонтрагента)=1) и (ПустоеЗначение(ТаблицаСтрок.Контрагент)=0) Тогда
	//	Если (ПустоеЗначение(ТаблицаСтрок.Контрагент.ОсновнойСчет)=0) Тогда
	//		ТаблицаСтрок.СчетКонтрагента = ТаблицаСтрок.Контрагент.ОсновнойСчет;
	//	Иначе
	//		//берем первый попавшийся 
	//		РасчетныеСчета = СоздатьОбъект("Справочник.РасчетныеСчета");
	//		РасчетныеСчета.ИспользоватьВладельца(ТаблицаСтрок.Контрагент);
	//		РасчетныеСчета.ВыбратьЭлементы();
	//		Если РасчетныеСчета.ПолучитьЭлемент()=1 Тогда
	//			 ТаблицаСтрок.СчетКонтрагента = РасчетныеСчета.ТекущийЭлемент();
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если (ТаблицаСтрок.ПервичныйДокумент.Вид() = "ПлатежноеПоручение") или (ТаблицаСтрок.ПервичныйДокумент.Вид()="ПлатежноеТребование") Тогда
		ТаблицаСтрок.СтавкаНДС = ТаблицаСтрок.ПервичныйДокумент.СтавкаНДС;
	Иначе
		ТаблицаСтрок.ПервичныйДокумент = "";	
	КонецЕсли;
	
	Если ПустоеЗначение(ТаблицаСтрок.ВидОперации)=0 Тогда
		ПрефиксУникальности = Строка(ТаблицаСтрок.НомерСтрокиДокумента);
		
		Если (ТаблицаСтрок.ВидОперации = "ПеречислениеЗП") и (ТаблицаСтрок.КоррСчет = СчетПоКоду("70")) Тогда
			ПрефиксУникальности = "00";
		КонецЕсли;
		ТаблицаСтрок.УникальностьОперации = ПрефиксУникальности + ТаблицаСтрок.ВидОперации + ЗначениеВСтрокуВнутр(ТаблицаСтрок.Контрагент);
	КонецЕсли;
	
	//Заполняем ручную настройку УСН
	СтрокаУСН = 0;
	Если ТаблицаРучногоУчетаУСН.НайтиЗначение(ТаблицаСтрок.НомерСтрокиДокумента, СтрокаУСН, "НомерСтрокиДокумента") = 1 Тогда
		Если (ДоходыРасходы = 0) ИЛИ (ТаблицаСтрок.ВидОперации = "ПрочееСписание") ИЛИ (ТаблицаСтрок.ВидОперации = "ПрочиеРасчетыСКонтрагентами")
			ИЛИ (ТаблицаСтрок.ВидОперации = "РасчетыПоКредитамИЗаймам") ИЛИ (ТаблицаСтрок.ВидОперации = "") Тогда
			ТаблицаРучногоУчетаУСН.ПолучитьСтрокуПоНомеру(СтрокаУСН);
			Если (ТаблицаРучногоУчетаУСН.Доходы &lt;&gt; 0) ИЛИ (ТаблицаРучногоУчетаУСН.Расходы &lt;&gt; 0)
				ИЛИ (ТаблицаРучногоУчетаУСН.ДоходыБУ &lt;&gt; 0)  ИЛИ (ТаблицаРучногоУчетаУСН.РасходыБУ &lt;&gt; 0)
				ИЛИ (ТаблицаРучногоУчетаУСН.ДоходыЕНВД &lt;&gt; 0) Тогда
				ТаблицаСтрок.РучнаяНастройка_УСН = 1;
				ТаблицаСтрок.Графа4_УСН          = ТаблицаРучногоУчетаУСН.ДоходыБУ;
				ТаблицаСтрок.Графа5_УСН          = ?(ТаблицаРучногоУчетаУСН.ДоходыЕНВД &lt;&gt; 0, 0, ТаблицаРучногоУчетаУСН.Доходы);
				ТаблицаСтрок.Графа6_УСН          = ТаблицаРучногоУчетаУСН.РасходыБУ;
				ТаблицаСтрок.Графа7_УСН          = ТаблицаРучногоУчетаУСН.Расходы;
				ТаблицаСтрок.ДоходыЕНВД_УСН      = ?(ТаблицаРучногоУчетаУСН.ДоходыЕНВД &lt;&gt; 0, 1, 0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецЦикла;

//*********************************************************
УзелСсылки = мПустоеЗначение;

//теперь сформируем на основе этой таблицы документы списание с расчетного счета
ТаблицаСтрок.Сортировать("УникальностьОперации");
ТекущаяОперация = "";
СуммаДокумента  = 0;
ВходящиеДанныеДокумента = "";
НомераСтрокВыписки = "";
НазначениеПлатежа = "";
ТаблицаСтрок.ВыбратьСтроки();
Пока ТаблицаСтрок.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(ТаблицаСтрок.ВидОперации)=1 Тогда
		Продолжить;
	КонецЕсли;
	Если (ТаблицаСтрок.УникальностьОперации &lt;&gt; ТекущаяОперация) Тогда
		Если ТекущаяОперация &lt;&gt; "" Тогда
			//выгружаем собранный документ
			ВходящиеДанныеДокумента.Получить("РасшифровкаПлатежа").Свернуть("ДоговорКонтрагента, ДоговорБанка, КратностьВзаиморасчетов, КурсВзаиморасчетов, СпособПогашенияЗадолженности, СтавкаНДС, СтатьяДвиженияДенежныхСредств, СчетУчетаРасчетовПоАвансам, СчетУчетаРасчетовСКонтрагентом, Сделка","СуммаВзаиморасчетов,СуммаНДС,СуммаПлатежа");
			ВходящиеДанныеДокумента.Установить("СуммаДокумента",СуммаДокумента);
			ВходящиеДанныеДокумента.Установить("НомераСтрокВыписки",НомераСтрокВыписки);
			ВходящиеДанныеДокумента.Установить("НазначениеПлатежа",НазначениеПлатежа);
			ВходящиеДанныеДокумента.Установить("Комментарий",ВходящиеДанныеДокумента.Получить("Комментарий")+НомераСтрокВыписки);
			УзелСсылкиВыписки = ВыгрузитьПоПравилу(Источник, , ВходящиеДанныеДокумента, , "СписаниеСРасчетногоСчета");
		КонецЕсли;
		ВходящиеДанныеДокумента = СоздатьОбъект("СписокЗначений");
		ВходящиеДанныеДокумента.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) Выписка №"+Источник.НомерДок+" от "+формат(Источник.ДатаДок,"ДДДММГГГГ")+" строки: ");
		ВходящиеДанныеДокумента.Установить("ВидОперации",ТаблицаСтрок.ВидОперации);
		ВходящиеДанныеДокумента.Установить("ДатаВходящегоДокумента",ТаблицаСтрок.ДатаДокВходящий);
		ВходящиеДанныеДокумента.Установить("НомерВходящегоДокумента",ТаблицаСтрок.НомерДокВходящий);
		ВходящиеДанныеДокумента.Установить("ВалютаДокумента",?(ПустоеЗначение(Источник.Валюта)=0, Источник.Валюта, Параметры.Рубли));
		ВходящиеДанныеДокумента.Установить("ДокументОснование",ТаблицаСтрок.ПервичныйДокумент);
		ВходящиеДанныеДокумента.Установить("Контрагент",ТаблицаСтрок.Контрагент);
		ВходящиеДанныеДокумента.Установить("ДоговорКонтрагента",ТаблицаСтрок.Договор);
		ВходящиеДанныеДокумента.Установить("Банк",ТаблицаСтрок.Банк);
		ВходящиеДанныеДокумента.Установить("ДоговорБанка",ТаблицаСтрок.ДоговорБанка);
		ВходящиеДанныеДокумента.Установить("НеПодтвержденоВыпискойБанка",0);
		ВходящиеДанныеДокумента.Установить("СтатьяДвиженияДенежныхСредств",ТаблицаСтрок.ВидДвижения);
		Если (ТаблицаСтрок.ВидОперации = "ПеречислениеНалога") или (ТаблицаСтрок.ВидОперации = "ПрочееСписание") Тогда
			ВходящиеДанныеДокумента.Установить("СубконтоДт1",ТаблицаСтрок.Субконто1);
			ВходящиеДанныеДокумента.Установить("СубконтоДт2",ТаблицаСтрок.Субконто2);
			ВходящиеДанныеДокумента.Установить("СубконтоДт3",ТаблицаСтрок.Субконто3);
		Иначе
			ВходящиеДанныеДокумента.Установить("СубконтоДт1","");
			ВходящиеДанныеДокумента.Установить("СубконтоДт2","");
			ВходящиеДанныеДокумента.Установить("СубконтоДт3","");
		КонецЕсли;
		ВходящиеДанныеДокумента.Установить("СчетБанк",?(Валютный=2,СчетПоКоду("52"),СчетПоКоду("51")));
		ВходящиеДанныеДокумента.Установить("СчетОрганизации",ТаблицаСтрок.БанковскийСчет);
		ВходящиеДанныеДокумента.Установить("СчетКонтрагента",ТаблицаСтрок.СчетКонтрагента);
		ВходящиеДанныеДокумента.Установить("СчетУчетаРасчетовСКонтрагентом",?(ТаблицаСтрок.ВидОперации = "ПеречислениеЗП","",ТаблицаСтрок.КоррСчет));
		ВходящиеДанныеДокумента.Установить("ФизЛицо",?(ТаблицаСтрок.ВидОперации = "ПеречислениеПодотчетномуЛицу",ТаблицаСтрок.Контрагент,""));
		ВходящиеДанныеДокумента.Установить("ПометкаУдаления",Источник.ПометкаУдаления());
		ТаблицаРасшифровка = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаРасшифровка.НоваяКолонка("ДоговорКонтрагента");
		ТаблицаРасшифровка.НоваяКолонка("ДоговорБанка");
		ТаблицаРасшифровка.НоваяКолонка("КратностьВзаиморасчетов");
		ТаблицаРасшифровка.НоваяКолонка("КурсВзаиморасчетов");
		ТаблицаРасшифровка.НоваяКолонка("СпособПогашенияЗадолженности");
		ТаблицаРасшифровка.НоваяКолонка("СтавкаНДС");
		ТаблицаРасшифровка.НоваяКолонка("СтатьяДвиженияДенежныхСредств");
		ТаблицаРасшифровка.НоваяКолонка("СуммаВзаиморасчетов");
		ТаблицаРасшифровка.НоваяКолонка("СуммаНДС");
		ТаблицаРасшифровка.НоваяКолонка("СуммаПлатежа");
		ТаблицаРасшифровка.НоваяКолонка("СчетУчетаРасчетовПоАвансам");
		ТаблицаРасшифровка.НоваяКолонка("СчетУчетаРасчетовСКонтрагентом");
		ТаблицаРасшифровка.НоваяКолонка("Сделка");
		ВходящиеДанныеДокумента.Установить("РасшифровкаПлатежа",ТаблицаРасшифровка);
		ТаблицаПеречислениеЗаработнойПлаты = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаПеречислениеЗаработнойПлаты.НоваяКолонка("Физлицо");
		ТаблицаПеречислениеЗаработнойПлаты.НоваяКолонка("Ведомость");
		ТаблицаПеречислениеЗаработнойПлаты.НоваяКолонка("СтатьяДвиженияДенежныхСредств");
		ТаблицаПеречислениеЗаработнойПлаты.НоваяКолонка("СуммаПлатежа");
		ВходящиеДанныеДокумента.Установить("ПеречислениеЗаработнойПлаты",ТаблицаПеречислениеЗаработнойПлаты);
		
		ВходящиеДанныеДокумента.Установить("РучнаяНастройка_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа4_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа5_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа6_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа7_УСН", 0);
		ВходящиеДанныеДокумента.Установить("ДоходыЕНВД_УСН", 0);
		
		СуммаДокумента = 0;
		ТекущаяОперация = ТаблицаСтрок.УникальностьОперации;
		НомераСтрокВыписки = "";
		НазначениеПлатежа = "";
	КонецЕсли;
	
	Если ТаблицаСтрок.РучнаяНастройка_УСН &gt; 0 Тогда
		ВходящиеДанныеДокумента.Установить("РучнаяНастройка_УСН", 1);
		ВходящиеДанныеДокумента.Установить("Графа4_УСН", ВходящиеДанныеДокумента.Получить("Графа4_УСН") + ТаблицаСтрок.Графа4_УСН);
		ВходящиеДанныеДокумента.Установить("Графа5_УСН", ВходящиеДанныеДокумента.Получить("Графа5_УСН") + ТаблицаСтрок.Графа5_УСН);
		ВходящиеДанныеДокумента.Установить("Графа6_УСН", ВходящиеДанныеДокумента.Получить("Графа6_УСН") + ТаблицаСтрок.Графа6_УСН);
		ВходящиеДанныеДокумента.Установить("Графа7_УСН", ВходящиеДанныеДокумента.Получить("Графа7_УСН") + ТаблицаСтрок.Графа7_УСН);
		ВходящиеДанныеДокумента.Установить("ДоходыЕНВД_УСН", ВходящиеДанныеДокумента.Получить("ДоходыЕНВД_УСН") + ТаблицаСтрок.ДоходыЕНВД_УСН);
	КонецЕсли;

	
	ТаблицаРасшифровка.НоваяСтрока();
	ТаблицаРасшифровка.ДоговорКонтрагента = ТаблицаСтрок.Договор;
	ТаблицаРасшифровка.ДоговорБанка = ТаблицаСтрок.ДоговорБанка;
	ТаблицаРасшифровка.КратностьВзаиморасчетов = 1;
	ТаблицаРасшифровка.КурсВзаиморасчетов = 1;
	//если валюта в договоре - то нужно установить курс и кратность
	Если ПустоеЗначение(ТаблицаСтрок.Договор)=0 Тогда
		ВалютаДокумента = ТаблицаСтрок.Договор.ВалютаДоговора;
		Если ПустоеЗначение(ТаблицаСтрок.Договор.ВалютаДоговора)=0 Тогда
			ТаблицаРасшифровка.КурсВзаиморасчетов = ?(ТаблицаСтрок.Договор.ОплатаДоговора = 1,ТаблицаСтрок.КурсОплаты,ВалютаДокумента.Курс.Получить(Источник.ДатаДок));
			Кратность = ВалютаДокумента.Кратность.Получить(Источник.ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			ТаблицаРасшифровка.КратностьВзаиморасчетов = Кратность;
		КонецЕсли;
	КонецЕсли;
	Если (ТаблицаСтрок.ВидОперации = "ОплатаПоставщику") или (ТаблицаСтрок.ВидОперации = "ВозвратПокупателю") Тогда
		Если ПустоеЗначение(ТаблицаСтрок.ДокументПоставки)=1 Тогда
			ТаблицаРасшифровка.СпособПогашенияЗадолженности = "Автоматически";
		Иначе
			ТаблицаРасшифровка.СпособПогашенияЗадолженности = "ПоДокументу";
			ТаблицаРасшифровка.Сделка = ТаблицаСтрок.ДокументПоставки;
		КонецЕсли;
	КонецЕсли;
	
	
	Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",ТаблицаСтрок.СтавкаНДС);
	ПолучитьСтавкуНДС();
	ТаблицаРасшифровка.СтавкаНДС = Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	Если ПустоеЗначение(ТаблицаСтрок.СтавкаНДС) = 0 Тогда
		ТаблицаРасшифровка.СуммаНДС = ТаблицаСтрок.Сумма*ТаблицаСтрок.СтавкаНДС.Ставка/(100+ТаблицаСтрок.СтавкаНДС.Ставка);
	КонецЕсли;
	//для валютного счета сумма взаиморасчетов и сумма платежа совпадают, они отличаются только для расчетов в УЕ
	Если Валютный = 1 Тогда
		ТаблицаРасшифровка.СуммаВзаиморасчетов = ?(ТаблицаРасшифровка.КурсВзаиморасчетов=0,0,ТаблицаСтрок.Сумма * ТаблицаРасшифровка.КратностьВзаиморасчетов / ТаблицаРасшифровка.КурсВзаиморасчетов);
	Иначе
		ТаблицаРасшифровка.СуммаВзаиморасчетов = ТаблицаСтрок.Сумма;
	КонецЕсли;
	
	ТаблицаРасшифровка.СуммаПлатежа = ТаблицаСтрок.Сумма;
	
	Если ТаблицаСтрок.ВидОперации &lt;&gt; "ПеречислениеЗП" Тогда
		ТаблицаРасшифровка.СтатьяДвиженияДенежныхСредств = ТаблицаСтрок.ВидДвижения;
	КонецЕсли;
	
    //по счету определяем пару расчетных счетов
	
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ТаблицаСтрок.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Договор", ТаблицаСтрок.Договор);
	СчетаРасчетов = ПолучитьСчетаРасчетов();
	ТаблицаРасшифровка.СчетУчетаРасчетовПоАвансам     = СчетаРасчетов.Получить("СчетАвансов");
	ТаблицаРасшифровка.СчетУчетаРасчетовСКонтрагентом = СчетаРасчетов.Получить("СчетРасчетов");
	
	Если (ВходящиеДанныеДокумента.Получить("ДатаВходящегоДокумента") &lt;&gt; ТаблицаСтрок.ДатаДокВходящий) или 
		  (ВходящиеДанныеДокумента.Получить("НомерВходящегоДокумента") &lt;&gt; ТаблицаСтрок.НомерДокВходящий) Тогда
		  //если дата и номер входящего документа очередной строки отличаются от даты и номера предыдущей строки документа - то очищаем их
		  //это справедливо только для тех документов, которые будут содержать несколько строк выписки
		ВходящиеДанныеДокумента.Установить("ДатаВходящегоДокумента","");
		ВходящиеДанныеДокумента.Установить("НомерВходящегоДокумента","");
	КонецЕсли;
	
	Если ТаблицаСтрок.ВидОперации = "ПеречислениеЗП" Тогда
		Если ТаблицаСтрок.КоррСчет = СчетПоКоду("70") Тогда
			ТаблицаПеречислениеЗаработнойПлаты.НоваяСтрока();
			ТаблицаПеречислениеЗаработнойПлаты.Физлицо = ТаблицаСтрок.Субконто1;
			ТаблицаПеречислениеЗаработнойПлаты.Ведомость = Источник;
			ТаблицаПеречислениеЗаработнойПлаты.СтатьяДвиженияДенежныхСредств = ТаблицаСтрок.ВидДвижения;
			ТаблицаПеречислениеЗаработнойПлаты.СуммаПлатежа = ТаблицаСтрок.Сумма;
		Иначе
			//найдем ведомость, соответствующую данной строке выписки
			Параметры.ТаблицаВедомостейПоБанку.ВыбратьСтроки();
			Пока Параметры.ТаблицаВедомостейПоБанку.ПолучитьСтроку()=1 Цикл
				Если (Параметры.ТаблицаВедомостейПоБанку.Выписка = Источник) и 
					  (Параметры.ТаблицаВедомостейПоБанку.СтрокаВыписки = ТаблицаСтрок.НомерСтрокиДокумента) Тогда
					Ведомость = Параметры.ТаблицаВедомостейПоБанку.Ведомость;
					Ведомость.ВыбратьСтроки();
					Пока Ведомость.ПолучитьСтроку()=1 Цикл
						ТаблицаПеречислениеЗаработнойПлаты.НоваяСтрока();
						ТаблицаПеречислениеЗаработнойПлаты.Физлицо = Ведомость.Сотрудник;
						ТаблицаПеречислениеЗаработнойПлаты.Ведомость = Ведомость;
						ТаблицаПеречислениеЗаработнойПлаты.СтатьяДвиженияДенежныхСредств = ТаблицаСтрок.ВидДвижения;
						ТаблицаПеречислениеЗаработнойПлаты.СуммаПлатежа = Ведомость.КВыдаче;
					КонецЦикла;
					Прервать;
				КонецЕсли;
            КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НомераСтрокВыписки = НомераСтрокВыписки+?(НомераСтрокВыписки="","",", ")+Строка(ТаблицаСтрок.НомерСтрокиДокумента);
	НазначениеПлатежа  = НазначениеПлатежа +?(НазначениеПлатежа="","",", ")+СокрЛП(ТаблицаСтрок.НазначениеПлатежа);
	СуммаДокумента = СуммаДокумента + ТаблицаСтрок.Сумма;
КонецЦикла;
Если ТекущаяОперация &lt;&gt; "" Тогда
	//выгружаем собранный документ
	ВходящиеДанныеДокумента.Получить("РасшифровкаПлатежа").Свернуть("ДоговорКонтрагента, ДоговорБанка, КратностьВзаиморасчетов, КурсВзаиморасчетов, СпособПогашенияЗадолженности, СтавкаНДС, СтатьяДвиженияДенежныхСредств, СчетУчетаРасчетовПоАвансам, СчетУчетаРасчетовСКонтрагентом, Сделка","СуммаВзаиморасчетов,СуммаНДС,СуммаПлатежа");
	ВходящиеДанныеДокумента.Установить("СуммаДокумента",СуммаДокумента);
	ВходящиеДанныеДокумента.Установить("НомераСтрокВыписки",НомераСтрокВыписки);
	ВходящиеДанныеДокумента.Установить("НазначениеПлатежа",НазначениеПлатежа);
	ВходящиеДанныеДокумента.Установить("Комментарий",ВходящиеДанныеДокумента.Получить("Комментарий")+НомераСтрокВыписки);
	УзелСсылкиВыписки =ВыгрузитьПоПравилу(Источник, , ВходящиеДанныеДокумента, , "СписаниеСРасчетногоСчета");
КонецЕсли;

//отказываемся от выгрузки - мы уже все выгрузили
Отказ = 1;</ПриВыгрузке>
					<ПослеВыгрузки>Отказ = 1;</ПослеВыгрузки>
					<Источник>ДокументСсылка.Выписка</Источник>
					<Приемник>ДокументСсылка.СписаниеСРасчетногоСчета</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СписаниеСРасчетногоСчета</Код>
					<Наименование>: </Наименование>
					<Порядок>2350</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + ВходящиеДанные.Получить("НомераСтрокВыписки");</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетУчетаРасчетовСКонтрагентом");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоДт");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
Выполнить(Алгоритмы.УстановитьСодержаниеУСН);
</ПослеЗагрузки>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>ДокументСсылка.СписаниеСРасчетногоСчета</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение=ПолучитьДатуV8(Источник.ДатаДок, Источник.ПолучитьВремя());</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийСписаниеДенежныхСредств"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ДатаВходящегоДокумента</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",ВходящиеДанные.Получить("ДокументОснование"));
ОпределитьПКОДляДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Контрагент");

Если ПустоеЗначение(Значение) = 0 Тогда
	Если ТипЗначенияСтр(Значение) = "Справочник" Тогда
		Если Значение.Вид() = "Сотрудники" Тогда
			ИмяПКО = "ФизическиеЛица";
		КонецЕсли;	
	КонецЕсли;	
КонецЕсли;

Банк = ВходящиеДанные.Получить("Банк");
Если ПустоеЗначение(Банк)=0 Тогда
	Значение = Банк;
	ИмяПКО = "КонтрагентБанк";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("ДоговорКонтрагента");
ДоговорБанка = ВходящиеДанные.Получить("ДоговорБанка");
Если ПустоеЗначение(ДоговорБанка)=0 Тогда
	Значение = ДоговорБанка;
	ИмяПКО = "ДоговорПродажиВалюты";
КонецЕсли;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; НазначениеПлатежа</Наименование>
							<Порядок>600</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазначениеПлатежа" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; НеПодтвержденоВыпискойБанка</Наименование>
							<Порядок>650</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеПодтвержденоВыпискойБанка" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>750</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ПодразделениеДт</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеДт" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СубконтоДт1</Наименование>
							<Порядок>850</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("СубконтоДт1");
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("СчетУчетаРасчетовСКонтрагентом"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ВходящиеДанные.Получить("СубконтоДт1"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ВходящиеДанные.Получить("СубконтоДт2"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ВходящиеДанные.Получить("СубконтоДт3"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СубконтоДт2</Наименование>
							<Порядок>900</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("СубконтоДт2");
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("СчетУчетаРасчетовСКонтрагентом"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ВходящиеДанные.Получить("СубконтоДт1"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ВходящиеДанные.Получить("СубконтоДт2"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ВходящиеДанные.Получить("СубконтоДт3"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СубконтоДт3</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("СубконтоДт3");
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("СчетУчетаРасчетовСКонтрагентом"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ВходящиеДанные.Получить("СубконтоДт1"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ВходящиеДанные.Получить("СубконтоДт2"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ВходящиеДанные.Получить("СубконтоДт3"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетБанк</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетБанк" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетОрганизации</Наименование>
							<Порядок>1100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетОрганизации" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетКонтрагента</Наименование>
							<Порядок>1150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>СчетКонтрагента = ВходящиеДанные.Получить("СчетКонтрагента");
Если ПустоеЗначение(СчетКонтрагента)=0 Тогда
	Если СчетКонтрагента.Вид()="БанковскиеСчета" Тогда
		ИмяПКО = "БанковскиеСчета";
		Если ПустоеЗначение(ВходящиеДанные.Получить("Банк"))=0 Тогда
			ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
			ИсходящиеДанные.Установить("Владелец",ВходящиеДанные.Получить("Банк"));
		КонецЕсли;
	Иначе
		ИмяПКО = "РасчетныеСчета ";
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>1200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Физлицо = ВходящиеДанные.Получить("ФизЛицо");
Если ПустоеЗначение(Физлицо)=0 Тогда
	Если Физлицо.Вид()="Контрагенты" Тогда
		ИмяПКО = "СотрудникиКонтрагенты";
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>30</Код>
							<Наименование> --&gt; РасшифровкаПлатежа</Наименование>
							<Порядок>1250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасшифровкаПлатежа" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДоговорБанка)=0 Тогда
	Значение = ОбъектКоллекции.ДоговорБанка;
	ИмяПКО = "ДоговорПродажиВалюты";
ИначеЕсли ПустоеЗначение(ОбъектКоллекции.ДоговорКонтрагента)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
	Параметры.ПараметрыАлгоритмов.Установить("Договор",ОбъектКоллекции.ДоговорКонтрагента);
	Параметры.ПараметрыАлгоритмов.Установить("Счет",ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	ОпределитьВидДоговора();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; СпособПогашенияЗадолженности</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособПогашенияЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; СуммаПлатежа</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаПлатежа" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; Сделка</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сделка" Вид="Реквизит"/>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Сделка)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",ОбъектКоллекции.Сделка);
	ОпределитьПКОДляДокумента();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>25</Код>
							<Наименование> --&gt; ПеречислениеЗаработнойПлаты</Наименование>
							<Порядок>1300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПеречислениеЗаработнойПлаты" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; Ведомость</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Ведомость" Вид="Реквизит"/>
								<КодПравилаКонвертации>ВыплатаЗПБанк                                     </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Ведомость) = 0 Тогда
	Если ОбъектКоллекции.Ведомость.Вид()="Выписка" Тогда
		ИмяПКО = "ВедомостьНаВыплатуЗарплатыВБанк";
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; СуммаПлатежа</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаПлатежа" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>1350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ДоходыЕНВД_УСН</Наименование>
							<Порядок>1400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходыЕНВД_УСН" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; Графа4_УСН</Наименование>
							<Порядок>1450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа4_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; Графа5_УСН</Наименование>
							<Порядок>1500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; Графа6_УСН</Наименование>
							<Порядок>1550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; Графа7_УСН</Наименование>
							<Порядок>1600</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа7_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Выписка_Поступление</Код>
					<Наименование>Документ: Выписка</Наименование>
					<Порядок>2400</Порядок>
					<ПриВыгрузке>ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
Источник.ВыгрузитьТабличнуюЧасть(ТаблицаСтрок);
ТаблицаСтрок.НоваяКолонка("ВидОперации");
ТаблицаСтрок.НоваяКолонка("УникальностьОперации");
ТаблицаСтрок.НоваяКолонка("Контрагент");
ТаблицаСтрок.НоваяКолонка("Договор");
ТаблицаСтрок.НоваяКолонка("Банк");
ТаблицаСтрок.НоваяКолонка("ДоговорБанка");
ТаблицаСтрок.НоваяКолонка("Сумма");
ТаблицаСтрок.НоваяКолонка("БанковскийСчет");
ТаблицаСтрок.НоваяКолонка("СчетКонтрагента");
ТаблицаСтрок.НоваяКолонка("СтавкаНДС");
ТаблицаСтрок.НоваяКолонка("РучнаяНастройка_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа4_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа5_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа6_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("Графа7_УСН", "Число", 15, 2);
ТаблицаСтрок.НоваяКолонка("ДоходыЕНВД_УСН", "Число", 15, 2);

//*****************************************
//обрабатываем табличную часть

Если Источник.БанковскийСчет.ТипСчета = Перечисление.ТипыБанковскихСчетов.Валютный Тогда
	Валютный = 2;
	Курс = Источник.Валюта.Курс.Получить(Источник.ДатаДок);
	Кратность = Источник.Валюта.Кратность.Получить(Источник.ДатаДок);
	Кратность = ?(Кратность=0,1,Кратность);
Иначе 
	Валютный = 1;
	Курс = 1;
	Кратность = 1;
КонецЕсли;

СчН01 = СчетПоКоду("Н01"); 
СчН03 = СчетПоКоду("Н03");
СчН05 = СчетПоКоду("Н05");

ТаблицаРучногоУчетаУСН = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРучногоУчетаУСН.НоваяКолонка("НомерСтрокиДокумента");
ТаблицаРучногоУчетаУСН.НоваяКолонка("Доходы","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("Расходы","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("ДоходыБУ","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("РасходыБУ","Число", 15, 2);
ТаблицаРучногоУчетаУСН.НоваяКолонка("ДоходыЕНВД","Число", 15, 2);

Операция = Источник.Операция;
Операция.ВыбратьПроводки();
Пока Операция.ПолучитьПроводку()=1 Цикл
	ТаблицаРучногоУчетаУСН.НоваяСтрока();
	ТаблицаРучногоУчетаУСН.НомерСтрокиДокумента = Операция.НомерСтрокиДокумента();
	Если Операция.Кредит.Счет  = СчН01 Тогда
		ТаблицаРучногоУчетаУСН.Доходы = ТаблицаРучногоУчетаУСН.Доходы + Операция.Сумма;
	ИначеЕсли Операция.Кредит.Счет = СчН03 Тогда
		ТаблицаРучногоУчетаУСН.ДоходыБУ = ТаблицаРучногоУчетаУСН.ДоходыБУ + Операция.Сумма;
	ИначеЕсли Операция.Кредит.Счет = СчН05 Тогда
		ТаблицаРучногоУчетаУСН.ДоходыЕНВД = ТаблицаРучногоУчетаУСН.ДоходыЕНВД + Операция.Сумма;
	КонецЕсли;
	
	Если Операция.Дебет.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда
		ТаблицаРучногоУчетаУСН.Расходы = ТаблицаРучногоУчетаУСН.Расходы + Операция.Сумма;
	ИначеЕсли Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0 Тогда
		ТаблицаРучногоУчетаУСН.РасходыБУ = ТаблицаРучногоУчетаУСН.РасходыБУ + Операция.Сумма;
	КонецЕсли;
КонецЦикла;

ТаблицаРучногоУчетаУСН.Свернуть("НомерСтрокиДокумента", "Доходы,Расходы,ДоходыБУ,РасходыБУ,ДоходыЕНВД");

//Определим, нужна ли ручная настройка УСН
Если Константа.ОбъектНалогообложения.Получить(Источник.ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
	ДоходыРасходы = 1;
Иначе
	ДоходыРасходы = 0;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

//классифицируем строки выписки
ТаблицаСтрок.ВыбратьСтроки();
Пока ТаблицаСтрок.ПолучитьСтроку()=1 Цикл
	Если ТаблицаСтрок.Приход&lt;&gt;0 Тогда
		Если ТаблицаСтрок.КоррСчет.Выбран()=1 Тогда
			//в Бух7 списание с одного расчетного счета на другой попадает в выписку того счета, на который приходят денежные средства
			//в Бух8 наоборот, эта операция определяется документом того счета, с которого списываются денежные средства
			Если (ТаблицаСтрок.КоррСчет = СчетПоКоду("51")) или (ТаблицаСтрок.КоррСчет = СчетПоКоду("52")) или
				  (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("55"))=1) Тогда
				Продолжить;	
			КонецЕсли;
			// сдача наличных из кассы в банк отражается в кассовых документах
			Если ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("50"))=1 Тогда
				Продолжить;	
			КонецЕсли;
		КонецЕсли;
		ВидДвижения = ?(ПустоеЗначение(ТаблицаСтрок.ВидДвижения)=0,ТаблицаСтрок.ВидДвижения.ВидДвижения,"");
		Если ТаблицаСтрок.КоррСчет.Выбран() = 0 Тогда //счет не указан
			ВалютаДоговора = ?(ПустоеЗначение(ТаблицаСтрок.Субконто2) = 0,ТаблицаСтрок.Субконто2.ВалютаДоговора,"");
			Если ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности Тогда
				ТаблицаСтрок.КоррСчет = ?(Валютный = 1, СчетПоКоду("62.2"), СчетПоКоду("62.22"));
			    ТаблицаСтрок.ВидОперации = "ОплатаПокупателя";
			Иначе
				ТаблицаСтрок.ВидОперации = "ПрочееСписание";
			КонецЕсли;
		Иначе  //счет указан
			Если ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.КупляПродажаИностраннойВалюты Тогда
				Если Валютный = 2 Тогда
					ТаблицаСтрок.ВидОперации = "ПриобретениеИностраннойВалюты";
				Иначе				
					ТаблицаСтрок.ВидОперации = "ПрочееПоступление";
				КонецЕсли;
			ИначеЕсли ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("60"))=1 Тогда
				ТаблицаСтрок.ВидОперации = "ВозвратОтПоставщика";
			ИначеЕсли ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("62"))=1 Тогда
				ТаблицаСтрок.ВидОперации = "ОплатаПокупателя";
			ИначеЕсли (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("57"))=1) Тогда
				ТаблицаСтрок.ВидОперации = "Инкассация";
			ИначеЕсли (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("66"))=1) или 
				        (ТаблицаСтрок.КоррСчет.ПринадлежитГруппе(СчетПоКоду("67"))=1)Тогда
				ТаблицаСтрок.ВидОперации = "РасчетыПоКредитамИЗаймам";
			ИначеЕсли (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.1")) Тогда
				ТаблицаСтрок.ВидОперации = "ПрочееПоступление";
			ИначеЕсли (ТаблицаСтрок.КоррСчет=СчетПоКоду("76.5"))или (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.6")) 
				или (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.55")) или (ТаблицаСтрок.КоррСчет = СчетПоКоду("76.66")) Тогда
				Если (ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности) или 
					  (ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоПрочимОперациям)  Тогда
					ТаблицаСтрок.ВидОперации = "ОплатаПокупателя";
				ИначеЕсли (ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг) Тогда
					ТаблицаСтрок.ВидОперации = "ВозвратОтПоставщика";
				Иначе
					ТаблицаСтрок.ВидОперации = "ПрочиеРасчетыСКонтрагентами";
					Если ТаблицаСтрок.Субконто2.Выбран()=1 Тогда
						//посмотрим, какой максимальный тип договора имеется
						НомСтр = 0;
						Если Параметры.ТаблицаДоговоров.НайтиЗначение(ТаблицаСтрок.Субконто2, НомСтр, "Договор") &lt;&gt; 0 Тогда
							ВидыДоговора = Параметры.ТаблицаДоговоров.ПолучитьЗначение(НомСтр,"ВидыДоговора");
							ВидыДоговора.Сортировать("ВесДоговора -,ВидДоговора +");
							ВидыДоговора.ВыбратьСтроки();
							//выбираем самую первую строчку
							Если ВидыДоговора.ПолучитьСтроку()=1 Тогда
								ВидДоговора = ВидыДоговора.ВидДоговора;
								Если (ВидДоговора = "СПоставщиком")или (ВидДоговора="СКомитентом") Тогда
									ТаблицаСтрок.ВидОперации = "ВозвратОтПоставщика";
								ИначеЕсли (ВидДоговора = "СПокупателем")или (ВидДоговора="СКомиссионером") Тогда
									ТаблицаСтрок.ВидОперации = "ОплатаПокупателя";
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				//если на счете есть субконто контрагент и договор - то используем вид операции "Прочие расчеты с контрагентами"
				Счет = ТаблицаСтрок.КоррСчет;
				СубконтоЕсть = 0;
				Для к=1 по Счет.КоличествоСубконто() Цикл
					СубконтоЕсть = СубконтоЕсть + ?(Счет.ВидСубконто(к) = ВидыСубконто.Контрагенты,3,?(Счет.ВидСубконто(к) = ВидыСубконто.Договоры,1,0));
				КонецЦикла;
				ТаблицаСтрок.ВидОперации = ?(СубконтоЕсть = 4,"ПрочиеРасчетыСКонтрагентами","ПрочееПоступление");
			КонецЕсли;
		КонецЕсли;
		ТаблицаСтрок.Сумма = ТаблицаСтрок.Приход;
		ТаблицаСтрок.БанковскийСчет = Источник.БанковскийСчет;
	Иначе
		Продолжить;
	КонецЕсли;

	//заполняем контрагента и договор
	Счет = ТаблицаСтрок.КоррСчет;
	Для к=1 по Счет.КоличествоСубконто() Цикл
		Если Счет.ВидСубконто(к) = ВидыСубконто.Контрагенты Тогда
			ТаблицаСтрок.Контрагент = ТаблицаСтрок.ПолучитьЗначение(ТаблицаСтрок.НомерСтроки,"Субконто"+к);
		ИначеЕсли Счет.ВидСубконто(к) = ВидыСубконто.Договоры Тогда
			ТаблицаСтрок.Договор = ТаблицаСтрок.ПолучитьЗначение(ТаблицаСтрок.НомерСтроки,"Субконто"+к);
		//ИначеЕсли Счет.ВидСубконто(к) = ВидыСубконто.БанковскиеСчета Тогда
		//	ТаблицаСтрок.СчетКонтрагента = ТаблицаСтрок.ПолучитьЗначение(ТаблицаСтрок.НомерСтроки,"Субконто"+к);
		КонецЕсли;
	КонецЦикла;
	
	//пытаемся определить контрагента, если он не заполнен
	Если (ПустоеЗначение(ТаблицаСтрок.Контрагент)=1) и (ПустоеЗначение(ТаблицаСтрок.ПервичныйДокумент)=0) Тогда
		Если (Метаданные.Документ(ТаблицаСтрок.ПервичныйДокумент.Вид()).РеквизитШапки("Контрагент").Выбран()=1) Тогда
			ТаблицаСтрок.Контрагент = ТаблицаСтрок.ПервичныйДокумент.Контрагент;			
		КонецЕсли;
	КонецЕсли;	
	Если (ПустоеЗначение(ТаблицаСтрок.Контрагент)=1) и (ПустоеЗначение(ТаблицаСтрок.ДокументПоставки)=0) Тогда
		Если (Метаданные.Документ(ТаблицаСтрок.ДокументПоставки.Вид()).РеквизитШапки("Контрагент").Выбран()=1) Тогда
			ТаблицаСтрок.Контрагент = ТаблицаСтрок.ДокументПоставки.Контрагент;			
		КонецЕсли;
	КонецЕсли;
	
	//пытаемся определить счет контрагента, если он не заполнен
	//Если (ПустоеЗначение(ТаблицаСтрок.СчетКонтрагента)=1) и (ПустоеЗначение(ТаблицаСтрок.ПервичныйДокумент)=0) Тогда
	//	Если (Метаданные.Документ(ТаблицаСтрок.ПервичныйДокумент.Вид()).РеквизитШапки("СчетКонтрагента").Выбран()=1) Тогда
	//		ТаблицаСтрок.СчетКонтрагента = ТаблицаСтрок.ПервичныйДокумент.СчетКонтрагента;			
	//	КонецЕсли;
	//КонецЕсли;
	//Если (ПустоеЗначение(ТаблицаСтрок.СчетКонтрагента)=1) и (ПустоеЗначение(ТаблицаСтрок.Контрагент)=0) Тогда
	//	Если (ПустоеЗначение(ТаблицаСтрок.Контрагент.ОсновнойСчет)=0) Тогда
	//		ТаблицаСтрок.СчетКонтрагента = ТаблицаСтрок.Контрагент.ОсновнойСчет;
	//	Иначе
	//		//берем первый попавшийся 
	//		РасчетныеСчета = СоздатьОбъект("Справочник.РасчетныеСчета");
	//		РасчетныеСчета.ИспользоватьВладельца(ТаблицаСтрок.Контрагент);
	//		РасчетныеСчета.ВыбратьЭлементы();
	//		Если РасчетныеСчета.ПолучитьЭлемент()=1 Тогда
	//			 ТаблицаСтрок.СчетКонтрагента = РасчетныеСчета.ТекущийЭлемент();
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если (ТаблицаСтрок.ПервичныйДокумент.Вид() = "ПлатежноеПоручение") или (ТаблицаСтрок.ПервичныйДокумент.Вид()="ПлатежноеТребование") Тогда
		ТаблицаСтрок.СтавкаНДС = ТаблицаСтрок.ПервичныйДокумент.СтавкаНДС;
	Иначе
		ТаблицаСтрок.ПервичныйДокумент = "";	
	КонецЕсли;
	
	Если ПустоеЗначение(ТаблицаСтрок.ВидОперации)=0 Тогда
		//ПрефиксУникальности = "00";
		ПрефиксУникальности = Строка(ТаблицаСтрок.НомерСтрокиДокумента);
		ТаблицаСтрок.УникальностьОперации = ПрефиксУникальности + ТаблицаСтрок.ВидОперации + ЗначениеВСтрокуВнутр(ТаблицаСтрок.Контрагент);
	КонецЕсли;
	
	//Заполняем ручную настройку УСН
	СтрокаУСН = 0;
	Если ТаблицаРучногоУчетаУСН.НайтиЗначение(ТаблицаСтрок.НомерСтрокиДокумента, СтрокаУСН, "НомерСтрокиДокумента") = 1 Тогда
		Если (ДоходыРасходы = 0) ИЛИ (ТаблицаСтрок.ВидОперации = "ПрочееПоступление") ИЛИ (ТаблицаСтрок.ВидОперации = "ПрочиеРасчетыСКонтрагентами")
			ИЛИ (ТаблицаСтрок.ВидОперации = "РасчетыПоКредитамИЗаймам") ИЛИ (ТаблицаСтрок.ВидОперации = "Инкассация") 
			ИЛИ (ТаблицаСтрок.ВидОперации = "ПриобретениеИностраннойВалюты") ИЛИ (ТаблицаСтрок.ВидОперации = "ПоступленияОтПродажиИностраннойВалюты")
			ИЛИ (ТаблицаСтрок.ВидОперации = "") Тогда
			ТаблицаРучногоУчетаУСН.ПолучитьСтрокуПоНомеру(СтрокаУСН);
			Если (ТаблицаРучногоУчетаУСН.Доходы &lt;&gt; 0) ИЛИ (ТаблицаРучногоУчетаУСН.Расходы &lt;&gt; 0)
				ИЛИ (ТаблицаРучногоУчетаУСН.ДоходыБУ &lt;&gt; 0)  ИЛИ (ТаблицаРучногоУчетаУСН.РасходыБУ &lt;&gt; 0)
				ИЛИ (ТаблицаРучногоУчетаУСН.ДоходыЕНВД &lt;&gt; 0) Тогда
				ТаблицаСтрок.РучнаяНастройка_УСН = 1;
				ТаблицаСтрок.Графа4_УСН          = ТаблицаРучногоУчетаУСН.ДоходыБУ;
				ТаблицаСтрок.Графа5_УСН          = ?(ТаблицаРучногоУчетаУСН.ДоходыЕНВД &lt;&gt; 0, 0, ТаблицаРучногоУчетаУСН.Доходы);
				ТаблицаСтрок.Графа6_УСН          = ТаблицаРучногоУчетаУСН.РасходыБУ;
				ТаблицаСтрок.Графа7_УСН          = ТаблицаРучногоУчетаУСН.Расходы;
				ТаблицаСтрок.ДоходыЕНВД_УСН      = ?(ТаблицаРучногоУчетаУСН.ДоходыЕНВД &lt;&gt; 0, 1, 0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецЦикла;

//*********************************************************

УзелСсылки = мПустоеЗначение;

//теперь сформируем на основе этой таблицы документы списание с расчетного счета
ТаблицаСтрок.Сортировать("УникальностьОперации");
ТекущаяОперация = "";
СуммаДокумента  = 0;
ВходящиеДанныеДокумента = "";
НомераСтрокВыписки = "";
НазначениеПлатежа = "";
ТаблицаСтрок.ВыбратьСтроки();
Пока ТаблицаСтрок.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(ТаблицаСтрок.ВидОперации)=1 Тогда
		Продолжить;
	КонецЕсли;
	Если (ТаблицаСтрок.УникальностьОперации &lt;&gt; ТекущаяОперация) Тогда
		Если ТекущаяОперация &lt;&gt; "" Тогда
			//выгружаем собранный документ
			ВходящиеДанныеДокумента.Установить("СуммаДокумента",СуммаДокумента);
			ВходящиеДанныеДокумента.Установить("НомераСтрокВыписки",НомераСтрокВыписки);
			ВходящиеДанныеДокумента.Установить("НазначениеПлатежа",НазначениеПлатежа);
			ВходящиеДанныеДокумента.Установить("Комментарий",ВходящиеДанныеДокумента.Получить("Комментарий")+НомераСтрокВыписки);
			УзелСсылкиВыписки = ВыгрузитьПоПравилу(Источник, , ВходящиеДанныеДокумента, , "ПоступлениеНаРасчетныйСчет");
		КонецЕсли;
		ВходящиеДанныеДокумента = СоздатьОбъект("СписокЗначений");
		ВходящиеДанныеДокумента.Установить("Комментарий","# Перенесен из Бухгалтерии 7.7 Выписка №"+Источник.НомерДок+" от "+формат(Источник.ДатаДок,"ДДДММГГГГ")+" строки: ");
		ВходящиеДанныеДокумента.Установить("ВидОперации",ТаблицаСтрок.ВидОперации);
		ВходящиеДанныеДокумента.Установить("ДатаВходящегоДокумента",ТаблицаСтрок.ДатаДокВходящий);
		ВходящиеДанныеДокумента.Установить("НомерВходящегоДокумента",ТаблицаСтрок.НомерДокВходящий);
		ВходящиеДанныеДокумента.Установить("ВалютаДокумента",?(ПустоеЗначение(Источник.Валюта)=0, Источник.Валюта, Параметры.Рубли));
		ВходящиеДанныеДокумента.Установить("ДокументОснование",ТаблицаСтрок.ДокументПоставки);
		ВходящиеДанныеДокумента.Установить("Контрагент",ТаблицаСтрок.Контрагент);
		ВходящиеДанныеДокумента.Установить("ДоговорКонтрагента",ТаблицаСтрок.Договор);
		ВходящиеДанныеДокумента.Установить("Банк",ТаблицаСтрок.Банк);
		ВходящиеДанныеДокумента.Установить("ДоговорБанка",ТаблицаСтрок.ДоговорБанка);
		ВходящиеДанныеДокумента.Установить("СтатьяДвиженияДенежныхСредств",ТаблицаСтрок.ВидДвижения);
		ВходящиеДанныеДокумента.Установить("КурсНаДатуПриобретенияРеализацииВалюты",0);
		ВходящиеДанныеДокумента.Установить("ОтражатьРазницуВКурсеВСоставеОперационныхРасходов",1);
		ВходящиеДанныеДокумента.Установить("СчетБанк",?(Валютный=2,СчетПоКоду("52"),СчетПоКоду("51")));
		ВходящиеДанныеДокумента.Установить("СчетУчетаРасчетовСКонтрагентом",ТаблицаСтрок.КоррСчет);
		
		Если (ТаблицаСтрок.ВидОперации = "ПрочееПоступление") Тогда
			ВходящиеДанныеДокумента.Установить("СубконтоКт1",ТаблицаСтрок.Субконто1);
			ВходящиеДанныеДокумента.Установить("СубконтоКт2",ТаблицаСтрок.Субконто2);
			ВходящиеДанныеДокумента.Установить("СубконтоКт3",ТаблицаСтрок.Субконто3);
		Иначе
			ВходящиеДанныеДокумента.Установить("СубконтоКт1","");
			ВходящиеДанныеДокумента.Установить("СубконтоКт2","");
			ВходящиеДанныеДокумента.Установить("СубконтоКт3","");
		КонецЕсли;
		
		ВходящиеДанныеДокумента.Установить("СчетОрганизации",ТаблицаСтрок.БанковскийСчет);
		ВходящиеДанныеДокумента.Установить("СчетКонтрагента",ТаблицаСтрок.СчетКонтрагента);
		ВходящиеДанныеДокумента.Установить("ПометкаУдаления",Источник.ПометкаУдаления());

		
		ТаблицаРасшифровка = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаРасшифровка.НоваяКолонка("ДоговорКонтрагента");
		ТаблицаРасшифровка.НоваяКолонка("ДоговорБанка");
		ТаблицаРасшифровка.НоваяКолонка("КратностьВзаиморасчетов");
		ТаблицаРасшифровка.НоваяКолонка("КурсВзаиморасчетов");
		ТаблицаРасшифровка.НоваяКолонка("СпособПогашенияЗадолженности");
		ТаблицаРасшифровка.НоваяКолонка("СтавкаНДС");
		ТаблицаРасшифровка.НоваяКолонка("СтатьяДвиженияДенежныхСредств");
		ТаблицаРасшифровка.НоваяКолонка("СубконтоКт1");
		ТаблицаРасшифровка.НоваяКолонка("СубконтоКт2");
		ТаблицаРасшифровка.НоваяКолонка("СубконтоКт3");
		ТаблицаРасшифровка.НоваяКолонка("СуммаВзаиморасчетов");
		ТаблицаРасшифровка.НоваяКолонка("СуммаНДС");
		ТаблицаРасшифровка.НоваяКолонка("СуммаПлатежа");
		ТаблицаРасшифровка.НоваяКолонка("СчетУчетаРасчетовПоАвансам");
		ТаблицаРасшифровка.НоваяКолонка("СчетУчетаРасчетовСКонтрагентом");
		ТаблицаРасшифровка.НоваяКолонка("Сделка");
		ТаблицаРасшифровка.НоваяКолонка("СчетНаОплату");
		ВходящиеДанныеДокумента.Установить("РасшифровкаПлатежа",ТаблицаРасшифровка);
		
		ВходящиеДанныеДокумента.Установить("РучнаяНастройка_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа4_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа5_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа6_УСН", 0);
		ВходящиеДанныеДокумента.Установить("Графа7_УСН", 0);
		ВходящиеДанныеДокумента.Установить("ДоходыЕНВД_УСН", 0);
		
		СуммаДокумента = 0;
		ТекущаяОперация = ТаблицаСтрок.УникальностьОперации;
		НомераСтрокВыписки = "";
		НазначениеПлатежа = "";
	КонецЕсли;
	
	Если ТаблицаСтрок.РучнаяНастройка_УСН &gt; 0 Тогда
		ВходящиеДанныеДокумента.Установить("РучнаяНастройка_УСН", 1);
		ВходящиеДанныеДокумента.Установить("Графа4_УСН", ВходящиеДанныеДокумента.Получить("Графа4_УСН") + ТаблицаСтрок.Графа4_УСН);
		ВходящиеДанныеДокумента.Установить("Графа5_УСН", ВходящиеДанныеДокумента.Получить("Графа5_УСН") + ТаблицаСтрок.Графа5_УСН);
		ВходящиеДанныеДокумента.Установить("Графа6_УСН", ВходящиеДанныеДокумента.Получить("Графа6_УСН") + ТаблицаСтрок.Графа6_УСН);
		ВходящиеДанныеДокумента.Установить("Графа7_УСН", ВходящиеДанныеДокумента.Получить("Графа7_УСН") + ТаблицаСтрок.Графа7_УСН);
		ВходящиеДанныеДокумента.Установить("ДоходыЕНВД_УСН", ВходящиеДанныеДокумента.Получить("ДоходыЕНВД_УСН") + ТаблицаСтрок.ДоходыЕНВД_УСН);
	КонецЕсли;
	
	ТаблицаРасшифровка.НоваяСтрока();
	ТаблицаРасшифровка.ДоговорКонтрагента = ТаблицаСтрок.Договор;
	ТаблицаРасшифровка.ДоговорБанка = ТаблицаСтрок.ДоговорБанка;
	ТаблицаРасшифровка.КратностьВзаиморасчетов = 1;
	ТаблицаРасшифровка.КурсВзаиморасчетов = 1;
	Если ТаблицаСтрок.ВидОперации = "ПриобретениеИностраннойВалюты" Тогда
		Кратность = Источник.Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		ТаблицаРасшифровка.КратностьВзаиморасчетов = Кратность;
		ТаблицаРасшифровка.КурсВзаиморасчетов = Источник.Валюта.Курс.Получить(Источник.ДатаДок);
		ТаблицаРасшифровка.СуммаВзаиморасчетов = ТаблицаСтрок.Сумма*ТаблицаРасшифровка.КурсВзаиморасчетов/Кратность;
		ВходящиеДанныеДокумента.Установить("КурсНаДатуПриобретенияРеализацииВалюты", Источник.Валюта.Курс.Получить(Источник.ДатаДок));
	Иначе
		//если валюта в договоре - то нужно установить курс и кратность
		Если ПустоеЗначение(ТаблицаСтрок.Договор)=0 Тогда
			ВалютаДокумента = ТаблицаСтрок.Договор.ВалютаДоговора;
			Если ПустоеЗначение(ТаблицаСтрок.Договор.ВалютаДоговора)=0 Тогда
				ТаблицаРасшифровка.КурсВзаиморасчетов = ?(ТаблицаСтрок.Договор.ОплатаДоговора = 1,ТаблицаСтрок.КурсОплаты,ВалютаДокумента.Курс.Получить(Источник.ДатаДок));
				Кратность = ВалютаДокумента.Кратность.Получить(Источник.ДатаДок);
				Кратность = ?(Кратность=0, 1, Кратность);
				ТаблицаРасшифровка.КратностьВзаиморасчетов = Кратность;
			КонецЕсли;
		КонецЕсли;
		//для валютного счета сумма взаиморасчетов и сумма платежа совпадают, они отличаются только для расчетов в УЕ
		Если Валютный = 1 Тогда
			ТаблицаРасшифровка.СуммаВзаиморасчетов = ?(ТаблицаРасшифровка.КурсВзаиморасчетов=0,0,ТаблицаСтрок.Сумма * ТаблицаРасшифровка.КратностьВзаиморасчетов / ТаблицаРасшифровка.КурсВзаиморасчетов);
		Иначе
			ТаблицаРасшифровка.СуммаВзаиморасчетов = ТаблицаСтрок.Сумма;
		КонецЕсли;

	КонецЕсли;
	
	Если (ТаблицаСтрок.ВидОперации = "ОплатаПокупателя") или (ТаблицаСтрок.ВидОперации = "ВозвратОтПоставщика") Тогда
		Если ПустоеЗначение(ТаблицаСтрок.ДокументПоставки)=1 Тогда
			ТаблицаРасшифровка.СпособПогашенияЗадолженности = "Автоматически";
		Иначе
			Если (ТаблицаСтрок.ДокументПоставки.Вид()="Счет") Тогда
				ТаблицаРасшифровка.СпособПогашенияЗадолженности = "Автоматически";	
				ТаблицаРасшифровка.СчетНаОплату = ТаблицаСтрок.ДокументПоставки;
			ИначеЕсли  (ТаблицаСтрок.ДокументПоставки.Вид()="ВыполнениеЭтапаРабот") Тогда
				ТаблицаРасшифровка.СпособПогашенияЗадолженности = "Автоматически";
			Иначе
				ТаблицаРасшифровка.СпособПогашенияЗадолженности = "ПоДокументу";
				ТаблицаРасшифровка.Сделка = ТаблицаСтрок.ДокументПоставки;				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",ТаблицаСтрок.СтавкаНДС);
	ПолучитьСтавкуНДС();
	ТаблицаРасшифровка.СтавкаНДС = Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
	Если ПустоеЗначение(ТаблицаСтрок.СтавкаНДС) = 0 Тогда
		ТаблицаРасшифровка.СуммаНДС = ТаблицаСтрок.Сумма*ТаблицаСтрок.СтавкаНДС.Ставка/(100+ТаблицаСтрок.СтавкаНДС.Ставка);
	КонецЕсли;
	ТаблицаРасшифровка.СтатьяДвиженияДенежныхСредств = ТаблицаСтрок.ВидДвижения;
	
	ТаблицаРасшифровка.СуммаПлатежа = ТаблицаСтрок.Сумма;
		
    //по счету определяем пару расчетных счетов
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ТаблицаСтрок.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Договор", ТаблицаСтрок.Договор);
	СчетаРасчетов = ПолучитьСчетаРасчетов();
	ТаблицаРасшифровка.СчетУчетаРасчетовПоАвансам     = СчетаРасчетов.Получить("СчетАвансов");
	ТаблицаРасшифровка.СчетУчетаРасчетовСКонтрагентом = СчетаРасчетов.Получить("СчетРасчетов");
	
	Если (ТаблицаСтрок.ВидОперации = "Инкассация") Тогда
		ТаблицаРасшифровка.СубконтоКт1 = ТаблицаСтрок.Субконто1;
		ТаблицаРасшифровка.СубконтоКт2 = ТаблицаСтрок.Субконто2;
		ТаблицаРасшифровка.СубконтоКт3 = ТаблицаСтрок.Субконто3;
	КонецЕсли;
	
	Если (ВходящиеДанныеДокумента.Получить("ДатаВходящегоДокумента") &lt;&gt; ТаблицаСтрок.ДатаДокВходящий) или 
		  (ВходящиеДанныеДокумента.Получить("НомерВходящегоДокумента") &lt;&gt; ТаблицаСтрок.НомерДокВходящий) Тогда
		  //если дата и номер входящего документа очередной строки отличаются от даты и номера предыдущей строки документа - то очищаем их
		  //это справедливо только для тех документов, которые будут содержать несколько строк выписки
		ВходящиеДанныеДокумента.Установить("ДатаВходящегоДокумента","");
		ВходящиеДанныеДокумента.Установить("НомерВходящегоДокумента","");
	КонецЕсли;

	НомераСтрокВыписки = НомераСтрокВыписки+?(НомераСтрокВыписки="","",", ")+Строка(ТаблицаСтрок.НомерСтрокиДокумента);
	НазначениеПлатежа  = НазначениеПлатежа +?(НазначениеПлатежа="","",", ")+СокрЛП(ТаблицаСтрок.НазначениеПлатежа);
	СуммаДокумента = СуммаДокумента + ТаблицаСтрок.Сумма;
КонецЦикла;
Если ТекущаяОперация &lt;&gt; "" Тогда
	//выгружаем собранный документ
	ВходящиеДанныеДокумента.Установить("СуммаДокумента",СуммаДокумента);
	ВходящиеДанныеДокумента.Установить("НомераСтрокВыписки",НомераСтрокВыписки);
	ВходящиеДанныеДокумента.Установить("НазначениеПлатежа",НазначениеПлатежа);
	ВходящиеДанныеДокумента.Установить("Комментарий",ВходящиеДанныеДокумента.Получить("Комментарий")+НомераСтрокВыписки);
	УзелСсылкиВыписки = ВыгрузитьПоПравилу(Источник, , ВходящиеДанныеДокумента, , "ПоступлениеНаРасчетныйСчет");
КонецЕсли;
Отказ = 1;</ПриВыгрузке>
					<ПослеВыгрузки>Отказ = 1;</ПослеВыгрузки>
					<Источник>ДокументСсылка.Выписка</Источник>
					<Приемник>ДокументСсылка.ПоступлениеНаРасчетныйСчет</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеНаРасчетныйСчет</Код>
					<Наименование>: </Наименование>
					<Порядок>2450</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;
КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + ВходящиеДанные.Получить("НомераСтрокВыписки");</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетУчетаРасчетовСКонтрагентом");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоКт");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
Выполнить(Алгоритмы.УстановитьСодержаниеУСН);
</ПослеЗагрузки>
					<Приемник>ДокументСсылка.ПоступлениеНаРасчетныйСчет</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>26</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение=ПолучитьДатуV8(Источник.ДатаДок, Источник.ПолучитьВремя());</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПоступлениеДенежныхСредств"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ДатаВходящегоДокумента</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",ВходящиеДанные.Получить("ДокументОснование"));
ОпределитьПКОДляДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Контрагент");

Если ПустоеЗначение(Значение) = 0 Тогда
	Если ТипЗначенияСтр(Значение) = "Справочник" Тогда
		Если Значение.Вид() = "Сотрудники" Тогда
			ИмяПКО = "ФизическиеЛица";
		КонецЕсли;	
	КонецЕсли;	
КонецЕсли;

Банк = ВходящиеДанные.Получить("Банк");
Если ПустоеЗначение(Банк)=0 Тогда
	Значение = Банк;
	ИмяПКО = "КонтрагентБанк";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("ДоговорКонтрагента");
ДоговорБанка = ВходящиеДанные.Получить("ДоговорБанка");
Если ПустоеЗначение(ДоговорБанка)=0 Тогда
	Значение = ДоговорБанка;
	ИмяПКО = "ДоговорПродажиВалюты";
КонецЕсли;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>600</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КурсНаДатуПриобретенияРеализацииВалюты</Наименование>
							<Порядок>650</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсНаДатуПриобретенияРеализацииВалюты" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; НазначениеПлатежа</Наименование>
							<Порядок>700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазначениеПлатежа" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ОтражатьРазницуВКурсеВСоставеОперационныхРасходов</Наименование>
							<Порядок>750</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражатьРазницуВКурсеВСоставеОперационныхРасходов" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетБанк</Наименование>
							<Порядок>800</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетБанк" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>850</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ПодразделениеКт</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеКт" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СубконтоКт1</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("СубконтоКт1");
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("СчетУчетаРасчетовСКонтрагентом"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ВходящиеДанные.Получить("СубконтоКт1"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ВходящиеДанные.Получить("СубконтоКт2"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ВходящиеДанные.Получить("СубконтоКт3"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СубконтоКт2</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("СубконтоКт2");
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("СчетУчетаРасчетовСКонтрагентом"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ВходящиеДанные.Получить("СубконтоКт1"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ВходящиеДанные.Получить("СубконтоКт2"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ВходящиеДанные.Получить("СубконтоКт3"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СубконтоКт3</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("СубконтоКт3");
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("СчетУчетаРасчетовСКонтрагентом"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ВходящиеДанные.Получить("СубконтоКт1"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ВходящиеДанные.Получить("СубконтоКт2"));
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ВходящиеДанные.Получить("СубконтоКт3"));
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>1100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>21</Код>
							<Наименование> --&gt; СуммаУслуг</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаУслуг" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СчетКонтрагента</Наименование>
							<Порядок>1300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<ПередВыгрузкой>СчетКонтрагента = ВходящиеДанные.Получить("СчетКонтрагента");
Если ПустоеЗначение(СчетКонтрагента)=0 Тогда
	Если СчетКонтрагента.Вид()="БанковскиеСчета" Тогда
		ИмяПКО = "БанковскиеСчета";
		Если ПустоеЗначение(ВходящиеДанные.Получить("Банк"))=0 Тогда
			ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
			ИсходящиеДанные.Установить("Владелец",ВходящиеДанные.Получить("Банк"));
		КонецЕсли;
	Иначе
		ИмяПКО = "РасчетныеСчета";
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; СчетОрганизации</Наименование>
							<Порядок>1350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетОрганизации" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>28</Код>
							<Наименование> --&gt; РасшифровкаПлатежа</Наименование>
							<Порядок>1400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасшифровкаПлатежа" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДоговорБанка)=0 Тогда
	Значение = ОбъектКоллекции.ДоговорБанка;
	ИмяПКО = "ДоговорПродажиВалюты";
ИначеЕсли ПустоеЗначение(ОбъектКоллекции.ДоговорКонтрагента)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
	Параметры.ПараметрыАлгоритмов.Установить("Договор",ОбъектКоллекции.ДоговорКонтрагента);
	Параметры.ПараметрыАлгоритмов.Установить("Счет",ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	ОпределитьВидДоговора();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; СпособПогашенияЗадолженности</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособПогашенияЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; ПодразделениеКт</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПодразделениеКт" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; СубконтоКт1</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
								<ПередВыгрузкой>Значение = ОбъектКоллекции.СубконтоКт1;
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; СубконтоКт2</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
								<ПередВыгрузкой>Значение = ОбъектКоллекции.СубконтоКт2;
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; СубконтоКт3</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
								<ПередВыгрузкой>Значение = ОбъектКоллекции.СубконтоКт3;
Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт3);
	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Значение);
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; СуммаПлатежа</Наименование>
								<Порядок>700</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаПлатежа" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>43</Код>
								<Наименование> --&gt; СчетНаОплату</Наименование>
								<Порядок>750</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетНаОплату" Вид="Реквизит" Тип="ДокументСсылка.СчетНаОплатуПокупателю"/>
							</Свойство>
							<Свойство>
								<Код>44</Код>
								<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
								<Порядок>800</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>45</Код>
								<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
								<Порядок>850</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; Графа4_УСН</Наименование>
							<Порядок>1450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа4_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; Графа5_УСН</Наименование>
							<Порядок>1500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; Графа6_УСН</Наименование>
							<Порядок>1550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; Графа7_УСН</Наименование>
							<Порядок>1600</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа7_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; ДоходыЕНВД_УСН</Наименование>
							<Порядок>1650</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходыЕНВД_УСН" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>1700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПриходныйОрдер</Код>
					<Наименование>Документ: Приходный кассовый ордер</Наименование>
					<Порядок>2500</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

ВидОперации = "ПрочийПриход";
Если Источник.РозничнаяВыручка = 1 Тогда
	ВидОперации = "РозничнаяВыручка";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("60"))=1 Тогда
	ВидОперации = "ВозвратОтПоставщика";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("62"))=1 Тогда
	ВидОперации = "ОплатаПокупателя";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("90"))=1 Тогда
	ВидОперации = "РозничнаяВыручка";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("71"))=1 Тогда
	ВидОперации = "ВозвратОтПодотчетногоЛица";
ИначеЕсли (Источник.КоррСчет = СчетПоКоду("51")) или (Источник.КоррСчет = СчетПоКоду("52")) Тогда
	ВидОперации = "ПолучениеНаличныхВБанке";
ИначеЕсли (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("66"))=1) или (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("67"))=1) Тогда
	ВидОперации = "РасчетыПоКредитамИЗаймам";
ИначеЕсли Источник.КоррСчет = СчетПоКоду("76.1") Тогда
	ВидОперации = "ПрочийПриход";	
ИначеЕсли (Источник.КоррСчет = СчетПоКоду("76.5")) или (Источник.КоррСчет = СчетПоКоду("76.6")) или (Источник.КоррСчет = СчетПоКоду("76.5")) или (Источник.КоррСчет = СчетПоКоду("76.66")) или (Источник.КоррСчет = СчетПоКоду("76.55")) Тогда
	Если ПустоеЗначение(Источник.ДвижениеДенежныхСредств)=0 Тогда
		Если (Источник.ДвижениеДенежныхСредств.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности)
			или (Источник.ДвижениеДенежныхСредств.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоПрочимОперациям)  Тогда
			ВидОперации = "ОплатаПокупателя";
		ИначеЕсли Источник.ДвижениеДенежныхСредств.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
			ВидОперации = "ВозвратОтПоставщика";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
ВходящиеДанные.Установить("ВидОперации",ВидОперации);

//Определим, нужна ли ручная настройка УСН
Если Константа.ОбъектНалогообложения.Получить(Источник.ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
	ДоходыРасходы = 1;
Иначе
	ДоходыРасходы = 0;
КонецЕсли;

Если (ДоходыРасходы = 0) ИЛИ (ВидОперации = "ПрочийПриход") ИЛИ (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
	СчН01 = СчетПоКоду("Н01"); 
	СчН03 = СчетПоКоду("Н03");
	СчН05 = СчетПоКоду("Н05");
	
	//выбираем проводки
	Доходы = 0;
	Расходы = 0; 
	ДоходыБУ = 0;
	РасходыБУ = 0;                                  
	ДоходыЕНВД = 0;
	
	Операция = Источник.Операция;
	Операция.ВыбратьПроводки();
	Пока Операция.ПолучитьПроводку()=1 Цикл
		Если Операция.Кредит.Счет  = СчН01 Тогда
			Доходы = Доходы + Операция.Сумма;
		ИначеЕсли Операция.Кредит.Счет = СчН03 Тогда
			ДоходыБУ = ДоходыБУ + Операция.Сумма;
		ИначеЕсли Операция.Кредит.Счет = СчН05 Тогда
			ДоходыЕНВД = ДоходыЕНВД + Операция.Сумма;
		КонецЕсли;
		
		Если Операция.Дебет.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда
			Расходы = Расходы + Операция.Сумма;
		ИначеЕсли Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0 Тогда
			РасходыБУ = РасходыБУ + Операция.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Если (Доходы &lt;&gt; 0) ИЛИ (Расходы &lt;&gt; 0) ИЛИ (ДоходыБУ &lt;&gt; 0)  ИЛИ (РасходыБУ &lt;&gt; 0) ИЛИ (ДоходыЕНВД &lt;&gt; 0) Тогда
		ВходящиеДанные.Установить("РучнаяНастройка_УСН", 1);
//		ВходящиеДанные.Установить("Содержание_УСН", 1);
		ВходящиеДанные.Установить("Графа4_УСН", ДоходыБУ);
		ВходящиеДанные.Установить("Графа5_УСН", ?(ДоходыЕНВД &lt;&gt; 0, 0, Доходы) );
		ВходящиеДанные.Установить("Графа6_УСН", РасходыБУ);
		ВходящиеДанные.Установить("Графа7_УСН", Расходы);
		ВходящиеДанные.Установить("ДоходыЕНВД_УСН", ?(ДоходыЕНВД &lt;&gt; 0, 1, 0));
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетУчетаРасчетовСКонтрагентом");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоКт");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
Выполнить(Алгоритмы.УстановитьСодержаниеУСН);
</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПриходныйОрдер</Источник>
					<Приемник>ДокументСсылка.ПриходныйКассовыйОрдер</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПКО"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>НомерЧекаККМ --&gt; НомерЧекаККМ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="НомерЧекаККМ" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="НомерЧекаККМ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Основание --&gt; Основание</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Приложение --&gt; Приложение</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Приложение" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Приложение" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПринятоОт --&gt; ПринятоОт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПринятоОт" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПринятоОт" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "БезНДС";
//определяем ставку

Если (Источник.Сумма - Источник.НДС)&lt;&gt;0 Тогда
	Ставка = Источник.НДС / (Источник.Сумма - Источник.НДС);
	Если Ставка&gt;0.19 Тогда
		Значение = "НДС20";
	ИначеЕсли Ставка&gt;0.17 Тогда
		Значение = "НДС18";
	ИначеЕсли Ставка &gt; 0 Тогда
		Значение = "НДС10";
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если Источник.Валютный = 2 Тогда
	Значение = Источник.Валюта;
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; СчетКасса</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКасса" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.Валютный = 2 Тогда
	Значение = СчетПоКоду("50.11");	
Иначе
	Значение = СчетПоКоду("50.1");	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВыручкаСНТТ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВыручкаСНТТ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "РозничнаяВыручка") и (Параметры.СписокСкладовНТТ.НайтиЗначение(Источник.ТорговаяТочка)&gt;0) Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<ПередВыгрузкой>
ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "РозничнаяВыручка") Тогда
	Значение = Источник.ТорговаяТочка;
	ИмяПКО = "Склады";
Иначе
	Если (ВидОперации = "ОплатаПокупателя") или (ВидОперации = "ВозвратОтПоставщика") или (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
		ВидСубконто = ВидыСубконто.Контрагенты;
		ИмяПКО = "Контрагенты";
	ИначеЕсли (ВидОперации = "ВозвратОтПодотчетногоЛица") Тогда
		ВидСубконто = ВидыСубконто.Контрагенты;
		ИмяПКО = "СотрудникиКонтрагенты";
	ИначеЕсли (ВидОперации = "ПолучениеНаличныхВБанке") Тогда
		ВидСубконто = ВидыСубконто.БанковскиеСчета;
		ИмяПКО = "БанковскиеСчета";
	Иначе
		Отказ = 1;
	КонецЕсли;
	Если Отказ &lt;&gt; 1 Тогда
		//ищем нужное субконто
		Счет = Источник.КоррСчет;
		Если ПустоеЗначение(Счет)=0 Тогда
			Для НомерСубконто = 1 по Счет.КоличествоСубконто() Цикл
				Если Счет.ВидСубконто(НомерСубконто) = ВидСубконто Тогда
					Значение = Источник.ПолучитьАтрибут("Субконто"+НомерСубконто);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ОплатаПокупателя") или (ВидОперации = "ВозвратОтПоставщика") или (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
	Счет = Источник.КоррСчет;
	Если ПустоеЗначение(Счет)=0 Тогда
		Для НомерСубконто = 1 по Счет.КоличествоСубконто() Цикл
			Если Счет.ВидСубконто(НомерСубконто) = ВидыСубконто.Договоры Тогда
				Значение = Источник.ПолучитьАтрибут("Субконто"+НомерСубконто);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЕсли;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>ДокументПоставки --&gt; ДокументОснование</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="ДокументПоставки" Вид="Реквизит"/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументПоставки)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник.ДокументПоставки);
	ОпределитьПКОДляДокумента();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>ДвижениеДенежныхСредств --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ДвижениеДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.ДвиженияДенежныхСредств"/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ПолучениеНаличныхВБанке") или (ВидОперации = "ПрочийПриход") или (ВидОперации = "РозничнаяВыручка" )Тогда
	Значение = Источник.КоррСчет;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ПодразделениеКт</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеКт" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ПрочийПриход" Тогда
	Значение = Параметры.ПодразделениеОрганизации; 
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СубконтоКт1</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ПрочийПриход" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
	Значение = Источник.Субконто1;
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СубконтоКт2</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ПрочийПриход" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
	Значение = Источник.Субконто2;
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СубконтоКт3</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ПрочийПриход" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
	Значение = Источник.Субконто3;
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>Сумма --&gt; СуммаДокумента</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>1250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; Графа4_УСН</Наименование>
							<Порядок>1350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа4_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Графа5_УСН</Наименование>
							<Порядок>1400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; Графа6_УСН</Наименование>
							<Порядок>1450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; Графа7_УСН</Наименование>
							<Порядок>1500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа7_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ДоходыЕНВД_УСН</Наименование>
							<Порядок>1550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходыЕНВД_УСН" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; НДС_УСН</Наименование>
							<Порядок>1600</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Группа>
							<Код>25</Код>
							<Наименование> --&gt; РасшифровкаПлатежа</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасшифровкаПлатежа" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Счет = Источник.КоррСчет;

КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДоговорКонтрагента");
КоллекцияОбъектов.НоваяКолонка("КратностьВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("КурсВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СпособПогашенияЗадолженности");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СтатьяДвиженияДенежныхСредств");
КоллекцияОбъектов.НоваяКолонка("СуммаВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаПлатежа");
КоллекцияОбъектов.НоваяКолонка("СчетНаОплату");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетовПоАвансам");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетовСКонтрагентом");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.СтатьяДвиженияДенежныхСредств = Источник.ДвижениеДенежныхСредств;
КоллекцияОбъектов.СуммаПлатежа = Источник.Сумма;

КоллекцияОбъектов.СтавкаНДС = "БезНДС";
//определяем ставку
Ставка = Источник.НДС / (Источник.Сумма - Источник.НДС);
Если Ставка&gt;0.19 Тогда
	КоллекцияОбъектов.СтавкаНДС = "НДС20";
ИначеЕсли Ставка&gt;0.17 Тогда
	КоллекцияОбъектов.СтавкаНДС = "НДС18";
ИначеЕсли Ставка&gt;0 Тогда
	КоллекцияОбъектов.СтавкаНДС = "НДС10";
КонецЕсли;

КоллекцияОбъектов.СуммаНДС  = Источник.НДС;

Если (ВидОперации = "ОплатаПокупателя") или (ВидОперации = "ВозвратОтПоставщика") или (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
	Если ПустоеЗначение(Счет)=0 Тогда
		Для НомерСубконто = 1 по Счет.КоличествоСубконто() Цикл
			Если Счет.ВидСубконто(НомерСубконто) = ВидыСубконто.Договоры Тогда
				КоллекцияОбъектов.ДоговорКонтрагента = Источник.ПолучитьАтрибут("Субконто"+НомерСубконто);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	КоллекцияОбъектов.КратностьВзаиморасчетов = 1;
	КоллекцияОбъектов.КурсВзаиморасчетов      = 1;
	КоллекцияОбъектов.СуммаВзаиморасчетов = Источник.Сумма;
	Если ПустоеЗначение(КоллекцияОбъектов.ДоговорКонтрагента)=0 Тогда
		Если ПустоеЗначение(КоллекцияОбъектов.ДоговорКонтрагента.ВалютаДоговора) = 0 Тогда
			Валюта = КоллекцияОбъектов.ДоговорКонтрагента.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			КоллекцияОбъектов.КратностьВзаиморасчетов = Кратность;
			КоллекцияОбъектов.КурсВзаиморасчетов = Валюта.Курс.Получить(Источник.ДатаДок);
		КонецЕсли;
		Если КоллекцияОбъектов.ДоговорКонтрагента.ОплатаДоговора = 1 Тогда
			КоллекцияОбъектов.СуммаВзаиморасчетов = ?(КоллекцияОбъектов.КурсВзаиморасчетов=0,0,Источник.Сумма*КоллекцияОбъектов.КратностьВзаиморасчетов/КоллекцияОбъектов.КурсВзаиморасчетов);
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(Источник.ДокументПоставки)=0 Тогда
		Если Источник.ДокументПоставки.Вид()="Счет" Тогда
			КоллекцияОбъектов.СчетНаОплату = Источник.ДокументПоставки;
		КонецЕсли;
	КонецЕсли;
    КоллекцияОбъектов.СпособПогашенияЗадолженности = "Автоматически";
    //по счету определяем пару расчетных счетов
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Договор", КоллекцияОбъектов.ДоговорКонтрагента);
	СчетаРасчетов = ПолучитьСчетаРасчетов();
	КоллекцияОбъектов.СчетУчетаРасчетовПоАвансам     = СчетаРасчетов.Получить("СчетАвансов");
	КоллекцияОбъектов.СчетУчетаРасчетовСКонтрагентом = СчетаРасчетов.Получить("СчетРасчетов");
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДоговорКонтрагента)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
	Параметры.ПараметрыАлгоритмов.Установить("Договор",ОбъектКоллекции.ДоговорКонтрагента);
	Параметры.ПараметрыАлгоритмов.Установить("Счет",ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	ОпределитьВидДоговора();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; СпособПогашенияЗадолженности</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособПогашенияЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; СуммаПлатежа</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаПлатежа" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; СчетНаОплату</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетНаОплату" Вид="Реквизит" Тип="ДокументСсылка.СчетНаОплатуПокупателю"/>
								<КодПравилаКонвертации>Счет                                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
								<Порядок>650</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РасходныйОрдер</Код>
					<Наименование>Документ: Расходный кассовый ордер</Наименование>
					<Порядок>2550</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;


Если (Источник.ФормироватьПроводки = 0) и (ПустоеЗначение(ВходящиеДанные.Получить("ЗарплатнаяВедомость"))=1) Тогда
	//мы не должны выгружать РКО, которые не формируют проводки и относятся к выплате ЗП
	Если Источник.КоррСчет = СчетПоКоду("70") Тогда		
		Отказ = 1;
	КонецЕсли;
КонецЕсли;

ВидОперации = "ПрочийРасход";
Если Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("60"))=1 Тогда
	ВидОперации = "ОплатаПоставщику";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("62"))=1 Тогда
	ВидОперации = "ВозвратПокупателю";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("71"))=1 Тогда
	ВидОперации = "ВыдачаПодотчетномуЛицу";
ИначеЕсли Источник.КоррСчет = СчетПоКоду("70") Тогда
	Если Источник.ФормироватьПроводки = 1 Тогда
		ВидОперации = "ВыплатаЗаработнойПлатыРаботнику";
	Иначе
		ВидОперации = "ВыплатаЗаработнойПлатыПоВедомостям";
	КонецЕсли;
ИначеЕсли (Источник.КоррСчет = СчетПоКоду("51")) или (Источник.КоррСчет = СчетПоКоду("52")) Тогда
	ВидОперации = "ВзносНаличнымиВБанк";
ИначеЕсли (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("66"))=1) или (Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("67"))=1) Тогда
	ВидОперации = "РасчетыПоКредитамИЗаймам";
ИначеЕсли Источник.КоррСчет.ПринадлежитГруппе(СчетПоКоду("57"))=1 Тогда
	ВидОперации = "Инкассация";	
ИначеЕсли Источник.КоррСчет = СчетПоКоду("76.1") Тогда
	ВидОперации = "ПрочийРасход";
ИначеЕсли (Источник.КоррСчет = СчетПоКоду("76.5")) или (Источник.КоррСчет = СчетПоКоду("76.6")) или (Источник.КоррСчет = СчетПоКоду("76.66")) или (Источник.КоррСчет = СчетПоКоду("76.55")) Тогда
	Если ПустоеЗначение(Источник.ДвижениеДенежныхСредств)=0 Тогда
		Если (Источник.ДвижениеДенежныхСредств.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоОбычнымВидамДеятельности)
			или (Источник.ДвижениеДенежныхСредств.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ВыручкаПоПрочимОперациям)  Тогда
			ВидОперации = "ВозвратПокупателю";
		ИначеЕсли Источник.ДвижениеДенежныхСредств.ВидДвижения = Перечисление.ВидыДвиженийДенежныхСредств.ПриобретениеТоваровПродукцииРаботИУслуг Тогда
			ВидОперации = "ОплатаПоставщику";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
ВходящиеДанные.Установить("ВидОперации",ВидОперации);

//Определим, нужна ли ручная настройка УСН
Если Константа.ОбъектНалогообложения.Получить(Источник.ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
	ДоходыРасходы = 1;
Иначе
	ДоходыРасходы = 0;
КонецЕсли;

Если (ДоходыРасходы = 0) ИЛИ (ВидОперации = "ПрочийРасход") ИЛИ (ВидОперации = "РасчетыПоКредитамИЗаймам") ИЛИ (ВидОперации = "") Тогда
	СчН01 = СчетПоКоду("Н01"); 
	СчН03 = СчетПоКоду("Н03");
	СчН05 = СчетПоКоду("Н05");
	
	//выбираем проводки
	Доходы = 0;
	Расходы = 0; 
	ДоходыБУ = 0;
	РасходыБУ = 0;                                  
	ДоходыЕНВД = 0;
	
	Операция = Источник.Операция;
	Операция.ВыбратьПроводки();
	Пока Операция.ПолучитьПроводку()=1 Цикл
		Если Операция.Кредит.Счет  = СчН01 Тогда
			Доходы = Доходы + Операция.Сумма;
		ИначеЕсли Операция.Кредит.Счет = СчН03 Тогда
			ДоходыБУ = ДоходыБУ + Операция.Сумма;
		ИначеЕсли Операция.Кредит.Счет = СчН05 Тогда
			ДоходыЕНВД = ДоходыЕНВД + Операция.Сумма;
		КонецЕсли;
		
		Если Операция.Дебет.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда
			Расходы = Расходы + Операция.Сумма;
		ИначеЕсли Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0 Тогда
			РасходыБУ = РасходыБУ + Операция.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Если (Доходы &lt;&gt; 0) ИЛИ (Расходы &lt;&gt; 0) ИЛИ (ДоходыБУ &lt;&gt; 0)  ИЛИ (РасходыБУ &lt;&gt; 0) ИЛИ (ДоходыЕНВД &lt;&gt; 0) Тогда
		ВходящиеДанные.Установить("РучнаяНастройка_УСН", 1);
//		ВходящиеДанные.Установить("Содержание_УСН", 1);
		ВходящиеДанные.Установить("Графа4_УСН", ДоходыБУ);
		ВходящиеДанные.Установить("Графа5_УСН", ?(ДоходыЕНВД &lt;&gt; 0, 0, Доходы) );
		ВходящиеДанные.Установить("Графа6_УСН", РасходыБУ);
		ВходящиеДанные.Установить("Графа7_УСН", Расходы);
		ВходящиеДанные.Установить("ДоходыЕНВД_УСН", ?(ДоходыЕНВД &lt;&gt; 0, 1, 0));
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
					<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетУчетаРасчетовСКонтрагентом");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоДт");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);


//*****************************************************
//устанавливаем нужный вид поля контрагент
ИмяСправочника         = "Контрагенты";
ИмяРасчетногоДокумента = "АвансовыйОтчет";

Если Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВыдачаПодотчетномуЛицу ИЛИ
	Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
	ИмяСправочника = "ФизическиеЛица";

ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ПрочийРасход Тогда
	// Прочее оприходование денежных средств пока не реализовано.
КонецЕсли;

Если ТипЗнч(Объект.Контрагент) &lt;&gt; Тип("СправочникСсылка." + ИмяСправочника) Тогда
	Объект.Контрагент = Справочники[ИмяСправочника].ПустаяСсылка();
КонецЕсли;
Выполнить(Алгоритмы.УстановитьСодержаниеУСН);
</ПослеЗагрузки>
					<Источник>ДокументСсылка.РасходныйОрдер</Источник>
					<Приемник>ДокументСсылка.РасходныйКассовыйОрдер</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийРКО"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Выдать --&gt; Выдать</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Выдать" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Выдать" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПоДокументу --&gt; ПоДокументу</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПоДокументу" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="ПоДокументу" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Основание --&gt; Основание</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Приложение --&gt; Приложение</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Приложение" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Приложение" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.Валютный = 2 Тогда
	Значение = Источник.Валюта;
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; СчетКасса</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКасса" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.Валютный = 2 Тогда
	Значение = СчетПоКоду("50.11");	
Иначе
	Значение = СчетПоКоду("50.1");	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>ДвижениеДенежныхСредств --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ДвижениеДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.ДвиженияДенежныхСредств"/>
							<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
							<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ДокументПоставки --&gt; ДокументОснование</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ДокументПоставки" Вид="Реквизит"/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.ДокументПоставки)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник.ДокументПоставки);
	ОпределитьПКОДляДокумента();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ОплатаПоставщику") или (ВидОперации = "ВозвратПокупателю") или (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
	ВидСубконто = ВидыСубконто.Контрагенты;
	ИмяПКО = "Контрагенты";
ИначеЕсли (ВидОперации = "ВыдачаПодотчетномуЛицу") Тогда
	ВидСубконто = ВидыСубконто.Контрагенты;
	ИмяПКО = "СотрудникиКонтрагенты";
ИначеЕсли (ВидОперации = "ВыплатаЗаработнойПлатыРаботнику") Тогда
	ВидСубконто = ВидыСубконто.Сотрудники;
	ИмяПКО = "ФизическиеЛица";
Иначе
	Отказ = 1;
КонецЕсли;
Если Отказ &lt;&gt; 1 Тогда
	//ищем нужное субконто
	Счет = Источник.КоррСчет;
	Если ПустоеЗначение(Счет)=0 Тогда
		Для НомерСубконто = 1 по Счет.КоличествоСубконто() Цикл
			Если Счет.ВидСубконто(НомерСубконто) = ВидСубконто Тогда
				Значение = Источник.ПолучитьАтрибут("Субконто"+НомерСубконто);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЕсли;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ОплатаПоставщику") или (ВидОперации = "ВозвратПокупателю") или (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
	Счет = Источник.КоррСчет;
	Если ПустоеЗначение(Счет)=0 Тогда
		Для НомерСубконто = 1 по Счет.КоличествоСубконто() Цикл
			Если Счет.ВидСубконто(НомерСубконто) = ВидыСубконто.Договоры Тогда
				Значение = Источник.ПолучитьАтрибут("Субконто"+НомерСубконто);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЕсли;
Если ПустоеЗначение(Значение)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ПлатежнаяВедомость</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежнаяВедомость" Вид="Реквизит"/>
							<КодПравилаКонвертации>ВедомостьНаВыплатуЗарплатыВКассу                  </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ВыплатаЗаработнойПлатыРаботнику" Тогда
	Значение = Источник;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "БезНДС";
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ВзносНаличнымиВБанк") или (ВидОперации = "Инкассация") или (ВидОперации = "ПрочийРасход") Тогда
	Значение = Источник.КоррСчет;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ПодразделениеДт</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеДт" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ПрочийРасход" Тогда
	Значение = Параметры.ПодразделениеОрганизации;
КонецЕсли;
Если ПустоеЗначение(Значение) = 1 тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СубконтоДт1</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ПрочийРасход") ИЛИ (ВидОперации = "Инкассация")Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто1);
	Значение = Источник.Субконто1;
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СубконтоДт2</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ПрочийРасход") ИЛИ (ВидОперации = "Инкассация")Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто2);
	Значение = Источник.Субконто2;
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СубконтоДт3</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если (ВидОперации = "ПрочийРасход") ИЛИ (ВидОперации = "Инкассация")Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто1", Источник.Субконто1);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто2", Источник.Субконто2);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто3", Источник.Субконто3);

	Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
	Параметры.ПараметрыАлгоритмов.Установить("Субконто", Источник.Субконто3);
	Значение = Источник.Субконто3;
	ПриВыгрузкеСубконто();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>Сумма --&gt; СуммаДокумента</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; СчетОрганизации</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетОрганизации" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
							<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
							<ПередВыгрузкой>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Если ВидОперации = "ВзносНаличнымиВБанк" Тогда
	Значение = Источник.Субконто1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; </Наименование>
							<Порядок>1300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; Графа4_УСН</Наименование>
							<Порядок>1350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа4_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; Графа5_УСН</Наименование>
							<Порядок>1400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа5_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; Графа6_УСН</Наименование>
							<Порядок>1450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа6_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; Графа7_УСН</Наименование>
							<Порядок>1500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Графа7_УСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ДоходыЕНВД_УСН</Наименование>
							<Порядок>1550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходыЕНВД_УСН" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>30</Код>
							<Наименование> --&gt; РасшифровкаПлатежа</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасшифровкаПлатежа" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Счет = Источник.КоррСчет;

КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ДоговорКонтрагента");
КоллекцияОбъектов.НоваяКолонка("КратностьВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("КурсВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СпособПогашенияЗадолженности");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СтатьяДвиженияДенежныхСредств");
КоллекцияОбъектов.НоваяКолонка("СуммаВзаиморасчетов");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаПлатежа");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетовПоАвансам");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаРасчетовСКонтрагентом");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.СтатьяДвиженияДенежныхСредств = Источник.ДвижениеДенежныхСредств;
КоллекцияОбъектов.СуммаПлатежа = Источник.Сумма;

Если (ВидОперации = "ОплатаПоставщику") или (ВидОперации = "ВозвратПокупателю") или (ВидОперации = "РасчетыПоКредитамИЗаймам") Тогда
	Если ПустоеЗначение(Счет)=0 Тогда
		Для НомерСубконто = 1 по Счет.КоличествоСубконто() Цикл
			Если Счет.ВидСубконто(НомерСубконто) = ВидыСубконто.Договоры Тогда
				КоллекцияОбъектов.ДоговорКонтрагента = Источник.ПолучитьАтрибут("Субконто"+НомерСубконто);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	КоллекцияОбъектов.КратностьВзаиморасчетов = 1;
	КоллекцияОбъектов.КурсВзаиморасчетов      = 1;
	КоллекцияОбъектов.СуммаВзаиморасчетов = Источник.Сумма;
	Если ПустоеЗначение(КоллекцияОбъектов.ДоговорКонтрагента)=0 Тогда
		Если ПустоеЗначение(КоллекцияОбъектов.ДоговорКонтрагента.ВалютаДоговора) = 0 Тогда
			Валюта = КоллекцияОбъектов.ДоговорКонтрагента.ВалютаДоговора;
			Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
			Кратность = ?(Кратность=0, 1, Кратность);
			КоллекцияОбъектов.КратностьВзаиморасчетов = Кратность;
			КоллекцияОбъектов.КурсВзаиморасчетов = Валюта.Курс.Получить(Источник.ДатаДок);
		КонецЕсли;
		Если КоллекцияОбъектов.ДоговорКонтрагента.ОплатаДоговора = 1 Тогда
			КоллекцияОбъектов.СуммаВзаиморасчетов = ?(КоллекцияОбъектов.КурсВзаиморасчетов=0,0,Источник.Сумма*КоллекцияОбъектов.КратностьВзаиморасчетов/КоллекцияОбъектов.КурсВзаиморасчетов);
		КонецЕсли;
	КонецЕсли;
	
	КоллекцияОбъектов.СтавкаНДС = "БезНДС";
	КоллекцияОбъектов.СуммаНДС  = 0;
    КоллекцияОбъектов.СпособПогашенияЗадолженности = "Автоматически";
	
	//по счету определяем пару расчетных счетов
	Параметры.ПараметрыАлгоритмов.Установить("Счет", Источник.КоррСчет);
	Параметры.ПараметрыАлгоритмов.Установить("Договор", КоллекцияОбъектов.ДоговорКонтрагента);
	СчетаРасчетов = ПолучитьСчетаРасчетов();
	КоллекцияОбъектов.СчетУчетаРасчетовПоАвансам     = СчетаРасчетов.Получить("СчетАвансов");
	КоллекцияОбъектов.СчетУчетаРасчетовСКонтрагентом = СчетаРасчетов.Получить("СчетРасчетов");
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; ДоговорКонтрагента</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
								<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДоговорКонтрагента)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
	Параметры.ПараметрыАлгоритмов.Установить("Договор",ОбъектКоллекции.ДоговорКонтрагента);
	Параметры.ПараметрыАлгоритмов.Установить("Счет",ОбъектКоллекции.СчетУчетаРасчетовСКонтрагентом);
	ОпределитьВидДоговора();
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; СпособПогашенияЗадолженности</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособПогашенияЗадолженности" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; СтатьяДвиженияДенежныхСредств</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтатьяДвиженияДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; СуммаПлатежа</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаПлатежа" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>27</Код>
							<Наименование> --&gt; ВыплатаЗаработнойПлаты</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВыплатаЗаработнойПлаты" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>ВидОперации = ВходящиеДанные.Получить("ВидОперации");
Счет = Источник.КоррСчет;
Если (ВидОперации = "ВыплатаЗаработнойПлатыПоВедомостям") Тогда
	КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
	КоллекцияОбъектов.НоваяКолонка("Ведомость");
	КоллекцияОбъектов.НоваяКолонка("СуммаКВыплате");
		
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Ведомость = ВходящиеДанные.Получить("ЗарплатнаяВедомость");
	КоллекцияОбъектов.СуммаКВыплате = Источник.Сумма;
Иначе
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Ведомость</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Ведомость" Вид="Реквизит"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; СуммаКВыплате</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаКВыплате" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеНМА</Код>
					<Наименование>Документ: Поступление НМА</Наименование>
					<Порядок>2600</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;

Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("60.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));

                                                 </ПередВыгрузкой>
					<ПослеЗагрузки>Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПоступлениеНМА</Источник>
					<Приемник>ДокументСсылка.ПоступлениеНМА</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>ДатаДокВходящий --&gt; ДатаВходящегоДокумента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ДатаДокВходящий" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>НомерДокВходящий --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="НомерДокВходящий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; НДСВключенВСтоимость</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВСтоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СуммаДокумента</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = Источник.Итог("Всего");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>22</Код>
							<Наименование>ТабличнаяЧасть --&gt; НематериальныеАктивы</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="НематериальныеАктивы" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>23</Код>
								<Наименование>ОбъектВнеоборотныхАктивов --&gt; НематериальныйАктив</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ОбъектВнеоборотныхАктивов" Вид="Реквизит" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
								<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
								<КодПравилаКонвертации>ОбъектыСтроительства_08_5_08_8                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование>Всего --&gt; Сумма</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="Всего" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование>НДС --&gt; СуммаНДС</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="НДС" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="СправочникСсылка.СтавкиНДС"/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>СтавкаНДС = ОбъектКоллекции.СтавкаНДС;
Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДС",СтавкаНДС);
ПолучитьСтавкуНДС();
Значение =  Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДССтрока");
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = СчетПоКоду("08.5");</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; СчетУчетаНДС</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = СчетПоКоду("19.2");</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; ОтражениеВУСН</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
								<ПередВыгрузкой>Значение = "Принимаются";</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПринятиеКУчетуНМА</Код>
					<Наименование>Документ: Принятие к учету НМА</Наименование>
					<Порядок>2650</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПринятиеКУчетуНМА</Источник>
					<Приемник>ДокументСсылка.ПринятиеКУчетуНМА</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Значение = "НематериальныйАктив";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ДатаПриобретения</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.НМА)=0 Тогда
	Значение = Источник.НМА.ДатаПриобретения;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>НМА --&gt; НематериальныйАктив</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="НМА" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ВидРасходовНУ = "Амортизация";
НаименованиеРасхода = "Амортизация НМА";
ПринятиеКналоговомуУчету = 1;
ВидПрочихДоходовИРасходов = "ПрочиеВнереализационныеДоходыРасходы";
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("ВидРасходовНУ",ВидРасходовНУ);
СтатьяЗатрат.Установить("ПринятиеКНалоговомуУчету",ПринятиеКНалоговомуУчету);
СтатьяЗатрат.Установить("Наименование",НаименованиеРасхода);
СтатьяЗатрат.Установить("ВидПрочихДоходовИРасходов",ВидПрочихДоходовИРасходов);
ИсходящиеДанные.Установить("СтатьяЗатрат",СтатьяЗатрат);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если Источник.ПорядокНачисленияАмортизации = 1 Тогда
	Значение = 0;
Иначе
	Значение = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>СпособНачисленияАмортизации --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="СпособНачисленияАмортизации" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииНМА                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>СрокПолезногоИспользования --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="СрокПолезногоИспользования" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>Коэффициент --&gt; КоэффициентБУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоэффициентБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>ОбщийОбъемПродукцииРабот --&gt; ОбъемПродукцииРаботДляВычисленияАмортизации</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ОбщийОбъемПродукцииРабот" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизации" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ПорядокВключенияВРасходы --&gt; ПорядокВключенияСтоимостиВСоставРасходовУСН</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="ПорядокВключенияВРасходы" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>Если Источник.ПорядокВключенияВРасходы = 1 Тогда
	Значение = "ВключитьВСоставАмортизируемогоИмущества";
ИначеЕсли Источник.ПорядокВключенияВРасходы = 2 Тогда
	Значение = "ВключитьВСоставРасходов";
Иначе
	Значение = "НеВключатьВСоставРасходов";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>СрокПолезногоИспользованияН --&gt; СрокПолезногоИспользованияУСН</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="СрокПолезногоИспользованияН" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>БалансоваяСтоимость --&gt; СтоимостьБУ</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="БалансоваяСтоимость" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СтоимостьБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>ПервоначальнаяСтоимостьН --&gt; СтоимостьУСН</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ПервоначальнаяСтоимостьН" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СтоимостьУСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетНачисленияАмортизации</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетНачисленияАмортизации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ПорядокНачисленияАмортизации&lt;&gt;1 Тогда
	Значение = ?(Источник.ПорядокНачисленияАмортизации = 2, СчетПоКоду("05"),СчетПоКоду("04.1"));
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("04.1");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаВнеоборотногоАктива</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаВнеоборотногоАктива" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение    = СчетПоКоду("08.5");
</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПередачаНМА</Код>
					<Наименование>Документ: Передача НМА</Наименование>
					<Порядок>2700</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("62.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));

                                                 </ПередВыгрузкой>
					<Источник>ДокументСсылка.ПередачаНМА</Источник>
					<Приемник>ДокументСсылка.ПередачаНМА</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>НМА --&gt; НематериальныйАктив</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="НМА" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>Стоимость --&gt; Сумма</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Стоимость" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>Стоимость --&gt; СуммаДокумента</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Стоимость" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "БезНДС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СчетДоходов</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("91.1");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>СтатьяПрочихДоходовИРасходов --&gt; Субконто</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="СтатьяПрочихДоходовИРасходов" Вид="Реквизит" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<Приемник Имя="Субконто" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетРасходов</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("91.2")</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("91.2");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПрекращениеСрокаДействияНМА</Код>
					<Наименование>Документ: Прекр.срока действ.НМА</Наименование>
					<Порядок>2750</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПрекращениеСрокаДействияНМА</Источник>
					<Приемник>ДокументСсылка.СписаниеНМА</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>НМА --&gt; НематериальныйАктив</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="НМА" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; СчетСписания</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетСписания" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("91.2");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>СтатьяПрочихДоходовИРасходов --&gt; Субконто</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="СтатьяПрочихДоходовИРасходов" Вид="Реквизит" Тип="СправочникСсылка.ПрочиеДоходыИРасходы"/>
							<Приемник Имя="Субконто" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПоступлениеОС</Код>
					<Наименование>Документ: Поступ.ОС</Наименование>
					<Порядок>2800</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("60.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовПоТаре", СчетаРасчетов.Получить("СчетРасчетовПоТаре"));
</ПередВыгрузкой>
					<ПослеЗагрузки>Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПоступлениеОС</Источник>
					<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг"/>
							<ПередВыгрузкой>Значение = "Оборудование";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ДатаДокВходящий --&gt; ДатаВходящегоДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ДатаДокВходящий" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>НомерДокВходящий --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="НомерДокВходящий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; НДСВключенВСтоимость</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВСтоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Константа.ОсновнойСклад;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоТаре</Наименование>
							<Порядок>1000</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоТаре" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>23</Код>
							<Наименование> --&gt; Оборудование</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Оборудование" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Номенклатура");
КоллекцияОбъектов.НоваяКолонка("Количество");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Цена");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("СтавкаНДС");
КоллекцияОбъектов.НоваяКолонка("СуммаНДС");
КоллекцияОбъектов.НоваяКолонка("СчетУчета");
КоллекцияОбъектов.НоваяКолонка("СчетУчетаНДС");
КоллекцияОбъектов.НоваяКолонка("НомерГТД");
КоллекцияОбъектов.НоваяКолонка("СтранаПроисхождения");

//сначала заполним таблицу из документа
Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 цикл
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Номенклатура = Источник.ОбъектВнеоборотныхАктивов;
	КоллекцияОбъектов.Количество = Источник.Количество;
	КоллекцияОбъектов.Коэффициент = 1;
	КоллекцияОбъектов.Цена = Источник.Цена;
	КоллекцияОбъектов.Сумма = Источник.Всего;
	
	КоллекцияОбъектов.СтавкаНДС =  "БезНДС";
	КоллекцияОбъектов.СуммаНДС = 0;
	КоллекцияОбъектов.СчетУчета = "08.04";
	КоллекцияОбъектов.СчетУчетаНДС = "19.01";
	
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; Номенклатура</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
								<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; Количество</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; Коэффициент</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование> --&gt; Цена</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; СчетУчета</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; СчетУчетаНДС</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДС" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; НомерГТД</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НомерГТД" Вид="Реквизит" Тип="СправочникСсылка.НомераГТД"/>
								<КодПравилаКонвертации>НомераГТД                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; СтранаПроисхождения</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтранаПроисхождения" Вид="Реквизит" Тип="СправочникСсылка.СтраныМира"/>
								<КодПравилаКонвертации>ГТД_КлассификаторСтранМира                        </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВводВЭксплуатациюОС</Код>
					<Наименование>Документ: Вв.в экспл.ОС</Наименование>
					<Порядок>2850</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<ПослеЗагрузки>Объект.СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию);
</ПослеЗагрузки>
					<Источник>ДокументСсылка.ВводВЭксплуатациюОС</Источник>
					<Приемник>ДокументСсылка.ПринятиеКУчетуОС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидОперации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПринятияКУчетуОсновныхСредств"/>
							<ПередВыгрузкой>Если Источник.ВидВложений = 2 Тогда
	Значение = "Оборудование";
Иначе
	Значение = "ОбъектыСтроительства";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; МестонахождениеОС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МестонахождениеОС" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; ДатаПриобретения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="ДатаПриобретения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>МОЛ --&gt; МОЛБУ</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="МОЛ" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="МОЛБУ" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>ОбъектВнеоборотныхАктивов --&gt; Номенклатура</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ОбъектВнеоборотныхАктивов" Вид="Реквизит" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ВидВложений &lt;&gt; 2 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>ОбъектВнеоборотныхАктивов --&gt; ОбъектСтроительства</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ОбъектВнеоборотныхАктивов" Вид="Реквизит" Тип="СправочникСсылка.ОбъектыВнеоборотныхАктивов"/>
							<Приемник Имя="ОбъектСтроительства" Вид="Реквизит" Тип="СправочникСсылка.ОбъектыСтроительства"/>
							<КодПравилаКонвертации>ОбъектыСтроительства_08_3                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ВидВложений = 2 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Константа.ОсновнойСклад;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(Источник.ОсновноеСредство)=0 Тогда
		Если ПустоеЗначение(Источник.ОсновноеСредство.СпособПоступления)=0 Тогда
			Значение = Источник.ОсновноеСредство.СпособПоступления;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ПорядокПогашенияСтоимостиБУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияСтоимостиБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС"/>
							<ПередВыгрузкой>Если Источник.ПодлежитАмортизации = 1 Тогда
	Значение = "НачислениеАмортизации";
Иначе
	Значение = "СтоимостьНеПогашается";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>НачислятьАмортизацию --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="НачислятьАмортизацию" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>КоэффициентАмортизации --&gt; ГодоваяНормаАмортизацииБУ</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="КоэффициентАмортизации" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ГодоваяНормаАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>КоэффициентУскорения --&gt; КоэффициентУскоренияБУ</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="КоэффициентУскорения" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоэффициентУскоренияБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ПараметрВыработкиБУ</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПараметрВыработкиБУ" Вид="Реквизит" Тип="СправочникСсылка.ПараметрыВыработкиОС"/>
							<КодПравилаКонвертации>ПараметрыВыработкиОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.СпособНачисленияАмортизации &lt;&gt; Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукцииРабот Тогда
	Отказ = 1;
Иначе
	Значение = "1";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>ОбщийОбъемПродукцииРабот --&gt; ПредполагаемыйОбъемПродукцииБУ</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ОбщийОбъемПродукцииРабот" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПредполагаемыйОбъемПродукцииБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>СпособНачисленияАмортизации --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="СпособНачисленияАмортизации" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииОС                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СпособыОтраженияРасходовПоАмортизации</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособыОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Источник;
ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ВидРасходовНУ = ?(Источник.ПриниматьКНалоговомуУчету = 0, "НеУчитываемыеВЦеляхНалогообложения","Амортизация");
НаименованиеРасхода = ?(Источник.ПриниматьКНалоговомуУчету = 0,"Амортизация ОС, не принимаемая в НУ", "Амортизация ОС");
ПринятиеКналоговомуУчету = Источник.ПриниматьКНалоговомуУчету;
ВидПрочихДоходовИРасходов = "ПрочиеВнереализационныеДоходыРасходы";
СтатьяЗатрат = СоздатьОбъект("СписокЗначений");
СтатьяЗатрат.Установить("ВидРасходовНУ",ВидРасходовНУ);
СтатьяЗатрат.Установить("ПринятиеКНалоговомуУчету",ПринятиеКНалоговомуУчету);
СтатьяЗатрат.Установить("Наименование",НаименованиеРасхода);
СтатьяЗатрат.Установить("ВидПрочихДоходовИРасходов",ВидПрочихДоходовИРасходов);
ИсходящиеДанные.Установить("СтатьяЗатрат",СтатьяЗатрат);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>СрокПолезногоИспользования --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="СрокПолезногоИспользования" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>ПервоначальнаяСтоимостьН --&gt; ПервоначальнаяСтоимостьНУ</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="ПервоначальнаяСтоимостьН" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПервоначальнаяСтоимостьНУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ПорядокВключенияСтоимостиВСоставРасходовУСН</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>Если Источник.ПорядокВключенияВРасходы = 1 Тогда
	Значение = "ВключитьВСоставАмортизируемогоИмущества";
ИначеЕсли Источник.ПорядокВключенияВРасходы = 2 Тогда
	Значение = "ВключитьВСоставРасходов";
Иначе
	Значение = "НеВключатьВСоставРасходов";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>СрокПолезногоИспользованияН --&gt; СрокПолезногоИспользованияУСН</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="СрокПолезногоИспользованияН" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>БалансоваяСтоимость --&gt; СтоимостьБУ</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="БалансоваяСтоимость" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СтоимостьБУ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>ПервоначальнаяСтоимостьН --&gt; СтоимостьУСН</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="ПервоначальнаяСтоимостьН" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СтоимостьУСН" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("01.1");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; СчетНачисленияАмортизации</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетНачисленияАмортизации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = СчетПоКоду("02.1");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СчетУчетаВнеоборотногоАктива</Наименование>
							<Порядок>1450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаВнеоборотногоАктива" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ВидВложений = 2 Тогда
	Значение = "08.4";
Иначе
	Значение = "08.3";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>32</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОС</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>33</Код>
								<Наименование>ОсновноеСредство --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; ИнвентарныйНомер</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИнвентарныйНомер" Вид="Реквизит" Тип="Строка"/>
								<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.Код;</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СписаниеОС</Код>
					<Наименование>Документ: Спис.ОС</Наименование>
					<Порядок>2900</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.СписаниеОС</Источник>
					<Приемник>ДокументСсылка.СписаниеОС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.Подразделениеорганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ПричинаСписания</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПричинаСписания" Вид="Реквизит" Тип="СправочникСсылка.ПричиныСписанияОС"/>
							<КодПравилаКонвертации>ПричиныСписанияОС                                 </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСписания = 1 Тогда
	Значение = "Списание в связи с чрезвычайными обстоятельствами";
Иначе
	Значение = "Списание ОС по прочим причинам";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СобытиеОС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСВыбытие                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СчетСписания</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетСписания" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Источник.ТипСписания = 1 Тогда
	Значение = СчетПоКоду("99.1");
Иначе
	Значение = СчетПоКоду("91.2");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Субконто</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто" Вид="Реквизит"/>
							<ПередВыгрузкой>Если Источник.ТипСписания = 1 Тогда
	Значение = "ЧрезвычайныеДоходыРасходы";
	ТипПриемника = "ПеречислениеСсылка.ПрибылиИУбытки";
Иначе
	Значение = Источник.СтатьяПрочихДоходовИРасходов;
	ТипПриемника = "СправочникСсылка.ПрочиеДоходыИРасходы";
	ИмяПКО = "ПрочиеДоходыИРасходы";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>12</Код>
								<Наименование>ОсновноеСредство --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПодготовкаКПередачеОС</Код>
					<Наименование>Документ: Подгот. к передаче ОС</Наименование>
					<Порядок>2950</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПодготовкаКПередачеОС</Источник>
					<Приемник>ДокументСсылка.ПодготовкаКПередачеОС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; СобытиеОС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСПодготовкаКПередаче                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>7</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>8</Код>
								<Наименование>ОсновноеСредство --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПередачаОС_Продажа</Код>
					<Наименование>Документ: Передача ОС</Наименование>
					<Порядок>3000</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если Источник.ПричинаВыбытия &lt;&gt; Перечисление.ПричиныВыбытияОС.Продажа Тогда
	Отказ = 1;
КонецЕсли;

Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", СчетПоКоду("62.1"));
Параметры.ПараметрыАлгоритмов.Установить("Договор", Источник.Договор);
СчетаРасчетов = ПолучитьСчетаРасчетов();
ВходящиеДанные.Установить("СчетУчетаРасчетовПоАвансам", СчетаРасчетов.Получить("СчетАвансов"));
ВходящиеДанные.Установить("СчетУчетаРасчетовСКонтрагентом", СчетаРасчетов.Получить("СчетРасчетов"));
</ПередВыгрузкой>
					<ПослеЗагрузки>// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "ОС");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПередачаОС</Источник>
					<Приемник>ДокументСсылка.ПередачаОС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>13</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Контрагент --&gt; Контрагент</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Договор --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.Договоры"/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
Параметры.ПараметрыАлгоритмов.Установить("Договор",Источник.Договор);
ОпределитьВидДоговора();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если ПустоеЗначение(Источник.Договор)=0 тогда
	Значение = ?(ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0,Источник.Договор.ВалютаДоговора,Параметры.Рубли);
Иначе
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КратностьВзаиморасчетов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КратностьВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;
Если Источник.Договор.Выбран() = 1 Тогда
    Если ПустоеЗначение(Источник.Договор.ВалютаДоговора) = 0 Тогда
		Валюта = Источник.Договор.ВалютаДоговора;
		Кратность = Валюта.Кратность.Получить(Источник.ДатаДок);
		Кратность = ?(Кратность=0, 1, Кратность);
		Значение = Кратность;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КурсВзаиморасчетов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КурсВзаиморасчетов" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ?(Источник.Курс=0,1,Источник.Курс);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ДокументПодготовкаКПередаче --&gt; ДокПодготовкаКПередачеОС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ДокументПодготовкаКПередаче" Вид="Реквизит" Тип="ДокументСсылка.ПодготовкаКПередачеОС"/>
							<Приемник Имя="ДокПодготовкаКПередачеОС" Вид="Реквизит" Тип="ДокументСсылка.ПодготовкаКПередачеОС"/>
							<КодПравилаКонвертации>ПодготовкаКПередачеОС                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВосстановитьАмортизационнуюПремию</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВосстановитьАмортизационнуюПремию" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; НДСВключенВСтоимость</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДСВключенВСтоимость" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СобытиеОС</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСПередача                                        </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СпособЗачетаАвансов</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособЗачетаАвансов" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<ПередВыгрузкой>Значение = "Автоматически";
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СуммаВключаетНДС</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СчетУчетаРасчетовПоАвансам</Наименование>
							<Порядок>900</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовПоАвансам" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СчетУчетаРасчетовСКонтрагентом</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаРасчетовСКонтрагентом" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>21</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОС</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>22</Код>
								<Наименование>ОсновноеСредство --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = Источник.Цена;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; СуммаНДС</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
								<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; СтавкаНДС</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
								<ПередВыгрузкой>Значение = "БезНДС";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; СчетДоходов</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетДоходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "91.01";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; Субконто</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Субконто" Вид="Реквизит"/>
								<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Источник.СтатьяПрочихДоходовИРасходов;
Если ПустоеЗначение(Значение)=1 Тогда
	Значение = 1;
	ИмяПКО = "ПрочиеДоходыИРасходы_ОС";
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; СчетРасходов</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетРасходов" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "91.02";</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; СчетУчетаНДСПоРеализации</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СчетУчетаНДСПоРеализации" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
								<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = "91.02";</ПередВыгрузкой>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПередачаОС_Списание</Код>
					<Наименование>Документ: Передача ОС</Наименование>
					<Порядок>3050</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
Если (Источник.ПричинаВыбытия &lt;&gt; Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача)
	и (Источник.ПричинаВыбытия &lt;&gt; Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал)
	и (Источник.ПричинаВыбытия &lt;&gt; Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества)
	и (Источник.ПричинаВыбытия &lt;&gt; Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление) Тогда
	Отказ = 1;
КонецЕсли;


Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();
//если причина выбытия - вклад в уставный капитал, и остаточная стоимость отличается от оценочной
//- нужно сделать дополнительную проводку по начислению этой разницы: это проводка 58.1.1 - 91 
Если Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал Тогда
	Операция = Источник.Операция;
	Операция.ВыбратьПроводки();
	Пока Операция.ПолучитьПроводку()=1 Цикл
		Если (
			  	(Операция.Дебет.Счет = СчетПоКоду("58.1.1")) 
			  	и  (
					(Операция.Кредит.Счет.ПринадлежитГруппе(СчетПоКоду("91"))=1) 
					 или (Операция.Кредит.Счет.ПринадлежитГруппе(СчетПоКоду("90"))=1)
					)
			 ) или
		 	(
			 	(
					(Операция.Дебет.Счет.ПринадлежитГруппе(СчетПоКоду("91"))=1) 
					или (Операция.Дебет.Счет.ПринадлежитГруппе(СчетПоКоду("90"))=1)
				) 
					и (Операция.Кредит.Счет = СчетПоКоду("58.1.1"))
			)
			 Тогда
			Проводки.НоваяСтрока();
			Проводки.СчетДт = Операция.Дебет.Счет;
			Проводки.СчетКт = Операция.Кредит.Счет;
			
			Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
			Проводки.СубконтоДт.НоваяКолонка("Ключ");
			Проводки.СубконтоДт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по Проводки.СчетДт.КоличествоСубконто() Цикл
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = Проводки.СчетДт.ВидСубконто(НомерСубконто);
				Проводки.СубконтоДт.Значение = Операция.Дебет.Субконто(НомерСубконто);
			КонецЦикла;

			Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
			Проводки.СубконтоКт.НоваяКолонка("Ключ");
			Проводки.СубконтоКт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по Проводки.СчетКт.КоличествоСубконто() Цикл
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = Проводки.СчетКт.ВидСубконто(НомерСубконто);
				Проводки.СубконтоКт.Значение = Операция.Кредит.Субконто(НомерСубконто);
			КонецЦикла;
			Проводки.Сумма = Операция.Сумма;
			Проводки.Содержание = Операция.СодержаниеПроводки;
		КонецЕсли;
	КонецЦикла;
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества)
	или (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление) Тогда
	Операция = Источник.Операция;
	Операция.ВыбратьПроводки();
	Пока Операция.ПолучитьПроводку()=1 Цикл
		Если (Операция.Дебет.Счет = СчетПоКоду("79.3"))  или
		     (Операция.Дебет.Счет = СчетПоКоду("58.4")) или 
			 (Операция.Кредит.Счет = СчетПоКоду("79.3"))  или
		     (Операция.Кредит.Счет = СчетПоКоду("58.4")) Тогда
			 //сначала сторнируем
			Проводки.НоваяСтрока();
			Проводки.СчетДт = Операция.Дебет.Счет;
			Проводки.СчетКт = Операция.Кредит.Счет;
			
			Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
			Проводки.СубконтоДт.НоваяКолонка("Ключ");
			Проводки.СубконтоДт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по Проводки.СчетДт.КоличествоСубконто() Цикл
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = Проводки.СчетДт.ВидСубконто(НомерСубконто);
				Проводки.СубконтоДт.Значение = ?(Проводки.СубконтоДт.Ключ = ВидыСубконто.Договоры,ПолучитьПустоеЗначение("Справочник.Договоры"), Операция.Дебет.Субконто(НомерСубконто));
			КонецЦикла;

			Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
			Проводки.СубконтоКт.НоваяКолонка("Ключ");
			Проводки.СубконтоКт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по Проводки.СчетКт.КоличествоСубконто() Цикл
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = Проводки.СчетКт.ВидСубконто(НомерСубконто);
				Проводки.СубконтоКт.Значение = ?(Проводки.СубконтоКт.Ключ = ВидыСубконто.Договоры,ПолучитьПустоеЗначение("Справочник.Договоры"), Операция.Кредит.Субконто(НомерСубконто));
			КонецЦикла;
			Проводки.Сумма = -Операция.Сумма;
			Проводки.Содержание = "СТОРНО "+Операция.СодержаниеПроводки;
			//а теперь вводим корректирующую проводку
			Проводки.НоваяСтрока();
			Проводки.СчетДт = Операция.Дебет.Счет;
			Проводки.СчетКт = Операция.Кредит.Счет;
			
			Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
			Проводки.СубконтоДт.НоваяКолонка("Ключ");
			Проводки.СубконтоДт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по Проводки.СчетДт.КоличествоСубконто() Цикл
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = Проводки.СчетДт.ВидСубконто(НомерСубконто);
				Проводки.СубконтоДт.Значение = Операция.Дебет.Субконто(НомерСубконто);
			КонецЦикла;

			Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
			Проводки.СубконтоКт.НоваяКолонка("Ключ");
			Проводки.СубконтоКт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по Проводки.СчетКт.КоличествоСубконто() Цикл
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = Проводки.СчетКт.ВидСубконто(НомерСубконто);
				Проводки.СубконтоКт.Значение = Операция.Кредит.Субконто(НомерСубконто);
			КонецЦикла;
			Проводки.Сумма = Операция.Сумма;
			Проводки.Содержание = Операция.СодержаниеПроводки;

		КонецЕсли;
	КонецЦикла;	
КонецЕсли;

Если Проводки.КоличествоСтрок()&gt;0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Хозрасчетный", Проводки);
	ВходящиеДанные.Установить("Содержание", "Дополнительные проводки к документу "+строка(источник));
	ВходящиеДанные.Установить("Дата", ПолучитьДатуV8(Источник.ДатаДок,Источник.ПолучитьВремя()));
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЕсли;</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПередачаОС</Источник>
					<Приемник>ДокументСсылка.СписаниеОС</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ПричинаСписания</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПричинаСписания" Вид="Реквизит" Тип="СправочникСсылка.ПричиныСписанияОС"/>
							<КодПравилаКонвертации>ПричиныСписанияОС                                 </КодПравилаКонвертации>
							<ПередВыгрузкой>Если (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача) Тогда
	Значение = "Безвозмездная передача";
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал) Тогда
	Значение = "Вклад в уставный капитал";
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) Тогда
	Значение = "Передача по договору простого товарищества";
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление) Тогда
	Значение = "Передача в доверительное управление";
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СобытиеОС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСПередача                                        </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; СчетСписания</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетСписания" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача) Тогда
	Значение = СчетПоКоду("91.2");	
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал) Тогда
	Значение = СчетПоКоду("58.1.1");	
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) Тогда
	Значение = СчетПоКоду("58.4");
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление) Тогда
	Значение = СчетПоКоду("79.3");
Иначе
	Значение = СчетПоКоду("91.2");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Субконто</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто" Вид="Реквизит"/>
							<ПередВыгрузкой>Если (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.БезвозмезднаяПередача) Тогда
	Если ПустоеЗначение(Источник.СтатьяПрочихДоходовИРасходов) = 1 Тогда
		Значение = 1;
		ИмяПКО = "ПрочиеДоходыИРасходы_ОС";
	Иначе
		Значение = Источник.СтатьяПрочихДоходовИРасходов;
		ИмяПКО = "ПрочиеДоходыИРасходы";
	КонецЕсли;
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ВкладВУставныйКапитал) Тогда
	Значение = Источник.Контрагент;	
	ИмяПКО = "Контрагенты";
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаПоДоговоруПростогоТоварищества) Тогда
	Значение = Источник.Контрагент;
	ИмяПКО = "Контрагенты";
ИначеЕсли (Источник.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.ПередачаВДоверительноеУправление) Тогда
	Значение = Источник.Контрагент;
	ИмяПКО = "Контрагенты";
Иначе
	Значение = Источник.СтатьяПрочихДоходовИРасходов;
	ИмяПКО = "ПрочиеДоходыИРасходы";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>РегистрацияОплатОСиНМА</Код>
					<Наименование>Документ: Регистрация оплат ОС и НМА</Наименование>
					<Порядок>3100</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();
</ПередВыгрузкой>
					<Источник>ДокументСсылка.РегистрацияОплатОСиНМА</Источник>
					<Приемник>ДокументСсылка.РегистрацияОплатыОсновныхСредствДляУСН</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>21</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>22</Код>
							<Наименование>ТабличнаяЧасть --&gt; Оплата</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Оплата" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.Объект.Вид() &lt;&gt; "ОсновныеСредства" Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>25</Код>
								<Наименование>Объект --&gt; ОсновноеСредство</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Объект" Вид="Реквизит"/>
								<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
								<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование>ДатаОплаты --&gt; ДатаОплаты</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
								<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование>Сумма --&gt; СуммаОплаты</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаОплаты" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>31</Код>
							<Наименование>ТабличнаяЧасть --&gt; ОплатаНМА</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="ОплатаНМА" Вид="ТабличнаяЧасть"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.Объект.Вид() &lt;&gt; "НематериальныеАктивы" Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
							<Свойство>
								<Код>33</Код>
								<Наименование>Объект --&gt; НематериальныйАктив</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="Объект" Вид="Реквизит"/>
								<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
								<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование>ДатаОплаты --&gt; ДатаОплаты</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
								<Приемник Имя="ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>35</Код>
								<Наименование>Сумма --&gt; СуммаОплаты</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
								<Приемник Имя="СуммаОплаты" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ</Код>
					<Наименование>: </Наименование>
					<Порядок>3150</Порядок>
					<Приемник>ДокументСсылка.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Месяц</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Месяц" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ИзменитьЛичныйВычет</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИзменитьЛичныйВычет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; КодВычетаЛичный</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычетаЛичный" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетовНДФЛ"/>
							<КодПравилаКонвертации>ВидыВычетовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ИзменитьВычетыНаДетей</Наименование>
							<Порядок>400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИзменитьВычетыНаДетей" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; ВычетыНаДетей</Наименование>
							<Порядок>450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВычетыНаДетей" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; КодВычета</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетовНДФЛ"/>
								<КодПравилаКонвертации>ВидыВычетовНДФЛ                                   </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; ДействуетДо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДействуетДо" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВедомостьНаВыплатуЗарплатыВКассу</Код>
					<Наименование>: </Наименование>
					<Порядок>3200</Порядок>
					<ПередВыгрузкой>ПроверитьНаВозможностьВыгрузки();

Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");	
КонецЕсли;

ОбъектСоздан = 1;

Попытка
	Инфо = СоздатьОбъект("AddIn.V7SysInfo");
Исключение
	ОбъектСоздан = 0;
КонецПопытки;

ТЧ = СоздатьОбъект("ТаблицаЗначений");

ТЧ.НоваяКолонка("Сотрудник");
ТЧ.НоваяКолонка("ИдСтроки");

Если Источник.КоррСчет = СчетПоКоду("70") Тогда
	ТЧ.НоваяСтрока();
	ТЧ.Сотрудник = Источник.Субконто1;
	Если ОбъектСоздан = 1 Тогда
		ТЧ.ИдСтроки = Инфо.СоздатьGUID();
	Иначе
		ТЧ.ИдСтроки = Источник.НомерСтроки;
	КонецЕсли;
КонецЕсли;

ВходящиеДанные.Установить("ТабличнаяЧасть", ТЧ);</ПередВыгрузкой>
					<Приемник>ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Если Источник.Вид()="РасходныйОрдер" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Префикс","Р");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("Префикс","В");
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");
Параметры.ПараметрыАлгоритмов.Установить("Префикс","");</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ПолучитьДатуV8(Источник.ДатаДок,Источник.ПолучитьВремя());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = НачМесяца(Источник.ДатаДок);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПометкаУдаления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = Источник.ПометкаУдаления();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="СправочникСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "Зарплата";</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>7</Код>
							<Наименование> --&gt; Зарплата</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизическоеЛицо");
КоллекцияОбъектов.НоваяКолонка("КВыплате");

Если Источник.КоррСчет = СчетПоКоду("70") Тогда
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Сотрудник = Источник.Субконто1;
	КоллекцияОбъектов.ФизическоеЛицо = Источник.Субконто1;
	КоллекцияОбъектов.КВыплате = Источник.Сумма;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Подразделение</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
								<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; КВыплате</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КВыплате" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; ФизическоеЛицо</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.Сотрудник Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПериодВзаиморасчетов" Вид="Реквизит" Тип="Дата"/>
								<ПередВыгрузкой>Значение = Источник.ДатаДок;</ПередВыгрузкой>
							</Свойство>
						</Группа>
						<Группа>
							<Код>15</Код>
							<Наименование> --&gt; ФизическиеЛица</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическиеЛица" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ФизическоеЛицо");

Если Источник.КоррСчет = СчетПоКоду("70") Тогда
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ФизическоеЛицо = Источник.Субконто1;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; ФизическоеЛицо</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>17</Код>
							<Наименование> --&gt; Состав</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состав" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ФизическоеЛицо");

Если Источник.КоррСчет = СчетПоКоду("70") Тогда
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ФизическоеЛицо = Источник.Субконто1;
Иначе
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; ИдентификаторСтроки</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
								<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	ТЧ = ВходящиеДанные.Получить("ТабличнаяЧасть");
	
	Если ПустоеЗначение(ТЧ) = 0 Тогда
		Если ТипЗначенияСтр(ТЧ) = "ТаблицаЗначений" Тогда
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				Если ТЧ.Сотрудник = ОбъектКоллекции.ФизическоеЛицо Тогда
					Значение = ТЧ.ИдСтроки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; ФизическоеЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
						</Группа>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПриемНаРаботу</Код>
					<Наименование>Документ: Пр.о приеме</Наименование>
					<Порядок>3250</Порядок>
					<ПередВыгрузкой>Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;
ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПриказОПриемеНаРаботу</Источник>
					<Приемник>ДокументСсылка.ПриемНаРаботу</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Должность --&gt; Должность</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Должность" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>8</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ДатаПриказа --&gt; ДатаПриема</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ДатаПриказа" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВидЗанятости</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
							<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
						</Свойство>
						<Группа>
							<Код>12</Код>
							<Наименование> --&gt; Начисления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Начисление");
КоллекцияОбъектов.НоваяКолонка("Размер");
КоллекцияОбъектов.НоваяКолонка("ВидРасчетаОтражениеЗП");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Начисление = Источник.Сотрудник;
КоллекцияОбъектов.Размер     = Источник.Оклад;
КоллекцияОбъектов.ВидРасчетаОтражениеЗП = СоздатьОбъект("СписокЗначений");
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("СчетЗатрат",Источник.СчетЗатрат);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто1",Источник.Субконто1);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто2",Источник.Субконто2);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто3",Источник.Субконто3);</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Начисление</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
								<КодПравилаКонвертации>ВидыНачисленийОклад                               </КодПравилаКонвертации>
								<ПередВыгрузкой>ИсходящиеДанные = ОбъектКоллекции.ВидРасчетаОтражениеЗП;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Размер</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Подразделение</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СпособРасчетаАванса</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособРасчетаАванса" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаАванса"/>
							<ПередВыгрузкой>Значение = "ПроцентомОтТарифа";</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Увольнение</Код>
					<Наименование>Документ: Пр.об увольн.</Наименование>
					<Порядок>3300</Порядок>
					<ПередВыгрузкой>Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;
ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПриказОбУвольнении</Источник>
					<Приемник>ДокументСсылка.Увольнение</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Документ",Источник);
ПолучитьНомерДокумента();
Значение = Параметры.ПараметрыАлгоритмов.Получить("НомерДокумента");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ДатаПриказа --&gt; ДатаУвольнения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДатаПриказа" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КадровыйПеревод</Код>
					<Наименование>Документ: Пр.о кадр.изм.</Наименование>
					<Порядок>3350</Порядок>
					<ПередВыгрузкой>Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;
ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<Источник>ДокументСсылка.ПриказОКадровыхИзменениях</Источник>
					<Приемник>ДокументСсылка.КадровыйПеревод</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Подразделение</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ИзменитьПодразделениеИДолжность</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИзменитьПодразделениеИДолжность" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Сотрудник --&gt; ФизическоеЛицо</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>11</Код>
							<Наименование> --&gt; Начисления</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Начисление");
КоллекцияОбъектов.НоваяКолонка("Размер");
КоллекцияОбъектов.НоваяКолонка("ВидРасчетаОтражениеЗП");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Начисление = Источник.Сотрудник;
КоллекцияОбъектов.Размер = Источник.Оклад;
КоллекцияОбъектов.ВидРасчетаОтражениеЗП = СоздатьОбъект("СписокЗначений");
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("СчетЗатрат",Источник.СчетЗатрат);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто1",Источник.Субконто1);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто2",Источник.Субконто2);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто3",Источник.Субконто3);</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; Начисление</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
								<КодПравилаКонвертации>ВидыНачисленийОклад                               </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Размер</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ИзменитьНачисления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>ДатаПриказа --&gt; ДатаНачала</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ДатаПриказа" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ВидЗанятости</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
							<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Должность</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИзменениеОклада</Код>
					<Наименование>: </Наименование>
					<Порядок>3400</Порядок>
					<ПередВыгрузкой>  Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;
  ПроверитьНаВозможностьВыгрузки();
  Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	  Отказ = 1;
  КонецЕсли;
  КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + ВходящиеДанные.Получить("НомераСтрокВыписки");</ПередВыгрузкой>
					<ПриВыгрузке>Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	//выгружаем собранный документ
	ВходящиеДанныеДокумента = СоздатьОбъект("СписокЗначений");
	ВходящиеДанныеДокумента.Установить("Сотрудник",     Источник.Сотрудник);
	ВходящиеДанныеДокумента.Установить("ФизическоеЛицо",Источник.Сотрудник);	
			
	КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
	КоллекцияОбъектов.НоваяКолонка("Начисление");
	КоллекцияОбъектов.НоваяКолонка("Размер");
	КоллекцияОбъектов.НоваяКолонка("ВидРасчетаОтражениеЗП");
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Начисление = Источник.Сотрудник;
	КоллекцияОбъектов.Размер     = Источник.Оклад;
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП = СоздатьОбъект("СписокЗначений");
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("СчетЗатрат",Источник.Сотрудник.СчетЗатрат.Получить(Источник.ДатаДок));
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто1", Источник.Сотрудник.Субконто1.Получить(Источник.ДатаДок));
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто2", Источник.Сотрудник.Субконто2.Получить(Источник.ДатаДок));
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто3", Источник.Сотрудник.Субконто3.Получить(Источник.ДатаДок));	
	
	ВходящиеДанныеДокумента.Установить("Начисления",КоллекцияОбъектов);
	
	УзелСсылки = ВыгрузитьПоПравилу(Источник, , ВходящиеДанныеДокумента, , "ИзменениеОклада");
КонецЦикла;

Отказ = 1;</ПриВыгрузке>
					<ПослеВыгрузки>Отказ = 1;</ПослеВыгрузки>
					<Приемник>ДокументСсылка.КадровыйПеревод</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование> --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение=ПолучитьДатуV8(Источник.ДатаДок, Источник.ПолучитьВремя());</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Комментарий</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПометкаУдаления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = Источник.ПометкаУдаления();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Проведен</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Значение = Источник.Проведен();</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ИзменитьНачисления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ФизическоеЛицо</Наименование>
							<Порядок>400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>9</Код>
							<Наименование> --&gt; Начисления</Наименование>
							<Порядок>450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Начисление</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
								<КодПравилаКонвертации>ВидыНачисленийОклад                               </КодПравилаКонвертации>
								<ПередВыгрузкой>ИсходящиеДанные = ОбъектКоллекции.ВидРасчетаОтражениеЗП;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; Размер</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ДатаНачала</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение=Источник.ДатаДок;</ПередВыгрузкой>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИзменениеОкладов</Код>
					<Наименование>Документ: Пр.об изм.окл.</Наименование>
					<Порядок>3450</Порядок>
					<ПередВыгрузкой>Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;
ПроверитьНаВозможностьВыгрузки();</ПередВыгрузкой>
					<ПриВыгрузке>Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку()=1 Цикл
	//выгружаем собранный документ
	ВходящиеДанныеДокумента = СоздатьОбъект("СписокЗначений");
	ВходящиеДанныеДокумента.Установить("Сотрудник",     Источник.Сотрудник);
	ВходящиеДанныеДокумента.Установить("ФизическоеЛицо",Источник.Сотрудник);	
			
	КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
	КоллекцияОбъектов.НоваяКолонка("Начисление");
	КоллекцияОбъектов.НоваяКолонка("Размер");
	КоллекцияОбъектов.НоваяКолонка("ВидРасчетаОтражениеЗП");
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Начисление = Источник.Сотрудник;
	КоллекцияОбъектов.Размер     = Источник.Оклад;
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП = СоздатьОбъект("СписокЗначений");
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("СчетЗатрат",Источник.Сотрудник.СчетЗатрат.Получить(Источник.ДатаДок));
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто1", Источник.Сотрудник.Субконто1.Получить(Источник.ДатаДок));
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто2", Источник.Сотрудник.Субконто2.Получить(Источник.ДатаДок));
	КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто3", Источник.Сотрудник.Субконто3.Получить(Источник.ДатаДок));	
	
	ВходящиеДанныеДокумента.Установить("Начисления",КоллекцияОбъектов);
	
	УзелСсылки = ВыгрузитьПоПравилу(Источник, , ВходящиеДанныеДокумента, , "ИзменениеОклада");
КонецЦикла;

Отказ = 1;</ПриВыгрузке>
					<ПослеВыгрузки>Отказ = 1;</ПослеВыгрузки>
					<Источник>ДокументСсылка.ПриказОбИзмененииОкладов</Источник>
					<Приемник>ДокументСсылка.КадровыйПеревод</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
		</Группа>
		<Группа>
			<Код>ПрочиеНеобходимыеСведения</Код>
			<Наименование>Прочие необходимые сведения</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>Банки</Код>
				<Наименование>СправочникСсылка.Банки --&gt; СправочникСсылка.Банки</Наименование>
				<Порядок>50</Порядок>
				<Источник>СправочникСсылка.Банки</Источник>
				<Приемник>СправочникСсылка.Банки</Приемник>
				<Свойства>
					<Свойство Поиск="true" Обязательное="true">
						<Код>9</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt;</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ПередОбработкойВыгрузки>Отказ = Источник.ЭтоГруппа();</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование>КоррСчет --&gt; КоррСчет</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КоррСчет" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>Местонахождение --&gt; Город</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Местонахождение" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Адрес --&gt; Адрес</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Адрес" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Телефоны --&gt; Телефоны</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Телефоны" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТерриториальныеУсловия</Код>
				<Наименование>ПеречислениеСсылка.ТерриториальныеУсловия --&gt; СправочникСсылка.ТерриториальныеУсловия</Наименование>
				<Порядок>100</Порядок>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ПеречислениеСсылка.ТерриториальныеУсловия</Источник>
				<Приемник>СправочникСсылка.ТерриториальныеУсловияПФР</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Идентификатор();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Идентификатор();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>МКС --&gt; МКС</Наименование>
						<Порядок>50</Порядок>
						<Источник>МКС</Источник>
						<Приемник>МКС</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>МКСР --&gt; МКСР</Наименование>
						<Порядок>100</Порядок>
						<Источник>МКСР</Источник>
						<Приемник>МКСР</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>РКС --&gt; РКС</Наименование>
						<Порядок>150</Порядок>
						<Источник>РКС</Источник>
						<Приемник>РКС</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>РКСМ --&gt; РКСМ</Наименование>
						<Порядок>200</Порядок>
						<Источник>РКСМ</Источник>
						<Приемник>РКСМ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ЮрФизЛицо</Код>
				<Наименование>ПеречислениеСсылка.ВидыКонтрагентов --&gt; ПеречислениеСсылка.ЮрФизЛицо</Наименование>
				<Порядок>150</Порядок>
				<Источник>ПеречислениеСсылка.ВидыКонтрагентов</Источник>
				<Приемник>ПеречислениеСсылка.ЮридическоеФизическоеЛицо</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>4</Код>
						<Наименование>ЧастноеЛицо --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЧастноеЛицо</Источник>
						<Приемник>ФизическоеЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ДочернееОбщество --&gt; ЮрЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДочернееОбщество</Источник>
						<Приемник>ЮридическоеЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЗависимоеОбщество --&gt; ЮрЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник>ЗависимоеОбщество</Источник>
						<Приемник>ЮридическоеЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Организация --&gt; ЮрЛицо</Наименование>
						<Порядок>400</Порядок>
						<Источник>Организация</Источник>
						<Приемник>ЮридическоеЛицо</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>200</Порядок>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(Источник,,,, "КурсыВалют");</ПослеВыгрузки>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Если Источник.Код = "810" Тогда
	Значение = "643";
КонецЕсли;
</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВалютаРуб</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>250</Порядок>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "643";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "руб.";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Российский рубль";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСкладов</Код>
				<Наименование>ПеречислениеСсылка.ТипыСкладов --&gt; ПеречислениеСсылка.ВидыСкладов</Наименование>
				<Порядок>300</Порядок>
				<Источник>ПеречислениеСсылка.ТипыСкладов</Источник>
				<Приемник>ПеречислениеСсылка.ТипыСкладов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>Розничный --&gt; НеавтоматизированнаяТорговаяТочка</Наименование>
						<Порядок>100</Порядок>
						<Источник>Розничный</Источник>
						<Приемник>РозничныйМагазин</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>Оптовый --&gt; Оптовый</Наименование>
						<Порядок>200</Порядок>
						<Источник>Оптовый</Источник>
						<Приемник>ОптовыйСклад</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыНМА</Код>
				<Наименование>ПеречислениеСсылка.ГруппыНМА --&gt; ПеречислениеСсылка.ВидыНМА</Наименование>
				<Порядок>350</Порядок>
				<Источник>ПеречислениеСсылка.ГруппыНМА</Источник>
				<Приемник>ПеречислениеСсылка.ВидыНМА</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>ОрганизационныеРасходы --&gt; ОрганизационныеРасходы</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОрганизационныеРасходы</Источник>
						<Приемник>ОрганизационныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПраваНаПрограммыЭВМ --&gt; ИсключительноеПравоНаПрогр</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПраваНаПрограммыЭВМ</Источник>
						<Приемник>ИсключительноеПравоНаПрограммыДляЭВМ</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПраваНаТопологииМикросхем --&gt; ИмущественноеПравоНа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПраваНаТопологииМикросхем</Источник>
						<Приемник>ИмущественноеПравоНаТопологииИМС</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПраваНаТоварныйЗнак --&gt; ИсключительноеПравоНаТовар</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПраваНаТоварныйЗнак</Источник>
						<Приемник>ИсключительноеПравоНаТоварныйЗнак</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПраваНаСелекционныеДостижения --&gt; ИсключительноеПр</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПраваНаСелекционныеДостижения</Источник>
						<Приемник>ИсключительноеПравоНаСелекционныеДостижения</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>Прочие --&gt; ПрочиеНематериальныеАктивы</Наименование>
						<Порядок>600</Порядок>
						<Источник>Прочие</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ДеловаяРепутация --&gt; ДеловаяРепутацияОрганизации</Наименование>
						<Порядок>700</Порядок>
						<Источник>ДеловаяРепутация</Источник>
						<Приемник>ДеловаяРепутацияОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПраваПоАвторскимДоговорам --&gt; ПрочиеНематериальные</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПраваПоАвторскимДоговорам</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПраваПоПатентам --&gt; ИсключительноеПравоНаИзобретен</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПраваПоПатентам</Источник>
						<Приемник>ИсключительноеПравоНаИзобретение</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ПраваНоуХау --&gt; ИсключительноеПравоНаИзобретение</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПраваНоуХау</Источник>
						<Приемник>ИсключительноеПравоНаИзобретение</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПраваНаОбъектыПриродопользования --&gt; ПрочиеНематер</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ПраваНаОбъектыПриродопользования</Источник>
						<Приемник>ПрочиеНематериальныеАктивы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>АмортизационныеГруппы</Код>
				<Наименование>ПеречислениеСсылка.АмортизационныеГруппы --&gt; ПеречислениеСсылка.АмортизационныеГруппы</Наименование>
				<Порядок>400</Порядок>
				<Источник>ПеречислениеСсылка.АмортизационныеГруппы</Источник>
				<Приемник>ПеречислениеСсылка.АмортизационныеГруппы</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>6</Код>
						<Наименование>ПерваяГруппа --&gt; ПерваяГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПерваяГруппа</Источник>
						<Приемник>ПерваяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВтораяГруппа --&gt; ВтораяГруппа</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВтораяГруппа</Источник>
						<Приемник>ВтораяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ТретьяГруппа --&gt; ТретьяГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник>ТретьяГруппа</Источник>
						<Приемник>ТретьяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ЧетвертаяГруппа --&gt; ЧетвертаяГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЧетвертаяГруппа</Источник>
						<Приемник>ЧетвертаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПятаяГруппа --&gt; ПятаяГруппа</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПятаяГруппа</Источник>
						<Приемник>ПятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ШестаяГруппа --&gt; ШестаяГруппа</Наименование>
						<Порядок>600</Порядок>
						<Источник>ШестаяГруппа</Источник>
						<Приемник>ШестаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>СедьмаяГруппа --&gt; СедьмаяГруппа</Наименование>
						<Порядок>700</Порядок>
						<Источник>СедьмаяГруппа</Источник>
						<Приемник>СедьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ВосьмаяГруппа --&gt; ВосьмаяГруппа</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВосьмаяГруппа</Источник>
						<Приемник>ВосьмаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДевятаяГруппа --&gt; ДевятаяГруппа</Наименование>
						<Порядок>900</Порядок>
						<Источник>ДевятаяГруппа</Источник>
						<Приемник>ДевятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДесятаяГруппа --&gt; ДесятаяГруппа</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДесятаяГруппа</Источник>
						<Приемник>ДесятаяГруппа</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ОтдельнаяГруппа --&gt; ОтдельнаяГруппа</Наименование>
						<Порядок>1100</Порядок>
						<Приемник>ОтдельнаяГруппа</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппыОС</Код>
				<Наименование>ПеречислениеСсылка.ГруппыОС --&gt; ПеречислениеСсылка.ГруппыОС</Наименование>
				<Порядок>450</Порядок>
				<Источник>ПеречислениеСсылка.ГруппыОС</Источник>
				<Приемник>ПеречислениеСсылка.ГруппыОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Здания --&gt; Здания</Наименование>
						<Порядок>100</Порядок>
						<Источник>Здания</Источник>
						<Приемник>Здания</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>Сооружения --&gt; Сооружения</Наименование>
						<Порядок>200</Порядок>
						<Источник>Сооружения</Источник>
						<Приемник>Сооружения</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПередаточныеУстройства --&gt; ПроизводственныйИХозяйс</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПередаточныеУстройства</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>МашиныИОборудование --&gt; МашиныИОборудование</Наименование>
						<Порядок>400</Порядок>
						<Источник>МашиныИОборудование</Источник>
						<Приемник>МашиныИОборудование</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ТранспортныеСредства --&gt; ТранспортныеСредства</Наименование>
						<Порядок>500</Порядок>
						<Источник>ТранспортныеСредства</Источник>
						<Приемник>ТранспортныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Инструмент --&gt; ПроизводственныйИХозяйственныйИнвен</Наименование>
						<Порядок>600</Порядок>
						<Источник>Инструмент</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Инвентарь --&gt; ПроизводственныйИХозяйственныйИнвент</Наименование>
						<Порядок>700</Порядок>
						<Источник>Инвентарь</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>РабочийСкот --&gt; РабочийСкот</Наименование>
						<Порядок>800</Порядок>
						<Источник>РабочийСкот</Источник>
						<Приемник>РабочийСкот</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПродуктивныйСкот --&gt; ПродуктивныйСкот</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПродуктивныйСкот</Источник>
						<Приемник>ПродуктивныйСкот</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>МноголетниеНасаждения --&gt; МноголетниеНасаждения</Наименование>
						<Порядок>1000</Порядок>
						<Источник>МноголетниеНасаждения</Источник>
						<Приемник>МноголетниеНасаждения</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>КапитальныеЗатратыПоУлучшениюЗемель --&gt; ДругиеВиды</Наименование>
						<Порядок>1100</Порядок>
						<Источник>КапитальныеЗатратыПоУлучшениюЗемель</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЗемельныеУчастки --&gt; ЗемельныеУчастки</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ЗемельныеУчастки</Источник>
						<Приемник>ЗемельныеУчастки</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ОбъектыПриродопользования --&gt; ОбъектыПриродопользо</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОбъектыПриродопользования</Источник>
						<Приемник>ОбъектыПриродопользования</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>Прочие --&gt; ДругиеВидыОсновныхСредств</Наименование>
						<Порядок>1400</Порядок>
						<Источник>Прочие</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>РасчетныеСчета</Код>
				<Наименование>СправочникСсылка.РасчетныеСчета --&gt; СправочникСсылка.БанковскиеСчета</Наименование>
				<Порядок>500</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.РасчетныеСчета</Источник>
				<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
				<Свойства>
					<Свойство>
						<Код>9</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Владелец" Вид="Свойство"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>Номер --&gt; НомерСчета</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НомерСчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>БанкОрганизации --&gt; Банк</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>БанкДляРасчетов --&gt; БанкДляРасчетов</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="БанкДляРасчетов" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Корреспондент --&gt; ТекстКорреспондента</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="Корреспондент" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстКорреспондента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Назначение --&gt; ТекстНазначения</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="Назначение" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекстНазначения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ВидСчета</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Расчетный";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВалютаДенежныхСредств</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаДенежныхСредств" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.Рубли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ВсегдаУказыватьКПП --&gt; ВсегдаУказыватьКПП</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ВсегдаУказыватьКПП" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Код>
				<Наименование>СправочникСсылка.КлассификаторЕН --&gt; СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФо</Наименование>
				<Порядок>550</Порядок>
				<ПередВыгрузкой>Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.КлассификаторЕН</Источник>
				<Приемник>СправочникСсылка.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>НормаАморт --&gt; НормаАмортизационныхОтчислений</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="НормаАморт" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="НормаАмортизационныхОтчислений" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НормаАвто --&gt; ПроцентОтСтоимостиМашины</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="НормаАвто" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ПроцентОтСтоимостиМашины" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>СправочникСсылка.ЕдиницыИзмерений --&gt; СправочникСсылка.КлассификаторЕдиницИзмерения</Наименование>
				<Порядок>600</Порядок>
				<Источник>СправочникСсылка.ЕдиницыИзмерений</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТипыЦенНоменклатуры</Код>
				<Наименование>СправочникСсылка.ТипыЦен --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>650</Порядок>
				<ПередВыгрузкой>Если Константа.ИспользоватьТипыЦен = Нет Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ТипыЦен</Источник>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Валюта --&gt; ВалютаЦены</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(Источник.Валюта) = 1 Тогда
	Значение = Параметры.Рубли;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ОкруглятьВБольшуюСторону</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОкруглятьВБольшуюСторону" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПолФизическихЛиц</Код>
				<Наименование>ПеречислениеСсылка.Пол --&gt; ПеречислениеСсылка.ПолФизическихЛиц</Наименование>
				<Порядок>750</Порядок>
				<Источник>ПеречислениеСсылка.Пол</Источник>
				<Приемник>ПеречислениеСсылка.ПолФизическогоЛица</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>Мужской --&gt; Мужской</Наименование>
						<Порядок>100</Порядок>
						<Источник>Мужской</Источник>
						<Приемник>Мужской</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>Женский --&gt; Женский</Наименование>
						<Порядок>200</Порядок>
						<Источник>Женский</Источник>
						<Приемник>Женский</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДолжностиОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.ДолжностиОрганизаций</Наименование>
				<Порядок>800</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.Должности</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВРеглУчете_Структура</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = СокрП(Источник.Получить("СчетЗатрат")) + " / " + 
СокрП(Источник.Получить("Субконто1")) + " / " + 
СокрП(Источник.Получить("Субконто2")) + " / " + 
СокрП(Источник.Получить("Субконто3"));</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(СокрП(Источник.Получить("СчетЗатрат")) + " / " + 
СокрП(Источник.Получить("Субконто1")) + " / " + 
СокрП(Источник.Получить("Субконто2")) + " / " + 
СокрП(Источник.Получить("Субконто3")), 150);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>СправочникСсылка.ДокументыУдостоверяющиеЛичность --&gt; СправочникСсылка.ДокументыУдостоверяющиеЛичност</Наименование>
				<Порядок>950</Порядок>
				<Источник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Источник>
				<Приемник>СправочникСсылка.ВидыДокументовФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>КодНДФЛ --&gt; КодМВД</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="КодНДФЛ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодМВД" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование>КодСЗВ --&gt; КодПФР</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КодСЗВ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОКСМ</Код>
				<Наименование>СправочникСсылка.ОКСМ --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
				<Порядок>1000</Порядок>
				<Источник>СправочникСсылка.ОКСМ</Источник>
				<Приемник>СправочникСсылка.СтраныМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыПрочихДоходовИРасходов</Код>
				<Наименование>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов --&gt; ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Наименование>
				<Порядок>1250</Порядок>
				<Источник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПрочихДоходовИРасходов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>АктивыПереданныеВПользование --&gt; ПрочиеВнереализац</Наименование>
						<Порядок>100</Порядок>
						<Источник>АктивыПереданныеВПользование</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПредоставленныеПраваПоНМА --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПредоставленныеПраваПоНМА</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>УчастиеВУставныхКапиталах --&gt; ДоходыРасходыСвязанн</Наименование>
						<Порядок>300</Порядок>
						<Источник>УчастиеВУставныхКапиталах</Источник>
						<Приемник>УчастиеВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>УчастиеВУставныхКапиталахИностранныхОрганизаций --</Наименование>
						<Порядок>400</Порядок>
						<Источник>УчастиеВУставныхКапиталахИностранныхОрганизаций</Источник>
						<Приемник>УчастиеВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПрибыльПоСовместнойДеятельности --&gt; ДоходыРасходыС</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПрибыльПоСовместнойДеятельности</Источник>
						<Приемник>УчастиеВДругихОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ВыбытиеОС --&gt; ДоходыРасходыСвязанныеСРеализациейОс</Наименование>
						<Порядок>600</Порядок>
						<Источник>ВыбытиеОС</Источник>
						<Приемник>РеализацияОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВыбытиеНМА --&gt; ДоходыРасходыСвязанныеСРеализациейН</Наименование>
						<Порядок>700</Порядок>
						<Источник>ВыбытиеНМА</Источник>
						<Приемник>РеализацияНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ВыбытиеАктивов --&gt; ДоходыРасходыСвязанныеСРеализац</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВыбытиеАктивов</Источник>
						<Приемник>РеализацияПрочегоИмущества</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ПроцентыКПолучению --&gt; ПроцентыКПолучениюУплате</Наименование>
						<Порядок>900</Порядок>
						<Источник>ПроцентыКПолучению</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ПроцентыКУплате --&gt; ПроцентыКПолучениюУплате</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ПроцентыКУплате</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>УслугиБанков --&gt; РасходыНаУслугиБанков</Наименование>
						<Порядок>1100</Порядок>
						<Источник>УслугиБанков</Источник>
						<Приемник>РасходыНаУслугиБанков</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>КупляПродажаИностраннойВалюты --&gt; ПрочиеВнереализа</Наименование>
						<Порядок>1200</Порядок>
						<Источник>КупляПродажаИностраннойВалюты</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ОсуществлениеФинансовыхУслуг --&gt; ДоходыРасходыСвяз</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОсуществлениеФинансовыхУслуг</Источник>
						<Приемник>РеализацияПраваТребованияКакОказанияФинансовыхУслуг</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>УступкиПраваТребования --&gt; ДоходыРасходыСвязанныеС</Наименование>
						<Порядок>1400</Порядок>
						<Источник>УступкиПраваТребования</Источник>
						<Приемник>РеализацияПраваТребованияПослеНаступленияСрокаПлатежа</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВосстановлениеРезервов --&gt; ПрочиеВнереализационные</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ВосстановлениеРезервов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>РезервыСомнительныхДолгов --&gt; ПрочиеВнереализацион</Наименование>
						<Порядок>1600</Порядок>
						<Источник>РезервыСомнительныхДолгов</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ОперацииСФинансовымиИнструментами --&gt; ДоходыРасход</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ОперацииСФинансовымиИнструментами</Источник>
						<Приемник>ОперацииСФинансовымиИнструментамиСрочныхСделокОР</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагам --&gt; Процент</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагам</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0 --</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0</Источник>
						<Приемник>ПроцентыКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ПрочиеОперационныеДоходыРасходы --&gt; ПрочиеОперацио</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ПрочиеОперационныеДоходыРасходы</Источник>
						<Приемник>ПрочиеОперационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>КурсовыеРазницы --&gt; КурсовыеРазницы</Наименование>
						<Порядок>2100</Порядок>
						<Источник>КурсовыеРазницы</Источник>
						<Приемник>КурсовыеРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ПрочиеВнереализационныеДоходыРасходы --&gt; ПрочиеВне</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ПрочиеВнереализационныеДоходыРасходы</Источник>
						<Приемник>ПрочиеВнереализационныеДоходыРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>СписаннаяКредиторскаяЗадолженность --&gt; СписаниеДеб</Наименование>
						<Порядок>2300</Порядок>
						<Источник>СписаннаяКредиторскаяЗадолженность</Источник>
						<Приемник>СписаниеДебиторскойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>СписаннаяДебиторскаяЗадолженность --&gt; СписаниеДеби</Наименование>
						<Порядок>2400</Порядок>
						<Источник>СписаннаяДебиторскаяЗадолженность</Источник>
						<Приемник>СписаниеДебиторскойКредиторскойЗадолженности</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ВозмещениеУбытковКУплате --&gt; ВозмещениеУбытковКПол</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ВозмещениеУбытковКУплате</Источник>
						<Приемник>ВозмещениеУбытковКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ВозмещениеУбытковКПолучению --&gt; ВозмещениеУбытковК</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ВозмещениеУбытковКПолучению</Источник>
						<Приемник>ВозмещениеУбытковКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ДооценкаУценкаАктивов --&gt; РасходыОтСниженияСтоимос</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ДооценкаУценкаАктивов</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ШтрафыПоДоговорам --&gt; ШтрафыПениНеустойкиКПолучени</Наименование>
						<Порядок>2800</Порядок>
						<Источник>ШтрафыПоДоговорам</Источник>
						<Приемник>ШтрафыПениНеустойкиКПолучениюУплате</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>АктивыПолученныеБезвозмездно --&gt; ДоходыРасходыСвяз</Наименование>
						<Порядок>2900</Порядок>
						<Источник>АктивыПолученныеБезвозмездно</Источник>
						<Приемник>БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ПрибыльУбыткиПрошлыхЛет --&gt; ПрибыльУбытокПрошлыхЛе</Наименование>
						<Порядок>3000</Порядок>
						<Источник>ПрибыльУбыткиПрошлыхЛет</Источник>
						<Приемник>ПрибыльУбытокПрошлыхЛет</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ОтрицательнаяРазницаОтПереоценкиИмущества --&gt; Расх</Наименование>
						<Порядок>3100</Порядок>
						<Источник>ОтрицательнаяРазницаОтПереоценкиИмущества</Источник>
						<Приемник>РасходыОтСниженияСтоимостиАктивов</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПоступленияНМА</Код>
				<Наименование>ПеречислениеСсылка.СпособыПоступленияНМА --&gt; ПеречислениеСсылка.СпособыПоступленияАктивов</Наименование>
				<Порядок>1300</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПоступленияНМА</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПоступленияАктивов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>4</Код>
						<Наименование>ПриобретениеЗаПлату --&gt; ПриобретениеЗаПлату</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПриобретениеЗаПлату</Источник>
						<Приемник>ПриобретениеЗаПлату</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВкладВУставныйКапитал --&gt; ВкладВУставныйКапитал</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВкладВУставныйКапитал</Источник>
						<Приемник>ВкладВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоДоговоруМены --&gt; ВОбменНаДругоеИмущество</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоДоговоруМены</Источник>
						<Приемник>ВОбменНаДругоеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>БезвозмездноеПоступление --&gt; БезвозмездноеПоступле</Наименование>
						<Порядок>400</Порядок>
						<Источник>БезвозмездноеПоступление</Источник>
						<Приемник>БезвозмездноеПоступление</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Иной --&gt; Иное</Наименование>
						<Порядок>500</Порядок>
						<Источник>Иной</Источник>
						<Приемник>Иное</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПоступленияОС</Код>
				<Наименование>ПеречислениеСсылка.СпособыПоступленияОС --&gt; ПеречислениеСсылка.СпособыПоступленияАктивов</Наименование>
				<Порядок>1350</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПоступленияОС</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПоступленияАктивов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>5</Код>
						<Наименование>ПриобретениеЗаПлату --&gt; ПриобретениеЗаПлату</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПриобретениеЗаПлату</Источник>
						<Приемник>ПриобретениеЗаПлату</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВкладВУставныйКапитал --&gt; ВкладВУставныйКапитал</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВкладВУставныйКапитал</Источник>
						<Приемник>ВкладВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПоДоговоруМены --&gt; ВОбменНаДругоеИмущество</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоДоговоруМены</Источник>
						<Приемник>ВОбменНаДругоеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>БезвозмездноеПоступление --&gt; БезвозмездноеПоступле</Наименование>
						<Порядок>400</Порядок>
						<Источник>БезвозмездноеПоступление</Источник>
						<Приемник>БезвозмездноеПоступление</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоДоговоруЛизинга --&gt; ПоДоговоруАренды</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоДоговоруЛизинга</Источник>
						<Приемник>ПоДоговоруАренды</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Строительство --&gt; Строительство</Наименование>
						<Порядок>600</Порядок>
						<Источник>Строительство</Источник>
						<Приемник>Строительство</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Иной --&gt; Иное</Наименование>
						<Порядок>650</Порядок>
						<Источник>Иной</Источник>
						<Приемник>Иное</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПараметрыВыработкиОС</Код>
				<Наименование> --&gt; СправочникСсылка.ПараметрыВыработкиОС</Наименование>
				<Порядок>1400</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.ПараметрыВыработкиОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСВводИПринятиеКУчету</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>1450</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Принятие к учету и ввод в экплуатацию";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидОперацииОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "ПринятиеКУчетуСВводомВЭксплуатацию";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСМодернизация</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>1500</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Модернизировано";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидОперацииОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Модернизация";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСВыбытие</Код>
				<Наименование> --&gt; СправочникСсылка.СобытияОС</Наименование>
				<Порядок>1550</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Выбыло";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Списание";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияРасходовПоАмортизации</Код>
				<Наименование>СправочникСсылка.ОсновныеСредства --&gt; СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Наименование>
				<Порядок>1600</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные) = 1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

ДатаЗначения = ?(ПустоеЗначение(ВходящиеДанные.Получить("Дата"))=0,ВходящиеДанные.Получить("Дата"),Параметры.ДатаВводаОстатков);

Если ТипЗначенияСтр(Источник) = "Справочник" Тогда
	Счет = Источник.СчетЗатрат.Получить(ДатаЗначения);
		
	ВходящиеДанные.Установить("СчетЗатрат",Счет);
	ВходящиеДанные.Установить("Субконто1",Источник.Субконто1.Получить(ДатаЗначения));
	ВходящиеДанные.Установить("Субконто2",Источник.Субконто2.Получить(ДатаЗначения));
	ВходящиеДанные.Установить("Субконто3",Источник.Субконто3.Получить(ДатаЗначения));
	КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник)+ДатаЗначения;
	Если (ПустоеЗначение(Счет) = 1) Тогда
		Отказ = 1;
	КонецЕсли;
ИначеЕсли ТипЗначенияСтр(Источник) = "Документ" Тогда
	Если (Метаданные.Документ(Источник.Вид()).РеквизитШапки("СчетЗатрат").Выбран() = 0) 
		  или (Метаданные.Документ(Источник.Вид()).РеквизитШапки("Субконто1").Выбран() = 0)
		  или (Метаданные.Документ(Источник.Вид()).РеквизитШапки("Субконто2").Выбран() = 0)
		  или (Метаданные.Документ(Источник.Вид()).РеквизитШапки("Субконто3").Выбран() = 0) Тогда
		Отказ = 1;
	Иначе
		Счет = Источник.СчетЗатрат;
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник)+ВходящиеДанные.Получить("КлючДанных");
		ВходящиеДанные.Установить("СчетЗатрат",Счет);
		ВходящиеДанные.Установить("Субконто1",Источник.Субконто1);
		ВходящиеДанные.Установить("Субконто2",Источник.Субконто2);
		ВходящиеДанные.Установить("Субконто3",Источник.Субконто3);
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;
Если Отказ &lt;&gt; 1 Тогда
	Наименование = СокрП(Счет);
	Для НомерСубконто = 1 по 3 Цикл
		ВидСубконто = Счет.ВидСубконто(НомерСубконто);
        Наименование = Наименование + " / " + СокрП(ВходящиеДанные.Получить("Субконто"+НомерСубконто));	   
	КонецЦикла;
	ВходящиеДанные.Установить("Наименование",Наименование);
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "Способы");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетЗатрат");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","Субконто");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.СпособыОтраженияРасходовПоАмортизации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "БУ: "+ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; Способы</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Способы" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СчетЗатрат","Счет.Основной");
КоллекцияОбъектов.НоваяКолонка("Коэффициент");
КоллекцияОбъектов.НоваяКолонка("Субконто1");
КоллекцияОбъектов.НоваяКолонка("Субконто2");
КоллекцияОбъектов.НоваяКолонка("Субконто3");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.СчетЗатрат = ВходящиеДанные.Получить("СчетЗатрат");
КоллекцияОбъектов.Коэффициент = 1;

Для НомерСубконто = 1 по КоллекцияОбъектов.СчетЗатрат.КоличествоСубконто() Цикл
	ВидСубконто = КоллекцияОбъектов.СчетЗатрат.ВидСубконто(НомерСубконто);
    КоллекцияОбъектов.УстановитьЗначение(КоллекцияОбъектов.НомерСтроки,"Субконто"+НомерСубконто, ВходящиеДанные.Получить("Субконто"+НомерСубконто));
КонецЦикла;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; СчетЗатрат</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетЗатрат" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Счет = ОбъектКоллекции.СчетЗатрат;
Параметры.ПараметрыАлгоритмов.Установить("Счет", Счет);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто1);
ПриВыгрузкеСубконто();
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто2);
ПриВыгрузкеСубконто();
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетЗатрат);
Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.Субконто1);
Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.Субконто2);
Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.Субконто3);

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.Субконто3);
ПриВыгрузкеСубконто();
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Коэффициент</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РБП_НМА</Код>
				<Наименование>СправочникСсылка.РасходыБудущихПериодов --&gt; СправочникСсылка.НематериальныеАктивы</Наименование>
				<Порядок>1650</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.РасходыБудущихПериодов</Источник>
				<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "К" + ПривестиНомерКДлине(Источник.Код, 7);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НематериальныеАктивы"/>
						<КодПравилаКонвертации>РБП_НМА                                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидОбъектаУчета</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
						<ПередВыгрузкой>Значение = "РасходыНаНИОКР"; Отказ = Источник.ЭтоГруппа();</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыНачисленияАмортизацииНМА</Код>
				<Наименование>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА --&gt; ПеречислениеСсылка.СпособыНачисленияАмортизац</Наименование>
				<Порядок>1700</Порядок>
				<Источник>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Источник>
				<Приемник>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>УменьшаемогоОстатка --&gt; УменьшаемогоОстатка</Наименование>
						<Порядок>200</Порядок>
						<Источник>УменьшаемогоОстатка</Источник>
						<Приемник>УменьшаемогоОстатка</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукции</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыНачисленияАмортизацииОС</Код>
				<Наименование>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС --&gt; ПеречислениеСсылка.СпособыНачисленияАмортизаци</Наименование>
				<Порядок>1750</Порядок>
				<Источник>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Источник>
				<Приемник>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Линейный --&gt; Линейный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Линейный</Источник>
						<Приемник>Линейный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>УменьшаемогоОстатка --&gt; УменьшаемогоОстатка</Наименование>
						<Порядок>200</Порядок>
						<Источник>УменьшаемогоОстатка</Источник>
						<Приемник>УменьшаемогоОстатка</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоСуммеЧиселЛет --&gt; ПоСуммеЧиселЛетИспользования</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоСуммеЧиселЛет</Источник>
						<Приемник>ПоСуммеЧиселЛетИспользования</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПропорциональноОбъемуПродукцииРабот --&gt; Пропорцион</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПропорциональноОбъемуПродукцииРабот</Источник>
						<Приемник>ПропорциональноОбъемуПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПоЕдинымНормам --&gt; ПоЕНАОФ</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоЕдинымНормам</Источник>
						<Приемник>ПоЕНАОФ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппаНоменклатуры</Код>
				<Наименование>Группа номенклатуры   </Наименование>
				<Порядок>1800</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "АвтоматическиСозданнаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<ПослеЗагрузки>Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>Значение = ПолучитьПустоеЗначение();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РодительНоменклатуры</Код>
				<Наименование>Родитель номенклатуры   </Наименование>
				<Порядок>1850</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "РаспределеннаяГруппа_" + ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>ТипНоменклатуры = ВходящиеДанные.Получить("ТипНоменклатуры");

Если ПустоеЗначение(Источник.Родитель) = 1 Тогда
			
	ИмяГруппы = "Товары";
	Если ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		ИмяГруппы = "Продукция";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал Тогда
		ИмяГруппы = "Материалы";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Услуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
		ИмяГруппы = "Услуги";
	ИначеЕсли ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
		ИмяГруппы = "Услуги";
	КонецЕсли;
	ИмяПКО = "ГруппаНоменклатуры";
	Значение = 1;
Иначе
	
	ИмяГруппы = Источник.Родитель.Наименование + " (" + ТипНоменклатуры + ")";
	ИмяПКО = "РодительНоменклатуры";
КонецЕсли;

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("ТипНоменклатуры", ТипНоменклатуры);
ИсходящиеДанные.Установить("Наименование", ИмяГруппы);
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыНачислений</Код>
				<Наименование>Справочник: Виды начислений (выплат)</Наименование>
				<Порядок>2000</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + ЗначениеВСтрокуВнутр(ВходящиеДанные);
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.ВидыНачислений</Источник>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Источник.Код, 5);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Значение = Источник.Наименование+" (счет затрат "+ВходящиеДанные.Получить("СчетЗатрат")+")";
Иначе
	Значение = Источник.Наименование;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете_Структура      </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("СчетЗатрат"))=0 Тогда
		Значение = ВходящиеДанные;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ВидДохода --&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ВидДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходов"/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; КодДоходаСтраховыеВзносы</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаСтраховыеВзносы" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовПоСтраховымВзносам"/>
						<ПередВыгрузкой>Если Источник.СтраховыеВзносы = 0 Тогда
	Значение = "НеОблагаетсяЦеликом";
Иначе
	Значение = "ОблагаетсяЦеликом";
	Если ПустоеЗначение(Источник.ВидДохода)=0 Тогда
		КодДохода = СокрЛП(Источник.ВидДохода.Код);
		Если Найти(",2720,2730,2740,2750,",","+КодДохода+",")&gt;0 Тогда
			Значение = "НеОблагаетсяЦеликом";
		ИначеЕсли Найти(",1010,2710,2761,2001,3010,2800,2900,2400,2640,2610,3020,1200,1220,1530,1531,1532,1533,1536,1535,1540,",","+КодДохода+",")&gt;0 Тогда
			Значение = "НеЯвляетсяОбъектом";
		ИначеЕсли Найти(",2300,",","+КодДохода+",")&gt;0 Тогда
			Значение = "ПособияЗаСчетФСС";
		ИначеЕсли Найти(",2010,",","+КодДохода+",")&gt;0 Тогда
			Значение = "ДоговорыГПХ";
		ИначеЕсли Найти(",2760,",","+КодДохода+",")&gt;0 Тогда
			Значение = "Матпомощь";
		ИначеЕсли Найти(",2201,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеЛитературныеПроизведения";
		ИначеЕсли Найти(",2202,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеГрафическиеПроизведения";
		ИначеЕсли Найти(",2203,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеСкульптуры";
		ИначеЕсли Найти(",2204,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеАудиовизуальныеПроизведения";
		ИначеЕсли Найти(",2205,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеМузыкальноСценическиеПроизведение";
		ИначеЕсли Найти(",2205,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеДругиеМузыкальныеПроизведения";
		ИначеЕсли Найти(",2205,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеИсполнениеПроизведений";
		ИначеЕсли Найти(",2208,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеНаучныеТруды";
		ИначеЕсли Найти(",2209,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеОткрытия";
		ИначеЕсли Найти(",2762,",","+КодДохода+",")&gt;0 Тогда
			Значение = "МатпомощьПриРожденииРебенка";
		ИначеЕсли Найти(",1300,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеЛитературныеПроизведения";
		ИначеЕсли Найти(",1300,",","+КодДохода+",")&gt;0 Тогда
			Значение = "АвторскиеЛитературныеПроизведения";
		КонецЕсли;                
	КонецЕсли;
		
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОтношениеКЕНВД</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтношениеКЕНВД" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; КатегорияНачисленияИлиНеоплаченногоВремени</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияНачисленияИлиНеоплаченногоВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
						<ПередВыгрузкой>Значение = "Прочее";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ВидОперацииПоЗарплате</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОперацииПоЗарплате" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПоЗарплате"/>
						<ПередВыгрузкой>Значение = "НачисленоДоход";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыНачисленийОклад</Код>
				<Наименование>Справочник: Виды начислений (выплат)</Наименование>
				<Порядок>2000</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(Источник) + ЗначениеВСтрокуВнутр(ВходящиеДанные);
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Значение = Источник.Наименование+" (счет затрат "+ВходящиеДанные.Получить("СчетЗатрат")+")";
Иначе
	Значение = Источник.Наименование;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете_Структура      </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("СчетЗатрат"))=0 Тогда
		Значение = ВходящиеДанные;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
						<ПередВыгрузкой>Значение = "КодДоходаПоУмолчанию";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; КодДоходаСтраховыеВзносы</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаСтраховыеВзносы" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовПоСтраховымВзносам"/>
						<ПередВыгрузкой>Значение = "ОблагаетсяЦеликом";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОтношениеКЕНВД</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтношениеКЕНВД" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; КатегорияНачисленияИлиНеоплаченногоВремени</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияНачисленияИлиНеоплаченногоВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
						<ПередВыгрузкой>Значение = "Прочее";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ВидОперацииПоЗарплате</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОперацииПоЗарплате" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийПоЗарплате"/>
						<ПередВыгрузкой>Значение = "НачисленоДоход";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>БазаРаспределенияРасходовУСНПоВидамДеятельнос</Код>
				<Наименование>Перечисление: База распределения расходов</Наименование>
				<Порядок>2050</Порядок>
				<Источник>ПеречислениеСсылка.БазаРаспределенияРасходов</Источник>
				<Приемник>ПеречислениеСсылка.БазаРаспределенияРасходовУСНПоВидамДеятельности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоходыВсего --&gt; ДоходыВсегоНУ</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДоходыВсего</Источник>
						<Приемник>ДоходыВсегоНУ</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоходыОтражаемыеВНУ --&gt; ДоходыПринимаемыеНУ</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоходыОтражаемыеВНУ</Источник>
						<Приемник>ДоходыПринимаемыеНУ</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДоходыОтРеализации --&gt; ДоходыОтРеализацииБУ</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДоходыОтРеализации</Источник>
						<Приемник>ДоходыОтРеализацииБУ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>МетодыРаспределенияРасходовУСНПоВидамДеятельн</Код>
				<Наименование>Перечисление: Метод распределения</Наименование>
				<Порядок>2100</Порядок>
				<Источник>ПеречислениеСсылка.МетодРаспределенияРасходов</Источник>
				<Приемник>ПеречислениеСсылка.МетодыРаспределенияРасходовУСНПоВидамДеятельности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>НарастающимИтогом --&gt; НарастающимИтогомСНачалаГода</Наименование>
						<Порядок>50</Порядок>
						<Источник>НарастающимИтогом</Источник>
						<Приемник>НарастающимИтогомСНачалаГода</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Поквартально --&gt; ЗаКвартал</Наименование>
						<Порядок>100</Порядок>
						<Источник>Поквартально</Источник>
						<Приемник>ЗаКвартал</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>НазначениеЦелевыхСредств</Код>
				<Наименование>Перечисление: Назначения целевых средств</Наименование>
				<Порядок>2150</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ПеречислениеСсылка.НазначенияЦелевыхСредств</Источник>
				<Приемник>СправочникСсылка.НазначениеЦелевыхСредств</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыВзаиморасчетов</Код>
				<Наименование>Справочник: Виды договоров</Наименование>
				<Порядок>2200</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ВидыДоговоров</Источник>
				<Приемник>СправочникСсылка.ВидыВзаиморасчетов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СобытияОС</Код>
				<Наименование>Перечисление: </Наименование>
				<Порядок>2300</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ПеречислениеСсылка.СостоянияОС</Источник>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<КодПравилаКонвертации>ВидыСобытийОС                                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Строка(Источник);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОсновноеПодразделение</Код>
				<Наименование>: </Наименование>
				<Порядок>2350</Порядок>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование> --&gt; НаименованиеПолное</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрочиеДоходыИРасходыБезвозмездно</Код>
				<Наименование>: </Наименование>
				<Порядок>2400</Порядок>
				<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
						<ПередВыгрузкой>Значение = "ОсновнаяСистемаНалогообложения";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидПрочихДоходовИРасходов</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
						<ПередВыгрузкой>Значение = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев("Доходы (расходы), связанные с безвозмездным получением имущества, работ, услуг или имущественных прав",100);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КонтрагентБанк</Код>
				<Наименование>Справочник: </Наименование>
				<Порядок>2450</Порядок>
				<ПослеЗагрузки>Если Объект.ЭтоНовый() Тогда
	Если Объект.ПолучитьСсылкуНового().Пустая() Тогда
		Объект.УстановитьСсылкуНового(Справочники.Контрагенты.ПолучитьСсылку());
	КонецЕсли;
	Объект.ГоловнойКонтрагент = Объект.ПолучитьСсылкуНового();
Иначе
	Если Объект.ГоловнойКонтрагент &lt;&gt; Объект.Ссылка Тогда
		Объект.ГоловнойКонтрагент = Объект.Ссылка;
	КонецЕсли;
КонецЕсли;</ПослеЗагрузки>
				<Источник>СправочникСсылка.Банки</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>3</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Автоматически созданный контрагент для продажи валюты #";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Наименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ЮридическоеФизическоеЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮридическоеФизическоеЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
						<ПередВыгрузкой>Значение = "ЮридическоеЛицо";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоговорПродажиВалюты</Код>
				<Наименование>: </Наименование>
				<Порядок>2500</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(Источник.Получить("Банк"))=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВалютаВзаиморасчетов</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаВзаиморасчетов" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Получить("Валюта");
Если ПустоеЗначение(Значение)=1 Тогда
	Значение = Параметры.Рубли;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ВидДоговора</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
						<ПередВыгрузкой>Значение = "Прочее";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; РасчетыВУсловныхЕдиницах</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыВУсловныхЕдиницах" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Автоматически созданный договор для продажи валюты #";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>КонтрагентБанк                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Получить("Банк");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Договор продажи валюты "+строка(Источник.Получить("Валюта"));</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>8</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПричиныСписанияОС</Код>
				<Наименование>: </Наименование>
				<Порядок>2550</Порядок>
				<Приемник>СправочникСсылка.ПричиныСписанияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСПодготовкаКПередаче</Код>
				<Наименование>: </Наименование>
				<Порядок>2600</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "ПодготовкаКПередаче";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Подготовка к передаче ОС";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОСПередача</Код>
				<Наименование>: </Наименование>
				<Порядок>2650</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.СобытияОС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидСобытияОС</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСобытияОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСобытийОС"/>
						<ПередВыгрузкой>Значение = "Передача";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Передача ОС";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрочиеДоходыИРасходы_ОС</Код>
				<Наименование>: </Наименование>
				<Порядок>2700</Порядок>
				<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Доходы (расходы), связанные с реализацией основных средств";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВидПрочихДоходовИРасходов</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПрочихДоходовИРасходов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПрочихДоходовИРасходов"/>
						<ПередВыгрузкой>Значение = "РеализацияОсновныхСредств";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ВидДеятельностиДляНалоговогоУчетаЗатрат</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДеятельностиДляНалоговогоУчетаЗатрат" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"/>
						<ПередВыгрузкой>Значение = "ОсновнаяСистемаНалогообложения";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ПринятиеКналоговомуУчету</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПринятиеКналоговомуУчету" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Обязательное="true">
						<Код>5</Код>
						<Наименование> --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев</Код>
				<Наименование>: </Наименование>
				<Порядок>2750</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Ставка</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ставка" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыЗастрахованныхЛицОбязательногоСтрахования</Код>
				<Наименование>Перечисление: Виды застрахованных лиц обязательного страхования</Наименование>
				<Порядок>2800</Порядок>
				<Источник>ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования</Источник>
				<Приемник>ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВременноПребывающиеИностранцы --&gt; ВременноПребываю</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВременноПребывающиеИностранцы</Источник>
						<Приемник>ВременноПребывающиеИностранцы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВременноПроживающиеИностранцы --&gt; ВременноПроживаю</Наименование>
						<Порядок>100</Порядок>
						<Источник>ВременноПроживающиеИностранцы</Источник>
						<Приемник>ВременноПроживающиеИностранцы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ГражданеРФ --&gt; ГражданеРФ</Наименование>
						<Порядок>150</Порядок>
						<Источник>ГражданеРФ</Источник>
						<Приемник>ГражданеРФ</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПостоянноПроживающиеИностранцы --&gt; ПостоянноПрожив</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПостоянноПроживающиеИностранцы</Источник>
						<Приемник>ПостоянноПроживающиеИностранцы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ЗарплатныеПроекты</Код>
				<Наименование>Справочник: Расчетные счета</Наименование>
				<Порядок>2850</Порядок>
				<Источник>СправочникСсылка.РасчетныеСчета</Источник>
				<Приемник>СправочникСсылка.ЗарплатныеПроекты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>БанкОрганизации --&gt; Банк</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="БанкОрганизации" Вид="Реквизит" Тип="СправочникСсылка.Банки"/>
						<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторБанковРФ"/>
						<КодПравилаКонвертации>Банки                                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Номер --&gt; РасчетныйСчет</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="РасчетныйСчет" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбАлкогольнойПродукции</Код>
				<Наименование>Справочник: Номенклатура</Наименование>
				<Порядок>2900</Порядок>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбАлкогольнойПродукции</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ВидЛицензии --&gt; ВидЛицензии</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ВидЛицензии" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЛицензийНаПродажуАлкоголя"/>
						<Приемник Имя="ВидЛицензии" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыЛицензийНаПродажуАлкоголя"/>
						<КодПравилаКонвертации>ВидыЛицензийНаПродажуАлкоголя                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ВидПродукции --&gt; ВидПродукции</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ВидПродукции" Вид="Реквизит" Тип="СправочникСсылка.ВидыАлкогольнойПродукции"/>
						<Приемник Имя="ВидПродукции" Вид="Ресурс" Тип="СправочникСсылка.ВидыАлкогольнойПродукции"/>
						<КодПравилаКонвертации>ВидыАлкогольнойПродукции                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>КоэффПересчетаДал --&gt; КоэффПересчетаДал</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="КоэффПересчетаДал" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="КоэффПересчетаДал" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Номенклатура</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номенклатура" Вид="Измерение" Тип="СправочникСсылка.Номенклатура"/>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЛицензииПоставщиковАлкогольнойПродукции</Код>
				<Наименование>Справочник: Лицензии поставщиков алкогольной продукции</Наименование>
				<Порядок>2950</Порядок>
				<Источник>СправочникСсылка.ЛицензииПоставщиковАлкогольнойПродукции</Источник>
				<Приемник>РегистрСведенийЗапись.ЛицензииПоставщиковАлкогольнойПродукции</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ВидЛицензии --&gt; ВидЛицензии</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ВидЛицензии" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЛицензийНаПродажуАлкоголя"/>
						<Приемник Имя="ВидЛицензии" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыЛицензийНаПродажуАлкоголя"/>
						<КодПравилаКонвертации>ВидыЛицензийНаПродажуАлкоголя                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Владелец --&gt; Поставщик</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Поставщик" Вид="Измерение" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ДатаВыдачи --&gt; Период</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ДатаОкончания --&gt; ДатаОкончания</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>КемВыдана --&gt; КемВыдана</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КемВыдана" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КемВыдана" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>СерияНомер --&gt; СерияНомер</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="СерияНомер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="СерияНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводПроцентаДеятельностиЕНВД</Код>
				<Наименование>: </Наименование>
				<Порядок>3100</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПроцентЕНВДДляУчетаЗатратНаЗарплату</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Месяц</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Месяц" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Процент</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Процент" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УстановкаПорядкаЗакрытияПодразделений</Код>
				<Наименование>: </Наименование>
				<Порядок>3150</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.УстановкаПорядкаЗакрытияПодразделений</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; ПорядокЗакрытия</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокЗакрытия" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Подразделение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтранаРегистрации</Код>
				<Наименование>: </Наименование>
				<Порядок>3200</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Приемник>СправочникСсылка.СтраныМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОкругленияПриРасчетеЗарплаты</Код>
				<Наименование>: </Наименование>
				<Порядок>3250</Порядок>
				<Приемник>СправочникСсылка.СпособыОкругленияПриРасчетеЗарплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>РегистрыСведений</Код>
			<Наименование>Регистры сведений</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>КурсыВалют</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; РегистрСведенийЗапись.КурсыВалют</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1 Тогда
	ТаблицаДат = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаДат.НоваяКолонка("ДатаСведений");
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("Курс",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаДат.НоваяСтрока();
		ТаблицаДат.ДатаСведений = Периодический.ДатаЗнач;
	КонецЦикла;
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("Кратность",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаДат.НоваяСтрока();
		ТаблицаДат.ДатаСведений = Периодический.ДатаЗнач;
	КонецЦикла;
	ТаблицаДат.Свернуть("ДатаСведений","");
	ТаблицаДат.ВыбратьСтроки();
	Пока ТаблицаДат.ПолучитьСтроку()=1 Цикл
		ВД = СоздатьОбъект("СписокЗначений");
		ВД.Установить("ДатаСведений",ТаблицаДат.ДатаСведений);
		ВыгрузитьПоПравилу(Источник,,ВД,,"КурсыВалют");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>РегистрСведенийЗапись.КурсыВалют</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Курс</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Курс" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = Источник.Курс.Получить(ДатаСведений);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Кратность</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Кратность" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = Источник.Кратность.Получить(ДатаСведений);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Валюта</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОПредпринимателя</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>400</Порядок>
				<Приемник>РегистрСведенийЗапись.ФИОФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>Предприниматель                                   </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "2";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>400</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ФИОФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛицКонтр</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>450</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>РегистрСведенийЗапись.ФИОФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>СотрудникиКонтрагенты                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбИнвалидностиФизлиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
Иначе
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("Инвалид",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Если (Периодический.ПолучитьЗначение()=0) И (Источник.Инвалид.Получить(Параметры.ДатаВводаОстатков)=0) Тогда
		//Нет ни одной записи
		Отказ = 1;
	КонецЕсли;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1 Тогда
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("Инвалид",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ВД = СоздатьОбъект("СписокЗначений");
		ВД.Установить("ДатаСведений",Периодический.ДатаЗнач);
		ВыгрузитьПоПравилу(Источник,,ВД,,"СведенияОбИнвалидностиФизлиц");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Инвалидность</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = Источник.Инвалид.Получить(ДатаСведений);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ДатаВыдачи</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПаспортныеДанныеФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Наименование>
				<Порядок>550</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ДокументыФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков-1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ВидДокумента --&gt; ВидДокумента</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ВидДокумента" Вид="Реквизит" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<Приемник Имя="ВидДокумента" Вид="Измерение" Тип="СправочникСсылка.ВидыДокументовФизическихЛиц"/>
						<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ДокументСерия --&gt; Серия</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ДокументСерия" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Серия" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Источник.ДокументСерия);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ДокументНомер --&gt; Номер</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ДокументНомер" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Номер" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Источник.ДокументНомер);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ДокументДатаВыдачи --&gt; ДатаВыдачи</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="ДокументДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ДокументКемВыдан --&gt; КемВыдан</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="ДокументКемВыдан" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КемВыдан" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Источник.ДокументКемВыдан);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ""
+ Строка(Источник.ВидДокумента)
+ ?(СокрЛП(Источник.ДокументСерия)&lt;&gt;"", ", серия: "+СокрЛП(Источник.ДокументСерия), "")
+ ?(СокрЛП(Источник.ДокументНомер)&lt;&gt;"", ", № "+СокрЛП(Источник.ДокументНомер), "")
+ ?(ПустоеЗначение(Источник.ДокументДатаВыдачи)=0, ", выдан: "+Формат(Источник.ДокументДатаВыдачи,"ДДДММГГГГ")+" года", "")
+ ?(СокрЛП(Источник.ДокументКемВыдан)&lt;&gt;"", ", "+СокрЛП(Источник.ДокументКемВыдан), "");
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ЯвляетсяДокументомУдостоверяющимЛичность</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЯвляетсяДокументомУдостоверяющимЛичность" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусыЗастрахованныхФизическихЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1 Тогда
	ТаблицаДат = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаДат.НоваяКолонка("Дата");
	
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("НеВзиматьВзносыПФРиФСС",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаДат.НоваяСтрока();
		ТаблицаДат.Дата = Периодический.ДатаЗнач;
	КонецЦикла;
	Периодический.ИспользоватьОбъект("ВидЗастрахованногоЛица", Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаДат.НоваяСтрока();
		ТаблицаДат.Дата = Периодический.ДатаЗнач;
	КонецЦикла;
	
	ТаблицаДат.Свернуть("Дата", "");
	ТаблицаДат.Сортировать("Дата");
	ТаблицаДат.ВыбратьСтроки();
	Пока ТаблицаДат.ПолучитьСтроку()=1 Цикл
		ВД = СоздатьОбъект("СписокЗначений");
		ВД.Установить("ДатаСведений",ТаблицаДат.Дата);
		ВыгрузитьПоПравилу(Источник,,ВД,,"СтатусыЗастрахованныхФизическихЛиц");
	КонецЦикла;

КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусыЗастрахованныхФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ВидЗастрахованногоЛица</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗастрахованногоЛица" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования"/>
						<КодПравилаКонвертации>ВидыЗастрахованныхЛицОбязательногоСтрахования     </КодПравилаКонвертации>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
ВидЗастрахованногоЛица = Источник.ВидЗастрахованногоЛица.Получить(ДатаСведений);
Если ПустоеЗначение(ВидЗастрахованногоЛица)=0 Тогда
	Если ВидЗастрахованногоЛица = Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцы Тогда
		Если Источник.ДолгосрочныйДоговорСИностранцем.Получить(ДатаСведений) = 0 Тогда
			Значение = "ВременноПребывающиеИностранцы";
		Иначе
			Значение = "ВременноПребывающиеИностранцыСДолгосрочнымиДоговорами";
		КонецЕсли;
	Иначе
		Значение = ВидЗастрахованногоЛица.Идентификатор();
	КонецЕсли;
Иначе
	Значение = "ГражданеРФ";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛиц</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Страна" Вид="Реквизит" Тип="СправочникСсылка.ОКСМ"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.СтраныМира"/>
						<КодПравилаКонвертации>ОКСМ                                              </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛ</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>750</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
	КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));
КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1 Тогда
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("Статус",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ВД = СоздатьОбъект("СписокЗначений");
		ВД.Установить("ДатаСведений",Периодический.ДатаЗнач);
		ВыгрузитьПоПравилу(Источник,,ВД,,"СтатусФизЛицКакНалогоплательщиковНДФЛ");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.СтатусФизическихЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ?(Источник.Статус.Получить(ДатаСведений) = 0, "НеРезидент", "Резидент");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоходыПредыдущегоМестаРаботыНДФЛ</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; РегистрСведенийЗапись.НДФЛДоходыПредыдущегоМестаРаботы</Наименование>
				<Порядок>1000</Порядок>
				<ПередВыгрузкой>Если Источник.ВаловойДоход_СНачалаГода = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ДоходыПредыдущегоМестаРаботыНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачМесяца(ДобавитьМесяц(Источник.ДатаПриема, -1));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ВаловойДоход_СНачалаГода --&gt; Размер</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ВаловойДоход_СНачалаГода" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоНДФЛ</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналу</Наименование>
				<Порядок>1250</Порядок>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ОсобенностиИсчисленияНДФЛ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсобенностиИсчисленияНДФЛ" Вид="Ресурс" Тип="ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ"/>
						<КодПравилаКонвертации>ОсобенностиИсчисленияНДФЛ                         </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОсобенностиИсчисленияНДФЛ.Получить(Параметры.ДатаВводаОстатков);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаОрганизаций</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаНалоговыйУчет</Наименование>
				<Порядок>1300</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаУчетнойПолитики"))=1 Тогда
	ВходящиеДанные.Установить("ДатаУчетнойПолитики",НачГода(Параметры.ДатаВводаОстатков-1));
	
	
	ОказаниеУслуг = 0;
	ВыпускПродукции = 0;
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ИспользоватьСубконто();
	БухИт.ВыполнитьЗапрос(НачГода(Параметры.ДатаВводаОстатков-1), Параметры.ДатаВводаОстатков-1, "20",,, 1);
	
	БухИт.ВыбратьСубконто();
	Пока  БухИт.ПолучитьСубконто() = 1 Цикл
		ЗначСубконто = БухИт.Субконто(1);
		Если ПустоеЗначение(ЗначСубконто) = 0 Тогда
			Если (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.ОказаниеУслуг)
				ИЛИ (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.ОказаниеУслугЕНВД) Тогда
				ОказаниеУслуг = 1;
			ИначеЕсли (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.Торговля)
				ИЛИ (ЗначСубконто.ХарактерДеятельности = Перечисление.ХарактерДеятельности.Производство) Тогда		
				ВыпускПродукции = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВходящиеДанные.Установить("ОказаниеУслуг", ОказаниеУслуг);
	ВходящиеДанные.Установить("ВыпускПродукции", ВыпускПродукции);
	ВходящиеДанные.Установить("ВедетсяПроизводственнаяДеятельность", ?((ОказаниеУслуг = 1) ИЛИ (ВыпускПродукции = 1), 1, 0));
КонецЕсли;</ПередВыгрузкой>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачМесяца(ВходящиеДанные.Получить("ДатаУчетнойПолитики"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ОбъектНалогообложенияУСН</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектНалогообложенияУСН" Вид="Ресурс" Тип="ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"/>
						<КодПравилаКонвертации>ОбъектыНалогообложенияПоУСН                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОбъектНалогообложения.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ПлательщикЕНВД</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлательщикЕНВД" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Константа.ОрганизацияЯвляетсяПлательщикомЕНВД;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; РозничнаяТорговляОблагаетсяЕНВД</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РозничнаяТорговляОблагаетсяЕНВД" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Константа.РозницаОблагаетсяЕНВД.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ПоложенияПереходногоПериодаУСН</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоложенияПереходногоПериодаУСН" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ДатаПереходаНаУСН</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПереходаНаУСН" Вид="Ресурс" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.ДатаПереходаНаУСН;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование> --&gt; УведомлениеДата</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УведомлениеДата" Вид="Ресурс" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.УведомлениеДата;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование> --&gt; УведомлениеНомер</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УведомлениеНомер" Вид="Ресурс" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.УведомлениеНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ПорядокПризнанияМатериальныхРасходов</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияМатериальныхРасходов" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияМатериальныхРасходов"/>
						<КодПравилаКонвертации>ПорядокПризнанияМатериальныхРасходов              </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ПорядокПризнанияМатериальныхРасходов.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ПорядокПризнанияРасходовПоТоварам</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияРасходовПоТоварам" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияРасходовПоТоварам"/>
						<КодПравилаКонвертации>ПорядокПризнанияРасходовПоТоварам                 </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ПорядокПризнанияРасходовПоТоварам.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ПорядокПризнанияРасходовПоНДС</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокПризнанияРасходовПоНДС" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС"/>
						<ПередВыгрузкой>Значение = ?(Константа.ВыделятьВходящийНДС.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики")) = 1, "ПоОплатеПоставщику", "ВключатьВСтоимость");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; СпособОценкиМПЗ</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиМПЗ" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценки"/>
						<ПередВыгрузкой>Значение = "ФИФО";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; ДиректКостинг</Наименование>
						<Порядок>1600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДиректКостинг" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; СпособОценкиТоваровВРознице</Наименование>
						<Порядок>1700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОценкиТоваровВРознице" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыОценкиТоваровВРознице"/>
						<ПередВыгрузкой>Значение = "ПоСтоимостиПриобретения";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; СпособУчетаВыпускаГотовойПродукции</Наименование>
						<Порядок>1800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособУчетаВыпускаГотовойПродукции" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыУчетаВыпускаГотовойПродукции"/>
						<ПередВыгрузкой>Значение = "СИспользованиемСчета40";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ПоддержкаПБУ18</Наименование>
						<Порядок>1900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоддержкаПБУ18" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; СпособРасчетаСебестоимостиПроизводства</Наименование>
						<Порядок>2000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаСебестоимостиПроизводства" Вид="Ресурс" Тип="ПеречислениеСсылка.СпособыРасчетаСебестоимостиПродукции"/>
						<ПередВыгрузкой>Значение = "ПоПодразделениям";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; СистемаНалогообложения</Наименование>
						<Порядок>2100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СистемаНалогообложения" Вид="Ресурс" Тип="ПеречислениеСсылка.СистемыНалогообложения"/>
						<ПередВыгрузкой>Значение = "Упрощенная";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; БазаРаспределенияРасходовУСНПоВидамДеятельности</Наименование>
						<Порядок>2150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазаРаспределенияРасходовУСНПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.БазаРаспределенияРасходовУСНПоВидамДеятельности"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Константа.МетодРаспределенияРасходов) = 1 Тогда
	Значение = "ДоходыОтРеализацииБУ";
Иначе
	Значение = Константа.БазаРаспределенияРасходов;
	ИмяПКО = "БазаРаспределенияРасходовУСНПоВидамДеятельнос";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование> --&gt; МетодРаспределенияРасходовУСНПоВидамДеятельности</Наименование>
						<Порядок>2200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МетодРаспределенияРасходовУСНПоВидамДеятельности" Вид="Ресурс" Тип="ПеречислениеСсылка.МетодыРаспределенияРасходовУСНПоВидамДеятельности"/>
						<ПередВыгрузкой>Если ПустоеЗначение(Константа.МетодРаспределенияРасходов) = 1 Тогда
	Значение = "ЗаКвартал";
Иначе
	Значение = Константа.МетодРаспределенияРасходов;
	ИмяПКО = "МетодыРаспределенияРасходовУСНПоВидамДеятельн";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование> --&gt; НачислятьНДСПриПередачеНедвижимости</Наименование>
						<Порядок>2300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислятьНДСПриПередачеНедвижимости" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Если ДатаГод(ВходящиеДанные.Получить("ДатаУчетнойПолитики")) &gt; 2010 Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование> --&gt; ПорядокСписанияРасходовНаСебестоимостьУслуг</Наименование>
						<Порядок>2400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокСписанияРасходовНаСебестоимостьУслуг" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокСписанияРасходовНаСебестоимостьУслуг"/>
						<ПередВыгрузкой>Значение = "БезУчетаВыручки";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование> --&gt; ОказаниеУслуг</Наименование>
						<Порядок>2500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОказаниеУслуг" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование> --&gt; ВыпускПродукции</Наименование>
						<Порядок>2550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВыпускПродукции" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование> --&gt; ПрименяетсяУСН</Наименование>
						<Порядок>2600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименяетсяУСН" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>35</Код>
						<Наименование> --&gt; ПрименяетсяУСНДоходы</Наименование>
						<Порядок>2650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименяетсяУСНДоходы" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Если Константа.ОбъектНалогообложения.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики")) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
	Значение = 0;
Иначе
	Значение = 1;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование> --&gt; ПрименяетсяУСНДоходыМинусРасходы</Наименование>
						<Порядок>2650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименяетсяУСНДоходыМинусРасходы" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Если Константа.ОбъектНалогообложения.Получить(ВходящиеДанные.Получить("ДатаУчетнойПолитики")) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
	Значение = 1;
Иначе
	Значение = 0;
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование> --&gt; ПорядокРегистрацииСчетовФактурНаАванс</Наименование>
						<Порядок>2700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокРегистрацииСчетовФактурНаАванс" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокРегистрацииСчетовФактурНаАванс"/>
						<ПередВыгрузкой>Значение = "НаВсеАвансы";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтветственныеЛицаОрганизаций</Код>
				<Наименование>: </Наименование>
				<Порядок>1350</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ОтветственныеЛицаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = НачГода(Параметры.ДатаКонцаПериодаВыгрузки)-1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Ресурс" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ОтветственноеЛицо</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтветственноеЛицо" Вид="Измерение" Тип="ПеречислениеСсылка.ОтветственныеЛицаОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Ресурс" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СтруктурнаяЕдиница</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтруктурнаяЕдиница" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>БухучетЗарплатыСотрудников</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>1400</Порядок>
				<ПередВыгрузкой>Если Источник.ЭтоГруппа()=1 Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
ИначеЕсли Отказ = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	//Если аналитика по зп не заполнена - то и выгружать ничего не нужно
	
	ЕстьДанные = 0;
	Если (ПустоеЗначение(Источник.СчетЗатрат.Получить(Параметры.ДатаВводаОстатков))=0)
		ИЛИ (ПустоеЗначение(Источник.Субконто1.Получить(Параметры.ДатаВводаОстатков))=0)
		ИЛИ (ПустоеЗначение(Источник.Субконто2.Получить(Параметры.ДатаВводаОстатков))=0)
		ИЛИ (ПустоеЗначение(Источник.Субконто3.Получить(Параметры.ДатаВводаОстатков))=0) Тогда
		ЕстьДанные = 1;
	КонецЕсли;
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("СчетЗатрат", Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Если Периодический.ПолучитьЗначение()=1 Тогда
		ЕстьДанные = 1;
	КонецЕсли;
	Для к=1 по 3 цикл
		Периодический = СоздатьОбъект("Периодический");
		Периодический.ИспользоватьОбъект("Субконто"+к,Источник);
		Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
		Если Периодический.ПолучитьЗначение()=1 Тогда
			ЕстьДанные = 1;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьДанные = 0 Тогда
		Отказ = 1;
	КонецЕсли;

КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1 Тогда
	ТаблицаДат = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаДат.НоваяКолонка("Дата");
	
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("СчетЗатрат",Источник);
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаДат.НоваяСтрока();
		ТаблицаДат.Дата = Периодический.ДатаЗнач;
	КонецЦикла;
	Для к=1 по 3 цикл
		Периодический = СоздатьОбъект("Периодический");
		Периодический.ИспользоватьОбъект("Субконто"+к,Источник);
		Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
		Пока Периодический.ПолучитьЗначение()=1 Цикл
			ТаблицаДат.НоваяСтрока();
			ТаблицаДат.Дата = Периодический.ДатаЗнач;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаДат.Свернуть("Дата", "");
	ТаблицаДат.Сортировать("Дата");
	ТаблицаДат.ВыбратьСтроки();
	Пока ТаблицаДат.ПолучитьСтроку()=1 Цикл
		ВД = СоздатьОбъект("СписокЗначений");
		ВД.Установить("ДатаСведений",ТаблицаДат.Дата);
		ВыгрузитьПоПравилу(Источник,,ВД,,"БухучетЗарплатыСотрудников");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.БухучетЗарплатыСотрудников</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));

СпособОтражения = СоздатьОбъект("СписокЗначений");
СпособОтражения.Установить("Счет", Источник.СчетЗатрат.Получить(ДатаСведений));
СпособОтражения.Установить("Субконто1", Источник.Субконто1.Получить(ДатаСведений));
СпособОтражения.Установить("Субконто2", Источник.Субконто2.Получить(ДатаСведений));
СпособОтражения.Установить("Субконто3", Источник.Субконто3.Получить(ДатаСведений));

Значение = СпособОтражения;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ОтношениеКЕНВД</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтношениеКЕНВД" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату"/>
						<ПередВыгрузкой>Значение = "НеЕНВД";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПорядокОтраженияЗарплатыВБухУчете</Код>
				<Наименование>: </Наименование>
				<Порядок>1450</Порядок>
				<ПослеЗагрузки>//обрабатываем субконто БУ
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","Счет");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","Субконто");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);
Параметры.ПараметрыАлгоритмов.Очистить();
Параметры.ПараметрыАлгоритмов.Вставить("ИмяТабличнойЧасти", "");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСчета","СчетНУ");
Параметры.ПараметрыАлгоритмов.Вставить("ИмяСубконто","СубконтоНУ");
Параметры.ПараметрыАлгоритмов.Вставить("ЗагруженныйОбъект",Объект);
Выполнить(Алгоритмы.ОбработкаСубконтоПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПорядокОтраженияЗарплатыВБухУчете</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; СпособОтраженияЗарплатыВБухУчете</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухУчете" Вид="Измерение" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = ВходящиеДанные;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ЕНВД</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕНВД" Вид="Измерение" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Счет</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Счет" Вид="Ресурс" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Счет");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Субконто1</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Субконто1" Вид="Ресурс"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Субконто1");

Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("Счет"));
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ВходящиеДанные.Получить("Субконто1"));
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 1);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Субконто2</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Субконто2" Вид="Ресурс"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Субконто2");

Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("Счет"));
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ВходящиеДанные.Получить("Субконто2"));
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 2);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Субконто3</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Субконто3" Вид="Ресурс"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Субконто3");

Параметры.ПараметрыАлгоритмов.Установить("Счет", ВходящиеДанные.Получить("Счет"));
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ВходящиеДанные.Получить("Субконто3"));
Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", 3);
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ПриВыгрузкеСубконто();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОтражениеВУСН</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражениеВУСН" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
						<ПередВыгрузкой>Значение = "Принимаются";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрименяемыеТарифыСтраховыхВзносов</Код>
				<Наименование>: </Наименование>
				<Порядок>1500</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
Иначе
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1 Тогда
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("ТарифСтраховыхВзносов");
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ВД = СоздатьОбъект("СписокЗначений");
		ВД.Установить("ДатаСведений",Периодический.ДатаЗнач);
		ВыгрузитьПоПравилу(,,ВД,,"ПрименяемыеТарифыСтраховыхВзносов");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПрименяемыеТарифыСтраховыхВзносов</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
Значение = ДатаСведений;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ВидТарифа</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифа" Вид="Ресурс" Тип="СправочникСсылка.ВидыТарифовСтраховыхВзносов"/>
						<ПередВыгрузкой>ДатаСведений = ?(ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=1,Параметры.ДатаВводаОстатков-1,ВходящиеДанные.Получить("ДатаСведений"));
ТарифСтраховыхВзносов = Константа.ТарифСтраховыхВзносов.Получить(ДатаСведений);
Если ПустоеЗначение(ТарифСтраховыхВзносов) = 1 Тогда
	Значение = "УпрощенныйНалоговыйРежим";
Иначе
	Значение =  ТарифСтраховыхВзносов.Идентификатор()
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТекущиеКадровыеДанныеСотрудников</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>1550</Порядок>
				<ПередВыгрузкой>Если Источник.ЭтоГруппа()=1 Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ТекущиеКадровыеДанныеСотрудников</Приемник>
				<Свойства>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ТекущаяОрганизация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТекущаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ДатаПриема --&gt; ДатаПриема</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаПриема" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ДатаУвольнения --&gt; ДатаУвольнения</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаУвольнения" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ОсновноеРабочееМестоВОрганизации</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновноеРабочееМестоВОрганизации" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Должность --&gt; ТекущаяДолжность</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Должность" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ТекущаяДолжность" Вид="Ресурс" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ТекущееПодразделение</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТекущееПодразделение" Вид="Ресурс" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ТекущийВидЗанятости</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТекущийВидЗанятости" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
						<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТекущаяТарифнаяСтавкаСотрудников</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>1600</Порядок>
				<ПередВыгрузкой>Если Источник.ЭтоГруппа()=1 Тогда
	Отказ = 1;
КонецЕсли;

Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
	Если ПустоеЗначение(ВходящиеДанные.Получить("ДатаСведений"))=0 Тогда
		КлючВыгружаемыхДанных = КлючВыгружаемыхДанных + ЗначениеВСтрокуВнутр(ВходящиеДанные.Получить("ДатаСведений"));		
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>РегистрСведенийЗапись.ТекущаяТарифнаяСтавкаСотрудников</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ТекущаяТарифнаяСтавка</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТекущаяТарифнаяСтавка" Вид="Ресурс" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Оклад.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетСтраховыхВзносовНастройкиОрганизаций</Код>
				<Наименование>: </Наименование>
				<Порядок>1650</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НастройкиУчетаСтраховыхВзносов</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Активность</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ИспользуютсяРаботыСДосрочнойПенсией</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользуютсяРаботыСДосрочнойПенсией" Вид="Ресурс" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Константа.ИспользуютсяРаботыСДосрочнойПенсией;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Операции</Код>
			<Наименование>Операции</Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>ОперацияБух</Код>
				<Наименование> --&gt; ДокументСсылка.ОперацияБух</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если (ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1) Тогда
	Отказ = 1;
	
ИначеЕсли ВходящиеДанные.Получить("Хозрасчетный").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
			
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>Для каждого Корреспонденция из Объект.Движения.Хозрасчетный Цикл
	Для каждого Субконто из Корреспонденция.СубконтоДт Цикл
		Ок = Ложь;
		Для каждого ВидыСубконто из Корреспонденция.СчетДт.ВидыСубконто Цикл
			Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда
				Ок = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если не Ок Тогда
			Корреспонденция.СубконтоДт.Удалить(Субконто.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Субконто из Корреспонденция.СубконтоКт Цикл
		Ок = Ложь;
		Для каждого ВидыСубконто из Корреспонденция.СчетКт.ВидыСубконто Цикл
			Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда
				Ок = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если не Ок Тогда
			Корреспонденция.СубконтоКт.Удалить(Субконто.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Если (Корреспонденция.СчетДт = ПланыСчетов.Хозрасчетный.ПустаяСсылка()) 
		или (НЕ Корреспонденция.СчетДт.НалоговыйУчет) Тогда
		Корреспонденция.СуммаНУДт = 0;
		Корреспонденция.СуммаПРДт = 0;
		Корреспонденция.СуммаВРДт = 0;
	КонецЕсли;
	Если (Корреспонденция.СчетКт = ПланыСчетов.Хозрасчетный.ПустаяСсылка())
		или (НЕ Корреспонденция.СчетКт.НалоговыйУчет) Тогда
		Корреспонденция.СуммаНУКт = 0;
		Корреспонденция.СуммаПРКт = 0;
		Корреспонденция.СуммаВРКт = 0;
	КонецЕсли;
	Если (Корреспонденция.СчетДт = ПланыСчетов.Хозрасчетный.ПустаяСсылка())
		или (НЕ Корреспонденция.СчетДт.Валютный) Тогда
		Корреспонденция.ВалютаДт = Справочники.Валюты.ПустаяСсылка();
		Корреспонденция.ВалютнаяСуммаДт = 0;
	КонецЕсли;
	Если (Корреспонденция.СчетКт = ПланыСчетов.Хозрасчетный.ПустаяСсылка())
		или (НЕ Корреспонденция.СчетКт.Валютный) Тогда
		Корреспонденция.ВалютаКт = Справочники.Валюты.ПустаяСсылка();
		Корреспонденция.ВалютнаяСуммаКт = 0;
	КонецЕсли;
	Если (Корреспонденция.СчетДт = ПланыСчетов.Хозрасчетный.ПустаяСсылка())
		или (НЕ Корреспонденция.СчетДт.Количественный) Тогда
		Корреспонденция.КоличествоДт = 0;
	КонецЕсли;
	Если (Корреспонденция.СчетКт = ПланыСчетов.Хозрасчетный.ПустаяСсылка())
		или (НЕ Корреспонденция.СчетКт.Количественный) Тогда
		Корреспонденция.КоличествоКт = 0;
	КонецЕсли;
КонецЦикла;

Объект.Движения.Хозрасчетный.Записывать = Истина;</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>17</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("Комментарий"))=0 Тогда
	Значение = ВходящиеДанные.Получить("Комментарий");
Иначе
	ПолучитьКомментарийДокумента();
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>18</Код>
						<Наименование> --&gt; Содержание</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("Содержание"))=0 Тогда
	Значение = ВходящиеДанные.Получить("Содержание");
Иначе
	Если ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1 Тогда
		РегистрБух = " (налоговый учет)";
		
	Иначе
		РегистрБух = " (бухгалтерский учет)";
	КонецЕсли;	
	
	Счет = ВходящиеДанные.Получить("Счет");
	Значение = "Итоги по счету " + Счет + РегистрБух;
	
	Счет = ?(ТипЗначения(Счет) = 2, Счет, Счет.Код);
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>19</Код>
						<Наименование> --&gt; Хозрасчетный</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Хозрасчетный" Вид="НаборДвиженийРегистраБухгалтерии"/>
						<ПередОбработкойВыгрузки>Если ПустоеЗначение(ВходящиеДанные.Получить("Хозрасчетный")) = 1 Тогда
	Отказ = 1;
Иначе
	КоллекцияОбъектов = ВходящиеДанные.Получить("Хозрасчетный");
	КоллекцияОбъектов.НоваяКолонка("Содержание", "Строка");
КонецЕсли;

//КоллекцияОбъектов.НоваяКолонка("Активность", "Число");
//Если ПустоеЗначение(ВходящиеДанные.Получить("Активность"))=0 Тогда
//	Если ВходящиеДанные.Получить("Активность")=1 Тогда
//		КоллекцияОбъектов.Заполнить(1,,,"Активность");
//	Иначе
//		КоллекцияОбъектов.Заполнить(0,,,"Активность");
//	КонецЕсли;
//Иначе
//	КоллекцияОбъектов.Заполнить(1,,,"Активность");
//КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Дата");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; СчетДт</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Свойство" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
КодПриемника = ОбъектКоллекции.КодСчетаДт;
ВходящиеДанные.Установить("КодСчета", ОбъектКоллекции.КодСчетаДт);
Если ПустоеЗначение(КодПриемника) = 0 Тогда
	Значение = КодПриемника;
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетДт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; СубконтоДт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СубконтоДт);
ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
Если Отказ &lt;&gt; 1 Тогда
	Счет = ОбъектКоллекции.СчетДт;
	Если (Счет = СчетПоКоду("ГТД")) Тогда
		Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() = 2 Тогда
			ОбъектКоллекции.СубконтоДт.НоваяСтрока();
			ОбъектКоллекции.СубконтоДт.Ключ = ПолучитьПустоеЗначение();
			ОбъектКоллекции.СубконтоДт.Значение = ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение");
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<ПриВыгрузке>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетДт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоДт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоДт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоДт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", ОбъектКоллекции.СубконтоДт.НомерСтроки);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.СубконтоДт.Значение);
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", ОбъектКоллекции.СубконтоДт.Ключ);
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "БУ");
ПриВыгрузкеСубконто();
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "");</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; СчетКт</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Свойство" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) &lt;&gt; "СписокЗначений" Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
КонецЕсли;
КодПриемника = ОбъектКоллекции.КодСчетаКт;
ВходящиеДанные.Установить("КодСчета", ОбъектКоллекции.КодСчетаКт);
Если ПустоеЗначение(КодПриемника) = 0 Тогда
	Значение = КодПриемника;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетКт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СубконтоКт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт" Вид="ВидыСубконтоСчета"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СубконтоКт);
ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
Если Отказ &lt;&gt; 1 Тогда
	Счет = ОбъектКоллекции.СчетКт;
	Если (Счет = СчетПоКоду("ГТД")) Тогда
		Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() = 2 Тогда
			ОбъектКоллекции.СубконтоКт.НоваяСтрока();
			ОбъектКоллекции.СубконтоКт.Ключ = ПолучитьПустоеЗначение();
			ОбъектКоллекции.СубконтоКт.Значение = ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение");
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
							<ПриВыгрузке>Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетКт);
Если ПустоеЗначение(ОбъектКоллекции.СубконтоКт) = 0 Тогда
	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто1", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(1, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 1 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто2", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(2, "Ключ"));
	КонецЕсли;

	Если ОбъектКоллекции.СубконтоКт.КоличествоСтрок() &gt; 2 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Субконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Значение"));
		Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто3", ОбъектКоллекции.СубконтоКт.ПолучитьЗначение(3, "Ключ"));
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("НомерСубконто", ОбъектКоллекции.СубконтоКт.НомерСтроки);
Параметры.ПараметрыАлгоритмов.Установить("Субконто", ОбъектКоллекции.СубконтоКт.Значение);
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", ОбъектКоллекции.СубконтоКт.Ключ);
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "БУ");
ПриВыгрузкеСубконто();
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконто", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидУчета", "");</ПриВыгрузке>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ВалютаДт</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СчетДт);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ВалютаКт</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаКт" Вид="Измерение" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СчетКт);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ВалютнаяСуммаДт</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ВалютнаяСуммаКт</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСуммаКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; КоличествоДт</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; КоличествоКт</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоКт" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; Содержание</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ПолучитьЗначение(ОбъектКоллекции.НомерСтроки,"Содержание");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; Активность</Наименование>
							<Порядок>1450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("Активность")=-1 Тогда
	Значение = 0;
Иначе
	Значение = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>35</Код>
						<Наименование> --&gt; СпособЗаполнения</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособЗаполнения" Вид="Реквизит"/>
						<ПередВыгрузкой>Значение = "Вручную";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование> --&gt; СуммаОперации</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаОперации" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Хозрасчетный = ВходящиеДанные.Получить("Хозрасчетный");
Если ПустоеЗначение(Хозрасчетный) = 0 Тогда
	Значение = Хозрасчетный.Итог("Сумма");
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>38</Код>
						<Наименование> --&gt; ПометкаУдаления</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатков</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.Получить("РазделУчета")) = 1 Тогда
	Отказ = 1;
КонецЕсли;
Если (ВходящиеДанные.Получить("РазделУчета") = "ОсновныеСредства")
	ИЛИ (ВходящиеДанные.Получить("РазделУчета") = "НематериальныеАктивыИНИОКР") Тогда
	Отказ = 1;
КонецЕсли;
Если ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; БухСправка</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БухСправка" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НезавершенноеПроизводство")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСУчредителями")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Капитал")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеСчетаБухгалтерскогоУчета")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ДенежныеСредства") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	Если ВходящиеДанные.Получить("РазделУчета") = "НезавершенноеПроизводство" Тогда
		ОпределитьПризнакОтражениеВУСН();
	КонецЕсли;	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Субконто2</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто2" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Субконто3</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто3" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто3;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
Если ВходящиеДанные.Получить("РазделУчета") = "ДенежныеСредства" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) Тогда
		Значение = ОбъектКоллекции.СуммаКт;
	КонецЕсли;
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСУчредителями" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) 
		И ((ОбъектКоллекции.СчетУчета = СчетПоКоду("75.1")) ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("75.3"))) Тогда
		Значение = -ОбъектКоллекции.СуммаКт;
	КонецЕсли 
КонецЕсли;

Если ОбъектКоллекции.СчетУчета = СчетПоКоду("96") Тогда
	Значение = 0;
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;
Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСУчредителями" Тогда
	Если (ОбъектКоллекции.Сумма = 0)
		И (ОбъектКоллекции.СуммаКт &lt;&gt; 0) 
	    И ((ОбъектКоллекции.СчетУчета = СчетПоКоду("75.1")) ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("75.3"))) Тогда
		Значение = 0;
	КонецЕсли 
КонецЕсли;

Если ОбъектКоллекции.СчетУчета = СчетПоКоду("96") Тогда
	Значение = - ОбъектКоллекции.Сумма;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВалютнаяСумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; НоменклатураНаСкладе</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НоменклатураНаСкладе" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "КапитальныеВложения")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Материалы")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "Товары")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ГотоваяПродукцияИПолуфабрикаты") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе
	
	ЗаполнитьРеквизитыДокументаВНО();
	Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "КапитальныеВложения") Тогда
		СинхронизацияТабличныхЧастей_ТМЦ();
	Иначе
		СинхронизацияТабличныхЧастей_ВНА();
	КонецЕсли;
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; НомерСтрокиТЧ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерСтрокиТЧ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НомерСтроки;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;

Если ПустоеЗначение(Значение) = 0 Тогда	
	Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств")
		ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.3")) Тогда
		ИмяПКО  = "ОбъектыСтроительства_08_3";
	ИначеЕсли (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов")
		ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР") 
		ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.5"))
		ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.8")) Тогда
		ИмяПКО  = "ОбъектыСтроительства_08_5_08_8";
		Если (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР")
			ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.8")) Тогда
			ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
			ИсходящиеДанные.Установить("Счет", СчетПоКоду("08.8"));
		КонецЕсли;
	ИначеЕсли (ОбъектКоллекции.СчетУчета = "ПриобретениеОбъектовОсновныхСредств") 
		ИЛИ  (ОбъектКоллекции.СчетУчета = "ОборудованиеКУстановке")
		ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.4"))
		ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("07")) Тогда
		ИмяПКО  = "ОбъектыСтроительства_08_4";
	Иначе 
		ИмяПКО  = "Номенклатура";		
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; Склад</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Склад;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР")
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.3"))
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.5"))
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.8")) Тогда
	Отказ = 1;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.ДокументОприходования) = 1 Тогда
		Значение = "ФиктивнаяПартия";
		ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
	Иначе
		Значение = ОбъектКоллекции.ДокументОприходования;
		ИмяПКО =  "ДокументРасчетовСКонтрагентом"
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ПриобретениеНематериальныхАктивов") 
	ИЛИ (ОбъектКоллекции.СчетУчета = "ВыполнениеНИОКР") 
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.3"))
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.5"))
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.8")) Тогда	
	Отказ = 1;
Иначе
	Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
		Значение = "ФиктивнаяПартия";
		ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
	Иначе
		Значение = ОбъектКоллекции.РасчетныйДокумент;
		ИмяПКО =  "ДокументРасчетовСКонтрагентом"
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; СпособСтроительства</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособСтроительства" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыСтроительства"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "СтроительствоОбъектовОсновныхСредств")
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("08.3")) Тогда
	Значение = "Хозспособ";
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; СтатусыПартийУСН</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыПартийУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВал;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование> --&gt; МПЗОтгруженные</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗОтгруженные" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ТоварыОтгруженные" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	СинхронизацияТабличныхЧастей_45();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Номенклатура;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; СтатусыПартийУСН</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыПартийУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыПартийУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыПартийУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; Покупатель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Покупатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; ДоговорПокупателя</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПокупателя" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; ДокументОтгрузки</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОтгрузки" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; Поставщик</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Поставщик" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Поставщик;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; ДоговорПоставщика</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорПоставщика" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорПоставщика;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; Партия</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Партия" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ДокументОприходования) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.ДокументОприходования;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Количество;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВал;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование> --&gt; РасходыБудущихПериодов</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасходыБудущихПериодов" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасходыБудущихПериодов" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	СинхронизацияТабличныхЧастей_РБП();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; Субконто1</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Субконто1" Вид="Реквизит"/>
							<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РБП;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; СтатусыОплатыРасходовУСН</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатусыОплатыРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.СтатусыРасходовУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтатусыОплатыРасходовУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВал;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; ВалютныйНДС</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютныйНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДСВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование> --&gt; РасчетыПоНалогамИСборам</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоНалогамИСборам" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыПоНалогамИСборам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	СинхронизацияТабличныхЧастей_Налоги();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; ВидПлатежаВБюджет</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПлатежаВБюджет" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ВидПлатежаВБюджет;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; РасчетыСКонтрагентами</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСКонтрагентами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПоставщикамиИПодрядчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПокупателямиИЗаказчиками")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПрочимиДебиторамиИКредиторами") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
	
	Если (ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами")
		И ((Счет &lt;&gt; СчетПоКоду("76.5")) И (Счет &lt;&gt; СчетПоКоду("76.6")) 
		И (Счет &lt;&gt; СчетПоКоду("76.55")) И (Счет &lt;&gt; СчетПоКоду("76.66"))) Тогда
		ЗаполнитьРеквизитыДокументаВНО();
		СинхронизацияТабличныхЧастей_Взаиморасчеты();
	КонецЕсли;
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>88</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>
Параметры.ПараметрыАлгоритмов.Установить("Счет", ОбъектКоллекции.СчетУчета);
Параметры.ПараметрыАлгоритмов.Установить("Договор", ОбъектКоллекции.ДоговорКонтрагента);
СчетаРасчетов = ПолучитьСчетаРасчетов();

Значение = ОбъектКоллекции.СчетУчета;
Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
		Значение = СчетаРасчетов.Получить("СчетАвансов");
	КонецЕсли;
ИначеЕсли  ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
		Значение = СчетаРасчетов.Получить("СчетАвансов")
	КонецЕсли;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование> --&gt; Аванс</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Аванс" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
		Значение = 1;
	Иначе
		Отказ = 1;
	КонецЕсли;
ИначеЕсли  ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
		Значение = 1;
	Иначе
		Отказ = 1;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;


</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;

Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
ИначеЕсли ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПокупателямиИЗаказчиками" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>92</Код>
							<Наименование> --&gt; Документ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Документ" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.РасчетныйДокумент) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.РасчетныйДокумент;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>//Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Дебиторская" Тогда
		Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
	Иначе
		Отказ = 1;
	КонецЕсли;
//Иначе
//	Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
//КонецЕсли;

	
	</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>94</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>//Если ВходящиеДанные.Получить("РазделУчета") = "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	Если ОбъектКоллекции.ВидЗадолженности = "Кредиторская" Тогда
		Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
	Иначе
		Отказ = 1;
	КонецЕсли;
//Иначе
//	Значение = ОбъектКоллекции.СуммаВзаиморасчетов;
//КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>95</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВзаиморасчетовВал;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>19</Код>
						<Наименование> --&gt; РасчетыСПодотчетнымиЛицами</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСПодотчетнымиЛицами" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПодотчетнымиЛицами" Тогда
	Отказ = 1;	
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	ЗаполнитьРеквизитыДокументаВНО();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>СотрудникиКонтрагенты                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.Субконто2) = 1 Тогда
	Значение = "ФиктивнаяПартия";
	ИмяПКО =  "ДокументРасчетовСКонтрагентомСтр"
Иначе
	Значение = ОбъектКоллекции.Субконто2;
	ИмяПКО =  "ДокументРасчетовСКонтрагентом"
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; СуммаКт</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКт" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаКт;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "РасчетыСПодотчетнымиЛицамиВал")
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("71.11")) Тогда
	Значение = ОбъектКоллекции.Валюта;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование> --&gt; ВалютнаяСумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютнаяСумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если (ОбъектКоллекции.СчетУчета = "РасчетыСПодотчетнымиЛицамиВал")
	ИЛИ (ОбъектКоллекции.СчетУчета = СчетПоКоду("71.11")) Тогда
	Значение = ОбъектКоллекции.ВалютнаяСумма;
Иначе
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; РасчетыПоЗаработнойПлате</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоЗаработнойПлате" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "РасчетыСПерсоналомПоОплатеТрудаИДепонентам" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе	
	Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
	Если Счет = СчетПоКоду("76.4") Тогда
		ЗаполнитьРеквизитыДокументаВНО();
		СинхронизацияТабличныхЧастей_Сотрудники();
	КонецЕсли;
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;

</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>97</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>118</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Работник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование> --&gt; РаботникОрганизации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Работник;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>100</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СуммаВзаиморасчетов;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Дата");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>119</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыплатыЗарплаты"/>
							<ПередВыгрузкой>Значение = "ЧерезКассу";</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>11</Код>
						<Наименование> --&gt; ДанныеПоНДС</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеПоНДС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоПриобретеннымЦенностям")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСПоАвансамПолученным")
	И (ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "НДСНачисленный") Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	ЗаполнитьРеквизитыДокументаВНО();
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");				
КонецЕсли;
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>103</Код>
							<Наименование> --&gt; СчетУчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СчетУчета;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>104</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = "НДС18";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>105</Код>
							<Наименование> --&gt; ВидЦенности</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЦенности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЦенностей"/>
							<ПередВыгрузкой>Значение = "Товары";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>106</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>108</Код>
							<Наименование> --&gt; СчетФактура</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетФактура" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Субконто2;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>109</Код>
							<Наименование> --&gt; СуммаБезНДС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаБезНДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма * 100 / 18;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>14</Код>
						<Наименование> --&gt; МПЗРеализованныеУСН</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МПЗРеализованныеУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Отказ = 1;
ИначеЕсли Параметры.ИмяТаблицы &lt;&gt; "МПЗРеализованныеУСН" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование> --&gt; УслугиУСН</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УслугиУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Отказ = 1;
ИначеЕсли Параметры.ИмяТаблицы &lt;&gt; "УслугиУСН" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>111</Код>
							<Наименование> --&gt; Контрагент</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Контрагент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>112</Код>
							<Наименование> --&gt; ДоговорКонтрагента</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
							<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ДоговорКонтрагента;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>113</Код>
							<Наименование> --&gt; РасчетныйДокумент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетныйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДокументРасчетовСКонтрагентом                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.РасчетныйДокумент;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>114</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОтражениеВУСН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>115</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Валюта;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>116</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Сумма;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>117</Код>
							<Наименование> --&gt; НДС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НДС" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НДС;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>12</Код>
						<Наименование> --&gt; ДопРасходыУСН</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДопРасходыУСН" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Отказ = 1;
ИначеЕсли Параметры.ИмяТаблицы &lt;&gt; "ДопРасходыУСН" Тогда
	Отказ = 1;
ИначеЕсли ВходящиеДанные.Получить("ВходящиеОстатки").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
Иначе		
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");		
КонецЕсли;</ПередОбработкойВыгрузки>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();
Если ВходящиеДанные.Получить("РазделУчета") &lt;&gt; "ПрочиеРасходыНалоговогоУчетаУСНиИП" Тогда
	Значение = Значение + "# Остатки по счету """ + Строка(ВходящиеДанные.Получить("Счет")) + """";
Иначе
	Значение = Значение + "# Остатки прочих расходов";
КонецЕсли;
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ОтражатьПоСпециальнымРегистрам</Наименование>
						<Порядок>950</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗарплатаКВыплатеОрганизаций_ВНО</Код>
				<Наименование> --&gt; ДокументСсылка.ЗарплатаКВыплатеОрганизаций</Наименование>
				<Порядок>850</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	СделатьСсылкуНаДокВводаОстатков = ВходящиеДанные.Получить("СделатьСсылкуНаДокВводаОстатков");
	Если ПустоеЗначение(СделатьСсылкуНаДокВводаОстатков) = 0 Тогда
		КлючВыгружаемыхДанных = ЗначениеВСтрокуВнутр(КлючВыгружаемыхДанных) + СделатьСсылкуНаДокВводаОстатков;
	КонецЕсли;	
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Если Параметры.ДатаКонцаПериодаВыгрузки &gt; Параметры.ДатаВводаОстатков Тогда
	ПериодРегистрации = Параметры.ДатаКонцаПериодаВыгрузки;
	
Иначе
	ПериодРегистрации = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

ПериодРегистрации = НачМесяца(ПериодРегистрации);

Значение = ПериодРегистрации;
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; ВводНачальныхДанных</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВводНачальныхДанных" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; Зарплата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КВыплате</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КВыплате" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ИдентификаторСтроки</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; ФизическиеЛица</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическиеЛица" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование> --&gt; Состав</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Состав" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ИдентификаторСтроки</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="УникальныйИдентификатор"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ПланСчетов</Код>
			<Наименование>План счетов</Наименование>
			<Порядок>250</Порядок>
			<Правило>
				<Код>Хозрасчетный</Код>
				<Наименование>ПланСчетовСсылка.Основной --&gt; ПланСчетовСсылка.Хозрасчетный</Наименование>
				<Порядок>100</Порядок>
				<ПриВыгрузке>Если ПустоеЗначение(Источник)=1 Тогда
	Отказ = 1;
КонецЕсли;

Если ТипЗначенияСтр(ВходящиеДанные) = "СписокЗначений" Тогда
	КодСчета = ВходящиеДанные.Получить("КодСчета");
	Если ПустоеЗначение(КодСчета) = 0 Тогда
		Значение = КодСчета;		
	КонецЕсли;	
КонецЕсли;

УзелАтрибутовСчета = СоздатьУзел("АтрибутыСчета");
Если ТипЗначенияСтр(Источник)="Счет" Тогда
	Счет = Источник;
	ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
	Если ПустоеЗначение(ДобавленныйСчет) = 1 Тогда
        //записываем данные о счете - валютный, количественный, забалансовый
		УстановитьАтрибут(УзелАтрибутовСчета, "УстанавливатьАтрибуты", 1);
		УстановитьАтрибут(УзелАтрибутовСчета, "Валютный", Счет.Валютный);
		УстановитьАтрибут(УзелАтрибутовСчета, "Количественный", Счет.Количественный);
		УстановитьАтрибут(УзелАтрибутовСчета, "Забалансовый", Счет.Забалансовый);
	Иначе
		УстановитьАтрибут(УзелАтрибутовСчета, "УстанавливатьАтрибуты", 0);
	КонецЕсли;
Иначе
	УстановитьАтрибут(УзелАтрибутовСчета, "УстанавливатьАтрибуты", 0);
КонецЕсли;
ДобавитьПодчиненный(Приемник, УзелАтрибутовСчета);</ПриВыгрузке>
				<ПриЗагрузке>Пока ФайлОбмена.Прочитать() Цикл 
	ИмяУзла = ФайлОбмена.ЛокальноеИмя; 
	ТипУзла = ФайлОбмена.ТипУзла; 
	Если ИмяУзла = "АтрибутыСчета" И (ТипУзла = одТипУзлаXML_НачалоЭлемента) Тогда 
		Если Объект.Предопределенный Тогда
			УстанавливатьАтрибуты = Ложь;
		Иначе
			УстанавливатьАтрибуты = одАтрибут(ФайлОбмена, одТипБулево, "УстанавливатьАтрибуты");
		КонецЕсли;
		Если УстанавливатьАтрибуты Тогда
			Объект.Количественный = одАтрибут(ФайлОбмена, одТипБулево, "Количественный");
			Объект.Валютный       = одАтрибут(ФайлОбмена, одТипБулево, "Валютный");
			Объект.Забалансовый   = одАтрибут(ФайлОбмена, одТипБулево, "Забалансовый");
		КонецЕсли;
	ИначеЕсли (ИмяУзла = "АтрибутыСчета") И (ТипУзла = одТипУзлаXML_КонецЭлемента) Тогда 
		Прервать; 
	КонецЕсли; 
КонецЦикла;</ПриЗагрузке>
				<Источник>ПланСчетовСсылка.Основной</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Счет = Источник;
ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
Если ПустоеЗначение(ДобавленныйСчет) = 0 Тогда
	Отказ = 1;
ИначеЕсли ТипЗначенияСтр(Источник)="Счет" Тогда
	Значение = Источник.Код;                   
Иначе
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Счет = Источник;
Если (ТипЗначенияСтр(Счет)="Счет") и (ПустоеЗначение(Счет)=0) Тогда
	ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
	Если ПустоеЗначение(ДобавленныйСчет) = 0 Тогда
		Отказ = 1;
	Иначе
		Значение = Источник.Наименование;
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Счет = Источник;
Если (ТипЗначенияСтр(Счет)="Счет") и (ПустоеЗначение(Счет)=0) Тогда
	ДобавленныйСчет = мТаблицаПравилКонвертацииОбъектов.ПолучитьЗначение(НайтиПравило(Счет, "Хозрасчетный"), "Значения").Получить(Строка(Счет));
	Если ПустоеЗначение(ДобавленныйСчет) = 0 Тогда
		Отказ = 1;
	Иначе
		Значение = Источник.ПометкаУдаления();
	КонецЕсли;
Иначе
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>001 --&gt; 001</Наименование>
						<Порядок>50</Порядок>
						<Источник>001</Источник>
						<Приемник>АрендованныеОсновныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>002.2 --&gt; 002</Наименование>
						<Порядок>100</Порядок>
						<Источник>002</Источник>
						<Приемник>ТМЦпринятыеНаОтветственноеХранение</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>003 --&gt; 003.01</Наименование>
						<Порядок>150</Порядок>
						<Источник>003</Источник>
						<Приемник>МатериалыПринятыеВПереработку</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>004 --&gt; 004.01</Наименование>
						<Порядок>200</Порядок>
						<Источник>004</Источник>
						<Приемник>ТоварыНаСкладе</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>007 --&gt; 007</Наименование>
						<Порядок>250</Порядок>
						<Источник>007</Источник>
						<Приемник>СписаннаяВУбытокЗадолженностьДебиторов</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>008 --&gt; 008</Наименование>
						<Порядок>300</Порядок>
						<Источник>008</Источник>
						<Приемник>ОбеспеченияОбязательствПолученные</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>009 --&gt; 009</Наименование>
						<Порядок>350</Порядок>
						<Источник>009</Источник>
						<Приемник>ОбеспеченияОбязательствВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>01.1 --&gt; 01.01</Наименование>
						<Порядок>400</Порядок>
						<Источник>01.1</Источник>
						<Приемник>ОСвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>01.2 --&gt; 01.09</Наименование>
						<Порядок>450</Порядок>
						<Источник>01.2</Источник>
						<Приемник>ВыбытиеОС</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>010 --&gt; 010</Наименование>
						<Порядок>500</Порядок>
						<Источник>010</Источник>
						<Приемник>ИзносОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>011 --&gt; 011</Наименование>
						<Порядок>550</Порядок>
						<Источник>011</Источник>
						<Приемник>ОсновныеСредстваСданныеВАренду</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>02.1 --&gt; 02.01</Наименование>
						<Порядок>600</Порядок>
						<Источник>02.1</Источник>
						<Приемник>АмортизацияОС_01</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>02.2 --&gt; 02.02</Наименование>
						<Порядок>650</Порядок>
						<Источник>02.2</Источник>
						<Приемник>АмортизацияОС_03</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>03.1 --&gt; 03.01</Наименование>
						<Порядок>700</Порядок>
						<Источник>03.1</Источник>
						<Приемник>МЦвОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>03.2 --&gt; 03.02</Наименование>
						<Порядок>750</Порядок>
						<Источник>03.2</Источник>
						<Приемник>МЦ_ПредоставленныеВоВременноеВладение</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>03.3 --&gt; 03.03</Наименование>
						<Порядок>800</Порядок>
						<Источник>03.3</Источник>
						<Приемник>МЦ_ПредоставленныеВоВременноеПользование</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>03.4 --&gt; 03.04</Наименование>
						<Порядок>850</Порядок>
						<Источник>03.4</Источник>
						<Приемник>ПрочиеДоходныеВложения</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>03.5 --&gt; 03.09</Наименование>
						<Порядок>900</Порядок>
						<Источник>03.5</Источник>
						<Приемник>ВыбытиеМЦ</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>04.1 --&gt; 04.01</Наименование>
						<Порядок>950</Порядок>
						<Источник>04.1</Источник>
						<Приемник>НематериальныеАктивыОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>04.2 --&gt; 04.02</Наименование>
						<Порядок>1000</Порядок>
						<Источник>04.2</Источник>
						<Приемник>РасходыНаНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>05 --&gt; 05</Наименование>
						<Порядок>1050</Порядок>
						<Источник>05</Источник>
						<Приемник>АмортизацияНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>07 --&gt; 07</Наименование>
						<Порядок>1100</Порядок>
						<Источник>07</Источник>
						<Приемник>ОборудованиеКУстановке</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>08.3 --&gt; 08.03</Наименование>
						<Порядок>1150</Порядок>
						<Источник>08.3</Источник>
						<Приемник>СтроительствоОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>08.4 --&gt; 08.04</Наименование>
						<Порядок>1200</Порядок>
						<Источник>08.4</Источник>
						<Приемник>ПриобретениеОбъектовОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>08.5 --&gt; 08.05</Наименование>
						<Порядок>1250</Порядок>
						<Источник>08.5</Источник>
						<Приемник>ПриобретениеНематериальныхАктивов</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>08.8 --&gt; 08.08</Наименование>
						<Порядок>1300</Порядок>
						<Источник>08.8</Источник>
						<Приемник>ВыполнениеНИОКР</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>10.1 --&gt; 10.01</Наименование>
						<Порядок>1350</Порядок>
						<Источник>10.1</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>10.2 --&gt; 10.02</Наименование>
						<Порядок>1400</Порядок>
						<Источник>10.2</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>10.3 --&gt; 10.03</Наименование>
						<Порядок>1450</Порядок>
						<Источник>10.3</Источник>
						<Приемник>СырьеИМатериалы</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>10.4 --&gt; 10.04</Наименование>
						<Порядок>1500</Порядок>
						<Источник>10.11</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>10.5 --&gt; 10.05</Наименование>
						<Порядок>1550</Порядок>
						<Источник>10.12</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>10.6 --&gt; 10.06</Наименование>
						<Порядок>1600</Порядок>
						<Источник>10.13</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>20 --&gt; 20.01</Наименование>
						<Порядок>1650</Порядок>
						<Источник>20</Источник>
						<Приемник>ОсновноеПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>67</Код>
						<Наименование>26 --&gt; 26</Наименование>
						<Порядок>1700</Порядок>
						<Источник>26</Источник>
						<Приемник>ОбщехозяйственныеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>70</Код>
						<Наименование>40 --&gt; 40</Наименование>
						<Порядок>1750</Порядок>
						<Источник>40</Источник>
						<Приемник>ВыпускПродукции</Приемник>
					</Значение>
					<Значение>
						<Код>71</Код>
						<Наименование>41.1 --&gt; 41.01</Наименование>
						<Порядок>1800</Порядок>
						<Источник>41.1</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>72</Код>
						<Наименование>41.2 --&gt; 41.02</Наименование>
						<Порядок>1850</Порядок>
						<Источник>41.2</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>73</Код>
						<Наименование>41.3 --&gt; 41.03</Наименование>
						<Порядок>1900</Порядок>
						<Источник>41.3</Источник>
						<Приемник>ТоварыНаСкладах</Приемник>
					</Значение>
					<Значение>
						<Код>76</Код>
						<Наименование>42 --&gt; 42</Наименование>
						<Порядок>1950</Порядок>
						<Источник>42</Источник>
						<Приемник>ТорговаяНаценкаАТТ</Приемник>
					</Значение>
					<Значение>
						<Код>77</Код>
						<Наименование>43 --&gt; 43</Наименование>
						<Порядок>2000</Порядок>
						<Источник>43</Источник>
						<Приемник>ГотоваяПродукция</Приемник>
					</Значение>
					<Значение>
						<Код>78</Код>
						<Наименование>44.1.1 --&gt; 44.01</Наименование>
						<Порядок>2050</Порядок>
						<Источник>44.1</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>81</Код>
						<Наименование>44.2 --&gt; 44.02</Наименование>
						<Порядок>2100</Порядок>
						<Источник>44.2</Источник>
						<Приемник>ИздержкиОбращения</Приемник>
					</Значение>
					<Значение>
						<Код>82</Код>
						<Наименование>44.3 --&gt; 44.02</Наименование>
						<Порядок>2150</Порядок>
						<Источник>44.3</Источник>
						<Приемник>КоммерческиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>83</Код>
						<Наименование>45 --&gt; 45.01</Наименование>
						<Порядок>2200</Порядок>
						<Источник>45</Источник>
						<Приемник>ПокупныеТоварыОтгруженные</Приемник>
					</Значение>
					<Значение>
						<Код>85</Код>
						<Наименование>50.1 --&gt; 50.01</Наименование>
						<Порядок>2250</Порядок>
						<Источник>50.1</Источник>
						<Приемник>КассаОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>86</Код>
						<Наименование>50.11 --&gt; 50.21</Наименование>
						<Порядок>2300</Порядок>
						<Источник>50.11</Источник>
						<Приемник>КассаОрганизацииВал</Приемник>
					</Значение>
					<Значение>
						<Код>90</Код>
						<Наименование>51 --&gt; 51</Наименование>
						<Порядок>2350</Порядок>
						<Источник>51</Источник>
						<Приемник>РасчетныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>91</Код>
						<Наименование>52 --&gt; 52</Наименование>
						<Порядок>2400</Порядок>
						<Источник>52</Источник>
						<Приемник>ВалютныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>92</Код>
						<Наименование>55.1 --&gt; 55.01</Наименование>
						<Порядок>2450</Порядок>
						<Источник>55.1</Источник>
						<Приемник>Аккредитивы</Приемник>
					</Значение>
					<Значение>
						<Код>93</Код>
						<Наименование>55.11 --&gt; 55.21</Наименование>
						<Порядок>2500</Порядок>
						<Источник>55.11</Источник>
						<Приемник>АккредитивыВал</Приемник>
					</Значение>
					<Значение>
						<Код>94</Код>
						<Наименование>55.2 --&gt; 55.02</Наименование>
						<Порядок>2550</Порядок>
						<Источник>55.2</Источник>
						<Приемник>ЧековыеКнижки</Приемник>
					</Значение>
					<Значение>
						<Код>95</Код>
						<Наименование>55.3 --&gt; 55.03</Наименование>
						<Порядок>2600</Порядок>
						<Источник>55.3</Источник>
						<Приемник>ДепозитныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>96</Код>
						<Наименование>55.33 --&gt; 55.23</Наименование>
						<Порядок>2650</Порядок>
						<Источник>55.33</Источник>
						<Приемник>ДепозитныеСчетаВал</Приемник>
					</Значение>
					<Значение>
						<Код>97</Код>
						<Наименование>55.4 --&gt; 55.04</Наименование>
						<Порядок>2700</Порядок>
						<Источник>55.4</Источник>
						<Приемник>ПрочиеСпециальныеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>98</Код>
						<Наименование>55.44 --&gt; 55.24</Наименование>
						<Порядок>2750</Порядок>
						<Источник>55.44</Источник>
						<Приемник>ПрочиеСпециальныеСчетаВал</Приемник>
					</Значение>
					<Значение>
						<Код>99</Код>
						<Наименование>57.1 --&gt; 57.01</Наименование>
						<Порядок>2800</Порядок>
						<Источник>57.1</Источник>
						<Приемник>ПереводыВПути</Приемник>
					</Значение>
					<Значение>
						<Код>100</Код>
						<Наименование>57.11 --&gt; 57.02</Наименование>
						<Порядок>2850</Порядок>
						<Источник>57.11</Источник>
						<Приемник>ПереводыВПутиВал</Приемник>
					</Значение>
					<Значение>
						<Код>101</Код>
						<Наименование>58.1.1 --&gt; 58.01.1</Наименование>
						<Порядок>2900</Порядок>
						<Источник>58.1.1</Источник>
						<Приемник>Паи</Приемник>
					</Значение>
					<Значение>
						<Код>102</Код>
						<Наименование>58.1.2 --&gt; 58.01.2</Наименование>
						<Порядок>2950</Порядок>
						<Источник>58.1.2</Источник>
						<Приемник>Акции</Приемник>
					</Значение>
					<Значение>
						<Код>103</Код>
						<Наименование>58.2 --&gt; 58.02</Наименование>
						<Порядок>3000</Порядок>
						<Источник>58.2</Источник>
						<Приемник>ДолговыеЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>104</Код>
						<Наименование>58.3 --&gt; 58.03</Наименование>
						<Порядок>3050</Порядок>
						<Источник>58.3</Источник>
						<Приемник>ПредоставленныеЗаймы</Приемник>
					</Значение>
					<Значение>
						<Код>105</Код>
						<Наименование>58.4 --&gt; 58.04</Наименование>
						<Порядок>3100</Порядок>
						<Источник>58.4</Источник>
						<Приемник>ВкладыПоДоговоруПростогоТоварищества</Приемник>
					</Значение>
					<Значение>
						<Код>106</Код>
						<Наименование>58.5 --&gt; 58.05</Наименование>
						<Порядок>3150</Порядок>
						<Источник>58.5</Источник>
						<Приемник>ПриобретенныеПрава</Приемник>
					</Значение>
					<Значение>
						<Код>107</Код>
						<Наименование>59 --&gt; 59</Наименование>
						<Порядок>3200</Порядок>
						<Источник>59</Источник>
						<Приемник>РезервыПодОбесценениеФинансовыхВложений</Приемник>
					</Значение>
					<Значение>
						<Код>108</Код>
						<Наименование>60.1 --&gt; 60.01</Наименование>
						<Порядок>3250</Порядок>
						<Источник>60.1</Источник>
						<Приемник>РасчетыСПоставщиками</Приемник>
					</Значение>
					<Значение>
						<Код>109</Код>
						<Наименование>60.11 --&gt; 60.21</Наименование>
						<Порядок>3300</Порядок>
						<Источник>60.11</Источник>
						<Приемник>РасчетыСПоставщикамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>110</Код>
						<Наименование>60.2 --&gt; 60.02</Наименование>
						<Порядок>3350</Порядок>
						<Источник>60.2</Источник>
						<Приемник>РасчетыСПоставщиками</Приемник>
					</Значение>
					<Значение>
						<Код>111</Код>
						<Наименование>60.22 --&gt; 60.22</Наименование>
						<Порядок>3400</Порядок>
						<Источник>60.22</Источник>
						<Приемник>РасчетыСПоставщикамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>112</Код>
						<Наименование>60.3 --&gt; 60.03</Наименование>
						<Порядок>3450</Порядок>
						<Источник>60.3</Источник>
						<Приемник>ВекселяВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>113</Код>
						<Наименование>60.6 --&gt; 60.31</Наименование>
						<Порядок>3500</Порядок>
						<Источник>60.4</Источник>
						<Приемник>ВекселяВыданные</Приемник>
					</Значение>
					<Значение>
						<Код>115</Код>
						<Наименование>62.1 --&gt; 62.01</Наименование>
						<Порядок>3550</Порядок>
						<Источник>62.1</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>116</Код>
						<Наименование>62.11 --&gt; 62.21</Наименование>
						<Порядок>3600</Порядок>
						<Источник>62.11</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>117</Код>
						<Наименование>62.2 --&gt; 60.02</Наименование>
						<Порядок>3650</Порядок>
						<Источник>62.2</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>119</Код>
						<Наименование>62.3 --&gt; 62.03</Наименование>
						<Порядок>3700</Порядок>
						<Источник>62.3</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>118</Код>
						<Наименование>62.22 --&gt; 60.22</Наименование>
						<Порядок>3750</Порядок>
						<Источник>62.33</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>120</Код>
						<Наименование>62.4 --&gt; 62.01</Наименование>
						<Порядок>3800</Порядок>
						<Источник>62.4</Источник>
						<Приемник>РасчетыСПокупателями</Приемник>
					</Значение>
					<Значение>
						<Код>121</Код>
						<Наименование>62.44 --&gt; 62.21</Наименование>
						<Порядок>3850</Порядок>
						<Источник>62.44</Источник>
						<Приемник>РасчетыСПокупателямиВал</Приемник>
					</Значение>
					<Значение>
						<Код>125</Код>
						<Наименование>63 --&gt; 63</Наименование>
						<Порядок>3900</Порядок>
						<Источник>63</Источник>
						<Приемник>РезервыПоСомнительнымДолгам</Приемник>
					</Значение>
					<Значение>
						<Код>126</Код>
						<Наименование>66.1 --&gt; 66.01</Наименование>
						<Порядок>3950</Порядок>
						<Источник>66.1</Источник>
						<Приемник>КраткосрочныеКредиты</Приемник>
					</Значение>
					<Значение>
						<Код>127</Код>
						<Наименование>66.11 --&gt; 66.21</Наименование>
						<Порядок>4000</Порядок>
						<Источник>66.11</Источник>
						<Приемник>КраткосрочныеКредитыВал</Приемник>
					</Значение>
					<Значение>
						<Код>128</Код>
						<Наименование>66.2 --&gt; 66.02</Наименование>
						<Порядок>4050</Порядок>
						<Источник>66.2</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>129</Код>
						<Наименование>66.22 --&gt; 66.22</Наименование>
						<Порядок>4100</Порядок>
						<Источник>66.22</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>130</Код>
						<Наименование>66.3 --&gt; 66.03</Наименование>
						<Порядок>4150</Порядок>
						<Источник>66.3</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>131</Код>
						<Наименование>66.33 --&gt; 66.23</Наименование>
						<Порядок>4200</Порядок>
						<Источник>66.33</Источник>
						<Приемник>ПроцентыПоКраткосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>136</Код>
						<Наименование>67.1 --&gt; 67.01</Наименование>
						<Порядок>4250</Порядок>
						<Источник>67.1</Источник>
						<Приемник>ДолгосрочныеКредиты</Приемник>
					</Значение>
					<Значение>
						<Код>137</Код>
						<Наименование>67.11 --&gt; 67.21</Наименование>
						<Порядок>4300</Порядок>
						<Источник>67.11</Источник>
						<Приемник>ДолгосрочныеКредитыВал</Приемник>
					</Значение>
					<Значение>
						<Код>138</Код>
						<Наименование>67.2 --&gt; 67.02</Наименование>
						<Порядок>4350</Порядок>
						<Источник>67.2</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>139</Код>
						<Наименование>67.22 --&gt; 67.22</Наименование>
						<Порядок>4400</Порядок>
						<Источник>67.22</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>140</Код>
						<Наименование>67.3 --&gt; 67.03</Наименование>
						<Порядок>4450</Порядок>
						<Источник>67.3</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитам</Приемник>
					</Значение>
					<Значение>
						<Код>141</Код>
						<Наименование>67.33 --&gt; 67.23</Наименование>
						<Порядок>4500</Порядок>
						<Источник>67.33</Источник>
						<Приемник>ПроцентыПоДолгосрочнымКредитамВал</Приемник>
					</Значение>
					<Значение>
						<Код>146</Код>
						<Наименование>68.1 --&gt; 68.01</Наименование>
						<Порядок>4550</Порядок>
						<Источник>68.1</Источник>
						<Приемник>НДФЛ</Приемник>
					</Значение>
					<Значение>
						<Код>148</Код>
						<Наименование>68.2 --&gt; 68.02</Наименование>
						<Порядок>4600</Порядок>
						<Источник>68.2</Источник>
						<Приемник>НДС</Приемник>
					</Значение>
					<Значение>
						<Код>149</Код>
						<Наименование>68.3 --&gt; 68.03</Наименование>
						<Порядок>4650</Порядок>
						<Источник>68.3</Источник>
						<Приемник>Акцизы</Приемник>
					</Значение>
					<Значение>
						<Код>152</Код>
						<Наименование>68.5 --&gt; 68.10</Наименование>
						<Порядок>4700</Порядок>
						<Источник>68.5</Источник>
						<Приемник>ПрочиеНалогиИСборы</Приемник>
					</Значение>
					<Значение>
						<Код>147</Код>
						<Наименование>68.10 --&gt; 68.10</Наименование>
						<Порядок>4750</Порядок>
						<Источник>68.11</Источник>
						<Приемник>ЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>150</Код>
						<Наименование>68.4.1 --&gt; 68.04.1</Наименование>
						<Порядок>4800</Порядок>
						<Источник>68.12</Источник>
						<Приемник>ТранспортныйНалог</Приемник>
					</Значение>
					<Значение>
						<Код>155</Код>
						<Наименование>69.1 --&gt; 69.01</Наименование>
						<Порядок>4850</Порядок>
						<Источник>69.1</Источник>
						<Приемник>ФСС</Приемник>
					</Значение>
					<Значение>
						<Код>156</Код>
						<Наименование>69.11 --&gt; 69.11</Наименование>
						<Порядок>4900</Порядок>
						<Источник>69.11</Источник>
						<Приемник>ФСС_НСиПЗ</Приемник>
					</Значение>
					<Значение>
						<Код>158</Код>
						<Наименование>69.2.2 --&gt; 69.02.1</Наименование>
						<Порядок>4950</Порядок>
						<Источник>69.21</Источник>
						<Приемник>ПФР_страх</Приемник>
					</Значение>
					<Значение>
						<Код>159</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>5000</Порядок>
						<Источник>69.22</Источник>
						<Приемник>ПФР_нак</Приемник>
					</Значение>
					<Значение>
						<Код>250</Код>
						<Наименование>69.23 --&gt; ПФР_доп_ТяжелыеУсловияТруда</Наименование>
						<Порядок>5050</Порядок>
						<Источник>69.23</Источник>
						<Приемник>ПФР_доп_ТяжелыеУсловияТруда</Приемник>
					</Значение>
					<Значение>
						<Код>251</Код>
						<Наименование>69.23 --&gt; ПФР_доп_ТяжелыеУсловияТруда</Наименование>
						<Порядок>5100</Порядок>
						<Источник>69.24</Источник>
						<Приемник>ПФР_доп_ВредныеУсловияТруда</Приемник>
					</Значение>
					<Значение>
						<Код>252</Код>
						<Наименование>69.25 --&gt; ПФР_ОПС</Наименование>
						<Порядок>5150</Порядок>
						<Источник>69.25</Источник>
						<Приемник>ПФР_ОПС</Приемник>
					</Значение>
					<Значение>
						<Код>247</Код>
						<Наименование>69.1 --&gt; 69.01</Наименование>
						<Порядок>5200</Порядок>
						<Источник>69.31</Источник>
						<Приемник>ФСС</Приемник>
					</Значение>
					<Значение>
						<Код>248</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>5250</Порядок>
						<Источник>69.41</Источник>
						<Приемник>ФФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>249</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>5300</Порядок>
						<Источник>69.42</Источник>
						<Приемник>ТФОМС</Приемник>
					</Значение>
					<Значение>
						<Код>245</Код>
						<Наименование>69.2.2 --&gt; 69.02.1</Наименование>
						<Порядок>5350</Порядок>
						<Источник>69.51</Источник>
						<Приемник>ПФР_страх</Приемник>
					</Значение>
					<Значение>
						<Код>246</Код>
						<Наименование>69.2.3 --&gt; 69.02.2</Наименование>
						<Порядок>5400</Порядок>
						<Источник>69.52</Источник>
						<Приемник>ПФР_нак</Приемник>
					</Значение>
					<Значение>
						<Код>162</Код>
						<Наименование>70 --&gt; 70</Наименование>
						<Порядок>5450</Порядок>
						<Источник>70</Источник>
						<Приемник>РасчетыСПерсоналомПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>163</Код>
						<Наименование>71.1 --&gt; 71.01</Наименование>
						<Порядок>5500</Порядок>
						<Источник>71.1</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицами</Приемник>
					</Значение>
					<Значение>
						<Код>234</Код>
						<Наименование>71.2 --&gt; 71.01</Наименование>
						<Порядок>5550</Порядок>
						<Источник>71.2</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицами</Приемник>
					</Значение>
					<Значение>
						<Код>164</Код>
						<Наименование>71.11 --&gt; 71.21</Наименование>
						<Порядок>5600</Порядок>
						<Источник>71.11</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>235</Код>
						<Наименование>71.22 --&gt; 71.21</Наименование>
						<Порядок>5650</Порядок>
						<Источник>71.22</Источник>
						<Приемник>РасчетыСПодотчетнымиЛицамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>165</Код>
						<Наименование>73.1 --&gt; 73.01</Наименование>
						<Порядок>5700</Порядок>
						<Источник>73.1</Источник>
						<Приемник>РасчетыПоПредоставленнымЗаймам</Приемник>
					</Значение>
					<Значение>
						<Код>166</Код>
						<Наименование>73.2 --&gt; 73.02</Наименование>
						<Порядок>5750</Порядок>
						<Источник>73.2</Источник>
						<Приемник>РасчетыПоВозмещениюМатериальногоУщерба</Приемник>
					</Значение>
					<Значение>
						<Код>167</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>5800</Порядок>
						<Источник>73.3</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>228</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>5850</Порядок>
						<Источник>73.4</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>229</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>5900</Порядок>
						<Источник>73.5</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>230</Код>
						<Наименование>73.3 --&gt; 73.03</Наименование>
						<Порядок>5950</Порядок>
						<Источник>73.6</Источник>
						<Приемник>РасчетыПоПрочимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>168</Код>
						<Наименование>75.1 --&gt; 75.01</Наименование>
						<Порядок>6000</Порядок>
						<Источник>75.1</Источник>
						<Приемник>РасчетыПоВкладамВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>169</Код>
						<Наименование>75.2 --&gt; 75.02</Наименование>
						<Порядок>6050</Порядок>
						<Источник>75.2</Источник>
						<Приемник>РасчетыПоВыплатеДоходов</Приемник>
					</Значение>
					<Значение>
						<Код>170</Код>
						<Наименование>75.3 --&gt; 75.01</Наименование>
						<Порядок>6100</Порядок>
						<Источник>75.3</Источник>
						<Приемник>РасчетыПоВкладамВУставныйКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>171</Код>
						<Наименование>76.1.1 --&gt; 76.01</Наименование>
						<Порядок>6150</Порядок>
						<Источник>76.1</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>175</Код>
						<Наименование>76.11 --&gt; 76.21</Наименование>
						<Порядок>6200</Порядок>
						<Источник>76.11</Источник>
						<Приемник>РасчетыПоИмущественномуИЛичномуСтрахованиюВал</Приемник>
					</Значение>
					<Значение>
						<Код>176</Код>
						<Наименование>76.2 --&gt; 76.02</Наименование>
						<Порядок>6250</Порядок>
						<Источник>76.2</Источник>
						<Приемник>РасчетыПоПретензиям</Приемник>
					</Значение>
					<Значение>
						<Код>177</Код>
						<Наименование>76.22 --&gt; 76.22</Наименование>
						<Порядок>6300</Порядок>
						<Источник>76.22</Источник>
						<Приемник>РасчетыПоПретензиямВал</Приемник>
					</Значение>
					<Значение>
						<Код>178</Код>
						<Наименование>76.3 --&gt; 76.03</Наименование>
						<Порядок>6350</Порядок>
						<Источник>76.3</Источник>
						<Приемник>РасчетыПоПричитающимсяДивидендам</Приемник>
					</Значение>
					<Значение>
						<Код>179</Код>
						<Наименование>76.4 --&gt; 76.04</Наименование>
						<Порядок>6400</Порядок>
						<Источник>76.4</Источник>
						<Приемник>РасчетыПоДепонированнымСуммам</Приемник>
					</Значение>
					<Значение>
						<Код>180</Код>
						<Наименование>76.5 --&gt; 76.05</Наименование>
						<Порядок>6450</Порядок>
						<Источник>76.5</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>181</Код>
						<Наименование>76.55 --&gt; 76.25</Наименование>
						<Порядок>6500</Порядок>
						<Источник>76.55</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>182</Код>
						<Наименование>76.6 --&gt; 76.06</Наименование>
						<Порядок>6550</Порядок>
						<Источник>76.6</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>183</Код>
						<Наименование>76.АВ --&gt; 76.АВ</Наименование>
						<Порядок>6600</Порядок>
						<Источник>76.66</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал</Приемник>
					</Значение>
					<Значение>
						<Код>184</Код>
						<Наименование>76.ЗП --&gt; 76.09</Наименование>
						<Порядок>6650</Порядок>
						<Источник>76.ЗП</Источник>
						<Приемник>ПрочиеРасчетыСРазнымиДебиторамиИКредиторами</Приемник>
					</Значение>
					<Значение>
						<Код>189</Код>
						<Наименование>79.1 --&gt; 79.01</Наименование>
						<Порядок>6700</Порядок>
						<Источник>79.1</Источник>
						<Приемник>РасчетыПоВыделенномуИмуществу</Приемник>
					</Значение>
					<Значение>
						<Код>190</Код>
						<Наименование>79.2 --&gt; 79.02</Наименование>
						<Порядок>6750</Порядок>
						<Источник>79.2</Источник>
						<Приемник>РасчетыПоТекущимОперациям</Приемник>
					</Значение>
					<Значение>
						<Код>191</Код>
						<Наименование>79.3 --&gt; 79.03</Наименование>
						<Порядок>6800</Порядок>
						<Источник>79.3</Источник>
						<Приемник>РасчетыПоДоговоруДоверительногоУправленияИмуществом</Приемник>
					</Значение>
					<Значение>
						<Код>192</Код>
						<Наименование>80 --&gt; 80.01</Наименование>
						<Порядок>6850</Порядок>
						<Источник>80</Источник>
						<Приемник>УставныйКапитал_ОбыкновенныеАкции</Приемник>
					</Значение>
					<Значение>
						<Код>193</Код>
						<Наименование>81 --&gt; 81.01</Наименование>
						<Порядок>6900</Порядок>
						<Источник>81</Источник>
						<Приемник>СобственныеАкции_ОбыкновенныеАкции</Приемник>
					</Значение>
					<Значение>
						<Код>194</Код>
						<Наименование>82.1 --&gt; 82.01</Наименование>
						<Порядок>6950</Порядок>
						<Источник>82.1</Источник>
						<Приемник>РезервыОбразованныеВСоответствииСЗаконодательством</Приемник>
					</Значение>
					<Значение>
						<Код>195</Код>
						<Наименование>82.2 --&gt; 82.02</Наименование>
						<Порядок>7000</Порядок>
						<Источник>82.2</Источник>
						<Приемник>РезервыОбразованныеВСоответствииСУчредительнымиДокументами</Приемник>
					</Значение>
					<Значение>
						<Код>196</Код>
						<Наименование>83.1 --&gt; 83.01</Наименование>
						<Порядок>7050</Порядок>
						<Источник>83.1</Источник>
						<Приемник>ПриростСтоимостиИмуществаПоПереоценке</Приемник>
					</Значение>
					<Значение>
						<Код>197</Код>
						<Наименование>83.2 --&gt; 83.02</Наименование>
						<Порядок>7100</Порядок>
						<Источник>83.2</Источник>
						<Приемник>ЭмиссионныйДоходОтВыпускаОбыкновенныхАкций</Приемник>
					</Значение>
					<Значение>
						<Код>198</Код>
						<Наименование>83.3 --&gt; 83.09</Наименование>
						<Порядок>7150</Порядок>
						<Источник>83.3</Источник>
						<Приемник>ДругиеИсточники</Приемник>
					</Значение>
					<Значение>
						<Код>199</Код>
						<Наименование>84.1 --&gt; 84.01</Наименование>
						<Порядок>7200</Порядок>
						<Источник>84.1</Источник>
						<Приемник>ПрибыльПодлежащаяРаспределению</Приемник>
					</Значение>
					<Значение>
						<Код>200</Код>
						<Наименование>84.2 --&gt; 84.02</Наименование>
						<Порядок>7250</Порядок>
						<Источник>84.2</Источник>
						<Приемник>УбытокПодлежащийПокрытию</Приемник>
					</Значение>
					<Значение>
						<Код>201</Код>
						<Наименование>84.3 --&gt; 84.03</Наименование>
						<Порядок>7300</Порядок>
						<Источник>84.3</Источник>
						<Приемник>НераспределеннаяПрибыльВОбращении</Приемник>
					</Значение>
					<Значение>
						<Код>202</Код>
						<Наименование>84.4 --&gt; 84.04</Наименование>
						<Порядок>7350</Порядок>
						<Источник>84.4</Источник>
						<Приемник>НераспределеннаяПрибыльИспользованная</Приемник>
					</Значение>
					<Значение>
						<Код>203</Код>
						<Наименование>86 --&gt; 86.01</Наименование>
						<Порядок>7400</Порядок>
						<Источник>86</Источник>
						<Приемник>ЦелевоеФинансированиеИзБюджета</Приемник>
					</Значение>
					<Значение>
						<Код>204</Код>
						<Наименование>90.1.1 --&gt; 90.01.1</Наименование>
						<Порядок>7450</Порядок>
						<Источник>90.1</Источник>
						<Приемник>ВыручкаНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>205</Код>
						<Наименование>90.1.2 --&gt; 90.01.2</Наименование>
						<Порядок>7500</Порядок>
						<Источник>90.2</Источник>
						<Приемник>ВыручкаЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>206</Код>
						<Наименование>90.2.1 --&gt; 90.02.1</Наименование>
						<Порядок>7550</Порядок>
						<Источник>90.4</Источник>
						<Приемник>СебестоимостьПродажНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>208</Код>
						<Наименование>90.3 --&gt; 90.03</Наименование>
						<Порядок>7600</Порядок>
						<Источник>90.3</Источник>
						<Приемник>СебестоимостьПродажЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>210</Код>
						<Наименование>90.5 --&gt; 90.05</Наименование>
						<Порядок>7650</Порядок>
						<Источник>90.5</Источник>
						<Приемник>Продажи_ЭкспортныеПошлины</Приемник>
					</Значение>
					<Значение>
						<Код>211</Код>
						<Наименование>90.7.1 --&gt; 90.07.1</Наименование>
						<Порядок>7700</Порядок>
						<Источник>90.7</Источник>
						<Приемник>Продажи_РасходыНаПродажуНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>213</Код>
						<Наименование>90.8.1 --&gt; 90.08.1</Наименование>
						<Порядок>7750</Порядок>
						<Источник>90.8</Источник>
						<Приемник>Продажи_УправленческиеРасходыНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>215</Код>
						<Наименование>90.9 --&gt; 90.09</Наименование>
						<Порядок>7800</Порядок>
						<Источник>90.9</Источник>
						<Приемник>ПрибыльУбытокОтПродаж</Приемник>
					</Значение>
					<Значение>
						<Код>216</Код>
						<Наименование>91.1 --&gt; 91.01</Наименование>
						<Порядок>7850</Порядок>
						<Источник>91.1</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>217</Код>
						<Наименование>91.2 --&gt; 91.02</Наименование>
						<Порядок>7900</Порядок>
						<Источник>91.2</Источник>
						<Приемник>ПрочиеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>237</Код>
						<Наименование>91.3 --&gt; 91.02</Наименование>
						<Порядок>7950</Порядок>
						<Источник>91.3</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>238</Код>
						<Наименование>91.4 --&gt; 91.02</Наименование>
						<Порядок>8000</Порядок>
						<Источник>91.4</Источник>
						<Приемник>ПрочиеРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>218</Код>
						<Наименование>91.9 --&gt; 91.09</Наименование>
						<Порядок>8050</Порядок>
						<Источник>91.9</Источник>
						<Приемник>СальдоПрочихДоходовИРасходов</Приемник>
					</Значение>
					<Значение>
						<Код>219</Код>
						<Наименование>94 --&gt; 94</Наименование>
						<Порядок>8100</Порядок>
						<Источник>94</Источник>
						<Приемник>НедостачиИПотериОтПорчиЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>220</Код>
						<Наименование>96 --&gt; 96</Наименование>
						<Порядок>8150</Порядок>
						<Источник>96</Источник>
						<Приемник>РезервыПредстоящихРасходов</Приемник>
					</Значение>
					<Значение>
						<Код>221</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>8200</Порядок>
						<Источник>97.1</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>231</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>8250</Порядок>
						<Источник>97.2</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>232</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>8300</Порядок>
						<Источник>97.3</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>233</Код>
						<Наименование>97 --&gt; 97.21</Наименование>
						<Порядок>8350</Порядок>
						<Источник>97.4</Источник>
						<Приемник>ПрочиеРасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>222</Код>
						<Наименование>98.1 --&gt; 98.01</Наименование>
						<Порядок>8400</Порядок>
						<Источник>98.1</Источник>
						<Приемник>ДоходыПолученныеВСчетБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>223</Код>
						<Наименование>98.2.1 --&gt; 98.02</Наименование>
						<Порядок>8450</Порядок>
						<Источник>98.2</Источник>
						<Приемник>БезвозмездныеПоступления</Приемник>
					</Значение>
					<Значение>
						<Код>225</Код>
						<Наименование>98.3 --&gt; 98.03</Наименование>
						<Порядок>8500</Порядок>
						<Источник>98.3</Источник>
						<Приемник>ПредстоящиеПоступленияПоНедостачамВыявленнымЗаПрошлыеГоды</Приемник>
					</Значение>
					<Значение>
						<Код>226</Код>
						<Наименование>98.4 --&gt; 98.04</Наименование>
						<Порядок>8550</Порядок>
						<Источник>98.4</Источник>
						<Приемник>РазницаМеждуСуммойПодлежащейВзысканиюСВиновныхЛицИБалансовойСтоимостьюПоНедостачамЦенностей</Приемник>
					</Значение>
					<Значение>
						<Код>227</Код>
						<Наименование>99.1 --&gt; 99.01.1</Наименование>
						<Порядок>8600</Порядок>
						<Источник>99</Источник>
						<Приемник>ПрибылиИУбыткиНеЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>00 --&gt; 000</Наименование>
						<Порядок>8650</Порядок>
						<Источник>00</Источник>
						<Приемник>Вспомогательный</Приемник>
					</Значение>
					<Значение>
						<Код>241</Код>
						<Наименование>19.1 --&gt; 19.04</Наименование>
						<Порядок>8700</Порядок>
						<Источник>19.1</Источник>
						<Приемник>НДСпоПриобретеннымМПЗ</Приемник>
					</Значение>
					<Значение>
						<Код>242</Код>
						<Наименование>19.2 --&gt; 19.04</Наименование>
						<Порядок>8750</Порядок>
						<Источник>19.2</Источник>
						<Приемник>НДСпоПриобретеннымМПЗ</Приемник>
					</Значение>
					<Значение>
						<Код>239</Код>
						<Наименование>РВ --&gt; РВ.1</Наименование>
						<Порядок>8800</Порядок>
						<Источник>РВ</Источник>
						<Приемник>НераспределеннаяРозничнаяВыручка</Приемник>
					</Значение>
					<Значение>
						<Код>240</Код>
						<Наименование>ГТД --&gt; ГТД</Наименование>
						<Порядок>8850</Порядок>
						<Источник>ГТД</Источник>
						<Приемник>ГТД</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыСубконтоХозрасчетные</Код>
				<Наименование>ВидСубконто --&gt; ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) &lt;&gt; "Строка" Тогда
	Источник = Источник.Идентификатор();
КонецЕсли;</ПередВыгрузкой>
				<ПриВыгрузке>Если ТипЗначения(УзелСсылки) = 1 Тогда
	НПП = УзелСсылки;
	УзелСсылки = СоздатьУзел("Ссылка");
	УстановитьАтрибут(УзелСсылки, "Нпп", Строка(НПП));
	УзелСвойства = СоздатьУзел("Свойство");
	УстановитьАтрибут(УзелСвойства, "Имя", "{ИмяПредопределенногоЭлемента}");
	УстановитьАтрибут(УзелСвойства, "Тип", "Строка");
	ЗаписатьЭлемент(УзелСвойства, "Значение", Источник);
	ДобавитьПодчиненный(УзелСсылки, УзелСвойства);
	ДобавитьПодчиненный(Приемник, УзелСсылки);
	СтандартнаяОбработка = 0;
КонецЕсли;</ПриВыгрузке>
				<Источник>ВидСубконто</Источник>
				<Приемник>ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные</Приемник>
				<Свойства>
					<Свойство Отключить="true" Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) &lt;&gt; "Строка" Тогда
	Источник = Источник.Идентификатор();
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>БанковскиеСчета --&gt; 00008</Наименование>
						<Порядок>100</Порядок>
						<Источник>БанковскиеСчета</Источник>
						<Приемник>БанковскиеСчета</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Бюджеты --&gt; 00025</Наименование>
						<Порядок>200</Порядок>
						<Источник>Бюджеты</Источник>
						<Приемник>УровниБюджетов</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ВидыНоменклатуры --&gt; 00012</Наименование>
						<Порядок>500</Порядок>
						<Источник>ВидыДеятельности</Источник>
						<Приемник>НоменклатурныеГруппы</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ВидыПлатежейВБюджет --&gt; 00022</Наименование>
						<Порядок>600</Порядок>
						<Источник>ВидыПлатежей</Источник>
						<Приемник>ВидыПлатежейВГосБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ВнереализационныеДоходы --&gt; 00013</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПрочиеДоходыИРасходы</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ДвиженияДенежныхСредств --&gt; 00021</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДвиженияДенежныхСредств</Источник>
						<Приемник>СтатьиДвиженияДенежныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>Договоры --&gt; 00016</Наименование>
						<Порядок>1100</Порядок>
						<Источник>Договоры</Источник>
						<Приемник>Договоры</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ДоговорыС_Комиссионерами --&gt; 00038</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ДоговорыПоставки</Источник>
						<Приемник>Партии</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ДоходыБудущихПериодов --&gt; 00018</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ДоходыБудущихПериодов</Источник>
						<Приемник>ДоходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>Контрагенты --&gt; 00005</Наименование>
						<Порядок>1500</Порядок>
						<Источник>Контрагенты</Источник>
						<Приемник>Контрагенты</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>МестаХранения --&gt; 00027</Наименование>
						<Порядок>1700</Порядок>
						<Источник>МестаХранения</Источник>
						<Приемник>Склады</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>НематериальныеАктивы --&gt; 00006</Наименование>
						<Порядок>1800</Порядок>
						<Источник>НематериальныеАктивы</Источник>
						<Приемник>НематериальныеАктивы</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>Номенклатура --&gt; 00001</Наименование>
						<Порядок>1900</Порядок>
						<Источник>Номенклатура</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>Оборудование --&gt; 00001</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ОбъектыВнеоборотныхАктивов</Источник>
						<Приемник>Номенклатура</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ОсновныеСредства --&gt; 00004</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ОсновныеСредства</Источник>
						<Приемник>ОсновныеСредства</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ПрибылиИУбытки --&gt; 00014</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ПрибылиИУбытки</Источник>
						<Приемник>ПрибылиИУбытки</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>РасходыБудущихПериодов --&gt; 00017</Наименование>
						<Порядок>2600</Порядок>
						<Источник>РасходыБудущихПериодов</Источник>
						<Приемник>РасходыБудущихПериодов</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>РезервыПредстоящихРасходов --&gt; 00033</Наименование>
						<Порядок>2700</Порядок>
						<Источник>РезервыПредстоящихРасходов</Источник>
						<Приемник>Резервы</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>Сотрудники --&gt; 00003</Наименование>
						<Порядок>2800</Порядок>
						<Источник>Сотрудники</Источник>
						<Приемник>РаботникиОрганизаций</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>СтатьиЗатратНаПроизводство --&gt; 00007</Наименование>
						<Порядок>3000</Порядок>
						<Источник>СтатьиЗатрат</Источник>
						<Приемник>СтатьиЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ЦенныеБумаги --&gt; 00019</Наименование>
						<Порядок>3500</Порядок>
						<Источник>ЦенныеБумаги</Источник>
						<Приемник>ЦенныеБумаги</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВидыНачислений --&gt; 00031</Наименование>
						<Порядок>3600</Порядок>
						<Источник>ВидыНачислений</Источник>
						<Приемник>ВидНачисленийОплатыТрудаПоСтатье255НК</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ПрочиеОбъектыУчета --&gt; 00013</Наименование>
						<Порядок>3700</Порядок>
						<Источник>ПрочиеОбъектыУчета</Источник>
						<Приемник>ПрочиеДоходыИРасходы</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ГТД --&gt; 00050</Наименование>
						<Порядок>3800</Порядок>
						<Источник>ГТД</Источник>
						<Приемник>НомераГТД</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>НазначениеЦелевыхСредств --&gt; НазначениеЦелевыхСред</Наименование>
						<Порядок>3850</Порядок>
						<Источник>НазначениеЦелевыхСредств</Источник>
						<Приемник>НазначениеЦелевыхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ИсточникиПоступления --&gt; ДвиженияЦелевыхСредств</Наименование>
						<Порядок>3900</Порядок>
						<Источник>ИсточникиПоступления</Источник>
						<Приемник>ДвиженияЦелевыхСредств</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>Организация</Код>
			<Наименование>Организация</Наименование>
			<Порядок>300</Порядок>
			<Правило>
				<Код>Организации</Код>
				<Наименование> --&gt; СправочникСсылка.Организации</Наименование>
				<Порядок>100</Порядок>
				<ПослеВыгрузки>СправочникНалоги = СоздатьОбъект("Справочник.НалогиИОтчисления");
Если СправочникНалоги.НайтиПоКоду("ФСС_НС")=1 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.ДобавитьЗначение(СправочникНалоги.Ставка.Получить(Параметры.ДатаВводаОстатков-1),"Ставка");
	ВходящиеДанные.ДобавитьЗначение(Параметры.ДатаВводаОстатков-1,"Период");	
	ВыгрузитьПоПравилу(Источник,,ВходящиеДанные,,"СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев");
  	
	Периодический = СоздатьОбъект("Периодический");
	Периодический.ИспользоватьОбъект("Ставка",СправочникНалоги.ТекущийЭлемент());
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки);
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.ДобавитьЗначение(Периодический.Значение,"Ставка");
		ВходящиеДанные.ДобавитьЗначение(Периодический.ДатаЗнач,"Период");	
		ВыгрузитьПоПравилу(Источник,,ВходящиеДанные,,"СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев");
	КонецЦикла;
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

Руководитель	= Константа.Руководитель.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ГлБухгалтер		= Константа.ГлБухгалтер.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
Кассир			= Константа.Кассир.Получить(Параметры.ДатаКонцаПериодаВыгрузки);

Если ПустоеЗначение(Руководитель) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", Руководитель.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "Руководитель");
	ВходящиеДанные.Установить("ФизическоеЛицо", Руководитель);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

Если ПустоеЗначение(ГлБухгалтер) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", ГлБухгалтер.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "ГлавныйБухгалтер");
	ВходящиеДанные.Установить("ФизическоеЛицо", ГлБухгалтер);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

Если ПустоеЗначение(Кассир) = 0 Тогда
	ВходящиеДанные.УдалитьВсе();
	ВходящиеДанные.Установить("Должность", Кассир.Должность);
	ВходящиеДанные.Установить("ОтветственноеЛицо", "Кассир");
	ВходящиеДанные.Установить("ФизическоеЛицо", Кассир);
	ВыгрузитьПоПравилу(Источник,, ВходящиеДанные,, "ОтветственныеЛицаОрганизаций");
КонецЕсли;

ВыгрузитьПоПравилу(,,,, "УчетСтраховыхВзносовНастройкиОрганизаций");</ПослеВыгрузки>
				<ПослеЗагрузки>Если Не ОбъектНайден Тогда
	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();
КонецЕсли;

Если Объект.РайонныйКоэффициент &lt; 1 
	ИЛИ Объект.РайонныйКоэффициент &gt; 3 Тогда
	Объект.РайонныйКоэффициент = 1;
КонецЕсли;

Объект.ГоловнаяОрганизация = Объект.Ссылка;

Параметры.Вставить("Организация", Объект.Ссылка);

МенеджерЗаписиРегистра = РегистрыСведений.ДатыВводаНачальныхОстатков.СоздатьМенеджерЗаписи();
МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
МенеджерЗаписиРегистра.Прочитать();
Если НЕ МенеджерЗаписиРегистра.Выбран() Тогда
	МенеджерЗаписиРегистра.Организация = Объект.Ссылка;
КонецЕсли;
МенеджерЗаписиРегистра.ДатаВводаНачальныхОстатков = ДатаНачала - 24*60*60;
МенеджерЗаписиРегистра.Записать();

УчетЗарплаты.СоздатьПараметрыУчетаЗарплаты(Объект.Ссылка);</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; НаименованиеПлательщикаПриПеречисленииВБюджет</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПлательщикаПриПеречисленииВБюджет" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеПлательщикаПриПеречисленииНалогов;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ИНН</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ИНН=СокрЛП(Константа.ИННОрганизации);
ОдинадцатыйСимвол=Сред(ИНН,11,1);
Если (Строка(Число(ОдинадцатыйСимвол))=ОдинадцатыйСимвол) и (ПустаяСтрока(ОдинадцатыйСимвол) = 0) Тогда // оказалось физическое лицо
	Значение=Лев(ИНН,12);
Иначе // оказалась организация	
	Значение = Лев(ИНН,10);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; КПП</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ИНН=СокрЛП(Константа.ИННОрганизации);
ОдинадцатыйСимвол=Сред(ИНН,11,1);
Если (Строка(Число(ОдинадцатыйСимвол))=ОдинадцатыйСимвол) и (ПустаяСтрока(ОдинадцатыйСимвол) = 0) Тогда // оказалось физическое лицо
	Значение="";
Иначе // оказалась организация	
	Значение = Прав(ИНН,9);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; РегистрационныйНомерПФР</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РегистрационныйНомерПФР" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = глПолучитьНалог("ПФР_страх").РегНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ПолноеНаименованиеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КодПоОКПО</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодОКПО;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; КодНалоговогоОргана</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодНалоговогоОргана" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ТерриториальныеУсловияПФР</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТерриториальныеУсловияПФР" Вид="Реквизит" Тип="СправочникСсылка.УдалитьТерриториальныеУсловияПФР"/>
						<КодПравилаКонвертации>ТерриториальныеУсловия                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ТерриториальныеУсловия;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ОсновнойБанковскийСчет</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойБанковскийСчет" Вид="Реквизит" Тип="СправочникСсылка.БанковскиеСчета"/>
						<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Константа.ОсновнойБанковскийСчет;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ВидСтавокЕСНиПФР</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтавокЕСНиПФР" Вид="Реквизит" Тип="ПеречислениеСсылка.УдалитьВидыСтавокЕСНиПФР"/>
						<ПередВыгрузкой>Значение = "ДляНеСельскохозяйственныхПроизводителей"</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; ОГРН</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОГРН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ОГРН;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ЮридическоеФизическоеЛицо</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮридическоеФизическоеЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
						<ПередВыгрузкой>ИНН=СокрЛП(Константа.ИННОрганизации);
Если ПустоеЗначение(ИНН) = 1 Тогда
	Значение = "ЮридическоеЛицо";
Иначе
	ОдинадцатыйСимвол=Сред(ИНН,11,1);
	Если (Строка(Число(ОдинадцатыйСимвол))=ОдинадцатыйСимвол) и (ПустаяСтрока(ОдинадцатыйСимвол) = 0) Тогда // оказалось физическое лицо
		Значение = "ФизическоеЛицо";
	Иначе // оказалась организация	
		Значение = "ЮридическоеЛицо";
	КонецЕсли;
КонецЕсли;

</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ВариантНаименованияДляПечатныхФорм</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантНаименованияДляПечатныхФорм" Вид="Реквизит" Тип="ПеречислениеСсылка.ВариантыНаименованияДляПечатныхФорм"/>
						<ПередВыгрузкой>Значение = "СокращенноеНаименование";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; НаименованиеСокращенное</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеСокращенное" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; ВидОбменаСКонтролирующимиОрганами</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбменаСКонтролирующимиОрганами" Вид="Реквизит"/>
						<ПередВыгрузкой>Значение = "ОбменОтключен";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование> --&gt; Префикс</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Префикс" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Параметры.ПрефиксОрганизации);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; КодОКВЭД</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодОКВЭД" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодОКВЭД;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование> --&gt; КодОКОПФ</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодОКОПФ" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.КодКОПФ;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; КодОКФС</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодОКФС" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение =  Константа.КодКФС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; НаименованиеОКОПФ</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеОКОПФ" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.ОргПравФорма;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование> --&gt; НаименованиеТерриториальногоОрганаПФР</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеТерриториальногоОрганаПФР" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.НаименованиеТерриториальногоОрганаПФР;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; СвидетельствоСерияНомер</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоСерияНомер" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоСерияНомер;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоДатаВыдачи;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; СвидетельствоНаименованиеОргана</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоНаименованиеОргана" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоНаименованиеИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; СвидетельствоКодОргана</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СвидетельствоКодОргана" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Константа.СвидетельствоКодИМНС;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование> --&gt; РайонныйКоэффициент</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РайонныйКоэффициент" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Значение = Константа.РайонныйКоэффициент;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование> --&gt; ИндивидуальныйПредприниматель</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИндивидуальныйПредприниматель" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>Предприниматель                                   </КодПравилаКонвертации>
						<ПередВыгрузкой>ИНН=СокрЛП(Константа.ИННОрганизации);
Если ПустоеЗначение(ИНН) = 1 Тогда
	Отказ = 1;
Иначе
	ОдинадцатыйСимвол=Сред(ИНН,11,1);
	Если (Строка(Число(ОдинадцатыйСимвол))=ОдинадцатыйСимвол) и (ПустаяСтрока(ОдинадцатыйСимвол) = 0) Тогда // оказалось физическое лицо
		Значение = "2";
	Иначе // оказалась организация	
		Отказ = 1;
	КонецЕсли;
КонецЕсли;

</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>30</Код>
						<Наименование> --&gt; КонтактнаяИнформация</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтактнаяИнформация" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Тип");
КоллекцияОбъектов.НоваяКолонка("Вид");
КоллекцияОбъектов.НоваяКолонка("АдресЭП");
КоллекцияОбъектов.НоваяКолонка("Город");
КоллекцияОбъектов.НоваяКолонка("ДоменноеИмяСервера");
КоллекцияОбъектов.НоваяКолонка("ЗначенияПолей");
КоллекцияОбъектов.НоваяКолонка("НомерТелефона");
КоллекцияОбъектов.НоваяКолонка("НомерТелефонаБезКодов"); 
КоллекцияОбъектов.НоваяКолонка("Представление");
КоллекцияОбъектов.НоваяКолонка("Регион");
КоллекцияОбъектов.НоваяКолонка("Страна");

//Телефон организации
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Телефон";
КоллекцияОбъектов.Вид = "ТелефонОрганизации";
КоллекцияОбъектов.Представление = СокрЛП(Константа.ТелефоныОрганизации);
КоллекцияОбъектов.ЗначенияПолей = "НомерТелефона="+Константа.ТелефоныОрганизации;
КоллекцияОбъектов.НомерТелефона = Константа.ТелефоныОрганизации;
КоллекцияОбъектов.НомерТелефонаБезКодов = Константа.ТелефоныОрганизации; 


Параметры.ПараметрыАлгоритмов.Установить("Адрес", Константа.АдресОрганизации);
СтруктураАдреса = ПолучитьСтруктуруАдреса();
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Адрес";
КоллекцияОбъектов.Вид = "ЮрАдресОрганизации";
КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");

Параметры.ПараметрыАлгоритмов.Установить("Адрес", Константа.ПочтовыйАдресОрганизации);
СтруктураАдреса = ПолучитьСтруктуруАдреса();
КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Адрес";
КоллекцияОбъектов.Вид = "ФактАдресОрганизации";
КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Тип = "Адрес";
КоллекцияОбъектов.Вид = "ПочтовыйАдресОрганизации";
КоллекцияОбъектов.Представление = СтруктураАдреса.Получить("Представление");
КоллекцияОбъектов.ЗначенияПолей = СтруктураАдреса.Получить("ЗначенияПолей");
КоллекцияОбъектов.Страна        = СтруктураАдреса.Получить("Страна");
КоллекцияОбъектов.Регион        = СтруктураАдреса.Получить("Регион");
КоллекцияОбъектов.Город         = СтруктураАдреса.Получить("Город");
</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; Тип</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; Страна</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Страна" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Регион</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Регион" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; Представление</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Представление" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; НомерТелефонаБезКодов</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерТелефонаБезКодов" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; НомерТелефона</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерТелефона" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ЗначенияПолей</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначенияПолей" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ДоменноеИмяСервера</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоменноеИмяСервера" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; Город</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Город" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Вид</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Вид" Вид="Реквизит" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; АдресЭП</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АдресЭП" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>43</Код>
						<Наименование> --&gt; РегистрацияВНалоговомОргане</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РегистрацияВНалоговомОргане" Вид="Реквизит" Тип="СправочникСсылка.РегистрацииВНалоговомОргане"/>
						<КодПравилаКонвертации>РегистрацииВНалоговомОргане                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РегистрацииВНалоговомОргане</Код>
				<Наименование>: </Наименование>
				<Порядок>150</Порядок>
				<Приемник>СправочникСсылка.РегистрацииВНалоговомОргане</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Константа.КодИМНС);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; КПП</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Сред(Константа.ИННОрганизации, 12, 9);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Константа.НаименованиеИМНС);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; НаименованиеИФНС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеИФНС" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = СокрЛП(Константа.НаименованиеИМНС);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; КодПоОКАТО</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Сведения = СоздатьОбъект("СписокЗначений");
Сведения.Установить( "Контекст", 0 );
Сведения.Установить( "ТекущаяДата", ТекущаяДата() );
Сведения.Установить( "КодОКАТО", "" ); 
глПолучитьДанные(Сведения);
Значение = Сведения.Получить("КодОКАТО");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; КодПоОКТМО</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Сведения = СоздатьОбъект("СписокЗначений");
Сведения.Установить( "Контекст", 0 );
Сведения.Установить( "ТекущаяДата", ТекущаяДата() );
Сведения.Установить( "КодОКТМО", "" ); 
глПолучитьДанные(Сведения);
Значение = Сведения.Получить("КодОКТМО");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ПослеВыгрузки</Код>
			<Наименование>После выгрузки</Наименование>
			<Порядок>350</Порядок>
			<Правило>
				<Код>ВводНачальныхОстатковОС</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатковОС</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;

//РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("ОС");
КоллекцияОбъектов.НоваяКолонка("СпособПоступленияРегл");
КоллекцияОбъектов.НоваяКолонка("СпособНачисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("МОЛРегл");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииНУ");
КоллекцияОбъектов.НоваяКолонка("НомерДокументаПринятияКУчетуРегл");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбъектКоллекции.СпособПоступленияРегл = ОбъектКоллекции.ОсновноеСредство.СпособПоступления;
ОбъектКоллекции.МОЛРегл = ОбъектКоллекции.ОсновноеСредство.МОЛ.Получить(Параметры.ДатаВводаОстатков);
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ = ОбъектКоллекции.ОсновноеСредство;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииНУ = ОбъектКоллекции.ОсновноеСредство;
ОбъектКоллекции.СпособНачисленияАмортизацииБУ = ОбъектКоллекции.ОсновноеСредство.СпособНачисленияАмортизации;

// Получение документов ввода в эксплуатацию и модернизации
ОбъектКоллекции.НомерДокументаПринятияКУчетуРегл = "";

ОС = ОбъектКоллекции.ОсновноеСредство;

Экспл = СоздатьОбъект("Периодический");
Экспл.ИспользоватьОбъект("Состояние", ОС.ТекущийЭлемент());
Экспл.ВыбратьЗначения(ОС.ДатаВводаВЭксплуатацию, Параметры.ДатаКонцаПериодаВыгрузки);
Пока Экспл.ПолучитьЗначение() = 1 Цикл
	ИстДок = Экспл.ТекущийДокумент();
	Если ИстДок.Выбран() = 1 Тогда
		Если ИстДок.Вид() = "ВводВЭксплуатациюОС" Тогда
			ОбъектКоллекции.НомерДокументаПринятияКУчетуРегл = ИстДок.НомерДок;
			Прервать;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
</ПередВыгрузкой>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ИнвентарныйНомер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИнвентарныйНомерРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.Код;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьНУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимостьН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СчетУчетаБУ) = 1 Тогда
	Значение = СчетПоКоду("01.1");

Иначе
	Значение = ОбъектКоллекции.СчетУчетаБУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; СчетАмортизацииБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.СчетАмортизацииБУ) = 1 Тогда
	Значение = СчетПоКоду("02.1");

Иначе
	Значение = ОбъектКоллекции.СчетАмортизацииБУ;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ДатаПринятияКУчетуБУ</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ДатаВводаВЭксплуатацию;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СостояниеПринятияКУчетуБУ</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СостояниеПринятияКУчетуРегл" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
							<КодПравилаКонвертации>ОСВводИПринятиеКУчету                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "ПринятиеКУчетуСВводомВЭкплуатацию";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступленияРегл" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособПоступленияРегл;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииОС                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособНачисленияАмортизацииБУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; МОЛБУ</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МОЛРегл" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.МОЛРегл;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияБУ</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияНУ</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНачисленнойАмортизацииУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.НачисленнаяАмортизацияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.НачислятьАмортизацию.Получить(ВходящиеДанные.Получить("Дата"));</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботБУ</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ОбщийОбъемПродукцииРабот;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>1800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(ВходящиеДанные.Получить("Дата"));</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ПараметрВыработкиБУ</Наименование>
							<Порядок>1900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПараметрВыработкиБУ" Вид="Реквизит" Тип="СправочникСсылка.ПараметрыВыработкиОС"/>
							<КодПравилаКонвертации>ПараметрыВыработкиОС                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; СпособОтраженияРасходовПоАмортизации</Наименование>
							<Порядок>2000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходовПоАмортизации" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>32</Код>
							<Наименование> --&gt; СрокИспользованияДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>2100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокИспользованияДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользования.Получить(Параметры.ДатаКонцаПериодаВыгрузки);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>2200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользования.Получить(ВходящиеДанные.Получить("Дата"));</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияНУ</Наименование>
							<Порядок>2300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.СрокПолезногоИспользованияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>35</Код>
							<Наименование> --&gt; СтоимостьДляВычисленияАмортизацииБУ</Наименование>
							<Порядок>2400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтоимостьДляВычисленияАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>2500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ДатаПриобретенияУСН</Наименование>
							<Порядок>2700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретенияУСН" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ПорядокВключенияСтоимостиВСоставРасходовУСН</Наименование>
							<Порядок>2800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ОсновноеСредство.ПорядокВключенияВРасходы = 1 Тогда
	Значение = "ВключитьВСоставАмортизируемогоИмущества";
ИначеЕсли ОбъектКоллекции.ОсновноеСредство.ПорядокВключенияВРасходы = 2 Тогда
	Значение = "ВключитьВСоставРасходов";
Иначе
	Значение = "НеВключатьВСоставРасходов";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; ПорядокПогашенияСтоимостиБУ</Наименование>
							<Порядок>2900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияСтоимостиБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.ОсновноеСредство.ПодлежитАмортизации = 1, "НачислениеАмортизации", "НачислениеИзноса");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; КоэффициентАмортизацииБУ</Наименование>
							<Порядок>3000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентАмортизацииБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.ОсновноеСредство.КоэффициентАмортизации.Получить(ВходящиеДанные.Получить("Дата"));</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; НазваниеДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>3100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НазваниеДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = "Акт ОС-1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; НомерДокументаПринятияКУчетуРегл</Наименование>
							<Порядок>3100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДокументаПринятияКУчетуРегл" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Остатки по основным средствам #";
</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>56</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
						<ПередВыгрузкой>Значение = "ОсновныеСредства";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>44</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>54</Код>
						<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>55</Код>
						<Наименование> --&gt; ОтражатьПоСпециальнымРегистрам</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>59</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВводНачальныхОстатковНМАИНИОКР</Код>
				<Наименование> --&gt; ДокументСсылка.ВводНачальныхОстатков</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>Если ВходящиеДанные.Получить("НМА").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.ВводНачальныхОстатков</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; НМА</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НМА" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = ВходящиеДанные.Получить("НМА");
КоллекцияОбъектов.НоваяКолонка("СпособПоступленияРегл");
КоллекцияОбъектов.НоваяКолонка("СпособНачисленияАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииБУ");
КоллекцияОбъектов.НоваяКолонка("СпособОтраженияРасходовПоАмортизацииНУ");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбъектКоллекции.СпособПоступленияРегл = ОбъектКоллекции.НМА.СпособПоступления;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ = ОбъектКоллекции.НМА;
ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииНУ = ОбъектКоллекции.НМА;
ОбъектКоллекции.СпособНачисленияАмортизацииБУ = ОбъектКоллекции.НМА.СпособНачисленияАмортизации;</ПередВыгрузкой>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; НематериальныйАктив</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НематериальныйАктив" Вид="Реквизит" Тип="СправочникСсылка.НематериальныеАктивы"/>
							<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
Иначе
	Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
КонецЕсли;
Значение = ОбъектКоллекции.НМА;

</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВидОбъектаУчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбъектаУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОбъектовУчетаНМА"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Значение = "НематериальныйАктив";	
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Значение = "РасходыНаНИОКР";
Иначе
	Значение = "НематериальныйАктив";	
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; СпособОтраженияРасходов</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияРасходов" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"/>
							<КодПравилаКонвертации>СпособыОтраженияРасходовПоАмортизации             </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СпособОтраженияРасходовПоАмортизацииБУ;
</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; НачислятьАмортизациюБУ</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюБУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 1, 0, 1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; НачислятьАмортизациюНУ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизациюНУ" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 1, 0, 1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ОбъемПродукцииРаботДляВычисленияАмортизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъемПродукцииРаботДляВычисленияАмортизации" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ОбщийОбъемПродукцииРабот;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СпециальныйКоэффициентНУ</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпециальныйКоэффициентНУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; СпособНачисленияАмортизацииБУ</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"/>
							<КодПравилаКонвертации>СпособыНачисленияАмортизацииНМА                   </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.НМА.СпособНачисленияАмортизации;
Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = "";
	
Иначе
	ВыбСпособ = ВыбСпособ.Идентификатор();
КонецЕсли;

ВходящиеДанные.Установить("СпособНачисленияАмортизацииБУ", ВыбСпособ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; СпособПоступления</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособПоступления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПоступленияАктивов"/>
							<КодПравилаКонвертации>СпособыПоступленияНМА                             </КодПравилаКонвертации>
							<ПередВыгрузкой>ВыбСпособ = ОбъектКоллекции.НМА.СпособПоступления;

Если ПустоеЗначение(ВыбСпособ) = 1 Тогда
	ВыбСпособ = Перечисление.СпособыПоступленияНМА.ПриобретениеЗаПлату;
КонецЕсли;

Значение = ВыбСпособ;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияБУ</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.СрокПолезногоИспользования;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ПервоначальнаяСтоимость;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ТекущаяСтоимостьБУ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТекущаяСтоимостьБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ТекущаяСтоимостьБУНач) = 1 Тогда
	Отказ = 1;
Иначе
	Значение = ОбъектКоллекции.ТекущаяСтоимостьБУНач;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; СчетНачисленияАмортизацииБУ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетНачисленияАмортизацииБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Значение = ?(ОбъектКоллекции.НМА.ПорядокНачисленияАмортизации = 2, "05", "04.01");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; СчетУчетаБУ</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаБУ" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.СчетУчетаНМА = "04.1" Тогда
	Значение = "04.01";
ИначеЕсли ОбъектКоллекции.СчетУчетаНМА = "04.2" Тогда
	Значение = "04.02";
Иначе
	Значение = "04.01";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ДатаПринятияКУчетуРегл</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПринятияКУчетуРегл" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ДатаПриобретения</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриобретения" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ДатаПриобретения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ПервоначальнаяСтоимостьУСН</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервоначальнаяСтоимостьУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.ПервоначальнаяСтоимостьН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияУСН</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.НачисленнаяАмортизацияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СрокПолезногоИспользованияУСН</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПолезногоИспользованияУСН" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.НМА.СрокПолезногоИспользованияН;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ПорядокВключенияСтоимостиВСоставРасходовУСН</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокВключенияСтоимостиВСоставРасходовУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН"/>
							<ПередВыгрузкой>НомерЗначения = ОбъектКоллекции.НМА.ПорядокВключенияВРасходы;
Если НомерЗначения = 3 Тогда
	Значение = "НеВключатьВСоставРасходов";
ИначеЕсли НомерЗначения = 2 Тогда
	Значение = "ВключитьВСоставРасходов";
Иначе
	Значение = "ВключитьВСоставАмортизируемогоИмущества";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; НакопленнаяАмортизацияБУ</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НакопленнаяАмортизацияБУ" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.НакопленнаяАмортизацияБУНач) = 1 Тогда
	Отказ = 1;
	
Иначе
	Значение = ОбъектКоллекции.НакопленнаяАмортизацияБУНач;
КонецЕсли;
</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Остатки по НМА и расходам на НИОКР #";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; РазделУчета</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазделУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.РазделыУчетаДляВводаОстатков"/>
						<ПередВыгрузкой>Значение = "НематериальныеАктивыИНИОКР";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ОтражатьВНалоговомУчете</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьВНалоговомУчете" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; ОтражатьПоСпециальнымРегистрам</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражатьПоСпециальнымРегистрам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ДополнительныеСведения</Код>
			<Наименование>Дополнительные сведения</Наименование>
			<Порядок>450</Порядок>
			<Правило>
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.ПодразделенияОрганизаций</Наименование>
				<Порядок>50</Порядок>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Основное подразделение";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыОбъектовУчетаНМА</Код>
				<Наименование> --&gt; ПеречислениеСсылка.ВидыОбъектовУчетаНМА</Наименование>
				<Порядок>100</Порядок>
				<Приемник>ПеречислениеСсылка.ВидыОбъектовУчетаНМА</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТипЦенНоменклатуры</Код>
				<Наименование> --&gt; СправочникСсылка.ТипыЦенНоменклатуры</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Если Не ЗначениеЗаполнено(Объект.Код) Тогда Объект.УстановитьНовыйКод() КонецЕсли;</ПослеЗагрузки>
				<Приемник>СправочникСсылка.ТипыЦенНоменклатуры</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; ВалютаЦены</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаЦены" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПорядокОкругления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОкругления" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ПередВыгрузкой>Значение = "Окр0_01";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ЦенаВключаетНДС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦенаВключаетНДС" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УстановкаЦенНоменклатуры</Код>
				<Наименование> --&gt; ДокументСсылка.УстановкаЦенНоменклатуры</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = СокрЛП(ВходящиеДанные.Получить("ТипЦен"))+СокрЛП(ВходящиеДанные.Получить("ВалютаЦены"))+СокрЛП(ВходящиеДанные.Получить("ЦенаВключаетНДС"))+ВходящиеДанные.Получить("Дата");</ПередВыгрузкой>
				<Приемник>ДокументСсылка.УстановкаЦенНоменклатуры</Приемник>
				<Свойства>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; Товары</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Цена</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Валюта</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ТипЦен</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипЦен" Вид="Реквизит" Тип="СправочникСсылка.ТипыЦенНоменклатуры"/>
						<КодПравилаКонвертации>ТипЦенНоменклатуры                                </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Наименование", ВходящиеДанные.Получить("Наименование"));
ИсходящиеДанные.Установить("ЦенаВключаетНДС", ВходящиеДанные.Получить("ЦенаВключаетНДС"));
ВалютаЦены = ?(ПустоеЗначение(ВходящиеДанные.Получить("Валюта")) = 0, ВходящиеДанные.Получить("Валюта"), Параметры.Рубли);
ИсходящиеДанные.Установить("ВалютаЦены", ВалютаЦены);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Информация</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Информация" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Получить("Наименование");</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВБухУчете</Код>
				<Наименование>: </Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = СокрП(Источник.Получить("Счет")) + " / " + 
СокрП(Источник.Получить("Субконто1")) + " / " + 
СокрП(Источник.Получить("Субконто2")) + " / " + 
СокрП(Источник.Получить("Субконто3"));</ПередВыгрузкой>
				<ПослеВыгрузки>ВыгрузитьПоПравилу(,, Источник,, "ПорядокОтраженияЗарплатыВБухУчете");</ПослеВыгрузки>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Лев(СокрП(Источник.Получить("Счет")) + " / " + 
СокрП(Источник.Получить("Субконто1")) + " / " + 
СокрП(Источник.Получить("Субконто2")) + " / " + 
СокрП(Источник.Получить("Субконто3")), 150);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыВычетовНДФЛ</Код>
				<Наименование>Справочник: Виды вычетов</Наименование>
				<Порядок>300</Порядок>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВидыВычетовНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; КодПрименяемыйВНалоговойОтчетностиС2011Года</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПрименяемыйВНалоговойОтчетностиС2011Года" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если (СокрЛП(Источник.КодДляОтчетности2011)="")
	или (СокрЛП(Источник.КодДляОтчетности2011)="-") Тогда
	Отказ = 1;
Иначе
	Значение = СокрЛП(Источник.КодДляОтчетности2011);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОперацияНалоговогоУчетаПоНДФЛ</Код>
				<Наименование>: </Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("НДФЛИсчисленныйПоСтавке13").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("НДФЛУдержанный").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("ПредоставленныеВычеты").КоличествоСтрок() = 0) и
	(ВходящиеДанные.Получить("СведенияОДоходах").КоличествоСтрок() = 0)  Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ОперацияНалоговогоУчетаПоНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; ДатаОперации</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОперации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>7</Код>
						<Наименование> --&gt; НДФЛИсчисленныйПоСтавке13</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛИсчисленныйПоСтавке13" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("НДФЛИсчисленныйПоСтавке13").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование> --&gt; НДФЛУдержанный</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛУдержанный" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("НДФЛУдержанный").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходов                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Ставка</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ставка" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавки"/>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СтавкаНалогообложения;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СтавкаНалогообложения</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложения" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; ПредоставленныеВычеты</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПредоставленныеВычеты" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("ПредоставленныеВычеты").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетовНДФЛ"/>
							<КодПравилаКонвертации>ВидыВычетовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование> --&gt; СведенияОДоходах</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ВходящиеДанные.Получить("СведенияОДоходах").КоличествоСтрок() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ДатаПолученияДохода</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПолученияДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетовНДФЛ"/>
							<КодПравилаКонвертации>ВидыВычетовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходов                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; СуммаВычета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; СуммаНалогаИсчисленная</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНалогаИсчисленная" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОперацияУчетаПоСтраховымВзносам</Код>
				<Наименование>: </Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("СведенияОДоходах").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ОперацияУчетаПоСтраховымВзносам</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцРасчетногоПериода" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>7</Код>
						<Наименование> --&gt; СведенияОДоходах</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СведенияОДоходах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВидДохода</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовПоСтраховымВзносам"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>19</Код>
						<Наименование> --&gt; ФФОМСЕНВД</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФФОМСЕНВД" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; ФФОМС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФССНесчастныеСлучаи" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; ФССЕНВД</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФССЕНВД" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; ФСС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФСС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; ТФОМСЕНВД</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТФОМСЕНВД" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; ТФОМС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТФОМС" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; ПФРСтраховая</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРСтраховая" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ПФРНакопительная</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПФРНакопительная" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетыПоСтраховымВзносам</Код>
				<Наименование>: </Наименование>
				<Порядок>450</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("РасчетыСФондамиПоСтраховымВзносам").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;
</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Содержание</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Содержание" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СпособЗаполнения</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособЗаполнения" Вид="Реквизит"/>
						<ПередВыгрузкой>Значение = "Вручную";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; СуммаОперации</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаОперации" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Группа>
						<Код>7</Код>
						<Наименование> --&gt; РасчетыСФондамиПоСтраховымВзносам</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСФондамиПоСтраховымВзносам" Вид="НаборДвиженийРегистраНакопления"/>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Активность</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Активность" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВидОбязательногоСтрахованияСотрудников</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбязательногоСтрахованияСотрудников" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыОбязательногоСтрахованияСотрудников"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ЭтоРасчетыПоНачислениюУплатеВзносовВФСС</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоРасчетыПоНачислениюУплатеВзносовВФСС" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ЭтоСтраховыеВзносы</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоСтраховыеВзносы" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; ТаблицаРегистровНакопления</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТаблицаРегистровНакопления" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Имя</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Имя" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СписаниеОС_Обороты</Код>
				<Наименование>: </Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>Если (ВходящиеДанные.Получить("ОС").КоличествоСтрок() = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
				<Приемник>ДокументСсылка.СписаниеОС</Приемник>
				<Свойства>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ОС</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Реквизит" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>3</Код>
						<Наименование> --&gt; НачислениеАмортизацииОСБухгалтерскийУчет</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачислениеАмортизацииОСБухгалтерскийУчет" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; НачислятьАмортизацию</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьАмортизацию" Вид="Ресурс" Тип="Булево"/>
							<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>8</Код>
						<Наименование> --&gt; СостоянияОСОрганизаций</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СостоянияОСОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ДатаСостояния</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСостояния" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение =  "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; Состояние</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состояние" Вид="Ресурс" Тип="ПеречислениеСсылка.СостоянияОС"/>
							<ПередВыгрузкой>Значение = "СнятоСУчета";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование> --&gt; СобытияОСОрганизаций</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СобытияОСОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ОсновноеСредство</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновноеСредство" Вид="Измерение" Тип="СправочникСсылка.ОсновныеСредства"/>
							<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Событие</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Событие" Вид="Ресурс" Тип="СправочникСсылка.СобытияОС"/>
							<ПередВыгрузкой>Значение = "ВыбытиеОС";</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>19</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>20</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>21</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>23</Код>
						<Наименование> --&gt; СобытиеОС</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СобытиеОС" Вид="Реквизит" Тип="СправочникСсылка.СобытияОС"/>
						<ПередВыгрузкой>Значение = "ВыбытиеОС";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование> --&gt; СчетСписания</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетСписания" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<КодПравилаКонвертации>Хозрасчетный                                      </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "ПрочиеРасходы";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>25</Код>
						<Наименование> --&gt; РучнаяКорректировка</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РучнаяКорректировка" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 1;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПринятыеРаботники</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>550</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>ДокументСсылка.ПриемНаРаботу</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ДатаПриема</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = глДатаПриема(Источник);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ВидЗанятости</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
						<ПередВыгрузкой>Значение = "ОсновноеМестоРаботы";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Должность;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Подразделение</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ОсновноеПодразделение                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Параметры.ПодразделениеОрганизации;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>12</Код>
						<Наименование> --&gt; Начисления</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Начисление");
КоллекцияОбъектов.НоваяКолонка("Размер");
КоллекцияОбъектов.НоваяКолонка("ВидРасчетаОтражениеЗП");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Начисление = Источник;
КоллекцияОбъектов.Размер = Источник.Оклад.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
КоллекцияОбъектов.ВидРасчетаОтражениеЗП = СоздатьОбъект("СписокЗначений");
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("СчетЗатрат",Источник.СчетЗатрат.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто1",Источник.Субконто1.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто2",Источник.Субконто2.Получить(Параметры.ДатаКонцаПериодаВыгрузки));
КоллекцияОбъектов.ВидРасчетаОтражениеЗП.Установить("Субконто3",Источник.Субконто3.Получить(Параметры.ДатаКонцаПериодаВыгрузки));</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Начисление</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>ВидыНачисленийОклад                               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; Размер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; СпособРасчетаАванса</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаАванса" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаАванса"/>
						<ПередВыгрузкой>Значение = "ПроцентомОтТарифа";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УволенныеРаботники</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>600</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>ДокументСсылка.Увольнение</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаВводаОстатков - 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Проведен</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = "1";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПолучитьКомментарийДокумента();</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ДатаУвольнения</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = Параметры.ДатаКонцаПериодаВыгрузки;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>А_Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>спр_БанковскиеСчета</Код>
				<Наименование>Банковские счета</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>БанковскиеСчета                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.БанковскиеСчета</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ВидыНоменклатуры</Код>
				<Наименование>Виды номенклатуры</Наименование>
				<Порядок>300</Порядок>
				<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ВидыДеятельности</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>Документы удостоверяющие личность</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДокументыУдостоверяющиеЛичность</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ДоходыБудущихПериодов</Код>
				<Наименование>Доходы будущих периодов</Наименование>
				<Порядок>500</Порядок>
				<КодПравилаКонвертации>ДоходыБудущихПериодов                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДоходыБудущихПериодов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ЕдиницыИзмерений</Код>
				<Наименование>Единицы измерений</Наименование>
				<Порядок>600</Порядок>
				<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЕдиницыИзмерений</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_Контрагенты</Код>
				<Наименование>Контрагенты</Наименование>
				<Порядок>800</Порядок>
				<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Контрагенты</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_МестаХранения</Код>
				<Наименование>Места хранения</Наименование>
				<Порядок>900</Порядок>
				<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.МестаХранения</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_НематериальныеАктивы</Код>
				<Наименование>Нематериальные активы</Наименование>
				<Порядок>1000</Порядок>
				<КодПравилаКонвертации>НематериальныеАктивы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.НематериальныеАктивы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_Номенклатура</Код>
				<Наименование>Номенклатура</Наименование>
				<Порядок>1100</Порядок>
				<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Номенклатура</ОбъектВыборки>
				<ПередОбработкойПравила>Выборка = СоздатьОбъект("Справочник.Номенклатура");
Выборка.ВыбратьЭлементы();
Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
	Если Выборка.ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,, "Номенклатура");
КонецЦикла;
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_Оборудование</Код>
				<Наименование>Внеоборотные активы</Наименование>
				<Порядок>1200</Порядок>
				<КодПравилаКонвертации>ОбъектыСтроительства_08_4                         </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОбъектыВнеоборотныхАктивов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>1300</Порядок>
				<КодПравилаКонвертации>ОсновныеСредства                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ОсновныеСредства</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ПрочиеДоходыИРасходы</Код>
				<Наименование>Прочие доходы и расходы</Наименование>
				<Порядок>1400</Порядок>
				<КодПравилаКонвертации>ПрочиеДоходыИРасходы                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ПрочиеДоходыИРасходы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_РасходыБудущихПериодов</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>1500</Порядок>
				<КодПравилаКонвертации>РасходыБудущихПериодов                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасходыБудущихПериодов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_РасчетныеСчета</Код>
				<Наименование>Расчетные счета</Наименование>
				<Порядок>1600</Порядок>
				<КодПравилаКонвертации>РасчетныеСчета                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.РасчетныеСчета</ОбъектВыборки>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

//Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_Резервы</Код>
				<Наименование>Резервы</Наименование>
				<Порядок>1700</Порядок>
				<КодПравилаКонвертации>Резервы                                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Резервы</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_Сотрудники</Код>
				<Наименование>Сотрудники</Наименование>
				<Порядок>1800</Порядок>
				<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Сотрудники</ОбъектВыборки>
				<ПередОбработкойПравила>Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_СтатьиЗатратНаПроизводство</Код>
				<Наименование>Статьи затрат</Наименование>
				<Порядок>1900</Порядок>
				<КодПравилаКонвертации>СтатьиЗатратНаПроизводство                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.СтатьиЗатрат</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ТипыЦен</Код>
				<Наименование>Типы цен</Наименование>
				<Порядок>2000</Порядок>
				<КодПравилаКонвертации>ТипыЦенНоменклатуры                               </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ТипыЦен</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ЦеныНоменклатуры</Код>
				<Наименование>Цены номенклатуры </Наименование>
				<Порядок>2100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТипыЦен = СоздатьОбъект("ТаблицаЗначений");
ТипыЦен.НоваяКолонка("ТипЦен");
ТипыЦен.НоваяКолонка("ЦенаВключаетНДС");
ТипыЦен.НоваяКолонка("Товары");
ТипыЦен.НоваяКолонка("Валюта");

Выборка = СоздатьОбъект("Справочник.Цены");
ВыборкаВладельцев = СоздатьОбъект("Справочник.Номенклатура");

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	
	// Покупная стоимость
	Если (ВыборкаВладельцев.ПлановаяСебестоимость &lt;&gt; 0) Тогда
		Если (ВыборкаВладельцев.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар) ИЛИ
			(ВыборкаВладельцев.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал) ИЛИ
			(ВыборкаВладельцев.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии) Тогда
			
			НомСтроки = 0;
			ТипЦен = "Учетная (покупная) цена";
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = 1;
				ТипыЦен.Валюта = Параметры.Рубли;
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
								
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = ВыборкаВладельцев.ПлановаяСебестоимость;
			Товары.Валюта = Параметры.Рубли;
			
		Иначе
			НомСтроки = 0;
			ТипЦен = "Плановая себестоимость";
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = 1;
				ТипыЦен.Валюта = Параметры.Рубли;
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
				
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = ВыборкаВладельцев.ПлановаяСебестоимость;
			Товары.Валюта = Параметры.Рубли;
		КонецЕсли;
	КонецЕсли;
	
	// Цены
	Если ВыборкаВладельцев.Цена &lt;&gt; 0 Тогда
		НомСтроки = 0;
		ТипЦен = "Отпускная цена";
		Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
			ТипыЦен.НоваяСтрока();
			ТипыЦен.ТипЦен = ТипЦен;
			ТипыЦен.ЦенаВключаетНДС = 1;
			ТипыЦен.Валюта = ?(ПустоеЗначение(ВыборкаВладельцев.Валюта) = 1, Параметры.Рубли, ВыборкаВладельцев.Валюта);
			ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
			
			Товары = ТипыЦен.Товары;
			Товары.НоваяКолонка("Номенклатура");
			Товары.НоваяКолонка("Цена");
			Товары.НоваяКолонка("Валюта");
			
		Иначе
			ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
			Товары = ТипыЦен.Товары;
		КонецЕсли;
		
		Товары.НоваяСтрока();
		Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
		Товары.Цена = ВыборкаВладельцев.Цена;
		Товары.Валюта = ?(ПустоеЗначение(ВыборкаВладельцев.Валюта) = 1, Параметры.Рубли, ВыборкаВладельцев.Валюта);
	КонецЕсли;
		
	// Справочник "Цены"
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		Если Выборка.Цена.Получить(Параметры.ДатаКонцаПериодаВыгрузки) &lt;&gt; 0 Тогда
			НомСтроки = 0;
			ТипЦен = СокрЛП(Выборка.ТипЦен.Наименование);
			Если ТипыЦен.НайтиЗначение(ТипЦен, НомСтроки, "ТипЦен") = 0 Тогда
				ТипыЦен.НоваяСтрока();
				ТипыЦен.ТипЦен = ТипЦен;
				ТипыЦен.ЦенаВключаетНДС = 1;
				ТипыЦен.Валюта = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
				ТипыЦен.Товары = СоздатьОбъект("ТаблицаЗначений");
				
				Товары = ТипыЦен.Товары;
				Товары.НоваяКолонка("Номенклатура");
				Товары.НоваяКолонка("Цена");
				Товары.НоваяКолонка("Валюта");
				
			Иначе
				ТипыЦен.ПолучитьСтрокуПоНомеру(НомСтроки);
				Товары = ТипыЦен.Товары;
			КонецЕсли;
			
			Товары.НоваяСтрока();
			Товары.Номенклатура = ВыборкаВладельцев.ТекущийЭлемент();
			Товары.Цена = Выборка.Цена.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
			Товары.Валюта = ?(ПустоеЗначение(Выборка.Валюта) = 1, Параметры.Рубли, Выборка.Валюта);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

ТипыЦен.ВыбратьСтроки();
Пока ТипыЦен.ПолучитьСтроку() = 1 Цикл
	Если ТипыЦен.Товары.КоличествоСтрок() &gt; 0 Тогда
		ВходящиеДанные.УдалитьВсе();
		ВходящиеДанные.Установить("ТипЦен", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("Наименование", ТипыЦен.ТипЦен);
		ВходящиеДанные.Установить("ЦенаВключаетНДС", ТипыЦен.ЦенаВключаетНДС);
		ВходящиеДанные.Установить("Валюта", ТипыЦен.Валюта);
		ВходящиеДанные.Установить("Товары", ТипыЦен.Товары);
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "УстановкаЦенНоменклатуры");
	КонецЕсли;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ЦенныеБумаги</Код>
				<Наименование>Ценные бумаги</Наименование>
				<Порядок>2200</Порядок>
				<КодПравилаКонвертации>ЦенныеБумаги                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЦенныеБумаги</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_Договоры</Код>
				<Наименование>Договоры</Наименование>
				<Порядок>2300</Порядок>
				<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.Договоры</ОбъектВыборки>
				<ПередОбработкойПравила>ОбъектВыборки = СтрЗаменить(Правило.ОбъектВыборки, "Ссылка", "");
Выборка = СоздатьОбъект(ОбъектВыборки);
ВыборкаВладельцев = СоздатьОбъект("Справочник." + Метаданные.Справочник(Выборка.Вид()).Владелец.Идентификатор);

ВыборкаВладельцев.ВыбратьЭлементы();
Пока ВыборкаВладельцев.ПолучитьЭлемент() &gt; 0 Цикл
	Выборка.ИспользоватьВладельца(ВыборкаВладельцев.ТекущийЭлемент());
	Выборка.ВыбратьЭлементы();
	Пока Выборка.ПолучитьЭлемент() &gt; 0 Цикл
		НомерПКО = НайтиПравило(, Правило.КодПравилаКонвертации);
		ВыгрузитьПоПравилу(Выборка.ТекущийЭлемент(),,,,,,, НомерПКО);
	КонецЦикла;
КонецЦикла;

//Отказ = 1;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ЛицензииПоставщиковАлкогольнойПродукции</Код>
				<Наименование>Лицензии поставщиков алкогольной продукции</Наименование>
				<Порядок>2350</Порядок>
				<КодПравилаКонвертации>ЛицензииПоставщиковАлкогольнойПродукции           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ЛицензииПоставщиковАлкогольнойПродукции</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>спр_ДвиженияДенежныхСредств</Код>
				<Наименование>Движения денежных средств</Наименование>
				<Порядок>2400</Порядок>
				<КодПравилаКонвертации>СтатьиДвиженияДенежныхСредств                     </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ДвиженияДенежныхСредств</ОбъектВыборки>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>Б_ОстаткиПоРазделамУчета</Код>
			<Наименование>Остатки по разделам учета</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="false">
				<Код>ост_ОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//****************** Счета 01.1 и 02.1 *************************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("02.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счет 01.2 *************************
//остатков быть не должно
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счета 03.1 - 03.4 и 02.1 *************************
// Счет 03.1
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

// Счет 03.2
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

// Счет 03.3
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.3"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

// Счет 03.4
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.4"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//Счет 02.2
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("02.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счет 03.5 *************************
//остатков быть не должно
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
ВыгрузитьОстаткиПоОС();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//****************** Счет 010 *************************
//износ
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("010"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("010"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();


ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.УдалитьВсе();
ВходящиеДанные.Установить("ОС", Параметры.СписокОС);
ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковОС");

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_НематериальныеАктивы</Код>
				<Наименование>Нематериальные активы и расходы на НИОКР</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета НМА
//*************************************************************************************************

//******************** Счет 04.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("04.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
ВыгрузитьОстаткиПоНМА();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 04.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("04.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
ВыгрузитьОстаткиПоНМА();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 05 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("05"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
ВыгрузитьОстаткиПоНМА();

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("НМА", Параметры.СписокНМА);
ВходящиеДанные.Установить("Дата", Параметры.ДатаВводаОстатков - 1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатковНМАИНИОКР");


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ВнеоборотныеАктивы</Код>
				<Наименование>Внеоборотные активы</Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
//Счета учета оборудования (Счет 07)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("07"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
//Счета учета внеоборотных активов (Счета 08)
//*************************************************************************************************

//******************** Счет 08.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 08.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.8"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_Материалы</Код>
				<Наименование>Материалы</Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета материалов
//*************************************************************************************************

//******************** Счет 10.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.1"));
//Параметры.СписокСчетовСкладскогоУчета = "10.1";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.2"));
//Параметры.СписокСчетовСкладскогоУчета = "10.2";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.3"));
//Параметры.СписокСчетовСкладскогоУчета = "10.3";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//Параметры.СписокСчетовСкладскогоУчета = "";

//******************** Счет 10.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.12 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.12"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 10.13 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.13"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_НЗП</Код>
				<Наименование>Незавершенное производство</Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета производственных затрат (Счета 20 и 26)
//*************************************************************************************************

//************ Счет 20 ************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("20"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//************ Счет 26 ************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("26"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ГотоваяПродукция</Код>
				<Наименование>Готовая продукция</Наименование>
				<Порядок>350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета готовой продукции
//*************************************************************************************************

//******************** Счет 40 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("40"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 43 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("43"));
//Параметры.СписокСчетовСкладскогоУчета = "43";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_Товары</Код>
				<Наименование>Товары</Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета товаров
//*************************************************************************************************

//******************** Счет 41.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.1"));
//Параметры.СписокСчетовСкладскогоУчета = "41.1";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 41.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.2"));
//Параметры.СписокСчетовСкладскогоУчета = "41.2";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 41.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.3"));
//Параметры.СписокСчетовСкладскогоУчета = "41.3";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//Параметры.СписокСчетовСкладскогоУчета = "";

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасходыНаПродажу</Код>
				<Наименование>Расходы на продажу</Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета коммерческих расходов
//*************************************************************************************************

//******************** Счет 44.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 44.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ТоварыОтгруженные</Код>
				<Наименование>Товары отгруженные</Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомиссионером");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("45"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_КассаИБанк</Код>
				<Наименование>Денежные средства</Наименование>
				<Порядок>550</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета кассовых операций (Счет 50)
//*************************************************************************************************

//******************** Счет 50.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 50.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета банковских операций (Счета 51, 52, 55, 57)
//*************************************************************************************************

//******************** Счет 51 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("51"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 52 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("52"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.2 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.3 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.33 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.4 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 55.44 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.44"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 57.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 57.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

  </ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ФинансовыеВложения</Код>
				<Наименование>Финансовые вложения</Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета паев и акций и резервов под них (Счета 58, 59)
//*************************************************************************************************

//******************** Счет 58.1.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 58.1.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 58.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 59 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("59"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыСПоставщиками</Код>
				<Наименование>Расчеты с поставщиками и подрядчиками</Наименование>
				<Порядок>650</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
//*************************************************************************************************
// Счет учета расчетов с поставщиками (Счет 60)
//*************************************************************************************************

//******************** Счет 60.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.1"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.1,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 60.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.2"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.2,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 60.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.4")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 60.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.11"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.11,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 60.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.22"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.22,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыСПокупателями</Код>
				<Наименование>Расчеты с покупателями и заказчиками</Наименование>
				<Порядок>700</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
//*************************************************************************************************
// Счет учета расчетов с покупателями (Счет 62)
//*************************************************************************************************

//******************** Счет 62.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.1"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.1,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

//******************** Счет 62.2******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.2"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.2,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

//******************** Счет 62.3******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.3"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.3,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

//******************** Счет 62.4******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.4"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.4,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

//******************** Счет 62.11******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.11"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.11,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

//******************** Счет 62.33******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.33"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.33,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

//******************** Счет 62.44******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.44"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.44,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");



</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыПрочие</Код>
				<Наименование>Прочие расчеты с контрагентами</Наименование>
				<Порядок>750</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
//*************************************************************************************************
// Счета учета расчетов с контрагентами по прочим операциям
//*************************************************************************************************

//******************** Счет 63 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("63"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 66.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.22 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 66.33 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.22 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 67.33 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//*************************************************************************************************
// Счета учета расчетов по внутрифирменным расчетам (Счет 79)
//*************************************************************************************************

//******************** Счет 79.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 79.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 79.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыПоНалогамИСборам</Код>
				<Наименование>Налоги и сборы</Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета расчетов по налогам и сборам (Счета 68, 69)
//*************************************************************************************************

//******************** Счет 68.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 68.12 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.12"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.21 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.23 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.23"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 69.24 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.24"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 69.25 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.25"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 69.31 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.31"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.41 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.41"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.42 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.42"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.51 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.51"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 69.52 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.52"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыСПерсоналом</Код>
				<Наименование>Расчеты с персоналом</Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета заработной платы и расчетов с персоналом (Счета 70, 73)
//*************************************************************************************************

//******************** Счет 70 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("70"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
НУ_ОстаткиПоЗарплате();
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 73.6 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.6"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыСПодотчетнымиЛицами</Код>
				<Наименование>Расчеты с подотчетными лицами</Наименование>
				<Порядок>900</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета расчетов с подотчетными лицами (Счет 71)
//*************************************************************************************************

//******************** Счет 71.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 71.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 71.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 71.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыСУчредителями</Код>
				<Наименование>Расчеты с учредителями</Наименование>
				<Порядок>950</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
//*************************************************************************************************
// Счета учета расчетов с учредителями (Счет 75)
//*************************************************************************************************

//******************** Счет 75.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 75.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 75.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РасчетыСПрочимиДебиторамиИКредиторами</Код>
				<Наименование>Расчеты с прочими дебиторами и кредиторами</Наименование>
				<Порядок>1000</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с прочими дебиторами и кредиторами (Счет 76)
//*************************************************************************************************

//******************** Счет 76.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 76.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.6"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 76.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 76.55 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.55"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 76.66 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.66"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();

//******************** Счет 76.ЗП ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.ЗП"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_Капитал</Код>
				<Наименование>Капитал и резервы</Наименование>
				<Порядок>1050</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Счета учета капитала и резервов (Счета 80, 81, 82, 83, 84, 86)
//*************************************************************************************************

//******************** Счет 80 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("80"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 81 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("81"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 82.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 82.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 83.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 84.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 86 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("86"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_РБП</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>1100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.2"));  
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.3"));  
ВыгрузитьОстаткиПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.4"));  
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ФинансовыйРезультат</Код>
				<Наименование>Финансовый результат                              </Наименование>
				<Порядок>1150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//************************************************************ 
//Счета у которых есть остатки
//************************************************************

//******************** Счет 94 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("94"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 96 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("96"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();


//******************** Счет 98.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 98.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 99 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//************************************************************ 
//Счета у которых есть только обороты
//************************************************************

//******************** Счет 90.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.7 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.7"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.8 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.8"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 90.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.9"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 91.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.9"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОстаткиПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ЗабалансовыеСчета</Код>
				<Наименование>Забалансовые счета</Наименование>
				<Порядок>1200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
//*************************************************************************************************
// Забалансовые счета 
//*************************************************************************************************

//******************** Счет 001 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("001"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 002 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("002"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 003 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("003"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 004 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("004"));
Параметры.СписокСчетовСкладскогоУчета = Параметры.СписокСчетовСкладскогоУчета + "004,";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");
ВыгрузитьОстаткиПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
//******************** Данные налогового учета **********************
//Данные для НУ
Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	НУ_ОстаткиПо004();
КонецЕсли;

//*******************************************************************
//******************** Счет 007 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("007"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 008 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("008"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 009 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("009"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет 011 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("011"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет ГТД ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("ГТД")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();

//******************** Счет РВ ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("РВ"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОстаткиПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ост_ПрочиеРасходыНУ</Код>
				<Наименование>Прочие расходы налогового учета</Наименование>
				<Порядок>1250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
// Прочие расходы налогового учета
НУ_ОстаткиПрочихРасходов();</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>В_Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>150</Порядок>
			<Правило Отключить="false">
				<Код>док_АвансовыйОтчет</Код>
				<Наименование>Авансовый отчет</Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>АвансовыйОтчет                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.АвансовыйОтчет</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ЗаписьКУДиР</Код>
				<Наименование>Операция (запись книги учета)</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;

////////////////////////////////////////
////Раздел 1
ОчиститьПараметры();

ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ДоходыМинусРасходы = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы;

СчН01 = СчетПоКоду("Н01"); 
СчН03 = СчетПоКоду("Н03");
СчН05 = СчетПоКоду("Н05");                                                        

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСтрок.НоваяКолонка("ДатаНомер", "Строка");
ТаблицаСтрок.НоваяКолонка("Содержание");
ТаблицаСтрок.НоваяКолонка("Графа4");
ТаблицаСтрок.НоваяКолонка("Графа5");
ТаблицаСтрок.НоваяКолонка("Графа6");
ТаблицаСтрок.НоваяКолонка("Графа7");
ТаблицаСтрок.НоваяКолонка("ДоходыЕНВД", "Число");

ТаблУчета = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.НоваяКолонка("Документ", "Документ");
ТаблУчета.НоваяКолонка("НомерСтрокиДок", "Число");
ТаблУчета.НоваяКолонка("ДатаНомерДок", "Строка");
ТаблУчета.НоваяКолонка("СодержОперации");
ТаблУчета.НоваяКолонка("Описание");
ТаблУчета.НоваяКолонка("Доходы");
ТаблУчета.НоваяКолонка("Расходы");  
ТаблУчета.НоваяКолонка("ДоходыБУ");
ТаблУчета.НоваяКолонка("РасходыБУ");
ТаблУчета.НоваяКолонка("ДоходыЕНВД");
ТаблУчета.НоваяКолонка("НомерКвартала", "Число", 1, 0);
ТаблУчета.НоваяКолонка("НДС");
ТаблУчета.НоваяКолонка("Валюта");
ТаблУчета.НоваяКолонка("ВалСумма");
ТаблУчета.НоваяКолонка("Счетчик","Число");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ВключатьСубсчета(-1, 0);
БухИт.Опции(1,0);
Если ОбъектНалогообложения = ДоходыМинусРасходы Тогда
	СписокСчетов = "Н01, Н02.1, Н02.2, Н02.4, Н03, Н04, Н05";
Иначе
	СписокСчетов = "Н01, Н03, Н05";
КонецЕсли;

Если Параметры.П_ВыгружатьОбороты = 1 Тогда
	БухИт.ВыполнитьЗапрос(Параметры.ДатаОкончанияВыгрузкиОборотов, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетов,,,, "Проводка",);
Иначе
	БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки, СписокСчетов,,,, "Проводка",);
КонецЕсли;

БухИт.ВыбратьПериоды(,,,);
Пока БухИт.ПолучитьПериод(,) = 1 Цикл
	
	Если БухИт.Операция.Документ.Вид() &lt;&gt; "Операция" Тогда
		Продолжить;
	КонецЕсли;
	
	//Проверяем на возможность выгрузки операции
	Если (БухИт.Операция.ПометкаУдаления ()=1) 
		И (Параметры._ВыгружатьУдаленные=0) Тогда
		Продолжить;
	КонецЕсли;

	Если (БухИт.Операция.ВключитьПроводки()=1)
		И (Параметры._ВыгружатьПроведенные=0) Тогда
		Продолжить;
	КонецЕсли;
	
	Если (БухИт.Операция.ВключитьПроводки()=0)
		И (Параметры._ВыгружатьНеПроведенные=0) Тогда
		Продолжить;
	КонецЕсли;

	
	Доходы = 0;
	Расходы = 0; 
	ДоходыБУ = 0;
	РасходыБУ = 0;                                  
	ДоходыЕНВД = 0;
	
	//Не обрабатывать если перемещение между счетами
	//например банк - касса
	
	БухИт.ВыбратьСчета(,,,);
	Пока БухИт.ПолучитьСчет(,) = 1 Цикл
		Если БухИт.Счет = СчН01 Тогда
			Доходы = Доходы + БухИт.КО();
		ИначеЕсли БухИт.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда // Н02.1, Н02.2
			Расходы = Расходы + БухИт.ДО();
		ИначеЕсли БухИт.Счет = СчН03 Тогда
			ДоходыБУ = ДоходыБУ + БухИт.КО();
		ИначеЕсли БухИт.Счет = СчН05 Тогда
			ДоходыЕНВД = ДоходыЕНВД + БухИт.КО();
		ИначеЕсли (БухИт.ДО()&lt;&gt;0) Тогда
			РасходыБУ = РасходыБУ + БухИт.ДО();
		КонецЕсли;
	КонецЦикла;
	
	ТаблУчета.НоваяСтрока();
		
	Параметры.ПараметрыАлгоритмов.Установить("ОперацияКУДиР",БухИт.Операция);
	Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);
	
	ПолучитьАтрибутыПроводки();
	
	ТаблУчета.Доходы  = Доходы;
	ТаблУчета.Расходы = Расходы;
	ТаблУчета.ДоходыБУ  = ДоходыБУ;
	ТаблУчета.РасходыБУ = РасходыБУ;
	ТаблУчета.ДоходыЕНВД = ДоходыЕНВД;
	
КонецЦикла;

ТаблУчета.Свернуть("Документ, НомерСтрокиДок, ДатаНомерДок, ДоходыЕНВДПризнак", " СодержОперации, ДоходыБУ, Доходы,  РасходыБУ, Расходы, НДС, ДоходыЕНВД");
ТаблУчета.Сортировать("+Документ, НомерСтрокиДок, ДатаНомерДок");

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаУчетаЗаписейКУДиР", ТаблУчета);
Параметры.ПараметрыАлгоритмов.Установить("ТаблицаСтрокЗаписейКУДиР", ТаблицаСтрок);
Параметры.ПараметрыАлгоритмов.Установить("ВыгрузкаОперации", 1);

ВыгрузитьТаблицуВЗаписиКУДиР();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>док_Взаимозачет</Код>
				<Наименование>Зачет взаимных требований</Наименование>
				<Порядок>150</Порядок>
				<КодПравилаКонвертации>Взаимозачет                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.Взаимозачет</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ВыпускПродукции</Код>
				<Наименование>Выпуск продукции</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>ВыпускПродукции                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ВыпускПродукции</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_Доверенность</Код>
				<Наименование>Доверенность</Наименование>
				<Порядок>250</Порядок>
				<КодПравилаКонвертации>Доверенность                                      </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.Доверенность</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ИнвентаризацияТМЦ</Код>
				<Наименование>Инвентаризация</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ИнвентаризацияТМЦ</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если (Объект.ВидТМЦ=1) или (Объект.ВидТМЦ=3) Тогда
	ИмяПКО = "ИнвентаризацияТМЦ_ТМЦ";
Иначе
	ИмяПКО = "ИнвентаризацияТМЦ_ОС";
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_НачислениеЗП</Код>
				<Наименование>Начисление зарплаты</Наименование>
				<Порядок>350</Порядок>
				<КодПравилаКонвертации>НачислениеЗП_13                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.НачислениеЗП</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>НДФЛ_13 = глПолучитьНалог("НДФЛ");
Ставка13 = НДФЛ_13.Ставка.Получить(КонМесяца(Объект.ДатаДок));
СтавкаНДФЛ = глСтавкаНДФЛ(Объект.ВидНачисления, , КонМесяца(Объект.ДатаДок));
Если СтавкаНДФЛ = Ставка13 Тогда
	ИмяПКО = "НачислениеЗП_13";
Иначе
	Объект.ВыбратьСтроки();
	Пока Объект.ПолучитьСтроку() = 1 Цикл
		
		СведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
		СведенияОДоходах.НоваяКолонка("ДатаПолученияДохода");
		СведенияОДоходах.НоваяКолонка("КодДохода");
		СведенияОДоходах.НоваяКолонка("СуммаДохода");
		СведенияОДоходах.НоваяКолонка("КодВычета");
		СведенияОДоходах.НоваяКолонка("СуммаВычета");
		СведенияОДоходах.НоваяКолонка("СуммаНалогаИсчисленная");
		
		СуммаДохода = Объект.Оклад + Объект.НачисленоРК + Объект.НачисленоСН;		
		СуммаНалога = Окр((СуммаДохода/100*СтавкаНДФЛ),0,1);
		
		СведенияОДоходах.НоваяСтрока();
		СведенияОДоходах.ДатаПолученияДохода    = Объект.ДатаДок;
		СведенияОДоходах.КодДохода              = Объект.ВидНачисления.ВидДохода;
		СведенияОДоходах.СуммаДохода            = СуммаДохода;
		СведенияОДоходах.СуммаНалогаИсчисленная = СуммаНалога;
		СведенияОДоходах.КодВычета              = "";
		СведенияОДоходах.СуммаВычета            = 0;
		
		НДФЛУдержанный = СоздатьОбъект("ТаблицаЗначений");
		НДФЛУдержанный.НоваяКолонка("КодДохода");
		НДФЛУдержанный.НоваяКолонка("МесяцНалоговогоПериода");
		НДФЛУдержанный.НоваяКолонка("Сумма");
		НДФЛУдержанный.НоваяКолонка("СтавкаНалогообложения");
		
		НДФЛУдержанный.НоваяСтрока();
		НДФЛУдержанный.КодДохода              = Объект.ВидНачисления.ВидДохода;
		НДФЛУдержанный.МесяцНалоговогоПериода = НачМесяца(Объект.ДатаДок);
		НДФЛУдержанный.Сумма                  = СуммаНалога;
		НДФЛУдержанный.СтавкаНалогообложения  = СтавкаНДФЛ;
		
		ВхДанные = СоздатьОбъект("СписокЗначений");
		ВхДанные.Установить("Сотрудник", Объект.Сотрудник);
		ВхДанные.Установить("Дата", Объект.ДатаДок);
		ВхДанные.Установить("СведенияОДоходах", СведенияОДоходах);
		ВхДанные.Установить("НДФЛУдержанный", НДФЛУдержанный);
		
		
		ВыгрузитьПоПравилу(Объект, , ВхДанные, , "НачислениеЗП_Прочее");
		
	КонецЦикла;	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ВыплатаЗПКасса</Код>
				<Наименование>Выплата зарплаты</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>ВыплатаЗПКасса                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ВыплатаЗП</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если Объект.ПорядокВыплаты = 0 Тогда
	ИмяПКО = "ВыплатаЗПКасса";
Иначе
	ИмяПКО = "ВыплатаЗПБанк";
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_Счет</Код>
				<Наименование>Счет</Наименование>
				<Порядок>800</Порядок>
				<КодПравилаКонвертации>Счет                                              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.Счет</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_Реализация</Код>
				<Наименование>Реализация</Наименование>
				<Порядок>850</Порядок>
				<КодПравилаКонвертации>Реализация_Продажа                                </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.Реализация</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>
//Проверяем, что строки содержат правильный вид
Параметры.ПараметрыАлгоритмов.Установить("Документ", Объект.ТекущийДокумент());
СписокПКОРеализации = ПолучитьСписокПравилКОРеализации();
Для к = 1 По СписокПКОРеализации.РазмерСписка() Цикл
	ВыгрузитьПоПравилу(Объект.ТекущийДокумент(),,,,СписокПКОРеализации.ПолучитьЗначение(к));
КонецЦикла;
Отказ = 1;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_СчетФактура</Код>
				<Наименование>Счет-фактура выданный</Наименование>
				<Порядок>900</Порядок>
				<КодПравилаКонвертации>СчетФактура                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.СчетФактура</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ИсправлениеСчетаФактуры</Код>
				<Наименование>Исправление счета-фактуры</Наименование>
				<Порядок>950</Порядок>
				<КодПравилаКонвертации>ИсправлениеСчетаФактуры                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ИсправлениеСчетаФактуры</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_КорректировочныйСчетФактура</Код>
				<Наименование>Корректировочный счет-фактура</Наименование>
				<Порядок>1000</Порядок>
				<КодПравилаКонвертации>КорректировочныйСчетФактура                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.КорректировочныйСчетФактура</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПеремещениеМПЗ</Код>
				<Наименование>Перемещение МПЗ</Наименование>
				<Порядок>1050</Порядок>
				<КодПравилаКонвертации>ПеремещениеМПЗ_ТребованиеНакладная                </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПеремещениеМПЗ</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Параметры.ПараметрыАлгоритмов.Установить("Документ", Объект.ТекущийДокумент());
ОпределитьПКОДляДокумента();
</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_НезавершенноеПроизводство</Код>
				<Наименование>Незавершенное производство</Наименование>
				<Порядок>1100</Порядок>
				<КодПравилаКонвертации>НезавершенноеПроизводство                         </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.НезавершенноеПроизводство</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПоступлениеМПЗ</Код>
				<Наименование>Поступление МПЗ</Наименование>
				<Порядок>1150</Порядок>
				<КодПравилаКонвертации>ПоступлениеМПЗ                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПоступлениеМПЗ</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_УслугиСтороннихОрганизаций</Код>
				<Наименование>Услуги сторонних организаций</Наименование>
				<Порядок>1200</Порядок>
				<КодПравилаКонвертации>УслугиСтороннихОрганизаций                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.УслугиСтороннихОрганизаций</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПлатежноеПоручение</Код>
				<Наименование>Платежное поручение</Наименование>
				<Порядок>1250</Порядок>
				<КодПравилаКонвертации>ПлатежноеПоручение                                </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПлатежноеПоручение</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_Выписка</Код>
				<Наименование>Выписка</Наименование>
				<Порядок>1300</Порядок>
				<КодПравилаКонвертации>Выписка_Списание                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.Выписка</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>ВыгрузитьПоПравилу(Объект ,,,,"Выписка_Списание");
ВыгрузитьПоПравилу(Объект ,,,,"Выписка_Поступление");
Отказ = 1;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПриходныйОрдер</Код>
				<Наименование>Приходный кассовый ордер</Наименование>
				<Порядок>1350</Порядок>
				<КодПравилаКонвертации>ПриходныйОрдер                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПриходныйОрдер</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_РасходныйОрдер</Код>
				<Наименование>Расходный кассовый ордер</Наименование>
				<Порядок>1400</Порядок>
				<КодПравилаКонвертации>РасходныйОрдер                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.РасходныйОрдер</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПоступлениеНМА</Код>
				<Наименование>Поступление НМА</Наименование>
				<Порядок>1450</Порядок>
				<КодПравилаКонвертации>ПоступлениеНМА                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПоступлениеНМА</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПринятиеКУчетуНМА</Код>
				<Наименование>Принятие к учету НМА</Наименование>
				<Порядок>1500</Порядок>
				<КодПравилаКонвертации>ПринятиеКУчетуНМА                                 </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПринятиеКУчетуНМА</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПередачаНМА</Код>
				<Наименование>Передача НМА</Наименование>
				<Порядок>1550</Порядок>
				<КодПравилаКонвертации>ПередачаНМА                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПередачаНМА</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПрекращениеСрокаДействияНМА</Код>
				<Наименование>Прекращение срока действия НМА</Наименование>
				<Порядок>1600</Порядок>
				<КодПравилаКонвертации>ПрекращениеСрокаДействияНМА                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПрекращениеСрокаДействияНМА</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ОперацияБух</Код>
				<Наименование>Операции</Наименование>
				<Порядок>1650</Порядок>
				<КодПравилаКонвертации>ОперацияБух                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Операция = СоздатьОбъект("Операция");
Операция.ВыбратьОперации(Параметры.ДатаВводаОстатков, Параметры.ДатаКонцаПериодаВыгрузки);
Пока Операция.ПолучитьОперацию()=1 Цикл
	Если Операция.Документ.Вид() &lt;&gt; "Операция" Тогда
		Продолжить;
	КонецЕсли;
	
	//Проверяем на возможность выгрузки операции
	Если (Операция.ПометкаУдаления ()=1) 
		И (Параметры._ВыгружатьУдаленные=0) Тогда
		Продолжить;
	КонецЕсли;

	Если (Операция.ВключитьПроводки()=1)
		И (Параметры._ВыгружатьПроведенные=0) Тогда
		Продолжить;
	КонецЕсли;
	
	Если (Операция.ВключитьПроводки()=0)
		И (Параметры._ВыгружатьНеПроведенные=0) Тогда
		Продолжить;
	КонецЕсли;
	
	ПроводкиБУ = Параметры.ТаблицаПроводок;
	ПроводкиБУ.УдалитьСтроки();
	
	Операция.ВыбратьПроводки();
	Пока Операция.ПолучитьПроводку()=1 Цикл
		Если ((Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Дебет.Счет)&gt;0) или (ПустоеЗначение(Операция.Дебет.Счет)=1)) и 
			((Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Кредит.Счет)&gt;0)  или (ПустоеЗначение(Операция.Кредит.Счет)=1)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если (Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0)
			ИЛИ (Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Дебет.Счет)&gt;0)
			ИЛИ (ПустоеЗначение(Операция.Дебет.Счет)=1) Тогда
			Дт_БУ = 0;
		Иначе
			Дт_БУ = 1;
		КонецЕсли;
		
		Если (Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Кредит.Счет)&gt;0)
			ИЛИ (Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Кредит.Счет)&gt;0)
			ИЛИ (ПустоеЗначение(Операция.Кредит.Счет)=1) Тогда
			Кт_БУ = 0;
		Иначе
			Кт_БУ = 1;
		КонецЕсли;
		
		Если (Дт_БУ = 0) И (Кт_БУ = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		ПроводкиБУ.НоваяСтрока();
		Если Дт_БУ = 1 Тогда
			ПроводкиБУ.СчетДт = Операция.Дебет.Счет;
			
			ПроводкиБУ.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
			ПроводкиБУ.СубконтоДт.НоваяКолонка("Ключ");
			ПроводкиБУ.СубконтоДт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по ПроводкиБУ.СчетДт.КоличествоСубконто() Цикл
				ПроводкиБУ.СубконтоДт.НоваяСтрока();
				ПроводкиБУ.СубконтоДт.Ключ = ПроводкиБУ.СчетДт.ВидСубконто(НомерСубконто);
				ПроводкиБУ.СубконтоДт.Значение = Операция.Дебет.Субконто(НомерСубконто);
			КонецЦикла;
		КонецЕсли;
		
		Если Кт_БУ = 1 Тогда

			ПроводкиБУ.СчетКт = Операция.Кредит.Счет;
			
			ПроводкиБУ.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
			ПроводкиБУ.СубконтоКт.НоваяКолонка("Ключ");
			ПроводкиБУ.СубконтоКт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по ПроводкиБУ.СчетКт.КоличествоСубконто() Цикл
				ПроводкиБУ.СубконтоКт.НоваяСтрока();
				ПроводкиБУ.СубконтоКт.Ключ = ПроводкиБУ.СчетКт.ВидСубконто(НомерСубконто);
				ПроводкиБУ.СубконтоКт.Значение = Операция.Кредит.Субконто(НомерСубконто);
			КонецЦикла;
		КонецЕсли;
		
		ПроводкиБУ.Сумма = Операция.Сумма;
		ПроводкиБУ.ВалютаДт = Операция.Валюта;
		ПроводкиБУ.ВалютаКт = Операция.Валюта;
		ПроводкиБУ.ВалютнаяСуммаДт = Операция.ВалСумма;
		ПроводкиБУ.ВалютнаяСуммаКт = Операция.ВалСумма;
		ПроводкиБУ.КоличествоДт = Операция.Количество;
		ПроводкиБУ.КоличествоКт = Операция.Количество;
		ПроводкиБУ.Содержание = Операция.СодержаниеПроводки;

	КонецЦикла;
	
	Если ПроводкиБУ.КоличествоСтрок()&gt;0 Тогда
		ВходящиеДанные = СоздатьОбъект("СписокЗначений");
		ВходящиеДанные.Установить("Хозрасчетный", ПроводкиБУ);
		ВходящиеДанные.Установить("ПометкаУдаления", Операция.ПометкаУдаления());
		ВходящиеДанные.Установить("Активность", ?((Операция.ПометкаУдаления()=1) ИЛИ (Операция.ВключитьПроводки() = 0),-1,1));
		ВходящиеДанные.Установить("Содержание", "Операция №"+Операция.Документ.НомерДок+" от "+Операция.ДатаОперации+" (бухгалтерский учет)");
		ВходящиеДанные.Установить("Дата", ПолучитьДатуV8(Операция.ДатаОперации,Операция.ПолучитьВремя()));
		ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	КонецЕсли;

КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>док_Сторно</Код>
				<Наименование>Сторно                                            </Наименование>
				<Порядок>1700</Порядок>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.Сторно</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>ПроводкиБУ = Параметры.ТаблицаПроводок;
ПроводкиБУ.УдалитьСтроки();


////////////////////////////////////////
////Раздел 1
ОчиститьПараметры();

ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ДоходыМинусРасходы = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы;

СчН01 = СчетПоКоду("Н01"); 
СчН03 = СчетПоКоду("Н03");
СчН05 = СчетПоКоду("Н05");                                                        

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСтрок.НоваяКолонка("ДатаНомер", "Строка");
ТаблицаСтрок.НоваяКолонка("Содержание");
ТаблицаСтрок.НоваяКолонка("Графа4");
ТаблицаСтрок.НоваяКолонка("Графа5");
ТаблицаСтрок.НоваяКолонка("Графа6");
ТаблицаСтрок.НоваяКолонка("Графа7");
ТаблицаСтрок.НоваяКолонка("ДоходыЕНВД", "Число");

ТаблУчета = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.НоваяКолонка("Документ", "Документ");
ТаблУчета.НоваяКолонка("НомерСтрокиДок", "Число");
ТаблУчета.НоваяКолонка("ДатаНомерДок", "Строка");
ТаблУчета.НоваяКолонка("СодержОперации");
ТаблУчета.НоваяКолонка("Описание");
ТаблУчета.НоваяКолонка("Доходы");
ТаблУчета.НоваяКолонка("Расходы");  
ТаблУчета.НоваяКолонка("ДоходыБУ");
ТаблУчета.НоваяКолонка("РасходыБУ");
ТаблУчета.НоваяКолонка("ДоходыЕНВД");
ТаблУчета.НоваяКолонка("НомерКвартала", "Число", 1, 0);
ТаблУчета.НоваяКолонка("НДС");
ТаблУчета.НоваяКолонка("Валюта");
ТаблУчета.НоваяКолонка("ВалСумма");
ТаблУчета.НоваяКолонка("Счетчик","Число");


Операция = Объект.Операция;
Операция.ВыбратьПроводки();
Пока Операция.ПолучитьПроводку()=1 Цикл
	Если ((Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Дебет.Счет)&gt;0) или (ПустоеЗначение(Операция.Дебет.Счет)=1)) и 
		((Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Кредит.Счет)&gt;0)  или (ПустоеЗначение(Операция.Кредит.Счет)=1)) Тогда
		Продолжить;
	КонецЕсли;
	
	Если (Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0)
		ИЛИ (Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Дебет.Счет)&gt;0)
		ИЛИ (ПустоеЗначение(Операция.Дебет.Счет)=1) Тогда
		Дт_БУ = 0;
	Иначе
		Дт_БУ = 1;
	КонецЕсли;
	
	Если (Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Кредит.Счет)&gt;0)
		ИЛИ (Параметры.СписокНеПереносящихсяСчетов.НайтиЗначение(Операция.Кредит.Счет)&gt;0)
		ИЛИ (ПустоеЗначение(Операция.Кредит.Счет)=1) Тогда
		Кт_БУ = 0;
	Иначе
		Кт_БУ = 1;
	КонецЕсли;
	
	Если (Дт_БУ &lt;&gt; 0) ИЛИ (Кт_БУ &lt;&gt; 0) Тогда
		ПроводкиБУ.НоваяСтрока();
		Если Дт_БУ = 1 Тогда
			ПроводкиБУ.СчетДт = Операция.Дебет.Счет;
			
			ПроводкиБУ.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
			ПроводкиБУ.СубконтоДт.НоваяКолонка("Ключ");
			ПроводкиБУ.СубконтоДт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по ПроводкиБУ.СчетДт.КоличествоСубконто() Цикл
				ПроводкиБУ.СубконтоДт.НоваяСтрока();
				ПроводкиБУ.СубконтоДт.Ключ = ПроводкиБУ.СчетДт.ВидСубконто(НомерСубконто);
				ПроводкиБУ.СубконтоДт.Значение = Операция.Дебет.Субконто(НомерСубконто);
			КонецЦикла;
		КонецЕсли;
		
		Если Кт_БУ = 1 Тогда

			ПроводкиБУ.СчетКт = Операция.Кредит.Счет;
			
			ПроводкиБУ.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
			ПроводкиБУ.СубконтоКт.НоваяКолонка("Ключ");
			ПроводкиБУ.СубконтоКт.НоваяКолонка("Значение");
			
			Для НомерСубконто = 1 по ПроводкиБУ.СчетКт.КоличествоСубконто() Цикл
				ПроводкиБУ.СубконтоКт.НоваяСтрока();
				ПроводкиБУ.СубконтоКт.Ключ = ПроводкиБУ.СчетКт.ВидСубконто(НомерСубконто);
				ПроводкиБУ.СубконтоКт.Значение = Операция.Кредит.Субконто(НомерСубконто);
			КонецЦикла;
		КонецЕсли;
		
		ПроводкиБУ.Сумма = Операция.Сумма;
		ПроводкиБУ.ВалютаДт = Операция.Валюта;
		ПроводкиБУ.ВалютаКт = Операция.Валюта;
		ПроводкиБУ.ВалютнаяСуммаДт = Операция.ВалСумма;
		ПроводкиБУ.ВалютнаяСуммаКт = Операция.ВалСумма;
		ПроводкиБУ.КоличествоДт = Операция.Количество;
		ПроводкиБУ.КоличествоКт = Операция.Количество;
		ПроводкиБУ.Содержание = Операция.СодержаниеПроводки;
	
	КонецЕсли;

	Если (Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0)
			ИЛИ (Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Кредит.Счет)&gt;0) Тогда
	
		Доходы = 0;
		Расходы = 0; 
		ДоходыБУ = 0;
		РасходыБУ = 0;                                  
		ДоходыЕНВД = 0;
		
		//Не обрабатывать если перемещение между счетами
		//например банк - касса
		
		Если Операция.Кредит.Счет  = СчН01 Тогда
			Доходы = Доходы + Операция.Сумма;
		ИначеЕсли Операция.Кредит.Счет = СчН03 Тогда
			ДоходыБУ = ДоходыБУ + Операция.Сумма;
		ИначеЕсли Операция.Кредит.Счет = СчН05 Тогда
			ДоходыЕНВД = ДоходыЕНВД + Операция.Сумма;
		КонецЕсли;
		
		Если Операция.Дебет.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда
			Расходы = Расходы + Операция.Сумма;
		ИначеЕсли Параметры.СписокСчетовНалоговогоУчетаНУ.НайтиЗначение(Операция.Дебет.Счет)&gt;0 Тогда
			РасходыБУ = РасходыБУ + Операция.Сумма;
		КонецЕсли;

		ТаблУчета.НоваяСтрока();
			
		Параметры.ПараметрыАлгоритмов.Установить("ОперацияКУДиР", Операция);
		Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);
		
		ПолучитьАтрибутыПроводки();
		
		ТаблУчета.Доходы  = Доходы;
		ТаблУчета.Расходы = Расходы;
		ТаблУчета.ДоходыБУ  = ДоходыБУ;
		ТаблУчета.РасходыБУ = РасходыБУ;
		ТаблУчета.ДоходыЕНВД = ДоходыЕНВД;
	КонецЕсли;
	
КонецЦикла;

ТаблУчета.Свернуть("Документ, НомерСтрокиДок, ДатаНомерДок, ДоходыЕНВДПризнак", " СодержОперации, ДоходыБУ, Доходы,  РасходыБУ, Расходы, НДС, ДоходыЕНВД");
ТаблУчета.Сортировать("+Документ, НомерСтрокиДок, ДатаНомерДок");

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаУчетаЗаписейКУДиР", ТаблУчета);
Параметры.ПараметрыАлгоритмов.Установить("ТаблицаСтрокЗаписейКУДиР", ТаблицаСтрок);

ВыгрузитьТаблицуВЗаписиКУДиР();


Если ПроводкиБУ.КоличествоСтрок()&gt;0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Хозрасчетный", ПроводкиБУ);
	ВходящиеДанные.Установить("Содержание", "Проводки документа (бухгалтерский учет) "+строка(Объект));
	ВходящиеДанные.Установить("Дата", ПолучитьДатуV8(Объект.ДатаДок,Объект.ПолучитьВремя()));
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
КонецЕсли;

Отказ = 1;
</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПоступлениеОС</Код>
				<Наименование>Поступление ОС</Наименование>
				<Порядок>1750</Порядок>
				<КодПравилаКонвертации>ПоступлениеОС                                     </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПоступлениеОС</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ВводВЭксплуатациюОС</Код>
				<Наименование>Ввод в эксплуатацию ОС</Наименование>
				<Порядок>1800</Порядок>
				<КодПравилаКонвертации>ВводВЭксплуатациюОС                               </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ВводВЭксплуатациюОС</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_СписаниеОС</Код>
				<Наименование>Спис.ОС</Наименование>
				<Порядок>1850</Порядок>
				<КодПравилаКонвертации>СписаниеОС                                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.СписаниеОС</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПодготовкаКПередачеОС</Код>
				<Наименование>Подготовка к передаче ОС</Наименование>
				<Порядок>1900</Порядок>
				<КодПравилаКонвертации>ПодготовкаКПередачеОС                             </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПодготовкаКПередачеОС</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПередачаОС</Код>
				<Наименование>Передача ОС</Наименование>
				<Порядок>1950</Порядок>
				<КодПравилаКонвертации>ПередачаОС_Продажа                                </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПередачаОС</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если Объект.ПричинаВыбытия = Перечисление.ПричиныВыбытияОС.Продажа Тогда
	ИмяПКО = "ПередачаОС_Продажа";
Иначе 
	ИмяПКО = "ПередачаОС_Списание";
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_РегистрацияОплатОСиНМА</Код>
				<Наименование>Регистрация оплат ОС и НМА</Наименование>
				<Порядок>2000</Порядок>
				<КодПравилаКонвертации>РегистрацияОплатОСиНМА                            </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.РегистрацияОплатОСиНМА</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПриказОПриемеНаРаботу</Код>
				<Наименование>Пр.о приеме</Наименование>
				<Порядок>2050</Порядок>
				<КодПравилаКонвертации>ПриемНаРаботу                                     </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПриказОПриемеНаРаботу</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПриказОКадровыхИзменениях</Код>
				<Наименование>Пр.о кадр.изм.</Наименование>
				<Порядок>2100</Порядок>
				<КодПравилаКонвертации>КадровыйПеревод                                   </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПриказОКадровыхИзменениях</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПриказОбИзмененииОкладов</Код>
				<Наименование>Пр.об изм.окл.</Наименование>
				<Порядок>2150</Порядок>
				<КодПравилаКонвертации>ИзменениеОкладов                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПриказОбИзмененииОкладов</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>ВыгрузитьПоПравилу(Объект ,,,,"ИзменениеОкладов");
Отказ = 1;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>док_ПриказОбУвольнении</Код>
				<Наименование>Пр.об увольн.</Наименование>
				<Порядок>2200</Порядок>
				<КодПравилаКонвертации>Увольнение                                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПриказОбУвольнении</ОбъектВыборки>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>Г_ДополнительныеДанные</Код>
			<Наименование>Дополнительные данные</Наименование>
			<Порядок>200</Порядок>
			<Правило Отключить="false">
				<Код>д_ВыгрузкаИзмененийФактОбъемаПродукцииОС</Код>
				<Наименование>Фактический объем продукции ОС</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТаблицаИзмененийДат = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзмененийДат.НоваяКолонка("ОсновноеСредство");
ТаблицаИзмененийДат.НоваяКолонка("Дата");

//********************************************************************
//фактический объем продукции, работ за месяц


Периодический = СоздатьОбъект("Периодический");
ОС = СоздатьОбъект("Справочник.ОсновныеСредства");
ОС.ВыбратьЭлементы();
Пока ОС.ПолучитьЭлемент()=1 Цикл
	Если ОС.ЭтоГруппа()=1 Тогда
		Продолжить;
	КонецЕсли;
	Периодический.ИспользоватьОбъект("ФактическийОбъемПродукцииРаботЗаМесяц",ОС.ТекущийЭлемент());
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки); 
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаИзмененийДат.НоваяСтрока();
		ТаблицаИзмененийДат.ОсновноеСредство = ОС.ТекущийЭлемент();
		ТаблицаИзмененийДат.Дата = КонМесяца(Периодический.ДатаЗнач);
	КонецЦикла;
КонецЦикла;

ТаблицаИзмененийДат.Свернуть("ОсновноеСредство, Дата","");
ТекДата = "";
ТаблицаИзмененийДат.Сортировать("Дата,ОсновноеСредство");
ТаблицаИзмененийДат.ВыбратьСтроки();
ВД = СоздатьОбъект("СписокЗначений");
ТаблицаОС = СоздатьОбъект("ТаблицаЗначений");
ТаблицаОС.НоваяКолонка("ОсновноеСредство");
ТаблицаОС.НоваяКолонка("Количество");
ВД.Установить("ОС",ТаблицаОС);
Пока ТаблицаИзмененийДат.ПолучитьСтроку()=1 Цикл
	Если ТаблицаИзмененийДат.Дата &lt;&gt; ТекДата Тогда
		Если ТекДата&lt;&gt;"" Тогда
			ВыгрузитьПоПравилу(,,ВД,,"ВыработкаОС");
		КонецЕсли;
		ВД.Установить("Дата",ТаблицаИзмененийДат.Дата);
		ВД.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #");
		ТаблицаОС.УдалитьСтроки();
		ТекДата = ТаблицаИзмененийДат.Дата;
	КонецЕсли;
	ТаблицаОС.НоваяСтрока();
	ТаблицаОС.ОсновноеСредство = ТаблицаИзмененийДат.ОсновноеСредство;
	ТаблицаОС.Количество = ТаблицаИзмененийДат.ОсновноеСредство.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(ТаблицаИзмененийДат.Дата);
КонецЦикла;
Если ТекДата&lt;&gt;"" Тогда
	ВыгрузитьПоПравилу(,,ВД,,"ВыработкаОС");
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ИзменениеСостоянияОС</Код>
				<Наименование>Изменение состояния ОС</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//********************************************************************
//Состояние ОС, начислять амортизацию

ТаблицаИзменений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзменений.НоваяКолонка("ОсновноеСредство");
ТаблицаИзменений.НоваяКолонка("Дата");

Периодический = СоздатьОбъект("Периодический");
ОС = СоздатьОбъект("Справочник.ОсновныеСредства");
ОС.ВыбратьЭлементы();
Пока ОС.ПолучитьЭлемент()=1 Цикл
	Если ОС.ЭтоГруппа()=1 Тогда
		Продолжить;
	КонецЕсли;
	
	Периодический.ИспользоватьОбъект("НачислятьАмортизацию",ОС.ТекущийЭлемент());
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки); 
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		Если ПустоеЗначение(Периодический.ТекущийДокумент())=0 Тогда
			Если (Периодический.ТекущийДокумент().Вид()="ВводВЭксплуатациюОС")
				или (Периодический.ТекущийДокумент().Вид()="СписаниеОС") 
				или (Периодический.ТекущийДокумент().Вид()="ПодготовкаКПередачеОС") 
				или (Периодический.ТекущийДокумент().Вид()="ПередачаОС") Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ТаблицаИзменений.НоваяСтрока();
		ТаблицаИзменений.ОсновноеСредство = ОС.ТекущийЭлемент();
		ТаблицаИзменений.Дата = КонМесяца(Периодический.ДатаЗнач);
	КонецЦикла;
КонецЦикла;

ТаблицаИзменений.Свернуть("ОсновноеСредство,Дата","");
ТаблицаИзменений.Сортировать("Дата,ОсновноеСредство");
ТаблицаИзменений.ВыбратьСтроки();
Пока ТаблицаИзменений.ПолучитьСтроку()=1 Цикл
	ВД = СоздатьОбъект("СписокЗначений");
	ВД.Установить("Дата",НачМесяца(ТаблицаИзменений.Дата)-1);
	ВД.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Основное средство "+ТаблицаИзменений.ОсновноеСредство);
	ВД.Установить("ВлияетНаНачислениеАмортизации",1);
	ВД.Установить("НачислятьАмортизацию",ТаблицаИзменений.ОсновноеСредство.НачислятьАмортизацию.Получить(ТаблицаИзменений.Дата));
	ВД.Установить("ОтражатьВБухгалтерскомУчете",1);
	ВД.Установить("ОтражатьВНалоговомУчете",1);
	ОС = СоздатьОбъект("ТаблицаЗначений");
	ОС.НоваяКолонка("ОсновноеСредство");
	ОС.НоваяСтрока();
	ОС.ОсновноеСредство = ТаблицаИзменений.ОсновноеСредство;
	ВД.Установить("ОС",ОС);
	ВыгрузитьПоПравилу(,,ВД,,"ИзменениеСостоянияОС");
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ИзменениеПараметровНачисленияАмортизацииОС</Код>
				<Наименование>Параметры начисления амортизации ОС</Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//********************************************************************
//СрокПолезногоИспользования, ПервоначальнаяСтоимость, ОбщийОбъемПродукцииРабот, СрокПолезногоИспользованияН

ТаблицаИзменений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзменений.НоваяКолонка("ОсновноеСредство");
ТаблицаИзменений.НоваяКолонка("Дата");

СписокРеквизитов = СоздатьОбъект("СписокЗначений");
СписокРеквизитов.ДобавитьЗначение("СрокПолезногоИспользования");
СписокРеквизитов.ДобавитьЗначение("КоэффициентАмортизации");


Периодический = СоздатьОбъект("Периодический");
ОС = СоздатьОбъект("Справочник.ОсновныеСредства");
ОС.ВыбратьЭлементы();
Пока ОС.ПолучитьЭлемент()=1 Цикл
	Если ОС.ЭтоГруппа()=1 Тогда
		Продолжить;
	КонецЕсли;
	Для НомерРеквизита = 1 по СписокРеквизитов.РазмерСписка() Цикл
		Периодический.ИспользоватьОбъект(СписокРеквизитов.ПолучитьЗначение(НомерРеквизита),ОС.ТекущийЭлемент());
		Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки); 
		Пока Периодический.ПолучитьЗначение()=1 Цикл
			Если ПустоеЗначение(Периодический.ТекущийДокумент())=0 Тогда
				Если (Периодический.ТекущийДокумент().Вид()="ВводВЭксплуатациюОС")
					или (Периодический.ТекущийДокумент().Вид()="СписаниеОС") 
					или (Периодический.ТекущийДокумент().Вид()="ПодготовкаКПередачеОС") 
					или (Периодический.ТекущийДокумент().Вид()="ПередачаОС") Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ТаблицаИзменений.НоваяСтрока();
			ТаблицаИзменений.ОсновноеСредство = ОС.ТекущийЭлемент();
			ТаблицаИзменений.Дата = КонМесяца(Периодический.ДатаЗнач);
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

БИ = СоздатьОбъект("БухгалтерскиеИтоги");

ТаблицаИзменений.Свернуть("ОсновноеСредство,Дата","");
ТаблицаИзменений.Сортировать("Дата,ОсновноеСредство");
ТаблицаИзменений.ВыбратьСтроки();
Пока ТаблицаИзменений.ПолучитьСтроку()=1 Цикл
	ВД = СоздатьОбъект("СписокЗначений");
	ВД.Установить("Дата",НачМесяца(ТаблицаИзменений.Дата)-1);
	ВД.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Основное средство "+ТаблицаИзменений.ОсновноеСредство);
	ВД.Установить("ОтражатьВБухгалтерскомУчете",1);
	ВД.Установить("ОтражатьВНалоговомУчете",1);
	ОС = СоздатьОбъект("ТаблицаЗначений");
	ОС.НоваяКолонка("ОсновноеСредство");
	ОС.НоваяКолонка("КоэффициентУскоренияБУ");
	ОС.НоваяКолонка("КоэффициентАмортизацииБУ");
	ОС.НоваяКолонка("ОбъемПродукцииРаботБУ");
	ОС.НоваяКолонка("ОбъемПродукцииРаботДляВычисленияАмортизацииБУ");
	ОС.НоваяКолонка("СрокПолезногоИспользованияБУ");
	ОС.НоваяКолонка("СрокИспользованияДляВычисленияАмортизацииБУ");
	ОС.НоваяКолонка("ПРДляВычисленияАмортизации");
	ОС.НоваяКолонка("СрокПолезногоИспользованияНУ");
	ОС.НоваяКолонка("СтоимостьДляВычисленияАмортизацииБУ");

	БИ.ПериодМ(ТаблицаИзменений.Дата);
	
	ОС.НоваяСтрока();
	ОС.ОсновноеСредство = ТаблицаИзменений.ОсновноеСредство;
	ОС.КоэффициентУскоренияБУ = ТаблицаИзменений.ОсновноеСредство.КоэффициентУскорения;
	ОС.КоэффициентАмортизацииБУ = ТаблицаИзменений.ОсновноеСредство.КоэффициентАмортизации.Получить(ТаблицаИзменений.Дата);
	ОС.ОбъемПродукцииРаботБУ = ТаблицаИзменений.ОсновноеСредство.ОбщийОбъемПродукцииРабот;
	ОС.ОбъемПродукцииРаботДляВычисленияАмортизацииБУ = ОС.ОбъемПродукцииРаботБУ;
	ОС.СрокПолезногоИспользованияБУ = ТаблицаИзменений.ОсновноеСредство.СрокПолезногоИспользования.Получить(ТаблицаИзменений.Дата);
	ОС.СрокИспользованияДляВычисленияАмортизацииБУ = ОС.СрокПолезногоИспользованияБУ;
	ОС.СтоимостьДляВычисленияАмортизацииБУ = БИ.СНД("01",1,,ТаблицаИзменений.ОсновноеСредство)+БИ.СНД("03",1,,ТаблицаИзменений.ОсновноеСредство);
	ВД.Установить("ОС",ОС);
	ВыгрузитьПоПравилу(,,ВД,,"ИзменениеПараметровНачисленияАмортизацииОС");
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ИзменениеСпособаОтраженияРасходовАмортизацииОС</Код>
				<Наименование>Способы отраж.расходов по амортизации ОС</Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//********************************************************************
//СчетЗатрат, Субконто1, Субконто2, Субконто3, ВидРасхода

ТаблицаИзменений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзменений.НоваяКолонка("ОсновноеСредство");
ТаблицаИзменений.НоваяКолонка("Дата");

СписокРеквизитов = СоздатьОбъект("СписокЗначений");
СписокРеквизитов.ДобавитьЗначение("СчетЗатрат");
СписокРеквизитов.ДобавитьЗначение("Субконто1");
СписокРеквизитов.ДобавитьЗначение("Субконто2");
СписокРеквизитов.ДобавитьЗначение("Субконто3");

Периодический = СоздатьОбъект("Периодический");
ОС = СоздатьОбъект("Справочник.ОсновныеСредства");
ОС.ВыбратьЭлементы();
Пока ОС.ПолучитьЭлемент()=1 Цикл
	Если ОС.ЭтоГруппа()=1 Тогда
		Продолжить;
	КонецЕсли;
	Для НомерРеквизита = 1 по СписокРеквизитов.РазмерСписка() Цикл
		Периодический.ИспользоватьОбъект(СписокРеквизитов.ПолучитьЗначение(НомерРеквизита),ОС.ТекущийЭлемент());
		Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки); 
		Пока Периодический.ПолучитьЗначение()=1 Цикл
			Если ПустоеЗначение(Периодический.ТекущийДокумент())=0 Тогда
				Если (Периодический.ТекущийДокумент().Вид()="ВводВЭксплуатациюОС")
					или (Периодический.ТекущийДокумент().Вид()="СписаниеОС") 
					или (Периодический.ТекущийДокумент().Вид()="ПодготовкаКПередачеОС") 
					или (Периодический.ТекущийДокумент().Вид()="ПередачаОС") Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ТаблицаИзменений.НоваяСтрока();
			ТаблицаИзменений.ОсновноеСредство = ОС.ТекущийЭлемент();
			ТаблицаИзменений.Дата = КонМесяца(Периодический.ДатаЗнач);
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ТаблицаИзменений.Свернуть("ОсновноеСредство,Дата","");
ТаблицаИзменений.Сортировать("Дата,ОсновноеСредство");
ТаблицаИзменений.ВыбратьСтроки();
Пока ТаблицаИзменений.ПолучитьСтроку()=1 Цикл
	ВД = СоздатьОбъект("СписокЗначений");
	ВД.Установить("Дата",НачМесяца(ТаблицаИзменений.Дата)-1);
	ВД.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # Основное средство "+ТаблицаИзменений.ОсновноеСредство);
	ВД.Установить("СпособОтраженияРасходовПоАмортизации",ТаблицаИзменений.ОсновноеСредство);
	ВД.Установить("ДатаСведений",ТаблицаИзменений.Дата);
	ОС = СоздатьОбъект("ТаблицаЗначений");
	ОС.НоваяКолонка("ОсновноеСредство");

	ОС.НоваяСтрока();
	ОС.ОсновноеСредство = ТаблицаИзменений.ОсновноеСредство;
	ВД.Установить("ОС",ОС);
	ВыгрузитьПоПравилу(,,ВД,,"ИзменениеСпособовОтраженияРасходовПоАмортизацииОС");
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ВыгрузкаИзмененийФактОбъемаПродукцииНМА</Код>
				<Наименование>Фактический объем продукции НМА</Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТаблицаИзмененийДат = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзмененийДат.НоваяКолонка("НМА");
ТаблицаИзмененийДат.НоваяКолонка("Дата");

//********************************************************************
//фактический объем продукции, работ за месяц


Периодический = СоздатьОбъект("Периодический");
НМА = СоздатьОбъект("Справочник.НематериальныеАктивы");
НМА.ВыбратьЭлементы();
Пока НМА.ПолучитьЭлемент()=1 Цикл
	Если НМА.ЭтоГруппа()=1 Тогда
		Продолжить;
	КонецЕсли;
	Периодический.ИспользоватьОбъект("ФактическийОбъемПродукцииРаботЗаМесяц",НМА.ТекущийЭлемент());
	Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки); 
	Пока Периодический.ПолучитьЗначение()=1 Цикл
		ТаблицаИзмененийДат.НоваяСтрока();
		ТаблицаИзмененийДат.НМА = НМА.ТекущийЭлемент();
		ТаблицаИзмененийДат.Дата = КонМесяца(Периодический.ДатаЗнач);
	КонецЦикла;
КонецЦикла;

ТаблицаИзмененийДат.Свернуть("НМА, Дата","");
ТекДата = "";
ТаблицаИзмененийДат.Сортировать("Дата,НМА");
ТаблицаИзмененийДат.ВыбратьСтроки();
ВД = СоздатьОбъект("СписокЗначений");
ТаблицаНМА = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНМА.НоваяКолонка("НематериальныйАктив");
ТаблицаНМА.НоваяКолонка("Количество");
ВД.Установить("НМА",ТаблицаНМА);
Пока ТаблицаИзмененийДат.ПолучитьСтроку()=1 Цикл
	Если ТаблицаИзмененийДат.Дата &lt;&gt; ТекДата Тогда
		Если ТекДата&lt;&gt;"" Тогда
			ВыгрузитьПоПравилу(,,ВД,,"ВыработкаНМА");
		КонецЕсли;
		ВД.Установить("Дата",ТаблицаИзмененийДат.Дата);
		ВД.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #");
		ТаблицаНМА.УдалитьСтроки();
		ТекДата = ТаблицаИзмененийДат.Дата;
	КонецЕсли;
	ТаблицаНМА.НоваяСтрока();
	ТаблицаНМА.НематериальныйАктив = ТаблицаИзмененийДат.НМА;
	ТаблицаНМА.Количество = ТаблицаИзмененийДат.НМА.ФактическийОбъемПродукцииРаботЗаМесяц.Получить(ТаблицаИзмененийДат.Дата);
КонецЦикла;
Если ТекДата&lt;&gt;"" Тогда
	ВыгрузитьПоПравилу(,,ВД,,"ВыработкаНМА");
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ИзменениеСпособаОтраженияРасходовАмортизацииНМА</Код>
				<Наименование>Способы отраж.расходов по амортизации НМА</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//********************************************************************
//СчетЗатрат, Субконто1, Субконто2, Субконто3, ВидРасхода

ТаблицаИзменений = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИзменений.НоваяКолонка("НМА");
ТаблицаИзменений.НоваяКолонка("Дата");

СписокРеквизитов = СоздатьОбъект("СписокЗначений");
СписокРеквизитов.ДобавитьЗначение("СчетЗатрат");
СписокРеквизитов.ДобавитьЗначение("Субконто1");
СписокРеквизитов.ДобавитьЗначение("Субконто2");
СписокРеквизитов.ДобавитьЗначение("Субконто3");

Периодический = СоздатьОбъект("Периодический");
НМА = СоздатьОбъект("Справочник.НематериальныеАктивы");
НМА.ВыбратьЭлементы();
Пока НМА.ПолучитьЭлемент()=1 Цикл
	Если НМА.ЭтоГруппа()=1 Тогда
		Продолжить;
	КонецЕсли;
	Для НомерРеквизита = 1 по СписокРеквизитов.РазмерСписка() Цикл
		Периодический.ИспользоватьОбъект(СписокРеквизитов.ПолучитьЗначение(НомерРеквизита),НМА.ТекущийЭлемент());
		Периодический.ВыбратьЗначения(Параметры.ДатаВводаОстатков,Параметры.ДатаКонцаПериодаВыгрузки); 
		Пока Периодический.ПолучитьЗначение()=1 Цикл
			Если ПустоеЗначение(Периодический.ТекущийДокумент())=0 Тогда
				Если (Периодический.ТекущийДокумент().Вид()="ПринятиеКУчетуНМА")
					или (Периодический.ТекущийДокумент().Вид()="ПередачаНМА") 
					или (Периодический.ТекущийДокумент().Вид()="ПрекращениеСрокаДействияНМА") Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ТаблицаИзменений.НоваяСтрока();
			ТаблицаИзменений.НМА = НМА.ТекущийЭлемент();
			ТаблицаИзменений.Дата = КонМесяца(Периодический.ДатаЗнач);
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ТаблицаИзменений.Свернуть("НМА,Дата","");
ТаблицаИзменений.Сортировать("Дата,НМА");
ТаблицаИзменений.ВыбратьСтроки();
Пока ТаблицаИзменений.ПолучитьСтроку()=1 Цикл
	ВД = СоздатьОбъект("СписокЗначений");
	ВД.Установить("Дата",НачМесяца(ТаблицаИзменений.Дата)-1);
	ВД.Установить("Комментарий","# Перенесено из 1С:Бухгалтерии 7.7 (УСН) # НМА "+ТаблицаИзменений.НМА);
	ВД.Установить("СпособОтраженияРасходовПоАмортизации",ТаблицаИзменений.НМА);
	ВД.Установить("ДатаСведений",ТаблицаИзменений.Дата);
	НМА = СоздатьОбъект("ТаблицаЗначений");
	НМА.НоваяКолонка("НематериальныйАктив");

	НМА.НоваяСтрока();
	НМА.НематериальныйАктив = ТаблицаИзменений.НМА;
	ВД.Установить("НМА",НМА);
	ВыгрузитьПоПравилу(,,ВД,,"ИзменениеСпособовОтраженияРасходовПоАмортизацииНМА");
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ПроцентДеятельностиЕНВД</Код>
				<Наименование>Процент деятельности по ЕНВД</Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>СчН01		= СчетПоКоду("Н01");
СчН03		= СчетПоКоду("Н03");
СчН05		= СчетПоКоду("Н05");
Сч90_1		= СчетПоКоду("90.1");
Сч90_2		= СчетПоКоду("90.2");

ДатаДокумента = НачМесяца(Параметры.ДатаВводаОстатков);
Пока ДатаДокумента&lt;Параметры.ДатаКонцаПериодаВыгрузки Цикл
	
	//определяем коэффициент ЕНВД
	Коэфф = 1;
	
	Если (Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = 1) и
	(Константа.ОбъектНалогообложения.Получить(ДатаДокумента) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы) Тогда
		
		БухИтЕНВД = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИтЕНВД.ПериодМ(ДатаДокумента);                                
		
		Если Константа.БазаРаспределенияРасходов = Перечисление.БазаРаспределенияРасходов.ДоходыВсего Тогда
			ДохЕНВД = БухИтЕНВД.КО(СчН05);
			ДохВсего = БухИтЕНВД.КО(СчН03);
			ДохУСН = ДохВсего - ДохЕНВД;                                                                       
		ИначеЕсли Константа.БазаРаспределенияРасходов = Перечисление.БазаРаспределенияРасходов.ДоходыОтражаемыеВНУ Тогда
			ДохЕНВД = БухИтЕНВД.КО(СчН05);
			ДохУСН = БухИтЕНВД.КО(СчН01);
			ДохВсего = ДохУСН + ДохЕНВД;
		ИначеЕсли Константа.БазаРаспределенияРасходов = Перечисление.БазаРаспределенияРасходов.ДоходыОтРеализации Тогда
			ДохЕНВД = БухИтЕНВД.КО(Сч90_2);
			ДохУСН = БухИтЕНВД.КО(Сч90_1);
			ДохВсего = ДохУСН + ДохЕНВД;                                                                    
		КонецЕсли;
		
		Если ДохВсего &lt;&gt;  0 Тогда
			Коэфф = ДохУСН/ДохВсего;
		КонецЕсли;
		
	КонецЕсли;
	
	ВД = СоздатьОбъект("СписокЗначений");
	ВД.Установить("Месяц",ДатаДокумента);
	ВД.Установить("Процент",Коэфф);
	
	ВыгрузитьПоПравилу(,,ВД,,"ВводПроцентаДеятельностиЕНВД");
	
	ДатаДокумента = КонМесяца(ДатаДокумента)+1;
	
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>д_ПорядокПодразделенийДляЗакрытияЗатрат</Код>
				<Наименование>Порядок подразделений для закрытия затрат</Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>ТекДата = Дата(1980,1,31);
Комментарий = "# Перенесено из 1С:Бухгалтерии 7.7 # Установка порядка подразделений на "+Строка(ТекДата);

ПорядокЗакрытия = СоздатьОбъект("ТаблицаЗначений");
ПорядокЗакрытия.НоваяКолонка("Подразделение");
ПорядокЗакрытия.НоваяСтрока();
ПорядокЗакрытия.Подразделение = Параметры.ПодразделениеОрганизации;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.ДобавитьЗначение(ТекДата,"Дата");
ВходящиеДанные.ДобавитьЗначение(Комментарий,"Комментарий");
ВходящиеДанные.ДобавитьЗначение(ПорядокЗакрытия,"ПорядокЗакрытия");
ВыгрузитьПоПравилу(ВходящиеДанные,,ВходящиеДанные,,"УстановкаПорядкаЗакрытияПодразделений");
</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="true">
			<Код>Д_ОборотыПоРазделамУчета</Код>
			<Наименование>Обороты по разделам учета</Наименование>
			<Порядок>250</Порядок>
			<Правило Отключить="true">
				<Код>об_ОсновныеСредства</Код>
				<Наименование>Основные средства</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//****************** Счета 01.1 и 02.1 *************************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("02.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//****************** Счет 01.2 *************************
//остатков быть не должно
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("01.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//****************** Счета 03.1 - 03.4 и 02.1 *************************
// Счет 03.1
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

// Счет 03.2
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

// Счет 03.3
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.3"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

// Счет 03.4
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.4"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетУчетаБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//Счет 02.2
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("02.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 2);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//****************** Счет 03.5 *************************
//остатков быть не должно
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("03.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//****************** Счет 010 *************************
//износ
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("010"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ИмяСчета", "СчетАмортизацииБУ");
Параметры.ПараметрыАлгоритмов.Установить("ДтКт", 1);
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоОСКон();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("010"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();


ТабОс = СоздатьОбъект("ТаблицаЗначений");
ТабОс.НоваяКолонка("ОсновноеСредство");
ТабОс.НоваяКолонка("Период");
ТабОс.НоваяКолонка("ДатаСостояния");

СпрОС = СоздатьОбъект("Справочник.основныеСредства");
СпрОС.ВыбратьЭлементы();
Пока СпрОС.ПолучитьЭлемент() = 1 Цикл
	ТабОс.УдалитьСтроки();
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	Если СпрОС.ДатаВыбытия &lt;&gt; Дата(0) Тогда
		Если (СпрОС.ДатаВыбытия &gt;= Параметры.ДатаНачалаВыгрузкиОборотов)
			И (СпрОС.ДатаВыбытия &lt;= Параметры.ДатаОкончанияВыгрузкиОборотов) Тогда
			ТабОс.НоваяСтрока();
			ТабОс.ОсновноеСредство = СпрОС.ТекущийЭлемент();
			ТабОс.Период = СпрОС.ДатаВыбытия;
			ТабОс.ДатаСостояния = СпрОС.ДатаВыбытия;
			ВходящиеДанные.Установить("Дата", СпрОС.ДатаВыбытия);
			ВходящиеДанные.Установить("ОС", ТабОс);
			ВходящиеДанные.Установить("НачислениеАмортизацииОСБухгалтерскийУчет", ТабОс);
			ВходящиеДанные.Установить("СостоянияОСОрганизаций", ТабОс);
			ВходящиеДанные.Установить("СобытияОСОрганизаций", ТабОс);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "СписаниеОС_Обороты");
		КонецЕсли;
	КонецЕсли;
КонецЦикла;


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ЗаписьКУДиР</Код>
				<Наименование>Записи книги учета</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;

////////////////////////////////////////
////Раздел 1
ОчиститьПараметры();

ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ДоходыМинусРасходы = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы;

СчН01 = СчетПоКоду("Н01"); 
СчН03 = СчетПоКоду("Н03");
СчН05 = СчетПоКоду("Н05");                                                        

ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСтрок.НоваяКолонка("ДатаНомер", "Строка");
ТаблицаСтрок.НоваяКолонка("Содержание");
ТаблицаСтрок.НоваяКолонка("Графа4");
ТаблицаСтрок.НоваяКолонка("Графа5");
ТаблицаСтрок.НоваяКолонка("Графа6");
ТаблицаСтрок.НоваяКолонка("Графа7");
ТаблицаСтрок.НоваяКолонка("ДоходыЕНВД", "Число");

ТаблУчета = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.НоваяКолонка("Документ", "Документ");
ТаблУчета.НоваяКолонка("НомерСтрокиДок", "Число");
ТаблУчета.НоваяКолонка("ДатаНомерДок", "Строка");
ТаблУчета.НоваяКолонка("СодержОперации");
ТаблУчета.НоваяКолонка("Описание");
ТаблУчета.НоваяКолонка("Доходы");
ТаблУчета.НоваяКолонка("Расходы");  
ТаблУчета.НоваяКолонка("ДоходыБУ");
ТаблУчета.НоваяКолонка("РасходыБУ");
ТаблУчета.НоваяКолонка("ДоходыЕНВД");
ТаблУчета.НоваяКолонка("НомерКвартала", "Число", 1, 0);
ТаблУчета.НоваяКолонка("НДС");
ТаблУчета.НоваяКолонка("Валюта");
ТаблУчета.НоваяКолонка("ВалСумма");
ТаблУчета.НоваяКолонка("Счетчик","Число");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ВключатьСубсчета(-1, 0);
БухИт.Опции(1,0);
Если ОбъектНалогообложения = ДоходыМинусРасходы Тогда
	СписокСчетов = "Н01, Н02.1, Н02.2, Н02.4, Н03, Н04, Н05";
Иначе
	СписокСчетов = "Н01, Н03, Н05";
КонецЕсли;

БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаОкончанияВыгрузкиОборотов, СписокСчетов,,,, "Проводка",);

БухИт.ВыбратьПериоды(,,,);
Пока БухИт.ПолучитьПериод(,) = 1 Цикл
	
	Доходы = 0;
	Расходы = 0; 
	ДоходыБУ = 0;
	РасходыБУ = 0;                                  
	ДоходыЕНВД = 0;
	
	//Не обрабатывать если перемещение между счетами
	//например банк - касса
	
	БухИт.ВыбратьСчета(,,,);
	Пока БухИт.ПолучитьСчет(,) = 1 Цикл
		Если БухИт.Счет = СчН01 Тогда
			Доходы = Доходы + БухИт.КО();
		ИначеЕсли БухИт.Счет.Родитель(1) = СчетПоКоду("Н02") Тогда // Н02.1, Н02.2
			Расходы = Расходы + БухИт.ДО();
		ИначеЕсли БухИт.Счет = СчН03 Тогда
			ДоходыБУ = ДоходыБУ + БухИт.КО();
		ИначеЕсли БухИт.Счет = СчН05 Тогда
			ДоходыЕНВД = ДоходыЕНВД + БухИт.КО();
		ИначеЕсли (БухИт.ДО()&lt;&gt;0) Тогда
			РасходыБУ = РасходыБУ + БухИт.ДО();
		КонецЕсли;
	КонецЦикла;
	
	ТаблУчета.НоваяСтрока();
		
	Параметры.ПараметрыАлгоритмов.Установить("ОперацияКУДиР",БухИт.Операция);
	Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);
	
	ПолучитьАтрибутыПроводки();
	
	ТаблУчета.Доходы  = Доходы;
	ТаблУчета.Расходы = Расходы;
	ТаблУчета.ДоходыБУ  = ДоходыБУ;
	ТаблУчета.РасходыБУ = РасходыБУ;
	ТаблУчета.ДоходыЕНВД = ДоходыЕНВД;
	
КонецЦикла;

ТаблУчета.Свернуть("Документ, НомерСтрокиДок, ДатаНомерДок, ДоходыЕНВДПризнак", " СодержОперации, ДоходыБУ, Доходы,  РасходыБУ, Расходы, НДС, ДоходыЕНВД");
ТаблУчета.Сортировать("+Документ, НомерСтрокиДок, ДатаНомерДок");

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаУчетаЗаписейКУДиР", ТаблУчета);
Параметры.ПараметрыАлгоритмов.Установить("ТаблицаСтрокЗаписейКУДиР", ТаблицаСтрок);
Параметры.ПараметрыАлгоритмов.Установить("ВыгрузкаОперации", 0);

ВыгрузитьТаблицуВЗаписиКУДиР();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_НематериальныеАктивы</Код>
				<Наименование>Нематериальные активы и расходы на НИОКР</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета НМА
//*************************************************************************************************

//******************** Счет 04.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("04.1"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоНМАКон();
КонецЕсли;


Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 04.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("04.2"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "ТекущаяСтоимостьБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоНМАКон();
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 05 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("05"));
Параметры.ПараметрыАлгоритмов.Установить("ИмяСуммы", "НакопленнаяАмортизацияБУ");
Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	ВыгрузитьОстаткиПоНМАКон();
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ВнеоборотныеАктивы</Код>
				<Наименование>Внеоборотные активы</Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
//Счета учета оборудования (Счет 07)
//*************************************************************************************************

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("07"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//*************************************************************************************************
//Счета учета внеоборотных активов (Счета 08)
//*************************************************************************************************

//******************** Счет 08.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 08.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.4"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 08.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.5"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 08.8 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("08.8"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_Материалы</Код>
				<Наименование>Материалы</Наименование>
				<Порядок>200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счета учета материалов
//*************************************************************************************************

//******************** Счет 10.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.1"));
//Параметры.СписокСчетовСкладскогоУчета = "10.1";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 10.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.2"));
//Параметры.СписокСчетовСкладскогоУчета = "10.2";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 10.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.3"));
//Параметры.СписокСчетовСкладскогоУчета = "10.3";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


//Параметры.СписокСчетовСкладскогоУчета = "";

//******************** Счет 10.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.11"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 10.12 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.12"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 10.13 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("10.13"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_НЗП</Код>
				<Наименование>Незавершенное производство</Наименование>
				<Порядок>250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета производственных затрат (Счета 20 и 26)
//*************************************************************************************************

//************ Счет 20 ************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("20"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//************ Счет 26 ************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("26"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ДанныеПоНДСпоПоставщикам</Код>
				<Наименование>НДС по приобретенным ценностям</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета НДС
//*************************************************************************************************

//******************** Счет 19.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 19.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("19.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ГотоваяПродукция</Код>
				<Наименование>Готовая продукция</Наименование>
				<Порядок>350</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета готовой продукции
//*************************************************************************************************

//******************** Счет 40 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("40"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 43 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("43"));
//Параметры.СписокСчетовСкладскогоУчета = "43";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


//Параметры.СписокСчетовСкладскогоУчета = "";</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_Товары</Код>
				<Наименование>Товары</Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
//*************************************************************************************************
// Счета учета товаров
//*************************************************************************************************

//******************** Счет 41.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.1"));
//Параметры.СписокСчетовСкладскогоУчета = "41.1";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 41.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.2"));
//Параметры.СписокСчетовСкладскогоУчета = "41.2";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 41.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("41.3"));
//Параметры.СписокСчетовСкладскогоУчета = "41.3";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//Параметры.СписокСчетовСкладскогоУчета = "";

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасходыНаПродажу</Код>
				<Наименование>Расходы на продажу</Наименование>
				<Порядок>450</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета коммерческих расходов
//*************************************************************************************************

//******************** Счет 44.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 44.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 44.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("44.3"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ТоварыОтгруженные</Код>
				<Наименование>Товары отгруженные</Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомиссионером");
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("45"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt;  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_КассаИБанк</Код>
				<Наименование>Денежные средства</Наименование>
				<Порядок>550</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета кассовых операций (Счет 50)
//*************************************************************************************************

//******************** Счет 50.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 50.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("50.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//*************************************************************************************************
// Счета учета банковских операций (Счета 51, 52, 55, 57)
//*************************************************************************************************

//******************** Счет 51 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("51"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 52 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("52"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.2 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.3 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.33 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.4 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 55.44 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("55.44"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 57.1 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 57.11 ********************   
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("57.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

  </ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ФинансовыеВложения</Код>
				<Наименование>Финансовые вложения</Наименование>
				<Порядок>600</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета паев и акций и резервов под них (Счета 58, 59)
//*************************************************************************************************

//******************** Счет 58.1.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();


//******************** Счет 58.1.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.1.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 58.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 58.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 58.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 58.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("58.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 59 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("59"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыСПоставщиками</Код>
				<Наименование>Расчеты с поставщиками и подрядчиками</Наименование>
				<Порядок>650</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
//*************************************************************************************************
// Счет учета расчетов с поставщиками (Счет 60)
//*************************************************************************************************

//******************** Счет 60.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.1"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.1,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 60.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.2"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.2,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 60.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 60.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.4")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 60.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.11"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.11,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 60.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПоставщиком");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("60.22"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "60.22,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыСПокупателями</Код>
				<Наименование>Расчеты с покупателями и заказчиками</Наименование>
				<Порядок>700</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
//*************************************************************************************************
// Счет учета расчетов с покупателями (Счет 62)
//*************************************************************************************************

//******************** Счет 62.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.1"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.1,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.2******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.2"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.2,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.3******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.3"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.3,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.4******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.4"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.4,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.11******************** 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.11"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.11,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.33******************* 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.33"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.33,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");

//******************** Счет 62.44******************* 
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "СПокупателем");
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора", 1);
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("62.44"));
Параметры.СписокСчетовРасчетов = Параметры.СписокСчетовРасчетов + "62.44,";
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
ВыгрузитьОборотыПоСчету();

Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "");



</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыПрочие</Код>
				<Наименование>Прочие расчеты с контрагентами</Наименование>
				<Порядок>750</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с контрагентами по прочим операциям
//*************************************************************************************************

//******************** Счет 63 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("63"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();


//******************** Счет 66.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 66.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 66.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 66.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 66.22 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 66.33 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("66.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 67.1 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 67.2 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 67.3 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 67.11 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 67.22 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 67.33 **********************
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("67.33"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//*************************************************************************************************
// Счета учета расчетов по внутрифирменным расчетам (Счет 79)
//*************************************************************************************************

//******************** Счет 79.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 79.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 79.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("79.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыПоНалогамИСборам</Код>
				<Наименование>Налоги и сборы</Наименование>
				<Порядок>800</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов по налогам и сборам (Счета 68, 69)
//*************************************************************************************************

//******************** Счет 68.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 68.12 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("68.12"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.21 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.21"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.23 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.23"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.24 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.24"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.25 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.25"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.31 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.31"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.41 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.41"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.42 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.42"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.51 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.51"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 69.52 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("69.52"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);



</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыСПерсоналом</Код>
				<Наименование>Расчеты с персоналом</Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета заработной платы и расчетов с персоналом (Счета 70, 73)
//*************************************************************************************************

//******************** Счет 70 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("70"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
НУ_ОстаткиПоЗарплате();
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоЗарплате();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


//******************** Счет 76.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только СР
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 73.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 73.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 73.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 73.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 73.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 73.6 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("73.6"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыСПодотчетнымиЛицами</Код>
				<Наименование>Расчеты с подотчетными лицами</Наименование>
				<Порядок>900</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета расчетов с подотчетными лицами (Счет 71)
//*************************************************************************************************

//******************** Счет 71.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 71.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 71.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 71.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("71.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыСУчредителями</Код>
				<Наименование>Расчеты с учредителями</Наименование>
				<Порядок>950</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с учредителями (Счет 75)
//*************************************************************************************************

//******************** Счет 75.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 75.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 75.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("75.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РасчетыСПрочимиДебиторамиИКредиторами</Код>
				<Наименование>Расчеты с прочими дебиторами и кредиторами</Наименование>
				<Порядок>1000</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//***************************************************************
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора", "Прочее");
//*************************************************************************************************
// Счета учета расчетов с прочими дебиторами и кредиторами (Счет 76)
//*************************************************************************************************

//******************** Счет 76.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.1"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 76.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 76.5 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.6 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.6"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.11 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.11"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 76.22 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.22"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.55 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.55"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.66 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.66"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();
НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

//******************** Счет 76.ЗП ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("76.ЗП"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаНачалаВыгрузкиОборотов &lt;&gt; Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);


</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_Капитал</Код>
				<Наименование>Капитал и резервы</Наименование>
				<Порядок>1050</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Счета учета капитала и резервов (Счета 80, 81, 82, 83, 84, 86)
//*************************************************************************************************

//******************** Счет 80 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("80"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 81 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("81"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 82.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 82.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("82.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 83.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 83.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 83.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("83.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 84.1 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 84.2 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 84.3 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 84.4 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("84.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 86 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("86"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_РБП</Код>
				<Наименование>Расходы будущих периодов</Наименование>
				<Порядок>1100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.2"));  
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.3"));  
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);

Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("97.4"));  
ВыгрузитьОборотыПоСчету();
//На конец периода только НУ
Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 1);
	ВыгрузитьОборотыПоСчету();
КонецЕсли;
Параметры.ПараметрыАлгоритмов.Установить("ОстаткиНаКонец", 0);
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ФинансовыйРезультат</Код>
				<Наименование>Финансовый результат                              </Наименование>
				<Порядок>1150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//************************************************************ 
//Счета у которых есть остатки
//************************************************************

//******************** Счет 94 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("94"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 96 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("96"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();


//******************** Счет 98.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 98.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.2"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 98.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 98.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("98.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 99 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("99"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//************************************************************ 
//Счета у которых есть только обороты
//************************************************************

//******************** Счет 90.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.5 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.5"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.7 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.7"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.8 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.8"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 90.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("90.9"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 91.1 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.1"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 91.2 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.2"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 91.3 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.3"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 91.4 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.4"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();

//******************** Счет 91.9 ******************* 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("91.9"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 1);
ВыгрузитьОборотыПоСчету();
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ЗабалансовыеСчета</Код>
				<Наименование>Забалансовые счета</Наименование>
				<Порядок>1200</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//*************************************************************************************************
// Забалансовые счета 
//*************************************************************************************************

//******************** Счет 001 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("001"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 002 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("002"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 003 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("003"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 004 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("004"));
Параметры.СписокСчетовСкладскогоУчета = Параметры.СписокСчетовСкладскогоУчета + "004,";
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный"); 
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");
ВыгрузитьОборотыПоСчету();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");
//******************** Данные налогового учета **********************
//Данные для НУ
НУ_ОстаткиПо004();
//*******************************************************************
//******************** Счет 007 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("007"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 008 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("008"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 009 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("009"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет 011 ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("011"));  
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет ГТД ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("ГТД")); 
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();

//******************** Счет РВ ******************** 
Параметры.ПараметрыАлгоритмов.Установить("ТекущийСчет", СчетПоКоду("РВ"));
Параметры.ПараметрыАлгоритмов.Установить("Регистр", "Хозрасчетный");
Параметры.ПараметрыАлгоритмов.Установить("ТолькоОбороты", 0);
ВыгрузитьОборотыПоСчету();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="true">
				<Код>об_ДанныеДляРасчетаНалоговСФОТ</Код>
				<Наименование>Данные по расчетам налогов с ФОТ</Наименование>
				<Порядок>1250</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Параметры.ВыгрузитьКадровыеДокументыПрошлыхПериодов = 1;

// Параметры
ДатаВводаОстатков = Параметры.ДатаНачалаВыгрузкиОборотов;
СписокРаботников = Параметры.СписокРаботников;

Если СписокРаботников.КоличествоСтрок() = 0 Тогда
	
	СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
	СпрСотрудники.ВыбратьЭлементы();
	Пока СпрСотрудники.ПолучитьЭлемент() = 1 Цикл
		СписокРаботников.НоваяСтрока();
		СписокРаботников.ФизЛицо = СпрСотрудники.ТекущийЭлемент();		
	КонецЦикла;	
	
КонецЕсли;

СпрВидыДоходов = СоздатьОбъект("Справочник.ВидыДоходов");
Если СпрВидыДоходов.НайтиПоКоду("2000") = 1 Тогда
	КодДохода2000 = СпрВидыДоходов.ТекущийЭлемент();
КонецЕсли;

ВычетыСотрудниковПоНДФЛ = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");

Сотрудники=СоздатьОбъект("СписокЗначений");
СписокРаботников.Выгрузить(Сотрудники,,, "ФизЛицо");
ВсегоСотров = Сотрудники.РазмерСписка();

// Задолженность по оплате труда на момент ввода остатков
// (сальдо счета 70)
Задолженность = СоздатьОбъект("ТаблицаЗначений");
Задолженность.НоваяКолонка("ФизЛицо");
Задолженность.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
Задолженность.НоваяКолонка("Результат", "Число"); 
Задолженность.НоваяКолонка("ПодразделениеОрганизации"); 

// Исчислен НДФЛ
// Сумма должна соответствовать обороту между 70 и 68
// за каждый расчетный период, но только в части ставки 13%
//
ИсчисленныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.НоваяКолонка("ФизЛицо");            
ИсчисленныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("ПериодРегистрации", "Дата");
ИсчисленныйНДФЛ.НоваяКолонка("Сумма", "Число");
ИсчисленныйНДФЛ.НоваяКолонка("КодВычета");
ИсчисленныйНДФЛ.НоваяКолонка("ПримененныйВычет", "Число");

ИсчисленныйНДФЛНакопительный = СоздатьОбъект("ТаблицаЗначений"); 
ИсчисленныйНДФЛ.Выгрузить(ИсчисленныйНДФЛНакопительный);

// Удержанный НДФЛ
// Оборот 70 68 за все расчетные периоды по всем ставкам
УдержанныйНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
УдержанныйНДФЛ.НоваяКолонка("ФизЛицо");            
УдержанныйНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
УдержанныйНДФЛ.НоваяКолонка("СтавкаНалогообложения", "Строка");
УдержанныйНДФЛ.НоваяКолонка("Сумма", "Число");
УдержанныйНДФЛ.НоваяКолонка("КодДохода");

// Доходы НДФЛ за каждый месяц налогового периода
// Сюда же надо вписать движения, сторнирующие доходы, которые отразятся при вводе задолженности
// Сторнировать доходы надо по коду 2000, а затем отразить их с настоящим кодом.
ДоходыНДФЛ = СоздатьОбъект("ТаблицаЗначений");
ДоходыНДФЛ.НоваяКолонка("ФизЛицо");
ДоходыНДФЛ.НоваяКолонка("МесяцНалоговогоПериода", "Дата");
ДоходыНДФЛ.НоваяКолонка("ДатаПолученияДохода", "Дата"); 
ДоходыНДФЛ.НоваяКолонка("КодДохода");
ДоходыНДФЛ.НоваяКолонка("СуммаДохода", "Число");
ДоходыНДФЛ.НоваяКолонка("КодВычета");
ДоходыНДФЛ.НоваяКолонка("СуммаВычета", "Число");
ДоходыНДФЛ.НоваяКолонка("СуммаНалогаИсчисленная", "Число");

// Доходы по страховым взносам за каждый месяц налогового периода
ДоходыСВЗ = СоздатьОбъект("ТаблицаЗначений");
ДоходыСВЗ.НоваяКолонка("ФизЛицо");
ДоходыСВЗ.НоваяКолонка("Инвалид", "Число");        
ДоходыСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
ДоходыСВЗ.НоваяКолонка("ВидДохода", "Строка"); 
ДоходыСВЗ.НоваяКолонка("Результат", "Число");
ДоходыСВЗ.НоваяКолонка("Скидка", "Число"); 
ДоходыСВЗ.НоваяКолонка("ОблагаетсяЕНВД", "Число");        

// Начисленные страховые взносы за каждый месяц налогового периода
НачисленныйСВЗ = СоздатьОбъект("ТаблицаЗначений");
НачисленныйСВЗ.НоваяКолонка("ФизЛицо");
НачисленныйСВЗ.НоваяКолонка("МесяцРасчетногоПериода", "Дата");
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительная", "Число"); 
НачисленныйСВЗ.НоваяКолонка("ПФРНакопительнаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховая", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФРСтраховаяЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ПФР", "Число"); 
НачисленныйСВЗ.НоваяКолонка("ПФРЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ТФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ТФОМСЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ФФОМС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФФОМСЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ФСС", "Число");
НачисленныйСВЗ.НоваяКолонка("ФССЕНВД", "Число");
НачисленныйСВЗ.НоваяКолонка("ФССНесчастныеСлучаи", "Число");

// Заполнение таблиц
Год = ДатаГод(Параметры.ДатаНачалаВыгрузкиОборотов);
Месяц = ДатаМесяц(Параметры.ДатаНачалаВыгрузкиОборотов);

Сч84 = СчетПоКоду("84");
Сч99 = СчетПоКоду("99");
Сч69_1 = СчетПоКоду("69.1");
Сч68_1 = СчетПоКоду("68.1");
СчДФЛ_2 = СчетПоКоду("ДФЛ.01");

СписокКолонок = СоздатьОбъект("СписокЗначений");

НДФЛ_13 = глПолучитьНалог("НДФЛ");
Ставка13 = НДФЛ_13.Ставка.Получить(КонГода(Параметры.ДатаНачалаВыгрузкиОборотов));

ПервыйМесяц = 1;
ПоследнийМесяц = Месяц;
НачалоГода = НачГода(Параметры.ДатаНачалаВыгрузкиОборотов);
КонецПериодаОсмотра = Параметры.ДатаОкончанияВыгрузкиОборотов;

// перебираем сотрудников
БухИтДФЛ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДФЛ.Опции(1, 1);
БухИтДФЛ.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИтДФЛ.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
БухИтДФЛ.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "70, ДФЛ.01",,, 2, "Месяц");

БухИт70 = СоздатьОбъект("БухгалтерскиеИтоги"); // для отбора корреспонденций 70-ого счета
БухИт70.ВключатьСубсчета(, -1);
БухИт70.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИт70.ИспользоватьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
БухИт70.ИспользоватьКорСубконто();
БухИт70.ВыполнитьЗапрос(НачалоГода,КонецПериодаОсмотра, "70",,, 3, "Месяц");

Для СчСотров = 1 По ВсегоСотров Цикл
	
	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	ВаловойДоход_СНачалаГода = ?(ДатаГод(глДатаПриема(Сотрудник))=ДатаГод(ДатаВводаОстатков), Сотрудник.ВаловойДоход_СНачалаГода, 0);
	ОблагаетсяПоСт13 = 0;
	
	ДоходОблагаемыйНДФЛ_СНачалаГода = 0;
	ДоходОблагаемыйНДФЛ_СНачалаГода_Пред = 0;
	
	// Начальные данные для расчета налогов
	Если (ДатаГод(Сотрудник.ДатаПриема) = ДатаГод(ДатаВводаОстатков)) и (Сотрудник.ДатаПриема &lt;&gt; Дата(0)) Тогда
		Для НомерМесяца = 1 по ДатаМесяц(Сотрудник.ДатаПриема) Цикл
			ДатаМесяца = КонМесяца(Дата(Год, НомерМесяца, 1));
			ОблагаетсяФСС = Сотрудник.ДоходОблагаемыйФСС_СНачалаГода;
			
			Инвалид = ?((Сотрудник.Инвалид.Получить(ДатаМесяца) = 1), 1, 0);
		КонецЦикла;
		
		ДатаПериода = НачМесяца(Сотрудник.ДатаПриема);
		
		Если Сотрудник.НачисленныйНДФЛ_СНачалаГода &lt;&gt; 0 Тогда
			ИсчисленныйНДФЛ.НоваяСтрока();
			ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
			ИсчисленныйНДФЛ.МесяцНалоговогоПериода = ДатаПериода;
			ИсчисленныйНДФЛ.Сумма = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
			
			УдержанныйНДФЛ.НоваяСтрока(); 
			УдержанныйНДФЛ.ФизЛицо = Сотрудник;            
			УдержанныйНДФЛ.КодДохода = КодДохода2000;
			УдержанныйНДФЛ.МесяцНалоговогоПериода = ДатаПериода;			
			УдержанныйНДФЛ.СтавкаНалогообложения = "Ставка13";
			УдержанныйНДФЛ.Сумма = Сотрудник.НачисленныйНДФЛ_СНачалаГода;
		КонецЕсли;
		
		Если (Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода &lt;&gt; 0) или (Сотрудник.НачисленныйНДФЛ_СНачалаГода &lt;&gt; 0) Тогда
			ДоходыНДФЛ.НоваяСтрока(); 
			ДоходыНДФЛ.ФизЛицо = Сотрудник;
			ДоходыНДФЛ.МесяцНалоговогоПериода = ДатаПериода;			
			ДоходыНДФЛ.ДатаПолученияДохода = ДатаПериода;
			ДоходыНДФЛ.КодДохода = КодДохода2000;
			ДоходыНДФЛ.СуммаДохода = Сотрудник.ДоходОблагаемыйНДФЛ_СНачалаГода;
			ДоходыНДФЛ.КодВычета = "";
			ДоходыНДФЛ.СуммаВычета = 0;
			ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	ДоходыВычетыНалогиСотрудников = "";
	глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников, Сотрудник, КонецПериодаОсмотра,,,1);
	Месяц = ДатаМесяц(КонецПериодаОсмотра);		
	Если Месяц &gt;=1 Тогда
		Для НомерМесяца = 1 По Месяц Цикл
			СтрокаИтоговойТаблицы=""; 
			ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник)+глДополнитьСтроку(НомерМесяца,2),СтрокаИтоговойТаблицы,1);     
			Если СтрокаИтоговойТаблицы &lt;&gt; 0 Тогда
				
				ДоходТекМесяца = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2)
				+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,15)
				+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28))
				- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,2)
				+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,15)
				+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28)));
				
				Если ДоходТекМесяца &lt;&gt; 0 Тогда
					
					ШагИнвалид = 13;
					ШагЕНВД = 26;
					Для НомерКолонки = 2 По 14 Цикл
						
						ДоходыСВЗ.НоваяСтрока();
						ДоходыСВЗ.ФизЛицо = Сотрудник;
						ДоходыСВЗ.Инвалид = Сотрудник.Инвалид.Получить(КонМесяца(Дата(Год, НомерМесяца, 1)));
						ДоходыСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);
						ДоходЕНВДТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,28) - ?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,28));
						ДоходыСВЗ.ОблагаетсяЕНВД = ?(ДоходЕНВДТекМесяц &lt;&gt; 0, 1, 0);
						
						Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
							ДоходыСВЗ.Скидка = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
							+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
							+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
							- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
							+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
							+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
						Иначе
							ДоходыСВЗ.Результат = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки)
							+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагИнвалид)
							+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки+ШагЕНВД))
							- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки)
							+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагИнвалид)
							+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки+ШагЕНВД)));
						КонецЕсли;
						
						Если НомерКолонки = 2 Тогда								
							ДоходыСВЗ.ВидДохода = "ОблагаетсяЦеликом";
							Для НомВычКолонок = 3 По 14 Цикл
								Если (НомерКолонки = 9)  ИЛИ (НомерКолонки = 11) ИЛИ (НомерКолонки = 14) Тогда
								Иначе
									ДоходыСВЗ.Результат =  ДоходыСВЗ.Результат - ((ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок)
									+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагИнвалид)
									+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомВычКолонок+ШагЕНВД))
									- ?(НомерМесяца = 1, 0,(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок)
									+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагИнвалид)
									+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомВычКолонок+ШагЕНВД))));
								КонецЕсли;
							КонецЦикла;																
						КонецЕсли;
						
						Если (ДоходыСВЗ.Результат = 0) И (НомерКолонки &lt;&gt; 2) Тогда
							ДоходыСВЗ.УдалитьСтроку();
							Продолжить;
						КонецЕсли;
						
						Если НомерКолонки = 3 Тогда
							ДоходыСВЗ.ВидДохода = "НеЯвляетсяОбъектом";								
						ИначеЕсли НомерКолонки = 4 Тогда
							ДоходыСВЗ.ВидДохода = "НеОблагаетсяЦеликом";
						ИначеЕсли НомерКолонки = 5 Тогда
							ДоходыСВЗ.ВидДохода = "ПособияЗаСчетФСС";
						ИначеЕсли НомерКолонки = 6 Тогда
							ДоходыСВЗ.ВидДохода = "ДенежноеДовольствиеВоеннослужащих";
						ИначеЕсли НомерКолонки = 7 Тогда
							ДоходыСВЗ.ВидДохода = "ДенежноеСодержаниеПрокуроров";
						ИначеЕсли (НомерКолонки = 8) ИЛИ (НомерКолонки = 9) Тогда
							ДоходыСВЗ.ВидДохода = "МатпомощьПриРожденииРебенка";										
						ИначеЕсли (НомерКолонки = 10) ИЛИ (НомерКолонки = 11)  Тогда
							ДоходыСВЗ.ВидДохода = "Матпомощь";										
						ИначеЕсли НомерКолонки = 12 Тогда
							ДоходыСВЗ.ВидДохода = "ДоговорыГПХ";
						ИначеЕсли (НомерКолонки = 13) ИЛИ (НомерКолонки = 14) Тогда
							ДоходыСВЗ.ВидДохода = "АвторскиеОткрытия";
						КонецЕсли;
					КонецЦикла;
					
					
					НачисленныйСВЗ.НоваяСтрока();
					НачисленныйСВЗ.ФизЛицо = Сотрудник;
					НачисленныйСВЗ.МесяцРасчетногоПериода = Дата(ДатаГод(КонецПериодаОсмотра),НомерМесяца,1);							
					
					НачисленныйСВЗ.ФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФССИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФСС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФССИнвалид"));							
					
					НачисленныйСВЗ.ФССЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФССЕНВД")-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФССЕНВД"));							
					
					НачисленныйСВЗ.ФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМС") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМСИнвалид"));					
					
					НачисленныйСВЗ.ФФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоФФОМСЕНВД")-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоФФОМСЕНВД"));					
					
					Если ДатаГод(КонецПериодаОсмотра) &lt; 2014 Тогда
						НачисленныйСВЗ.ПФРНакопительная = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакИнвалид")
						-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНак") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакИнвалид"));
						
						НачисленныйСВЗ.ПФРНакопительнаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРНакЕНВД")
						-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРНакЕНВД"));
						
						НачисленныйСВЗ.ПФРСтраховая = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахИнвалид")
						-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрах") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахИнвалид"));
						
						НачисленныйСВЗ.ПФРСтраховаяЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРСтрахЕНВД")
						-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРСтрахЕНВД"));
					Иначе
						НачисленныйСВЗ.ПФР = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФР") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФР")
						-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФР") + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРИнвалид"));
						
						НачисленныйСВЗ.ПФРЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"ИсчисленоПФРЕНВД")
						-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"ИсчисленоПФРЕНВД"));
					КонецЕсли;
					
					НачисленныйСВЗ.ФССНесчастныеСлучаи = (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"БазаФСС_НС")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"БазаФСС_НС")))
					+(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"БазаФСС_НСЕНВД")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"БазаФСС_НСЕНВД")))
					+(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"БазаФСС_НСИнвалид")
					-?(НомерМесяца = 1, 0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,"БазаФСС_НСИнвалид")));
					
					Если ДатаГод(КонецПериодаОсмотра) &lt; 2014 Тогда
						Если (НачисленныйСВЗ.ФСС + НачисленныйСВЗ.ФССЕНВД + НачисленныйСВЗ.ФФОМС + НачисленныйСВЗ.ФФОМСЕНВД
							+ НачисленныйСВЗ.ТФОМС + НачисленныйСВЗ.ТФОМСЕНВД + НачисленныйСВЗ.ПФРНакопительная 
							+ НачисленныйСВЗ.ПФРНакопительнаяЕНВД + НачисленныйСВЗ.ПФРСтраховая + НачисленныйСВЗ.ПФРСтраховаяЕНВД
							+ НачисленныйСВЗ.ФССНесчастныеСлучаи) = 0 Тогда
							НачисленныйСВЗ.УдалитьСтроку();
						КонецЕсли;
					Иначе
						Если (НачисленныйСВЗ.ФСС + НачисленныйСВЗ.ФССЕНВД + НачисленныйСВЗ.ФФОМС + НачисленныйСВЗ.ФФОМСЕНВД
							+ НачисленныйСВЗ.ТФОМС + НачисленныйСВЗ.ТФОМСЕНВД + НачисленныйСВЗ.ПФР + НачисленныйСВЗ.ПФРЕНВД
							+ НачисленныйСВЗ.ФССНесчастныеСлучаи) = 0 Тогда
							НачисленныйСВЗ.УдалитьСтроку();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
	
	// Соберем доходы из бухгалтерских итогов.
	БухИтДФЛ.ВыбратьПериоды(1);
	Пока БухИтДФЛ.ПолучитьПериод() = 1 Цикл
		
		УдержанныйНДФЛпоСт13 = 0;
		
		Если БухИтДФЛ.ПолучитьСубконто(ВидыСубконто.Сотрудники,, Сотрудник) = 1 Тогда
			Период = ДатаМесяц(БухИтДФЛ.КонДата);
			ДатаМесяца=БухИтДФЛ.КонДата;
			Инвалид = ?((Сотрудник.Инвалид.Получить(ДатаМесяца) = 1), 1, 0);
			
			БухИтДФЛ.ВыбратьСубконто(ВидыСубконто.ВидыНачисленийВыплат);
			Пока БухИтДФЛ.ПолучитьСубконто(ВидыСубконто.ВидыНачисленийВыплат) = 1 Цикл
				
				ВР = БухИтДФЛ.Субконто(2);
				ДатаДохода = БухИтДФЛ.КонДата;
				МесяцДохода = ДатаМесяц(ДатаДохода);
				
				СтавкаНДФЛ = глСтавкаНДФЛ(ВР,, ДатаДохода);
				СтрСтавкаНДФЛ = "Ставка" + Формат(СтавкаНДФЛ,"Ч(0)2");
				Если СтавкаНДФЛ = Ставка13 Тогда
					ОблагаетсяПоСт13 = ОблагаетсяПоСт13 + БухИтДФЛ.КО(); // для проверки права на вычеты
				КонецЕсли;
				
				СуммаРез = БухИтДФЛ.КО();
				СуммаПриходящаясяНаЕНВД = 0;
				
				СуммаИзПрибыли = 0;
				СуммаИзПрибылиНаЕНВД = 0;
				
				РасходыНаСтрахование = 0;
				РасходыНаСтрахованиеНаЕНВД = 0;
				
				ПрочиеЛьготы = 0;
				ПрочиеЛьготыНаЕНВД = 0;
				
				СуммаПоДоговорамГПХ = 0;
				СуммаПоДоговорамГПХнаЕНВД = 0;
				
				УдержанныйНДФЛпоВсемСтавкам = 0;
				
				Если СуммаРез &lt;&gt; 0 Тогда
					Если БухИт70.ПолучитьСубконто(1,, Сотрудник) = 1 Тогда
						Если БухИт70.ПолучитьСубконто(2,, ВР) = 1 Тогда
							Если БухИт70.ПолучитьПериод(, БухИтДФЛ.НачДата) = 1 Тогда
								
								БухИт70.ВыбратьКорСчета();
								Пока БухИт70.ПолучитьКорСчет() = 1 Цикл
									Если БухИт70.КорСчет.ПринадлежитГруппе(Сч84) = 1 Тогда
										СуммаИзПрибыли = СуммаИзПрибыли + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет.ПринадлежитГруппе(Сч99) = 1 Тогда
										СуммаИзПрибыли = СуммаИзПрибыли + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет = Сч69_1 Тогда
										РасходыНаСтрахование = РасходыНаСтрахование + БухИт70.КорКО();
										
									ИначеЕсли БухИт70.КорСчет = Сч68_1 Тогда
										УдержанныйНДФЛпоВсемСтавкам = УдержанныйНДФЛпоВсемСтавкам + БухИт70.КорДО();
										Если СтавкаНДФЛ = Ставка13 Тогда
											УдержанныйНДФЛпоСт13 = УдержанныйНДФЛпоСт13 + БухИт70.КорДО();
										КонецЕсли;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ОблагаетсяНДФЛ = СуммаРез;
					КодДохода = "";
					КодВычета = "";
					ВидДохода = ВР.ВидДохода;
					Если ПустоеЗначение(ВидДохода) = 0 Тогда
						
						КодДохода = ВидДохода;
						
						Если ВидДохода.ВидВычета.Выбран() = 1 Тогда
							КодВычета = ВидДохода.ВидВычета;
						КонецЕсли;
					КонецЕсли;
					
					Если СуммаИзПрибыли &lt;&gt; 0 Тогда
						СуммаИзПрибылиНаЕНВД = ?(СуммаРез = 0, 0, СуммаПриходящаясяНаЕНВД / СуммаРез) * СуммаИзПрибыли;
					КонецЕсли;
					
					Если РасходыНаСтрахование &lt;&gt; 0 Тогда
						РасходыНаСтрахованиеНаЕНВД = ?(СуммаРез = 0, 0, СуммаПриходящаясяНаЕНВД / СуммаРез) * РасходыНаСтрахование;
					КонецЕсли;
					
					Если (ВР.ОблагаетсяПФР = 0) Тогда
						ПрочиеЛьготыНаЕНВД = СуммаПриходящаясяНаЕНВД - СуммаИзПрибылиНаЕНВД - РасходыНаСтрахованиеНаЕНВД;
						ПрочиеЛьготы = СуммаРез - СуммаИзПрибыли - РасходыНаСтрахование;
						
						СуммаПриходящаясяНаЕНВД = 0;
						СуммаРез = 0;
					Иначе
						СуммаРез = СуммаРез - СуммаИзПрибыли - РасходыНаСтрахование;
						СуммаПриходящаясяНаЕНВД = СуммаПриходящаясяНаЕНВД - СуммаИзПрибылиНаЕНВД - РасходыНаСтрахованиеНаЕНВД;
					КонецЕсли;
					
					Если УдержанныйНДФЛпоВсемСтавкам &lt;&gt; 0  Тогда
						УдержанныйНДФЛ.НоваяСтрока(); 
						УдержанныйНДФЛ.ФизЛицо = Сотрудник;            
						УдержанныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;						
						УдержанныйНДФЛ.СтавкаНалогообложения = СтрСтавкаНДФЛ;
						УдержанныйНДФЛ.Сумма = УдержанныйНДФЛпоВсемСтавкам;
						Если КодДохода &lt;&gt; "" Тогда
							УдержанныйНДФЛ.КодДохода = КодДохода;	
						Иначе
							УдержанныйНДФЛ.КодДохода = КодДохода2000;
						КонецЕсли;
					КонецЕсли;
					
					Если Число(КодДохода) &lt;&gt; 0 Тогда
						ДоходыНДФЛ.НоваяСтрока(); 
						ДоходыНДФЛ.ФизЛицо = Сотрудник;
						ДоходыНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;
						ДоходыНДФЛ.ДатаПолученияДохода = БухИтДФЛ.НачДата;						
						ДоходыНДФЛ.КодДохода = КодДохода;
						ДоходыНДФЛ.СуммаДохода = ОблагаетсяНДФЛ;
						ДоходыНДФЛ.КодВычета = КодВычета;
						ДоходыНДФЛ.СуммаВычета = 0;
						ДоходыНДФЛ.СуммаНалогаИсчисленная = 0;
						
						Если КодДохода = КодДохода2000 Тогда
							ДоходОблагаемыйНДФЛ_СНачалаГода = ДоходОблагаемыйНДФЛ_СНачалаГода + ОблагаетсяНДФЛ;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			СписокКолонок.УдалитьВсе();
			СписокКолонок.Установить("Объект", Сотрудник);
			СписокКолонок.Установить("Регистрация", БухИтДФЛ.КонДата);
			
		КонецЕсли;
		
		// Примененные вычеты
		Если глСотрудникЧислитсяРаботающим(Сотрудник, БухИтДФЛ.КонДата) = 1 Тогда
			ВычетыСотрудниковПоНДФЛ.ИспользоватьВладельца(Сотрудник);
			ВычетыСотрудниковПоНДФЛ.ВыбратьЭлементы();
			Пока ВычетыСотрудниковПоНДФЛ.ПолучитьЭлемент() = 1 Цикл
				
				Вычеты = 0;
				
				Если (Лев(ВычетыСотрудниковпоНДФЛ.ВидВычета.КодДляОтчетности2009, 1)) &lt;&gt; "1" Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВычетыСотрудниковПоНДФЛ.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				ВычетПредоставлялся = 0;
				Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаНачала) = 1 Тогда
					ВычетПредоставлялся = 0;							
				Иначе
					Если ВычетыСотрудниковПоНДФЛ.ДатаНачала &gt; БухИтДФЛ.КонДата Тогда
						ВычетПредоставлялся = 0;
					Иначе
						Если ПустоеЗначение(ВычетыСотрудниковПоНДФЛ.ДатаОкончания) = 1 Тогда
							ВычетПредоставлялся = 1;
						Иначе
							Если ВычетыСотрудниковПоНДФЛ.ДатаОкончания &lt; НачМесяца(БухИтДФЛ.КонДата) Тогда
								ВычетПредоставлялся = 0;
							Иначе
								ВычетПредоставлялся = 1;
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВычетПредоставлялся = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				РазмерВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета.Сумма.Получить(БухИтДФЛ.КонДата);
				ПределДоходов = ВычетыСотрудниковПоНДФЛ.ВидВычета.ПределДоходов.Получить(БухИтДФЛ.КонДата);
				
				Если ПределДоходов &gt; 0 Тогда							
					Вычеты = РазмерВычета*?((ДоходОблагаемыйНДФЛ_СНачалаГода+ВаловойДоход_СНачалаГода)&lt;=ПределДоходов,1,0);
				Иначе
					Вычеты = РазмерВычета;
				КонецЕсли;
				
				Если (Вычеты &lt;&gt; 0) Тогда
					Если ДоходОблагаемыйНДФЛ_СНачалаГода_Пред+ВаловойДоход_СНачалаГода &lt;&gt; ДоходОблагаемыйНДФЛ_СНачалаГода+ВаловойДоход_СНачалаГода Тогда // нет начислений - накапливаем вычеты
						ИсчисленныйНДФЛ.НоваяСтрока();
						ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
						ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;						
						ИсчисленныйНДФЛ.Сумма = 0;
						ИсчисленныйНДФЛ.ПримененныйВычет = Вычеты;
						ИсчисленныйНДФЛ.КодВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета;											
						ИсчисленныйНДФЛНакопительный.ВыбратьСтроки();
						Пока ИсчисленныйНДФЛНакопительный.ПолучитьСтроку() = 1 Цикл
							Если Сотрудник = ИсчисленныйНДФЛНакопительный.ФизЛицо тогда
								ИсчисленныйНДФЛ.НоваяСтрока();
								ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
								ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;								
								ИсчисленныйНДФЛ.Сумма = 0;
								ИсчисленныйНДФЛ.ПримененныйВычет = ИсчисленныйНДФЛНакопительный.ПримененныйВычет;
								ИсчисленныйНДФЛ.КодВычета = ИсчисленныйНДФЛНакопительный.КодВычета;					
								ИсчисленныйНДФЛНакопительный.УдалитьСтроки();
							КонецЕсли;
						КонецЦикла;
					Иначе
						ИсчисленныйНДФЛНакопительный.НоваяСтрока();
						ИсчисленныйНДФЛНакопительный.ФизЛицо = Сотрудник;            
						ИсчисленныйНДФЛНакопительный.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;						
						ИсчисленныйНДФЛНакопительный.Сумма = 0;
						ИсчисленныйНДФЛНакопительный.ПримененныйВычет = Вычеты;
						ИсчисленныйНДФЛНакопительный.КодВычета = ВычетыСотрудниковПоНДФЛ.ВидВычета;					
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ДоходОблагаемыйНДФЛ_СНачалаГода_Пред = ДоходОблагаемыйНДФЛ_СНачалаГода;
			
			Если (УдержанныйНДФЛпоСт13 &lt;&gt; 0) Тогда
				ИсчисленныйНДФЛ.НоваяСтрока();
				ИсчисленныйНДФЛ.ФизЛицо = Сотрудник;            
				ИсчисленныйНДФЛ.МесяцНалоговогоПериода = БухИтДФЛ.НачДата;				
				ИсчисленныйНДФЛ.Сумма = УдержанныйНДФЛпоСт13;
				ИсчисленныйНДФЛ.ПримененныйВычет = 0;
				ИсчисленныйНДФЛ.КодВычета = "";
			КонецЕсли;		
		КонецЕсли;
	КонецЦикла;
	ИсчисленныйНДФЛНакопительный.УдалитьСтроки();
КонецЦикла;

ДоходыНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,ДатаПолученияДохода,КодДохода,КодВычета", "СуммаДохода,СуммаВычета,СуммаНалогаИсчисленная");
ИсчисленныйНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,КодВычета","Сумма,ПримененныйВычет");
УдержанныйНДФЛ.Свернуть("ФизЛицо,МесяцНалоговогоПериода,СтавкаНалогообложения, КодДохода","Сумма");

СведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по ДоходыНДФЛ.КоличествоКолонок() Цикл
	СведенияОДоходах.НоваяКолонка(ДоходыНДФЛ.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

НДФЛИсчисленныйПоСтавке13 = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по ИсчисленныйНДФЛ.КоличествоКолонок() Цикл
	НДФЛИсчисленныйПоСтавке13.НоваяКолонка(ИсчисленныйНДФЛ.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

ПредоставленныеВычеты = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по ИсчисленныйНДФЛ.КоличествоКолонок() Цикл
	ПредоставленныеВычеты.НоваяКолонка(ИсчисленныйНДФЛ.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

НДФЛУдержанный = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по УдержанныйНДФЛ.КоличествоКолонок() Цикл
	НДФЛУдержанный.НоваяКолонка(УдержанныйНДФЛ.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;
НДФЛУдержанный.НоваяКолонка("Ставка");

ДоходыНДФЛ.ВыбратьСтроки();
ТекущийСотрудник = "";
Пока ДоходыНДФЛ.ПолучитьСтроку() = 1 Цикл
	
	НомерСтроки = ДоходыНДФЛ.НомерСтроки;
	
	ТекущийСотрудник = ДоходыНДФЛ.ФизЛицо;
	ТекущийМесяцНалоговогоПериода = ДоходыНДФЛ.МесяцНалоговогоПериода;
	
	СведенияОДоходах.НоваяСтрока();
	НомСтроки = СведенияОДоходах.КоличествоСтрок();
	Для НомКолонки = 1 по ДоходыНДФЛ.КоличествоКолонок() Цикл
		СведенияОДоходах.УстановитьЗначение(НомСтроки, НомКолонки, ДоходыНДФЛ.ПолучитьЗначение(НомерСтроки, НомКолонки));
	КонецЦикла;
	
	Если НомерСтроки &lt; ДоходыНДФЛ.КоличествоСтрок() Тогда
		СледующийСотрудник = ДоходыНДФЛ.ПолучитьЗначение(НомерСтроки + 1, "ФизЛицо");
		СледующийМесяцНалоговогоПериода = ДоходыНДФЛ.ПолучитьЗначение(НомерСтроки + 1, "МесяцНалоговогоПериода");
	КонецЕсли;
	
	Если ((ТекущийСотрудник &lt;&gt; СледующийСотрудник) или
		(ТекущийМесяцНалоговогоПериода &lt;&gt; СледующийМесяцНалоговогоПериода))
		или (НомерСтроки = ДоходыНДФЛ.КоличествоСтрок()) Тогда
		
		Если СведенияОДоходах.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("ДатаОперации",              ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("Дата",                      ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("Сотрудник",                 ТекущийСотрудник);
			ВходящиеДанные.Установить("СведенияОДоходах",          СведенияОДоходах);
			ВходящиеДанные.Установить("НДФЛИсчисленныйПоСтавке13", НДФЛИсчисленныйПоСтавке13);
			ВходящиеДанные.Установить("ПредоставленныеВычеты",     ПредоставленныеВычеты);
			ВходящиеДанные.Установить("НДФЛУдержанный",            НДФЛУдержанный);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияНалоговогоУчетаПоНДФЛ");
			
			СведенияОДоходах.УдалитьСтроки();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;

ИсчисленныйНДФЛ.ВыбратьСтроки();
ТекущийСотрудник = "";
Пока ИсчисленныйНДФЛ.ПолучитьСтроку() = 1 Цикл
	
	НомерСтроки = ИсчисленныйНДФЛ.НомерСтроки;
	
	ТекущийСотрудник = ИсчисленныйНДФЛ.ФизЛицо;
	ТекущийМесяцНалоговогоПериода = ИсчисленныйНДФЛ.МесяцНалоговогоПериода;
	
	НДФЛИсчисленныйПоСтавке13.НоваяСтрока();
	НомСтроки = НДФЛИсчисленныйПоСтавке13.КоличествоСтрок();
	Для НомКолонки = 1 по ИсчисленныйНДФЛ.КоличествоКолонок() Цикл
		НДФЛИсчисленныйПоСтавке13.УстановитьЗначение(НомСтроки, НомКолонки, ИсчисленныйНДФЛ.ПолучитьЗначение(НомерСтроки, НомКолонки));
	КонецЦикла;
	
	Если ИсчисленныйНДФЛ.ПримененныйВычет &lt;&gt; 0 Тогда
		ПредоставленныеВычеты.НоваяСтрока();
		НомСтроки = ПредоставленныеВычеты.КоличествоСтрок();
		Для НомКолонки = 1 по ИсчисленныйНДФЛ.КоличествоКолонок() Цикл
			ПредоставленныеВычеты.УстановитьЗначение(НомСтроки, НомКолонки, ИсчисленныйНДФЛ.ПолучитьЗначение(НомерСтроки, НомКолонки));
			ПредоставленныеВычеты.Сумма = ПредоставленныеВычеты.ПримененныйВычет;
		КонецЦикла;
	КонецЕсли;
	
	Если НомерСтроки &lt; ИсчисленныйНДФЛ.КоличествоСтрок() Тогда
		СледующийСотрудник = ИсчисленныйНДФЛ.ПолучитьЗначение(НомерСтроки + 1, "ФизЛицо");
		СледующийМесяцНалоговогоПериода = ИсчисленныйНДФЛ.ПолучитьЗначение(НомерСтроки + 1, "МесяцНалоговогоПериода");
	КонецЕсли;
	
	Если ((ТекущийСотрудник &lt;&gt; СледующийСотрудник) или
		(ТекущийМесяцНалоговогоПериода &lt;&gt; СледующийМесяцНалоговогоПериода))
		или (НомерСтроки = ИсчисленныйНДФЛ.КоличествоСтрок()) Тогда
		
		Если НДФЛИсчисленныйПоСтавке13.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("ДатаОперации",              ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("Дата",                      ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("Сотрудник",                 ТекущийСотрудник);
			ВходящиеДанные.Установить("СведенияОДоходах",          СведенияОДоходах);
			ВходящиеДанные.Установить("НДФЛИсчисленныйПоСтавке13", НДФЛИсчисленныйПоСтавке13);
			ВходящиеДанные.Установить("ПредоставленныеВычеты",     ПредоставленныеВычеты);
			ВходящиеДанные.Установить("НДФЛУдержанный",            НДФЛУдержанный);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияНалоговогоУчетаПоНДФЛ");
			
			НДФЛИсчисленныйПоСтавке13.УдалитьСтроки();
			ПредоставленныеВычеты.УдалитьСтроки();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;

УдержанныйНДФЛ.ВыбратьСтроки();
ТекущийСотрудник = "";
Пока УдержанныйНДФЛ.ПолучитьСтроку() = 1 Цикл
	
	НомерСтроки = УдержанныйНДФЛ.НомерСтроки;
	
	ТекущийСотрудник = УдержанныйНДФЛ.ФизЛицо;
	ТекущийМесяцНалоговогоПериода = УдержанныйНДФЛ.МесяцНалоговогоПериода;
	
	НДФЛУдержанный.НоваяСтрока();
	НомСтроки = НДФЛУдержанный.КоличествоСтрок();
	Для НомКолонки = 1 по УдержанныйНДФЛ.КоличествоКолонок() Цикл
		НДФЛУдержанный.УстановитьЗначение(НомСтроки, НомКолонки, УдержанныйНДФЛ.ПолучитьЗначение(НомерСтроки, НомКолонки));
	КонецЦикла;
	
	Если НомерСтроки &lt; УдержанныйНДФЛ.КоличествоСтрок() Тогда
		СледующийСотрудник = УдержанныйНДФЛ.ПолучитьЗначение(НомерСтроки + 1, "ФизЛицо");
		СледующийМесяцНалоговогоПериода = УдержанныйНДФЛ.ПолучитьЗначение(НомерСтроки + 1, "МесяцНалоговогоПериода");
	КонецЕсли;
	
	Если ((ТекущийСотрудник &lt;&gt; СледующийСотрудник) или
		(ТекущийМесяцНалоговогоПериода &lt;&gt; СледующийМесяцНалоговогоПериода))
		или (НомерСтроки = УдержанныйНДФЛ.КоличествоСтрок()) Тогда
		
		Если НДФЛУдержанный.КоличествоСтрок() &lt;&gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("ДатаОперации",              ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("Дата",                      ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("Сотрудник",                 ТекущийСотрудник);
			ВходящиеДанные.Установить("СведенияОДоходах",          СведенияОДоходах);
			ВходящиеДанные.Установить("НДФЛИсчисленныйПоСтавке13", НДФЛИсчисленныйПоСтавке13);
			ВходящиеДанные.Установить("ПредоставленныеВычеты",     ПредоставленныеВычеты);
			ВходящиеДанные.Установить("НДФЛУдержанный",            НДФЛУдержанный);
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияНалоговогоУчетаПоНДФЛ");
			
			НДФЛУдержанный.УдалитьСтроки();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;

//****************** даные о начислении страховых взносов

ДоходыСВЗ.Свернуть("ФизЛицо, МесяцРасчетногоПериода, ВидДохода, ОблагаетсяЕНВД, Инвалид", "Результат, Скидка");
НачисленныйСВЗ.Свернуть("ФизЛицо, МесяцРасчетногоПериода", "ПФРНакопительная, ПФРНакопительнаяЕНВД, ПФРСтраховая, ПФРСтраховаяЕНВД, ПФР, ПФРЕНВД, ТФОМС, ТФОМСЕНВД, ФФОМС, ФФОМСЕНВД, ФСС, ФССЕНВД, ФССНесчастныеСлучаи");

СведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по ДоходыСВЗ.КоличествоКолонок() Цикл
	СведенияОДоходах.НоваяКолонка(ДоходыСВЗ.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

СведенияОВзносах = СоздатьОбъект("ТаблицаЗначений");
Для НомКолонки = 1 по НачисленныйСВЗ.КоличествоКолонок() Цикл
	СведенияОВзносах.НоваяКолонка(НачисленныйСВЗ.ПолучитьПараметрыКолонки(НомКолонки));
КонецЦикла;

ДоходыСВЗ.ВыбратьСтроки();
ТекущийСотрудник = "";
СтавкаФСС_НС = глПолучитьНалог("ФСС_НС").Ставка.Получить(Параметры.ДатаОкончанияВыгрузкиДокументов);
Пока ДоходыСВЗ.ПолучитьСтроку() = 1 Цикл
	
	НомерСтроки = ДоходыСВЗ.НомерСтроки;
	
	ТекущийСотрудник = ДоходыСВЗ.ФизЛицо;	
	ТекущийМесяцНалоговогоПериода = ДоходыСВЗ.МесяцРасчетногоПериода;
	Инвалид = ДоходыСВЗ.Инвалид;
	
	СведенияОДоходах.НоваяСтрока();
	НомСтроки = СведенияОДоходах.КоличествоСтрок();
	Для НомКолонки = 1 по ДоходыСВЗ.КоличествоКолонок() Цикл
		СведенияОДоходах.УстановитьЗначение(НомСтроки, НомКолонки, ДоходыСВЗ.ПолучитьЗначение(НомерСтроки, НомКолонки));
	КонецЦикла;
	
	Если НомерСтроки &lt; ДоходыСВЗ.КоличествоСтрок() Тогда
		СледующийСотрудник = ДоходыСВЗ.ПолучитьЗначение(НомерСтроки + 1, "ФизЛицо");
		СледующийМесяцНалоговогоПериода = ДоходыСВЗ.ПолучитьЗначение(НомерСтроки + 1, "МесяцРасчетногоПериода");
	КонецЕсли;
	
	Если ((ТекущийСотрудник &lt;&gt; СледующийСотрудник) или
		(ТекущийМесяцНалоговогоПериода &lt;&gt; СледующийМесяцНалоговогоПериода))
		или (НомерСтроки = ДоходыСВЗ.КоличествоСтрок()) Тогда
		
		НачисленныйСВЗ.ВыбратьСтроки();
		Пока НачисленныйСВЗ.ПолучитьСтроку() = 1 Цикл
			Если (НачисленныйСВЗ.ФизЛицо =  ТекущийСотрудник)
				И (НачисленныйСВЗ.МесяцРасчетногоПериода =  ТекущийМесяцНалоговогоПериода) Тогда
				НомерСтрокиВЗ = НачисленныйСВЗ.НомерСтроки;
				СведенияОВзносах.НоваяСтрока();
				НомСтрокиВЗ = СведенияОВзносах.КоличествоСтрок();
				Для НомКолонки = 1 по НачисленныйСВЗ.КоличествоКолонок() Цикл
					СведенияОВзносах.УстановитьЗначение(НомСтрокиВЗ, НомКолонки, НачисленныйСВЗ.ПолучитьЗначение(НомерСтрокиВЗ, НомКолонки));
				КонецЦикла;
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;		
	
	Если ((ТекущийСотрудник &lt;&gt; СледующийСотрудник) или
		(ТекущийМесяцНалоговогоПериода &lt;&gt; СледующийМесяцНалоговогоПериода))
		или (НомерСтроки = ДоходыСВЗ.КоличествоСтрок()) Тогда
		
		Если СведенияОДоходах.КоличествоСтрок() &lt;&gt; 0 Тогда
			
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Дата",                   ТекущийМесяцНалоговогоПериода);
			ВходящиеДанные.Установить("ФизическоеЛицо",         ТекущийСотрудник);
			ВходящиеДанные.Установить("МесяцРасчетногоПериода", ТекущийМесяцНалоговогоПериода);
			
			ВходящиеДанные.Установить("СведенияОДоходах",     СведенияОДоходах);	
			ВходящиеДанные.Установить("ПФРНакопительная",     СведенияОВзносах.Итог("ПФРНакопительная"));
			ВходящиеДанные.Установить("ПФРНакопительнаяЕНВД", СведенияОВзносах.Итог("ПФРНакопительнаяЕНВД"));
			ВходящиеДанные.Установить("ПФРСтраховая",         СведенияОВзносах.Итог("ПФРСтраховая"));
			ВходящиеДанные.Установить("ПФРСтраховаяЕНВД",     СведенияОВзносах.Итог("ПФРСтраховаяЕНВД"));
			ВходящиеДанные.Установить("ПФРСтраховаяЕНВД",     СведенияОВзносах.Итог("ПФР"));
			ВходящиеДанные.Установить("ПФРЕНВД",              СведенияОВзносах.Итог("ПФРЕНВД"));
			ВходящиеДанные.Установить("ТФОМС",                СведенияОВзносах.Итог("ТФОМС"));
			ВходящиеДанные.Установить("ТФОМСЕНВД",            СведенияОВзносах.Итог("ТФОМСЕНВД"));
			ВходящиеДанные.Установить("ФФОМС",                СведенияОВзносах.Итог("ФФОМС"));
			ВходящиеДанные.Установить("ФФОМСЕНВД",            СведенияОВзносах.Итог("ФФОМСЕНВД"));
			ВходящиеДанные.Установить("ФСС",                  СведенияОВзносах.Итог("ФСС"));
			ВходящиеДанные.Установить("ФССЕНВД",              СведенияОВзносах.Итог("ФССЕНВД"));
			
			Если Инвалид = 1 Тогда				
				ФССНесчастныеСлучаи = Окр(СведенияОВзносах.Итог("ФССНесчастныеСлучаи")*СтавкаФСС_НС/100*0.6, 2, 1);
			Иначе
				ФССНесчастныеСлучаи = Окр(СведенияОВзносах.Итог("ФССНесчастныеСлучаи")*СтавкаФСС_НС/100, 2, 1);
			КонецЕсли;
			
			ВходящиеДанные.Установить("ФССНесчастныеСлучаи",  ФССНесчастныеСлучаи);
			
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияУчетаПоСтраховымВзносам");
			
			СведенияОДоходах.УдалитьСтроки();
			СведенияОВзносах.УдалитьСтроки();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;

//****************** даные об оплатах

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто();	
Месяц = ДатаМесяц(Параметры.ДатаКонцаПериодаВыгрузки);

ОснТекстКомментария = "# Перенесено из 1С:Бухгалтерии 7.7 #";

ВходящиеДанные = СоздатьОбъект("СписокЗначений");

РасчетыСФондамиПоСтраховымВзносам = СоздатьОбъект("ТаблицаЗначений");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("ВидДвижения");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("Период");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("ЭтоСтраховыеВзносы");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("Активность");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("ЭтоРасчетыПоНачислениюУплатеВзносовВФСС");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("ВидОбязательногоСтрахованияСотрудников");
РасчетыСФондамиПоСтраховымВзносам.НоваяКолонка("Сумма");

ТаблицаРегистровНакопления = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРегистровНакопления.НоваяКолонка("Имя");
ТаблицаРегистровНакопления.НоваяСтрока();
ТаблицаРегистровНакопления.Имя = "РасчетыСФондамиПоСтраховымВзносам";

Для НомерМесяца = 1 По Месяц Цикл
	БухИт.ПериодМ(НомерМесяца, ДатаГод(Параметры.ДатаКонцаПериодаВыгрузки));
	
	ТекстКомментария = ОснТекстКомментария + " # период: " +ПериодСтр(БухИт.НачПериода(),БухИт.КонПериода()) + " # ";
	
	РасчетыСФондамиПоСтраховымВзносам.УдалитьСтроки();
	
	ПФРСтраховая = 0;
	ПФРНакопительная = 0;
	ПФР_вред = 0;
	ПФР_тяж = 0;
	ПФР = 0;
	ФФОМС = 0;
	ТФОМС = 0;
	ФСС = 0;
	ФССНесчастныеСлучаи = 0;
	
	Для НомерЗначения = 1 По Перечисление.ВидыПлатежей.КоличествоЗначений() Цикл
		
		ТекЗначение = Перечисление.ВидыПлатежей.ЗначениеПоНомеру(НомерЗначения);
		
		ПФРСтраховая = 			БухИт.ДО("69.21",,,ТекЗначение);
		ПФРНакопительная = 		БухИт.ДО("69.22",,,ТекЗначение);
		ПФР_тяж = 				БухИт.ДО("69.23",,,ТекЗначение);
		ПФР_вред = 				БухИт.ДО("69.24",,,ТекЗначение);
		ПФР = 				    БухИт.ДО("69.25",,,ТекЗначение);
		ФФОМС = 				БухИт.ДО("69.41",,,ТекЗначение);
		ТФОМС = 				БухИт.ДО("69.42",,,ТекЗначение);			
		
		Если ПФРСтраховая &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ПФРСтраховая";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ПФРСтраховая;
		КонецЕсли;
		Если ПФРНакопительная &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ПФРНакопительная";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ПФРНакопительная;
		КонецЕсли;
		Если ПФР_тяж &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ПФР_тяж;
		КонецЕсли;
		Если ПФР_вред &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ПФРЗаЗанятыхНаПодземныхИВредныхРаботах";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ПФР_вред;
		КонецЕсли;
		Если ПФР &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ПФРПоСуммарномуТарифу";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ПФР;
		КонецЕсли;
		Если ФФОМС &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ФФОМС";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ФФОМС;
		КонецЕсли;
		Если ТФОМС &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ТФОМС";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ТФОМС;
		КонецЕсли;
		
	КонецЦикла;
	
	Для НомерЗначения = 1 По Перечисление.ВидыПлатежей.КоличествоЗначений() Цикл
		
		ТекЗначение = Перечисление.ВидыПлатежей.ЗначениеПоНомеру(НомерЗначения);
		
		ФСС = 					БухИт.ДО("69.31",,,ТекЗначение);
		ФССНесчастныеСлучаи = 	БухИт.ДО("69.11",,,ТекЗначение);
		
		Если ФСС &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 1;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ФСС";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ФСС;
		КонецЕсли;
		
		Если ФССНесчастныеСлучаи &lt;&gt; 0 Тогда				
			РасчетыСФондамиПоСтраховымВзносам.НоваяСтрока();
			РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = "Расход";
			РасчетыСФондамиПоСтраховымВзносам.Период = БухИт.КонПериода();
			РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы = 1;
			РасчетыСФондамиПоСтраховымВзносам.Активность = 1;
			РасчетыСФондамиПоСтраховымВзносам.ЭтоРасчетыПоНачислениюУплатеВзносовВФСС = 0;
			РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников = "ФССНесчастныеСлучаи";
			РасчетыСФондамиПоСтраховымВзносам.Сумма = ФССНесчастныеСлучаи;
		КонецЕсли;
		
	КонецЦикла;
	
	ВходящиеДанные.Установить("Дата", 					БухИт.КонПериода());
	ВходящиеДанные.Установить("СуммаОперации",   	    РасчетыСФондамиПоСтраховымВзносам.Итог("Сумма"));
	ВходящиеДанные.Установить("Содержание",			    "Уплата страховых взносов");
	ВходящиеДанные.Установить("Комментарий",			ТекстКомментария);
	ВходящиеДанные.Установить("ТаблицаРегистровНакопления", ТаблицаРегистровНакопления);
	ВходящиеДанные.Установить("РасчетыСФондамиПоСтраховымВзносам", РасчетыСФондамиПоСтраховымВзносам);
	
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "РасчетыПоСтраховымВзносам");
	
КонецЦикла;
</ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ВыгрузитьКорреспонденции" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

БухИт.ВыбратьКорСчета();
Пока БухИт.ПолучитьКорСчет() = 1 Цикл
	
	КоличествоУровней = БухИт.КорСчет.КоличествоСубконто();
	
	Если КоличествоУровней = 0 Тогда
		Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
		
		Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
			БухИт.ВыбратьВалюты(-1);
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				ПолучитьИтогиПоСчету();
				ДобавитьПроводкуОбороты();
			КонецЦикла;
			
		Иначе
			ПолучитьИтогиПоСчету();
			ДобавитьПроводкуОбороты();
		КонецЕсли;
		
	ИначеЕсли КоличествоУровней &gt; 0 Тогда
		БухИт.ВыбратьКорСубконто(1);
		Пока БухИт.ПолучитьКорСубконто(1) = 1 Цикл
			
			Если ТипЗначенияСтр(БухИт.КорСубконто(1)) = "Справочник" Тогда
				Если БухИт.КорСубконто(1).ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если КоличествоУровней = 1 Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
				
				Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
					БухИт.ВыбратьВалюты(-1);
					Пока БухИт.ПолучитьВалюту() = 1 Цикл
						ПолучитьИтогиПоСчету();
						ДобавитьПроводкуОбороты();
					КонецЦикла;
				Иначе
					ПолучитьИтогиПоСчету();
					ДобавитьПроводкуОбороты();
				КонецЕсли;
				
			ИначеЕсли КоличествоУровней &gt; 1 Тогда
				
				Если (БухИт.КорСчет.УчетПоСумме(2) = 0) и (КоличествоУровней = 2) Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 1);
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
					ПолучитьИтогиПоСчету();
					ДобавитьПроводкуОбороты();
				КонецЕсли;
				
				БухИт.ВыбратьКорСубконто(2);
				Пока БухИт.ПолучитьКорСубконто(2) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.КорСубконто(2)) = "Справочник" Тогда
						Если БухИт.КорСубконто(2).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоУровней = 2 Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
						Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
							БухИт.ВыбратьВалюты(-1);
							Пока БухИт.ПолучитьВалюту() = 1 Цикл
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЦикла;
						Иначе 				
							ПолучитьИтогиПоСчету();
							ДобавитьПроводкуОбороты();
						КонецЕсли;
											
					ИначеЕсли КоличествоУровней &gt; 2 Тогда
						
						Если (БухИт.КорСчет.УчетПоСумме(3) = 0) и (КоличествоУровней = 3) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 1);
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
							ПолучитьИтогиПоСчету();
							ДобавитьПроводкуОбороты();
						КонецЕсли;
						
						БухИт.ВыбратьКорСубконто(3);
						Пока БухИт.ПолучитьКорСубконто(3) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.КорСубконто(3)) = "Справочник" Тогда
								Если БухИт.КорСубконто(3).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
					
							Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
							
							Если (БухИт.Счет.Валютный = 0) и (БухИт.КорСчет.Валютный = 1) Тогда
								БухИт.ВыбратьВалюты(-1);
								Пока БухИт.ПолучитьВалюту() = 1 Цикл
									ПолучитьИтогиПоСчету();
									ДобавитьПроводкуОбороты();
								КонецЦикла;
							Иначе
								ПолучитьИтогиПоСчету();
								ДобавитьПроводкуОбороты();
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОборотыПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

СчетВводаОстатков = Параметры.СчетВводаОстатков;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Валюты = СоздатьОбъект("СписокЗначений");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");

БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();

БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

БухИт.ВключатьСубсчета(, -1);
Если Параметры.ДатаНачалаВыгрузкиОборотов =  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
	БухИт.ВыполнитьЗапрос(Параметры.ДатаНачалаВыгрузкиОборотов, Параметры.ДатаОкончанияВыгрузкиОборотов, Счет,,, 2, "День",);
			
ИначеЕсли ОстаткиНаКонец = 1 Тогда
	БухИт.ВыполнитьЗапрос(Параметры.ДатаОкончанияВыгрузкиОборотов, , Счет);
	
Иначе	
	БухИт.ВыполнитьЗапрос(Параметры.ДатаНачалаВыгрузкиОборотов, Параметры.ДатаОкончанияВыгрузкиОборотов, Счет,,, 2, "Месяц",);
КонецЕсли;

БухИт.ВыбратьПериоды();
Пока БухИт.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	БухИт.ВыбратьСчета();
	Пока БухИт.ПолучитьСчет() = 1 Цикл
		Валюты.УдалитьВсе();
		
		Если (Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(Счет) = 0) Тогда
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Валюты.ДобавитьЗначение(БухИт.Валюта);
			КонецЦикла;
			
		Иначе
			Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
		КонецЕсли;
		
		// Остатки
		Если ОстаткиНаКонец = 1 Тогда
			
			Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
			
			Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
				Если Счет.Валютный = 1 Тогда
					БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
				КонецЕсли;
					
				СуммовойУчет1 = ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, Счет.УчетПоСумме(1)), 0);
				СуммовойУчет2 = ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, Счет.УчетПоСумме(2)), 0);
				СуммовойУчет3 = ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, Счет.УчетПоСумме(3)), 0);

				КоличествоУровней = 0;
				КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
				КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
				КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
				Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
				
				Если КоличествоУровней = 0 Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
					ПолучитьИтогиПоСчету();
					ДобавитьПроводку();
				
				ИначеЕсли КоличествоУровней &gt; 0 Тогда
					БухИт.ВыбратьСубконто(1);
					Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
						Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
							Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
							ПолучитьИтогиПоСчету();
							ДобавитьПроводку();
						КонецЕсли;
						
						Если КоличествоУровней &gt; 1 Тогда
							БухИт.ВыбратьСубконто(2);
							Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
								Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
									Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;
								
								Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
									Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
									ПолучитьИтогиПоСчету();
									ДобавитьПроводку();
								КонецЕсли;
								
								Если КоличествоУровней &gt; 2 Тогда
									БухИт.ВыбратьСубконто(3);
									Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
										Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
											Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
												Продолжить;
											КонецЕсли;
										КонецЕсли;
										
										Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
										ПолучитьИтогиПоСчету();
										ДобавитьПроводку();
									КонецЦикла;
								КонецЕсли;	
							КонецЦикла;
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;
			
			РазделУчета = ОпределитьРазделУчета();
			Если ПустоеЗначение(РазделУчета) = 0 Тогда
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить("ВходящиеОстатки", Проводки);
				ВходящиеДанные.Установить("Счет", Счет);
				ВходящиеДанные.Установить("Дата", Параметры.ДатаОкончанияВыгрузкиОборотов);				
				ВходящиеДанные.Установить("РазделУчета", РазделУчета);
				
				Если Параметры.ДатаНачалаВыгрузкиОборотов =  Параметры.ДатаОкончанияВыгрузкиОборотов Тогда
					ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
					ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
				Иначе
					ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
					ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
				КонецЕсли;
				
				Параметры.ПараметрыАлгоритмов.Установить("ВходящиеДанные", ВходящиеДанные);
				Если (Счет.Код = "10.1")
					ИЛИ (Счет.Код = "10.2")
					ИЛИ (Счет.Код = "10.3") 
					ИЛИ (Счет.Код = "41.1")
					ИЛИ (Счет.Код = "41.2")
					ИЛИ (Счет.Код = "41.3")
					ИЛИ (Счет.Код = "43") Тогда
					
					НУ_ОстаткиПоТМЦ();
					
				ИначеЕсли (РазделУчета = "КапитальныеВложения")
					И (Счет.Код &lt;&gt; "08.4") Тогда
					
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);					
					
				ИначеЕсли (Счет.Код = "45") Тогда
					
					НУ_ОстаткиПо45();
					
				ИначеЕсли РазделУчета = "РасходыБудущихПериодов" Тогда
					
					НУ_ОстаткиПоРБП();
					
				ИначеЕсли РазделУчета = "РасчетыПоНалогамИСборам" Тогда
					
					НУ_ОстаткиПоНалогам();
									
				ИначеЕсли (Счет.Код = "60.3") Тогда
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
					
				ИначеЕсли Счет.Код = "76.4" Тогда
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
					
				ИначеЕсли (Счет.Код = "19.1")
					ИЛИ (Счет.Код = "19.2") Тогда
					
					ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
					ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
					
				КонецЕсли;
								
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
			Иначе			
				ВходящиеДанные = СоздатьОбъект("СписокЗначений");
				ВходящиеДанные.Установить(РегистрБух, Проводки);
				ВходящиеДанные.Установить("Счет", Счет);
				ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
				ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
			КонецЕсли;
		КонецЕсли;
		
		Если ОстаткиНаКонец = 1 Тогда //нас интересуют только остатки
			Продолжить;
		КонецЕсли;
		
		// Обороты
		Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
		Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
			Если Счет.Валютный = 1 Тогда
				БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
			КонецЕсли;
			
			КоличествоУровней = Счет.КоличествоСубконто();
				
			Если КоличествоУровней = 0 Тогда
				
				ВыгрузитьКорреспонденции();
			
			ИначеЕсли КоличествоУровней &gt; 0 Тогда
				БухИт.ВыбратьСубконто(1);
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
						Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если КоличествоУровней = 1 Тогда
						ВыгрузитьКорреспонденции();
					
					ИначеЕсли КоличествоУровней &gt; 1 Тогда
						БухИт.ВыбратьСубконто(2);
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если КоличествоУровней = 2 Тогда
								ВыгрузитьКорреспонденции();
							
							ИначеЕсли КоличествоУровней &gt; 2 Тогда
								БухИт.ВыбратьСубконто(3);
								Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
									Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
										Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
									КонецЕсли;
									
									ВыгрузитьКорреспонденции();
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить(РегистрБух, ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", БухИт.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоНМА" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокНМА. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы);
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаВводаОстатков, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокНМА.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "НМА") = 0 Тогда
		Параметры.СписокНМА.НоваяСтрока();
		Параметры.СписокНМА.НМА = БухИт.Субконто(1);
		Если Счет &lt;&gt; "05" Тогда
			Параметры.СписокНМА.СчетУчетаНМА = БухИт.Счет.Код;
		КонецЕсли;
		НомСтроки = Параметры.СписокНМА.КоличествоСтрок();
	Иначе
		Если Счет.Код &lt;&gt; "05" Тогда
			Параметры.СписокНМА.УстановитьЗначение(НомСтроки, "СчетУчетаНМА", БухИт.Счет.Код);
		КонецЕсли;
	КонецЕсли;
	
	Параметры.СписокНМА.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокНМА.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));

КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоНМАКон" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокНМАКон. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы);
БухИт.ВыполнитьЗапрос(Параметры.ДатаНачалаВыгрузкиОборотов, Параметры.ДатаОкончанияВыгрузкиОборотов, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокНМАКон.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "НМА") = 0 Тогда
		Параметры.СписокНМАКон.НоваяСтрока();
		Параметры.СписокНМАКон.НМА = БухИт.Субконто(1);
		Если Счет &lt;&gt; "05" Тогда
			Параметры.СписокНМАКон.СчетУчетаНМА = БухИт.Счет.Код;
		КонецЕсли;
		НомСтроки = Параметры.СписокНМАКон.КоличествоСтрок();
	Иначе
		Если Счет.Код &lt;&gt; "05" Тогда
			Параметры.СписокНМАКон.УстановитьЗначение(НомСтроки, "СчетУчетаНМА", БухИт.Счет.Код);
		КонецЕсли;
	КонецЕсли;
	
	Параметры.СписокНМАКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокНМАКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));

КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоОС" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокОС. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");
ИмяСчета = Параметры.ПараметрыАлгоритмов.Получить("ИмяСчета");

УчетПоКонтрагентам = ?(Счет.КоличествоСубконто() &gt; 1, 1, 0);

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
Если УчетПоКонтрагентам = 1 Тогда
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);	
КонецЕсли;
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков, Параметры.ДатаВводаОстатков, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокОС.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
		Параметры.СписокОС.НоваяСтрока();
		Параметры.СписокОС.ОсновноеСредство = БухИт.Субконто(1);
		НомСтроки = Параметры.СписокОС.КоличествоСтрок();
	КонецЕсли;
	
	Параметры.СписокОС.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокОС.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));
	Если ПустоеЗначение(ИмяСчета) = 0 Тогда
		Параметры.СписокОС.УстановитьЗначение(НомСтроки, ИмяСчета, Счет);
	КонецЕсли;
	
	Если УчетПоКонтрагентам = 1 Тогда
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			
			Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
	
			Параметры.СписокОС.УстановитьЗначение(НомСтроки, "Контрагент", БухИт.Субконто(2));
		КонецЦикла;
    КонецЕсли;
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоОСКон" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выбирает объекты по указанному счету и записывает их 
// в таблицу СписокОСКон. При этом определяет текущую стоимость
// или начисленную амортизацию.

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ИмяСуммы = Параметры.ПараметрыАлгоритмов.Получить("ИмяСуммы");
ИмяСчета = Параметры.ПараметрыАлгоритмов.Получить("ИмяСчета");

УчетПоКонтрагентам = ?(Счет.КоличествоСубконто() &gt; 1, 1, 0);

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
Если УчетПоКонтрагентам = 1 Тогда
	БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);	
КонецЕсли;
БухИт.ВыполнитьЗапрос(Параметры.ДатаНачалаВыгрузкиОборотов, Параметры.ДатаОкончанияВыгрузкиОборотов, Счет);
БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	НомСтроки = 0;
	Если Параметры.СписокОСКон.НайтиЗначение(БухИт.Субконто(1), НомСтроки, "ОсновноеСредство") = 0 Тогда
		Параметры.СписокОСКон.НоваяСтрока();
		Параметры.СписокОСКон.ОсновноеСредство = БухИт.Субконто(1);
		НомСтроки = Параметры.СписокОСКон.КоличествоСтрок();
	КонецЕсли;
	
	Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Нач", ?(Счет.Активный = 1, БухИт.СНД(), БухИт.СНК()));
	Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, ИмяСуммы+"Кон", ?(Счет.Активный = 1, БухИт.СКД(), БухИт.СКК()));
	Если ПустоеЗначение(ИмяСчета) = 0 Тогда
		Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, ИмяСчета, Счет);
	КонецЕсли;
	
	Если УчетПоКонтрагентам = 1 Тогда
		БухИт.ВыбратьСубконто(2);
		Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
			
			Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
	
			Параметры.СписокОСКон.УстановитьЗначение(НомСтроки, "Контрагент", БухИт.Субконто(2));
		КонецЦикла;
    КонецЕсли;
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьОстаткиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

СчетВводаОстатков = Параметры.СчетВводаОстатков;
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
РегистрБух = Параметры.ПараметрыАлгоритмов.Получить("Регистр");

ПроводкиОбороты = Параметры.ТаблицаПроводокОбороты;
Проводки = Параметры.ТаблицаПроводок;
Проводки.УдалитьСтроки();

Валюты = СоздатьОбъект("СписокЗначений");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");

БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();

БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();
БухИт.ИспользоватьКорСубконто();

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);
Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
Параметры.ПараметрыАлгоритмов.Установить("ПроводкиОбороты", ПроводкиОбороты);

БухИт.ВключатьСубсчета(, -1);
БухИт.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, Счет);

БухИт.ВыбратьПериоды();
Пока БухИт.ПолучитьПериод() = 1 Цикл
	
	ПроводкиОбороты.УдалитьСтроки();
	
	БухИт.ВыбратьСчета();
	Пока БухИт.ПолучитьСчет() = 1 Цикл
		Валюты.УдалитьВсе();
		
		Если (Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(Счет) = 0) Тогда
			БухИт.ВыбратьВалюты();
			Пока БухИт.ПолучитьВалюту() = 1 Цикл
				Валюты.ДобавитьЗначение(БухИт.Валюта);
			КонецЦикла;
			
		Иначе
			Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
		КонецЕсли;
		
		Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
		
		Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
			Если Счет.Валютный = 1 Тогда
				БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
			КонецЕсли;
			
			СуммовойУчет1 = ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, Счет.УчетПоСумме(1)), 0);
			СуммовойУчет2 = ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, Счет.УчетПоСумме(2)), 0);
			СуммовойУчет3 = ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, Счет.УчетПоСумме(3)), 0);
			
			КоличествоУровней = 0;
			КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 0, ?(Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
			КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 1, ?(Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
			КоличествоУровней = КоличествоУровней + ?(Счет.КоличествоСубконто() &gt; 2, ?(Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
			Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
			
			Если КоличествоУровней = 0 Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
				ПолучитьИтогиПоСчету();
				ДобавитьПроводку();
				
			ИначеЕсли КоличествоУровней &gt; 0 Тогда
				БухИт.ВыбратьСубконто(1);
				Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
					Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
						Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
						Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
						ПолучитьИтогиПоСчету();
						ДобавитьПроводку();
					КонецЕсли;
					
					Если КоличествоУровней &gt; 1 Тогда
						БухИт.ВыбратьСубконто(2);
						Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
							Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
								Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
								ПолучитьИтогиПоСчету();
								ДобавитьПроводку();
							КонецЕсли;
							
							Если КоличествоУровней &gt; 2 Тогда
								БухИт.ВыбратьСубконто(3);
								Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
									Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
										Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
											Продолжить;
										КонецЕсли;
									КонецЕсли;
									
									Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
									ПолучитьИтогиПоСчету();
									ДобавитьПроводку();
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		РазделУчета = ОпределитьРазделУчета();
		Если ПустоеЗначение(РазделУчета) = 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("ВходящиеОстатки", Проводки);
			ВходящиеДанные.Установить("Счет", Счет);
			ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
			ВходящиеДанные.Установить("РазделУчета", РазделУчета);
			
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
			
			Параметры.ПараметрыАлгоритмов.Установить("ВходящиеДанные", ВходящиеДанные);
			Если (Счет.Код = "10.1")
				ИЛИ (Счет.Код = "10.2")
				ИЛИ (Счет.Код = "10.3") 
				ИЛИ (Счет.Код = "41.1")
				ИЛИ (Счет.Код = "41.2")
				ИЛИ (Счет.Код = "41.3")
				ИЛИ (Счет.Код = "43") Тогда
				
				Если Параметры.П_ВыгружатьОбороты = 0 Тогда
					НУ_ОстаткиПоТМЦ();
				КонецЕсли;
								
			ИначеЕсли (РазделУчета = "КапитальныеВложения")
				И (Счет.Код &lt;&gt; "08.4") Тогда
				
				ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);					
				
			ИначеЕсли (Счет.Код = "45") Тогда
				
				Если Параметры.П_ВыгружатьОбороты = 0 Тогда
					НУ_ОстаткиПо45();
				КонецЕсли;
								
			ИначеЕсли РазделУчета = "РасходыБудущихПериодов" Тогда
				
				Если Параметры.П_ВыгружатьОбороты = 0 Тогда
					НУ_ОстаткиПоРБП();
				КонецЕсли;
								
			ИначеЕсли РазделУчета = "РасчетыПоНалогамИСборам" Тогда
				
				Если Параметры.П_ВыгружатьОбороты = 0 Тогда
					НУ_ОстаткиПоНалогам();
				КонецЕсли;				
				
			ИначеЕсли (Счет.Код = "60.3") Тогда
				ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
				
			ИначеЕсли Счет.Код = "76.4" Тогда
				ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
				
			ИначеЕсли (Счет.Код = "19.1")
				ИЛИ (Счет.Код = "19.2") Тогда
				
				ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
				ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
				
			КонецЕсли;
			
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
		Иначе			
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить(РегистрБух, Проводки);
			ВходящиеДанные.Установить("Счет", Счет);
			ВходящиеДанные.Установить("Дата", БухИт.НачДата-1);
			ВходящиеДанные.Установить("Комментарий", "# Остатки по счету "+Строка(Счет)+" за "+Строка(ВходящиеДанные.Получить("Дата")));
			ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
		КонецЕсли;
		
	КонецЦикла;
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить(РегистрБух, ПроводкиОбороты);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", БухИт.КонДата);
	ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ОперацияБух");
	
КонецЦикла;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьСведенияОбИБ" ИспользуетсяПриЗагрузке="false">
			<Текст>Идентификатор = "ИдентификаторКонфигурации";
Значение = глИдентификаторКонфигурации();
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Конфигурация";
Значение = Метаданные.Идентификатор;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "НомерРелиза";
Значение = Константа.НомерРелиза;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Организация";
Значение = ?(ПустоеЗначение(Константа.НаименованиеОрганизации) = 0, Константа.НаименованиеОрганизации, Константа.ПолноеНаименованиеОрганизации);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ИНН";
Значение = Лев(Константа.ИННОрганизации, 10);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "КПП";
Значение = Сред(Константа.ИННОрганизации, 12, 9);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "УчетЗарплатыВоВнешнейПрограмме";
Значение = ?(Константа.УчетЗарплатыВоВнешнейПрограмме = Перечисление.Булево.Нет, 0, 0);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ИДПравил";
Значение = "ВыгрузкаОборотовИДокументов";
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ГраницаВыгрузкиОборотов";
Значение = ПолучитьДатуV8(Параметры.ГраницаВыгрузкиОборотов);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ЕстьСправочники";
Значение = Параметры.П_ВыгружатьСправочники;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ЕстьОстатки";
Значение = Параметры.П_ВыгружатьОстатки;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ЕстьОбороты";
Значение = Параметры.П_ВыгружатьОбороты;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ЕстьДокументы";
Значение = Параметры.П_ВыгружатьДокументы;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "ИспользоватьТипыЦенНоменклатуры";
Значение = ?(Константа.ИспользоватьТипыЦен = Перечисление.Булево.Да, 1, 0);
УстановитьАтрибут(rootNode, Идентификатор, Значение);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьТаблицуВЗаписиКУДиР" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблУчета = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаУчетаЗаписейКУДиР");
ТаблицаСтрок = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаСтрокЗаписейКУДиР");

ВыгрузкаОперации = Параметры.ПараметрыАлгоритмов.Получить("ВыгрузкаОперации");

ВыделятьВходящийНДС = Константа.ВыделятьВходящийНДС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ОбъектНалогообложения = Константа.ОбъектНалогообложения.Получить(Параметры.ДатаКонцаПериодаВыгрузки);
ДоходыМинусРасходы = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы;

ТаблУчета.Сортировать("Документ", 1);
ТекДок = "";

ТаблУчета.ВыбратьСтроки();
Пока ТаблУчета.ПолучитьСтроку() = 1 Цикл
	Если (ПустоеЗначение(ТекДок) = 1) или (ТекДок &lt;&gt; ТаблУчета.Документ) Тогда
		
		//Добавить документ ЗаписьКУДиР
		Если (ПустоеЗначение(ТекДок) = 0) и (ТаблицаСтрок.КоличествоСтрок() &gt; 0) Тогда
			
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Дата", 	ТекДок.ДатаДок);
			ВходящиеДанные.Установить("Раздел1",ТаблицаСтрок);
			ВходящиеДанные.Установить("ОС",		СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("НМА",	СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("ДопКомментарий",	Строка(ТекДок));
			
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
		
		КонецЕсли;
				
		ТекДок = ТаблУчета.Документ;
		ТаблицаСтрок.УдалитьСтроки();
		
	КонецЕсли;
	
	ДатаНомерДок = ТаблУчета.ДатаНомерДок;
	СодержОпер   = ТаблУчета.СодержОперации;
	Доходы       = ТаблУчета.Доходы;
	ДоходыБУ     = ТаблУчета.ДоходыБУ;
	ДоходыЕНВД  = ТаблУчета.ДоходыЕНВД;
	
	Если (ВыделятьВходящийНДС = 0) Тогда 
		Расходы  = ТаблУчета.Расходы - ТаблУчета.НДС;			
	Иначе
		Расходы  = ТаблУчета.Расходы;
	КонецЕсли;
	
	НДСрасходовБУ = 0;
	Если (ТаблУчета.РасходыБУ &gt; 0) и (ТаблУчета.Расходы &gt; 0) и (ТаблУчета.НДС &gt; 0) Тогда 
		НДСрасходовБУ = ?(ТаблУчета.РасходыБУ &gt;= ТаблУчета.Расходы, ТаблУчета.НДС, ТаблУчета.НДС*ТаблУчета.РасходыБУ/ТаблУчета.Расходы);
		РасходыБУ  = ТаблУчета.РасходыБУ - НДСрасходовБУ;
	Иначе
		РасходыБУ  = ТаблУчета.РасходыБУ;
	КонецЕсли;
	
	Если ПустоеЗначение(ДоходыБУ) + ПустоеЗначение(Доходы) + ПустоеЗначение(РасходыБУ) + ПустоеЗначение(Расходы) &lt; 4 Тогда
		
		//Добавить строку КУДиР
		ТаблицаСтрок.НоваяСтрока();
		ТаблицаСтрок.ДатаНомер = ДатаНомерДок;
		ТаблицаСтрок.Содержание = СодержОпер;
		ТаблицаСтрок.Графа4 = ДоходыБУ;
		ТаблицаСтрок.Графа5 = Доходы;
		ТаблицаСтрок.Графа6 = РасходыБУ;
		ТаблицаСтрок.Графа7 = Расходы;
		ТаблицаСтрок.ДоходыЕНВД = ?(ДоходыЕНВД &lt;&gt; 0, 1, 0);
		
	КонецЕсли;
	
	ДатаНомерДок = ТаблУчета.ДатаНомерДок;
	СодержОпер   = ТаблУчета.СодержОперации +" (НДС)";
	Доходы       = 0; 
	ДоходыБУ     = 0;
	Расходы  	= ТаблУчета.НДС;
	РасходыБУ  	= НДСрасходовБУ;
	
	Если ПустоеЗначение(ДоходыБУ) + ПустоеЗначение(Доходы) + ПустоеЗначение(РасходыБУ) + ПустоеЗначение(Расходы) &lt; 4 Тогда
		
		//Добавить строку КУДиР
		ТаблицаСтрок.НоваяСтрока();
		ТаблицаСтрок.ДатаНомер = ДатаНомерДок;
		ТаблицаСтрок.Содержание = СодержОпер;
		ТаблицаСтрок.Графа4 = ДоходыБУ;
		ТаблицаСтрок.Графа5 = Доходы;
		ТаблицаСтрок.Графа6 = РасходыБУ;
		ТаблицаСтрок.Графа7 = Расходы;
		ТаблицаСтрок.ДоходыЕНВД = ?(ДоходыЕНВД &lt;&gt; 0, 1, 0);
		
	КонецЕсли;
	
КонецЦикла;

//Добавить документ ЗаписьКУДиР
ТаблицаСтрокРаздела1 = СоздатьОбъект("ТаблицаЗначений");
ТаблУчета.Выгрузить(ТаблицаСтрокРаздела1);
Параметры.ПараметрыАлгоритмов.Установить("Раздел1", ТаблицаСтрокРаздела1);
	
Если (ПустоеЗначение(ТекДок) = 0) и (ТаблицаСтрок.КоличествоСтрок() &gt; 0) Тогда
	
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("Дата", 	ТекДок.ДатаДок);
	ВходящиеДанные.Установить("Раздел1",ТаблицаСтрок);
	ВходящиеДанные.Установить("НМА",    СоздатьОбъект("ТаблицаЗначений"));
	ВходящиеДанные.Установить("ОС",		СоздатьОбъект("ТаблицаЗначений"));
	ВходящиеДанные.Установить("ДопКомментарий",	Строка(ТекДок));
	
	ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
	
КонецЕсли;

Если ВыгрузкаОперации = 0 Тогда
	////////////////////////////////////////
	////Раздел 2 (ОС)
	
	ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений"); 
	ТаблицаСтрок.НоваяКолонка("ОсновноеСредство");
	ТаблицаСтрок.НоваяКолонка("ДатаОплаты");
	ТаблицаСтрок.НоваяКолонка("Графа5_ПервоначальнаяСтоимость");
	ТаблицаСтрок.НоваяКолонка("Графа6_ОстаточнаяСтоимость");
	ТаблицаСтрок.НоваяКолонка("Графа8_КолКварталовВОтчетномПериоде");
	ТаблицаСтрок.НоваяКолонка("Графа9_КолКварталовВНалПериоде");
	ТаблицаСтрок.НоваяКолонка("Графа10_ДоляРасходовЗаНалПериод");
	ТаблицаСтрок.НоваяКолонка("Графа11_ДоляРасходовЗаКвартал");
	ТаблицаСтрок.НоваяКолонка("Графа12_СуммаРасходовЗаОтчетнПериод");
	ТаблицаСтрок.НоваяКолонка("Графа13_СуммаРасходовЗаКвартал");
	ТаблицаСтрок.НоваяКолонка("Графа14_РасходыПрошлыхПериодов");
	ТаблицаСтрок.НоваяКолонка("Графа15_ОстатокРасходов");
	
	Оплата = СоздатьОбъект("Периодический");	
	
	КолвоКварталов = Цел(ДатаМесяц(КонКвартала(Параметры.ДатаОкончанияВыгрузкиОборотов))/3);
	Год 		   = НачГода(Параметры.ДатаОкончанияВыгрузкиОборотов);
	
	Для ТекКвартал = 1 По КолвоКварталов Цикл
		
		Дата2 = КонКвартала(ДобавитьМесяц(Год, (ТекКвартал - 1) * 3));
		ТаблицаСтрок.УдалитьСтроки();
		
		БухИтЗаОтчетныйПериод = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИтЗаОтчетныйПериод.ПериодКВ(Дата2);
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт.ИспользоватьСубконто(ВидыСубконто.ОсновныеСредства);
		БухИт.ИспользоватьСубконто(ВидыСубконто.ДатыОплаты);
		БухИт.ВыполнитьЗапрос(НачГода(Дата2), Дата2, "Н02.1",,,,,);
		БухИт.ВыбратьСубконто(1);
		Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
			
			// Основное средство отражаем в отчете только если по нему были признаны расходы.
			Если БухИт.ДО() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ОсновноеСредство = БухИт.Субконто(ВидыСубконто.ОсновныеСредства);
			
			СрокПолезногоИспользования = Цел(ОсновноеСредство.СрокПолезногоИспользованияН/12) + ?(ОсновноеСредство.СрокПолезногоИспользованияН%12 &lt;&gt; 0, 1, 0);
			
			Если ОсновноеСредство.ДатаПриобретения &lt; Константа.ДатаПереходаНаУСН Тогда
				ОбъектПриобретенДоПримененияУСН = 1;
			Иначе
				ОбъектПриобретенДоПримененияУСН = 0;
			КонецЕсли;
			
			ПервоначальнаяСтоимость = ОсновноеСредство.ПервоначальнаяСтоимостьН;
			
			Оплата.ИспользоватьОбъект("Оплата", ОсновноеСредство);
			
			СуммаРасходовЗаОтчетныйПериод   = БухИт.ДО();
			СуммаРасходовЗаПоследнийКвартал = БухИтЗаОтчетныйПериод.ДО("Н02.1",,, ОсновноеСредство);
			СуммаРасходовПредыдущихПериодов = БухИт.СНД();
			
			Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
				ОстаточнаяСтоимость = Макс(0, ОсновноеСредство.ПервоначальнаяСтоимостьН - ОсновноеСредство.НачисленнаяАмортизацияН);;
			Иначе	
				ОстаточнаяСтоимость = ОсновноеСредство.ПервоначальнаяСтоимостьН;
			КонецЕсли;
			
			БухИт.ВыбратьСубконто(2);
			Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
				ДатаОплаты = БухИт.Субконто(ВидыСубконто.ДатыОплаты);
				
				Если (ДатаГод(Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию))&lt;&gt; ДатаГод(Дата2))
					и (ОбъектПриобретенДоПримененияУСН = 0) Тогда
					Продолжить;
				КонецЕсли;
				
				СуммаОплаты = 0;
				Если ДатаОплаты &lt; Константа.ДатаПереходаНаУСН Тогда
					Оплата.ВыбратьЗначения(, Константа.ДатаПереходаНаУСН - 1);
				Иначе	
					Оплата.ВыбратьЗначения(ДатаОплаты, ДатаОплаты);
				КонецЕсли;	
				Пока Оплата.ПолучитьЗначение() = 1 Цикл
					СуммаОплаты = СуммаОплаты + Оплата.Значение;
				КонецЦикла;
				
				//РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию));
				ДатаВключенияСтоимостиВРасходы = Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию);
				КоличествоКварталовВОтчетномПериоде  = 0;
				КоличествоКварталовВНалоговомПериоде = 0;
				
				НомерКвартала = ДатаМесяц(КонКвартала(Дата2)) / 3;
				Если ДатаГод(ДатаВключенияСтоимостиВРасходы) &lt; ДатаГод(Дата2) Тогда
					КоличествоКварталовВОтчетномПериоде  = НомерКвартала;
					КоличествоКварталовВНалоговомПериоде = 4;
					
				ИначеЕсли ДатаВключенияСтоимостиВРасходы &lt;= Дата2 Тогда
					НомерКварталаНачалаРасчета = ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы)) / 3;
					КоличествоКварталовВОтчетномПериоде  = НомерКвартала - НомерКварталаНачалаРасчета;
					КоличествоКварталовВНалоговомПериоде = 5 - НомерКварталаНачалаРасчета;
					
					Если (ДатаМесяц(ДатаВключенияСтоимостиВРасходы) &lt;&gt; ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы))) или (ДатаВключенияСтоимостиВРасходы &gt;= '01.01.2006') Тогда
						КоличествоКварталовВОтчетномПериоде = КоличествоКварталовВОтчетномПериоде + 1;
					Иначе
						КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде - 1;
					КонецЕсли;
				КонецЕсли;
				
				СуммаРасходов = БухИт.ДО();
				ОплаченнаяОстаточнаяСтоимость = ?(ОстаточнаяСтоимость=0,0,ОстаточнаяСтоимость*(СуммаОплаты/ПервоначальнаяСтоимость));
				
				Если (ОбъектПриобретенДоПримененияУСН = 0) Тогда
					Если (Дата2 &lt; '01.01.2006') Тогда
						КоличествоКварталовВОтчетномПериоде  = "";
						КоличествоКварталовВНалоговомПериоде = "";
					Иначе
						КоличествоКварталовВОтчетномПериоде  = "";
					КонецЕсли;
				КонецЕсли;
				
				// Добавим строку в таблицу строк
				
				ТаблицаСтрок.НоваяСтрока();
				ТаблицаСтрок.ОсновноеСредство 						= ОсновноеСредство;
				ТаблицаСтрок.ДатаОплаты 							= ДатаОплаты;
				ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость 		= Мин(СуммаОплаты,ОсновноеСредство.ПервоначальнаяСтоимостьН);
				ТаблицаСтрок.Графа6_ОстаточнаяСтоимость 			= Мин(ОстаточнаяСтоимость,ОплаченнаяОстаточнаяСтоимость);
				ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде 	= КоличествоКварталовВОтчетномПериоде;
				ТаблицаСтрок.Графа9_КолКварталовВНалПериоде 		= КоличествоКварталовВНалоговомПериоде;
				ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод 		= 0;
				ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал 			= 0;
				ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод 	= СуммаРасходов;
				ТаблицаСтрок.Графа13_СуммаРасходовЗаКвартал 		= Мин(ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость, БухИтЗаОтчетныйПериод.ДО("Н02.1",,, ОсновноеСредство,ДатаОплаты));
				ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов 		= СуммаРасходовПредыдущихПериодов;
				//ТаблицаСтрок.Графа15_ОстатокРасходов 				= 0;
				ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
				
				Если (Дата2 &gt; '01.01.2006') и (КонКвартала(Дата2) &lt; КонГода(Дата2)) Тогда
					ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
				КонецЕсли;
				
				Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
					
					//ПроцентПринятыхРасходов(СрокПолезногоИспользования);
					ПроцентСписания = 0;
					Если СрокПолезногоИспользования &lt;= 3 Тогда
						Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 100;
						КонецЕсли;
					ИначеЕсли СрокПолезногоИспользования &lt;= 15 Тогда
						Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 50;
						ИначеЕсли (ДатаГод(Дата2) - 1) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 30;
						ИначеЕсли (ДатаГод(Дата2) - 2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 20;
						КонецЕсли;
					Иначе
						ПроцентСписания = 10;
					КонецЕсли;
					
					ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = ПроцентСписания;
					ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0,	Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 4));
					ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
					
				Иначе
					Если (Дата2 &gt; '01.01.2006') Тогда
						ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = 100;
						ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0, Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 2));
						ТаблицаСтрок.Графа6_ОстаточнаяСтоимость		 = 0;
						ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов	 = 0; 
						ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
						//ТаблицаСтрок.Графа15_ОстатокРасходов		 = 0;
						Если КонКвартала(Дата2) &lt; КонГода(Дата2) Тогда
							ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
						КонецЕсли;
					Иначе
						ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде = 0;
						ТаблицаСтрок.Графа9_КолКварталовВНалПериоде		 = 0;
						ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод     = 0;
						ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	     = 0;
						ТаблицаСтрок.Графа15_ОстатокРасходов			 = Макс(0, ПервоначальнаяСтоимость - БухИт.СКД());
					КонецЕсли; 
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ТаблицаСтрок.Свернуть("ОсновноеСредство, ДатаОплаты, Графа8_КолКварталовВОтчетномПериоде, Графа9_КолКварталовВНалПериоде, Графа10_ДоляРасходовЗаНалПериод, Графа11_ДоляРасходовЗаКвартал", 
		"Графа5_ПервоначальнаяСтоимость, Графа6_ОстаточнаяСтоимость, Графа12_СуммаРасходовЗаОтчетнПериод, Графа13_СуммаРасходовЗаКвартал, Графа14_РасходыПрошлыхПериодов, Графа15_ОстатокРасходов");
		
		ТаблицаСтрок.ВыбратьСтроки();
		Пока ТаблицаСтрок.ПолучитьСтроку() = 1 Цикл
			ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = Мин(ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод, ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость);		
		КонецЦикла;
		
		
		//Сформировать документ
		
		Если ТаблицаСтрок.КоличествоСтрок() &gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Дата", 	Дата2);
			ВходящиеДанные.Установить("Раздел1",СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("НМА",СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("ОС",ТаблицаСтрок);
			ВходящиеДанные.Установить("ДопКомментарий",	"Раздел II (ОС)");
			
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
			
		КонецЕсли;
		
	КонецЦикла;
	
	////////////////////////////////////////
	////Раздел 2 (НМА)
	
	ТаблицаСтрок = СоздатьОбъект("ТаблицаЗначений"); 
	ТаблицаСтрок.НоваяКолонка("НематериальныйАктив");
	ТаблицаСтрок.НоваяКолонка("ДатаОплаты");
	ТаблицаСтрок.НоваяКолонка("Графа5_ПервоначальнаяСтоимость");
	ТаблицаСтрок.НоваяКолонка("Графа6_ОстаточнаяСтоимость");
	ТаблицаСтрок.НоваяКолонка("Графа8_КолКварталовВОтчетномПериоде");
	ТаблицаСтрок.НоваяКолонка("Графа9_КолКварталовВНалПериоде");
	ТаблицаСтрок.НоваяКолонка("Графа10_ДоляРасходовЗаНалПериод");
	ТаблицаСтрок.НоваяКолонка("Графа11_ДоляРасходовЗаКвартал");
	ТаблицаСтрок.НоваяКолонка("Графа12_СуммаРасходовЗаОтчетнПериод");
	ТаблицаСтрок.НоваяКолонка("Графа13_СуммаРасходовЗаКвартал");
	ТаблицаСтрок.НоваяКолонка("Графа14_РасходыПрошлыхПериодов");
	ТаблицаСтрок.НоваяКолонка("Графа15_ОстатокРасходов");
	
	Оплата = СоздатьОбъект("Периодический");	
	
	КолвоКварталов = Цел(ДатаМесяц(КонКвартала(Параметры.ДатаОкончанияВыгрузкиОборотов))/3);
	Год 		   = НачГода(Параметры.ДатаОкончанияВыгрузкиОборотов);
	
	Для ТекКвартал = 1 По КолвоКварталов Цикл
		
		Дата2 = КонКвартала(ДобавитьМесяц(Год, (ТекКвартал - 1) * 3));
		ТаблицаСтрок.УдалитьСтроки();
		
		БухИтЗаОтчетныйПериод = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИтЗаОтчетныйПериод.ПериодКВ(Дата2);
		
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт.ИспользоватьСубконто(ВидыСубконто.НематериальныеАктивы);
		БухИт.ИспользоватьСубконто(ВидыСубконто.ДатыОплаты);
		БухИт.ВыполнитьЗапрос(НачГода(Дата2), Дата2, "Н02.4",,,,,);
		БухИт.ВыбратьСубконто(1);
		Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
			
			// НМА отражаем в отчете только если по нему были признаны расходы.
			Если БухИт.ДО() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НематериальныйАктив = БухИт.Субконто(ВидыСубконто.НематериальныеАктивы);
			
			СрокПолезногоИспользования = Цел(НематериальныйАктив.СрокПолезногоИспользованияН/12) + ?(НематериальныйАктив.СрокПолезногоИспользованияН%12 &lt;&gt; 0, 1, 0);
			
			Если НематериальныйАктив.ДатаПриобретения &lt; Константа.ДатаПереходаНаУСН Тогда
				ОбъектПриобретенДоПримененияУСН = 1;
			Иначе
				ОбъектПриобретенДоПримененияУСН = 0;
			КонецЕсли;
			
			ПервоначальнаяСтоимость = НематериальныйАктив.ПервоначальнаяСтоимостьН;
			
			Оплата.ИспользоватьОбъект("Оплата", НематериальныйАктив);
			
			СуммаРасходовЗаОтчетныйПериод   = БухИт.ДО();
			СуммаРасходовЗаПоследнийКвартал = БухИтЗаОтчетныйПериод.ДО("Н02.4",,, НематериальныйАктив);
			СуммаРасходовПредыдущихПериодов = БухИт.СНД();
			
			Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
				ОстаточнаяСтоимость = Макс(0, НематериальныйАктив.ПервоначальнаяСтоимостьН - НематериальныйАктив.НачисленнаяАмортизацияН);;
			Иначе	
				ОстаточнаяСтоимость = НематериальныйАктив.ПервоначальнаяСтоимостьН;
			КонецЕсли;
			
			БухИт.ВыбратьСубконто(2);
			Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
				ДатаОплаты = БухИт.Субконто(ВидыСубконто.ДатыОплаты);
				
				Если (ДатаГод(Макс(ДатаОплаты, НематериальныйАктив.ДатаПринятияКУчету))&lt;&gt; ДатаГод(Дата2))
					и (ОбъектПриобретенДоПримененияУСН = 0) Тогда
					Продолжить;
				КонецЕсли;
				
				СуммаОплаты = 0;
				Если ДатаОплаты &lt; Константа.ДатаПереходаНаУСН Тогда
					Оплата.ВыбратьЗначения(, Константа.ДатаПереходаНаУСН - 1);
				Иначе	
					Оплата.ВыбратьЗначения(ДатаОплаты, ДатаОплаты);
				КонецЕсли;	
				Пока Оплата.ПолучитьЗначение() = 1 Цикл
					СуммаОплаты = СуммаОплаты + Оплата.Значение;
				КонецЦикла;
				
				//РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, Макс(ДатаОплаты, ОсновноеСредство.ДатаВводаВЭксплуатацию));
				ДатаВключенияСтоимостиВРасходы = Макс(ДатаОплаты, НематериальныйАктив.ДатаПринятияКУчету);
				КоличествоКварталовВОтчетномПериоде  = 0;
				КоличествоКварталовВНалоговомПериоде = 0;
				
				НомерКвартала = ДатаМесяц(КонКвартала(Дата2)) / 3;
				Если ДатаГод(ДатаВключенияСтоимостиВРасходы) &lt; ДатаГод(Дата2) Тогда
					КоличествоКварталовВОтчетномПериоде  = НомерКвартала;
					КоличествоКварталовВНалоговомПериоде = 4;
					
				ИначеЕсли ДатаВключенияСтоимостиВРасходы &lt;= Дата2 Тогда
					НомерКварталаНачалаРасчета = ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы)) / 3;
					КоличествоКварталовВОтчетномПериоде  = НомерКвартала - НомерКварталаНачалаРасчета;
					КоличествоКварталовВНалоговомПериоде = 5 - НомерКварталаНачалаРасчета;
					
					Если (ДатаМесяц(ДатаВключенияСтоимостиВРасходы) &lt;&gt; ДатаМесяц(КонКвартала(ДатаВключенияСтоимостиВРасходы))) или (ДатаВключенияСтоимостиВРасходы &gt;= '01.01.2006') Тогда
						КоличествоКварталовВОтчетномПериоде = КоличествоКварталовВОтчетномПериоде + 1;
					Иначе
						КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде - 1;
					КонецЕсли;
				КонецЕсли;
				
				СуммаРасходов = БухИт.ДО();
				ОплаченнаяОстаточнаяСтоимость = ?(ОстаточнаяСтоимость=0,0,ОстаточнаяСтоимость*(СуммаОплаты/ПервоначальнаяСтоимость));
				
				Если (ОбъектПриобретенДоПримененияУСН = 0) Тогда
					Если (Дата2 &lt; '01.01.2006') Тогда
						КоличествоКварталовВОтчетномПериоде  = "";
						КоличествоКварталовВНалоговомПериоде = "";
					Иначе
						КоличествоКварталовВОтчетномПериоде  = "";
					КонецЕсли;
				КонецЕсли;
				
				// Добавим строку в таблицу строк
				
				ТаблицаСтрок.НоваяСтрока();
				ТаблицаСтрок.НематериальныйАктив					= НематериальныйАктив;
				ТаблицаСтрок.ДатаОплаты 							= ДатаОплаты;
				ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость 		= Мин(СуммаОплаты,НематериальныйАктив.ПервоначальнаяСтоимостьН);
				ТаблицаСтрок.Графа6_ОстаточнаяСтоимость 			= Мин(ОстаточнаяСтоимость,ОплаченнаяОстаточнаяСтоимость);
				ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде 	= КоличествоКварталовВОтчетномПериоде;
				ТаблицаСтрок.Графа9_КолКварталовВНалПериоде 		= КоличествоКварталовВНалоговомПериоде;
				ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод 		= 0;
				ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал 			= 0;
				ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод 	= СуммаРасходов;
				ТаблицаСтрок.Графа13_СуммаРасходовЗаКвартал 		= Мин(ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость, БухИтЗаОтчетныйПериод.ДО("Н02.4",,, НематериальныйАктив,ДатаОплаты));
				ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов 		= СуммаРасходовПредыдущихПериодов;
				//ТаблицаСтрок.Графа15_ОстатокРасходов 				= 0;
				ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
				
				Если (Дата2 &gt; '01.01.2006') и (КонКвартала(Дата2) &lt; КонГода(Дата2)) Тогда
					ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
				КонецЕсли;
				
				Если ОбъектПриобретенДоПримененияУСН = 1 Тогда
					
					//ПроцентПринятыхРасходов(СрокПолезногоИспользования);
					ПроцентСписания = 0;
					Если СрокПолезногоИспользования &lt;= 3 Тогда
						Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 100;
						КонецЕсли;
					ИначеЕсли СрокПолезногоИспользования &lt;= 15 Тогда
						Если ДатаГод(Дата2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 50;
						ИначеЕсли (ДатаГод(Дата2) - 1) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 30;
						ИначеЕсли (ДатаГод(Дата2) - 2) = ДатаГод(Константа.ДатаПереходаНаУСН) Тогда
							ПроцентСписания = 20;
						КонецЕсли;
					Иначе
						ПроцентСписания = 10;
					КонецЕсли;
					
					ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = ПроцентСписания;
					ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0,	Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 4));
					ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
					
				Иначе
					Если (Дата2 &gt; '01.01.2006') Тогда
						ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод = 100;
						ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	 = ?(КоличествоКварталовВНалоговомПериоде = 0, 0, Окр(ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод/КоличествоКварталовВНалоговомПериоде, 2));
						ТаблицаСтрок.Графа6_ОстаточнаяСтоимость		 = 0;
						ТаблицаСтрок.Графа14_РасходыПрошлыхПериодов	 = 0; 
						ТаблицаСтрок.Графа15_ОстатокРасходов		 = Макс(0, ОстаточнаяСтоимость - СуммаРасходовЗаОтчетныйПериод - СуммаРасходовПредыдущихПериодов);
						//ТаблицаСтрок.Графа15_ОстатокРасходов		 = 0;
						Если КонКвартала(Дата2) &lt; КонГода(Дата2) Тогда
							ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = 0;
						КонецЕсли;
					Иначе
						ТаблицаСтрок.Графа8_КолКварталовВОтчетномПериоде = 0;
						ТаблицаСтрок.Графа9_КолКварталовВНалПериоде		 = 0;
						ТаблицаСтрок.Графа10_ДоляРасходовЗаНалПериод     = 0;
						ТаблицаСтрок.Графа11_ДоляРасходовЗаКвартал	     = 0;
						ТаблицаСтрок.Графа15_ОстатокРасходов			 = Макс(0, ПервоначальнаяСтоимость - БухИт.СКД());
					КонецЕсли; 
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ТаблицаСтрок.Свернуть("НематериальныйАктив, ДатаОплаты, Графа8_КолКварталовВОтчетномПериоде, Графа9_КолКварталовВНалПериоде, Графа10_ДоляРасходовЗаНалПериод, Графа11_ДоляРасходовЗаКвартал", 
		"Графа5_ПервоначальнаяСтоимость, Графа6_ОстаточнаяСтоимость, Графа12_СуммаРасходовЗаОтчетнПериод, Графа13_СуммаРасходовЗаКвартал, Графа14_РасходыПрошлыхПериодов, Графа15_ОстатокРасходов");
		
		ТаблицаСтрок.ВыбратьСтроки();
		Пока ТаблицаСтрок.ПолучитьСтроку() = 1 Цикл
			ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод = Мин(ТаблицаСтрок.Графа12_СуммаРасходовЗаОтчетнПериод, ТаблицаСтрок.Графа5_ПервоначальнаяСтоимость);		
		КонецЦикла;
		
		//Сформировать документ
		
		Если ТаблицаСтрок.КоличествоСтрок() &gt; 0 Тогда
			ВходящиеДанные = СоздатьОбъект("СписокЗначений");
			ВходящиеДанные.Установить("Дата", 	Дата2);
			ВходящиеДанные.Установить("Раздел1",СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("ОС",СоздатьОбъект("ТаблицаЗначений"));
			ВходящиеДанные.Установить("НМА",ТаблицаСтрок);
			ВходящиеДанные.Установить("ДопКомментарий",	"Раздел II (НМА)");
			
			ВыгрузитьПоПравилу(,,ВходящиеДанные,, "ЗаписьКУДиР");
			
		КонецЕсли;
		
	КонецЦикла;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводку" ИспользуетсяПриЗагрузке="false">
			<Текст>ТолькоОбороты = Параметры.ПараметрыАлгоритмов.Получить("ТолькоОбороты");
Если ТолькоОбороты = 1 Тогда
	Возврат 0;
КонецЕсли;

Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
КоличествоУровней = Параметры.ПараметрыАлгоритмов.Получить("КоличествоУровней");

ОстатокДтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтС");
ОстатокДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтВ");
ОстатокДтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтК");

ОстатокКтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтС");
ОстатокКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтВ");
ОстатокКтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтК");

Налоговый = ?(Параметры.ПараметрыАлгоритмов.Получить("Регистр") = "Налоговый", 1, 0);

Сч45 = СчетПоКоду("45");

Если (ОстатокДтС &lt;&gt; 0) или (ОстатокДтВ &lt;&gt; 0) или (ОстатокДтК &lt;&gt; 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетДт = БухИт.Счет;
	Если (БухИт.Счет.Забалансовый = 0) и (Налоговый = 0) Тогда
		Проводки.СчетКт = Параметры.СчетВводаОстатков;
	КонецЕсли;
		
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОстатокДтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаДт = ОстатокДтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
		
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
													
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
													
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если (КоличествоУровней = ТекНомерСубконто) и (БухИт.Счет.Количественный = 1) Тогда
		Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
		Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
		Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОстатокДтК);
		Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "СНД");
		Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 0);
		
		ОпределитьОстатокПоСкладу();
		
		Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
	КонецЕсли;
	
КонецЕсли;

Если (ОстатокКтС &lt;&gt; 0) или (ОстатокКтВ &lt;&gt; 0) или (ОстатокКтК &lt;&gt; 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетКт = БухИт.Счет;
	Если (БухИт.Счет.Забалансовый = 0) и (Налоговый = 0) Тогда
		Проводки.СчетДт = Параметры.СчетВводаОстатков;
	КонецЕсли;
		
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОстатокКтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаКт = ОстатокКтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
		
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
													
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
													
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если (КоличествоУровней = ТекНомерСубконто) и (БухИт.Счет.Количественный = 1) и (Найти(Параметры.СписокСчетовСкладскогоУчета, БухИт.Счет.Код) = 0) Тогда
		Проводки.КоличествоКт = ОстатокКтК;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьПроводкуОбороты" ИспользуетсяПриЗагрузке="false">
			<Текст>Проводки = Параметры.ПараметрыАлгоритмов.Получить("ПроводкиОбороты");
БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОборотДтС = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтС");
ОборотДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтВ");
ОборотДтК = Параметры.ПараметрыАлгоритмов.Получить("ОборотДтК");

Сч45 = СчетПоКоду("45");

ТолькоСумма = Параметры.ПараметрыАлгоритмов.Получить("ТолькоСумма");
Если ТолькоСумма = 1 Тогда
	ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
		
Иначе
	ТекНомерСубконто = БухИт.КорСчет.КоличествоСубконто();
КонецЕсли;

Если (ОборотДтС &lt;&gt; 0) или (ОборотДтВ &lt;&gt; 0) или (ОборотДтК &lt;&gt; 0) и (ТолькоСумма = 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетДт = БухИт.Счет;
	Проводки.СчетКт = БухИт.КорСчет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по БухИт.Счет.КоличествоСубконто() Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;	
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = БухИт.КорСчет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = БухИт.КорСубконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОборотДтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаДт = ОборотДтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если (БухИт.КорСчет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.КорСчет) = 0) Тогда
		Проводки.ВалютнаяСуммаКт = ОборотДтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
														
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.КорСчет = Сч45 Тогда
		Номенклатура = БухИт.КорСубконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
														
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если ТолькоСумма = 0 Тогда
		Если (БухИт.Счет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотДтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "ДО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 0);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
		
		Если (БухИт.КорСчет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотДтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "КО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 1);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

ОборотКтС = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтС");
ОборотКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтВ");
ОборотКтК = Параметры.ПараметрыАлгоритмов.Получить("ОборотКтК");

Если (ОборотКтС &lt;&gt; 0) или (ОборотКтВ &lt;&gt; 0) или (ОборотКтК &lt;&gt; 0) и (ТолькоСумма = 0) Тогда
	Проводки.НоваяСтрока();
	Проводки.СчетКт = БухИт.Счет;
	Проводки.СчетДт = БухИт.КорСчет;
	
	Проводки.СубконтоДт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоДт.НоваяКолонка("Ключ");
	Проводки.СубконтоДт.НоваяКолонка("Значение");
	
	Проводки.СубконтоКт = СоздатьОбъект("ТаблицаЗначений");
	Проводки.СубконтоКт.НоваяКолонка("Ключ");
	Проводки.СубконтоКт.НоваяКолонка("Значение");
	
	Для НомерСубконто = 1 по БухИт.Счет.КоличествоСубконто() Цикл
		Проводки.СубконтоКт.НоваяСтрока();
		Проводки.СубконтоКт.Ключ = БухИт.Счет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоКт.Значение = БухИт.Субконто(НомерСубконто);
	КонецЦикла;	
	
	Для НомерСубконто = 1 по ТекНомерСубконто Цикл
		Проводки.СубконтоДт.НоваяСтрока();
		Проводки.СубконтоДт.Ключ = БухИт.КорСчет.ВидСубконто(НомерСубконто);
		Проводки.СубконтоДт.Значение = БухИт.КорСубконто(НомерСубконто);
	КонецЦикла;
	
	Проводки.Сумма = ОборотКтС;
	
	Если (БухИт.Счет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.Счет) = 0) Тогда
		Проводки.ВалютнаяСуммаКт = ОборотКтВ;
		Проводки.ВалютаКт = БухИт.Валюта;
	КонецЕсли;
	
	Если (БухИт.КорСчет.Валютный = 1) и (Параметры.ВыгружатьБезВалют.НайтиЗначение(БухИт.КорСчет) = 0) Тогда
		Проводки.ВалютнаяСуммаДт = ОборотКтВ;
		Проводки.ВалютаДт = БухИт.Валюта;
	КонецЕсли;
	
	Если БухИт.Счет = Сч45 Тогда
		Номенклатура = БухИт.Субконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаКт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаКт = "45.02";
														
		Иначе
			Проводки.КодСчетаКт = "45.03";
		КонецЕсли;
	КонецЕсли;

	Если БухИт.КорСчет = Сч45 Тогда
		Номенклатура = БухИт.КорСубконто(3);
		Если Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар Тогда
			Проводки.КодСчетаДт = "45.01";
														
		ИначеЕсли Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
			Проводки.КодСчетаДт = "45.02";
														
		Иначе
			Проводки.КодСчетаДт = "45.03";
		КонецЕсли;
	КонецЕсли;
	
	Если ТолькоСумма = 0 Тогда
		Если (БухИт.Счет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотКтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "КО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 0);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
		
		Если (БухИт.КорСчет.Количественный = 1) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);
			Параметры.ПараметрыАлгоритмов.Установить("БухИтПроводокПоСкладам", БухИт);
			Параметры.ПараметрыАлгоритмов.Установить("ОстатокПроводокПоСкладам", ОборотКтК);
			Параметры.ПараметрыАлгоритмов.Установить("ИмяИтоговПроводокПоСкладам", "ДО");
			Параметры.ПараметрыАлгоритмов.Установить("КорСчетПроводокПоСкладам", 1);

			ОпределитьОстатокПоСкладу();
			
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("Проводки");
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьРеквизитыДокументаВНО" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл                                                  
	
	СчетДт = ?(ПустоеЗначение(КоллекцияОбъектов.КодСчетаДт) = 1, КоллекцияОбъектов.СчетДт, КоллекцияОбъектов.КодСчетаДт);
	СчетКт = ?(ПустоеЗначение(КоллекцияОбъектов.КодСчетаКт) = 1, КоллекцияОбъектов.СчетКт, КоллекцияОбъектов.КодСчетаКт);
	
	Если (ПустоеЗначение(СчетДт) = 1) и (ПустоеЗначение(СчетКт) = 1) Тогда
		Сообщить("Попытка выгрузки проводки без указания счетов дебета и кредита. Проводка не выгружена.");
		Отказ = 1;
	КонецЕсли;
	
	Субконто1 = "";
	Субконто2 = "";
	Субконто3 = "";
	СуммаКт = 0;
	Сумма = 0;
	Количество = 0;
	ВалютнаяСумма = 0;
	
	Если (СокрЛП(СчетКт) &lt;&gt; "00")
		И (СокрЛП(СчетКт) &lt;&gt; "Вспомогательный")
		И (ПустоеЗначение(СокрЛП(СчетКт)) = 0) Тогда
		СчетУчета = СчетКт;
		СуммаКт = КоллекцияОбъектов.Сумма;
		Сумма = 0;
		Если ПустоеЗначение(КоллекцияОбъектов.ВалютнаяСуммаКт) = 0 Тогда
			Валюта = КоллекцияОбъектов.ВалютаКт;
			ВалютнаяСумма = КоллекцияОбъектов.ВалютнаяСуммаКт;
		КонецЕсли;
		Количество = КоллекцияОбъектов.КоличествоКт;
		
		Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() &gt;= 1 Тогда
			Субконто1 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(1, "Значение");
			Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() &gt;= 2 Тогда
				Субконто2 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(2, "Значение");
				Если КоллекцияОбъектов.СубконтоКт.КоличествоСтрок() = 3 Тогда
					Субконто3 = КоллекцияОбъектов.СубконтоКт.ПолучитьЗначение(3, "Значение");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (СокрЛП(СчетДт) &lt;&gt; "00")
		И (СокрЛП(СчетДт) &lt;&gt; "Вспомогательный") 
		И (ПустоеЗначение(СокрЛП(СчетДт)) = 0) Тогда
		СчетУчета = СчетДт;
		СуммаКт = 0;
		Сумма = КоллекцияОбъектов.Сумма;
		Если ПустоеЗначение(КоллекцияОбъектов.ВалютнаяСуммаДт) = 0 Тогда
			Валюта = КоллекцияОбъектов.ВалютаДт;
			ВалютнаяСумма = КоллекцияОбъектов.ВалютнаяСуммаДт;
		КонецЕсли;
		Количество = КоллекцияОбъектов.КоличествоДт;
		
		Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() &gt;= 1 Тогда
			Субконто1 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(1, "Значение");
			Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() &gt;= 2 Тогда
				Субконто2 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(2, "Значение");
				Если КоллекцияОбъектов.СубконтоДт.КоличествоСтрок() = 3 Тогда
					Субконто3 = КоллекцияОбъектов.СубконтоДт.ПолучитьЗначение(3, "Значение");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	КоллекцияОбъектов.СчетУчета = СчетУчета;
	КоллекцияОбъектов.Субконто1 = Субконто1;
	КоллекцияОбъектов.Субконто2 = Субконто2;
	КоллекцияОбъектов.Субконто3 = Субконто3;
	КоллекцияОбъектов.СуммаКт = СуммаКт;
	КоллекцияОбъектов.Сумма = Сумма;
	КоллекцияОбъектов.Количество = Количество;
	КоллекцияОбъектов.Валюта = Валюта;
	КоллекцияОбъектов.ВалютнаяСумма = ВалютнаяСумма;
	
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДС" ИспользуетсяПриЗагрузке="false">
			<Текст>//Если (Параметры.ТаблицаНДС.КоличествоСтрок() &gt; 0) Тогда
//	Возврат Параметры.ТаблицаНДС;
//КонецЕсли;

Параметры.ТаблицаНДС.УдалитьСтроки();

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
СчетаРасчета =  "10.2, 10.3, 10.12, 10.13, 41.2, 41.3, 44.2, 60.2, 60.4, 60.22, 71.2, "+
				"71.22, 76.6, 76.66, 97.2, 97.3, 97.4, КМС.1, КМС.3, ПС.1, ПС.2";

Если ОстаткиНаКонец = 0 Тогда
	БухИт.Рассчитать( , Параметры.ДатаВводаОстатков-1, СчетаРасчета);
Иначе
	БухИт.Рассчитать( , Параметры.ДатаКонцаПериодаВыгрузки, СчетаРасчета);
КонецЕсли;

Счет = СчетПоКоду("НДС");
БухИтНДС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтНДС.ИспользоватьСубконто(Счет.ВидСубконто(1));
БухИтНДС.ИспользоватьСубконто(Счет.ВидСубконто(2));
БухИтНДС.ИспользоватьСубконто(Счет.ВидСубконто(3));

Если ОстаткиНаКонец = 0 Тогда
	БухИтНДС.ВыполнитьЗапрос(, Параметры.ДатаВводаОстатков-1, Счет);
Иначе
	БухИтНДС.ВыполнитьЗапрос(, Параметры.ДатаКонцаПериодаВыгрузки, Счет);
КонецЕсли;
	
БухИтНДС.ВыбратьСубконто(1);
Пока БухИтНДС.ПолучитьСубконто(1) = 1 Цикл
	БухИтНДС.ВыбратьСубконто(2);
	Пока БухИтНДС.ПолучитьСубконто(2) = 1 Цикл
		БухИтНДС.ВыбратьСубконто(3);
		Пока БухИтНДС.ПолучитьСубконто(3) = 1 Цикл
			
			Контрагент = БухИтНДС.Субконто(1);
			Договор = БухИтНДС.Субконто(2);
			ВидРасчетов = БухИтНДС.Субконто(3);
			Активы = 0;
			Если ВидРасчетов = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеМатериалов Тогда
				Материалы	   = Макс(0, БухИт.СКД("10.2", "С",,, Контрагент, Договор)+
										 БухИт.СКД("10.3", "С",,, Контрагент, Договор)+
										 БухИт.СКД("10.12", "С",,, Контрагент, Договор)+
										 БухИт.СКД("10.13", "С",,, Контрагент, Договор));
				Товары   	   = Макс(0, БухИт.СКД("41.2", "С",,, Контрагент, Договор)+
										 БухИт.СКД("41.3", "С",,, Контрагент, Договор)+
										 БухИт.СКД("44.2", "С",,, Договор)+
										 БухИт.СКД("КМС.1", "С",,,, Договор)+
										 БухИт.СКД("КМС.3", "С",,,, Договор)+
										 БухИт.СКД("ПС.1", "С",,,, Договор)+
										 БухИт.СКД("ПС.2", "С",,,, Договор));
				Активы = Материалы + Товары;
			ИначеЕсли (ВидРасчетов = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРасходы) или
				(ВидРасчетов = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
				РБП			   = Макс(0, БухИт.СКД("97.2", "С",,, Контрагент, Договор)+
										 БухИт.СКД("97.3", "С",,, Контрагент, Договор)+
										 БухИт.СКД("97.4", "С",,, Контрагент, Договор));
				Активы = РБП;
			КонецЕсли;
			Задолженность1 = Макс(0, БухИт.СКК("60.2", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("60.4", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("60.22", "С",, Контрагент, Договор, ВидРасчетов));
			Задолженность2 = Макс(0, БухИт.СКК("71.2", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("71.22", "С",, Контрагент, Договор, ВидРасчетов));
			Задолженность3 = Макс(0, БухИт.СКК("76.6", "С",, Контрагент, Договор, ВидРасчетов)+
									 БухИт.СКК("76.66", "С",, Контрагент, Договор, ВидРасчетов));
			
			ЗадолженностьПередПоставщиком  = Задолженность1+Задолженность2+Задолженность3;
			
			СуммаНеПринятыхРасходов = Макс(Активы, ЗадолженностьПередПоставщиком);
			
			Представление1 = ?(ПустоеЗначение(БухИтНДС.Субконто(1)) = 1, "", Строка(БухИтНДС.Субконто(1).Код));
			Представление2 = ?(ПустоеЗначение(БухИтНДС.Субконто(2)) = 1, "", Строка(БухИтНДС.Субконто(2).Код));
			Представление3 = Строка(БухИтНДС.Субконто(3));
			СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
						
			Параметры.ТаблицаНДС.НоваяСтрока();
			Параметры.ТаблицаНДС.НДС 		= БухИтНДС.СКД("С");
			Параметры.ТаблицаНДС.Сумма 		= СуммаНеПринятыхРасходов;
			Параметры.ТаблицаНДС.Контрагент = БухИтНДС.Субконто(1);
			Параметры.ТаблицаНДС.Договор 	= БухИтНДС.Субконто(2);
			Параметры.ТаблицаНДС.ВидРасчетов= БухИтНДС.Субконто(3);
			Параметры.ТаблицаНДС.Ключ 		= СтрокаКлюча;
						
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ДобавитьЗаписьПоТМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТолькоОбороты = Параметры.ПараметрыАлгоритмов.Получить("ТолькоОбороты");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
Если ТолькоОбороты = 1 Тогда
	Возврат 0;
КонецЕсли;

ОстаткиПоТМЦ 				= Параметры.ОстаткиПоТМЦ;
ОстаткиПоТМЦПереданные		= Параметры.ОстаткиПоТМЦПереданные;
РасходыНоменклатура			= Параметры.РасходыНоменклатура;

ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетов;
Параметры.ТаблицаНДСНач.Выгрузить(Параметры.ТаблицаНДС);

СтрокаТаблицыЗначений		= Параметры.СтрокаТаблицыЗначений;

БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
Счет  = БухИт.Счет;
ТекНомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("ТекНомерСубконто");
КоличествоУровней = Параметры.ПараметрыАлгоритмов.Получить("КоличествоУровней");

ОстатокДтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтС");
ОстатокДтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтВ");
ОстатокДтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокДтК");

ОстатокКтС = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтС");
ОстатокКтВ = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтВ");
ОстатокКтК = Параметры.ПараметрыАлгоритмов.Получить("ОстатокКтК");

Если (ОстатокДтС &lt;&gt; 0) или (ОстатокДтВ &lt;&gt; 0) или (ОстатокДтК &lt;&gt; 0) Тогда
	
	//Добавить запись по расходам
	Если (Счет.Код &lt;&gt; "10.1") И (Счет.Код  &lt;&gt; "41.1") И (Счет.Код  &lt;&gt; "43") И (Счет.Код &lt;&gt; "004") Тогда
		
		//Определение входящего НДС
		Сумма 			= ?(БухИт.Счет.Валютный = 1, ОстатокДтВ, ОстатокДтС);
		Представление1 	= ?(ПустоеЗначение(БухИт.Субконто(3)) = 1, "", Строка(БухИт.Субконто(3).Владелец.Код));
		Представление2 	= ?(ПустоеЗначение(БухИт.Субконто(3)) = 1, "", Строка(БухИт.Субконто(3).Код));
		Представление3 	= Строка(Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеМатериалов);
		СтрокаКлюча 	= Представление1 + ";" + Представление2 + ";" + Представление3;
		НомерСтроки 	= "";
		
		Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
			Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
			НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма);
			НДСВал = ?((ОстатокДтВ = 0) ИЛИ (ОстатокДтС = 0), 0, НДС/(ОстатокДтС/ОстатокДтВ));						
			
		Иначе
			НДС = 0;
			НДСВал = 0;
			
		КонецЕсли;
					
		РасходыНоменклатура.НоваяСтрока();
		РасходыНоменклатура.Номенклатура 				= БухИт.Субконто(1);
		РасходыНоменклатура.СчетУчета 					= БухИт.Счет;
		РасходыНоменклатура.СтатусыПартийУСН 			= "Купленные";
		РасходыНоменклатура.Контрагент 					= БухИт.Субконто(2);
		РасходыНоменклатура.ДоговорКонтрагента 			= БухИт.Субконто(3);
		РасходыНоменклатура.РасчетныйДокумент 			= БухИт.Субконто(3);
		РасходыНоменклатура.ДокументОприходования       = БухИт.Субконто(3);
		РасходыНоменклатура.СтатусыОплатыРасходовУСН	= "НеСписано";
		РасходыНоменклатура.ОтражениеВУСН 				= "Принимаются";
		РасходыНоменклатура.Валюта 						= Параметры.Рубли;
		РасходыНоменклатура.Количество 					= ОстатокДтК;
		РасходыНоменклатура.Сумма 						= ОстатокДтС;
		РасходыНоменклатура.НДС 						= НДС;
		Если БухИт.Счет.Валютный = 1 Тогда
			РасходыНоменклатура.СуммаВал = ОстатокДтВ;
			РасходыНоменклатура.НДСВал = НДСВал;
			РасходыНоменклатура.Валюта = БухИт.Валюта;
		КонецЕсли;
		
		Если Сумма  &gt; 0 Тогда
			
			СтрокаТаблицыЗначений.УдалитьСтроки();
			
			СтрокаТаблицыЗначений.НоваяСтрока();
			СтрокаТаблицыЗначений.Номенклатура 				= РасходыНоменклатура.Номенклатура;
			СтрокаТаблицыЗначений.СчетУчета 				= РасходыНоменклатура.СчетУчета;
			СтрокаТаблицыЗначений.СтатусыПартийУСН 			= "Купленные";
			СтрокаТаблицыЗначений.Контрагент 				= РасходыНоменклатура.Контрагент;
			СтрокаТаблицыЗначений.ДоговорКонтрагента 		= РасходыНоменклатура.ДоговорКонтрагента;
			СтрокаТаблицыЗначений.РасчетныйДокумент 		= РасходыНоменклатура.ДоговорКонтрагента;
			СтрокаТаблицыЗначений.ДокументОприходования       = РасходыНоменклатура.ДокументОприходования;
			СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
			СтрокаТаблицыЗначений.ОтражениеВУСН 			= "Принимаются";
			СтрокаТаблицыЗначений.Валюта 					= РасходыНоменклатура.Валюта;
			СтрокаТаблицыЗначений.Количество 				= РасходыНоменклатура.Количество;
			СтрокаТаблицыЗначений.Сумма 					= РасходыНоменклатура.Сумма;
			СтрокаТаблицыЗначений.НДС 						= РасходыНоменклатура.НДС;
			СтрокаТаблицыЗначений.СуммаВал 					= РасходыНоменклатура.СуммаВал;
			СтрокаТаблицыЗначений.НДСВал					= РасходыНоменклатура.НДСВал;
			СтрокаТаблицыЗначений.ИндексСтроки				= РасходыНоменклатура.НомерСтроки-1;
			
			УстановитьСтатусОплатыНоменклатуры();
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПо004" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе 
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов
КонецЕсли;

ОстаткиПоТМЦ = Параметры.ОстаткиПоТМЦ;
ОстаткиПоТМЦПереданные = Параметры.ОстаткиПоТМЦПереданные;

БухИт004 = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт004.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИт004.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт004.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт004.ВыполнитьЗапрос(, ДатаЗапроса, "004");

БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыПоставки);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтКМС.ВыполнитьЗапрос(, ДатаЗапроса, "КМС.2");

БухИт004.ВыбратьСубконто(1);
Пока БухИт004.ПолучитьСубконто(1) = 1 Цикл
	БухИт004.ВыбратьСубконто(2);
	Пока БухИт004.ПолучитьСубконто(2) = 1 Цикл
		БухИт004.ВыбратьСубконто(3);
		Пока БухИт004.ПолучитьСубконто(3) = 1 Цикл
			
			Сумма = БухИт004.СКД("С");
			Количество = БухИт004.СКД("К");
			
			Если БухИтКМС.ПолучитьСубконто(1,, БухИт004.Субконто(1)) + БухИтКМС.ПолучитьСубконто(2,, БухИт004.Субконто(3)) &gt; 1 Тогда
				БухИтКМС.ВыбратьСубконто(3);
				Пока БухИтКМС.ПолучитьСубконто(3) = 1 Цикл
					
					ОстаткиПоТМЦПереданные.НоваяСтрока(); 
					ОстаткиПоТМЦПереданные.Номенклатура				= БухИтКМС.Субконто(1);
					ОстаткиПоТМЦПереданные.ДоговорКонтрагента		= БухИтКМС.Субконто(3);
					ОстаткиПоТМЦПереданные.Контрагент				= БухИт004.Субконто(3).Владелец;
					ОстаткиПоТМЦПереданные.СчетУчета 				= "004.02";
					ОстаткиПоТМЦПереданные.ДокументПередачи			= БухИтКМС.Субконто(3);
					ОстаткиПоТМЦПереданные.ДокументОприходования	= БухИтКМС.Субконто(2);
					ОстаткиПоТМЦПереданные.Количество				= БухИтКМС.СКД("К");
					
					Сумма = Сумма - БухИтКМС.СКД("С");
					Количество = Количество - БухИтКМС.СКД("К");
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");

</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПо45" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","СКомитентом");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе 
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов
КонецЕсли;

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = ДатаЗапроса;
	Параметры.ТаблицаНДСКон.Выгрузить(Параметры.ТаблицаНДС);
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
	Параметры.ТаблицаНДСНач.Выгрузить(Параметры.ТаблицаНДС);
КонецЕсли;

ОстаткиПоТМЦ 				= Параметры.ОстаткиПоТМЦ;
ОстаткиПоТМЦПереданные 		= Параметры.ОстаткиПоТМЦПереданные;
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
ВременнаяТаблицаРасчетов	= Параметры.ВременнаяТаблицаРасчетов;
СтрокаТаблицыЗначений		= Параметры.СтрокаТаблицыЗначений;

БухИт45 = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт45.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИт45.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт45.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт45.ВыполнитьЗапрос(, ДатаЗапроса, "45");

БухИтКМС = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.ДоговорыПоставки);
БухИтКМС.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтКМС.ВыполнитьЗапрос(, ДатаЗапроса, "КМС.1, КМС.3");
БухИтКМС.Опции(1, 1);

БухИт45.ВыбратьСубконто(1);
Пока БухИт45.ПолучитьСубконто(1) = 1 Цикл
	БухИт45.ВыбратьСубконто(2);
	Пока БухИт45.ПолучитьСубконто(2) = 1 Цикл
		БухИт45.ВыбратьСубконто(3);
		Пока БухИт45.ПолучитьСубконто(3) = 1 Цикл
			
			Сумма = БухИт45.СКД("С");
			Количество = БухИт45.СКД("К");
			
			Номенклатура = БухИт45.Субконто(1);
			КодСчета = СчетПоКоду("45");
						
			БухИтКМС.ВыбратьСчета();
			Пока БухИтКМС.Получитьсчет() = 1 Цикл
				
				БухИтКМС.ВыбратьСубконто(1);
				Пока БухИтКМС.ПолучитьСубконто(1) = 1 Цикл
					
					Если  БухИт45.Субконто(1) &lt;&gt;  БухИтКМС.Субконто(1) Тогда
						Продолжить;
					КонецЕсли;
					
					БухИтКМС.ВыбратьСубконто(2);
					Пока БухИтКМС.ПолучитьСубконто(2) = 1 Цикл
						
						БухИтКМС.ВыбратьСубконто(3);
						Пока БухИтКМС.ПолучитьСубконто(3) = 1 Цикл
							
							Если  БухИт45.Субконто(3) &lt;&gt;  БухИтКМС.Субконто(3) Тогда
								Продолжить;
							КонецЕсли;
							//Расходы
							
							//Определение входящего НДС
							Сумма 			= БухИтКМС.СКД("С");
							Представление1 	= ?(ПустоеЗначение(БухИтКМС.Субконто(2)) = 1, "", Строка(БухИтКМС.Субконто(2).Владелец.Код));
							Представление2 	= ?(ПустоеЗначение(БухИтКМС.Субконто(2)) = 1, "", Строка(БухИтКМС.Субконто(2).Код));
							Представление3 	= Строка(Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеМатериалов);
							СтрокаКлюча 	= Представление1 + ";" + Представление2 + ";" + Представление3;
							НомерСтроки 	= "";
							
							Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
								Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
								НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма);
								
							Иначе
								НДС = 0;
							КонецЕсли;
							
							РасходыНоменклатура.НоваяСтрока();
							РасходыНоменклатура.Номенклатура 				= Номенклатура;
							РасходыНоменклатура.СчетУчета 					= КодСчета;
							РасходыНоменклатура.СтатусыПартийУСН 			= "НаРеализации";
							РасходыНоменклатура.Контрагент 					= БухИтКМС.Субконто(2).Владелец;
							РасходыНоменклатура.ДоговорКонтрагента 			= БухИтКМС.Субконто(2);
							РасходыНоменклатура.СтатусыОплатыРасходовУСН	= "НеСписано";
							РасходыНоменклатура.ОтражениеВУСН 				= "Принимаются";
							РасходыНоменклатура.Валюта 						= Параметры.Рубли;
							РасходыНоменклатура.Количество 					= БухИтКМС.СКД("К");
							РасходыНоменклатура.Сумма 						= Сумма;
							РасходыНоменклатура.НДС 						= НДС;
							РасходыНоменклатура.ПартияСинхронизации			= БухИтКМС.Субконто(3);
							
							Если Сумма  &gt; 0 Тогда
								
								СтрокаТаблицыЗначений.УдалитьСтроки();
								
								СтрокаТаблицыЗначений.НоваяСтрока();
								СтрокаТаблицыЗначений.Номенклатура 				= РасходыНоменклатура.Номенклатура;
								СтрокаТаблицыЗначений.СчетУчета 				= РасходыНоменклатура.СчетУчета;
								СтрокаТаблицыЗначений.СтатусыПартийУСН 			= "НаРеализации";
								СтрокаТаблицыЗначений.Контрагент 				= РасходыНоменклатура.Контрагент;
								СтрокаТаблицыЗначений.ДоговорКонтрагента 		= РасходыНоменклатура.ДоговорКонтрагента;	
								СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
								СтрокаТаблицыЗначений.ОтражениеВУСН 			= "Принимаются";
								СтрокаТаблицыЗначений.Валюта 					= РасходыНоменклатура.Валюта;
								СтрокаТаблицыЗначений.Количество 				= РасходыНоменклатура.Количество;
								СтрокаТаблицыЗначений.Сумма 					= РасходыНоменклатура.Сумма;
								СтрокаТаблицыЗначений.НДС 						= РасходыНоменклатура.НДС;
								СтрокаТаблицыЗначений.ПартияСинхронизации		= РасходыНоменклатура.ПартияСинхронизации;
								СтрокаТаблицыЗначений.ИндексСтроки				= РасходыНоменклатура.НомерСтроки-1;
								
								УстановитьСтатусОплатыНоменклатуры();
							КонецЕсли;
							
							ОстаткиПоТМЦПереданные.НоваяСтрока(); 
							ОстаткиПоТМЦПереданные.Номенклатура				= БухИтКМС.Субконто(1);
							ОстаткиПоТМЦПереданные.ДоговорКонтрагента		= БухИтКМС.Субконто(3);
							ОстаткиПоТМЦПереданные.Контрагент				= БухИт45.Субконто(3).Владелец;
							ОстаткиПоТМЦПереданные.СчетУчета 				= КодСчета;
							ОстаткиПоТМЦПереданные.ДокументПередачи			= БухИтКМС.Субконто(3);
							ОстаткиПоТМЦПереданные.ДокументОприходования	= БухИтКМС.Субконто(2);
							ОстаткиПоТМЦПереданные.Количество				= БухИтКМС.СКД("К");
							
							Сумма = Сумма - БухИтКМС.СКД("С");
							Количество = Количество - БухИтКМС.СКД("К");
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
			//Не принимаемые расходы
			Если (Количество &gt; 0) Тогда
				
				ОстаткиПоТМЦПереданные.НоваяСтрока(); 
				ОстаткиПоТМЦПереданные.Номенклатура				= БухИт45.Субконто(1);
				ОстаткиПоТМЦПереданные.ДоговорКонтрагента		= БухИт45.Субконто(3);
				ОстаткиПоТМЦПереданные.Контрагент				= БухИт45.Субконто(3).Владелец;
				ОстаткиПоТМЦПереданные.СчетУчета 				= КодСчета;
				ОстаткиПоТМЦПереданные.ДокументПередачи			= БухИт45.Субконто(3);
				ОстаткиПоТМЦПереданные.ДокументОприходования	= ПолучитьПустоеЗначение(ВидыСубконто.ДоговорыПоставки);
				ОстаткиПоТМЦПереданные.Количество				= Количество;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора","");</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПодотчетниками" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ЗаполнитьТаблицуНДС();
ОстаткиПоВзаиморасчетамСПодотчетниками 	= Параметры.ОстаткиПоВзаиморасчетамСПодотчетниками;
ВременнаяТаблицаРасчетов		 		= Параметры.ВременнаяТаблицаРасчетов;
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтД.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, "71.1, 71.2, 71.11, 71.22");

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.ВидыРасчетовСПоставщиками);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, "71.2, 71.22");

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	БухИтД.ВыбратьСубконто(2);
	Пока БухИтД.ПолучитьСубконто(2) = 1 Цикл
		
		Подотчетник 		= БухИтД.Субконто(1);
		РасчетныйДокумент 	= БухИтД.Субконто(2);
		
		БухИтД.ВыбратьСчета();
		Пока БухИтД.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИтД.ВыбратьВалюты() = 1 Тогда
				Пока БухИтД.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтД.Валюта;
					НДС = 0;
					Сумма = 0;
					РаспредНДС = 0;
					РаспредСумма = 0;
					НеПринСумма = 0;
    				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьВалюту(,БухИтД.Валюта)+	БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+
						БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 3 Тогда
						ОтражениеВНУ = "Принимаются";
						БухИтДР.ВыбратьСубконто(3);
						Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
							БухИтДР.ПолучитьВалюту(,БухИтД.Валюта);
							Сумма_ВР = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("В") - БухИтДР.СКК("В"), БухИтДР.СКК("В") - БухИтДР.СКД("В"));
												
							//Определение входящего НДС
							Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
							Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
							Представление3 = Строка(БухИтДР.Субконто(3));
							СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
							НомерСтроки = "";
							Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
								Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
								НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
							КонецЕсли;
							
							Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
								(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
								РаспредСумма = РаспредСумма + Сумма_ВР;
								РаспредНДС = РаспредНДС + НДС_ВР;
							ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
							Иначе
								Сумма = Сумма + Сумма_ВР;
								НДС = НДС + НДС_ВР;
							КонецЕсли;
							
						КонецЦикла;
					Иначе
						ОтражениеВНУ = "НеПринимаются";
						НеПринСумма = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("В") - БухИтД.СКК("В"), БухИтД.СКК("В") - БухИтД.СКД("В"));
					КонецЕсли;
					
					Если Сумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Принимаются";
						ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
						ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= Сумма;
						
						Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
							ВременнаяТаблицаРасчетов.НДС								= НДС;
							
						КонецЕсли;
					КонецЕсли;
					Если РаспредСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Распределяются";
						ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
						ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= РаспредСумма;
						
						Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
							
						КонецЕсли;
					КонецЕсли;
					Если НеПринСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "НеПринимаются";
						ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
						ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= НеПринСумма;
						
						Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.НДС								= 0;
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				Валюта = Параметры.Рубли;
				НДС = 0;
				Сумма = 0;
				РаспредНДС = 0;
				РаспредСумма = 0;
				НеПринСумма = 0;
				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 2 Тогда
					ОтражениеВНУ = "Принимаются";
					БухИтДР.ВыбратьСубконто(3);
					Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
						
						Сумма_ВР = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							
						
						//Определение входящего НДС
						Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
						Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
						Представление3 = Строка(БухИтДР.Субконто(3));
						СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
						НомерСтроки = "";
						Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
							Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
							НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
						КонецЕсли;
						
						Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
							(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
							РаспредСумма = РаспредСумма + Сумма_ВР;
							РаспредНДС = РаспредНДС + НДС_ВР;
						ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
						Иначе
							Сумма = Сумма + Сумма_ВР;
							НДС = НДС + НДС_ВР;
						КонецЕсли;
					КонецЦикла;
				Иначе
					ОтражениеВНУ = "НеПринимаются";
					НеПринСумма = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
				КонецЕсли;
				
				Если Сумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Принимаются";
					ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
					ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= Сумма;
					
					Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
						ВременнаяТаблицаРасчетов.НДС								= НДС;
						
					КонецЕсли;
				КонецЕсли;
				Если РаспредСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Распределяются";
					ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
					ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= РаспредСумма;
					
					Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
						
					КонецЕсли;
				КонецЕсли;
				Если НеПринСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "НеПринимаются";
					ОстаткиПоВзаиморасчетамСПодотчетниками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник 			= Подотчетник;
					ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент 	= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПодотчетниками.СуммаВзаиморасчетов 	= НеПринСумма;
					
					Если ОстаткиПоВзаиморасчетамСПодотчетниками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПодотчетниками.Подотчетник;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПодотчетниками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.НДС								= 0;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПокупателями" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
ОстаткиПоВзаиморасчетамСПокупателями 	= Параметры.ОстаткиПоВзаиморасчетамСПокупателями;

ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт.ВыполнитьЗапрос(, ДатаЗапроса, "62.1, 62.2, 62.3, 62.4, 62.11, 62.33, 62.44");

БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	БухИт.ВыбратьСубконто(2);
	Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИт.Субконто(1);
		ДоговорКонтрагента	= БухИт.Субконто(2);
		РасчетныйДокумент 	= БухИт.Субконто(2);
		
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИт.ВыбратьВалюты() = 1 Тогда
				Пока БухИт.ПолучитьВалюту() = 1 Цикл
					Сумма = 0;
					ДоходКомитента = 0;
					ДоходЕНВД = 0;
					
					Сумма = ?(ВидЗадолженности = "Дебиторская", БухИт.СКД("В") - БухИт.СКК("В"), БухИт.СКК("В") - БухИт.СКД("В"));
					Если (БухИт.Счет.Код = "62.2") Тогда
						ДоходКомитента = Сумма;
					ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
						ДоходЕНВД = Сумма;
					КонецЕсли;
					Если Сумма &lt;&gt; 0 Тогда
						ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= Сумма;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Сумма = 0;
				ДоходКомитента = 0;
				ДоходЕНВД = 0;
				Сумма = ?(ВидЗадолженности = "Дебиторская", БухИт.СКД("С") - БухИт.СКК("С"), БухИт.СКК("С") - БухИт.СКД("С"));
				Если (БухИт.Счет.Код = "62.2") Тогда
					ДоходКомитента = Сумма;
				ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
					ДоходЕНВД = Сумма;
				КонецЕсли;
				Если Сумма &lt;&gt; 0 Тогда
					ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ОстаткиПоВзаиморасчетамСПокупателями.Свернуть("Контрагент, ДоговорКонтрагента,ВидЗадолженности,РасчетныйДокумент","СуммаВзаиморасчетов,ДоходКомитента,ДоходЕНВД");
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПокупателямиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ОстаткиПоВзаиморасчетамСПокупателями 	= Параметры.ОстаткиПоВзаиморасчетамСПокупателями;
ОстаткиПоВзаиморасчетамСПокупателями.УдалитьСтроки();
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИт.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИт.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИт.ВыбратьСубконто(1);
Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
	БухИт.ВыбратьСубконто(2);
	Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИт.Субконто(1);
		ДоговорКонтрагента	= БухИт.Субконто(2);
		РасчетныйДокумент 	= БухИт.Субконто(2);
		
		БухИт.ВыбратьСчета();
		Пока БухИт.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИт.ВыбратьВалюты() = 1 Тогда
				Пока БухИт.ПолучитьВалюту() = 1 Цикл
					Сумма = 0;
					ДоходКомитента = 0;
					ДоходЕНВД = 0;
					
					Сумма = ?(ВидЗадолженности = "Дебиторская", БухИт.СКД("В") - БухИт.СКК("В"), БухИт.СКК("В") - БухИт.СКД("В"));
					СуммаРуб = ?(ВидЗадолженности = "Дебиторская", БухИт.СКД("С") - БухИт.СКК("С"), БухИт.СКК("С") - БухИт.СКД("С"));
					Если (БухИт.Счет.Код = "62.2") Тогда
						ДоходКомитента = Сумма;
					ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
						ДоходЕНВД = Сумма;
					КонецЕсли;
					Если Сумма &lt;&gt; 0 Тогда
						ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= СуммаРуб;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
						ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
						ОстаткиПоВзаиморасчетамСПокупателями.СчетУчета				= БухИт.Счет;
						ОстаткиПоВзаиморасчетамСПокупателями.Валюта					= БухИт.Валюта;
						ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетовВал	= Сумма;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Сумма = 0;
				ДоходКомитента = 0;
				ДоходЕНВД = 0;
				Сумма = ?(ВидЗадолженности = "Дебиторская", БухИт.СКД("С") - БухИт.СКК("С"), БухИт.СКК("С") - БухИт.СКД("С"));
				Если (БухИт.Счет.Код = "62.2") Тогда
					ДоходКомитента = Сумма;
				ИначеЕсли (БухИт.Счет.Код = "62.4") ИЛИ (БухИт.Счет.Код = "62.44") Тогда
					ДоходЕНВД = Сумма;
				КонецЕсли;
				Если Сумма &lt;&gt; 0 Тогда
					ОстаткиПоВзаиморасчетамСПокупателями.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПокупателями.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПокупателями.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПокупателями.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходКомитента 		= ДоходКомитента;
					ОстаткиПоВзаиморасчетамСПокупателями.ДоходЕНВД 				= ДоходЕНВД;
					ОстаткиПоВзаиморасчетамСПокупателями.СчетУчета				= БухИт.Счет;
					ОстаткиПоВзаиморасчетамСПокупателями.Валюта					= Параметры.Рубли;
					ОстаткиПоВзаиморасчетамСПокупателями.СуммаВзаиморасчетовВал	= Сумма;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ОстаткиПоВзаиморасчетамСПокупателями.Свернуть("Контрагент, СчетУчета, Валюта, ДоговорКонтрагента,ВидЗадолженности,РасчетныйДокумент","СуммаВзаиморасчетов, СуммаВзаиморасчетовВал,ДоходКомитента,ДоходЕНВД");

РазделУчета = ОпределитьРазделУчета();
Если ПустоеЗначение(РазделУчета) = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ВходящиеОстатки", ОстаткиПоВзаиморасчетамСПокупателями);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", ДатаЗапроса);
	ВходящиеДанные.Установить("РазделУчета", РазделУчета);
	
	Если (Параметры.П_ВыгружатьОбороты = 0)
		ИЛИ (Параметры.ДатаНачалаВыгрузкиОборотов = Параметры.ДатаОкончанияВыгрузкиОборотов) Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		Если ОстаткиНаКонец = 1 Тогда
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Иначе
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");


</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПоставщиками" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ЗаполнитьТаблицуНДС();
ОстаткиПоВзаиморасчетамСПоставщиками 	= Параметры.ОстаткиПоВзаиморасчетамСПоставщиками;
ВременнаяТаблицаРасчетов		 		= Параметры.ВременнаяТаблицаРасчетов;
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();

ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтД.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, "60.1, 60.2, 60.11, 60.22, 76.5, 76.6, 76.55, 76.66");

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.ВидыРасчетовСПоставщиками);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, "60.2, 60.22, 76.6, 76.66");

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	БухИтД.ВыбратьСубконто(2);
	Пока БухИтД.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИтД.Субконто(1);
		ДоговорКонтрагента	= БухИтД.Субконто(2);
		РасчетныйДокумент 	= БухИтД.Субконто(2);
		
		БухИтД.ВыбратьСчета();
		Пока БухИтД.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИтД.ВыбратьВалюты() = 1 Тогда
				Пока БухИтД.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтД.Валюта;
					НДС = 0;
					НДСРуб = 0;
					Сумма = 0;
					СуммаРуб = 0;
					РаспредНДС = 0;
					РаспредНДСРуб = 0;
					РаспредСумма = 0;
					РаспредСуммаРуб = 0;
					НеПринСумма = 0;
					НеПринСуммаРуб = 0;
    				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьВалюту(,БухИтД.Валюта)+	БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+
						БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 3 Тогда
						ОтражениеВНУ = "Принимаются";
						БухИтДР.ВыбратьСубконто(3);
						Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
							БухИтДР.ПолучитьВалюту(,БухИтД.Валюта);
							Сумма_ВР_Руб = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							Сумма_ВР = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("В") - БухИтДР.СКК("В"), БухИтДР.СКК("В") - БухИтДР.СКД("В"));
												
							//Определение входящего НДС
							Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
							Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
							Представление3 = Строка(БухИтДР.Субконто(3));
							СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
							НомерСтроки = "";
							Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
								Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
								НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
								НДС_ВР_Руб = НДС_ВР * Сумма_ВР_Руб/Сумма_ВР;
							КонецЕсли;
							
							Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
								(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
								РаспредСумма = РаспредСумма + Сумма_ВР;
								РаспредНДС = РаспредНДС + НДС_ВР;
								РаспредСуммаРуб = РаспредСуммаРуб + Сумма_ВР_Руб;
								РаспредНДСРуб = РаспредНДСРуб + НДС_ВР_Руб;
							ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
								НеПринСуммаРуб = НеПринСуммаРуб + Сумма_ВР_Руб;
							Иначе
								Сумма = Сумма + Сумма_ВР;
								НДС = НДС + НДС_ВР;
								СуммаРуб = СуммаРуб + Сумма_ВР_Руб;
								НДСРуб = НДСРуб + НДС_ВР_Руб;
							КонецЕсли;
							
						КонецЦикла;
					Иначе
						ОтражениеВНУ = "НеПринимаются";
						НеПринСумма = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("В") - БухИтД.СКК("В"), БухИтД.СКК("В") - БухИтД.СКД("В"));
						НеПринСуммаРуб = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
					КонецЕсли;
					
					Если Сумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Принимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= СуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта				 	= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
						
						Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
							ВременнаяТаблицаРасчетов.НДС								= НДС;
							
						КонецЕсли;
					КонецЕсли;
					Если РаспредСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Распределяются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
						
						Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
							ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
							
						КонецЕсли;
					КонецЕсли;
					Если НеПринСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "НеПринимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
						
						Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
							
							ВременнаяТаблицаРасчетов.НоваяСтрока();
							ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
							ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
							ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
							ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
							ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
							ВременнаяТаблицаРасчетов.Валюта								= Валюта;
							ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
							ВременнаяТаблицаРасчетов.НДС								= 0;
							
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				Валюта = Параметры.Рубли;
				НДС = 0;
				Сумма = 0;
				РаспредНДС = 0;
				РаспредСумма = 0;
				НеПринСумма = 0;
				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 2 Тогда
					ОтражениеВНУ = "Принимаются";
					БухИтДР.ВыбратьСубконто(3);
					Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
						
						Сумма_ВР = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							
						
						//Определение входящего НДС
						Представление1 = ?(ПустоеЗначение(БухИтД.Субконто(1)) = 1, "", Строка(БухИтД.Субконто(1).Код));
						Представление2 = ?(ПустоеЗначение(БухИтД.Субконто(2)) = 1, "", Строка(БухИтД.Субконто(2).Код));
						Представление3 = Строка(БухИтДР.Субконто(3));
						СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
						НомерСтроки = "";
						Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
							Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
							НДС_ВР = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма_ВР * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
						КонецЕсли;
						
						Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
							(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
							РаспредСумма = РаспредСумма + Сумма_ВР;
							РаспредНДС = РаспредНДС + НДС_ВР;
						ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
						Иначе
							Сумма = Сумма + Сумма_ВР;
							НДС = НДС + НДС_ВР;
						КонецЕсли;
					КонецЦикла;
				Иначе
					ОтражениеВНУ = "НеПринимаются";
					НеПринСумма = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
				КонецЕсли;
				
				Если Сумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Принимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					
					Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(Сумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(Сумма);
						ВременнаяТаблицаРасчетов.НДС								= НДС;
						
					КонецЕсли;
				КонецЕсли;
				Если РаспредСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Распределяются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					
					Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(РаспредСумма);
						ВременнаяТаблицаРасчетов.НДС								= РаспредНДС;
						
					КонецЕсли;
				КонецЕсли;
				Если НеПринСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "НеПринимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					
					Если ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности = "Кредиторская" Тогда
						
						ВременнаяТаблицаРасчетов.НоваяСтрока();
						ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморасчетыСПоставщиками";
						ВременнаяТаблицаРасчетов.Контрагент 						= ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент;
						ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента;
						ВременнаяТаблицаРасчетов.РасчетныйДокумент					= ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент;
						ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ;
						ВременнаяТаблицаРасчетов.Валюта								= Валюта;
						ВременнаяТаблицаРасчетов.Сумма                              = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов	            = Число(НеПринСумма);
						ВременнаяТаблицаРасчетов.НДС								= 0;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоВзаиморасчетамСПоставщикамиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
Если (Счет &lt;&gt; СчетПоКоду("60.1")) И (Счет &lt;&gt; СчетПоКоду("60.2"))
	И (Счет &lt;&gt; СчетПоКоду("60.11")) И (Счет &lt;&gt; СчетПоКоду("60.22"))
	И (Счет &lt;&gt; СчетПоКоду("76.5")) И (Счет &lt;&gt; СчетПоКоду("76.6"))
	И (Счет &lt;&gt; СчетПоКоду("76.55")) И (Счет &lt;&gt; СчетПоКоду("76.66")) Тогда
	Возврат 0;
КонецЕсли;

ОчиститьПараметры();
ОстаткиПоВзаиморасчетамСПоставщиками 	= Параметры.ОстаткиПоВзаиморасчетамСПоставщиками;
ОстаткиПоВзаиморасчетамСПоставщиками.УдалитьСтроки();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтД.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Контрагенты);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.ВидыРасчетовСПоставщиками);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, "60.2, 60.22, 76.6, 76.66");

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	БухИтД.ВыбратьСубконто(2);
	Пока БухИтД.ПолучитьСубконто(2) = 1 Цикл
		
		Контрагент 			= БухИтД.Субконто(1);
		ДоговорКонтрагента	= БухИтД.Субконто(2);
		РасчетныйДокумент 	= БухИтД.Субконто(2);
		
		БухИтД.ВыбратьСчета();
		Пока БухИтД.ПолучитьСчет() = 1 Цикл
			ВидЗадолженности = ?((БухИтД.СКД("С")-БухИтД.СКК("С")) &gt; 0, "Дебиторская", "Кредиторская");
			Если БухИтД.ВыбратьВалюты() = 1 Тогда
				Пока БухИтД.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтД.Валюта;
					Сумма = 0;
					СуммаРуб = 0;
					РаспредСумма = 0;
					РаспредСуммаРуб = 0;
					НеПринСумма = 0;
					НеПринСуммаРуб = 0;
					БухИтДР.ВыбратьСубконто(1);
					БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1));
					БухИтДР.ВыбратьСубконто(2);
					БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2));
					Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьВалюту(,БухИтД.Валюта)+	БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+
						БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 3 Тогда
						ОтражениеВНУ = "Принимаются";
						БухИтДР.ВыбратьСубконто(3);
						Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
							БухИтДР.ПолучитьВалюту(,БухИтД.Валюта);
							Сумма_ВР_Руб = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
							Сумма_ВР = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("В") - БухИтДР.СКК("В"), БухИтДР.СКК("В") - БухИтДР.СКД("В"));
							
							Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
								(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
								РаспредСумма = РаспредСумма + Сумма_ВР;
								РаспредСуммаРуб = РаспредСуммаРуб + Сумма_ВР_Руб;
							ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
								НеПринСуммаРуб = НеПринСуммаРуб + Сумма_ВР_Руб;
							Иначе
								Сумма = Сумма + Сумма_ВР;
								СуммаРуб = СуммаРуб + Сумма_ВР_Руб;
							КонецЕсли;
							
						КонецЦикла;
					Иначе
						ОтражениеВНУ = "НеПринимаются";
						НеПринСумма = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("В") - БухИтД.СКК("В"), БухИтД.СКК("В") - БухИтД.СКД("В"));
						НеПринСуммаРуб = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
					КонецЕсли;
					
					Если Сумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Принимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= СуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта				 	= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					КонецЕсли;
					Если РаспредСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "Распределяются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					КонецЕсли;
					Если НеПринСумма &lt;&gt; 0 Тогда
						ОтражениеВНУ = "НеПринимаются";
						ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
						ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
						ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
						ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
						ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСуммаРуб;
						ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
						ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
						ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				Валюта = Параметры.Рубли;
				Сумма = 0;
				РаспредСумма = 0;
				НеПринСумма = 0;
				Если БухИтДР.ПолучитьСчет(,БухИтД.Счет)+БухИтДР.ПолучитьСубконто(1,,БухИтД.Субконто(1))+БухИтДР.ПолучитьСубконто(2,,БухИтД.Субконто(2)) &gt; 2 Тогда
					ОтражениеВНУ = "Принимаются";
					БухИтДР.ВыбратьСубконто(3);
					Пока БухИтДР.ПолучитьСубконто(3) = 1 Цикл
						
						Сумма_ВР = ?(ВидЗадолженности = "Дебиторская", БухИтДР.СКД("С") - БухИтДР.СКК("С"), БухИтДР.СКК("С") - БухИтДР.СКД("С"));
						
						Если (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ПрочиеРаспределяемые) или
							(БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые) Тогда
							РаспредСумма = РаспредСумма + Сумма_ВР;
						ИначеЕсли (БухИтДР.Субконто(3) = Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) Тогда
								НеПринСумма = НеПринСумма + Сумма_ВР;
						Иначе
							Сумма = Сумма + Сумма_ВР;
						КонецЕсли;
					КонецЦикла;
				Иначе
					ОтражениеВНУ = "НеПринимаются";
					НеПринСумма = ?(ВидЗадолженности = "Дебиторская", БухИтД.СКД("С") - БухИтД.СКК("С"), БухИтД.СКК("С") - БухИтД.СКД("С"));
				КонецЕсли;
				
				Если Сумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Принимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= Сумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
				КонецЕсли;
				Если РаспредСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "Распределяются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= РаспредСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
				КонецЕсли;
				Если НеПринСумма &lt;&gt; 0 Тогда
					ОтражениеВНУ = "НеПринимаются";
					ОстаткиПоВзаиморасчетамСПоставщиками.НоваяСтрока();
					ОстаткиПоВзаиморасчетамСПоставщиками.ВидЗадолженности		= ВидЗадолженности;
					ОстаткиПоВзаиморасчетамСПоставщиками.Контрагент 			= Контрагент;
					ОстаткиПоВзаиморасчетамСПоставщиками.ДоговорКонтрагента 	= ДоговорКонтрагента;
					ОстаткиПоВзаиморасчетамСПоставщиками.РасчетныйДокумент		= РасчетныйДокумент;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетов 	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.Валюта 				= Валюта;
					ОстаткиПоВзаиморасчетамСПоставщиками.СуммаВзаиморасчетовВал	= НеПринСумма;
					ОстаткиПоВзаиморасчетамСПоставщиками.СчетУчета				= БухИтД.Счет;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

РазделУчета = ОпределитьРазделУчета();
Если ПустоеЗначение(РазделУчета) = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ВходящиеОстатки", ОстаткиПоВзаиморасчетамСПоставщиками);
	ВходящиеДанные.Установить("Счет", Счет);
	ВходящиеДанные.Установить("Дата", ДатаЗапроса);
	ВходящиеДанные.Установить("РазделУчета", РазделУчета);
	
	Если (Параметры.П_ВыгружатьОбороты = 0)
		ИЛИ (Параметры.ДатаНачалаВыгрузкиОборотов = Параметры.ДатаОкончанияВыгрузкиОборотов) Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		Если ОстаткиНаКонец = 1 Тогда
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Иначе
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");


	
				</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоЗарплате" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();

ОстаткиПоВзаиморасчетамCСотрудниками	= Параметры.ОстаткиПоВзаиморасчетамCСотрудниками;

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков - 1;
КонецЕсли;

БухИт70 = СоздатьОбъект("БухгалтерскиеИтоги");
БухИт70.ИспользоватьСубконто(ВидыСубконто.Сотрудники);
БухИт70.ВыполнитьЗапрос(,ДатаЗапроса,"70, ДФЛ.НУ, ДФЛ.РУ");

БухИт70.ВыбратьСубконто(1);
Пока БухИт70.ПолучитьСубконто(1) = 1 Цикл
	Сотрудник = БухИт70.Субконто(1);
	Сумма = 0;
	СуммаП = 0;
	СуммаН = 0;
	СуммаР = 0;
	Если БухИт70.ПолучитьСчет(, СчетПоКоду("70")) = 1 Тогда
		Если (БухИт70.СКД("С")-БухИт70.СКК("С")) &gt; 0 Тогда
			Сумма = БухИт70.СКД("С") - БухИт70.СКК("С");
			СуммаП = Сумма;
			ВидЗадолженности = "Дебиторская";
			Знак = -1;

		Иначе
			Параметры.ПараметрыАлгоритмов.Установить("СчетКт", СчетПоКоду("70"));
			Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
			Сумма = БухИт70.СКК("С") - БухИт70.СКД("С");
			ВидЗадолженности = "Кредиторская";
			Знак = 1;
			
			Если (Сумма&lt;&gt;0) и (БухИт70.ПолучитьСчет(, СчетПоКоду("ДФЛ.НУ")) = 1) Тогда
				СуммаН = Мин(Сумма, Макс(0, БухИт70.СКК("С")));
			КонецЕсли;
			Если (Сумма&lt;&gt;0) и (БухИт70.ПолучитьСчет(, СчетПоКоду("ДФЛ.РУ")) = 1) Тогда
				СуммаР = Мин(Сумма - СуммаН, Макс(0, БухИт70.СКК("С")));
			КонецЕсли;
			СуммаП = Сумма - СуммаН - СуммаР;
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаП &lt;&gt; 0 Тогда
		ОтражениеВНУ = "Принимаются";
		
		ОстаткиПоВзаиморасчетамCСотрудниками.НоваяСтрока();
		ОстаткиПоВзаиморасчетамCСотрудниками.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамCСотрудниками.Работник	 			= Сотрудник;
		ОстаткиПоВзаиморасчетамCСотрудниками.СуммаВзаиморасчетов 	= Знак*СуммаП;
		ОстаткиПоВзаиморасчетамCСотрудниками.ОтражениеВУСН		 	= ОтражениеВНУ;
		ОстаткиПоВзаиморасчетамCСотрудниками.СчетУчета			 	= СчетПоКоду("70");
		
	КонецЕсли;
	
	Если СуммаН &lt;&gt; 0 Тогда
		ОтражениеВНУ = "НеПринимаются";
		
		ОстаткиПоВзаиморасчетамCСотрудниками.НоваяСтрока();
		ОстаткиПоВзаиморасчетамCСотрудниками.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамCСотрудниками.Работник	 			= Сотрудник;
		ОстаткиПоВзаиморасчетамCСотрудниками.СуммаВзаиморасчетов 	= Знак*СуммаН;
		ОстаткиПоВзаиморасчетамCСотрудниками.ОтражениеВУСН		 	= ОтражениеВНУ;
		ОстаткиПоВзаиморасчетамCСотрудниками.СчетУчета			 	= СчетПоКоду("70");
		
	КонецЕсли;
	
	Если СуммаР &lt;&gt; 0 Тогда
		ОтражениеВНУ = "Распределяются";
		
		ОстаткиПоВзаиморасчетамCСотрудниками.НоваяСтрока();
		ОстаткиПоВзаиморасчетамCСотрудниками.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамCСотрудниками.Работник	 			= Сотрудник;
		ОстаткиПоВзаиморасчетамCСотрудниками.СуммаВзаиморасчетов 	= Знак*СуммаР;
		ОстаткиПоВзаиморасчетамCСотрудниками.ОтражениеВУСН		 	= ОтражениеВНУ;
		ОстаткиПоВзаиморасчетамCСотрудниками.СчетУчета			 	= СчетПоКоду("70");
		
	КонецЕсли;
КонецЦикла;

РазделУчета = ОпределитьРазделУчета();
Если ПустоеЗначение(РазделУчета) = 0 Тогда
	ВходящиеДанные = СоздатьОбъект("СписокЗначений");
	ВходящиеДанные.Установить("ВходящиеОстатки", ОстаткиПоВзаиморасчетамCСотрудниками);
	ВходящиеДанные.Установить("Счет", "70");
	ВходящиеДанные.Установить("Дата", ДатаЗапроса);
	ВходящиеДанные.Установить("РазделУчета", РазделУчета);
	
	Если Параметры.П_ВыгружатьОбороты = 0 Тогда
		ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
		ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
	Иначе
		Если ОстаткиНаКонец = 1 Тогда
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
		Иначе
			ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
			ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 0);
			ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 0);
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");

</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоНалогам" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе 
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов
КонецЕсли;

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
КонецЕсли;

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

ОстаткиПоВзаиморасчетамПоНалогам = Параметры.ОстаткиПоВзаиморасчетамПоНалогам;
ОстаткиПоВзаиморасчетамПоНалогам.УдалитьСтроки();
ВременнаяТаблицаРасчетов		 = Параметры.ВременнаяТаблицаРасчетов;
ВременнаяТаблицаРасчетов.УдалитьСтроки();

БухИтДФЛ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДФЛ.ВыполнитьЗапрос(,ДатаЗапроса,"ДФЛ.НФ, ДФЛ.РФ, ДФЛ.НД, ДФЛ.РД");
	
Если Счет = СчетПоКоду("68.1") Тогда
	
	БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт.ВключатьСубсчета(-1);
	БухИт.ВыполнитьЗапрос(,ДатаЗапроса, Счет);
	
	Сумма 	= 0;
	СуммаП 	= 0;
	СуммаН 	= 0;
	СуммаР 	= 0;
	Если БухИт.ПолучитьСчет(, СчетПоКоду("68.1")) = 1 Тогда
		Счет = СчетПоКоду("68.1");
		Если (БухИт.СКД("С")-БухИт.СКК("С")) &gt; 0 Тогда
			Сумма	= БухИт.СКД("С") - БухИт.СКК("С");
			СуммаП	= Сумма;
			ВидЗадолженности = "Дебиторская";
		Иначе
			Сумма = БухИт.СКК("С") - БухИт.СКД("С");
			Если (Сумма&lt;&gt;0) и (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.НД")) = 1) Тогда
				СуммаН = Мин(Сумма, Макс(0, БухИтДФЛ.СКК("С")));
			КонецЕсли;
			Если (Сумма&lt;&gt;0) и (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.РД")) = 1) Тогда
				СуммаР = Мин(Сумма - СуммаН, Макс(0, БухИтДФЛ.СКК("С")));
			КонецЕсли;
			СуммаП = Сумма - СуммаН - СуммаР;
			ВидЗадолженности = "Кредиторская";
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаП &lt;&gt; 0 Тогда
		
		ОтражениеВНУ = "Принимаются";
		ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
		ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
		ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
		ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
		
		Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
			
			ВременнаяТаблицаРасчетов.НоваяСтрока();
			ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
			ВременнаяТаблицаРасчетов.Контрагент 						= "";
			ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
			ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
			ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
			ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
			ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаП);
			ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаП);
			ВременнаяТаблицаРасчетов.НДС								= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаН &lt;&gt; 0 Тогда
		ОтражениеВНУ = "НеПринимаются";
		
		ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
		ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
		ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
		ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
		
		Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
			
			ВременнаяТаблицаРасчетов.НоваяСтрока();
			ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
			ВременнаяТаблицаРасчетов.Контрагент 						= "";
			ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
			ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
			ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
			ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
			ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаН);
			ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаН);
			ВременнаяТаблицаРасчетов.НДС								= 0;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаР &lt;&gt; 0 Тогда
		ОтражениеВНУ = "Распределяются";
		
		ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
		ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
		ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
		ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
		ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
		
		Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
			
			ВременнаяТаблицаРасчетов.НоваяСтрока();
			ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
			ВременнаяТаблицаРасчетов.Контрагент 						= "";
			ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
			ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
			ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
			ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
			ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаР);
			ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаР);
			ВременнаяТаблицаРасчетов.НДС								= 0;
			
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Если (Счет = СчетПоКоду("69.11"))
	ИЛИ (Счет = СчетПоКоду("69.21"))
	ИЛИ (Счет = СчетПоКоду("69.22")) Тогда
	
	БухИт69 = СоздатьОбъект("БухгалтерскиеИтоги");
	БухИт69.ВыполнитьЗапрос(,ДатаЗапроса, Счет);
	
	Сумма = 0;
	СуммаП = 0;
	СуммаН = 0;
	СуммаР = 0;
	
	Сумма = БухИт69.СККРС("С");
	Если (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.НФ")) = 1) Тогда
		СуммаН = Мин(Сумма, Макс(0, БухИтДФЛ.СКК("С")));
		КН = Макс(0, Мин(1, ?(Сумма = 0, 0 ,СуммаН/Сумма)));
	КонецЕсли;
	Если (БухИтДФЛ.ПолучитьСчет(, СчетПоКоду("ДФЛ.РФ")) = 1) Тогда
		СуммаР = Мин(Сумма - СуммаН, Макс(0, БухИтДФЛ.СКК("С")));
		КР = Макс(0, Мин(1, ?(Сумма = 0, 0 ,СуммаР/Сумма)));
	КонецЕсли;
	
	БухИт69.ВыбратьСчета();
	Пока БухИт69.ПолучитьСчет() = 1 Цикл
		Счет = БухИт69.Счет;
		Если БухИт69.СКД("С") &gt; 0 Тогда
			Сумма = БухИт69.СКД("С");
			СуммаП = Сумма;
			СуммаН = 0;
			СуммаР = 0;
			ВидЗадолженности = "Дебиторская";
		Иначе
			Сумма = БухИт69.СКК("С");
			СуммаН = Окр(КН * Сумма, 2, 1);
			СуммаР = Окр(КР * Сумма, 2, 1);
			СуммаП = Сумма - СуммаН - СуммаР;
			ВидЗадолженности = "Кредиторская";
		КонецЕсли;
		
		Если СуммаП &lt;&gt; 0 Тогда
			
			ОтражениеВНУ = "Принимаются";
			ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
			ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
			ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
			ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
			ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
			
			Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
				
				ВременнаяТаблицаРасчетов.НоваяСтрока();
				ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
				ВременнаяТаблицаРасчетов.Контрагент 						= "";
				ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
				ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
				ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
				ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
				ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаП);
				ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаП);
				ВременнаяТаблицаРасчетов.НДС								= 0;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СуммаН &lt;&gt; 0 Тогда
			ОтражениеВНУ = "НеПринимаются";
			
			ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
			ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
			ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
			ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
			ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
			
			Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
				
				ВременнаяТаблицаРасчетов.НоваяСтрока();
				ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
				ВременнаяТаблицаРасчетов.Контрагент 						= "";
				ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
				ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
				ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
				ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
				ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаН);
				ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаН);
				ВременнаяТаблицаРасчетов.НДС								= 0;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СуммаР &lt;&gt; 0 Тогда
			ОтражениеВНУ = "Распределяются";
			
			ОстаткиПоВзаиморасчетамПоНалогам.НоваяСтрока();
			ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности		= ВидЗадолженности;
			ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу	= Счет;
			ОстаткиПоВзаиморасчетамПоНалогам.СуммаВзаиморасчетов 	= Число(СуммаП);
			ОстаткиПоВзаиморасчетамПоНалогам.отражениеВУСН		 	= ОтражениеВНУ;
			
			Если ОстаткиПоВзаиморасчетамПоНалогам.ВидЗадолженности = "Кредиторская" Тогда
				
				ВременнаяТаблицаРасчетов.НоваяСтрока();
				ВременнаяТаблицаРасчетов.ТабличнаяЧасть 					= "ВзаиморвасчетыПоНалогам";
				ВременнаяТаблицаРасчетов.Контрагент 						= "";
				ВременнаяТаблицаРасчетов.ДоговорКонтрагента					= ОстаткиПоВзаиморасчетамПоНалогам.СчетРасчетовПоНалогу;
				ВременнаяТаблицаРасчетов.РасчетныйДокумент					= "";
				ВременнаяТаблицаРасчетов.ОтражениеВНУ						= ОтражениеВНУ ;
				ВременнаяТаблицаРасчетов.Валюта								= Параметры.Рубли;
				ВременнаяТаблицаРасчетов.Сумма                              = Число(СуммаР);
				ВременнаяТаблицаРасчетов.СуммаВзаиморасчетов                = Число(СуммаР);
				ВременнаяТаблицаРасчетов.НДС								= 0;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецЕсли;

</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоРБП" ИспользуетсяПриЗагрузке="false">
			<Текст>ОчиститьПараметры();
ЗаполнитьТаблицуНДС();
Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе 
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов
КонецЕсли;

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = ДатаЗапроса;
	Параметры.ТаблицаНДСКон.Выгрузить(Параметры.ТаблицаНДС);
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
	Параметры.ТаблицаНДСНач.Выгрузить(Параметры.ТаблицаНДС);
КонецЕсли;

РасходыРБП = Параметры.РасходыРБП;
РасходыРБП.УдалитьСтроки();
СтрокаТаблицыЗначений = Параметры.СтрокаТаблицыЗначений;

БухИтД = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтД.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
БухИтД.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИтДР = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтДР.ИспользоватьСубконто(ВидыСубконто.РасходыБудущихПериодов);
БухИтДР.ИспользоватьСубконто(ВидыСубконто.Договоры);
БухИтДР.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИтД.ВыбратьСубконто(1);
Пока БухИтД.ПолучитьСубконто(1) = 1 Цикл
	
	Если БухИтДР.ПолучитьСубконто(1,, БухИтД.Субконто(1)) = 1 Тогда
		БухИтДР.ВыбратьСубконто(2);
		Пока БухИтДР.ПолучитьСубконто(2) = 1 Цикл
			ОтражениеВНУ = "Принимаются";
			Если ПустоеЗначение(БухИтД.Субконто(1)) = 0 Тогда
				Если БухИтДР.Субконто(1).Распределять = 1 Тогда
					ОтражениеВНУ = "Распределяются";
				КонецЕсли;
			КонецЕсли;
			РБП = БухИтД.Субконто(1);
			Если ПустоеЗначение(БухИтДР.Субконто(2)) = 0 Тогда
				Контрагент = БухИтДР.Субконто(2).Владелец;
			Иначе
				Контрагент = ПолучитьПустоеЗначение(ВидыСубконто.Контрагенты);
			КонецЕсли;
			ДоговорКонтрагента = БухИтДР.Субконто(2);
			Представление1 = ?(ПустоеЗначение(БухИтДР.Субконто(2)) = 1, "", Строка(БухИтДР.Субконто(2).Владелец.Код));
			Представление2 = ?(ПустоеЗначение(БухИтДР.Субконто(2)) = 1, "", Строка(БухИтДР.Субконто(2).Код));
			Представление3 = Строка(Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРасходы);
			Если ПустоеЗначение(БухИтД.Субконто(1)) = 0 Тогда
				Если БухИтДР.Субконто(1).Распределять = 1 Тогда
					Представление3 = Строка(Перечисление.ВидыРасчетовСПоставщиками.ОтложенныеРаспределяемые);
				КонецЕсли;
			КонецЕсли;
			СтрокаКлюча = Представление1 + ";" + Представление2 + ";" + Представление3;
			НомерСтроки = "";
			Если БухИтДР.ПолучитьСчет(, СчетПоКоду("97.2")) = 1 Тогда
				Сумма = БухИтДР.СКД("С");
				Если БухИтДР.ПолучитьСчет(, СчетПоКоду("97.3")) = 1 Тогда
				    Сумма = Сумма + БухИтДР.СКД("С");
				КонецЕсли;
				//Определение входящего НДС
				Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
					Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
					НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
				Иначе
					НДС = 0;
				КонецЕсли;
				Валюта = Параметры.Рубли;
				Если (ОтражениеВНУ &lt;&gt; "НеПринимаются") и (ОтражениеВНУ &lt;&gt; "") Тогда
					РасходыРБП.НоваяСтрока();
					РасходыРБП.РБП			 			= РБП;
					РасходыРБП.Контрагент 				= Контрагент;
					РасходыРБП.ДоговорКонтрагента 		= ДоговорКонтрагента;
					РасходыРБП.РасчетныйДокумент 		= ДоговорКонтрагента; 
					РасходыРБП.СтатусыОплатыРасходовУСН = "НеСписано";
					РасходыРБП.ОтражениеВУСН 			= ОтражениеВНУ;
					РасходыРБП.Валюта 					= Валюта;
					РасходыРБП.Сумма 					= Сумма;
					РасходыРБП.НДС 						= НДС;
					Если Сумма  &gt; 0 Тогда
						СтрокаТаблицыЗначений.УдалитьСтроки();
						СтрокаТаблицыЗначений.НоваяСтрока();
						СтрокаТаблицыЗначений.РБП		 				= РБП;
						СтрокаТаблицыЗначений.Контрагент 				= Контрагент;
						СтрокаТаблицыЗначений.ДоговорКонтрагента 		= ДоговорКонтрагента;
						СтрокаТаблицыЗначений.РасчетныйДокумент 		= ДоговорКонтрагента; 
						СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
						СтрокаТаблицыЗначений.ОтражениеВУСН 			= ОтражениеВНУ;
						СтрокаТаблицыЗначений.Валюта 					= Валюта;
						СтрокаТаблицыЗначений.Сумма 					= Сумма;
						СтрокаТаблицыЗначений.НДС 						= НДС;
						УстановитьСтатусОплатыРБП();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если БухИтДР.ПолучитьСчет(, СчетПоКоду("97.4")) = 1 Тогда
				БухИтДР.ВыбратьВалюты();
				Пока БухИтДР.ПолучитьВалюту() = 1 Цикл
					Валюта = БухИтДР.Валюта;
					Сумма = БухИтДР.СКД("С");
					СуммаВал = БухИтДР.СКД("В");
					//Определение входящего НДС
					Если Параметры.ТаблицаНДС.НайтиЗначение(СтрокаКлюча, НомерСтроки, "Ключ") = 1 Тогда
						Параметры.ТаблицаНДС.ПолучитьСтрокуПоНомеру(НомерСтроки);
						НДС = ?(Параметры.ТаблицаНДС.Сумма = 0, 0, Сумма * Параметры.ТаблицаНДС.НДС / Параметры.ТаблицаНДС.Сумма); 
						НДСВал = ?((СуммаВал = 0) ИЛИ (Сумма = 0), 0, НДС/(Сумма/СуммаВал));						
					Иначе
						НДС = 0;
						НДСВал = 0;
					КонецЕсли;
					Если (ОтражениеВНУ &lt;&gt; "НеПринимаются") и (ОтражениеВНУ &lt;&gt; "") Тогда
						РасходыРБП.НоваяСтрока();
						РасходыРБП.РБП			 			= РБП;
						РасходыРБП.Контрагент 				= Контрагент;
						РасходыРБП.ДоговорКонтрагента 		= ДоговорКонтрагента;
						РасходыРБП.РасчетныйДокумент 		= ДоговорКонтрагента; 
						РасходыРБП.СтатусыОплатыРасходовУСН = "НеСписано";
						РасходыРБП.ОтражениеВУСН 			= ОтражениеВНУ;
						РасходыРБП.Валюта 					= Валюта;
						РасходыРБП.Сумма 					= Сумма;
						РасходыРБП.НДС 						= НДС;
						РасходыРБП.СуммаВал					= СуммаВал;
						РасходыРБП.НДСВал 					= НДСВал;
						Если Сумма  &gt; 0 Тогда
							СтрокаТаблицыЗначений.УдалитьСтроки();
							СтрокаТаблицыЗначений.НоваяСтрока();
							СтрокаТаблицыЗначений.РБП		 				= РБП;
							СтрокаТаблицыЗначений.Контрагент 				= Контрагент;
							СтрокаТаблицыЗначений.ДоговорКонтрагента 		= ДоговорКонтрагента;
							СтрокаТаблицыЗначений.РасчетныйДокумент 		= ДоговорКонтрагента; 
							СтрокаТаблицыЗначений.СтатусыОплатыРасходовУСН 	= "НеСписано";
							СтрокаТаблицыЗначений.ОтражениеВУСН 			= ОтражениеВНУ;
							СтрокаТаблицыЗначений.Валюта 					= Валюта;
							СтрокаТаблицыЗначений.Сумма 					= Сумма;
							СтрокаТаблицыЗначений.НДС 						= НДС;
							СтрокаТаблицыЗначений.СуммаВал					= СуммаВал;
							СтрокаТаблицыЗначений.НДСВал 					= НДСВал;
							УстановитьСтатусОплатыРБП();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПоТМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>// Выгружает остатки по любому счету. Счет записывается в таблицу 
// проводок, как объект типа "Основной.Счет" (потом он сконвертируется
// в соответствии с настройкой конвертации значений счетов).

// Остатки по субконто на которых ведется только количественный учет
// выгружаются, как отдельные проводки.

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе 
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов
КонецЕсли;

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = ДатаЗапроса;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
КонецЕсли;

ЗаполнитьТаблицуНДС();
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Счет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

Валюты = СоздатьОбъект("СписокЗначений");
БухИт = СоздатьОбъект("БухгалтерскиеИтоги");

БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();
БухИт.ИспользоватьСубконто();

Параметры.ПараметрыАлгоритмов.Установить("БухИт", БухИт);

БухИт.ВключатьСубсчета(, -1);

БухИт.ВыполнитьЗапрос(, ДатаЗапроса, Счет);

БухИт.ВыбратьСчета();
Пока БухИт.ПолучитьСчет() = 1 Цикл
	Валюты.УдалитьВсе();
	
	Если БухИт.Счет.Валютный = 1 Тогда
		БухИт.ВыбратьВалюты();
		Пока БухИт.ПолучитьВалюту() = 1 Цикл
			Валюты.ДобавитьЗначение(БухИт.Валюта);
		КонецЦикла;
		
	Иначе
		Валюты.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Валюты"));
	КонецЕсли;
	
	Параметры.ПараметрыАлгоритмов.Установить("ТолькоСумма", 0);
	
	Для НомерВалюты = 1 по Валюты.РазмерСписка() Цикл
		Если БухИт.Счет.Валютный = 1 Тогда
			БухИт.ПолучитьВалюту(, Валюты.ПолучитьЗначение(НомерВалюты));
		КонецЕсли;
		
		СуммовойУчет1 = ?(БухИт.Счет.КоличествоСубконто() &gt; 0, ?(БухИт.Счет.ТолькоОбороты(1) = 1, 0, БухИт.Счет.УчетПоСумме(1)), 0);
		СуммовойУчет2 = ?(БухИт.Счет.КоличествоСубконто() &gt; 1, ?(БухИт.Счет.ТолькоОбороты(2) = 1, 0, БухИт.Счет.УчетПоСумме(2)), 0);
		СуммовойУчет3 = ?(БухИт.Счет.КоличествоСубконто() &gt; 2, ?(БухИт.Счет.ТолькоОбороты(3) = 1, 0, БухИт.Счет.УчетПоСумме(3)), 0);
		
		КоличествоУровней = 0;
		КоличествоУровней = КоличествоУровней + ?(БухИт.Счет.КоличествоСубконто() &gt; 0, ?(БухИт.Счет.ТолькоОбороты(1) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(БухИт.Счет.КоличествоСубконто() &gt; 1, ?(БухИт.Счет.ТолькоОбороты(2) = 1, 0, 1), 0);
		КоличествоУровней = КоличествоУровней + ?(БухИт.Счет.КоличествоСубконто() &gt; 2, ?(БухИт.Счет.ТолькоОбороты(3) = 1, 0, 1), 0);
		Параметры.ПараметрыАлгоритмов.Установить("КоличествоУровней", КоличествоУровней);
		
		Если КоличествоУровней = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 0);
			НУ_ПолучитьОстаткиПоСчету();
			НУ_ДобавитьЗаписьПоТМЦ();
			
		ИначеЕсли КоличествоУровней &gt; 0 Тогда
			БухИт.ВыбратьСубконто(1);
			Пока БухИт.ПолучитьСубконто(1) = 1 Цикл
				Если ТипЗначенияСтр(БухИт.Субконто(1)) = "Справочник" Тогда
					Если БухИт.Субконто(1).ЭтоГруппа() = 1 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если ((СуммовойУчет1 = 1) и (СуммовойУчет2 = 0)) или (КоличествоУровней = 1) Тогда
					Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 1);
					НУ_ПолучитьОстаткиПоСчету();
					НУ_ДобавитьЗаписьПоТМЦ();
				КонецЕсли;
				
				Если КоличествоУровней &gt; 1 Тогда
					БухИт.ВыбратьСубконто(2);
					Пока БухИт.ПолучитьСубконто(2) = 1 Цикл
						Если ТипЗначенияСтр(БухИт.Субконто(2)) = "Справочник" Тогда
							Если БухИт.Субконто(2).ЭтоГруппа() = 1 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
						
						Если ((СуммовойУчет2 = 1) и (СуммовойУчет3 = 0)) или (КоличествоУровней = 2) Тогда
							Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 2);
							НУ_ПолучитьОстаткиПоСчету();
							НУ_ДобавитьЗаписьПоТМЦ();
						КонецЕсли;
						
						Если КоличествоУровней &gt; 2 Тогда
							БухИт.ВыбратьСубконто(3);
							Пока БухИт.ПолучитьСубконто(3) = 1 Цикл
								Если ТипЗначенияСтр(БухИт.Субконто(3)) = "Справочник" Тогда
									Если БухИт.Субконто(3).ЭтоГруппа() = 1 Тогда
										Продолжить;
									КонецЕсли;
								КонецЕсли;
								
								Параметры.ПараметрыАлгоритмов.Установить("ТекНомерСубконто", 3);
								НУ_ПолучитьОстаткиПоСчету();
								НУ_ДобавитьЗаписьПоТМЦ();
							КонецЦикла;
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
КонецЦикла;

		
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ОстаткиПрочихРасходов" ИспользуетсяПриЗагрузке="false">
			<Текст>ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетовКон;
Иначе
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетов;
КонецЕсли;

РасходыУслуги			 = Параметры.РасходыУслуги;

ВременнаяТаблицаРасчетов.ВыбратьСтроки();
Пока ВременнаяТаблицаРасчетов.получитьСтроку() = 1 Цикл
	Если ВременнаяТаблицаРасчетов.Сумма &lt; 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Если ВременнаяТаблицаРасчетов.ОтражениеВНУ = "НеПринимаются" Тогда
		Продолжить;
	КонецЕсли;
	
	Если ВременнаяТаблицаРасчетов.ТабличнаяЧасть 		= "ВзаиморасчетыСПоставщиками" Тогда
		//Расходы
		РасходыУслуги.НоваяСтрока();
		РасходыУслуги.Контрагент 				= ВременнаяТаблицаРасчетов.Контрагент;
		РасходыУслуги.ДоговорКонтрагента 		= ВременнаяТаблицаРасчетов.ДоговорКонтрагента;
		РасходыУслуги.РасчетныйДокумент 		= ВременнаяТаблицаРасчетов.РасчетныйДокумент; 
		РасходыУслуги.ОтражениеВУСН 			= ВременнаяТаблицаРасчетов.ОтражениеВНУ;
		РасходыУслуги.Валюта 					= ВременнаяТаблицаРасчетов.Валюта;
		РасходыУслуги.Сумма 					= ВременнаяТаблицаРасчетов.Сумма;
		РасходыУслуги.НДС 						= ВременнаяТаблицаРасчетов.НДС;
		
	КонецЕсли;
	
КонецЦикла;

РазделУчета = "ПрочиеРасходыНалоговогоУчетаУСНиИП";
ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ВходящиеОстатки", РасходыУслуги);
ВходящиеДанные.Установить("Счет", "");

Если Параметры.П_ВыгружатьОбороты = 0 Тогда
	ДатаЗапроса = Параметры.ДатаКонцаПериодаВыгрузки;
Иначе 
	ДатаЗапроса = Параметры.ДатаОкончанияВыгрузкиОборотов
КонецЕсли;

Если ОстаткиНаКонец = 1 Тогда
	ДатаЗапроса = ДатаЗапроса;
Иначе
	ДатаЗапроса = Параметры.ДатаВводаОстатков-1;
КонецЕсли;

ВходящиеДанные.Установить("Дата", ДатаЗапроса);
ВходящиеДанные.Установить("РазделУчета", РазделУчета);	
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете", 1);
ВходящиеДанные.Установить("ОтражатьВНалоговомУчете", 1);
ВходящиеДанные.Установить("ОтражатьПоСпециальнымРегистрам", 1);
Параметры.ИмяТаблицы = "УслугиУСН";

ВыгрузитьПоПравилу(,, ВходящиеДанные,, "ВводНачальныхОстатков");
</Текст>
		</Алгоритм>
		<Алгоритм Имя="НУ_ПолучитьОстаткиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");

ОстатокДтС = 0;
ОстатокДтВ = 0;
ОстатокДтК = 0;
ОстатокКтС = 0;
ОстатокКтВ = 0;
ОстатокКтК = 0;

ОстатокДтС = БухИт.СКД(1);

Если БухИт.Счет.Валютный = 1 Тогда
	ОстатокДтВ = БухИт.СКД(2);
КонецЕсли;

Если БухИт.Счет.Количественный = 1 Тогда
	ОстатокДтК = БухИт.СКД(3);
КонецЕсли;
	
ОстатокКтС = БухИт.СКК(1);

Если БухИт.Счет.Валютный = 1 Тогда
	ОстатокКтВ = БухИт.СКК(2);
КонецЕсли;

Если БухИт.Счет.Количественный = 1 Тогда
	ОстатокКтК = БухИт.СКК(3);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтС", ОстатокДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтВ", ОстатокДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтК", ОстатокДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтС", ОстатокКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтВ", ОстатокКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтК", ОстатокКтК);

Если (ОстатокКтК = 0) и (ОстатокКтВ = 0) и (ОстатокКтС = 0) и (ОстатокДтК = 0) и (ОстатокДтВ = 0) и (ОстатокДтС = 0) Тогда
	Возврат 0;
	
Иначе
	Возврат 1;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбработкаСубконтоПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
			<Текст>ИмяТабличнойЧасти = Параметры.ПараметрыАлгоритмов.ИмяТабличнойЧасти;
ИмяСчета          = Параметры.ПараметрыАлгоритмов.ИмяСчета;
ИмяСубконто       = Параметры.ПараметрыАлгоритмов.ИмяСубконто;
ЗагруженныйОбъект = Параметры.ПараметрыАлгоритмов.ЗагруженныйОбъект;

Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
	//обрабатываем табличную часть
	Для каждого Корреспонденция из ЗагруженныйОбъект[ИмяТабличнойЧасти] Цикл
		
		СведенияОСчете = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Корреспонденция[ИмяСчета]);
		Для СчетчикСубконто = 1 По 3 Цикл
			Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
				Если (Корреспонденция[ИмяСубконто+СчетчикСубконто] = СведенияОСчете["ВидСубконто"+СчетчикСчета+"ТипЗначения"].ПривестиЗначение(Корреспонденция[ИмяСубконто+СчетчикСубконто]))
					  и (СчетчикСчета &lt;&gt; СчетчикСубконто) и (ЗначениеЗаполнено(Корреспонденция[ИмяСубконто+СчетчикСубконто])) Тогда
					Субконто = Корреспонденция[ИмяСубконто+СчетчикСчета];
					Корреспонденция[ИмяСубконто+СчетчикСчета] = Корреспонденция[ИмяСубконто+СчетчикСубконто];
					Корреспонденция[ИмяСубконто+СчетчикСубконто] = Субконто;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;

		Для СчетчикСубконто = 1 По 3 Цикл
			Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
				Корреспонденция[ИмяСубконто+СчетчикСубконто] = СведенияОСчете["ВидСубконто"+СчетчикСубконто+"ТипЗначения"].ПривестиЗначение(Корреспонденция[ИмяСубконто+СчетчикСубконто]);

			Иначе

				Корреспонденция[ИмяСубконто+СчетчикСубконто] = Неопределено;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;	
	
Иначе
	//обрабатываем объект
    Корреспонденция = ЗагруженныйОбъект;	
	СведенияОСчете = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Корреспонденция[ИмяСчета]);
	Для СчетчикСубконто = 1 По 3 Цикл
		Для СчетчикСчета = 1 по СведенияОСчете.КоличествоСубконто Цикл
			Если (Корреспонденция[ИмяСубконто+СчетчикСубконто] = СведенияОСчете["ВидСубконто"+СчетчикСчета+"ТипЗначения"].ПривестиЗначение(Корреспонденция[ИмяСубконто+СчетчикСубконто]))
				  и (СчетчикСчета &lt;&gt; СчетчикСубконто)  и (ЗначениеЗаполнено(Корреспонденция[ИмяСубконто+СчетчикСубконто])) Тогда
				Субконто = Корреспонденция[ИмяСубконто+СчетчикСчета];
				Корреспонденция[ИмяСубконто+СчетчикСчета] = Корреспонденция[ИмяСубконто+СчетчикСубконто];
				Корреспонденция[ИмяСубконто+СчетчикСубконто] = Субконто;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Для СчетчикСубконто = 1 По 3 Цикл
		Если СведенияОСчете.КоличествоСубконто &gt;= СчетчикСубконто Тогда
			Корреспонденция[ИмяСубконто+СчетчикСубконто] = СведенияОСчете["ВидСубконто"+СчетчикСубконто+"ТипЗначения"].ПривестиЗначение(Корреспонденция[ИмяСубконто+СчетчикСубконто]);

		Иначе
			Корреспонденция[ИмяСубконто+СчетчикСубконто] = Неопределено;
		КонецЕсли;
	КонецЦикла;	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьВидДоговора" ИспользуетсяПриЗагрузке="false">
			<Текст>Документ = Параметры.ПараметрыАлгоритмов.Получить("Документ");
Договор = Параметры.ПараметрыАлгоритмов.Получить("Договор");
Счет = Параметры.ПараметрыАлгоритмов.Получить("Счет");

ВидДоговора = "";
ВесДоговора = 0;

Если ПустоеЗначение(Документ)=0 Тогда
	Если Документ.Вид()="ПоступлениеМПЗ" Тогда
		ВидДоговора = "СПоставщиком";
		ВесДоговора = 3;
	ИначеЕсли Документ.Вид()="ПоступлениеНМА" Тогда
		ВидДоговора = "СПоставщиком";
		ВесДоговора = 3;		
	ИначеЕсли Документ.Вид()="ПоступлениеОС" Тогда
		ВидДоговора = "СПоставщиком";
		ВесДоговора = 3;
	ИначеЕсли Документ.Вид()="Реализация" Тогда
		Если (Документ.ВидОтгрузки = 1) ИЛИ (Документ.ВидОтгрузки = 2) Тогда //отгрузка (счет 45)
			ВидДоговора = "СКомиссионером";
		ИначеЕсли (Документ.ВидОтгрузки = 0) Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Документ", Документ);
			СписокПКОРеализации = ПолучитьСписокПравилКОРеализации();
            Если СписокПКОРеализации.НайтиЗначение("Реализация_ОтчетКомитентуОПродажах")&gt;0 Тогда
				ВидДоговора = "СКомитентом";
			Иначе
				ВидДоговора = "СПокупателем";
			КонецЕсли;
		Иначе
			ВидДоговора = "СПокупателем";
		КонецЕсли;
		ВесДоговора = 3;
	ИначеЕсли Документ.Вид()="УслугиСтороннихОрганизаций" Тогда
		ВидДоговора = "СПоставщиком";
		ВесДоговора = 3;
	ИначеЕсли Документ.Вид()="ПередачаОС" Тогда
		ВидДоговора = "СПокупателем";
		ВесДоговора = 3;
	ИначеЕсли Документ.Вид()="ПередачаНМА" Тогда
		ВидДоговора = "СПокупателем";
		ВесДоговора = 3;
	Иначе //по документу однозначно определить нельзя, будем определять по счету
		Если ПустоеЗначение(Счет)=0 Тогда
			НазваниеСчета = ?(ТипЗначенияСтр(Счет)="Счет", Счет.Код, Строка(Счет));
			Если Лев(НазваниеСчета, 2)="62" Тогда
				ВидДоговора = "СПокупателем";
				ВесДоговора = 1;
			ИначеЕсли Лев(НазваниеСчета, 2)="60" Тогда
				ВидДоговора = "СПоставщиком";
				ВесДоговора = 1;				
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ВидДоговора",ВидДоговора);
Параметры.ПараметрыАлгоритмов.Установить("ВесДоговора",ВесДоговора);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьДатуУвольнения" ИспользуетсяПриЗагрузке="false">
			<Текст>ФизЛицо = Параметры.ПараметрыАлгоритмов.Получить("ФизЛицо");

СотрДатаУвольнения = Дата(0);
ХарактерРаботы = СоздатьОбъект("Периодический");
ХарактерРаботы.ИспользоватьОбъект("ХарактерРаботы", ФизЛицо);
Если ХарактерРаботы.ОбратныйПорядок() = 1 Тогда
	ХарактерРаботы.ВыбратьЗначения(,);
	Пока ХарактерРаботы.ПолучитьЗначение() = 1 Цикл
		Если ХарактерРаботы.Значение = Перечисление.ХарактерРаботы.ТрудовыеОтношенияПрекращены Тогда
			Если ХарактерРаботы.ДатаЗнач &lt;= Параметры.ДатаКонцаПериодаВыгрузки Тогда
				ДатаУвольнения = ХарактерРаботы.ДатаЗнач;
				Прервать;
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СотрДатаУвольнения = ДатаУвольнения;
	Если ПустоеЗначение(СотрДатаУвольнения) = 1 Тогда
		СотрДатаУвольнения = Дата(0);
	КонецЕсли;
Иначе
	СотрДатаУвольнения = Дата(0);
КонецЕсли;

Возврат СотрДатаУвольнения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьОстатокПоСкладу" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекОпер 	= Параметры.ПараметрыАлгоритмов.Получить("ОперацияКУДиР");
ТаблУчета	= Параметры.ПараметрыАлгоритмов.Получить("ТаблицаКУДиР");

Проводки 	= Параметры.ПараметрыАлгоритмов.Получить("Проводки");
БухИт 		= Параметры.ПараметрыАлгоритмов.Получить("БухИтПроводокПоСкладам");
Остаток 	= Параметры.ПараметрыАлгоритмов.Получить("ОстатокПроводокПоСкладам");
ИмяИтогов 	= Параметры.ПараметрыАлгоритмов.Получить("ИмяИтоговПроводокПоСкладам");
КорСчет 	= Параметры.ПараметрыАлгоритмов.Получить("КорСчетПроводокПоСкладам");

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

Если КорСчет = 0 Тогда
	КодСчета = БухИт.Счет.Код;
	КодСчетаГруппы = БухИт.Счет.Родитель(1).Код;
	Номенклатура = БухИт.Субконто(1);
Иначе
	КодСчета = БухИт.КорСчет.Код;
	КодСчетаГруппы = БухИт.КорСчет.Родитель(1).Код;
	Номенклатура = БухИт.КорСубконто(1);
КонецЕсли;

ОстатокК = Остаток;

Период = НачМесяца(БухИт.НачДата);
ОстатокС = Проводки.Сумма;
УчтеноС = 0;

Если (Найти(Параметры.СписокСчетовСкладскогоУчета, КодСчета) &gt; 0) и (Остаток &gt; 0) Тогда
	
	//Ищем остатки по складам
	КлючПоиска = "/" + Номенклатура + "/" + Период + "/" + КодСчетаГруппы;
	НС = 0;
	
	Если ОстаткиНаКонец = 1 Тогда
		ТаблицаМХ = Параметры.ТаблицаМХКон;
		//Параметры.ТаблицаМХКон.Выгрузить(Параметры.ТаблицаМХ);
	Иначе
		ТаблицаМХ = Параметры.ТаблицаМХНач;
		//Параметры.ТаблицаМХНач.Выгрузить(Параметры.ТаблицаМХ);
	КонецЕсли;
	
	Если ТаблицаМХ.НайтиЗначение(КлючПоиска, НС, "КлючПоиска") = 1 Тогда
		
		ТаблицаМХ.ПолучитьСтрокуПоНомеру(НС);
		ТаблицаИтоговМХ = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаМХ.ТаблицаИтоговМХ.Выгрузить(ТаблицаИтоговМХ);
		ТаблицаИтоговМХ.ВыбратьСтроки();
		
		Пока ТаблицаИтоговМХ.ПолучитьСтроку() = 1 Цикл
			
			ОстатокПоСкладу = ТаблицаИтоговМХ.ПолучитьЗначение(ТаблицаИтоговМХ.НомерСтроки, ИмяИтогов);
			Если ОстатокПоСкладу = 0 Тогда
				Продолжить;
			КонецЕсли;
			Учтено = Мин(ОстатокПоСкладу, Остаток);
			НС = 0;
			
			Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
				Если Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);					
					Проводки.КоличествоДт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				ИначеЕсли Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоДт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
					Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);					
					Проводки.КоличествоДт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				Иначе
					Проводки.СубконтоДт.НоваяСтрока();
					Проводки.СубконтоДт.Ключ = ВидыСубконто.МестаХранения;
					Проводки.СубконтоДт.Значение = ТаблицаИтоговМХ.Склад;					
					Проводки.КоличествоДт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
				КонецЕсли;
				
			Иначе
				Если Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);					
					Проводки.КоличествоКт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				ИначеЕсли Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
					Проводки.СубконтоКт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
					Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ТаблицаИтоговМХ.Склад);
					Проводки.КоличествоКт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
					
				Иначе
					Проводки.СубконтоКт.НоваяСтрока();
					Проводки.СубконтоКт.Ключ = ВидыСубконто.МестаХранения;
					Проводки.СубконтоКт.Значение = ТаблицаИтоговМХ.Склад;
					Проводки.КоличествоКт = Учтено;
					Проводки.Сумма = Окр(Учтено * ОстатокС / ОстатокК, 2);
					УчтеноС = УчтеноС + Проводки.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			ТаблицаИтоговМХ.УстановитьЗначение(ТаблицаИтоговМХ.НомерСтроки, ИмяИтогов, ОстатокПоСкладу - Учтено);
			Остаток = Остаток - Учтено;
			Если Остаток = 0 Тогда
				Проводки.Сумма = Проводки.Сумма + (ОстатокС - УчтеноС);
				Прервать;
			КонецЕсли;
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаДляКопирования", Проводки);
			СкопироватьСтрокуТаблицы();
			Проводки = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаДляКопирования");
			Проводки.ПолучитьСтрокуПоНомеру(Проводки.КоличествоСтрок());
		КонецЦикла;
		
	Иначе
		Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
			Проводки.КоличествоДт = Остаток;
			Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
			УчтеноС = УчтеноС + Проводки.Сумма;
		Иначе
			Проводки.КоличествоКт = Остаток;
			Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
			УчтеноС = УчтеноС + Проводки.Сумма;
		КонецЕсли;
		Остаток = 0;
		Проводки.Сумма = Проводки.Сумма + (ОстатокС - УчтеноС);
		
	КонецЕсли;
	
	Если Остаток &gt; 0 Тогда
		НС = 0;
		Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
			
			Если Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоДт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			ИначеЕсли Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение",ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоДт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			Иначе
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоДт.Значение = ПолучитьПустоеЗначение("Справочник.МестаХранения");
				Проводки.КоличествоДт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
			КонецЕсли;
			
		Иначе
			
			Если Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоКт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			ИначеЕсли Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.Контрагенты, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Ключ", ВидыСубконто.МестаХранения);
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ПолучитьПустоеЗначение("Справочник.МестаХранения"));
				Проводки.КоличествоКт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
				
			Иначе
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоКт.Значение = ПолучитьПустоеЗначение("Справочник.МестаХранения");
				Проводки.КоличествоКт = Остаток;
				Проводки.Сумма = Окр(Остаток * ОстатокС / ОстатокК, 2);
				УчтеноС = УчтеноС + Проводки.Сумма;
			КонецЕсли;
		КонецЕсли;
		Проводки.Сумма = Проводки.Сумма + (ОстатокС - УчтеноС);
	КонецЕсли;
	
Иначе
	Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
		Проводки.КоличествоДт = Остаток;
		Проводки.Сумма = ОстатокС;
		
	Иначе
		Проводки.КоличествоКт = Остаток;
		Проводки.Сумма = ОстатокС;
	КонецЕсли;
	
	Если КодСчета = "08.4" Тогда //условно назначим склад
		ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");
		Если (ИмяИтогов = "СНД") или (ИмяИтогов = "ДО") Тогда
			Если Проводки.СубконтоДт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоДт.УстановитьЗначение(НС, "Значение", ОсновнойСклад);					
			Иначе
				Проводки.СубконтоДт.НоваяСтрока();
				Проводки.СубконтоДт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоДт.Значение = ОсновнойСклад;					
			КонецЕсли;
		Иначе
			Если Проводки.СубконтоКт.НайтиЗначение(ВидыСубконто.МестаХранения, НС, "Ключ") = 1 Тогда
				Проводки.СубконтоКт.УстановитьЗначение(НС, "Значение", ОсновнойСклад);					
			Иначе
				Проводки.СубконтоКт.НоваяСтрока();
				Проводки.СубконтоКт.Ключ = ВидыСубконто.МестаХранения;
				Проводки.СубконтоКт.Значение = ОсновнойСклад;					
			КонецЕсли;		
		КонецЕсли;	
	КонецЕсли;	
	
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("Проводки", Проводки);

</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьПКОДляДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>Документ = Параметры.ПараметрыАлгоритмов.Получить("Документ");
ВидДокумента = Документ.Вид();

Если ПустоеЗначение(Документ)=0 Тогда
	Если Документ.ДатаДок &lt; Параметры.ДатаВводаОстатков Тогда
		ИмяПКО = "ДокументРасчетовСКонтрагентом_Документ";
	Иначе
		Если ВидДокумента="АвансовыйОтчет" Тогда
			ИмяПКО = "АвансовыйОтчет";
		ИначеЕсли ВидДокумента="Выписка" Тогда	
			Отказ = 1;
		ИначеЕсли ВидДокумента="Взаимозачет" Тогда	
			ИмяПКО = "Взаимозачет";
		ИначеЕсли ВидДокумента="ВыпускПродукции" Тогда	
			ИмяПКО = "ВыпускПродукции";
		ИначеЕсли ВидДокумента="Доверенность" Тогда
			ИмяПКО = "Доверенность";
		ИначеЕсли ВидДокумента="ИнвентаризацияТМЦ" Тогда
			Если (Документ.ВидТМЦ=1) ИЛИ (Документ.ВидТМЦ=3) Тогда
				ИмяПКО = "ИнвентаризацияТМЦ_ТМЦ";
			Иначе
				ИмяПКО = "ИнвентаризацияТМЦ_ОС";
			КонецЕсли;
			
		ИначеЕсли ВидДокумента="НачислениеЗП" Тогда
			НДФЛ_13 = глПолучитьНалог("НДФЛ");
			Ставка13 = НДФЛ_13.Ставка.Получить(КонМесяца(Документ.ДатаДок));
			СтавкаНДФЛ = глСтавкаНДФЛ(Документ.ВидНачисления, , КонМесяца(Документ.ДатаДок));
			Если СтавкаНДФЛ &lt;&gt; Ставка13 Тогда
				ИмяПКО = "НачислениеЗП_Прочее";
			Иначе
				ИмяПКО = "НачислениеЗП_13";
			КонецЕсли;
		ИначеЕсли ВидДокумента="ВыплатаЗПКасса" Тогда
			ИмяПКО = "ВыплатаЗПКасса";
		ИначеЕсли ВидДокумента="СчетФактура" Тогда
			ИмяПКО = "СчетФактура";
		ИначеЕсли ВидДокумента = "КорректировочныйСчетФактура" Тогда
			ИмяПКО = "КорректировочныйСчетФактура";
		ИначеЕсли ВидДокумента = "ИсправлениеСчетаФактуры" Тогда
			ИмяПКО = "ИсправлениеСчетаФактуры";
		ИначеЕсли ВидДокумента = "Реализация" Тогда
			Параметры.ПараметрыАлгоритмов.Установить("Документ", Документ);
			СписокПКОРеализации = ПолучитьСписокПравилКОРеализации();
			Если СписокПКОРеализации.РазмерСписка()&gt;0 Тогда
				ИмяПКО = СписокПКОРеализации.ПолучитьЗначение(1);
			Иначе
				ИмяПКО = "Реализация_Продажа";
			КонецЕсли;
		ИначеЕсли ВидДокумента = "ПеремещениеМПЗ" Тогда
			Если (Документ.ВидПеремещения = 0) И (Документ.УчитыватьНаМЦ = 0) Тогда
				ИмяПКО = "ПеремещениеМПЗ_ТребованиеНакладная";
			ИначеЕсли Объект.ВидПеремещения = 0 Тогда
				ИмяПКО = "ПеремещениеМПЗ_ПередачаМатериаловВЭксплуатацию";
			Иначе
				ИмяПКО = "ПеремещениеМПЗ_ПеремещениеТоваров";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ИмяПКО",ИмяПКО);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьПризнакОтражениеВУСН" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Константа.ПорядокПризнанияМатериальныхРасходов.Получить(Параметры.ДатаКонцаПериодаВыгрузки) = Перечисление.ПорядокПризнанияМатериальныхРасходов.УменьшатьРасходыНаОстатокНЗП Тогда
	
	КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");
	
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		
		Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = 1 Тогда
			ОтражениевУСН = "Распределяются";
		Иначе
			ОтражениевУСН = "Принимаются";
		КонецЕсли;
		
		Для НомерСубконто = 1 по 3 Цикл
			Субконто = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки, "Субконто" + НомерСубконто);
			Если ПустоеЗначение(Субконто) = 0 Тогда
				Если ТипЗначенияСтр(Субконто) = "Справочник.ВидыНоменклатуры" Тогда
					Если Субконто.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
						ОтражениевУСН = "НеПринимаются";
						Прервать
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		КоллекцияОбъектов.ОтражениевУСН = ОтражениевУСН;
		
	КонецЦикла;
	
	ВходящиеДанные.Установить("ВходящиеОстатки", КоллекцияОбъектов);
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьРазделУчета" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
Если (Лев(ТекущийСчет.Код,3) = "ГТД")	
	ИЛИ (Лев(ТекущийСчет.Код,5) = "МЦ") Тогда
	РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
	Возврат(РазделУчета);
Иначе
	Если ((Строка(Лев(ТекущийСчет.Код,1)) = "0")
		И (ТекущийСчет.Забалансовый = 1)) Тогда
		РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
		Возврат(РазделУчета);		
	ИначеЕсли (ТекущийСчет.Код = "42") Тогда
		Возврат("");
	ИначеЕсли ((Строка(Лев(ТекущийСчет.Код,1)) &lt;&gt; "0")
		И (ТекущийСчет.Забалансовый = 1)) Тогда
		Возврат("");
	КонецЕсли;
КонецЕсли;

Параметры.ТаблицаСчетовРазделовУчета.ВыбратьСтроки();
Пока Параметры.ТаблицаСчетовРазделовУчета.ПолучитьСтроку() = 1 Цикл
	
	Счета			= Параметры.ТаблицаСчетовРазделовУчета.Счета;
	СчетаГруппы		= Параметры.ТаблицаСчетовРазделовУчета.СчетаГруппы;
	СчетаИсключения	= Параметры.ТаблицаСчетовРазделовУчета.СчетаИсключения;
	РазделУчета		= Параметры.ТаблицаСчетовРазделовУчета.РазделУчета;
	
	Если Найти(Счета, ТекущийСчет.Код) &lt;&gt; 0 Тогда
		Если Найти(СчетаИсключения, """"+ТекущийСчет.Код+"""") = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
			Возврат РазделУчета;
		КонецЕсли;
	КонецЕсли; 
	
	Если Найти(СчетаГруппы, Лев(Строка(ТекущийСчет.Код), 2)) &lt;&gt; 0 Тогда
		Если Найти(СчетаИсключения, """"+ТекущийСчет.Код+"""") = 0 Тогда
			Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
			Возврат РазделУчета;
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;

РазделУчета = "ПрочиеСчетаБухгалтерскогоУчета";
Возврат(РазделУчета);
Параметры.ПараметрыАлгоритмов.Установить("РазделУчета", РазделУчета);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьСчетУчетаРасчетовСКонтрагентами" ИспользуетсяПриЗагрузке="false">
			<Текст>//Параметры
// Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");
// счет для которого надо определить является он счетом учета расчетов или нет
//
// Возвращаемое значение:
//1 - Поставщики 60
//2 - Покупатели 62
//3 - Прочие 76
//0 - не счет расчетов

ТипСчетаРасчетов = 0;
РазделУчета = ОпределитьРазделУчета();
Если РазделУчета = "РасчетыСПоставщикамиИПодрядчиками" Тогда
	ТипСчетаРасчетов = 1;
ИначеЕсли РазделУчета = "РасчетыСПокупателямиИЗаказчиками" Тогда
	ТипСчетаРасчетов = 2;
ИначеЕсли РазделУчета = "РасчетыСПрочимиДебиторамиИКредиторами" Тогда
	ТипСчетаРасчетов = 3;
КонецЕсли;

Возврат (ТипСчетаРасчетов);

//Параметры.ПараметрыАлгоритмов.Установить("ТипСчетаРасчетов", ТипСчетаРасчетов);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОтнесениеРасходовКДеятельностиЕНВД" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Константа.ОрганизацияЯвляетсяПлательщикомЕНВД = 1 Тогда
	Значение = "РаспределяемыеЗатраты";
Иначе
	Значение = "ОсновнаяСистемаНалогообложения";
КонецЕсли;

Для НомерСубконто = 1 по 3 Цикл
	Субконто = Параметры.ПараметрыАлгоритмов.Получить("Субконто" + НомерСубконто);
	Если ПустоеЗначение(Субконто) = 0 Тогда
		Если ТипЗначенияСтр(Субконто) = "Справочник.ВидыНоменклатуры" Тогда
			Если Субконто.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.УслугаЕНВД Тогда
				Значение = "ОсобыйПорядокНалогообложения";
				Прервать
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОчиститьПараметры" ИспользуетсяПриЗагрузке="false">
			<Текст>Параметры.ПараметрыАлгоритмов.Установить("СчетДт", "");
Параметры.ПараметрыАлгоритмов.Установить("СчетКт", "");
Параметры.ПараметрыАлгоритмов.Установить("Валюта", "");
Параметры.ПараметрыАлгоритмов.Установить("ОтражениеВНУДт", "");
Параметры.ПараметрыАлгоритмов.Установить("КоличествоДт", "");
Параметры.ПараметрыАлгоритмов.Установить("Сумма", "");
Параметры.ПараметрыАлгоритмов.Установить("СуммаН", "");
Параметры.ПараметрыАлгоритмов.Установить("НДС", "");
Параметры.ПараметрыАлгоритмов.Установить("КодСчетаДт", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоДт1", "");
Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт1", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоДт2", "");
Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт2", "");
Параметры.ПараметрыАлгоритмов.Установить("ВидСубконтоДт3", "");
Параметры.ПараметрыАлгоритмов.Установить("СубконтоДт3", "");
Параметры.ПараметрыАлгоритмов.Установить("НаименованиеОбщегоАлгоритма","");
Параметры.ПараметрыАлгоритмов.Установить("ВидЗадолженности","");
Параметры.ПараметрыАлгоритмов.Установить("СуммаВзаиморасчетов","");
Параметры.ПараметрыАлгоритмов.Установить("Контрагент","");
Параметры.ПараметрыАлгоритмов.Установить("ДоговорКонтрагента","");
Параметры.ПараметрыАлгоритмов.Установить("РасчетныйДокумент","");
Параметры.ПараметрыАлгоритмов.Установить("Подотчетник","");
Параметры.ПараметрыАлгоритмов.Установить("СчетУчетаНМА","");</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПодготовитьТаблицуМХ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаИтоговМХ = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИтоговМХ.НоваяКолонка("Склад");
ТаблицаИтоговМХ.НоваяКолонка("СНД", "Число");
ТаблицаИтоговМХ.НоваяКолонка("ДО", "Число");
ТаблицаИтоговМХ.НоваяКолонка("КО", "Число");
ТаблицаИтоговМХ.НоваяКолонка("СКД", "Число");
ТаблицаИтоговМХ.НоваяКолонка("ДляНУ", "Число");

ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

ТаблицаМХ = Параметры.ТаблицаМХ;

СчетаМХ = "МХ.1, МХ.2, МХ.3, МХ.4";
БухИтМХ = СоздатьОбъект("БухгалтерскиеИтоги");
БухИтМХ.ИспользоватьСубконто(ВидыСубконто.Номенклатура);
БухИтМХ.ИспользоватьСубконто(ВидыСубконто.МестаХранения);

БухИтМХ.ВыполнитьЗапрос(Параметры.ДатаВводаОстатков,, СчетаМХ);

БухИтМХ.ВыбратьПериоды();
Пока БухИтМХ.ПолучитьПериод() = 1 Цикл
	БухИтМХ.ВыбратьСчета();
	Пока БухИтМХ.ПолучитьСчет() = 1 Цикл
		БухИтМХ.ВыбратьСубконто(1);
		Пока БухИтМХ.ПолучитьСубконто(1) = 1 Цикл
						
			ТаблицаМХ.НоваяСтрока();
			ТаблицаМХ.Период = НачМесяца(БухИтМХ.НачДата);
			ТаблицаМХ.Номенклатура = БухИтМХ.Субконто(1);
			
			Если БухИтМХ.Счет = СчетПоКоду("МХ.1") Тогда
				ТаблицаМХ.СчетаУчета = "10";
			ИначеЕсли БухИтМХ.Счет = СчетПоКоду("МХ.2") Тогда
				ТаблицаМХ.СчетаУчета = "41";
			ИначеЕсли БухИтМХ.Счет = СчетПоКоду("МХ.3") Тогда
				ТаблицаМХ.СчетаУчета = "43";
			ИначеЕсли БухИтМХ.Счет = СчетПоКоду("МХ.4") Тогда
				ТаблицаМХ.СчетаУчета = "004";
			КонецЕсли;
			
			ТаблицаМХ.КлючПоиска = "/" + ТаблицаМХ.Номенклатура + "/" + ТаблицаМХ.Период + "/" + ТаблицаМХ.СчетаУчета;
			
			ТаблицаИтоговМХ = СоздатьОбъект("ТаблицаЗначений");
			ТаблицаИтоговМХ.НоваяКолонка("Склад");
			ТаблицаИтоговМХ.НоваяКолонка("СНД", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("ДО", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("КО", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("СКД", "Число");
			ТаблицаИтоговМХ.НоваяКолонка("ДляНУ", "Число");

			БухИтМХ.ВыбратьСубконто(2);
			Пока БухИтМХ.ПолучитьСубконто(2) = 1 Цикл
				ТаблицаИтоговМХ.НоваяСтрока();
				ТаблицаИтоговМХ.Склад = БухИтМХ.Субконто(2);
				ТаблицаИтоговМХ.СНД = Макс(0, БухИтМХ.СНД("К"));
				Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
					ТаблицаИтоговМХ.ДО = 0;
					ТаблицаИтоговМХ.КО = 0;
					ТаблицаИтоговМХ.СКД = Макс(0, БухИтМХ.СНД("К"));
					ТаблицаИтоговМХ.ДляНУ = Макс(0, БухИтМХ.СНД("К"));
				Иначе
					ТаблицаИтоговМХ.ДО = Макс(0, БухИтМХ.ДО("К"));
					ТаблицаИтоговМХ.КО = Макс(0, БухИтМХ.КО("К"));
					ТаблицаИтоговМХ.СКД = Макс(0, БухИтМХ.СКД("К"));
					ТаблицаИтоговМХ.ДляНУ = Макс(0, БухИтМХ.СКД("К"));
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаМХ.ТаблицаИтоговМХ = ТаблицаИтоговМХ;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ТаблицаМХ.Выгрузить(Параметры.ТаблицаМХ);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьАтрибутыПроводки" ИспользуетсяПриЗагрузке="false">
			<Текст>ТекОпер 	= Параметры.ПараметрыАлгоритмов.Получить("ОперацияКУДиР");
ТаблУчета	= Параметры.ПараметрыАлгоритмов.Получить("ТаблицаКУДиР");

ВыделятьВходящийНДС = Константа.ВыделятьВходящийНДС.Получить(Параметры.ДатаКонцаПериодаВыгрузки);

СчН01		= СчетПоКоду("Н01");
СчН02_2		= СчетПоКоду("Н02.2");

Док = ТекОпер.Документ;
ДокВид = Док.Вид();

Если ДокВид = "Сторно" Тогда
	Сторно = -1;
	ТекДок = Док.СторнируемыйДокумент;
Иначе                                 
	Сторно = 1;
	ТекДок = Док;
КонецЕсли;
ТекДокВид = ТекДок.Вид();


Опер = СоздатьОбъект("Операция");
Опер.НайтиОперацию(ТекОпер.Документ);

// Присвоим значения по умолчанию
НомерСтрокиДок = 0;
НДС = 0;
ДатаНомерДок = Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+", №"+ТекДок.НомерДок;

СодержОперации = ТекОпер.Содержание;
Описание = ТекОпер.СодержаниеПроводки;

//Выделим расходы по НДС -------------------------------------------------

Если (ВыделятьВходящийНДС = 1) и (ТекОпер.Дебет.Счет = СчН02_2) Тогда
	Номер=ТекОпер.НомерПроводки();
	Если  Номер&gt;1 Тогда
		Опер.ПолучитьПроводкуПоНомеру(Номер-1);
		Если (Опер.Кредит.Счет = СчетПоКоду("19.2")) и (Опер.Дебет.Счет &lt;&gt; СчетПоКоду("19.1")) Тогда
			Если ТекОпер.Сумма &gt; 0 Тогда
				СодержОперации = "Принят к расходам НДС, предъявленный поставщиком.";
			Иначе
				СодержОперации = "Сторнирован НДС, ранее принятый к расходам.";
			КонецЕсли;
			НомерСтрокиДок = 99999 + ТекОпер.НомерСтрокиДокумента();
			
			//Дата номер входящего документа
			Если ТекДокВид = "АвансовыйОтчет" Тогда
				Если  ТекДок.ПолучитьСтрокуПоНомеру(ТекОпер.НомерСтрокиДокумента()) = 1 Тогда
					Если ПустоеЗначение(ТекДок.НомерДокумента) = 0 Тогда
						ДатаНомерДок = Формат(ТекДок.ДатаДокумента, "Д ДДММГГГГ")+", №"+СокрЛП(ТекДок.НомерДокумента);
						Если (ТекДок.ДатаДок &lt;&gt; ТекДок.ДатаДокумента) и (ПустоеЗначение(ТекДок.ДатаДокумента) = 0) Тогда
							ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ТекДокВид = "Выписка" тогда
				
				Если  ТекДок.ПолучитьСтрокуПоНомеру(ТекОпер.НомерСтрокиДокумента()) = 1 Тогда
					Если ПустоеЗначение(ТекДок.ДатаДокВходящий)=1 Тогда
						ДатаДокВходящий = ТекДок.ДатаДок;
					Иначе
						ДатаДокВходящий = ТекДок.ДатаДокВходящий;
					КонецЕсли;
					Если ПустоеЗначение(ТекДок.НомерДокВходящий)=1 Тогда
						НомерДокВходящий = ТекДок.НомерДок;
					Иначе
						НомерДокВходящий = ТекДок.НомерДокВходящий;
					КонецЕсли;
					ДатаНомерДок = Формат(ДатаДокВходящий, "Д ДДММГГГГ")+", №"+НомерДокВходящий;
					Если ТекДок.ДатаДок &lt;&gt; ДатаДокВходящий Тогда
						ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли (ТекДокВид = "ПоступлениеНМА") или 
				(ТекДокВид = "ПоступлениеМПЗ") или
				(ТекДокВид = "УслугиСтороннихОрганизаций") Тогда                      
				Если ПустоеЗначение(ТекДок.НомерДокВходящий) = 0 Тогда
					ДатаНомерДок = Формат(ТекДок.ДатаДокВходящий, "Д ДДММГГГГ")+", №"+СокрЛП(ТекДок.НомерДокВходящий);
					Если (ТекДок.ДатаДок &lt;&gt; ТекДок.ДатаДокВходящий) и (ПустоеЗначение(ТекДок.ДатаДокВходящий) = 0) Тогда
						ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
					КонецЕсли;	
				КонецЕсли;
				
			КонецЕсли;
			ТаблУчета.Документ		 = Док;
			ТаблУчета.НомерСтрокиДок = НомерСтрокиДок;
			ТаблУчета.ДатаНомерДок   = ДатаНомерДок;
			ТаблУчета.СодержОперации = (СокрЛП(СодержОперации));
			ТаблУчета.НДС			 = Сторно * НДС;
			
			Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
Конецесли;

//Авансовый отчет --------------------------------------------------------

Если ТекДокВид = "АвансовыйОтчет" Тогда
	
	НомерСтрокиДок = ТекОпер.НомерСтрокиДокумента();
	Если ПустоеЗначение(ТекДок.НомерДокумента) = 0 Тогда
		ДатаНомерДок = Формат(ТекДок.ДатаДокумента, "Д ДДММГГГГ")+", №"+СокрЛП(ТекДок.НомерДокумента);
		Если (ТекДок.ДатаДок &lt;&gt; ТекДок.ДатаДокумента) и (ПустоеЗначение(ТекДок.ДатаДокумента) = 0) Тогда
			ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
		КонецЕсли;	
	КонецЕсли;
	СодержОперации = "Представлен авансовый отчет: "+ТекДок.Сотрудник+
	", назначение аванса """+ТекДок.Договор+""" - "+ТекДок.КоррСчет.Наименование+".";
	
	// Взаимозачет --------------------------------------------------------------- 
	
ИначеЕсли ТекДокВид = "Взаимозачет" Тогда
	
	ДатаДокВходящий = ТекДок.ДатаДок;
	НомерДокВходящий = ТекДок.НомерДок;
	ДатаНомерДок = Формат(ДатаДокВходящий, "Д ДДММГГГГ")+", №"+НомерДокВходящий;
	СодержОперации = "Взаимозачет между дебитором """+ТекДок.Дебитор+""" и кредитором """+ТекДок.Кредитор+""".";
	
	// Выписка --------------------------------------------------------------- 
	
ИначеЕсли ТекДокВид = "Выписка" Тогда
	
	НомерСтрокиДок = ТекОпер.НомерСтрокиДокумента();
	ТекДок.ПолучитьСтрокуПоНомеру(НомерСтрокиДок);
	
	Если ПустоеЗначение(ТекДок.ДатаДокВходящий)=1 Тогда
		ДатаДокВходящий = ТекДок.ДатаДок;
	Иначе
		ДатаДокВходящий = ТекДок.ДатаДокВходящий;
	КонецЕсли;
	Если ПустоеЗначение(ТекДок.НомерДокВходящий)=1 Тогда
		НомерДокВходящий = ТекДок.НомерДок;
	Иначе
		НомерДокВходящий = ТекДок.НомерДокВходящий;
	КонецЕсли;
	ДатаНомерДок = Формат(ДатаДокВходящий, "Д ДДММГГГГ")+", №"+НомерДокВходящий;
	Если ТекДок.ДатаДок &lt;&gt; ДатаДокВходящий Тогда
		ДатаНомерДок = ДатаНомерДок+" ("+Формат(ТекДок.ДатаДок, "Д ДДММГГГГ")+")";
	КонецЕсли;	
	Если ТекДок.Приход&gt;0 Тогда
		Движение = "Поступление на р/с: ";
	Иначе
		Движение = "Списание с р/с: ";
	КонецЕсли;
	
	Если НомерСтрокиДок&gt;0 Тогда
		СодержОперации = Движение+ТекДок.ВидДвижения+" - "+СокрЛП(ТекДок.НазначениеПлатежа) + ". Аналитика платежа: "+
		?(ПустоеЗначение(ТекДок.Субконто1)=0,""""+ТекДок.Субконто1+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто2)=0,", """+ТекДок.Субконто2+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто3)=0,", """+ТекДок.Субконто3+"""","")+"."; 
	Иначе
		СодержОперации = "Переоценка средств на счете № "+ТекДок.БанковскийСчет.Номер+" в банке "+ТекДок.БанковскийСчет.БанкОрганизации.Наименование+".";
	КонецЕсли;
	
	//ВыплатаЗП  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ВыплатаЗП" Тогда
	
	СодержОперации = "Выплата зарплаты";
	
	//Закрытие месяца  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ЗакрытиеМесяца" Тогда
	
	Если ТекОпер.Дебет.Счет = СчН02_2 Тогда // расход
		Номер=ТекОпер.НомерПроводки();
		Если  Номер&gt;1 Тогда
			Опер.ПолучитьПроводкуПоНомеру(Номер-1);
			Если СтрЧислоВхождений(ТекОпер.СодержаниеПроводки,"Признание расходов по")&gt;0 Тогда 
				НомерСтрокиДок = 1000;
				СодержОперации = "Начислены налоги (взносы).";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("10.12")) Тогда
				НомерСтрокиДок = 1001;
				СодержОперации = "Признаны транспортно-заготовительные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("10.13")) Тогда
				НомерСтрокиДок = 1001;
				СодержОперации = "Признаны транспортно-заготовительные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("44.2")) Тогда
				НомерСтрокиДок = 1002;
				СодержОперации = "Признаны транспортно-заготовительные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("97.2"))или(Опер.Кредит.счет=СчетПоКоду("97.3")) Тогда
				НомерСтрокиДок = 1003;
				СодержОперации = "Признаны отложенные расходы.";
			ИначеЕсли (Опер.Кредит.счет=СчетПоКоду("97.4")) Тогда
				НомерСтрокиДок = 1003;
				СодержОперации = "Признаны отложенные расходы.";
			ИначеЕсли (СокрЛП(ТекОпер.СодержаниеПроводки) = "Начислены налоги (взносы)") или (СокрЛП(ТекОпер.СодержаниеПроводки) = "Расходы по оплате труда") Тогда
				НомерСтрокиДок = 1004;
				СодержОперации = "Расходы по оплате труда";
			Иначе
				НомерСтрокиДок = Номер;
				СодержОперации = ТекОпер.СодержаниеПроводки;
				Описание = ТекОпер.СодержаниеПроводки;
			КонецЕсли; 
		ИначеЕсли (СокрЛП(ТекОпер.СодержаниеПроводки) = "Начислены налоги (взносы)") или (СокрЛП(ТекОпер.СодержаниеПроводки) = "Расходы по оплате труда") Тогда
			НомерСтрокиДок = 1004;
			СодержОперации = "Расходы по оплате труда";
		Иначе
			НомерСтрокиДок = Номер;
			СодержОперации = ТекОпер.СодержаниеПроводки;
		КонецЕсли;
	ИначеЕсли ТекОпер.Дебет.Счет = СчетПоКоду("Н02.1") Тогда // расход 
		НомерСтрокиДок = 1006;
		СодержОперации = "Признаны расходы на приобретение основных средств.";
	ИначеЕсли ТекОпер.Дебет.Счет = СчетПоКоду("Н02.4") Тогда // расход 
		НомерСтрокиДок = 1007;
		СодержОперации = "Признаны расходы на приобретение нематериальных активов.";
	Иначе
		НомерСтрокиДок = 0;
		СодержОперации = ТекОпер.СодержаниеПроводки;
	КонецЕсли;
	
	//Инвентаризация -----------------------------------------------------------------------------
ИначеЕсли ТекДокВид = "ИнвентаризацияТМЦ" Тогда
	
	Если ТекДок.ВидТМЦ = 3 Тогда
		СодержОперации = "Инвентаризация розничной торговой точки """+ТекДок.РозничныйСклад+"""."
	Иначе
		СодержОперации = "Инвентаризация склада """+ТекДок.МестоХранения + """.";
	КонецЕсли;
	
	Если (ТекОпер.Дебет.Счет = СчН02_2) и (ТекОпер.Сумма &lt; 0) Тогда // расход
		Если Найти(ТекОпер.СодержаниеПроводки, "НДС") &gt; 0 Тогда
			ВидРасходов = "на НДС ";
			СодержОперации = СодержОперации + " (НДС)";
			НомерСтрокиДок = 99999 + ТекОпер.НомерСтрокиДокумента();
		КонецЕсли;
	КонецЕсли;
	
	//НачислениеЗП  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "НачислениеЗП" Тогда
	
	СодержОперации = "Начисление зарплаты.";
	
	//Передача ОС  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ПередачаОС" Тогда
	
	СодержОперации = "Реализация основного средства покупателю """+ТекДок.Контрагент+""" по договору """+ТекДок.Договор+""".";
	
	//Передача НМА  ------------------------------------------------------------------------------- 
ИначеЕсли ТекДокВид = "ПередачаНМА" Тогда
	
	СодержОперации = "Реализация нематериальног актива покупателю """+ТекДок.Контрагент+""" по договору """+ТекДок.Договор+""".";
	
	//Перемещение МПЗ ------------------------------------------------------------------------------- 
	
ИначеЕсли ТекДокВид = "ПеремещениеМПЗ" Тогда
	
	СодержОперации = "Материалы переданы в производство.";
	
	//Поступление НМА------------------------------------------------------------------------------------
	
ИначеЕсли ТекДокВид = "ПоступлениеНМА" Тогда
	
	СодержОперации = "Поступление нематериальных активов.";
	
	//Поступление МПЗ------------------------------------------------------------------------------------
	
ИначеЕсли ТекДокВид = "ПоступлениеМПЗ" Тогда
	
	СодержОперации = "Поступление МПЗ.";
	
	//Приходный ордер --------------------------------------------------------------------
ИначеЕсли ТекДокВид = "ПриходныйОрдер" Тогда
	
	Если ТекДок.РозничнаяВыручка = 0 Тогда
		СодержОперации = "Поступление в кассу: "+ТекДок.ДвижениеДенежныхСредств+" - "+СокрЛП(ТекДок.Основание) + ". Аналитика платежа: "+
		?(ПустоеЗначение(ТекДок.Субконто1)=0,""""+ТекДок.Субконто1+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто2)=0,", """+ТекДок.Субконто2+"""","")+
		?(ПустоеЗначение(ТекДок.Субконто3)=0,", """+ТекДок.Субконто3+"""","")+".";
	Иначе
		СодержОперации = "Поступление в кассу: розничная выручка с торговой точки """+ТекДок.ТорговаяТочка+""".";
		Описание = СодержОперации;
	КонецЕсли;
	
	//РасходныйОрдер -----------------------------------------------------------------------------
ИначеЕсли ТекДокВид = "РасходныйОрдер" Тогда
	
	СодержОперации = "Выдача из кассы: "+ТекДок.ДвижениеДенежныхСредств+" - "+СокрЛП(ТекДок.Основание) + ". Аналитика платежа: "+
	?(ПустоеЗначение(ТекДок.Субконто1)=0,""""+ТекДок.Субконто1+"""","")+
	?(ПустоеЗначение(ТекДок.Субконто2)=0,", """+ТекДок.Субконто2+"""","")+
	?(ПустоеЗначение(ТекДок.Субконто3)=0,", """+ТекДок.Субконто3+"""","");
	
	//Реализация -----------------------------------------------------------------------------
ИначеЕсли ТекДокВид = "Реализация" Тогда
	
	Если ТекДок.ВидОтгрузки = 3 Тогда
		СодержОперации = "Реализация товаров (работ, услуг) в розницу."
	Иначе
		СодержОперации = "Реализация товаров (работ, услуг) покупателю """+ТекДок.Контрагент+ """ по договору """+ТекДок.Договор + """.";
	КонецЕсли;
	
	Если (ТекОпер.Дебет.Счет = СчН02_2) и (ТекОпер.Сумма &lt; 0) Тогда // расход
		Если Найти(ТекОпер.СодержаниеПроводки, "НДС") &gt; 0 Тогда
			ВидРасходов = "на НДС ";
			СодержОперации = СодержОперации + " (НДС)";
			НомерСтрокиДок = 99999 + ТекОпер.НомерСтрокиДокумента();
		КонецЕсли;
	КонецЕсли;
	
	//Услуги сторонних организаций --------------------------------------------------------------
ИначеЕсли ТекДокВид = "УслугиСтороннихОрганизаций" Тогда
	
	НомерСтрокиДок = ТекОпер.НомерСтрокиДокумента();
	ТекДок.ПолучитьСтрокуПоНомеру(НомерСтрокиДок);
	СодержОперации = "Произведены расходы: "+СокрЛП(ТекДок.НаименованиеУслуги)+" - "+ТекДок.СчетЗатрат.Наименование+".";
	
КонецЕсли;                                                                                     

Если ВыделятьВходящийНДС = 0 Тогда
	//Входной НДС ---------------------------------------------------------------------------------
	Номер=ТекОпер.НомерПроводки();
	НДС = 0;
	Если  Опер.КоличествоПроводок() &gt; Номер Тогда
		Опер.ПолучитьПроводкуПоНомеру(Номер+1);
		Если Опер.Кредит.Счет = СчетПоКоду("НДС") Тогда
			НДС = Опер.Сумма;
		КонецЕсли;
	КонецЕсли;
Иначе
	НДС = 0;
КонецЕсли;

Если (ТекОпер.Кредит.Счет &lt;&gt; СчН01) и (ТекОпер.Дебет.Счет.Родитель(1) &lt;&gt; СчетПоКоду("Н02")) Тогда
	НДС = 0;
КонецЕсли;

ТаблУчета.Документ 		 = Док;
ТаблУчета.НомерСтрокиДок = НомерСтрокиДок;
ТаблУчета.ДатаНомерДок   = ДатаНомерДок;
ТаблУчета.СодержОперации = (СокрЛП(СодержОперации));
ТаблУчета.НДС 			 = Сторно * НДС;

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаКУДиР",ТаблУчета);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьИсправляемыйСчетФактуру" ИспользуетсяПриЗагрузке="false">
			<Текст>СчетФактура = Параметры.ПараметрыАлгоритмов.Получить("КорректировкаДокумент");
ИсправляемыйСчетФактура = Параметры.ПараметрыАлгоритмов.Получить("КорректировкаДокументОснование");
Док = СоздатьОбъект("Документ");                                                                       
Док.ОбратныйПорядок(1);
Док.ВыбратьПодчиненныеДокументы(ИсправляемыйСчетФактура.ДатаДок, СчетФактура, ИсправляемыйСчетФактура);
Пока Док.ПолучитьДокумент() = 1 Цикл
	Если (Док.ПометкаУдаления()=0) 
		И (Док.ТекущийДокумент()&lt;&gt;СчетФактура)
		И ((Док.Вид()="КорректировочныйСчетФактура") 
		   ИЛИ (Док.Вид()="ИсправлениеСчетаФактуры")) Тогда
		ИсправляемыйСчетФактура = Док.ТекущийДокумент();
		Прервать;
	КонецЕсли;
КонецЦикла;
Параметры.ПараметрыАлгоритмов.Установить("ИсправляемыйДокумент", ИсправляемыйСчетФактура);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьИтогиПоСчету" ИспользуетсяПриЗагрузке="false">
			<Текст>БухИт = Параметры.ПараметрыАлгоритмов.Получить("БухИт");
ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");

ОстатокДтС = 0;
ОстатокДтВ = 0;
ОстатокДтК = 0;
ОстатокКтС = 0;
ОстатокКтВ = 0;
ОстатокКтК = 0;

ОборотДтС = 0;
ОборотДтВ = 0;
ОборотДтК = 0;
ОборотКтС = 0;
ОборотКтВ = 0;
ОборотКтК = 0;

ОстатокДтС = БухИт.СНД(1);
ОстатокДтВ = БухИт.СНД(2);
ОстатокДтК = БухИт.СНД(3);
	
ОстатокКтС = БухИт.СНК(1);
ОстатокКтВ = БухИт.СНК(2);
ОстатокКтК = БухИт.СНК(3);

ОборотДтС = БухИт.КорДО(1);
ОборотДтВ = БухИт.КорДО(2);
ОборотДтК = БухИт.КорДО(3);
	
Если ПустоеЗначение(БухИт.КорСчет) = 1 Тогда
	ОборотКтС = БухИт.КорКО(1);
	ОборотКтВ = БухИт.КорКО(2);
	ОборотКтК = БухИт.КорКО(3);
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтС", ОстатокДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтВ", ОстатокДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокДтК", ОстатокДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтС", ОстатокКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтВ", ОстатокКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОстатокКтК", ОстатокКтК);

Параметры.ПараметрыАлгоритмов.Установить("ОборотДтС", ОборотДтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтВ", ОборотДтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотДтК", ОборотДтК);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтС", ОборотКтС);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтВ", ОборотКтВ);
Параметры.ПараметрыАлгоритмов.Установить("ОборотКтК", ОборотКтК);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьКомментарийДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>Значение = "# Перенесено из 1С:Бухгалтерии 7.7 (УСН) #";
Если ТипЗначенияСтр(Источник)="Документ" Тогда
	Значение = Значение + " "+СокрЛП(Источник)+" #";
	Значение = Значение + СокрЛП(Источник.Комментарий);
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьНомерДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>	Документ = Параметры.ПараметрыАлгоритмов.Получить("Документ");
	
	Номер = Прав("000000"+СокрЛП(Документ.НомерДок),6);
		
	ПрефиксОрганизации = Прав("00" + Лев(СокрЛП(Параметры.ПрефиксОрганизации),2),2);
	
	ПрефиксДока = "0";
	Если ПустоеЗначение(Параметры.ПараметрыАлгоритмов.Получить("Префикс"))=0 Тогда
		ПрефиксДока = Параметры.ПараметрыАлгоритмов.Получить("Префикс");
	КонецЕсли;
	Если ПрефиксДока = "0" Тогда
		Если Документ.Вид()="ПриказОбИзмененииОкладов" Тогда
			ПрефиксДока = "И";
		ИначеЕсли Документ.Вид()="ПриказОКадровыхИзменениях" Тогда
			ПрефиксДока = "К";
		ИначеЕсли Документ.Вид()="ПоступлениеОС" Тогда
			ПрефиксДока = "С";
		ИначеЕсли Документ.Вид()="ПоступлениеМПЗ" Тогда
			ПрефиксДока = "Т";
		ИначеЕсли Документ.Вид()="УслугиСтороннихОрганизаций" Тогда
			ПрефиксДока = "У";
		ИначеЕсли Документ.Вид()="Реализация" Тогда
			ПрефиксДока = "Р";
		ИначеЕсли Документ.Вид()="ИнвентаризацияТМЦ" Тогда	
			Если ПустоеЗначение(ВходящиеДанные)=0 Тогда
				Если ПустоеЗначение(ВходящиеДанные.Получить("ИнвентаризацияТоваровНаСкладе"))=0 Тогда
					ПрефиксДока = "И";
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Документ.Вид()="ПередачаОС" Тогда	
			Если Документ.ПричинаВыбытия &lt;&gt; Перечисление.ПричиныВыбытияОС.Продажа Тогда
				ПрефиксДока = "П";			
			КонецЕсли;
		ИначеЕсли Документ.Вид()="СписаниеОС" Тогда 
			ПрефиксДока = "С";
		ИначеЕсли Документ.Вид()="ИсправлениеСчетаФактуры" Тогда 
			ПрефиксДока = "И";
		КонецЕсли;
	КонецЕсли;
		
	Если Лев(Номер,1)="0" Тогда
		Номер = ПрефиксДока+Прав(Номер,СтрДлина(Номер)-1);
	КонецЕсли;
	
	Номер = ПрефиксОрганизации + "00-" + Номер;
	
	Параметры.ПараметрыАлгоритмов.Установить("Префикс","");
	Параметры.ПараметрыАлгоритмов.Установить("НомерДокумента",Номер);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСписокВидовНоменклатуры" ИспользуетсяПриЗагрузке="false">
			<Текст>ТипыНоменклатуры = Параметры.ПараметрыАлгоритмов.Получить("ТипНоменклатуры");

СписокВидовНоменклатуры = СоздатьОбъект("СписокЗначений");
ВН = СоздатьОбъект("Справочник.ВидыНоменклатуры");
ВН.ВыбратьЭлементы();
Пока ВН.ПолучитьЭлемент() = 1 Цикл
	Если ВН.ЭтоГруппа() = 1 Тогда
		Продолжить;
		
	ИначеЕсли ТипыНоменклатуры.НайтиЗначение(ВН.ТипНоменклатуры) &gt; 0 Тогда
		СписокВидовНоменклатуры.ДобавитьЗначение(ВН.ТекущийЭлемент());
	КонецЕсли;
КонецЦикла;
		
Возврат СписокВидовНоменклатуры;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСписокПравилКОРеализации" ИспользуетсяПриЗагрузке="false">
			<Текст>СписокПравилКО = СоздатьОбъект("СписокЗначений");

Документ = Параметры.ПараметрыАлгоритмов.Получить("Документ");

Если ПустоеЗначение(Документ) = 0 Тогда
	Если Документ.Вид()="Реализация" Тогда
		Если (Документ.ВидОтгрузки = 0) Тогда
			ЕстьРеализация = 0;
			ЕстьПосредническиеУслуги = 0;
			Документ.ВыбратьСтроки();
			Пока Документ.ПолучитьСтроку()=1 Цикл
				Если ПустоеЗначение(Документ.Номенклатура) = 0 Тогда
					Если Документ.Номенклатура.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ПосредническаяУслуга Тогда
						ЕстьПосредническиеУслуги = 1;
					Иначе
						ЕстьРеализация = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если ЕстьПосредническиеУслуги = 1 Тогда
				СписокПравилКО.ДобавитьЗначение("Реализация_ОтчетКомитентуОПродажах");
			КонецЕсли;
			Если ЕстьРеализация = 1 Тогда
				СписокПравилКО.ДобавитьЗначение("Реализация_Продажа");
			КонецЕсли;
		ИначеЕсли (Документ.ВидОтгрузки = 1) Тогда
			СписокПравилКО.ДобавитьЗначение("Реализация_Продажа");
		ИначеЕсли (Документ.ВидОтгрузки = 2) Тогда
			СписокПравилКО.ДобавитьЗначение("Реализация_ОтчетКомиссионераОПродажах");
		ИначеЕсли (Документ.ВидОтгрузки = 3) Тогда
			СписокПравилКО.ДобавитьЗначение("Реализация_ОтчетОРозничныхПродажах");
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

Возврат(СписокПравилКО);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСтавкуНДС" ИспользуетсяПриЗагрузке="false">
			<Текст>Ставка = Параметры.ПараметрыАлгоритмов.Получить("СтавкаНДС");

ЗначениеСтавки = "БезНДС";
Если ПустоеЗначение(Ставка)=0 Тогда
	Если Ставка.Ставка&gt;19 Тогда
		ЗначениеСтавки = "НДС20";
	ИначеЕсли Ставка.Ставка &gt; 17 Тогда
		ЗначениеСтавки = "НДС18";
	ИначеЕсли Ставка.Ставка &gt; 16 Тогда
		ЗначениеСтавки = "НДС20_120";
	ИначеЕсли Ставка.Ставка &gt; 15 Тогда
		ЗначениеСтавки = "НДС18_118";
	ИначеЕсли Ставка.Ставка &gt; 9.5 Тогда
		ЗначениеСтавки = "НДС10";
	ИначеЕсли Ставка.Ставка &gt; 1 Тогда
		ЗначениеСтавки = "НДС10_110";
	КонецЕсли;
	
КонецЕсли;

Параметры.ПараметрыАлгоритмов.Установить("СтавкаНДССтрока",ЗначениеСтавки);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСтруктуруАдреса" ИспользуетсяПриЗагрузке="false">
			<Текст>	Адрес = Параметры.ПараметрыАлгоритмов.Получить("Адрес");
	Параметры.ПараметрыАлгоритмов.Установить("Адрес", "");
	
	АдресСписком = глРазложить(Адрес);
	СтруктураАдреса = СоздатьОбъект("СписокЗначений");
	
	Если СтрКоличествоСтрок(Адрес) &lt;&gt; 1 Тогда     // недолжно быть переводов строк
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрЧислоВхождений(Адрес, ",") &lt;&gt; 9 Тогда // должно быть 9 запятых
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(1))  &gt; 3  Тогда   // код страны не &gt; 3 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(2))  &gt; 6  Тогда   // индекс не &gt; 6 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(3))  &gt; 30 Тогда   // наим.региона не &gt; 30 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(4))  &gt; 35 Тогда   // наим.района не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(5))  &gt; 35 Тогда   // наим.города не &gt; 35 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(6))  &gt; 45 Тогда   // наим.нас.пункта не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(7))  &gt; 45 Тогда   // наим.улицы не &gt; 45 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(8))  &gt; 10  Тогда   // номер дома не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(9))  &gt; 10  Тогда   // номер корпуса не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(10)) &gt; 10  Тогда   // номер квартиры не &gt; 10 символов
		АдресСоответствуетТребованиямМНС = 0;
		
	Иначе
		АдресСоответствуетТребованиямМНС = 1;
	КонецЕсли;
	
	Если АдресСоответствуетТребованиямМНС = 1 Тогда
		СтруктураАдреса.Установить("Индекс", АдресСписком.ПолучитьЗначение(2)); // индекс
		СтруктураАдреса.Установить("Регион", АдресСписком.ПолучитьЗначение(3)); // регион
		СтруктураАдреса.Установить("Район", АдресСписком.ПолучитьЗначение(4)); // район
		СтруктураАдреса.Установить("Город", АдресСписком.ПолучитьЗначение(5)); // город
		СтруктураАдреса.Установить("НаселенныйПункт", АдресСписком.ПолучитьЗначение(6)); // населенный пункт
		СтруктураАдреса.Установить("Улица", АдресСписком.ПолучитьЗначение(7)); // улица
		СтруктураАдреса.Установить("Дом", АдресСписком.ПолучитьЗначение(8)); // дом
		СтруктураАдреса.Установить("Корпус", АдресСписком.ПолучитьЗначение(9)); // корпус
		СтруктураАдреса.Установить("Квартира", АдресСписком.ПолучитьЗначение(10)); // квартира
		СтруктураАдреса.Установить("Страна", "РОССИЯ"); // Страна
		СтруктураАдреса.Установить("КодСтраны", "643"); // Код страны
		СтруктураАдреса.Установить("ТипДома", "дом"); // Тип дома
		СтруктураАдреса.Установить("ТипКорпуса", "корпус"); // Тип корпуса
		СтруктураАдреса.Установить("ТипКвартиры", "кв."); // Тип квартиры
		
		ЗначенияПолей = "";
		
		ТекПредставление = "";

		Если СокрЛП(СтруктураАдреса.Получить("Индекс")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Получить("Индекс"));
			ЗначенияПолей = "Индекс="+СокрЛП(СтруктураАдреса.Получить("Индекс"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Регион")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Получить("Регион"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Регион="+СокрЛП(СтруктураАдреса.Получить("Регион"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Район")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Получить("Район"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Район="+СокрЛП(СтруктураАдреса.Получить("Район"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Город")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Получить("Город"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Город="+СокрЛП(СтруктураАдреса.Получить("Город"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("НаселенныйПункт")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Получить("НаселенныйПункт"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "НаселенныйПункт="+СокрЛП(СтруктураАдреса.Получить("НаселенныйПункт"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Улица")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Получить("Улица"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Улица="+СокрЛП(СтруктураАдреса.Получить("Улица"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Дом")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", дом № " + СокрЛП(СтруктураАдреса.Получить("Дом"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Дом="+СокрЛП(СтруктураАдреса.Получить("Дом"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Корпус")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", корпус " + СокрЛП(СтруктураАдреса.Получить("Корпус"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Корпус="+СокрЛП(СтруктураАдреса.Получить("Корпус"));
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Квартира")) &lt;&gt; "" Тогда
			ТекПредставление = ТекПредставление + ", кв." + СокрЛП(СтруктураАдреса.Получить("Квартира"));
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "Квартира="+СокрЛП(СтруктураАдреса.Получить("Квартира"));
		КонецЕсли;

		ЗначенияПолей = ЗначенияПолей + РазделительСтрок + "Страна=РОССИЯ" + РазделительСтрок + "КодСтраны=643";
		
		Если СокрЛП(СтруктураАдреса.Получить("Дом")) &lt;&gt; "" Тогда
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "ТипДома=дом";
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Корпус")) &lt;&gt; "" Тогда
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "ТипКорпуса=корпус";
		КонецЕсли;

		Если СокрЛП(СтруктураАдреса.Получить("Квартира")) &lt;&gt; "" Тогда
			ЗначенияПолей = ЗначенияПолей + ?(СокрЛП(ЗначенияПолей)="","", РазделительСтрок);
			ЗначенияПолей = ЗначенияПолей + "ТипКвартиры=кв.";
		КонецЕсли;
		
		Если СтрДлина(ТекПредставление) &gt; 2 Тогда
			ТекПредставление = Сред(ТекПредставление, 3);
		КонецЕсли;
		
		СтруктураАдреса.Установить("Представление", ТекПредставление);
		СтруктураАдреса.Установить("ЗначенияПолей", ЗначенияПолей);
	Иначе
		СтруктураАдреса.Установить("Представление", Адрес);
		СтруктураАдреса.Установить("ЗначенияПолей", "");
	КонецЕсли;
	
	Возврат(СтруктураАдреса);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСчетаРасчетов" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.Получить("Счет");
Договор = Параметры.ПараметрыАлгоритмов.Получить("Договор");

СчетаРасчетов = СоздатьОбъект("СписокЗначений");
РасчетыВУЕ = 0;
РасчетыВВалюте = 0;
Если ПустоеЗначение(Договор)=0 Тогда
	Если (ПустоеЗначение(Договор.ВалютаДоговора)=0)
		И (Договор.ОплатаДоговора = 1) Тогда
		РасчетыВУЕ = 1;
	ИначеЕсли (ПустоеЗначение(Договор.ВалютаДоговора)=0) Тогда
		РасчетыВВалюте = 1;
	КонецЕсли;
КонецЕсли;

Если ТипЗначенияСтр(Счет)="Счет" Тогда
	Если ПустоеЗначение(Счет)=0 Тогда
		Если (Счет.ПринадлежитГруппе(СчетПоКоду("60"))=1) Тогда
			СчетаРасчетов.Установить("СчетРасчетов", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "60.21","60.01"), "60.31"));
			СчетаРасчетов.Установить("СчетАвансов",  ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "60.22","60.02"), "60.32"));
			СчетаРасчетов.Установить("СчетРасчетовПоТаре", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.25","76.05"), "76.35"));
			СчетаРасчетов.Установить("СчетРасчетовЗаКомиссионныеТовары", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.29","76.09"), "76.39"));
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("62"))=1) Тогда
			СчетаРасчетов.Установить("СчетРасчетов", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "62.21","62.01"), "62.31"));
			СчетаРасчетов.Установить("СчетАвансов",  ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "62.22","62.02"), "62.32"));
			СчетаРасчетов.Установить("СчетРасчетовПоТаре", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.26","76.06"), "76.36"));
			СчетаРасчетов.Установить("СчетРасчетовЗаКомиссионныеТовары", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.29","76.09"), "76.39"));
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("76"))=1) Тогда
			СчетаРасчетов.Установить("СчетРасчетов", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.29","76.09"), "76.39"));
			СчетаРасчетов.Установить("СчетАвансов",  ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.29","76.09"), "76.39"));
			СчетаРасчетов.Установить("СчетРасчетовПоТаре", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.29","76.09"), "76.39"));
			СчетаРасчетов.Установить("СчетРасчетовЗаКомиссионныеТовары", ?(РасчетыВУЕ = 0, ?(РасчетыВВалюте = 1, "76.29","76.09"), "76.39"));
		Иначе
			СчетаРасчетов.Установить("СчетРасчетов", Счет);
			СчетаРасчетов.Установить("СчетАвансов",  Счет);
			СчетаРасчетов.Установить("СчетРасчетовПоТаре",  Счет);
			СчетаРасчетов.Установить("СчетРасчетовЗаКомиссионныеТовары",  Счет);
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
Возврат(СчетаРасчетов);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСчетУчетаТоваров" ИспользуетсяПриЗагрузке="false">
			<Текст>	Товар = Параметры.ПараметрыАлгоритмов.Получить("Товар");
	
	Если ПустоеЗначение(Товар)=1 Тогда
		Возврат(ПолучитьПустоеЗначение("Счет.Основной"));
	КонецЕсли;
	
	СчетУчета = СчетПоКоду("41.1");
	Если Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.ТоварНаКомиссии Тогда
		СчетУчета = СчетПоКоду("004");
	ИначеЕсли Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Продукция Тогда
		СчетУчета = СчетПоКоду("43");
	ИначеЕсли Товар.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал Тогда
		СчетУчета = СчетПоКоду("10.1");
	КонецЕсли;
	
	Возврат(СчетУчета);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПриВыгрузкеСубконто" ИспользуетсяПриЗагрузке="false">
			<Текст>Счет = Параметры.ПараметрыАлгоритмов.Получить("Счет");
Субконто = Параметры.ПараметрыАлгоритмов.Получить("Субконто");
ВидСубконтоВх = Параметры.ПараметрыАлгоритмов.Получить("ВидСубконто");
НомерСубконто = Параметры.ПараметрыАлгоритмов.Получить("НомерСубконто");
ВидУчета = Параметры.ПараметрыАлгоритмов.Получить("ВидУчета");
ВидУчета = ?(ПустоеЗначение(ВидУчета) = 1, "БУ", ВидУчета);
НомерСубконто = ?(ПустоеЗначение(НомерСубконто) = 1, 1, НомерСубконто);
ВидДоговора = "Прочее";
ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";

Если ПустоеЗначение(Счет) = 0 Тогда
	Если Счет = СчетПоКоду("ГТД") Тогда
		Если НомерСубконто = 3 Тогда
			ВидСубконто = "СтраныПроисхождения"; // страны происхождения
			ИмяПКО = "ГТД_КлассификаторСтранМира";
		КонецЕсли;
	ИначеЕсли Счет = СчетПоКоду("57.11") Тогда
		Если ПустоеЗначение(Субконто)=0 Тогда
			Если ТипЗначенияСтр(Субконто)="Справочник" Тогда
				ВидСубконто = "Контрагенты";
				ИмяПКО = "КонтрагентБанк";
			ИначеЕсли ТипЗначенияСтр(Субконто)="СписокЗначений" Тогда
				ВидСубконто = "Договоры";
				ИмяПКО = "ДоговорПродажиВалюты";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Счет.КоличествоСубконто() &gt; 0 Тогда
		Если ПустоеЗначение(ВидСубконто) = 1 Тогда
			ВидСубконтоИсточника = Счет.ВидСубконто(НомерСубконто);
		Иначе
		    ВидСубконтоИсточника = ВидСубконтоВх;
		КонецЕслИ;
		ИмяПКО = "";
		ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
		
		Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда
			Если Субконто.Вид() = "Договоры" Тогда
				ВидСубконто = "Договоры";
				ИмяПКО = "ДоговорыКонтрагентов";
			КонецЕсли;
		КонецЕсли;

		Если ВидСубконтоИсточника = ВидыСубконто.ОбъектыВнеоборотныхАктивов Тогда
			Если (Счет = СчетПоКоду("08.4")) ИЛИ  (Счет = СчетПоКоду("07")) Тогда
				ВидСубконто = "Номенклатура"; // номенклатура
				ИмяПКО = "ОбъектыСтроительства_08_4";
								
			ИначеЕсли Счет = СчетПоКоду("08.5") Тогда
				ВидСубконто = "НематериальныеАктивы"; // нематериальные активы
				ИмяПКО = "ОбъектыСтроительства_08_5_08_8";
			
			ИначеЕсли Счет = СчетПоКоду("08.8") Тогда
				ВидСубконто = "РасходыНаНИОКР"; // расходы на НИОКР
				ИмяПКО = "ОбъектыСтроительства_08_5_08_8";
				
			Иначе
				ВидСубконто = "ОбъектыСтроительства"; // объекты строительства
				ИмяПКО = "ОбъектыСтроительства_08_3";
			КонецЕсли;
			
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("41")) = 1) ИЛИ
			(Счет = СчетПоКоду("10.1")) ИЛИ
			(Счет = СчетПоКоду("10.2")) ИЛИ
			(Счет = СчетПоКоду("10.3")) ИЛИ
			(Счет = СчетПоКоду("43")) Тогда
		    Если ВидСубконтоИсточника = ВидыСубконто.Договоры Тогда
				Отказ = 1;
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.МестаХранения) Тогда
				Если (ВидУчета = "БУ") Тогда
					ВидСубконто = "Склады"; // склады
					ИмяПКО = "Склады";
				Иначе
					Отказ = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("04")) = 1) ИЛИ (Счет = СчетПоКоду("05")) Тогда
			Если Счет = СчетПоКоду("04.1") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "НематериальныйАктив");
			ИначеЕсли Счет = СчетПоКоду("04.2") Тогда
				Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "РасходыНаНИОКР");
			Иначе
				Параметры.ПараметрыАлгоритмов.Установить("ВидОбъектаУчета", "");
			КонецЕсли;			
			
		ИначеЕсли (Счет = СчетПоКоду("10.11")) ИЛИ
			(Счет = СчетПоКоду("10.12")) ИЛИ
			(Счет = СчетПоКоду("10.13")) ИЛИ
			(Счет = СчетПоКоду("44.1")) ИЛИ
			(Счет = СчетПоКоду("44.2")) ИЛИ
			(Счет.ПринадлежитГруппе(СчетПоКоду("97")) = 1) Тогда
			Если (Счет.ПринадлежитГруппе(СчетПоКоду("97")) = 1) Тогда
				Если НомерСубконто &gt; 1 Тогда
					Отказ = 1;
				КонецЕсли;
			Иначе
				Если НомерСубконто &gt; 1 Тогда
					Отказ = 1;
				Иначе
					ВидСубконто = "СтатьиЗатрат"; // статьи затрат
					ИмяПКО = "ТЗР";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли Счет = СчетПоКоду("40") Тогда
			Отказ = 1;
			
		ИначеЕсли Счет = СчетПоКоду("45") Тогда
			Если НомерСубконто &gt; 2 Тогда
				Отказ = 1;
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				ВидДоговора = "СКомиссионером";
			КонецЕсли;
						
		ИначеЕсли (Счет.ПринадлежитГруппе(СчетПоКоду("70")) = 1) И (ВидУчета = "НУ") Тогда
			Если НомерСубконто &gt; 1 Тогда
				Отказ = 1;
			КонецЕсли;

		ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("71")) = 1 Тогда
			Если (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				Отказ = 1;
											
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Контрагенты) Тогда
				ВидСубконто = "РаботникиОрганизаций"; // работники
				ИмяПКО = "СотрудникиКонтрагенты";
				
			КонецЕсли;
									
		ИначеЕсли Счет = СчетПоКоду("004") Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.ДоговорыПоставки Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКО = "ДокументРасчетовСКонтрагентом";
				ВидДоговора = "СКомитентом";
				
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
				ВидСубконто = "Партии"; // партии
				ИмяПКО = "ДокументРасчетовСКонтрагентом";
				ВидДоговора = "СКомиссионером";
				
			ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.МестаХранения) Тогда
				Если (ВидУчета = "БУ") Тогда
					ВидСубконто = "Склады"; // склады
					ИмяПКО = "Склады";
				Иначе
					Отказ = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Контрагенты) Тогда
			ВидСубконто = "Контрагенты"; // контрагенты
			ИмяПКО = "Контрагенты";
						
		ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.Договоры) Тогда
			
			Если НомерСубконто &gt; 2 Тогда
				Отказ = 1;
			Иначе
				Если Счет.ПринадлежитГруппе(СчетПоКоду("62")) = 1 Тогда
					ВидДоговора = "СПокупателем";
					
				ИначеЕсли Счет.ПринадлежитГруппе(СчетПоКоду("60")) = 1 Тогда
					ВидДоговора = "СПоставщиком";
					
				КонецЕсли;

				ВидСубконто = "Договоры"; // договоры
				ИмяПКО = "ДоговорыКонтрагентов";
			КонецЕсли;
		ИначеЕсли (ВидСубконтоИсточника = ВидыСубконто.ВидыНачисленийВыплат) Тогда
			Отказ = 1;
		ИначеЕсли Счет = СчетПоКоду("86") Тогда
			Если ВидСубконтоИсточника = ВидыСубконто.НазначениеЦелевыхСредств Тогда
				ВидСубконто = "НазначениеЦелевыхСредств"; 
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
				ИмяПКО = "НазначениеЦелевыхСредств";
			ИначеЕсли ВидСубконтоИсточника = ВидыСубконто.ИсточникиПоступления Тогда
				ВидСубконто = "ИсточникиПоступления"; 
				ИмяПКОВидСубконто = "ВидыСубконтоХозрасчетные";
				ИмяПКО = "ДвиженияЦелевыхСредств";
			КонецЕсли;
									
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(Субконто) = 0 Тогда 
		Если ТипЗначенияСтр(Субконто) = "Справочник" Тогда 
			Если Субконто.Вид() = "Сотрудники" Тогда
				ИмяПКО = "ФизическиеЛица"; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	НомерПКОСубконто = НайтиПравило(Субконто, ИмяПКО);

	Если НомерПКОСубконто = 0 Тогда
		Отказ = 1;
	КонецЕсли;
	
Иначе
	Отказ = 1;
КонецЕсли;

//Если (ПустоеЗначение(Субконто) = 0) и (ПустоеЗначение(ВидДоговора) = 0) Тогда
//	Если Субконто.ЭтоГруппа() = 0 Тогда
//		Если ВидДоговора &lt;&gt; "Прочее" Тогда
//			НомСтр = 0;
//			Если Параметры.ТаблицаДоговоров.НайтиЗначение(Субконто, НомСтр, "Договор") = 0 Тогда
//				Параметры.ТаблицаДоговоров.НоваяСтрока();
//				Параметры.ТаблицаДоговоров.Договор = Субконто;
//					
//			Иначе
//				Параметры.ТаблицаДоговоров.ПолучитьСтрокуПоНомеру(НомСтр);
//			КонецЕсли;
//				
//			Параметры.ТаблицаДоговоров.ВидДоговора = ВидДоговора;
//		КонецЕсли;
//	КонецЕсли;
//КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверитьНаВозможностьВыгрузки" ИспользуетсяПриЗагрузке="false">
			<Текст>Если ТипЗначенияСтр(Источник)="Документ" Тогда
	Если (Источник.ПометкаУдаления ()=1) 
		И (Параметры._ВыгружатьУдаленные=0) Тогда
		Отказ = 1;
	КонецЕсли;

	Если (Метаданные.Документ(Источник.Вид()).РазрешитьПроведение = 1)
		  и (Источник.Вид()&lt;&gt;"РасчетыПоСтраховымВзносам")
		   и (Источник.Вид()&lt;&gt;"ПеречислениеНДФЛвБюджет")
		   и (Источник.Вид()&lt;&gt;"КорректировочныйСчетФактура")
		   и (Источник.Вид()&lt;&gt;"ИсправлениеСчетаФактуры") Тогда
		Если (Источник.Проведен()=1)
			И (Параметры._ВыгружатьПроведенные=0) Тогда
			Отказ = 1;
		КонецЕсли;
		
		Если (Источник.Проведен()=0)
			И (Источник.ПометкаУдаления()=0)
			И (Параметры._ВыгружатьНеПроведенные=0) Тогда
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.П_ВыгружатьОбороты = 1 Тогда
		
		Если Источник.ДатаДок &lt; Параметры.ДатаНачалаВыгрузкиДокументов Тогда
			Отказ = 1;
		КонецЕсли;		
		
	КонецЕсли;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверитьНаВозможностьВыгрузкиДляОборотов" ИспользуетсяПриЗагрузке="false">
			<Текст>Если ТипЗначенияСтр(Источник)="Документ" Тогда	
	Если Параметры.П_ВыгружатьОбороты = 1 Тогда		
		Если Источник.ДатаДок &lt; Параметры.ДатаНачалаВыгрузкиДокументов Тогда
			Отказ = 1;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="Проверки" ИспользуетсяПриЗагрузке="false">
			<Текст>// Проверка проверка сальдо и оборотов в разрезе счетов

//**********************************
// # Данные из 7.7
ВыбНачПериода = Параметры.ДатаВводаОстатков;
ВыбКонПериода = Параметры.ДатаКонцаПериодаВыгрузки;

Ит = СоздатьОбъект("БухгалтерскиеИтоги");
Если Параметры.ДатаВводаОстатков = Параметры.ДатаКонцаПериодаВыгрузки Тогда
	Ит.ВыполнитьЗапрос(ВыбНачПериода,);
	ОстаткиИОбороты = 1;
Иначе
	Ит.ВыполнитьЗапрос(ВыбНачПериода, ВыбКонПериода);
	ОстаткиИОбороты = 2;
КонецЕсли;

СписокДанных = СоздатьОбъект("СписокЗначений");
СписокИмен = СоздатьОбъект("СписокЗначений");

Ит.ВыбратьСчета();
Пока Ит.ПолучитьСчет() = 1 Цикл
	Если Ит.Счет.Забалансовый = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	Если Ит.Счет = СчетПоКоду("00") Тогда
		Продолжить;
	КонецЕсли;
	
	// исользуем ключ: тип итогов + код счета
	СписокДанных.ДобавитьЗначение(Ит.СНД("С"));
	СписокДанных.ДобавитьЗначение(Ит.СНК("С"));
	СписокДанных.ДобавитьЗначение(Ит.ДО("С"));
	СписокДанных.ДобавитьЗначение(Ит.КО("С"));
	СписокДанных.ДобавитьЗначение(Ит.СКД("С"));
	СписокДанных.ДобавитьЗначение(Ит.СКК("С"));
	
	СписокИмен.ДобавитьЗначение("СНД" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("СНК" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("ДО" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("КО" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("СКД" + Ит.Счет.Код);
	СписокИмен.ДобавитьЗначение("СКК" + Ит.Счет.Код);
	
КонецЦикла;

//********************************
// Проверка КУДиР
КоллекцияОбъектов = Параметры.ПараметрыАлгоритмов.Получить("Раздел1");
Если ТипЗначенияСтр(КоллекцияОбъектов) = "ТаблицаЗначений" Тогда
	Если КоллекцияОбъектов.КоличествоСтрок() &lt;&gt; 0 Тогда
		Если Параметры.ДатаВводаОстатков &lt;&gt; Параметры.ДатаКонцаПериодаВыгрузки Тогда	
			
			СписокДанных.ДобавитьЗначение(КоллекцияОбъектов.Итог("ДоходыБУ"));
			СписокДанных.ДобавитьЗначение(КоллекцияОбъектов.Итог("Доходы"));
			СписокДанных.ДобавитьЗначение(КоллекцияОбъектов.Итог("РасходыБУ"));
			СписокДанных.ДобавитьЗначение(КоллекцияОбъектов.Итог("Расходы"));
			
			СписокИмен.ДобавитьЗначение("ДоходыБУ");
			СписокИмен.ДобавитьЗначение("Доходы");
			СписокИмен.ДобавитьЗначение("РасходыБУ");
			СписокИмен.ДобавитьЗначение("Расходы");
			
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
//****************************************************

СписокИмен = СписокИмен.ВСтрокуСРазделителями();
СписокИмен = СтрЗаменить(СписокИмен, """","");
СписокДанных = СписокДанных.ВСтрокуСРазделителями();

//**********************************************************
Идентификатор = "КонрольныеДанные";
Значение = СписокИмен;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

Идентификатор = "КонрольныеЗначения";
Значение = СписокДанных;
УстановитьАтрибут(rootNode, Идентификатор, Значение);
</Текст>
		</Алгоритм>
		<Алгоритм Имя="РаспределитьГТД" ИспользуетсяПриЗагрузке="false">
			<Текст>КолонкиРаспределения = СоздатьОбъект("СписокЗначений");
КолонкиРаспределения.Установить("Сумма",1);
КолонкиРаспределения.Установить("СуммаНДС",1);
КолонкиРаспределения.Установить("Себестоимость",1);
КолонкиРаспределения.Установить("Стоимость",1);

//теперь нужно заполнить номера ГТД и страну происхождения
//выбираем счет-фактуры для этого документа
Док = СоздатьОбъект("Документ");
Док.ВыбратьПодчиненныеДокументы(,,Источник);
Пока Док.ПолучитьДокумент() = 1 Цикл
	Если (Док.ПометкаУдаления() = 0) 
		 и ((Док.Вид() = "СчетФактураПолученный") или (Док.Вид() = "СчетФактура")) Тогда
		//это счет-фактура. Пытаемся распределить ГТД на строки ТЧ
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку()=1 цикл
			Если ПустоеЗначение(Док.ГТД)=0 Тогда
				//распределяем это ГТД на строки по количеству и товару
				КоличествоРаспределить = Док.Количество;
				КоллекцияОбъектов.ВыбратьСтроки();
				Пока (КоллекцияОбъектов.ПолучитьСтроку()=1) и (КоличествоРаспределить&gt;0) Цикл
					Если (КоллекцияОбъектов.Номенклатура = Док.Товар)
						и (ПустоеЗначение(КоллекцияОбъектов.НомерГТД)=1) тогда
						Если КоллекцияОбъектов.Количество&lt;=КоличествоРаспределить Тогда
							КоллекцияОбъектов.НомерГТД = Док.ГТД;
							КоллекцияОбъектов.СтранаПроисхождения = Док.ГТД;
							КоличествоРаспределить = КоличествоРаспределить - КоллекцияОбъектов.Количество;
						Иначе
							//количества по ГТД не хватает - нужно разделить

							Количество = КоллекцияОбъектов.Количество;
							
							НоваяСтрока = СоздатьОбъект("СписокЗначений");
							Для НомерКолонки = 1 по КоллекцияОбъектов.КоличествоКолонок() Цикл
								ИмяКолонки = КоллекцияОбъектов.ПолучитьПараметрыКолонки(НомерКолонки);
								Если ПустоеЗначение(КолонкиРаспределения.Получить(ИмяКолонки))=0 Тогда
									//это ресурс - его нужно распределить
									СтароеЗначениеРесурса = КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки,ИмяКолонки);
									НовоеЗначениеРесурса = Окр(КоличествоРаспределить/Количество*СтароеЗначениеРесурса,2);
									НоваяСтрока.ДобавитьЗначение(СтароеЗначениеРесурса - НовоеЗначениеРесурса,строка(НомерКолонки));
									КоллекцияОбъектов.УстановитьЗначение(КоллекцияОбъектов.НомерСтроки,НомерКолонки,НовоеЗначениеРесурса);
								ИначеЕсли ИмяКолонки = "Количество" Тогда
									НоваяСтрока.ДобавитьЗначение(Количество - КоличествоРаспределить,строка(НомерКолонки));
									КоллекцияОбъектов.УстановитьЗначение(КоллекцияОбъектов.НомерСтроки,"Количество",КоличествоРаспределить);
								Иначе
									//это не ресурс - просто копируем его
									НоваяСтрока.ДобавитьЗначение(КоллекцияОбъектов.ПолучитьЗначение(КоллекцияОбъектов.НомерСтроки,НомерКолонки),строка(НомерКолонки));
								КонецЕсли;
							КонецЦикла;
							КоллекцияОбъектов.НомерГТД = Док.ГТД;
							КоллекцияОбъектов.СтранаПроисхождения = Док.ГТД;
							
                            //теперь добавляем строку с остатком товара 
							КоллекцияОбъектов.НоваяСтрока();
							Для к=1 по КоллекцияОбъектов.КоличествоКолонок() цикл
								КоллекцияОбъектов.УстановитьЗначение(КоллекцияОбъектов.КоличествоСтрок(),к,НоваяСтрока.Получить(Строка(к)));
							КонецЦикла;
							КоличествоРаспределить = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_45" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");

ТаблицаТМЦ = СоздатьОбъект("ТаблицаЗначений");
РасходыНоменклатура.Выгрузить(ТаблицаТМЦ);
ТаблицаТМЦ.УдалитьСтроки();
ТаблицаТМЦ.НоваяКолонка("Поставщик");
ТаблицаТМЦ.НоваяКолонка("ДоговорПоставщика");

РасходыНоменклатура.ВыбратьСтроки();
Пока РасходыНоменклатура.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.Субконто3 = РасходыНоменклатура.Номенклатура)
			И (КоллекцияОбъектов.Субконто2 = РасходыНоменклатура.ПартияСинхронизации) Тогда
			
			Количество 	= 0;
			Сумма	 	= 0;
			НДС			= 0;
			СуммаВал 	= 0;
			НДСВал		= 0;
			
			Если  (РасходыНоменклатура.Количество = 0) 
				И (РасходыНоменклатура.Сумма = 0) 
				И (РасходыНоменклатура.НДС = 0) Тогда
				Продолжить;
			Иначе
				Количество = Мин(РасходыНоменклатура.Количество, КоллекцияОбъектов.Количество);
				Сумма = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.Сумма;
				НДС   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДС;
				СуммаВал = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.Сумма;
				НДСВал   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДС;
				
				РасходыНоменклатура.Количество 	= РасходыНоменклатура.Количество - Количество;
				РасходыНоменклатура.НДС 		= РасходыНоменклатура.НДС - НДС;
				РасходыНоменклатура.Сумма 		= РасходыНоменклатура.Сумма - Сумма;
				РасходыНоменклатура.НДСВал 		= РасходыНоменклатура.НДСВал - НДСВал;
				РасходыНоменклатура.СуммаВал	= РасходыНоменклатура.СуммаВал - СуммаВал;
				
				КоллекцияОбъектов.Количество 	= КоллекцияОбъектов.Количество - Количество;
				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				
			КонецЕсли;
				
			ТаблицаТМЦ.НоваяСтрока();
			ТаблицаТМЦ.Номенклатура 				= РасходыНоменклатура.Номенклатура;
			ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаТМЦ.Склад	 					= ОсновнойСклад;
			ТаблицаТМЦ.СтатусыПартийУСН 			= РасходыНоменклатура.СтатусыПартийУСН;
			ТаблицаТМЦ.Контрагент 					= РасходыНоменклатура.ПартияСинхронизации.Владелец;
			ТаблицаТМЦ.ДоговорКонтрагента 			= РасходыНоменклатура.ПартияСинхронизации;
			ТаблицаТМЦ.РасчетныйДокумент 			= РасходыНоменклатура.ПартияСинхронизации;
			ТаблицаТМЦ.Поставщик			        = РасходыНоменклатура.Контрагент;
			ТаблицаТМЦ.ДоговорПоставщика	        = РасходыНоменклатура.ДоговорКонтрагента;
			ТаблицаТМЦ.ДокументОприходования        = РасходыНоменклатура.ДоговорКонтрагента;
			ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= РасходыНоменклатура.СтатусыОплатыРасходовУСН;
			ТаблицаТМЦ.ОтражениеВУСН 				= РасходыНоменклатура.ОтражениеВУСН;
			ТаблицаТМЦ.Валюта 						= РасходыНоменклатура.Валюта;
			ТаблицаТМЦ.Количество 					= Количество;
			ТаблицаТМЦ.Сумма 						= Сумма;
			ТаблицаТМЦ.НДС 							= НДС;
			ТаблицаТМЦ.СуммаВал						= Сумма;
			ТаблицаТМЦ.НДСВал						= НДС;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Количество &lt;&gt; 0)
		ИЛИ (КоллекцияОбъектов.Сумма &lt;&gt; 0) Тогда
		ТаблицаТМЦ.НоваяСтрока();
		ТаблицаТМЦ.Номенклатура 				= КоллекцияОбъектов.Субконто3;
		ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаТМЦ.Склад	 					= ОсновнойСклад;
		ТаблицаТМЦ.СтатусыПартийУСН 			= "Купленные";
		ТаблицаТМЦ.Контрагент 					= КоллекцияОбъектов.Субконто1;
		ТаблицаТМЦ.ДоговорКонтрагента 			= КоллекцияОбъектов.Субконто2;
		ТаблицаТМЦ.РасчетныйДокумент 			= КоллекцияОбъектов.Субконто2;
		ТаблицаТМЦ.Поставщик			        = "";
		ТаблицаТМЦ.ДоговорПоставщика	        = "";
		ТаблицаТМЦ.ДокументОприходования        = "";
		ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= "НеСписано";
		ТаблицаТМЦ.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаТМЦ.Валюта 						= Параметры.Рубли;
		ТаблицаТМЦ.Количество 					= КоллекцияОбъектов.Количество;
		ТаблицаТМЦ.Сумма 						= КоллекцияОбъектов.Сумма;
		//ТаблицаТМЦ.НДС 							= НДС;
		ТаблицаТМЦ.СуммаВал						= КоллекцияОбъектов.Сумма;
		//ТаблицаТМЦ.НДСВал						= НДС;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаТМЦ);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_Взаиморасчеты" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
ОстаткиПоВзаиморасчетамСПокупателями 	= Параметры.ОстаткиПоВзаиморасчетамСПокупателями;

ТаблицаВзаиморасчетов = СоздатьОбъект("ТаблицаЗначений");
ОстаткиПоВзаиморасчетамСПокупателями.Выгрузить(ТаблицаВзаиморасчетов);
Таблицавзаиморасчетов.УдалитьСтроки();

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Сумма &lt;&gt; 0) 
		ИЛИ (КоллекцияОбъектов.СуммаКт &lt;&gt; 0) Тогда
		ТаблицаВзаиморасчетов.НоваяСтрока();
		
		Если КоллекцияОбъектов.Сумма &lt;&gt; 0 Тогда
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Дебиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= КоллекцияОбъектов.Сумма;
		Иначе
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Кредиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= КоллекцияОбъектов.СуммаКт;
		КонецЕсли;
		ТаблицаВзаиморасчетов.СчетУчета				= КоллекцияОбъектов.СчетУчета;				
		ТаблицаВзаиморасчетов.Контрагент 			= КоллекцияОбъектов.Субконто1;
		ТаблицаВзаиморасчетов.ДоговорКонтрагента 	= КоллекцияОбъектов.Субконто2;
		ТаблицаВзаиморасчетов.РасчетныйДокумент		= КоллекцияОбъектов.Субконто2;
		ТаблицаВзаиморасчетов.Валюта				= КоллекцияОбъектов.Валюта;
		ТаблицаВзаиморасчетов.СуммаВзаиморасчетовВал= КоллекцияОбъектов.ВалютнаяСумма;
		Если ПустоеЗначение(КоллекцияОбъектов.Валюта) = 1 Тогда
			ТаблицаВзаиморасчетов.Валюта				= Параметры.Рубли;
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетовВал= ТаблицаВзаиморасчетов.СуммаВзаиморасчетов;
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВзаиморасчетов);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_ВНА" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНоменклатура			= Параметры.РасходыНоменклатура;

ТаблицаТМЦ = СоздатьОбъект("ТаблицаЗначений");
РасходыНоменклатура.Выгрузить(ТаблицаТМЦ);
ТаблицаТМЦ.УдалитьСтроки();

ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Количество &lt;&gt; 0)
		ИЛИ (КоллекцияОбъектов.Сумма &lt;&gt; 0) Тогда
		
		Склад = "";
		Если (КоллекцияОбъектов.СчетУчета = "ПриобретениеОбъектовОсновныхСредств")
			ИЛИ (КоллекцияОбъектов.СчетУчета = "ОборудованиеКУстановке")
			ИЛИ (КоллекцияОбъектов.СчетУчета = СчетПоКоду("08.4"))
			ИЛИ (КоллекцияОбъектов.СчетУчета = СчетПоКоду("07")) Тогда
			Склад = ОсновнойСклад;
		КонецЕсли;
		
		ТаблицаТМЦ.НоваяСтрока();
		ТаблицаТМЦ.Номенклатура 				= КоллекцияОбъектов.Субконто1;
		ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаТМЦ.Склад	 					= Склад;
		ТаблицаТМЦ.Количество 					= КоллекцияОбъектов.Количество;
		ТаблицаТМЦ.Сумма 						= КоллекцияОбъектов.Сумма;
		
		Если (КоллекцияОбъектов.СчетУчета &lt;&gt; "СтроительствоОбъектовОсновныхСредств") 
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; "ПриобретениеНематериальныхАктивов") 
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; "ВыполнениеНИОКР")
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; СчетПоКоду("08.3")) 
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; СчетПоКоду("08.5")) 
			И (КоллекцияОбъектов.СчетУчета &lt;&gt; СчетПоКоду("08.8")) Тогда
			
			ТаблицаТМЦ.СтатусыПартийУСН 			= "Купленные";
			ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= "НеСписано";
			ТаблицаТМЦ.ОтражениеВУСН 				= "НеПринимаются";			
			ТаблицаТМЦ.Валюта 						= Параметры.Рубли;
			ТаблицаТМЦ.СуммаВал						= КоллекцияОбъектов.Сумма;
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаТМЦ);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_Налоги" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНалоги			= Параметры.ОстаткиПоВзаиморасчетамПоНалогам;

ТаблицаНалогов = СоздатьОбъект("ТаблицаЗначений");
РасходыНалоги.Выгрузить(ТаблицаНалогов);
ТаблицаНалогов.УдалитьСтроки();
ТаблицаНалогов.НоваяКолонка("СчетУчета");
ТаблицаНалогов.НоваяКолонка("ВидПлатежаВБюджет");
ТаблицаНалогов.НоваяКолонка("Сумма");
ТаблицаНалогов.НоваяКолонка("СуммаКт");

РасходыНалоги.ВыбратьСтроки();
Пока РасходыНалоги.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.СчетКт = РасходыНалоги.СчетРасчетовПоНалогу)
			ИЛИ (КоллекцияОбъектов.СчетДт = РасходыНалоги.СчетРасчетовПоНалогу) Тогда
			
			Сумма	 	= 0;
			СуммаКт	 	= 0;
			
			Если  РасходыНалоги.СуммаВзаиморасчетов = 0 Тогда
				Продолжить;
			Иначе
				Сумма = Мин(РасходыНалоги.СуммаВзаиморасчетов, КоллекцияОбъектов.Сумма);
				СуммаКт = Мин(РасходыНалоги.СуммаВзаиморасчетов, КоллекцияОбъектов.СуммаКт);
				
				РасходыНалоги.СуммаВзаиморасчетов 	= РасходыНалоги.СуммаВзаиморасчетов - Сумма;
				РасходыНалоги.СуммаВзаиморасчетов 	= РасходыНалоги.СуммаВзаиморасчетов - СуммаКт;

				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				КоллекцияОбъектов.СуммаКт 		= КоллекцияОбъектов.СуммаКт - СуммаКт;
				
			КонецЕсли;
				
			ТаблицаНалогов.НоваяСтрока();
			ТаблицаНалогов.ВидПлатежаВБюджет 			= КоллекцияОбъектов.Субконто1;
			ТаблицаНалогов.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаНалогов.ОтражениеВУСН 				= РасходыНалоги.ОтражениеВУСН;
			ТаблицаНалогов.Сумма 						= Сумма;
			ТаблицаНалогов.СуммаКт						= СуммаКт;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Сумма &lt;&gt; 0) 
		ИЛИ (КоллекцияОбъектов.СуммаКт &lt;&gt; 0) Тогда
		ТаблицаНалогов.НоваяСтрока();
		ТаблицаНалогов.ВидПлатежаВБюджет 			= "Налог";
		ТаблицаНалогов.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаНалогов.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаНалогов.Сумма						= КоллекцияОбъектов.Сумма;
		ТаблицаНалогов.СуммаКт						= КоллекцияОбъектов.СуммаКт;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаНалогов);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_РБП" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыРБП			= Параметры.РасходыРБП;

ТаблицаРБП = СоздатьОбъект("ТаблицаЗначений");
РасходыРБП.Выгрузить(ТаблицаРБП);
ТаблицаРБП.УдалитьСтроки();
ТаблицаРБП.НоваяКолонка("СчетУчета");

РасходыРБП.ВыбратьСтроки();
Пока РасходыРБП.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.Субконто1 = РасходыРБП.РБП)
			И (КоллекцияОбъектов.Субконто3 = РасходыРБП.ДоговорКонтрагента) Тогда
			
			Сумма	 	= 0;
			НДС			= 0;
			СуммаВал 	= 0;
			НДСВал		= 0;
			
			Если (РасходыРБП.Сумма = 0) 
				И (РасходыРБП.НДС = 0) Тогда
				Продолжить;
			Иначе
				Сумма = РасходыРБП.Сумма;
				НДС   = РасходыРБП.НДС;
				СуммаВал = РасходыРБП.СуммаВал;
				НДСВал   = РасходыРБП.НДСВал;
				
				РасходыРБП.НДС 		= 0;
				РасходыРБП.Сумма 	= 0;
				РасходыРБП.НДСВал 	= 0;
				РасходыРБП.СуммаВал	= 0;
				
				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				
			КонецЕсли;
				
			ТаблицаРБП.НоваяСтрока();
			ТаблицаРБП.РБП			 				= РасходыРБП.РБП;
			ТаблицаРБП.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаРБП.Контрагент 					= РасходыРБП.Контрагент;
			ТаблицаРБП.ДоговорКонтрагента 			= РасходыРБП.ДоговорКонтрагента;
			ТаблицаРБП.РасчетныйДокумент 			= РасходыРБП.РасчетныйДокумент;
			ТаблицаРБП.СтатусыОплатыРасходовУСН		= РасходыРБП.СтатусыОплатыРасходовУСН;
			ТаблицаРБП.ОтражениеВУСН 				= РасходыРБП.ОтражениеВУСН;
			ТаблицаРБП.Валюта 						= РасходыРБП.Валюта;
			ТаблицаРБП.Сумма 						= Сумма;
			ТаблицаРБП.НДС 							= НДС;
			ТаблицаРБП.СуммаВал						= СуммаВал;
			ТаблицаРБП.НДСВал						= НДСВал;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если КоллекцияОбъектов.Сумма &lt;&gt; 0 Тогда
		ТаблицаРБП.НоваяСтрока();
		ТаблицаРБП.РБП			 				= КоллекцияОбъектов.Субконто1;
		ТаблицаРБП.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаРБП.Контрагент 					= КоллекцияОбъектов.Субконто2;
		ТаблицаРБП.ДоговорКонтрагента 			= КоллекцияОбъектов.Субконто3;
		ТаблицаРБП.РасчетныйДокумент 			= КоллекцияОбъектов.Субконто3;
		ТаблицаРБП.СтатусыОплатыРасходовУСН		= "НеСписано";
		ТаблицаРБП.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаРБП.Валюта 						= Параметры.Рубли;
		ТаблицаРБП.Сумма 						= КоллекцияОбъектов.Сумма;
		//ТаблицаРБП.НДС 							= НДС;
		ТаблицаРБП.СуммаВал						= КоллекцияОбъектов.Сумма;
		//ТаблицаРБП.НДСВал						= НДС;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаРБП);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_Сотрудники" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
ОстаткиПоВзаиморасчетамССотрудниками 	= Параметры.ОстаткиПоВзаиморасчетамCСотрудниками;

ТаблицаВзаиморасчетов = СоздатьОбъект("ТаблицаЗначений");
ОстаткиПоВзаиморасчетамССотрудниками.Выгрузить(ТаблицаВзаиморасчетов);
ТаблицаВзаиморасчетов.УдалитьСтроки();

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
	Если (КоллекцияОбъектов.Сумма &lt;&gt; 0) 
		ИЛИ (КоллекцияОбъектов.СуммаКт &lt;&gt; 0) Тогда
		ТаблицаВзаиморасчетов.НоваяСтрока();
		ТаблицаВзаиморасчетов.СчетУчета		= СчетПоКоду("76.4");
		
		Если КоллекцияОбъектов.Сумма &lt;&gt; 0 Тогда
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Дебиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= - КоллекцияОбъектов.Сумма;
		Иначе
			ТаблицаВзаиморасчетов.ВидЗадолженности = "Кредиторская";
			ТаблицаВзаиморасчетов.СуммаВзаиморасчетов 	= КоллекцияОбъектов.СуммаКт;
		КонецЕсли;
		
		ТаблицаВзаиморасчетов.Работник	 			= КоллекцияОбъектов.Субконто1;
		ТаблицаВзаиморасчетов.ОтражениеВУСН		 	= "НеПринимаются";
		ТаблицаВзаиморасчетов.Ведомость			 	= "ВедомостьПоДепонентам";
		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаВзаиморасчетов);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СинхронизацияТабличныхЧастей_ТМЦ" ИспользуетсяПриЗагрузке="false">
			<Текст>КоллекцияОбъектов = ВходящиеДанные.Получить("ВходящиеОстатки");	
РасходыНоменклатура			= Параметры.РасходыНоменклатура;
ОсновнойСклад = Параметры.ПараметрыАлгоритмов.Получить("ОсновнойСклад");

ТаблицаТМЦ = СоздатьОбъект("ТаблицаЗначений");
РасходыНоменклатура.Выгрузить(ТаблицаТМЦ);
ТаблицаТМЦ.УдалитьСтроки();

РасходыНоменклатура.ВыбратьСтроки();
Пока РасходыНоменклатура.ПолучитьСтроку() = 1 Цикл
	КоллекцияОбъектов.ВыбратьСтроки();
	Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл
		Если (КоллекцияОбъектов.Субконто1 = РасходыНоменклатура.Номенклатура)
			И (КоллекцияОбъектов.Субконто3 = РасходыНоменклатура.РасчетныйДокумент) Тогда
			
			Количество 	= 0;
			Сумма	 	= 0;
			НДС			= 0;
			СуммаВал 	= 0;
			НДСВал		= 0;
			
			Если  (РасходыНоменклатура.Количество = 0) 
				И (РасходыНоменклатура.Сумма = 0) 
				И (РасходыНоменклатура.НДС = 0) Тогда
				Продолжить;
			Иначе
				Количество = Мин(РасходыНоменклатура.Количество, КоллекцияОбъектов.Количество);
				Если Количество = 0 Тогда
					Продолжить;					
				КонецЕсли;
				Сумма = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.Сумма;
				НДС   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДС;
				СуммаВал = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.СуммаВал;
				НДСВал   = КоллекцияОбъектов.Количество/РасходыНоменклатура.Количество * РасходыНоменклатура.НДСВал;
				
				
				Если РасходыНоменклатура.Валюта = Параметры.Рубли Тогда
					СуммаВал = Сумма;
					НДСВал = НДС;
				КонецЕсли;
				
				Если (Сумма = 0) И (Количество = 0) Тогда
					Продолжить;
				КонецЕсли;
				
				РасходыНоменклатура.Количество 	= РасходыНоменклатура.Количество - Количество;
				РасходыНоменклатура.НДС 		= РасходыНоменклатура.НДС - НДС;
				РасходыНоменклатура.Сумма 		= РасходыНоменклатура.Сумма - Сумма;
				РасходыНоменклатура.НДСВал 		= РасходыНоменклатура.НДСВал - НДСВал;
				РасходыНоменклатура.СуммаВал	= РасходыНоменклатура.СуммаВал - СуммаВал;
				
				КоллекцияОбъектов.Количество 	= КоллекцияОбъектов.Количество - Количество;
				КоллекцияОбъектов.Сумма 		= КоллекцияОбъектов.Сумма - Сумма;
				
			КонецЕсли;
			
			Склад = ОсновнойСклад;
			Если ПустоеЗначение(КоллекцияОбъектов.Субконто2) = 0 Тогда
				Если КоллекцияОбъектов.Субконто2.Вид() = "МестаХранения" Тогда
					Склад = КоллекцияОбъектов.Субконто2;
				КонецЕсли;
			КонецЕсли;
			
			ТаблицаТМЦ.НоваяСтрока();
			ТаблицаТМЦ.Номенклатура 				= РасходыНоменклатура.Номенклатура;
			ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
			ТаблицаТМЦ.Склад	 					= Склад;
			ТаблицаТМЦ.СтатусыПартийУСН 			= РасходыНоменклатура.СтатусыПартийУСН;
			ТаблицаТМЦ.Контрагент 					= РасходыНоменклатура.Контрагент;
			ТаблицаТМЦ.ДоговорКонтрагента 			= РасходыНоменклатура.ДоговорКонтрагента;
			ТаблицаТМЦ.РасчетныйДокумент 			= РасходыНоменклатура.РасчетныйДокумент;
			ТаблицаТМЦ.ДокументОприходования        = РасходыНоменклатура.ДокументОприходования;
			ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= РасходыНоменклатура.СтатусыОплатыРасходовУСН;
			ТаблицаТМЦ.ОтражениеВУСН 				= РасходыНоменклатура.ОтражениеВУСН;
			ТаблицаТМЦ.Валюта 						= РасходыНоменклатура.Валюта;
			ТаблицаТМЦ.Количество 					= Количество;
			ТаблицаТМЦ.Сумма 						= Сумма;
			ТаблицаТМЦ.НДС 							= НДС;
			ТаблицаТМЦ.СуммаВал						= СуммаВал;
			ТаблицаТМЦ.НДСВал						= НДСВал;
			
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

КоллекцияОбъектов.ВыбратьСтроки();
Пока КоллекцияОбъектов.ПолучитьСтроку() = 1 Цикл             
	Если (ПустоеЗначение(КоллекцияОбъектов.Количество) = 1) Тогда
		Продолжить;
	Иначе
		
		Склад = ОсновнойСклад;
		Если ПустоеЗначение(КоллекцияОбъектов.Субконто2) = 0 Тогда
			Если КоллекцияОбъектов.Субконто2.Вид() = "МестаХранения" Тогда
				Склад = КоллекцияОбъектов.Субконто2;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаТМЦ.НоваяСтрока();
		ТаблицаТМЦ.Номенклатура 				= КоллекцияОбъектов.Субконто1;
		ТаблицаТМЦ.СчетУчета 					= КоллекцияОбъектов.СчетУчета;
		ТаблицаТМЦ.Склад	 					= Склад;
		ТаблицаТМЦ.СтатусыПартийУСН 			= "Купленные";
		ТаблицаТМЦ.Контрагент 					= "";
		ТаблицаТМЦ.ДоговорКонтрагента 			= "";
		ТаблицаТМЦ.РасчетныйДокумент 			= "";
		ТаблицаТМЦ.ДокументОприходования        = "";
		ТаблицаТМЦ.СтатусыОплатыРасходовУСН		= "НеСписано";
		ТаблицаТМЦ.ОтражениеВУСН 				= "НеПринимаются";
		ТаблицаТМЦ.Валюта 						= Параметры.Рубли;
		ТаблицаТМЦ.Количество 					= КоллекцияОбъектов.Количество;
		ТаблицаТМЦ.Сумма 						= КоллекцияОбъектов.Сумма;
		ТаблицаТМЦ.СуммаВал						= КоллекцияОбъектов.Сумма;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.Установить("ВходящиеОстатки", ТаблицаТМЦ);	

</Текст>
		</Алгоритм>
		<Алгоритм Имя="СкопироватьСтрокуТаблицы" ИспользуетсяПриЗагрузке="false">
			<Текст>Проводки = Параметры.ПараметрыАлгоритмов.Получить("ТаблицаДляКопирования");

НС = Проводки.НомерСтроки;

Проводки.НоваяСтрока();
Для НК = 1 по Проводки.КоличествоКолонок() Цикл
	
	Если ТипЗначенияСтр(Проводки.ПолучитьЗначение(НС, НК)) = "ТаблицаЗначений" Тогда
		ВложеннаяТаблица = СоздатьОбъект("ТаблицаЗначений");
		Проводки.ПолучитьЗначение(НС, НК).Выгрузить(ВложеннаяТаблица);
		Проводки.УстановитьЗначение(НС+1, НК, ВложеннаяТаблица);
	Иначе
		Проводки.УстановитьЗначение(НС+1, НК, Проводки.ПолучитьЗначение(НС, НК));
	КонецЕсли;
	
КонецЦикла;

Параметры.ПараметрыАлгоритмов.Установить("ТаблицаДляКопирования", Проводки);</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьПараметрыДокументаОснованияСчетаФактуры" ИспользуетсяПриЗагрузке="false">
			<Текст>СчетФактура = Параметры.ПараметрыАлгоритмов.Получить("СчетФактура");
Значение = СчетФактура.ДокументОснование;

Если ПустоеЗначение(Значение)=0 Тогда
	Параметры.ПараметрыАлгоритмов.Установить("Документ",Значение);
Иначе
	Значение = СчетФактура;
	ИмяПКО = "СчетФактура_ДокументОснование";
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьСодержаниеУСН" ИспользуетсяПриЗагрузке="true">
			<Текст>ДокументОбъект = Параметры.ПараметрыАлгоритмов.ЗагруженныйОбъект;

ВидОперации = ДокументОбъект.ВидОперации;
ОбъектДоходы 	= УчетнаяПолитика.ПрименяетсяУСНДоходы(ДокументОбъект.Организация, ДокументОбъект.Дата);
ОбъектРасходы 	= НЕ ОбъектДоходы;

НТТ = Ложь;
СторнироватьДоходыПриВозврате = Истина;
Содержание_УСН  = "" + ВидОперации + ".";

Если (ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика ИЛИ
	ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПодотчетногоЛица) И ОбъектДоходы Тогда
	Содержание_УСН = "Возврат денежных средств. Основание: " + ДокументОбъект.Основание + ".";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПрочееПоступление ИЛИ
		ВидОперации = Перечисления.ВидыОперацийПКО.ПрочийПриход) Тогда
	Содержание_УСН = "Прочий приход денежных средств: ";
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() &gt; 0 Тогда
		Содержание_УСН = Содержание_УСН + ДокументОбъект.РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств + ".";
	КонецЕсли;
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам 
		ИЛИ ВидОперации=Перечисления.ВидыОперацийПКО.РасчетыПоКредитамИЗаймам) Тогда
	Содержание_УСН = "Расчеты по кредитам и займам с """ + ДокументОбъект.Контрагент + """";
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() &gt; 0 Тогда
		Содержание_УСН = Содержание_УСН + " по договору """ + ДокументОбъект.РасшифровкаПлатежа[0].ДоговорКонтрагента + """.";
	КонецЕсли;
ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами Тогда
	Содержание_УСН = "Расчеты с """ + ДокументОбъект.Контрагент + """";
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() &gt; 0 Тогда
		Содержание_УСН = Содержание_УСН + " по договору """ + ДокументОбъект.РасшифровкаПлатежа[0].ДоговорКонтрагента + """.";
	КонецЕсли;
ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя Тогда
	Содержание_УСН = "Оплата от покупателя """ + ДокументОбъект.Контрагент + """.";
		
ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажПоПлатежнымКартамИБанковскимКредитам 
		И ОбъектДоходы Тогда
	Содержание_УСН = "Поступление от продаж по платежным картам и банковским кредитам от """ + ДокументОбъект.Контрагент + """.";
		
ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПКО.РозничнаяВыручка И (НТТ) Тогда
	Содержание_УСН = "Прием розничной выручки с торговой точки """ + ДокументОбъект.Контрагент + """.";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхДокументов.ПоступлениеОтПоставщика) Тогда
	Содержание_УСН = "Поступление денежных документов. Принято от """ + ДокументОбъект.Контрагент + """.";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхДокументов.ПрочееПоступление) Тогда
	Содержание_УСН = "Поступление денежных документов. Принято от """ + ДокументОбъект.Контрагент + """.";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ПрочаяВыдача) И ОбъектРасходы Тогда
	Содержание_УСН = "Выдача денежных документов. Выдано """ + ДокументОбъект.Контрагент + """.";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийВыдачаДенежныхДокументов.ВозвратПоставщику) Тогда
	Содержание_УСН = "Возврат денежных документов контрагенту """ + ДокументОбъект.Контрагент + """.";
		
//Списание
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю) 
	И ОбъектДоходы 
	И СторнироватьДоходыПриВозврате Тогда //Доходы
	Содержание_УСН = "Возврат денежных средств покупателю.";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратПокупателю) 
	И ОбъектДоходы 
	И СторнироватьДоходыПриВозврате Тогда
	Содержание_УСН = "Возврат денежных средств. Основание: " + ДокументОбъект.Основание + ".";
ИначеЕсли (ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание
	ИЛИ ВидОперации = Перечисления.ВидыОперацийРКО.ПрочийРасход) И ОбъектРасходы Тогда
	Содержание_УСН = "Прочий расход денежных средств: ";
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() &gt; 0 Тогда
		Содержание_УСН = Содержание_УСН + ДокументОбъект.РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств + ".";
	КонецЕсли;
	
	//Если 91 счет, попробуем классифицировать расход
	Если ТипЗнч(ДокументОбъект.СубконтоДт1) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		Если ДокументОбъект.СубконтоДт1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыНаУслугиБанков Тогда
			Содержание_УСН = "Расходы, связанные с оплатой услуг, оказываемых кредитными организациями.";				
		КонецЕсли;
	КонецЕсли;
		
ИначеЕсли ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога И ОбъектРасходы Тогда
		
	Если ДокументОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НДФЛ Тогда
		Содержание_УСН = "Списание с р/с: перечисление НДФЛ работников. ";
	Иначе
		Содержание_УСН = "Списание с р/с: перечисление налога (" + ДокументОбъект.СчетУчетаРасчетовСКонтрагентом.Код + 
		" " + ДокументОбъект.СчетУчетаРасчетовСКонтрагентом.Наименование + "). ";
	КонецЕсли;
	
ИначеЕсли (ВидОперации=Перечисления.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймам
	ИЛИ ВидОперации=Перечисления.ВидыОперацийРКО.РасчетыПоКредитамИЗаймам) И ОбъектРасходы Тогда
	Содержание_УСН = "Расчеты по кредитам и займам с """ + ДокументОбъект.Контрагент + """";
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() &gt; 0 Тогда
		Содержание_УСН = Содержание_УСН + " по договору """ + ДокументОбъект.РасшифровкаПлатежа[0].ДоговорКонтрагента + """.";
	КонецЕсли;
		
	СчетУчетаРасчетовСКонтрагентом = ДокументОбъект.РасшифровкаПлатежа[0].СчетУчетаРасчетовСКонтрагентом;
	
	Если (СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам) ИЛИ
			(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам) ИЛИ
		(СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал) Тогда
		
		Содержание_УСН = Содержание_УСН + " Уплата процентов.";
	КонецЕсли;
				
ИначеЕсли (ВидОперации=Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами) И ОбъектРасходы Тогда
	Содержание_УСН = "Расчеты с """ + ДокументОбъект.Контрагент + """";
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() &gt; 0 Тогда
		Содержание_УСН = Содержание_УСН + " по договору """ + ДокументОбъект.РасшифровкаПлатежа[0].ДоговорКонтрагента + """.";
	КонецЕсли;
КонецЕсли;

ДокументОбъект.Содержание_УСН = Содержание_УСН;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьСтатусОплатыНоменклатуры" ИспользуетсяПриЗагрузке="false">
			<Текст>ОстаткиНаКонец = Параметры.ПараметрыАлгоритмов.Получить("ОстаткиНаКонец");
ТекущийСчет = Параметры.ПараметрыАлгоритмов.Получить("ТекущийСчет");

ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетов;

СтрокаРасходов 			 = Параметры.СтрокаТаблицыЗначений;
РасходыНоменклатура		 = Параметры.РасходыНоменклатура;

СтатусОплачено = "НеСписано";
СтатусНеОплачено = "НеСписаноНеОплачено";

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику.Идентификатор()) Тогда
	ТоварыПоОплате = 1;
КонецЕсли;

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации.Идентификатор()) Тогда
	РасходыПоОтгрузке = 1;
КонецЕсли;

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияРасходовПоТоварам") = Перечисление.ПорядокПризнанияРасходовПоТоварам.ПоФактуПолученияДохода.Идентификатор()) Тогда
	РасходыПоДоходам = 1;
КонецЕсли;

Если (Параметры.ПараметрыАлгоритмов.Получить("ПорядокПризнанияМатериальныхРасходов") = Перечисление.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику.Идентификатор()) Тогда
	МатериалыПоОплате = 1;
КонецЕсли;	

Если (ТекущийСчет = СчетПоКоду("45")) ИЛИ
	(ТекущийСчет = СчетПоКоду("41.1")) ИЛИ
	(ТекущийСчет = СчетПоКоду("41.2")) ИЛИ
	(ТекущийСчет = СчетПоКоду("41.3")) Тогда
	ЭтоТовар = 1;
КонецЕсли;	

Если(ТекущийСчет = СчетПоКоду("10.1")) ИЛИ
	(ТекущийСчет = СчетПоКоду("10.2")) ИЛИ
	(ТекущийСчет = СчетПоКоду("10.3")) Тогда
	ЭтоМатериал = 1;
КонецЕсли;	

Если (((ТоварыПоОплате = 1) И (ЭтоТовар = 1)) ИЛИ ((МатериалыПоОплате = 1) И (ЭтоМатериал = 1))) Тогда
	РасходыПоОплате = 1;
КонецЕсли;

Если РасходыПоОплате = 1 Тогда
	Если Параметры.ПараметрыАлгоритмов.Получить("ОтражениеВНУДт") = "Принимаются" Тогда
		СтатусОплачено = "НеСписаноПринято";
	Иначе
		СтатусОплачено = "НеСписано";
	КонецЕсли;	
	
	СтатусНеОплачено = "НеСписаноНеОплачено";
Конецесли;

СуммаРасходов 		= СтрокаРасходов.Сумма;
НДСРасходов 		= СтрокаРасходов.НДС;
КоличествоРасходов 	= СтрокаРасходов.Количество;

СуммаНеОплаченная = 0;

ВременнаяТаблицаРасчетов.ВыбратьСтроки();
Пока ВременнаяТаблицаРасчетов.Получитьстроку() = 1 Цикл
	Если (ВременнаяТаблицаРасчетов.ТабличнаяЧасть		&lt;&gt; "ВзаиморасчетыСПоставщиками") ИЛИ 
		((ВременнаяТаблицаРасчетов.РасчетныйДокумент 	&lt;&gt; СтрокаРасходов.РасчетныйДокумент) ИЛИ 
		(ВременнаяТаблицаРасчетов.ОтражениеВНУ 		&lt;&gt; СтрокаРасходов.ОтражениеВУСН)) Тогда
		Продолжить;
	КонецЕсли;
	
	Долг 			= Мин(СуммаРасходов, ВременнаяТаблицаРасчетов.Сумма);
	ДолгНДС 		= Мин(НДСРасходов, ВременнаяТаблицаРасчетов.НДС);
	
	СуммаРасходов 	= СуммаРасходов - Долг;
	НДСРасходов 	= НДСРасходов - ДолгНДС;
	ВременнаяТаблицаРасчетов.Сумма 	= Число(ВременнаяТаблицаРасчетов.Сумма) - Долг;
	ВременнаяТаблицаРасчетов.НДС 	= Число(ВременнаяТаблицаРасчетов.НДС) - ДолгНДС;
	
	СуммаНеОплаченная = СуммаНеОплаченная + Долг;
	
	Если СуммаРасходов = 0 Тогда
		Прервать;
	КонецЕсли;
КонецЦикла;
Коэфф = (СтрокаРасходов.Сумма - СуммаНеОплаченная)/СтрокаРасходов.Сумма;

Если (Коэфф &gt; 0) И (Коэфф &lt; 1) Тогда
	
	//Расходы
	РасходыНоменклатура.НоваяСтрока();
	РасходыНоменклатура.Номенклатура 				= СтрокаРасходов.Номенклатура;
	РасходыНоменклатура.СчетУчета 					= СтрокаРасходов.СчетУчета;
	РасходыНоменклатура.ДокументОприходования 		= СтрокаРасходов.ДокументОприходования;
	РасходыНоменклатура.СтатусыПартийУСН 			= СтрокаРасходов.СтатусыПартийУСН;
	РасходыНоменклатура.Контрагент 					= СтрокаРасходов.Контрагент;
	РасходыНоменклатура.ДоговорКонтрагента 			= СтрокаРасходов.ДоговорКонтрагента;
	РасходыНоменклатура.РасчетныйДокумент 			= СтрокаРасходов.РасчетныйДокумент; 
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
	РасходыНоменклатура.ОтражениеВУСН 				= СтрокаРасходов.ОтражениеВУСН;
	РасходыНоменклатура.Валюта 						= СтрокаРасходов.Валюта;
	РасходыНоменклатура.Количество 					= СтрокаРасходов.Количество;
	РасходыНоменклатура.Сумма 						= СтрокаРасходов.Сумма;
	РасходыНоменклатура.НДС 						= СтрокаРасходов.НДС;
	РасходыНоменклатура.СуммаВал					= СтрокаРасходов.СуммаВал;
	РасходыНоменклатура.НДСВал 						= СтрокаРасходов.НДСВал;

	
	СтрокаРасходов.СтатусыОплатыРасходовУСН			= СтатусОплачено;
	СтрокаРасходов.Количество 						= Коэфф*СтрокаРасходов.Количество;
	СтрокаРасходов.Сумма 							= Коэфф*СтрокаРасходов.Сумма;
	СтрокаРасходов.НДС 								= Коэфф*СтрокаРасходов.НДС;
	
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтатусНеОплачено;
	РасходыНоменклатура.Количество 					= РасходыНоменклатура.Количество - СтрокаРасходов.Количество;
	РасходыНоменклатура.Сумма 						= РасходыНоменклатура.Сумма - СтрокаРасходов.Сумма;
	РасходыНоменклатура.НДС 						= РасходыНоменклатура.НДС - СтрокаРасходов.НДС;
	РасходыНоменклатура.СуммаВал					= РасходыНоменклатура.Сумма - СтрокаРасходов.СуммаВал;
	РасходыНоменклатура.НДСВал 						= РасходыНоменклатура.НДС - СтрокаРасходов.НДСВал;
	
	РасходыНоменклатура.ТекущаяСтрока(СтрокаРасходов.ИндексСтроки);
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
	РасходыНоменклатура.Количество 					= СтрокаРасходов.Количество;
	РасходыНоменклатура.Сумма 						= СтрокаРасходов.Сумма;
	РасходыНоменклатура.НДС 						= СтрокаРасходов.НДС;
	
КонецЕсли;


Если Коэфф = 0 Тогда //Полностью не оплачено
	СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусНеОплачено;
	РасходыНоменклатура.ТекущаяСтрока(СтрокаРасходов.ИндексСтроки);
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
КонецЕсли;

Если Коэфф = 1 Тогда //Полностью оплачено
	СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусОплачено;
	РасходыНоменклатура.ТекущаяСтрока(СтрокаРасходов.ИндексСтроки);
	РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьСтатусОплатыРБП" ИспользуетсяПриЗагрузке="false">
			<Текст>	РасходыНоменклатура		 = Параметры.РасходыНоменклатура;
	СтрокаРасходов 			 = Параметры.СтрокаТаблицыЗначений;
	ВременнаяТаблицаРасчетов = Параметры.ВременнаяТаблицаРасчетов;
	
	СтатусОплачено = "НеСписано";
	СтатусНеОплачено = "НеСписаноНеОплачено";
	
	СуммаРасходов 		= СтрокаРасходов.Сумма;
	НДСРасходов 		= СтрокаРасходов.НДС;
	
	СуммаНеОплаченная = 0;
	ВременнаяТаблицаРасчетов.ВыбратьСтроки();
	Пока ВременнаяТаблицаРасчетов.Получитьстроку() = 1 Цикл
		Если ((ВременнаяТаблицаРасчетов.ТабличнаяЧасть		&lt;&gt; "ВзаиморасчетыСПоставщиками") И 
			 (ВременнаяТаблицаРасчетов.РасчетныйДокумент 	&lt;&gt; СтрокаРасходов.РасчетныйДокумент) И 
			 (ВременнаяТаблицаРасчетов.ОтражениеВНУ 		&lt;&gt; СтрокаРасходов.ОтражениеВУСН)) Тогда
			 Продолжить;
		КонецЕсли;

		Долг 			= Мин(СуммаРасходов, ВременнаяТаблицаРасчетов.Сумма);
		ДолгНДС 		= Мин(НДСРасходов, ВременнаяТаблицаРасчетов.НДС);
		
		СуммаРасходов 	= СуммаРасходов - Долг;
		НДСРасходов 	= НДСРасходов - ДолгНДС;
		ВременнаяТаблицаРасчетов.Сумма 	= ВременнаяТаблицаРасчетов.Сумма - Долг;
		ВременнаяТаблицаРасчетов.НДС 	= ВременнаяТаблицаРасчетов.НДС - ДолгНДС;
		
		СуммаНеОплаченная = СуммаНеОплаченная + Долг;
		
		Если СуммаРасходов = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Коэфф = (СтрокаРасходов.Сумма - СуммаНеОплаченная)/СтрокаРасходов.Сумма;
	
	Если (Коэфф &gt; 0) И (Коэфф &lt; 1) Тогда
		
		//Расходы
		РасходыНоменклатура.НоваяСтрока();
		РасходыНоменклатура.Номенклатура				= СтрокаРасходов.РБП;
		РасходыНоменклатура.Контрагент 					= СтрокаРасходов.Контрагент;
		РасходыНоменклатура.ДоговорКонтрагента 			= СтрокаРасходов.ДоговорКонтрагента;
		РасходыНоменклатура.РасчетныйДокумент 			= СтрокаРасходов.РасчетныйДокумент; 
		РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтрокаРасходов.СтатусыОплатыРасходовУСН;
		РасходыНоменклатура.ОтражениеВУСН 				= СтрокаРасходов.ОтражениеВУСН;
		РасходыНоменклатура.Валюта 						= СтрокаРасходов.Валюта;
		РасходыНоменклатура.Сумма 						= СтрокаРасходов.Сумма;
		РасходыНоменклатура.НДС 						= СтрокаРасходов.НДС;
		РасходыНоменклатура.СуммаВал					= СтрокаРасходов.СуммаВал;
		РасходыНоменклатура.НДСВал 						= СтрокаРасходов.НДСВал;

		
		СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусОплачено;
		СтрокаРасходов.Сумма 						= Коэфф*СтрокаРасходов.Сумма;
		СтрокаРасходов.НДС 							= Коэфф*СтрокаРасходов.НДС;
		СтрокаРасходов.СуммаВал						= Коэфф*СтрокаРасходов.СуммаВал;
		СтрокаРасходов.НДСВал 						= Коэфф*СтрокаРасходов.НДСВал;
		
		РасходыНоменклатура.СтатусыОплатыРасходовУСН 	= СтатусНеОплачено;
		

	КонецЕсли;

	
	Если Коэфф = 0 Тогда //Полностью не оплачено
		СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусНеОплачено;
		

	КонецЕсли;
	
	Если Коэфф = 1 Тогда //Полностью оплачено
		СтрокаРасходов.СтатусыОплатыРасходовУСН		= СтатусОплачено;
	КонецЕсли;</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>