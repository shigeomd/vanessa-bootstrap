
&НаКлиенте
Перем ТекущаяСтрокаРазделовОтчета;

&НаКлиенте
Перем ТекущиеДанныеОтчета;

&НаКлиенте
Перем СтраницаПечатнойФормыМодифицирована;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокПечатаемыхЛистов = Параметры.СписокПечатаемыхЛистов;
	ВидПечати              = Параметры.ВидПечати;
	
	Если СписокПечатаемыхЛистов.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = НСтр("ru='Не выбраны листы для вывода на печать!'");

		Сообщение.Сообщить();

		Отказ = Истина;
		
	КонецЕсли;
		
	Инициализация();
		
КонецПроцедуры

&НаСервере
Процедура Инициализация()
	
	ЗаголовокФормы = Параметры.ЗаголовокФормы;
	
	Для Каждого Элемент Из СписокПечатаемыхЛистов Цикл
		Элемент.Значение[0] = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(
			Элемент.Значение[0]), ЭтаФорма.УникальныйИдентификатор);
	КонецЦикла;
	
	Элемент = СписокПечатаемыхЛистов[0];
	
	ТаблДок = ПолучитьИзВременногоХранилища(Элемент.Значение[0]);
	
	ТабличныйДокумент.Вывести(ТаблДок);
	
	СохрКоличествоКопий   = ХранилищеНастроекДанныхФорм.Загрузить("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиКоличествоКопий");
	СохрРазобратьПоКопиям = ХранилищеНастроекДанныхФорм.Загрузить("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиРазобратьПоКопиям");
	
	КоличествоКопий   = СохрКоличествоКопий;
	РазобратьПоКопиям = СохрРазобратьПоКопиям;
	
	Если РазобратьПоКопиям = Неопределено Тогда
		РазобратьПоКопиям = Истина;
	КонецЕсли;
		
	ДеревоЛистов = РеквизитФормыВЗначение("СписокЛистов");
	
	ДеревоЛистов.Строки.Очистить();
	
	Для Каждого Сч Из СписокПечатаемыхЛистов Цикл
		
		Стр1Уровня = ДеревоЛистов.Строки.Найти(Сч.Значение[1], "Идентификатор");
		
		Если Стр1Уровня = Неопределено Тогда
			
			Стр1Уровня = ДеревоЛистов.Строки.Добавить();
			Стр1Уровня.Пометка       = 1;
			Стр1Уровня.Наименование  = Сч.Значение[2];
			Стр1Уровня.Идентификатор = Сч.Значение[1];
			
		КонецЕсли;
		
		НовСтр = Стр1Уровня.Строки.Добавить();
		НовСтр.Пометка                   = 1;
		НовСтр.Наименование              = Сч.Представление;
		НовСтр.Идентификатор             = Сч.Значение[1];
		НовСтр.АдресВоВременномХранилище = Сч.Значение[0];
		
		ТекТабДок = ПолучитьИзВременногоХранилища(НовСтр.АдресВоВременномХранилище);
		КоличествоСтраниц = 0;
		НомПоследнейСтрокиСРазделителем = ТекТабДок.ВысотаТаблицы;
		Для НомСтроки = 1 По ТекТабДок.ВысотаТаблицы Цикл
			Если ТекТабДок.Область(НомСтроки, , НомСтроки, ).КонецСтраницы Тогда
				КоличествоСтраниц = КоличествоСтраниц + 1;
				НомПоследнейСтрокиСРазделителем = НомСтроки;
			КонецЕсли;
		КонецЦикла;
		Если НомПоследнейСтрокиСРазделителем < ТекТабДок.ВысотаТаблицы Тогда
			КоличествоСтраниц = КоличествоСтраниц + 1;
		КонецЕсли;
		
		НовСтр.КоличествоСтраниц = ?(КоличествоСтраниц > 0, КоличествоСтраниц, 1);
		
		Стр1Уровня.КоличествоСтраниц = Стр1Уровня.КоличествоСтраниц + НовСтр.КоличествоСтраниц;
		
	КонецЦикла;
		
	ЗначениеВРеквизитФормы(ДеревоЛистов, "СписокЛистов");
	
	Элементы.СписокЛистов.ТекущаяСтрока
		= СписокЛистов.ПолучитьЭлементы()[0].ПолучитьЭлементы()[0].ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьСразу() Экспорт
	
	ПакетТаблДок = Новый ПакетОтображаемыхДокументов;
		
	Для Каждого Эл Из СписокПечатаемыхЛистов Цикл
		
		ПакетТаблДок.Состав.Добавить(Эл.Значение[0]);
		
	КонецЦикла;
	
	ПакетТаблДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	Заголовок = ЗаголовокФормы + " - предварительный просмотр";
	
	#Если ВебКлиент Тогда
		Элементы.Сохранить.Видимость = Ложь;
	#КонецЕсли
	 		
	ОтработатьИзмененияПараметровПечати();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТекстПодсказки()
	
	КоличествоТаблДок = КоличествоВыбранныхТабличныхДокументов();
	КоличествоЛистовВсего = 0;
	Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
		КоличествоЛистовВсего = КоличествоЛистовВсего + Стр1.КоличествоСтраниц;
	КонецЦикла;
	КоличествоЛистовТребуется = КоличествоТаблДок * КоличествоКопий;

	ТекстЛистовВсего = СтрЗаменить(ЧислоПрописью(КоличествоЛистовВсего, "НП=Истина, НД=Ложь", "листа, листов, листов, м, , , , ,0"),
	                               ЧислоПрописью(КоличествоЛистовВсего, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
	                               "");

	ТекстЛистовТребуется = СтрЗаменить(ЧислоПрописью(КоличествоЛистовТребуется, "НП=Истина, НД=Ложь", "лист, листа, листов, м, , , , ,0"),
	                                   ЧислоПрописью(КоличествоЛистовТребуется, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
	                                   "");

	ТекстСтатистики = "Выбрано " + КоличествоТаблДок + " из " + КоличествоЛистовВсего + " " + ТекстЛистовВсего +". "
	                + "Для печати требуется " + КоличествоЛистовТребуется + " " + ТекстЛистовТребуется +" бумаги.";
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоВыбранныхТабличныхДокументов()
	
	Кол = 0;
	Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
		Для Каждого Стр2 Из Стр1.ПолучитьЭлементы() Цикл
			Кол = Кол + ?(Стр2.Пометка, Стр2.КоличествоСтраниц, 0);
		КонецЦикла;
	КонецЦикла;
	Возврат Кол;
	
КонецФункции

&НаКлиенте
Процедура ОтработатьИзмененияПараметровПечати()
	
	Если КоличествоКопий = 0 ИЛИ КоличествоКопий = Неопределено Тогда
		КоличествоКопий = 1;
	КонецЕсли;
	Если КоличествоКопий <> 1 Тогда
		Элементы.РазобратьПоКопиям.Доступность = Истина;
	Иначе
		Элементы.РазобратьПоКопиям.Доступность = Ложь;
	КонецЕсли;
	СформироватьТекстПодсказки();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока = ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СохранениеМодификацийВПечатнойФорме();
	
	ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	ТекущиеДанныеОтчета = Элемент.ТекущиеДанные;
	
	Если НЕ Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		ВывестиВыбранныйЛистВТабличныйДокумент(Элемент.ТекущиеДанные.АдресВоВременномХранилище);
	Иначе
		ВывестиВыбранныйЛистВТабличныйДокумент(СписокПечатаемыхЛистов[0].Значение[0]);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура КоличествоКопийПриИзменении(Элемент)
	
	ОтработатьИзмененияПараметровПечати();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИлиСнятьФлажки(Пометка)
	
	Для Каждого Эл Из СписокЛистов.ПолучитьЭлементы() Цикл
		Эл.Пометка = Пометка;
		Для Каждого Стр Из Эл.ПолучитьЭлементы() Цикл
			Стр.Пометка = Пометка;
		КонецЦикла;
	КонецЦикла;
	СформироватьТекстПодсказки();	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьИлиСнятьФлажки(1);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьИлиСнятьФлажки(0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если НЕ КоличествоКопий = СохрКоличествоКопий
	 ИЛИ НЕ	РазобратьПоКопиям = СохрРазобратьПоКопиям Тогда
	 
		СохранитьЗначениеНаСервере();
	 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначениеНаСервере()
		
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиКоличествоКопий",     КоличествоКопий);
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ПечатьРегламентированныхОтчетов", "ПредпросмотрРегламентированнойОтчетностиРазобратьПоКопиям",   РазобратьПоКопиям);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Для Каждого Стр Из СписокЛистов.ПолучитьЭлементы() Цикл
		Элементы.СписокЛистов.Развернуть(Стр.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	Для Каждого Стр Из СписокЛистов.ПолучитьЭлементы() Цикл
		Элементы.СписокЛистов.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
		Элементы.СписокЛистов.Свернуть(Стр.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПометкаПриИзменении(Элемент)
	
	Если Элементы.СписокЛистов.ТекущиеДанные.Пометка = 2 Тогда
		Элементы.СписокЛистов.ТекущиеДанные.Пометка = 0;
	КонецЕсли;
	
	Если Элементы.СписокЛистов.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		
		Для Каждого Стр Из Элементы.СписокЛистов.ТекущиеДанные.ПолучитьЭлементы() Цикл
			Стр.Пометка = Элементы.СписокЛистов.ТекущиеДанные.Пометка;
		КонецЦикла;
		
	Иначе
		
		ПометкиОдинаковы = Истина;
		Для Каждого Стр Из Элементы.СписокЛистов.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы() Цикл
			Если Стр.Пометка <> Элементы.СписокЛистов.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы()[0].Пометка Тогда
				ПометкиОдинаковы = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Элементы.СписокЛистов.ТекущиеДанные.ПолучитьРодителя().Пометка = ?(ПометкиОдинаковы, Элементы.СписокЛистов.ТекущиеДанные.Пометка, 2);
		
	КонецЕсли;
	
	СформироватьТекстПодсказки();
	
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьРодительскийОтчет(Команда)
	
	Попытка
		ВладелецФормы.Активизировать();
	Исключение
		ПоказатьПредупреждение(,НСтр("ru='Не удалось активизировать родительский отчет! Вероятно, форма отчета закрыта.'"));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Печатать(Команда)
	
	СохранениеМодификацийВПечатнойФорме();
	
	ПакетТаблДок = Новый ПакетОтображаемыхДокументов;
	
	Если РазобратьПоКопиям Тогда
		
		Для Сч = 1 По КоличествоКопий Цикл
			
			Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
				
				Для Каждого Эл из Стр1.ПолучитьЭлементы() Цикл
					
					Если НЕ Эл.Пометка Тогда
						Продолжить;
					КонецЕсли;
					
					ПакетТаблДок.Состав.Добавить(Эл.АдресВоВременномХранилище);

				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
			
			Для Каждого Эл из Стр1.ПолучитьЭлементы() Цикл
				
				Если НЕ Эл.Пометка Тогда
					Продолжить;
				КонецЕсли;
				
				Для Сч = 1 По КоличествоКопий Цикл
					
					ПакетТаблДок.Состав.Добавить(Эл.АдресВоВременномХранилище);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПакетТаблДок.Состав.Количество() > 0 Тогда
		
		ПакетТаблДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФорматеMicrosoftExcel(Команда)
	
	ВыгрузитьНаДиск(ТипФайлаТабличногоДокумента.XLS);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВВидеТабличныхДокументов(Команда)
	
	ВыгрузитьНаДиск(ТипФайлаТабличногоДокумента.MXL);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьНаДиск(ВФормате)
	
	СохранениеМодификацийВПечатнойФорме();
	
	СоответствиеФорматаРасширению = Новый Соответствие;
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.MXL, "mxl");
	СоответствиеФорматаРасширению.Вставить(ТипФайлаТабличногоДокумента.XLS, "xls");
	
	Если КоличествоВыбранныхТабличныхДокументов() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru='Выберите листы в дереве печатаемых листов!'"));
		Возврат;
	КонецЕсли;
	
	ПутьДляВыгрузки = РегламентированнаяОтчетностьКлиент.ПолучитьПутьВыгрузки();
	Если ПутьДляВыгрузки = Неопределено ИЛИ ПустаяСтрока(ПутьДляВыгрузки) ИЛИ ПутьДляВыгрузки = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ПризнакОшибки = Ложь;
	Для Каждого Стр1 Из СписокЛистов.ПолучитьЭлементы() Цикл
		Для Каждого Эл Из Стр1.ПолучитьЭлементы() Цикл
			Если Эл.Пометка Тогда
				
				ИмяФайла = ПутьДляВыгрузки + СформироватьИмяФайла(Стр1.Наименование + ". " + Эл.Наименование + "." + СоответствиеФорматаРасширению[ВФормате]);
				Попытка
					Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохранение %1'"), ИмяФайла), , , БиблиотекаКартинок.Записать);
					
					ТаблДок = ПолучитьИзВременногоХранилища(Эл.АдресВоВременномХранилище);
					ТаблДок.Область().ЦветФона = Новый Цвет();
					ТаблДок.Записать(ИмяФайла, ВФормате);
					
				Исключение
					ПризнакОшибки = Истина;
				Конецпопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Состояние();
				
	Если ПризнакОшибки Тогда
		ПоказатьПредупреждение(,СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Один или несколько файлов не удалось записать в указанный каталог!%1Возможно, недостаточно места на диске или диск защищен от записи.'"), Символы.ПС), , НСтр("ru='Ошибка записи на диск'"));
	Иначе
		ПоказатьПредупреждение(,НСтр("ru='Файлы успешно записаны в указанный каталог.'"));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Функция СформироватьИмяФайла(ИсходноеИмяФайла)
	
	ИмяФайла = СтрЗаменить(ИсходноеИмяФайла, "/", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "\", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, ":", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "*", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "?", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, """","_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "<", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, ">", "_");
	
	ИмяФайла = СтрЗаменить(ИмяФайла, Символы.ПС, " ");
	
	Возврат СтрЗаменить(ИмяФайла, "|", "_");
	
КонецФункции

&НаКлиенте
Процедура СписокЛистовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиВыбранныйЛистВТабличныйДокумент(АдресВоВременномХранилище)
	
	ТаблДок = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
		
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ТаблДок);
	
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ТаблДок);
	
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать   = Истина;
	ТабличныйДокумент.Область().ЦветФона = Новый Цвет();
	ТабличныйДокумент.Область().Защита   = Ложь;
	ТабличныйДокумент.ЧерноБелыйПросмотр = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	СтраницаПечатнойФормыМодифицирована = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранениеМодификацийВПечатнойФорме()
	
	СтраницаПечатнойФормыМодифицирована = ?(СтраницаПечатнойФормыМодифицирована <> Неопределено, СтраницаПечатнойФормыМодифицирована, Ложь);
	
	Если СтраницаПечатнойФормыМодифицирована Тогда
		ПоместитьВоВременноеХранилище(ТабличныйДокумент, ТекущиеДанныеОтчета.АдресВоВременномХранилище);
		СтраницаПечатнойФормыМодифицирована = Ложь;
	КонецЕсли;
	
КонецПроцедуры
