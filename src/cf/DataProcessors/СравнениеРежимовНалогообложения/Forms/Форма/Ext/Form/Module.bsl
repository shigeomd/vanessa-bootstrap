
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//По умолчанию - расчет осуществляется для юрлица
	ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	//Установка цветов "светофора" из стилей
	КрасныйЦвет		= ЦветаСтиля.СравнениеРежимовНалогообложенияВысокаяНагрузкаЦвет;
	ЖелтыйЦвет		= ЦветаСтиля.СравнениеРежимовНалогообложенияСредняяНагрузкаЦвет;
	ЗеленыйЦвет		= ЦветаСтиля.СравнениеРежимовНалогообложенияНизкаяНагрузкаЦвет;
	
	ВывестиРезультатПриСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		НастроитьШиринуТабличногоДокументаДляБраузера();
		ЗафиксироватьТабличныйДокумент();
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоходыПриИзменении(Элемент)
	
	СтруктураРезультата = Расчет();
	#Если ВебКлиент Тогда
		ВывестиРезультатНаСервере(СтруктураРезультата);
		ЗафиксироватьТабличныйДокумент();
	#Иначе
		ВывестиРезультатНаКлиенте(СтруктураРезультата);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура РасходыПриИзменении(Элемент)
	
	СтруктураРезультата = Расчет();
	#Если ВебКлиент Тогда
		ВывестиРезультатНаСервере(СтруктураРезультата);
		ЗафиксироватьТабличныйДокумент();
	#Иначе
		ВывестиРезультатНаКлиенте(СтруктураРезультата);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ФондОплатыТрудаПриИзменении(Элемент)
	
	СтруктураРезультата = Расчет();
	#Если ВебКлиент Тогда
		ВывестиРезультатНаСервере(СтруктураРезультата);
		ЗафиксироватьТабличныйДокумент();
	#Иначе
		ВывестиРезультатНаКлиенте(СтруктураРезультата);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическоеЛицоИППриИзменении(Элемент)
	
	СтруктураРезультата = Расчет();
	#Если ВебКлиент Тогда
		ВывестиРезультатНаСервере(СтруктураРезультата);
		ЗафиксироватьТабличныйДокумент();
	#Иначе
		ВывестиРезультатНаКлиенте(СтруктураРезультата);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРезультат

&НаКлиенте
Процедура РезультатВыбор(Элемент, Область, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ Область.Гиперссылка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокОкнаТабличногоДокумента = "Расчет налоговой нагрузки";
	
	Если Область.ПараметрРасшифровки		= "ОСНО" Тогда
		Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
			ИмяМакета = "ПодробнееОСНО";
		Иначе
			ИмяМакета = "ПодробнееОСНОИП";
		КонецЕсли;
		ТабДок = ПолучитьТабличныйДокументПодробнее(РезультатПоследнегоРасчета, ИмяМакета);
	ИначеЕсли Область.ПараметрРасшифровки	= "УСН6" Тогда
		Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
			ИмяМакета = "ПодробнееУСН6";
		Иначе
			Если ФондОплатыТруда = 0 Тогда
				ИмяМакета = "ПодробнееУСН6ИПБезРаботников";
			Иначе
				ИмяМакета = "ПодробнееУСН6ИП";
			КонецЕсли;
		КонецЕсли;
		ТабДок = ПолучитьТабличныйДокументПодробнее(РезультатПоследнегоРасчета, ИмяМакета);
	ИначеЕсли Область.ПараметрРасшифровки	= "УСН15" Тогда
		Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
			ИмяМакета = "ПодробнееУСН15";
		Иначе
			ИмяМакета = "ПодробнееУСН15ИП";
		КонецЕсли;
		ТабДок = ПолучитьТабличныйДокументПодробнее(РезультатПоследнегоРасчета, ИмяМакета);
	КонецЕсли;
	
	ТабДок.Показать(ЗаголовокОкнаТабличногоДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДаннымиИзБазы(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьДаннымиИзБазыЗавершение", ЭтотОбъект);
	
	Если ИспользуетсяНесколькоОрганизаций() Тогда
		ОткрытьФорму("Обработка.СравнениеРежимовНалогообложения.Форма.ФормаВыбораДанныхЗаполнения",, ЭтотОбъект,,,, ОписаниеОповещения);
	Иначе
		РезультатСтруктура = ПолучитьОрганизациюИТекущийРежимНаСервере();
		Если РезультатСтруктура <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, РезультатСтруктура);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиИзБазыЗавершение(РезультатСтруктура, ДополнительныеПараметры) Экспорт
	
	Если РезультатСтруктура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Организация					= РезультатСтруктура.Организация;
	РежимВыбраннойОрганизации	= РезультатСтруктура.ТекущийРежим;
	ЗаполнитьДаннымиБазыНаСервере(Организация, РежимВыбраннойОрганизации);
	
	СтруктураРезультата = Расчет();
	ВывестиРезультатНаКлиенте(СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция Расчет()
	
	// I. Ставки
	СтавкаНДС = 0.18;
	СтавкаНалогаНаПрибыль = 0.2;
	СтавкаНДФЛ = 0.13;
	СтавкаУСН6 = 0.06;
	СтавкаУСН15 = 0.15;
	СтавкаМинимальногоНалогаУСН15 = 0.01;
	СтавкаВзносовВПФРсФОТ = 0.22;
	СтавкаВзносовВФССсФОТ = 0.029;
	СтавкаВзносовВФОМСсФОТ = 0.051;
	СтавкаВзносовОССНСсФОТ = 0.002;
	
	СуммаМаксимальныхВзносовИПвПФР = 148886.40;
	
	// II. Расчет налогов и взносов (с итоговыми показателями)
	
	//Страховые взносы с фонда оплаты труда
	СтраховыеВзносыВПФРсФОТ		= ФондОплатыТруда*СтавкаВзносовВПФРсФОТ;
	СтраховыеВзносыВФССсФОТ		= ФондОплатыТруда*СтавкаВзносовВФССсФОТ;
	СтраховыеВзносыВФОМСсФОТ	= ФондОплатыТруда*СтавкаВзносовВФОМСсФОТ;
	СтраховыеВзносыОССНСсФОТ	= ФондОплатыТруда*СтавкаВзносовОССНСсФОТ;
	
	//Страховые взносы ИП за себя (обязательные)
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		СтраховыеВзносыВПФРдляИП = 18610.80;
		СтраховыеВзносыВФОМСдляИП = 3650.58;
	КонецЕсли;
	
	//Общие суммы страховых взносов
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		СтраховыеВзносыВПФРВсего	= СтраховыеВзносыВПФРсФОТ;
		СтраховыеВзносыВФССВсего	= СтраховыеВзносыВФССсФОТ;
		СтраховыеВзносыВФОМСВсего	= СтраховыеВзносыВФОМСсФОТ;
		СтраховыеВзносыОССНСВсего	= СтраховыеВзносыОССНСсФОТ;
	Иначе
		Если Доходы < 300000 Тогда
			СтраховыеВзносыВПФРВсего= СтраховыеВзносыВПФРсФОТ + СтраховыеВзносыВПФРдляИП;
			ДополнительныеВзносыВПФРдляИП = 0;
		Иначе
			// Учтем дополнительные взносы ИП в ПФР
			ДополнительныеВзносыВПФРдляИП = (Доходы - 300000)*0.01;
			Если СтраховыеВзносыВПФРдляИП + ДополнительныеВзносыВПФРдляИП > СуммаМаксимальныхВзносовИПвПФР Тогда
				ДополнительныеВзносыВПФРдляИП = СуммаМаксимальныхВзносовИПвПФР - СтраховыеВзносыВПФРдляИП;
			КонецЕсли;
			СтраховыеВзносыВПФРВсего= СтраховыеВзносыВПФРсФОТ + СтраховыеВзносыВПФРдляИП + ДополнительныеВзносыВПФРдляИП;
		КонецЕсли;
		СтраховыеВзносыВФССВсего	= СтраховыеВзносыВФССсФОТ;
		СтраховыеВзносыВФОМСВсего	= СтраховыеВзносыВФОМСсФОТ + СтраховыеВзносыВФОМСдляИП;
		СтраховыеВзносыОССНСВсего	= СтраховыеВзносыОССНСсФОТ;
	КонецЕсли;
	СтраховыеВзносыВсего			= СтраховыеВзносыВПФРВсего + СтраховыеВзносыВФССВсего + СтраховыеВзносыВФОМСВсего + СтраховыеВзносыОССНСВсего;
	
	//НДС
	НДСИсходящий = Доходы*(СтавкаНДС/(1+СтавкаНДС));
	Если Расходы > ФондОплатыТруда Тогда
		НДСВходящий = (Расходы - ФондОплатыТруда) * (СтавкаНДС/(1+СтавкаНДС));
	Иначе
		НДСВходящий = 0;
	КонецЕсли;
	НДС = НДСИсходящий - НДСВходящий;
	
	//Налог на прибыль или НДФЛ ИП
	НалогооблагаемыйДоход	= Доходы - НДСИсходящий;
	НалогооблагаемыйРасход	= Расходы - НДСВходящий + СтраховыеВзносыВсего;
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		НалогНаПрибыль = (НалогооблагаемыйДоход - НалогооблагаемыйРасход)*СтавкаНалогаНаПрибыль;
	Иначе
		НалогНаПрибыль = (НалогооблагаемыйДоход - НалогооблагаемыйРасход)*СтавкаНДФЛ;
	КонецЕсли;
	Если НалогНаПрибыль < 0 Тогда
		НалогНаПрибыль = 0;
	КонецЕсли;
	
	//Единый налог УСН 6
	НачисленныйЕдиныйНалогУСН6 = Доходы*СтавкаУСН6;
	Если СтраховыеВзносыВсего < НачисленныйЕдиныйНалогУСН6*0.5 Тогда
		ЕдиныйНалогУСН6 = НачисленныйЕдиныйНалогУСН6 - СтраховыеВзносыВсего;
	Иначе
		Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") И ФондОплатыТруда = 0 Тогда
			ЕдиныйНалогУСН6 = НачисленныйЕдиныйНалогУСН6 - СтраховыеВзносыВсего;
			Если ЕдиныйНалогУСН6 < 0 Тогда
				ЕдиныйНалогУСН6 = 0;
			КонецЕсли;
		Иначе
			ЕдиныйНалогУСН6 = НачисленныйЕдиныйНалогУСН6*0.5;
		КонецЕсли;
	КонецЕсли;
	ВычетСтраховыхВзносовУСН6 = НачисленныйЕдиныйНалогУСН6 - ЕдиныйНалогУСН6;
	
	//Единый налог УСН 15
	МинимальныйНалогУСН15 = Доходы*СтавкаМинимальногоНалогаУСН15;
	Если (Доходы - Расходы)*СтавкаУСН15 < МинимальныйНалогУСН15 Тогда
		ЕдиныйНалогУСН15 = МинимальныйНалогУСН15;
	Иначе
		ЕдиныйНалогУСН15 = (Доходы - Расходы)*СтавкаУСН15;
	КонецЕсли;
	Если Расходы > Доходы Тогда
		РасходыУСН = Доходы;
	Иначе
		РасходыУСН = Расходы;
	КонецЕсли;
	
	// III. Итоговые показатели ("Итого к уплате", "Налоговая нагрузка")
	
	//Итоговые показатели для ОСНО
	ИтогоКУплатеОСНО		= СтраховыеВзносыВсего + НДС + НалогНаПрибыль;
	НалоговаяНагрузкаОСНО	= ?(Доходы, (ИтогоКУплатеОСНО/Доходы)*100, 0);
	Если НалоговаяНагрузкаОСНО < 0 Тогда
		НалоговаяНагрузкаОСНО = 0;
	КонецЕсли;
	НалоговаяНагрузкаОСНО	= Формат(НалоговаяНагрузкаОСНО, "ЧЦ=15; ЧДЦ=2; ЧН=")+"%";
	
	//Итоговые показатели для УСН 6
	ИтогоКУплатеУСН6		= СтраховыеВзносыВсего + ЕдиныйНалогУСН6;
	НалоговаяНагрузкаУСН6	= ?(Доходы, (ИтогоКУплатеУСН6/Доходы)*100, 0);
	Если НалоговаяНагрузкаУСН6 < 0 Тогда
		НалоговаяНагрузкаУСН6 = 0;
	КонецЕсли;
	НалоговаяНагрузкаУСН6	= Формат(НалоговаяНагрузкаУСН6, "ЧЦ=15; ЧДЦ=2; ЧН=")+"%";
	
	//Итоговые показатели для УСН 15
	ИтогоКУплатеУСН15		= СтраховыеВзносыВсего + ЕдиныйНалогУСН15;
	НалоговаяНагрузкаУСН15	= ?(Доходы, (ИтогоКУплатеУСН15/Доходы)*100, 0);
	Если НалоговаяНагрузкаУСН15 < 0 Тогда
		НалоговаяНагрузкаУСН15 = 0;
	КонецЕсли;
	НалоговаяНагрузкаУСН15	= Формат(НалоговаяНагрузкаУСН15, "ЧЦ=15; ЧДЦ=2; ЧН=")+"%";
	
	// IV. Формирование и возврат результата расчета в виде структуры
	
	СтруктураРезультатаРасчета = Новый Структура;
	СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыВПФРсФОТ",		СтраховыеВзносыВПФРсФОТ);
	СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыВФССВсего",		СтраховыеВзносыВФССВсего);
	СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыВФОМСсФОТ",		СтраховыеВзносыВФОМСсФОТ);
	СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыОССНСВсего",	СтраховыеВзносыОССНСВсего);
	СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыВсего",			СтраховыеВзносыВсего);
	СтруктураРезультатаРасчета.Вставить("НДСВходящий",					НДСВходящий);
	СтруктураРезультатаРасчета.Вставить("НДСИсходящий",					НДСИсходящий);
	СтруктураРезультатаРасчета.Вставить("НДС",							НДС);
	СтруктураРезультатаРасчета.Вставить("НалогооблагаемыйДоход",		НалогооблагаемыйДоход);
	СтруктураРезультатаРасчета.Вставить("НалогооблагаемыйРасход",		НалогооблагаемыйРасход);
	СтруктураРезультатаРасчета.Вставить("НалогНаПрибыль",				НалогНаПрибыль);
	СтруктураРезультатаРасчета.Вставить("НачисленныйЕдиныйНалогУСН6",	НачисленныйЕдиныйНалогУСН6);
	СтруктураРезультатаРасчета.Вставить("ВычетСтраховыхВзносовУСН6",	ВычетСтраховыхВзносовУСН6);
	СтруктураРезультатаРасчета.Вставить("ЕдиныйНалогУСН6",				ЕдиныйНалогУСН6);
	СтруктураРезультатаРасчета.Вставить("ДоходыУСН",					Доходы);
	СтруктураРезультатаРасчета.Вставить("РасходыУСН",					РасходыУСН);
	СтруктураРезультатаРасчета.Вставить("МинимальныйНалогУСН15",		МинимальныйНалогУСН15);
	СтруктураРезультатаРасчета.Вставить("ЕдиныйНалогУСН15",				ЕдиныйНалогУСН15);
	СтруктураРезультатаРасчета.Вставить("ИтогоКУплатеОСНО",				ИтогоКУплатеОСНО);
	СтруктураРезультатаРасчета.Вставить("НалоговаяНагрузкаОСНО",		НалоговаяНагрузкаОСНО);
	СтруктураРезультатаРасчета.Вставить("ИтогоКУплатеУСН6",				ИтогоКУплатеУСН6);
	СтруктураРезультатаРасчета.Вставить("НалоговаяНагрузкаУСН6",		НалоговаяНагрузкаУСН6);
	СтруктураРезультатаРасчета.Вставить("ИтогоКУплатеУСН15",			ИтогоКУплатеУСН15);
	СтруктураРезультатаРасчета.Вставить("НалоговаяНагрузкаУСН15",		НалоговаяНагрузкаУСН15);
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыВПФРдляИП",		СтраховыеВзносыВПФРдляИП);
		СтруктураРезультатаРасчета.Вставить("СтраховыеВзносыВФОМСдляИП",	СтраховыеВзносыВФОМСдляИП);
		СтруктураРезультатаРасчета.Вставить("ДополнительныеВзносыВПФРдляИП",ДополнительныеВзносыВПФРдляИП);
	КонецЕсли;
	
	РезультатПоследнегоРасчета = СтруктураРезультатаРасчета;
	
	Возврат СтруктураРезультатаРасчета;
	
КонецФункции

&НаКлиенте
Процедура ВывестиРезультатНаКлиенте(РезультатРасчета)
	
	ПорогПрименимостиУСН = 68820000;
	
	//НДФЛ или Налог на прибыль - здесь меняется только заголовок, 
	//сам параметр уже рассчитан как надо, называется НалогНаПрибыль
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Результат.Область("ЗаголовокНПилиНДФЛ").Значение = НСтр("ru = '3. Налог на прибыль'");
	Иначе
		Результат.Область("ЗаголовокНПилиНДФЛ").Значение = НСтр("ru = '3. НДФЛ'");
	КонецЕсли;
	
	Результат.Область("НДС").Значение						= РезультатРасчета.НДС;
	Результат.Область("НалогНаПрибыль").Значение			= РезультатРасчета.НалогНаПрибыль;
	Результат.Область("ЕдиныйНалогУСН6").Значение			= РезультатРасчета.ЕдиныйНалогУСН6;
	Результат.Область("ЕдиныйНалогУСН15").Значение			= РезультатРасчета.ЕдиныйНалогУСН15;
	Результат.Область("СтраховыеВзносыВсегоОСНО").Значение	= РезультатРасчета.СтраховыеВзносыВсего;
	Результат.Область("СтраховыеВзносыВсегоУСН6").Значение	= РезультатРасчета.СтраховыеВзносыВсего;
	Результат.Область("СтраховыеВзносыВсегоУСН15").Значение	= РезультатРасчета.СтраховыеВзносыВсего;
	Результат.Область("ИтогоКУплатеОСНО").Значение			= РезультатРасчета.ИтогоКУплатеОСНО;
	Результат.Область("НалоговаяНагрузкаОСНО").Значение		= РезультатРасчета.НалоговаяНагрузкаОСНО;
	Результат.Область("ИтогоКУплатеУСН6").Значение			= РезультатРасчета.ИтогоКУплатеУСН6;
	Результат.Область("НалоговаяНагрузкаУСН6").Значение		= РезультатРасчета.НалоговаяНагрузкаУСН6;
	Результат.Область("ИтогоКУплатеУСН15").Значение			= РезультатРасчета.ИтогоКУплатеУСН15;
	Результат.Область("НалоговаяНагрузкаУСН15").Значение	= РезультатРасчета.НалоговаяНагрузкаУСН15;
	
	//Анализ оптимального выбора режима по общей сумме налогов (светофор)
	
	Если РезультатРасчета.ИтогоКУплатеУСН15 <= РезультатРасчета.ИтогоКУплатеУСН6 И РезультатРасчета.ИтогоКУплатеУСН15 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
		Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЗеленыйЦвет;
	
		Если РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЖелтыйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = КрасныйЦвет;
		Иначе
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = КрасныйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = ЖелтыйЦвет;
		КонецЕсли;

	ИначеЕсли РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеУСН15 И РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
		Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЗеленыйЦвет;
	
		Если РезультатРасчета.ИтогоКУплатеУСН15 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЖелтыйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = КрасныйЦвет;
		Иначе
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = КрасныйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = ЖелтыйЦвет;
		КонецЕсли;
	
	Иначе
		Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = ЗеленыйЦвет;
	
		Если РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеУСН15 Тогда
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЖелтыйЦвет;
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = КрасныйЦвет;
		Иначе
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = КрасныйЦвет;
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЖелтыйЦвет;
		КонецЕсли;
	
	КонецЕсли;
	
	Если Доходы <= ПорогПрименимостиУСН Тогда
		Элементы.ГруппаПредупреждениеПрименимостьУСН.ТекущаяСтраница = Элементы.ГруппаУСНПрименима;
	Иначе
		Элементы.ГруппаПредупреждениеПрименимостьУСН.ТекущаяСтраница = Элементы.ГруппаУСННеПрименима;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРезультатНаСервере(РезультатРасчета)
	
	Результат.Очистить();
	Макет = Обработки.СравнениеРежимовНалогообложения.ПолучитьМакет("РезультатСводнаяТаблица");
	
	//Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	Результат.Вывести(Область);
	
	//Таблица
	Область = Макет.ПолучитьОбласть("Таблица");
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Область.Параметры.ЗаголовокНПилиНДФЛ = НСтр("ru = '3. Налог на прибыль'");
	Иначе
		Область.Параметры.ЗаголовокНПилиНДФЛ = НСтр("ru = '3. НДФЛ'");
	КонецЕсли;
	Результат.Вывести(Область);
	
	ПорогПрименимостиУСН = 68820000;
	
	Результат.Область("НДС").Значение						= РезультатРасчета.НДС;
	Результат.Область("НалогНаПрибыль").Значение			= РезультатРасчета.НалогНаПрибыль;
	Результат.Область("ЕдиныйНалогУСН6").Значение			= РезультатРасчета.ЕдиныйНалогУСН6;
	Результат.Область("ЕдиныйНалогУСН15").Значение			= РезультатРасчета.ЕдиныйНалогУСН15;
	Результат.Область("СтраховыеВзносыВсегоОСНО").Значение	= РезультатРасчета.СтраховыеВзносыВсего;
	Результат.Область("СтраховыеВзносыВсегоУСН6").Значение	= РезультатРасчета.СтраховыеВзносыВсего;
	Результат.Область("СтраховыеВзносыВсегоУСН15").Значение	= РезультатРасчета.СтраховыеВзносыВсего;
	Результат.Область("ИтогоКУплатеОСНО").Значение			= РезультатРасчета.ИтогоКУплатеОСНО;
	Результат.Область("НалоговаяНагрузкаОСНО").Значение		= РезультатРасчета.НалоговаяНагрузкаОСНО;
	Результат.Область("ИтогоКУплатеУСН6").Значение			= РезультатРасчета.ИтогоКУплатеУСН6;
	Результат.Область("НалоговаяНагрузкаУСН6").Значение		= РезультатРасчета.НалоговаяНагрузкаУСН6;
	Результат.Область("ИтогоКУплатеУСН15").Значение			= РезультатРасчета.ИтогоКУплатеУСН15;
	Результат.Область("НалоговаяНагрузкаУСН15").Значение	= РезультатРасчета.НалоговаяНагрузкаУСН15;
	
	//Анализ оптимального выбора режима по общей сумме налогов (светофор)
	
	Если РезультатРасчета.ИтогоКУплатеУСН15 <= РезультатРасчета.ИтогоКУплатеУСН6 И РезультатРасчета.ИтогоКУплатеУСН15 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
		Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЗеленыйЦвет;
	
		Если РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЖелтыйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = КрасныйЦвет;
		Иначе
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = КрасныйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = ЖелтыйЦвет;
		КонецЕсли;

	ИначеЕсли РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеУСН15 И РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
		Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЗеленыйЦвет;
	
		Если РезультатРасчета.ИтогоКУплатеУСН15 <= РезультатРасчета.ИтогоКУплатеОСНО Тогда
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЖелтыйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = КрасныйЦвет;
		Иначе
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = КрасныйЦвет;
			Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = ЖелтыйЦвет;
		КонецЕсли;
	
	Иначе
		Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = ЗеленыйЦвет;
	
		Если РезультатРасчета.ИтогоКУплатеУСН6 <= РезультатРасчета.ИтогоКУплатеУСН15 Тогда
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЖелтыйЦвет;
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = КрасныйЦвет;
		Иначе
			Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = КрасныйЦвет;
			Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЖелтыйЦвет;
		КонецЕсли;
	
	КонецЕсли;
	
	Если Доходы <= ПорогПрименимостиУСН Тогда
		Элементы.ГруппаПредупреждениеПрименимостьУСН.ТекущаяСтраница = Элементы.ГруппаУСНПрименима;
	Иначе
		Элементы.ГруппаПредупреждениеПрименимостьУСН.ТекущаяСтраница = Элементы.ГруппаУСННеПрименима;
	КонецЕсли;
	
	УстановитьПараметрРасшифровки();
	
	НастроитьШиринуТабличногоДокументаДляБраузера();
	
Конецпроцедуры

&НаСервере
Процедура ВывестиРезультатПриСозданииНаСервере()
	
	Результат.Очистить();
	Макет = Обработки.СравнениеРежимовНалогообложения.ПолучитьМакет("РезультатСводнаяТаблица");
	
	//Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	Результат.Вывести(Область);
	
	//Таблица
	Область = Макет.ПолучитьОбласть("Таблица");
	Если ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Область.Параметры.ЗаголовокНПилиНДФЛ = НСтр("ru = '3. Налог на прибыль'");
	Иначе
		Область.Параметры.ЗаголовокНПилиНДФЛ = НСтр("ru = '3. НДФЛ'");
	КонецЕсли;
	Результат.Вывести(Область);
	Результат.Область("НалоговаяНагрузкаОСНО").Значение		= "0,00%";
	Результат.Область("НалоговаяНагрузкаУСН6").Значение		= "0,00%";
	Результат.Область("НалоговаяНагрузкаУСН15").Значение	= "0,00%";
	
	//Сохраним нулевой результат последнего расчета, чтобы сразу открывалось "Подробнее"
	РезультатПоследнегоРасчета = Новый Структура;
	РезультатПоследнегоРасчета.Вставить("СтраховыеВзносыВПФРВсего",		0);
	РезультатПоследнегоРасчета.Вставить("СтраховыеВзносыВФССВсего",		0);
	РезультатПоследнегоРасчета.Вставить("СтраховыеВзносыВФОМСВсего",	0);
	РезультатПоследнегоРасчета.Вставить("СтраховыеВзносыОССНСВсего",	0);
	РезультатПоследнегоРасчета.Вставить("СтраховыеВзносыВсего",			0);
	РезультатПоследнегоРасчета.Вставить("НДСВходящий",					0);
	РезультатПоследнегоРасчета.Вставить("НДСИсходящий",					0);
	РезультатПоследнегоРасчета.Вставить("НДС",							0);
	РезультатПоследнегоРасчета.Вставить("НалогооблагаемыйДоход",		0);
	РезультатПоследнегоРасчета.Вставить("НалогооблагаемыйРасход",		0);
	РезультатПоследнегоРасчета.Вставить("НалогНаПрибыль",				0);
	РезультатПоследнегоРасчета.Вставить("НачисленныйЕдиныйНалогУСН6",	0);
	РезультатПоследнегоРасчета.Вставить("ВычетСтраховыхВзносовУСН6",	0);
	РезультатПоследнегоРасчета.Вставить("ЕдиныйНалогУСН6",				0);
	РезультатПоследнегоРасчета.Вставить("МинимальныйНалогУСН15",		0);
	РезультатПоследнегоРасчета.Вставить("ЕдиныйНалогУСН15",				0);
	РезультатПоследнегоРасчета.Вставить("ИтогоКУплатеОСНО",				0);
	РезультатПоследнегоРасчета.Вставить("НалоговаяНагрузкаОСНО",		"0,00%");
	РезультатПоследнегоРасчета.Вставить("ИтогоКУплатеУСН6",				0);
	РезультатПоследнегоРасчета.Вставить("НалоговаяНагрузкаУСН6",		"0,00%");
	РезультатПоследнегоРасчета.Вставить("ИтогоКУплатеУСН15",			0);
	РезультатПоследнегоРасчета.Вставить("НалоговаяНагрузкаУСН15",		"0,00%");
	
	//Установим цвета "светофора" по умолчанию
	
	Результат.Область("НалоговаяНагрузкаОСНО").ЦветФона = КрасныйЦвет;
	Результат.Область("НалоговаяНагрузкаУСН6").ЦветФона = ЖелтыйЦвет;
	Результат.Область("НалоговаяНагрузкаУСН15").ЦветФона = ЗеленыйЦвет;
	
	УстановитьПараметрРасшифровки();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьШиринуТабличногоДокументаДляБраузера()
	
	СисИнфо = Новый СистемнаяИнформация;
	
	ВебБраузер = СисИнфо.ИнформацияПрограммыПросмотра;
	
	Если СтрЧислоВхождений(ВРег(ВебБраузер), "MSIE") > 0 Тогда
		Результат.Область("C1").ШиринаКолонки = 36;
	Иначе
		Результат.Область("C1").ШиринаКолонки = 30;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьТабличныйДокумент()
	
	Результат.ФиксацияСлева = 4;
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьПараметрРасшифровки()
	
	Результат.Область("ПодробнееОСНО").ПараметрРасшифровки = "ОСНО";
	Результат.Область("ПодробнееУСН6").ПараметрРасшифровки = "УСН6";
	Результат.Область("ПодробнееУСН15").ПараметрРасшифровки = "УСН15";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиБазыНаСервере(Организация, РежимВыбраннойОрганизации)
	
	СтавкаНДС = 0.18;
	СтавкаВзносовФОТ = 0.302;
	
	// Установим организационно-правовую форму и переключим флаг
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо") = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	Иначе
		ЮридическоеЛицоИП = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	КонецЕсли;
	
	// Создадим запрос и зададим период выборки данных из базы
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), -12));
	Запрос.УстановитьПараметр("КонецПериода", НачалоМесяца(ТекущаяДата()) - 1);
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("Счет90011", ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД);
	Запрос.УстановитьПараметр("Счет9101", ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	
	Запрос.УстановитьПараметр("Счет90021", ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);
	Запрос.УстановитьПараметр("Счет90071", ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД);
	Запрос.УстановитьПараметр("Счет90081", ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД);
	Запрос.УстановитьПараметр("Счет9102", ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	Запрос.УстановитьПараметр("Счет6802", ПланыСчетов.Хозрасчетный.НДС);
	
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("МассивСчетов", МассивСчетов);
	
	Запрос.Текст = ТекстЗапросаДляЗаполнитьДаннымиБазыНаСервере();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Доходы			= Выборка.Доходы;
		Расходы			= Выборка.Расходы;
		ФондОплатыТруда	= Выборка.ФОТ;
	Иначе
		Доходы			= 0;
		Расходы			= 0;
		ФондОплатыТруда	= 0;
	КонецЕсли;
	
	Расходы = Расходы - (СтавкаВзносовФОТ*ФондОплатыТруда);
	
	Если РежимВыбраннойОрганизации = Перечисления.СистемыНалогообложения.Общая Тогда
		//для общей системы себестоимость продаж без НДС, поэтому его нужно прибавить
		Если Расходы > ФондОплатыТруда Тогда
			НДСВходящий = (Расходы - ФондОплатыТруда) * (СтавкаНДС);
		Иначе
			НДСВходящий = 0;
		КонецЕсли;
		Расходы = Расходы + НДСВходящий;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуетсяНесколькоОрганизаций()
	
	Возврат Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОрганизациюИТекущийРежимНаСервере()
	
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
		// если не получилось получить организацию по умолчанию, считаем что нет ни одной
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните реквизиты организации.'"));
		Возврат Неопределено;
	Иначе
		// попробуем получить текущий режим организации
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
						|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация,
						|	УчетнаяПолитикаОрганизацийСрезПоследних.СистемаНалогообложения
						|ИЗ
						|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ТекущийРежим = Выборка.СистемаНалогообложения;
			Если ТекущийРежим <> Перечисления.СистемыНалогообложения.Общая 
					И ТекущийРежим <> Перечисления.СистемыНалогообложения.Упрощенная Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Организация применяет особый порядок налогообложения. 
										|Автоматическое заполнение возможно только по данным организаций, использующих общую или упрощенную систему'"));
				Возврат Неопределено;
			Иначе
				РезультатСтруктура = Новый Структура;
				РезультатСтруктура.Вставить("Организация", Организация);
				РезультатСтруктура.Вставить("ТекущийРежим", ТекущийРежим);
				Возврат РезультатСтруктура;
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось получить текущий режим организации. Проверьте настройки учетной политики.'"));
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаДляЗаполнитьДаннымиБазыНаСервере()
	
	ТекстЗапроса = "ВЫБРАТЬ
			|	ХозрасчетныйОбороты.Организация,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет90011
			|						ИЛИ ХозрасчетныйОбороты.Счет = &Счет9101
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
			|			КОНЕЦ), 0) КАК Доходы,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет90021
			|						ИЛИ ХозрасчетныйОбороты.Счет = &Счет90071
			|						ИЛИ ХозрасчетныйОбороты.Счет = &Счет90081
			|						ИЛИ ХозрасчетныйОбороты.Счет = &Счет9102
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|			КОНЕЦ), 0) КАК Расходы,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет70
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
			|			КОНЕЦ), 0) КАК ФОТ
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&МассивСчетов), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.Организация";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументПодробнее(РезультатРасчета, ИмяМакета)
	
	Макет = Обработки.СравнениеРежимовНалогообложения.ПолучитьМакет(ИмяМакета);
	
	ТабДок = Новый ТабличныйДокумент;
	
	//Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	
	//Основная область
	Область = Макет.ПолучитьОбласть("ОсновнаяОбласть");
	
	Область.Параметры.Заполнить(РезультатРасчета);
	
	Область.Параметры.Доходы			= Доходы;
	Область.Параметры.Расходы			= Расходы;
	Область.Параметры.ФондОплатыТруда	= ФондОплатыТруда;
	
	ТабДок.Вывести(Область);
	
	Если Найти(ИмяМакета, "ОСНО") = 0 Тогда
		//Примечание
		Область = Макет.ПолучитьОбласть("Примечание");
		ТабДок.Вывести(Область);
	КонецЕсли;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабДок;
	
КонецФункции

#КонецОбласти
