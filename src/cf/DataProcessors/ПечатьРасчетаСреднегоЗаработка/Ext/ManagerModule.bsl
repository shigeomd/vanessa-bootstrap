#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда	

#Область СлужебныеПроцедурыИФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если МассивОбъектов.Количество() < 1 Тогда
		Возврат;
	КонецЕсли;
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	// Проверяем, нужно ли для макета РасчетСреднегоЗаработка формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ТабличныйДокумент = ПолучитьТабличныйДокумент(МассивОбъектов, ОбъектыПечати, "РасчетСреднегоЗаработка");
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка", НСтр("ru='Расчет среднего заработка'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	// Проверяем, нужно ли для макета РасчетСреднегоЗаработкаВыходногоПособия формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработкаВыходногоПособия") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ТабличныйДокумент = ПолучитьТабличныйДокумент(МассивОбъектов, ОбъектыПечати, "РасчетСреднегоЗаработкаВыходногоПособия");
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработкаВыходногоПособия", НСтр("ru='Расчет среднего заработка (для выходного пособия)'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеПроцедурыИФункции

// Функция возвращает табличный документ - печатную форму расчета среднего заработка.
Функция ПолучитьТабличныйДокумент(МассивСсылок, ОбъектыПечати, ИмяМакета)
	
	// Разделим массив ссылок по типам: создадим соответствие менеджеров объектов и ссылок относящихся к ним.
	// Также в соответствие поместим описание документа рассчитывающего средний заработок.
	МенеджерыДанныхСреднегоЗаработка = МенеджерыДанныхСреднегоЗаработка(МассивСсылок, ИмяМакета);
	
	Возврат ТабличныйДокументРасчетаСреднегоЗаработка(МенеджерыДанныхСреднегоЗаработка, ОбъектыПечати, ИмяМакета);
	
КонецФункции

// Функция возвращает соответствие менеджеров объектов и относящихся к ним ссылок.
// Также в итоговом соответствии заполняются описания документов рассчитывающих средний заработок.
//
Функция МенеджерыДанныхСреднегоЗаработка(МассивСсылок, ИмяМакета)
	МенеджерыДанныхСреднегоЗаработка = Новый Соответствие;
	
	Для каждого Ссылка Из МассивСсылок Цикл
		
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		
		ОписаниеМенеджера = МенеджерыДанныхСреднегоЗаработка.Получить(Менеджер);
		
		Если ОписаниеМенеджера = Неопределено Тогда
			ОписаниеДокумента = ОписаниеДокументаРассчитывающегоСреднийЗаработок(Менеджер, ИмяМакета);
			МенеджерыДанныхСреднегоЗаработка.Вставить(Менеджер, Новый Структура("Менеджер,ОписаниеДокумента,МассивСсылок", Менеджер, ОписаниеДокумента, Новый Массив));
			ОписаниеМенеджера = МенеджерыДанныхСреднегоЗаработка.Получить(Менеджер);
		КонецЕсли;
		
		ОписаниеМенеджера.МассивСсылок.Добавить(Ссылка);
		
	КонецЦикла;
	
	Возврат МенеджерыДанныхСреднегоЗаработка;
	
КонецФункции

// Функция возвращает структуру - описание документа для формирования печатной формы расчета среднего заработка.
// Структура возвращается заполненной по данным менеджера.
//
Функция ОписаниеДокументаРассчитывающегоСреднийЗаработок(Менеджер, ИмяМакета)
	ОписаниеДокумента = Новый Структура;
	ОписаниеДокумента.Вставить("Менеджер", 						Менеджер);
	ОписаниеДокумента.Вставить("ИмяДокумента", 					"");
	ОписаниеДокумента.Вставить("СинонимДокумента", 				"");
	ОписаниеДокумента.Вставить("СреднийЗаработокОбщий", 		Истина);
	ОписаниеДокумента.Вставить("ДанныеОЗаработкеВДокументе", 	Истина);
	ОписаниеДокумента.Вставить("ВыводитьЗаголовок", 			Истина);
	ОписаниеДокумента.Вставить("ЕстьНачислениеВТабличнойЧасти", Истина);

	Менеджер.ЗаполнитьОписаниеДокументаРассчитывающегоСреднийЗаработок(ОписаниеДокумента, ИмяМакета);
	
	Возврат ОписаниеДокумента;
КонецФункции

// Функция возвращает табличный документ - печатную форму расчета среднего заработка.
// Табличный документ формируется по переданному описанию.
//
Функция ТабличныйДокументРасчетаСреднегоЗаработка(МенеджерыДанныхСреднегоЗаработка, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработка";
	
	// Разделим менеджеры по отношению к среднему заработку ФСС.
	МассивОписанийМенеджеровОбщегоСреднего 	= Новый Массив;
	МассивОписанийМенеджеровСреднегоФСС 	= Новый Массив;
	
	ПолныйМассивСотрудников = Новый Массив;
	
	Для каждого ОписаниеМенеджера Из МенеджерыДанныхСреднегоЗаработка Цикл
		
		// Для документов рассчитывающих общий средний заработок можно печатать разные печатные формы("бюджетную", отдельно
		// для выходного пособия и т.п.), а для тех, которые считают средний заработок ФСС - можно печатать только
		// стандартную печатную форму(макет "РасчетСреднегоЗаработка"), поэтому если документ считает средний заработок ФСС и
		// хочет напечатать нестандартную печатную форму - пропустим его.
		Если ОписаниеМенеджера.Значение.ОписаниеДокумента.СреднийЗаработокОбщий Тогда
			
			// Получим данные для всех документов относящихся к текущему менеджеру.
			ДанныеДокументов = ДанныеДокументовРасчетаСреднегоЗаработка(ОписаниеМенеджера.Значение.Менеджер, ОписаниеМенеджера.Значение.МассивСсылок, ИмяМакета);
			ОписаниеМенеджера.Значение.Вставить("ДанныеДокументов", ДанныеДокументов);
			
			// Для получения кадровых данных одним запросом по всем сотрудникам - соберем их в отдельный массив.
			Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПолныйМассивСотрудников, ДанныеДокумента.МассивСотрудников);
			КонецЦикла;
			
			МассивОписанийМенеджеровОбщегоСреднего.Добавить(ОписаниеМенеджера.Значение);
			
		ИначеЕсли ИмяМакета = "РасчетСреднегоЗаработка" Тогда 
			
			// Получим данные для всех документов относящихся к текущему менеджеру.
			ДанныеДокументов = ДанныеДокументовРасчетаСреднегоЗаработкаФСС(ОписаниеМенеджера.Значение.Менеджер, ОписаниеМенеджера.Значение.МассивСсылок, ИмяМакета);
			ОписаниеМенеджера.Значение.Вставить("ДанныеДокументов", ДанныеДокументов);
			
			// Для получения кадровых данных одним запросом по всем сотрудникам - соберем их в отдельный массив.
			Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПолныйМассивСотрудников, ДанныеДокумента.МассивСотрудников);
			КонецЦикла;
			
			МассивОписанийМенеджеровСреднегоФСС.Добавить(ОписаниеМенеджера.Значение);
			
		КонецЕсли;	
	КонецЦикла;

	КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ПолныйМассивСотрудников, "ФизическоеЛицо,ФИОПолные,ТабельныйНомер,Подразделение,Должность,ВидЗанятости", '00010101000000');
	
	ПервыйДокумент = Истина;
	Для каждого ОписаниеМенеджера Из МассивОписанийМенеджеровОбщегоСреднего Цикл
		
		Для каждого Ссылка Из ОписаниеМенеджера.МассивСсылок Цикл
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйДокумент = Ложь;
			КонецЕсли;
			
			ДанныеДокумента 				= ОписаниеМенеджера.ДанныеДокументов.Найти(Ссылка, "Ссылка");
			ТаблицыДанныхОСреднемЗаработке 	= ТаблицыДанныхОСреднемЗаработке(ОписаниеМенеджера.ОписаниеДокумента, ДанныеДокумента);
			
			ДанныеДляПечати = Новый Структура;
			ДанныеДляПечати.Вставить("ДанныеДокумента", 				ДанныеДокумента);						
			ДанныеДляПечати.Вставить("ДанныеСотрудников", 				КадровыеДанныеСотрудников);
			ДанныеДляПечати.Вставить("ТаблицыДанныхОСреднемЗаработке", 	ТаблицыДанныхОСреднемЗаработке);
			ДанныеДляПечати.Вставить("Ссылка", 							Ссылка);
			ДанныеДляПечати.Вставить("СинонимДокумента", 				ОписаниеМенеджера.ОписаниеДокумента.СинонимДокумента);
			ДанныеДляПечати.Вставить("ВыводитьЗаголовок", 				ОписаниеМенеджера.ОписаниеДокумента.ВыводитьЗаголовок);

			ЗаполнитьТабличныйДокументРасчетаСреднегоЗаработкаОбщий(ДанныеДляПечати, ОбъектыПечати, ИмяМакета, ТабличныйДокумент);			
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого ОписаниеМенеджера Из МассивОписанийМенеджеровСреднегоФСС Цикл
		
		Для каждого Ссылка Из ОписаниеМенеджера.МассивСсылок Цикл
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйДокумент = Ложь;
			КонецЕсли;
			
			ДанныеДокумента = ОписаниеМенеджера.ДанныеДокументов.Найти(Ссылка, "Ссылка");					
			
			Если ДанныеДокумента.РасчетПоПравилам2010Года Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Печать расчета среднего заработка по правилам 2010 года не поддерживается.'"));
				Продолжить;
			КонецЕсли;
			
			ДанныеДляПечати = Новый Структура;
			ДанныеДляПечати.Вставить("ДанныеДокумента", 				ДанныеДокумента);						
			ДанныеДляПечати.Вставить("ДанныеСотрудников", 				КадровыеДанныеСотрудников);
			ДанныеДляПечати.Вставить("ТаблицыДанныхОСреднемЗаработке", 	ТаблицыДанныхОСреднемЗаработке(ОписаниеМенеджера.ОписаниеДокумента, ДанныеДокумента));
			ДанныеДляПечати.Вставить("Ссылка", 							Ссылка);
			ДанныеДляПечати.Вставить("СинонимДокумента", 				ОписаниеМенеджера.ОписаниеДокумента.СинонимДокумента);
			ДанныеДляПечати.Вставить("ВыводитьЗаголовок", 				ОписаниеМенеджера.ОписаниеДокумента.ВыводитьЗаголовок);
			
			ЗаполнитьТабличныйДокументРасчетаСреднегоЗаработкаФСС(ДанныеДляПечати, ИмяМакета, ТабличныйДокумент);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции 	

#КонецОбласти

// Функция возвращает структуру - результат выполнения пакета запросов с данными о заработке в документах.
//
Функция ТаблицыДанныхОСреднемЗаработке(ОписаниеДокумента, ДанныеДокумента) 

	Если ОписаниеДокумента.СреднийЗаработокОбщий Тогда
		ТекстЗапроса = ТекстЗапросаТаблицСреднегоОбщего(ОписаниеДокумента)
	Иначе
		ТекстЗапроса = ТекстЗапросаТаблицСреднегоФСС(ОписаниеДокумента)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДанныеДокумента.Ссылка);
	
	ТаблицыДанныхОСреднемЗаработке = Запрос.ВыполнитьПакет();
	
	ДанныеОНачислениях 	= ТаблицыДанныхОСреднемЗаработке[0].Выгрузить();
	ДанныеВремени 		= ТаблицыДанныхОСреднемЗаработке[1].Выгрузить();
	Если ОписаниеДокумента.СреднийЗаработокОбщий Тогда
		ДанныеДляРасчета = Новый Структура("ДанныеОНачислениях,ДанныеОВремени", ДанныеОНачислениях, ДанныеВремени);
	Иначе
		ДанныеДляРасчета = Новый Структура("ДанныеОНачислениях,ДанныеОВремени", ДанныеОНачислениях, ДанныеВремени);
	КонецЕсли;

	Возврат ДанныеДляРасчета
	
КонецФункции 

#Область СреднийОбщий

// Функция возвращает табличный документ - печатную форму расчета среднего заработка, 
// для документов использующих расчет среднего заработка по общим правилам.
Процедура ЗаполнитьТабличныйДокументРасчетаСреднегоЗаработкаОбщий(ДанныеДляПечати, ОбъектыПечати, ИмяМакета, ТабличныйДокумент)
	
	ДанныеДокумента 				= ДанныеДляПечати.ДанныеДокумента;
	ДанныеСотрудников 				= ДанныеДляПечати.ДанныеСотрудников;
	
	ПервыйПриказ = Истина;
	ДобавлятьГруппировкуПоСотрудникам = ДанныеДокумента.МассивСотрудников.Количество() > 1;	
	
	ЗначенияПараметров = Новый Структура;
	ОтборСотрудник = Новый Структура("Сотрудник");
	
	Для Каждого Сотрудник Из ДанныеДокумента.МассивСотрудников Цикл
		
		ДанныеСотрудника 	= ДанныеСотрудников.Найти(Сотрудник, "Сотрудник"); 
		ОписаниеСотрудника 	= ДанныеДокумента.ОписанияСотрудников.Получить(Сотрудник);
		ОтборСотрудник.Вставить("Сотрудник", Сотрудник);
		
		ТаблицыПоСотруднику = ТаблицыДанныхОСреднемЗаработкеПоСотруднику(Сотрудник, ДанныеДляПечати.ТаблицыДанныхОСреднемЗаработке);
		
		ПараметрыПолученияДанныхСреднего = РасчетЗарплатыДляНебольшихОрганизаций.ПараметрыПолученияДанныхСреднегоОбщего();
		ПараметрыПолученияДанныхСреднего.Вставить("ТаблицыПоСотруднику", 	ТаблицыПоСотруднику); 
		ПараметрыПолученияДанныхСреднего.Вставить("ДатаНачалаПериода",  	ДанныеДокумента.НачалоРасчетногоПериода); 
		ПараметрыПолученияДанныхСреднего.Вставить("ДатаОкончанияПериода",	ДанныеДокумента.ОкончаниеРасчетногоПериода); 
		ПараметрыПолученияДанныхСреднего.Вставить("ДатаНачалаСобытия", 		ДанныеДокумента.ДатаНачалаСобытия);		
		
		ДанныеРасчетаСреднегоЗаработка = РасчетЗарплатыДляНебольшихОрганизаций.ДанныеРасчетаСреднегоЗаработкаОбщего(ПараметрыПолученияДанныхСреднего);

		// Подготовим макеты для формирования табличного документа.
		ОбластиМакета = ОбластиМакетаСреднегоЗаработкаОбщий();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		Если Не ПервыйПриказ Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйПриказ = Ложь;
		КонецЕсли;
		
		Если ДанныеДляПечати.ВыводитьЗаголовок Тогда
			// Заполним шапку документа
			ЗначенияПараметров.Очистить();
			ЗначенияПараметров.Вставить("СинонимДокумента", 				ДанныеДляПечати.СинонимДокумента);
			ЗначенияПараметров.Вставить("НомерДокумента", 					ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокумента.НомерДокумента, Истина, Истина));
			ЗначенияПараметров.Вставить("ДатаДокумента", 					Формат(ДанныеДокумента.ДатаДокумента, "ДЛФ=DD"));
			ЗначенияПараметров.Вставить("Ссылка", 							ДанныеДляПечати.Ссылка);                                                                                                                         
			ЗначенияПараметров.Вставить("НаименованиеОрганизации", 			ДанныеДокумента.НаименованиеОрганизации);
			ЗначенияПараметров.Вставить("Организация", 						ДанныеДокумента.Организация);
			ЗначенияПараметров.Вставить("ФИОРаботника", 					ДанныеСотрудника.ФИОПолные);
			ЗначенияПараметров.Вставить("ТабельныйНомер", 					ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеСотрудника.ТабельныйНомер, Истина, Истина));
			ЗначенияПараметров.Вставить("Сотрудник", 						Сотрудник);
			ЗначенияПараметров.Вставить("ДатаНачалаРасчетногоПериода", 		Формат(ДанныеДокумента.НачалоРасчетногоПериода,"ДЛФ=D"));
			ЗначенияПараметров.Вставить("ДатаОкончанияРасчетногоПериода", 	Формат(ДанныеДокумента.ОкончаниеРасчетногоПериода,"ДЛФ=D"));
			ЗначенияПараметров.Вставить("СпособРасчета", 					?(ЗначениеЗаполнено(ДанныеДокумента.СпособРасчета), ДанныеДокумента.СпособРасчета, НСтр("ru='Общий средний заработок'")));
			
			ЗначенияПараметров.Вставить("ВидЗанятости", 					ДанныеСотрудника.ВидЗанятости);
			ЗначенияПараметров.Вставить("Подразделение", 					ДанныеСотрудника.Подразделение);
			ЗначенияПараметров.Вставить("Должность", 						ДанныеСотрудника.Должность);		
			ЗначенияПараметров.Вставить("ДатаНачалаОтсутствия", 			Формат(ДанныеДокумента.ДатаНачалаОтсутствия, "ДЛФ=D"));
			ЗначенияПараметров.Вставить("ДатаОкончанияОтсутствия", 			Формат(ДанныеДокумента.ДатаОкончанияОтсутствия, "ДЛФ=D"));
			
			ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияШапка.Параметры, ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластиМакета.СекцияШапка);
		КонецЕсли;
		
		// Уточним названия колонок и показателей.
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("ЕдиницаИзмеренияВремени", "дней"); 
		ЗначенияПараметров.Вставить("ОписаниеЗаработка", "Среднедневной");

		ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияОтработанноеВремяШапка.Параметры, 	ЗначенияПараметров);
		ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияРасчетСреднегоЗаработка.Параметры, ЗначенияПараметров);
		
		НомерРаздела = 1;
		
		УстановитьНомерРазделаВОбласти(НомерРаздела, ОбластиМакета.СекцияЗаработокШапка, ЗначенияПараметров);
		
		ТабличныйДокумент.Вывести(ОбластиМакета.СекцияЗаработокШапка);
		Для каждого СтрокаЗаработка Из ДанныеРасчетаСреднегоЗаработка.Заработок Цикл
			ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияЗаработокСтрока.Параметры, СтрокаЗаработка);
			ЗначенияПараметров.Очистить();
			ЗначенияПараметров.Вставить("Месяц", Формат(СтрокаЗаработка.Месяц, "ДФ='MMMM yyyy'"));
			ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияЗаработокСтрока.Параметры, ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластиМакета.СекцияЗаработокСтрока);
		КонецЦикла;
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("Учтено", ДанныеРасчетаСреднегоЗаработка.Заработок.Итог("Учтено"));
		ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияЗаработокПодвал.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластиМакета.СекцияЗаработокПодвал);
		
		УстановитьНомерРазделаВОбласти(НомерРаздела, ОбластиМакета.СекцияОтработанноеВремяШапка, ЗначенияПараметров);
		
		ТабличныйДокумент.Вывести(ОбластиМакета.СекцияОтработанноеВремяШапка);
		Для каждого СтрокаОтработанноеВремя Из ДанныеРасчетаСреднегоЗаработка.ОтработанноеВремя Цикл
			ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияОтработанноеВремяСтрока.Параметры, СтрокаОтработанноеВремя);
			ЗначенияПараметров.Очистить();
			ЗначенияПараметров.Вставить("Месяц", Формат(СтрокаОтработанноеВремя.Месяц, "ДФ='MMMM yyyy'"));
			ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияОтработанноеВремяСтрока.Параметры, ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластиМакета.СекцияОтработанноеВремяСтрока);
		КонецЦикла;
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("КалендарныхДней", 	ДанныеРасчетаСреднегоЗаработка.Итоги["ВсегоКалендарныхДней"]);
		ЗначенияПараметров.Вставить("Учтено", 			ДанныеРасчетаСреднегоЗаработка.Итоги["ВсегоДнейЧасов"]);
		
		ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияОтработанноеВремяПодвал.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластиМакета.СекцияОтработанноеВремяПодвал);
		
		УстановитьНомерРазделаВОбласти(НомерРаздела, ОбластиМакета.СекцияРасчетСреднегоЗаработка, ЗначенияПараметров);
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("УчтеноЗаработок", 			ДанныеРасчетаСреднегоЗаработка.Итоги["ВсегоЗаработка"]); 
		ЗначенияПараметров.Вставить("УчтеноДней", 				ДанныеРасчетаСреднегоЗаработка.Итоги["ВсегоДнейЧасов"]); 
		ЗначенияПараметров.Вставить("СреднедневнойЗаработок",	ДанныеРасчетаСреднегоЗаработка.Итоги["СреднедневнойЗаработок"]); 
														
		ЗаполнитьЗначенияСвойств(ОбластиМакета.СекцияРасчетСреднегоЗаработка.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластиМакета.СекцияРасчетСреднегоЗаработка);
				
		Если ДобавлятьГруппировкуПоСотрудникам Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Сотрудник);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры 

Функция ДанныеДокументовРасчетаСреднегоЗаработка(Менеджер, МассивСсылок, ИмяМакета) 
	
	ДанныеДокументов = Новый ТаблицаЗначений;
	ДанныеДокументов.Колонки.Добавить("Ссылка");
	ДанныеДокументов.Колонки.Добавить("Организация");
	ДанныеДокументов.Колонки.Добавить("НаименованиеОрганизации");
	ДанныеДокументов.Колонки.Добавить("КодПоОКПО");
	ДанныеДокументов.Колонки.Добавить("НачалоРасчетногоПериода");
	ДанныеДокументов.Колонки.Добавить("ОкончаниеРасчетногоПериода");
	ДанныеДокументов.Колонки.Добавить("ДатаНачалаСобытия");
	ДанныеДокументов.Колонки.Добавить("НомерДокумента");
	ДанныеДокументов.Колонки.Добавить("ДатаДокумента");
	ДанныеДокументов.Колонки.Добавить("Начисление");
	ДанныеДокументов.Колонки.Добавить("МассивСотрудников"); 
	ДанныеДокументов.Колонки.Добавить("ОписанияСотрудников"); 
	ДанныеДокументов.Колонки.Добавить("СпособРасчета");
	ДанныеДокументов.Колонки.Добавить("ДатаНачалаОтсутствия");
	ДанныеДокументов.Колонки.Добавить("ДатаОкончанияОтсутствия");
	ДанныеДокументов.Колонки.Добавить("ПериодРегистрации");
	ДанныеДокументов.Колонки.Добавить("НачалоПериодаЗаКоторыйПредоставляетсяОтпуск");
	ДанныеДокументов.Колонки.Добавить("КонецПериодаЗаКоторыйПредоставляетсяОтпуск");
	ДанныеДокументов.Колонки.Добавить("ДнейОсновногоОтпуска");
	ДанныеДокументов.Колонки.Добавить("ДнейДополнительногоОтпуска");
	ДанныеДокументов.Колонки.Добавить("ДнейОтпускаВсего");
	ДанныеДокументов.Колонки.Добавить("ГлавныйБухгалтерРасшифровкаПодписи");
	ДанныеДокументов.Колонки.Добавить("БухгалтерРасшифровкаПодписи");
	ДанныеДокументов.Колонки.Добавить("ИсполнительРасшифровкаПодписи");
	ДанныеДокументов.Колонки.Добавить("ДолжностьИсполнителя");
	
	Менеджер.ЗаполнитьДанныеДокументовДляПечатиРасчетаСреднегоЗаработка(МассивСсылок, ДанныеДокументов, ИмяМакета);
	
	РеквизитыОрганизаций = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДанныеДокументов.ВыгрузитьКолонку("Организация"), "КодПоОКПО,НаименованиеПолное,Наименование");
	Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
		РеквизитыОрганизации = РеквизитыОрганизаций.Получить(ДанныеДокумента.Организация);
		
		ДанныеДокумента.КодПоОКПО = РеквизитыОрганизации.КодПоОКПО;
		Если ЗначениеЗаполнено(РеквизитыОрганизации.НаименованиеПолное) Тогда              
			ДанныеДокумента.НаименованиеОрганизации = РеквизитыОрганизации.НаименованиеПолное;
		Иначе 
			ДанныеДокумента.НаименованиеОрганизации = РеквизитыОрганизации.Наименование;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ДанныеДокументов;

КонецФункции

Функция ТекстЗапросаТаблицСреднегоОбщего(ОписаниеДокумента)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДокументДанныеОЗаработке.Сотрудник,
		|	ДокументДанныеОЗаработке.Период,
		|	ДокументДанныеОЗаработке.Сумма
		|ИЗ
		|	Документ.#ИмяДокумента#.СреднийЗаработокОбщий КАК ДокументДанныеОЗаработке
		|ГДЕ
		|	ДокументДанныеОЗаработке.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументОтработанноеВремя.Сотрудник,
		|	ДокументОтработанноеВремя.Период,
		|	ДокументОтработанноеВремя.ОтработаноДнейКалендарных
		|ИЗ
		|	Документ.#ИмяДокумента#.ОтработанноеВремяДляСреднегоОбщий КАК ДокументОтработанноеВремя
		|ГДЕ
		|	ДокументОтработанноеВремя.Ссылка = &Ссылка";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяДокумента#", ОписаниеДокумента.ИмяДокумента);	
	
	Возврат ТекстЗапроса;
	
КонецФункции	
	
Функция ОбластиМакетаСреднегоЗаработкаОбщий()
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРасчетаСреднегоЗаработка.ПФ_MXL_РасчетСреднегоЗаработка");
	
	ОбластиМакета = Новый Структура;
	
	ОбластиМакета.Вставить("СекцияШапка", 							Макет.ПолучитьОбласть("Шапка"));
	ОбластиМакета.Вставить("СекцияЗаработокШапка", 					Макет.ПолучитьОбласть("ЗаработокШапкаБезИндексации"));
	ОбластиМакета.Вставить("СекцияЗаработокСтрока",					Макет.ПолучитьОбласть("ЗаработокСтрокаБезИндексации"));
	ОбластиМакета.Вставить("СекцияЗаработокПодвал",					Макет.ПолучитьОбласть("ЗаработокПодвалБезИндексации"));
	ОбластиМакета.Вставить("СекцияОтработанноеВремяШапка",  		Макет.ПолучитьОбласть("ОтработанноеВремяШапка"));
	ОбластиМакета.Вставить("СекцияОтработанноеВремяСтрока",  		Макет.ПолучитьОбласть("ОтработанноеВремяСтрока"));
	ОбластиМакета.Вставить("СекцияОтработанноеВремяПодвал",  		Макет.ПолучитьОбласть("ОтработанноеВремяПодвал"));
	ОбластиМакета.Вставить("СекцияДоляВремени",  					Макет.ПолучитьОбласть("ДоляВремени"));
	ОбластиМакета.Вставить("СекцияПрочееШапка",  					Макет.ПолучитьОбласть("ПрочееШапка"));
	ОбластиМакета.Вставить("СекцияПрочееСтрока",  					Макет.ПолучитьОбласть("ПрочееСтрока"));
	ОбластиМакета.Вставить("СекцияПрочееПодвал",  					Макет.ПолучитьОбласть("ПрочееПодвал"));
	ОбластиМакета.Вставить("СекцияРасчетСреднегоЗаработка",  		Макет.ПолучитьОбласть("РасчетСреднегоЗаработка"));
	
	Возврат ОбластиМакета;	
	
КонецФункции 

Процедура УстановитьНомерРазделаВОбласти(НомерРаздела, Область, ЗначенияПараметров)
	ЗначенияПараметров.Очистить();
	ЗначенияПараметров.Вставить("НомерРаздела", НомерРаздела);
	ЗаполнитьЗначенияСвойств(Область.Параметры, ЗначенияПараметров);
	НомерРаздела = НомерРаздела + 1;
КонецПроцедуры

#КонецОбласти

#Область СреднийФСС

// Функция возвращает табличный документ - печатную форму расчета среднего заработка, 
// для документов использующих расчет среднего заработка по правилам ФСС действующим с 2011 года.
Процедура ЗаполнитьТабличныйДокументРасчетаСреднегоЗаработкаФСС(ДанныеДляПечати, ИмяМакета, ТабличныйДокумент)
	
	ДанныеДокумента 				= ДанныеДляПечати.ДанныеДокумента;
	ДанныеСотрудников               = ДанныеДляПечати.ДанныеСотрудников;
	ТаблицыДанныхОСреднемЗаработке 	= ДанныеДляПечати.ТаблицыДанныхОСреднемЗаработке;
		
	ТаблицыНачислений 	 = ТаблицыДанныхОСреднемЗаработке["ДанныеОНачислениях"];
	ТаблицыВремени 		 = ТаблицыДанныхОСреднемЗаработке["ДанныеОВремени"];
	
	// запоминаем области макета
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРасчетаСреднегоЗаработка.ПФ_MXL_РасчетСреднегоЗаработкаПособий");
	ОбластьМакетаШапка 										= Макет.ПолучитьОбласть("Заголовок"); 
	ОбластьМакетаНеполноеВремя 								= Макет.ПолучитьОбласть("НеполноеВремя");
	ОбластьМакетаОкончание 									= Макет.ПолучитьОбласть("Окончание");
	ОбластьМакетаЗаголовокНачислений 						= Макет.ПолучитьОбласть("ЗаголовокНачислений"); 
	ОбластьМакетаЗаголовокТаблицыДнейБолезниУходаЗаДетьми 	= Макет.ПолучитьОбласть("ЗаголовокТаблицыДнейБолезниУходаЗаДетьми"); 
	ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми 			= Макет.ПолучитьОбласть("СтрокаЗаработкаДнейБолезниУходаЗаДетьми");
	Если НЕ ДанныеДокумента.НеполныйРасчетныйПериод И ДанныеДокумента.ОграничиватьЗаработок Тогда
		ОбластьМакетаЗаголовокТаблицы 						= Макет.ПолучитьОбласть("ЗаголовокТаблицыНачало"); 
		ОбластьМакетаСтрока 								= Макет.ПолучитьОбласть("СтрокаЗаработкаНачало");
		ОбластьМакетаСередина 								= Макет.ПолучитьОбласть("Середина");
		ОбластьМакетаТекущийИтог 							= Макет.ПолучитьОбласть("ТекущийИтог");
	Иначе
		ОбластьМакетаЗаголовокТаблицы 						= Макет.ПолучитьОбласть("ЗаголовокТаблицыНачалоБезОграничений"); 
		ОбластьМакетаСтрока 								= Макет.ПолучитьОбласть("СтрокаЗаработкаНачалоБезОграничений");
		ОбластьМакетаСередина 								= Макет.ПолучитьОбласть("СерединаБезОграничений");
		ОбластьМакетаТекущийИтог 							= Макет.ПолучитьОбласть("ТекущийИтогБезОграничений");
	КонецЕсли;

	ОтборФизическоеЛицо = Новый Структура("ФизическоеЛицо");
	ЗначенияПараметров = Новый Структура;
	ПервыйПриказ = Истина;
	ДобавлятьГруппировкуПоСотрудникам = ДанныеДокумента.МассивСотрудников.Количество() > 1;	
	
	Для Каждого Сотрудник Из ДанныеДокумента.МассивСотрудников Цикл
		
		ДанныеСотрудника = ДанныеДляПечати.ДанныеСотрудников.Найти(Сотрудник, "Сотрудник"); 
		ОтборФизическоеЛицо.Вставить("ФизическоеЛицо", ДанныеСотрудника.ФизическоеЛицо);

		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("СинонимДокумента", 			ДанныеДляПечати.СинонимДокумента);
		ЗначенияПараметров.Вставить("НомерДокумента", 				ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокумента.НомерДокумента, Истина, Истина));
		ЗначенияПараметров.Вставить("ДатаДокумента", 				Формат(ДанныеДокумента.ДатаДокумента, "ДЛФ=DD"));
		ЗначенияПараметров.Вставить("ДатаНачалаОтсутствия", 		Формат(ДанныеДокумента.ДатаНачала, "ДЛФ=D"));
		ЗначенияПараметров.Вставить("ДатаОкончанияОтсутствия", 		Формат(ДанныеДокумента.ДатаОкончания,"ДЛФ=D"));
		ЗначенияПараметров.Вставить("НаименованиеОрганизации", 		ДанныеДокумента.НаименованиеОрганизации); 	
		ЗначенияПараметров.Вставить("ВидЗанятости", 				ДанныеСотрудника.ВидЗанятости);
		ЗначенияПараметров.Вставить("Подразделение", 				ДанныеСотрудника.Подразделение);
		ЗначенияПараметров.Вставить("Должность", 					ДанныеСотрудника.Должность);
		ЗначенияПараметров.Вставить("ФИОРаботника", 				ДанныеСотрудника.ФИОПолные);
		ЗначенияПараметров.Вставить("ТабельныйНомер", 				ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеСотрудника.ТабельныйНомер, Истина, Истина));
		ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры, ЗначенияПараметров);
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("ДатаНачалаСобытия", 	Формат(ДанныеДокумента.ДатаНачалаСобытия, "ДЛФ=D"));
		ЗначенияПараметров.Вставить("ДоляНеполногоВремени", ДанныеДокумента.ДоляНеполногоВремени);
		ЗначенияПараметров.Вставить("МРОТ", 				ДанныеДокумента.МРОТ);
		ЗначенияПараметров.Вставить("МинимальныйСреднедневнойЗаработок", 			ДанныеДокумента.МинимальныйСреднедневнойЗаработок);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаСередина.Параметры, 				ЗначенияПараметров);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаНеполноеВремя.Параметры, 			ЗначенияПараметров);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаОкончание.Параметры,				ЗначенияПараметров);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйПриказ Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйПриказ = Ложь;
		КонецЕсли;
		
		СтрокиТаблицыНачислений 	= ТаблицыНачислений.НайтиСтроки(ОтборФизическоеЛицо);
		СтрокиТаблицыВремени 		= ТаблицыВремени.НайтиСтроки(ОтборФизическоеЛицо); 
		
		Начисления = ТаблицыНачислений.СкопироватьКолонки();
		
		Для каждого СтрокаТаблицыНачислений Из СтрокиТаблицыНачислений Цикл
			
			Если ДанныеДокумента.НеполныйРасчетныйПериод 
				И СтрокаТаблицыНачислений.Период < УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаНачалаНеполногоПериодаРасчетаСреднегоЗаработка() Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(Начисления.Добавить(), СтрокаТаблицыНачислений);
			
		КонецЦикла;
		
		ОтработанноеВремя = ТаблицыВремени.СкопироватьКолонки();
		
		Для каждого СтрокаТаблицыВремени Из СтрокиТаблицыВремени Цикл
			Если ДанныеДокумента.НеполныйРасчетныйПериод 
				И СтрокаТаблицыВремени.Период < УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаНачалаНеполногоПериодаРасчетаСреднегоЗаработка() Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОтработанноеВремя.Добавить(), СтрокаТаблицыВремени);
		КонецЦикла;
		
		ДанныеРасчетаСреднего = ДанныеРасчетаСреднийЗаработокФСС(
			ДанныеДокумента, 
			Начисления, 
			ОтработанноеВремя, 
			НЕ ДанныеДокумента.НеполныйРасчетныйПериод И ДанныеДокумента.ОграничиватьЗаработок);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
		Запрос.УстановитьПараметр("ДатаСобытия", 								ДанныеДокумента.ДатаНачалаСобытия);
		Запрос.УстановитьПараметр("НаименованиеОрганизации", 					ДанныеДокумента.НаименованиеОрганизации);
		Запрос.УстановитьПараметр("ДанныеРасчетаСреднего", 						ДанныеРасчетаСреднего);
		Запрос.УстановитьПараметр("ДоляНеполногоВремени", 						ДанныеДокумента.ДоляНеполногоВремени);
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокумента.РасчетныйГод КАК РасчетныйГод,
			|	ДанныеДокумента.Заработок КАК Заработок,
			|	ДанныеДокумента.ДнейБолезниУходаЗаДетьми,
			|	&НаименованиеОрганизации КАК Страхователь,
			|	ДанныеДокумента.ПредельнаяВеличина КАК ПредельнаяВеличина
			|ПОМЕСТИТЬ ВТДанныеДокумента
			|ИЗ
			|	&ДанныеРасчетаСреднего КАК ДанныеДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеДокумента.РасчетныйГод
			|ИЗ
			|	ВТДанныеДокумента КАК ДанныеДокумента
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеДокумента.РасчетныйГод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеДокумента.РасчетныйГод КАК РасчетныйГод,
			|	ДанныеДокумента.Заработок КАК Заработок,
			|	ЕСТЬNULL(ДанныеДокумента.ДнейБолезниУходаЗаДетьми, 0) КАК ДнейБолезниУходаЗаДетьми,
			|	ЕСТЬNULL(ДанныеДокумента.Страхователь, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Страхователь,
			|	ДанныеДокумента.ПредельнаяВеличина КАК ПредельнаяВеличина
			|ИЗ
			|	ВТДанныеДокумента КАК ДанныеДокумента
			|
			|УПОРЯДОЧИТЬ ПО
			|	РасчетныйГод,
			|	Страхователь
			|ИТОГИ
			|	СУММА(Заработок),
			|	СУММА(ДнейБолезниУходаЗаДетьми),
			|	МАКСИМУМ(ПредельнаяВеличина)
			|ПО
			|	РасчетныйГод";
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		ГодыРасчетаСреднего = МассивРезультатов[1].Выгрузить();
		Выборка 			= МассивРезультатов[2].Выбрать();
	
		ОписаниеРасчетныхЛет = НСтр("ru='Не указаны'"); 
		ВсегоСтрок = ГодыРасчетаСреднего.Количество();
		Если ВсегоСтрок = 2 Тогда
			ОписаниеРасчетныхЛет = Формат(ГодыРасчетаСреднего[0].РасчетныйГод,"ЧЦ=4; ЧГ=0") + " " + НСтр("ru='и'") + " " + Формат(ГодыРасчетаСреднего[1].РасчетныйГод,"ЧЦ=4; ЧГ=0");
		ИначеЕсли ВсегоСтрок = 1 Тогда	
			ОписаниеРасчетныхЛет = Формат(ГодыРасчетаСреднего[0].РасчетныйГод,"ЧЦ=4; ЧГ=0");
		КонецЕсли;
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("РасчетныеГоды", ОписаниеРасчетныхЛет);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры, ЗначенияПараметров);
		
		Если ДанныеДляПечати.ВыводитьЗаголовок Тогда
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокНачислений);
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
		Если ДанныеДокумента.ВыводитьИсключаемыеДни Тогда
			ТабличныйДокумент.Присоединить(ОбластьМакетаЗаголовокТаблицыДнейБолезниУходаЗаДетьми);
		КонецЕсли;
		
		ВсегоЗаработка 					= 0;
		ВсегоДнейБолезниУходаЗаДетьми 	= 0;
		СтрокиВыводили 					= Ложь;
		
		КалендарныхДней = 0;
		Пока Выборка.Следующий() Цикл
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
				Если СтрокиВыводили Тогда
					ТабличныйДокумент.Вывести(ОбластьМакетаТекущийИтог);
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(ОбластьМакетаТекущийИтог.Параметры,Выборка);
				Если НЕ ДанныеДокумента.НеполныйРасчетныйПериод И ДанныеДокумента.ОграничиватьЗаработок Тогда
					ВсегоЗаработка = ВсегоЗаработка + Мин(Выборка.ПредельнаяВеличина, Выборка.Заработок);
				Иначе
					ВсегоЗаработка = ВсегоЗаработка + Выборка.Заработок;
				КонецЕсли;
				ВсегоДнейБолезниУходаЗаДетьми = ВсегоДнейБолезниУходаЗаДетьми + Выборка.ДнейБолезниУходаЗаДетьми;
				КалендарныхДней = КалендарныхДней + ДеньГода(Дата(Выборка.РасчетныйГод, 12, 31));
			Иначе
				СтрокиВыводили = Истина;
				ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрока.Параметры, Выборка);
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				Если ДанныеДокумента.ВыводитьИсключаемыеДни Тогда
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми.Параметры, Выборка);
					ТабличныйДокумент.Присоединить(ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		РасчетныеГоды = Новый Массив;
		Для каждого ГодРасчетаСреднего Из ГодыРасчетаСреднего Цикл
			РасчетныеГоды.Добавить(ГодРасчетаСреднего.РасчетныйГод);
		КонецЦикла;
		
		Если ДанныеДокумента.НеполныйРасчетныйПериод Тогда
			УчитываемыхДнейВКалендарныхГодах = РасчетЗарплатыДляНебольшихОрганизаций.КалендарныхДнейЗаНеполныйРасчетныйПериодПоПричинеНетрудоспособностиДляСреднегоФСС(ДанныеДокумента.ДатаНачалаСобытия, ДанныеДокумента.ПричинаНетрудоспособности, ВсегоДнейБолезниУходаЗаДетьми);
		Иначе
			УчитываемыхДнейВКалендарныхГодах = РасчетЗарплатыДляНебольшихОрганизаций.КалендарныхДнейПоПричинеНетрудоспособностиДляСреднегоФСС(РасчетныеГоды, ДанныеДокумента.ПричинаНетрудоспособности, ВсегоДнейБолезниУходаЗаДетьми);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаТекущийИтог);
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("ВсегоЗаработка", Формат(ВсегоЗаработка, "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
		ЗначенияПараметров.Вставить("УчитываемыхДнейВКалендарныхГодах", УчитываемыхДнейВКалендарныхГодах);
		Если УчитываемыхДнейВКалендарныхГодах > 0 Тогда
			ЗначенияПараметров.Вставить("Средний", Формат(Окр(ВсегоЗаработка / УчитываемыхДнейВКалендарныхГодах, 2), "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
		Иначе
			ЗначенияПараметров.Вставить("Средний", 0);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ОбластьМакетаСередина.Параметры, ЗначенияПараметров);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаСередина);
		
		Если ДанныеДокумента.ДоляНеполногоВремени < 1 Тогда
			ТабличныйДокумент.Вывести(ОбластьМакетаНеполноеВремя);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаОкончание);
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеДокументовРасчетаСреднегоЗаработкаФСС(Менеджер, МассивСсылок, ИмяМакета)
	
	ДанныеДокументов = Новый ТаблицаЗначений;
	ДанныеДокументов.Колонки.Добавить("Ссылка");
	ДанныеДокументов.Колонки.Добавить("Организация"); 
	ДанныеДокументов.Колонки.Добавить("ПериодРегистрации");
	ДанныеДокументов.Колонки.Добавить("НачалоРасчетногоПериода");
	ДанныеДокументов.Колонки.Добавить("ОкончаниеРасчетногоПериода");
	ДанныеДокументов.Колонки.Добавить("ПериодРасчетаСреднегоЗаработкаПервыйГод");
	ДанныеДокументов.Колонки.Добавить("ПериодРасчетаСреднегоЗаработкаВторойГод");
	ДанныеДокументов.Колонки.Добавить("МассивСотрудников");
	ДанныеДокументов.Колонки.Добавить("НомерДокумента");
	ДанныеДокументов.Колонки.Добавить("ДатаДокумента");
	ДанныеДокументов.Колонки.Добавить("ДатаНачала");
	ДанныеДокументов.Колонки.Добавить("ДатаОкончания");
	ДанныеДокументов.Колонки.Добавить("ДатаНачалаСобытия");
	ДанныеДокументов.Колонки.Добавить("ОграничиватьЗаработок");
	ДанныеДокументов.Колонки.Добавить("ВыводитьИсключаемыеДни");
	ДанныеДокументов.Колонки.Добавить("РасчетПоПравилам2010Года");
	ДанныеДокументов.Колонки.Добавить("НаименованиеОрганизации");
	ДанныеДокументов.Колонки.Добавить("ДоляНеполногоВремени");
	ДанныеДокументов.Колонки.Добавить("МРОТ");
	ДанныеДокументов.Колонки.Добавить("МинимальныйСреднедневнойЗаработок");
	ДанныеДокументов.Колонки.Добавить("НеполныйРасчетныйПериод");
	ДанныеДокументов.Колонки.Добавить("ПричинаНетрудоспособности");
	
	Менеджер.ЗаполнитьДанныеДокументовДляПечатиРасчетаСреднегоЗаработка(МассивСсылок, ДанныеДокументов, ИмяМакета);
	
	НаименованияОрганизаций = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДанныеДокументов.ВыгрузитьКолонку("Организация"), "НаименованиеПолное,Наименование");
	
	Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
		НаименованияОрганизации = НаименованияОрганизаций.Получить(ДанныеДокумента.Организация);
		Если ЗначениеЗаполнено(НаименованияОрганизации.НаименованиеПолное) Тогда              
			ДанныеДокумента.НаименованиеОрганизации = НаименованияОрганизации.НаименованиеПолное;
		Иначе 
			ДанныеДокумента.НаименованиеОрганизации = НаименованияОрганизации.Наименование;
		КонецЕсли;
	КонецЦикла;	

	Возврат ДанныеДокументов
	
КонецФункции

Функция ДанныеРасчетаСреднийЗаработокФСС(ДанныеДокумента, ДанныеОНачислениях, ДанныеОВремени, ОграничиватьЗаработок) 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Годы = Новый Массив;
	Годы.Добавить(ДанныеДокумента.ПериодРасчетаСреднегоЗаработкаПервыйГод);
	Годы.Добавить(ДанныеДокумента.ПериодРасчетаСреднегоЗаработкаВторойГод);
	
	УчетПособийСоциальногоСтрахования.СоздатьВТПредельнаяВеличинаБазы(МенеджерВременныхТаблиц, Годы);
	
	ТекстЗапроса =  
		"ВЫБРАТЬ
		|	ГОД(ВТПериоды.Период) КАК РасчетныйГод
		|ПОМЕСТИТЬ ВТРасчетныеГоды
		|ИЗ
		|	ВТПериоды КАК ВТПериоды
		|ГДЕ
		|	ГОД(ВТПериоды.Период) В (&Годы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОНачислениях.Ссылка,
		|	ДанныеОНачислениях.ФизическоеЛицо,
		|	ДанныеОНачислениях.Период,
		|	ГОД(ДанныеОНачислениях.Период) КАК Год,
		|	ДанныеОНачислениях.Сумма КАК Заработок
		|ПОМЕСТИТЬ ВТДанныеОНачисления
		|ИЗ
		|	&ДанныеОНачислениях КАК ДанныеОНачислениях
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОВремени.Ссылка,
		|	ДанныеОВремени.ФизическоеЛицо,
		|	ГОД(ДанныеОВремени.Период) КАК Год,
		|	ДанныеОВремени.Период,
		|	ДанныеОВремени.ДнейБолезниУходаЗаДетьми
		|ПОМЕСТИТЬ ВТДанныеОВремени
		|ИЗ
		|	&ДанныеОВремени КАК ДанныеОВремени
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСреднего2011.ДатаОграниченияЗаработка,
		|	ДанныеСреднего2011.РасчетныйГод
		|ПОМЕСТИТЬ ВТДанныеРасчетаСреднего2011
		|ИЗ
		|	(ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ДанныеОНачислениях.Период, ГОД) КАК ДатаОграниченияЗаработка,
		|		ДанныеОНачислениях.Год КАК РасчетныйГод
		|	ИЗ
		|		ВТДанныеОНачисления КАК ДанныеОНачислениях
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ДанныеОНачислениях.Период, ГОД),
		|		ДанныеОНачислениях.Год) КАК ДанныеСреднего2011
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеСреднего2011.ДатаОграниченияЗаработка,
		|	ДанныеСреднего2011.РасчетныйГод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ОграничиватьЗаработок
		|			ТОГДА ЕСТЬNULL(ПредельнаяВеличинаБазыСтраховыхВзносов.Размер, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПредельнаяВеличина,
		|	ДатыРегистра.РасчетныйГод КАК Год
		|ПОМЕСТИТЬ ВТПредельнаяВеличинаЗаработкаПоГодам
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДанныеРегистра.РасчетныйГод КАК РасчетныйГод,
		|		ДанныеРегистра.ДатаОграниченияЗаработка КАК ДатаОграниченияЗаработка,
		|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Год) КАК ПериодРегистра
		|	ИЗ
		|		ВТДанныеРасчетаСреднего2011 КАК ДанныеРегистра
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличинаБазы КАК ПредельнаяВеличинаБазыСтраховыхВзносов
		|			ПО (ГОД(ДанныеРегистра.ДатаОграниченияЗаработка) >= ПредельнаяВеличинаБазыСтраховыхВзносов.Год)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеРегистра.ДатаОграниченияЗаработка,
		|		ДанныеРегистра.РасчетныйГод) КАК ДатыРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличинаБазы КАК ПредельнаяВеличинаБазыСтраховыхВзносов
		|		ПО ДатыРегистра.ПериодРегистра = ПредельнаяВеличинаБазыСтраховыхВзносов.Год
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОНачисления.Год КАК РасчетныйГод,
		|	ДанныеОНачисления.Заработок КАК Заработок,
		|	ДанныеОВремени.ДнейБолезниУходаЗаДетьми КАК ДнейБолезниУходаЗаДетьми,
		|	"""" КАК НаименованиеСтрахователя,
		|	ПредельнаяВеличинаЗаработкаПоГодам.ПредельнаяВеличина КАК ПредельнаяВеличина,
		|	ЛОЖЬ КАК СтороннийСтрахователь
		|ПОМЕСТИТЬ ВТДанныеРасчетаСреднего
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОНачисления.Год КАК Год,
		|		СУММА(ДанныеОНачисления.Заработок) КАК Заработок
		|	ИЗ
		|		ВТДанныеОНачисления КАК ДанныеОНачисления
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеОНачисления.Год) КАК ДанныеОНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДанныеОВремени.Год КАК Год,
		|			СУММА(ДанныеОВремени.ДнейБолезниУходаЗаДетьми) КАК ДнейБолезниУходаЗаДетьми
		|		ИЗ
		|			ВТДанныеОВремени КАК ДанныеОВремени
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ДанныеОВремени.Год) КАК ДанныеОВремени
		|		ПО ДанныеОНачисления.Год = ДанныеОВремени.Год
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличинаЗаработкаПоГодам КАК ПредельнаяВеличинаЗаработкаПоГодам
		|		ПО ДанныеОНачисления.Год = ПредельнаяВеличинаЗаработкаПоГодам.Год
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетныеГоды.РасчетныйГод,
		|	ЕСТЬNULL(ДанныеРасчетаСреднего.Заработок, 0) КАК Заработок,
		|	ЕСТЬNULL(ДанныеРасчетаСреднего.ДнейБолезниУходаЗаДетьми, 0) КАК ДнейБолезниУходаЗаДетьми,
		|	ЕСТЬNULL(ДанныеРасчетаСреднего.НаименованиеСтрахователя, """") КАК НаименованиеСтрахователя,
		|	ЕСТЬNULL(ДанныеРасчетаСреднего.ПредельнаяВеличина, 0) КАК ПредельнаяВеличина,
		|	ЕСТЬNULL(ДанныеРасчетаСреднего.СтороннийСтрахователь, ЛОЖЬ) КАК СтороннийСтрахователь
		|ИЗ
		|	ВТРасчетныеГоды КАК РасчетныеГоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРасчетаСреднего КАК ДанныеРасчетаСреднего
		|		ПО РасчетныеГоды.РасчетныйГод = ДанныеРасчетаСреднего.РасчетныйГод";
	
	Запрос = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВтПериоды(
		НачалоДня(ДанныеДокумента.НачалоРасчетногоПериода),
		КонецДня(ДанныеДокумента.ОкончаниеРасчетногоПериода),
		"ГОД", , , Истина);
		
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Годы",Годы);
	Запрос.УстановитьПараметр("ДанныеОНачислениях", ДанныеОНачислениях);
	Запрос.УстановитьПараметр("ДанныеОВремени", ДанныеОВремени);
	Запрос.УстановитьПараметр("ОграничиватьЗаработок", ОграничиватьЗаработок);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТекстЗапросаТаблицСреднегоФСС(ОписаниеДокумента)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СреднийЗаработокФСС.Ссылка,
		|	СреднийЗаработокФСС.ФизическоеЛицо,
		|	СреднийЗаработокФСС.Период,
		|	СреднийЗаработокФСС.Сумма
		|ИЗ
		|	&СреднийЗаработокФСС КАК СреднийЗаработокФСС
		|ГДЕ
		|	СреднийЗаработокФСС.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтработанноеВремяДляСреднегоФСС.Ссылка,
		|	ОтработанноеВремяДляСреднегоФСС.ФизическоеЛицо,
		|	ОтработанноеВремяДляСреднегоФСС.Период,
		|	ОтработанноеВремяДляСреднегоФСС.ДнейБолезниУходаЗаДетьми
		|ИЗ
		|	&ОтработанноеВремяДляСреднегоФСС КАК ОтработанноеВремяДляСреднегоФСС
		|ГДЕ
		|	ОтработанноеВремяДляСреднегоФСС.Ссылка = &Ссылка";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СреднийЗаработокФСС", "Документ." + ОписаниеДокумента.ИмяДокумента + ".СреднийЗаработокФСС");	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтработанноеВремяДляСреднегоФСС", "Документ." + ОписаниеДокумента.ИмяДокумента + ".ОтработанноеВремяДляСреднегоФСС");	
	
	Возврат ТекстЗапроса;
	
КонецФункции	
	
#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

Функция ТаблицыДанныхОСреднемЗаработкеПоСотруднику(Сотрудник, ТаблицыДанныхОСреднемЗаработке)
	
	Отбор = Новый Структура("Сотрудник", Сотрудник);
	
	ТаблицыНачислений 	= ТаблицыДанныхОСреднемЗаработке["ДанныеОНачислениях"];
	ТаблицыВремени 		= ТаблицыДанныхОСреднемЗаработке["ДанныеОВремени"];

	СтрокиТаблицыНачислений = ТаблицыНачислений.НайтиСтроки(Отбор);
	СтрокиТаблицыВремени 	= ТаблицыВремени.НайтиСтроки(Отбор); 
	
	Если СтрокиТаблицыНачислений.Количество() > 0 Тогда
		ТаблицаНачислений = ТаблицыНачислений.Скопировать(СтрокиТаблицыНачислений);
	Иначе 	
		ТаблицаНачислений = ТаблицыНачислений.СкопироватьКолонки();
	КонецЕсли;
	
	Если СтрокиТаблицыВремени.Количество() > 0 Тогда
		ТаблицаВремени = ТаблицыВремени.Скопировать(СтрокиТаблицыВремени);
	Иначе 	
		ТаблицаВремени = ТаблицыВремени.СкопироватьКолонки();
	КонецЕсли;
	
	Возврат Новый Структура("ДанныеОНачислениях, ДанныеОВремени", ТаблицаНачислений, ТаблицаВремени);
	
КонецФункции

#КонецОбласти

#КонецЕсли