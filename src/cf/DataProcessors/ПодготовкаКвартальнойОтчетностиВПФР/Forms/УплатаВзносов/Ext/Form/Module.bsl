
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Организация = Параметры.Организация;
	ОтчетныйПериод = Параметры.ОтчетныйПериод;
	ОтчетныйПериодПредставление = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ОтчетныйПериод);
	
	УстановитьНастройкиДинамическогоСписка();
	
	ДополнитьФорму();
	
	ЗаполнитьИнформацмюПоРасчетамСФондами();
	
	УстановитьНастройкиКомандФормы();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийТаблицыФормыУплатавзносов

&НаКлиенте
Процедура УплатаВзносовПриИзменении(Элемент)
	Модифицированность = Истина;
	ЗаполнитьИнформацмюПоРасчетамСФондами();
КонецПроцедуры

&НаКлиенте
Процедура УплатаВзносовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Этаформа.ДоступенСписокДокументовУплаты;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерераспределитьВзносы(Команда)
	Если Модифицированность Тогда
		ПараметрОповещения = Новый Структура("Организация, ОтчетныйПериод", Организация, ОтчетныйПериод);
		Оповестить("ИзменениеУплатыВзносовПФР", ПараметрОповещения);
	КонецЕсли;	
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДополнитьФорму()
	ДобавляемыеРеквизиты = Новый Массив;
	
	РеквизитДоступенСписокДокументовУплаты = Новый РеквизитФормы("ДоступенСписокДокументовУплаты", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(РеквизитДоступенСписокДокументовУплаты);

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиКомандФормы()
	Этаформа.ДоступенСписокДокументовУплаты = Ложь;
	
	Если Не ПустаяСтрока(РасчетыСФондами.ОсновнаяТаблица) Тогда
		ОбъектМетаданныхОсновнойТаблицы = Метаданные.НайтиПоПолномуИмени(РасчетыСФондами.ОсновнаяТаблица);
		
		Если Метаданные.Документы.Содержит(ОбъектМетаданныхОсновнойТаблицы) Тогда
			Этаформа.ДоступенСписокДокументовУплаты = Истина;
		КонецЕсли;
	КонецЕсли;		
	
	Если Не Этаформа.ДоступенСписокДокументовУплаты Тогда 
		Элементы.ПерераспределитьВзносы.Видимость = Ложь;
		Элементы.Отмена.Заголовок = НСтр("ru = 'Закрыть'");
		Элементы.Отмена.КнопкаПоУмолчанию = Истина;
		Элементы.УплатаВзносов.ТолькоПросмотр = Истина;
		Элементы.УплатаВзносов.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура УстановитьНастройкиДинамическогоСписка()
	ОписаниеИсточникаДанных = УчетСтраховыхВзносов.ОписаниеИсточникаДанныхУплатаВзносов();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИсточникДанных.ДатаПлатежа КАК ДатаПлатежа,
	|	ИсточникДанных.ВидПлатежа КАК ВидПлатежа,
	|	ИсточникДанных.Сумма КАК СуммаПлатежа,
	|	ИсточникДанных.ПлатежЗарегистрирован КАК ПлатежЗарегистрирован,
	|	ИсточникДанных.Организация КАК Организация
	|ИЗ
	|	#ИсточникДанных КАК ИсточникДанных
	|ГДЕ
	|	&Условие
	|	И ИсточникДанных.ДатаПлатежа МЕЖДУ &ДатаНачалаОтчетногоПериода И &ДатаОкончанияОтчетногоПериода
	|	И ИсточникДанных.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая), ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная))";
	
	ТекстУсловия = "";
	
	Для Каждого ЭлементОтбора Из ОписаниеИсточникаДанных.Отбор Цикл
		ТекстУсловия = ТекстУсловия + " И " + "ИсточникДанных." + ЭлементОтбора.Поле + ЭлементОтбора.ВидСравнения + "&" + ЭлементОтбора.Поле;
	КонецЦикла;
		
	ТекстУсловия = Сред(ТекстУсловия, 3);
	
	Если ПустаяСтрока(ТекстУсловия) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие", ТекстУсловия);
	КонецЕсли;	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".ДатаПлатежа", "." + ОписаниеИсточникаДанных.ИмяПоляДатаПлатежа);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".ВидПлатежа", "." + ОписаниеИсточникаДанных.ИмяПоляВидПлатежа);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Сумма", "." + ОписаниеИсточникаДанных.ИмяПоляСумма);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Организация", "." + ОписаниеИсточникаДанных.ИмяПоляОрганизация);
	
	Если ЗначениеЗаполнено(ОписаниеИсточникаДанных.ИмяПоляПлатежЗарегистрирован) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".ПлатежЗарегистрирован", "." + ОписаниеИсточникаДанных.ИмяПоляПлатежЗарегистрирован);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИсточникДанных.ПлатежЗарегистрирован", "ИСТИНА");	
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИсточникДанных", ОписаниеИсточникаДанных.ИмяТаблицы);

	РасчетыСФондами.ТекстЗапроса = ТекстЗапроса;
	
	Для Каждого ЭлементОтбора Из ОписаниеИсточникаДанных.Отбор Цикл
		ПараметрКомпоновкиДанных = РасчетыСФондами.Параметры.Элементы.Найти(ЭлементОтбора.Поле);
		ПараметрКомпоновкиДанных.Значение = ЭлементОтбора.Значение;
		ПараметрКомпоновкиДанных.Использование  = Истина;
	КонецЦикла;
		
	ЭлементОтбора = РасчетыСФондами.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Организация;
		
	ПараметрКомпоновкиДанных = РасчетыСФондами.Параметры.Элементы.Найти("ДатаНачалаОтчетногоПериода");
	ПараметрКомпоновкиДанных.Значение = ОтчетныйПериод;
	ПараметрКомпоновкиДанных.Использование  = Истина;
	
	ПараметрКомпоновкиДанных = РасчетыСФондами.Параметры.Элементы.Найти("ДатаОкончанияОтчетногоПериода");
	ПараметрКомпоновкиДанных.Значение = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	ПараметрКомпоновкиДанных.Использование  = Истина;
	
	Если ОписаниеИсточникаДанных.ИспользоватьОсновнуюТаблицуДинамическогоСписка Тогда
		РасчетыСФондами.ОсновнаяТаблица = ОписаниеИсточникаДанных.ИмяТаблицы;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьИнформацмюПоРасчетамСФондами()
	ДанныеПоРасчетамСФондами = РасчетыСФондами();
	УплаченоПФРНакопительная = ДанныеПоРасчетамСФондами.УплаченоПФРНакопительная;
	УплаченоПФРСтраховая = ДанныеПоРасчетамСФондами.УплаченоПФРСтраховая;
	ОстатокПФРСтраховая = ДанныеПоРасчетамСФондами.ОстатокПФРСтраховая;
	ОстатокПФРНакопительная = ДанныеПоРасчетамСФондами.ОстатокПФРНакопительная;
	
	Если ДанныеПоРасчетамСФондами.ОстатокПФРСтраховая = 0 Тогда
		ИнфоУплатаСтраховая = НСтр("ru = 'Задолженность или переплата отсутствует'");
	ИначеЕсли ДанныеПоРасчетамСФондами.ОстатокПФРСтраховая > 0 Тогда 
		ИнфоУплатаСтраховая = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Задолженность с учетом прошлых периодов составляет %1 руб.'"),
			Формат(ДанныеПоРасчетамСФондами.ОстатокПФРСтраховая, ""));
	Иначе 
		ИнфоУплатаСтраховая = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Переплата с учетом прошлых периодов составляет %1 руб.'"),
			Формат(-ДанныеПоРасчетамСФондами.ОстатокПФРСтраховая, ""));	
	КонецЕсли;	
		
	Если ДанныеПоРасчетамСФондами.ОстатокПФРНакопительная = 0 Тогда
		ИнфоУплатаНакопительная = НСтр("ru = 'Задолженность или переплата отсутствует'");
	ИначеЕсли ДанныеПоРасчетамСФондами.ОстатокПФРНакопительная > 0 Тогда 
		ИнфоУплатаНакопительная = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Задолженность с учетом прошлых периодов составляет %1 руб.'"),
			Формат(ДанныеПоРасчетамСФондами.ОстатокПФРНакопительная, ""));
	Иначе 
		ИнфоУплатаНакопительная = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Переплата с учетом прошлых периодов составляет %1 руб.'"),
			Формат(-ДанныеПоРасчетамСФондами.ОстатокПФРНакопительная, ""));	
	КонецЕсли;				
КонецПроцедуры

&НаСервере
Функция РасчетыСФондами()
	ДанныеПоРасчетамСФондами = Новый Структура;
	ДанныеПоРасчетамСФондами.Вставить("УплаченоПФРНакопительная", 0);
	ДанныеПоРасчетамСФондами.Вставить("УплаченоПФРСтраховая", 0);
	ДанныеПоРасчетамСФондами.Вставить("ОстатокПФРСтраховая", 0);
	ДанныеПоРасчетамСФондами.Вставить("ОстатокПФРНакопительная", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ОтчетныйПериод);
	Запрос.УстановитьПараметр("ДатаОкончания", ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|					ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК УплаченоПФРСтраховая,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная)
	|					ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК УплаченоПФРНакопительная
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			ЭтоСтраховыеВзносы
	|				И Организация = &Организация
	|				И ВидОбязательногоСтрахованияСотрудников В (ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая), ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная))) КАК РасчетыСФондамиПоСтраховымВзносамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондамиПоСтраховымВзносамОстатки.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|					ТОГДА РасчетыСФондамиПоСтраховымВзносамОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОстатокПФРСтраховая,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА РасчетыСФондамиПоСтраховымВзносамОстатки.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная)
	|					ТОГДА РасчетыСФондамиПоСтраховымВзносамОстатки.СуммаОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОстатокПФРНакопительная
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&ДатаОкончания,
	|			ЭтоСтраховыеВзносы
	|				И Организация = &Организация
	|				И ВидОбязательногоСтрахованияСотрудников В (ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая), ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная))) КАК РасчетыСФондамиПоСтраховымВзносамОстатки";
	
	УплаченоПФРНакопительная = 0;
	УплаченоПФРСтраховая = 0;
	ОстатокСтраховая = 0;
	ОстатокНакопительная = 0;
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Если Не Результаты[0].Пустой() Тогда
		ВыборкаПоУплате = Результаты[0].Выбрать();
		ВыборкаПоУплате.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеПоРасчетамСФондами, ВыборкаПоУплате);
	КонецЕсли;	
	
	Если Не Результаты[1].Пустой() Тогда
		ВыборкаПоОстаткам = Результаты[1].Выбрать();
		ВыборкаПоОстаткам.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеПоРасчетамСФондами, ВыборкаПоОстаткам);
	КонецЕсли;	

	Возврат ДанныеПоРасчетамСФондами;	
	
КонецФункции	

#КонецОбласти
