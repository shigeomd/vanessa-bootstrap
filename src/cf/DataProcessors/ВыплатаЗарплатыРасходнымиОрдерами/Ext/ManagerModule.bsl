#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура Автозаполнение(ПараметрыЗаполнения, АдресХранилища) Экспорт
	
	Объект    = ПараметрыЗаполнения.Объект;
	ПлатежнаяВедомость = Объект.ПлатежнаяВедомость;
	Ведомости = Новый Массив;
	Ведомости.Добавить(ПлатежнаяВедомость);
	ТаблицаВыплатыЗарплаты = УчетЗарплаты.ПолучитьДанныеВедомостейДляОплатыТаблично(,Ведомости,,Ложь);
	
	Если ТаблицаВыплатыЗарплаты.Количество() = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По документу %1 нет сумм к выплате!'"), ПлатежнаяВедомость);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ПлатежнаяВедомость);
		Объект.РКО.Очистить();
		РезультатВыполнения = Новый Структура("Объект", Объект);
		ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
		Возврат;
	КонецЕсли;
					
		
	ТекстЗапрос = 	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплаты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьНаВыплатуЗарплаты.Ведомость КАК Ведомость,
	|	(ВедомостьНаВыплатуЗарплаты.КомпенсацияЗаЗадержкуЗарплаты + ВедомостьНаВыплатуЗарплаты.СуммаКВыплате) КАК ИтогоКВыплате
	|ПОМЕСТИТЬ ЗарплатаКВыплатеОрганизаций
	|ИЗ
	|	&ВедомостьНаВыплатуЗарплаты КАК ВедомостьНаВыплатуЗарплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗарплатаКВыплатеОрганизаций.ФизическоеЛицо,
	|	ЕСТЬNULL(ЕСТЬNULL(РасходныйКассовыйОрдер.Ссылка, РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка), &ПустойРКО) КАК РКО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЕСТЬNULL(РасходныйКассовыйОрдер.Проведен, РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.Проведен), ЛОЖЬ) = ИСТИНА
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Отметка,
	|	СУММА(ЗарплатаКВыплатеОрганизаций.ИтогоКВыплате) КАК Сумма
	|ПОМЕСТИТЬ ВТ_РасходныеДокументы
	|ИЗ
	|	ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО ЗарплатаКВыплатеОрганизаций.Ведомость = РасходныйКассовыйОрдер.ПлатежнаяВедомость
	|			И ЗарплатаКВыплатеОрганизаций.ФизическоеЛицо = РасходныйКассовыйОрдер.Контрагент
	|			И (РасходныйКассовыйОрдер.ВидОперации = &ВыплатаЗаработнойПлатыРаботнику)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
	|		ПО ЗарплатаКВыплатеОрганизаций.Ведомость = РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость
	|			И (РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.ВидОперации = &ВыплатаЗаработнойПлатыПоВедомостям)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОрганизаций.ФизическоеЛицо,
	|	РасходныйКассовыйОрдер.Ссылка,
	|	РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЕСТЬNULL(РасходныйКассовыйОрдер.Проведен, РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.Проведен), ЛОЖЬ) = ИСТИНА
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасходныеДокументы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_РасходныеДокументы.РКО КАК РКО,
	|	ВТ_РасходныеДокументы.Отметка КАК Отметка,
	|	ВТ_РасходныеДокументы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВТ_РасходныеДокументы.РКО = &ПустойРКО
	|			ТОГДА 3
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_РасходныеДокументы.РКО.Проведен
	|					ТОГДА 1
	|				КОГДА ВТ_РасходныеДокументы.РКО.ПометкаУдаления
	|					ТОГДА 2
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СостояниеДокумета
	|ИЗ
	|	ВТ_РасходныеДокументы КАК ВТ_РасходныеДокументы";	
	
	Запрос = Новый Запрос(ТекстЗапрос);
	Запрос.УстановитьПараметр("ВедомостьНаВыплатуЗарплаты",   ТаблицаВыплатыЗарплаты);	
	Запрос.УстановитьПараметр("ПустойРКО",Документы.РасходныйКассовыйОрдер.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВыплатаЗаработнойПлатыРаботнику",Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику);
	Запрос.УстановитьПараметр("ВыплатаЗаработнойПлатыПоВедомостям",Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям);
	         
	Объект.РКО = Запрос.Выполнить().Выгрузить();
	
	РезультатВыполнения = Новый Структура("Объект", Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СоздатьРКО(ПараметрыСоздания, АдресХранилища) Экспорт
	
	Объект                        = ПараметрыСоздания.Объект;
	Организация                   = Объект.Организация;
	ПлатежнаяВедомость            = Объект.ПлатежнаяВедомость;
	СтатьяДвиженияДенежныхСредств = Объект.СтатьяДвиженияДенежныхСредств;
	ДатаРКО                       = Объект.ДатаРКО;
	РКО                           = Объект.РКО;
	
	ВалютаРегламентированногоУчета        = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Основание = "Платежная ведомость №" + ПлатежнаяВедомость.Номер + " от " + ПлатежнаяВедомость.Дата;
	
	СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		
		Если СтрокаТаблицы.Отметка И НЕ ЗначениеЗаполнено(СтрокаТаблицы.РКО) Тогда
			
			ДокументРКО = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
			ДокументРКО.Дата		 		= ДатаРКО;
			ДокументРКО.ВидОперации			= Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику;
			ДокументРКО.СуммаДокумента		= СтрокаТаблицы.Сумма;
			ДокументРКО.Контрагент			= СтрокаТаблицы.ФизическоеЛицо;
			ДокументРКО.ВалютаДокумента		= ВалютаРегламентированногоУчета;
			ДокументРКО.СчетКасса			= СчетКасса;
			ДокументРКО.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
			ДокументРКО.ПлатежнаяВедомость	= ПлатежнаяВедомость;
			ДокументРКО.Основание			= Основание;
			ДокументРКО.Организация			= Организация;
			
		    ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ДокументРКО.Организация, ДокументРКО.Контрагент, ДокументРКО.Дата, Ложь);
			
			ДокументРКО.Выдать              =  ДанныеФизЛица.Представление;
			ДокументРКО.ПоДокументу         =  ДанныеФизЛица.ПредставлениеДокумента;
			
			ДокументРКО.Записать();
			
			СтрокаТаблицы.РКО	= ДокументРКО.Ссылка;
			СтрокаТаблицы.СостояниеДокумета	= 0;
						
		КонецЕсли;
		
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура("Объект", Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура ПровестиРКО(ПараметрыПроведения, АдресХранилища) Экспорт

	Объект = ПараметрыПроведения.Объект;
	РКО    = Объект.РКО;
	
	Отказ = Ложь;

	Для Каждого СтрокаТаблицы Из РКО Цикл
		Если СтрокаТаблицы.Отметка и ЗначениеЗаполнено(СтрокаТаблицы.РКО) Тогда
			ДокументРКО = СтрокаТаблицы.РКО.ПолучитьОбъект();
			Если ДокументРКО.ПометкаУдаления Тогда
				ДокументРКО.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
			Попытка
				ДокументРКО.Записать(РежимЗаписиДокумента.Проведение);
				СтрокаТаблицы.СостояниеДокумета	= 1;
			Исключение
				ТекстСообщения = НСтр("ru = 'Не удалось провести документ: %1'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(ДокументРКО));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецПопытки;
			СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
		КонецЕсли;
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура("Отказ, Объект", Отказ, Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

#КонецЕсли