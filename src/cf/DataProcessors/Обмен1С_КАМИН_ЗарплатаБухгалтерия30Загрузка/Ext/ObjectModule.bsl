#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Обработчики загрузки конвертации 1С-КАМИН:Зарплата 5.0 --> 1С:Бухгалтерия предприятия 3.0 {a5f031b2-6f25-11e1-9610-001cc04fa7c4}                                                                  
// 
// Данный модуль содержит экспортные процедуры обработчиков событий конвертации 
// и предназначен для отладки правил обмена. После отладки рекомендуется
// скопировать текст модуля в буфер обмена и импортировать его в базу
// "Конвертация данных".
//
////////////////////////////////////////////////////////////////////////////////
// ИСПОЛЬЗУЕМЫЕ СОКРАЩЕНИЯ ИМЕН ПЕРЕМЕННЫХ (АББРЕВИАТУРЫ)
//
//  ПКО  - правило конвертации объектов
//  ПКС  - правило конвертации свойств объектов
//  ПКГС - правило конвертации группы свойств объектов
//  ПВД  - правило выгрузки данных
//  ПОД  - правило очистки данных

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБРАБОТКИ
// Данный раздел изменять запрещено.

Перем Параметры;
Перем Алгоритмы;
Перем Запросы;
Перем УзелДляОбмена;
Перем ОбщиеПроцедурыФункции;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ (ГЛОБАЛЬНЫЕ)
// В данном разделе разрешено изменять реализацию процедур.

Процедура Конвертация_ПередЗагрузкойДанных(ФайлОбмена, Отказ) Экспорт

	Параметры.Вставить("ОсновнаяОрганизация", БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
	
	ЗагруженныеОрганизации = Новый Массив();
	Параметры.Вставить("ЗагруженныеОрганизации", ЗагруженныеОрганизации);
	
	ТаблицаЗагруженныхОбъектов = Новый ТаблицаЗначений();
	ТаблицаЗагруженныхОбъектов.Колонки.Добавить("ЗагружаемыйОбъект");
	ТаблицаЗагруженныхОбъектов.Колонки.Добавить("Ссылка");
	ТаблицаЗагруженныхОбъектов.Колонки.Добавить("ПараметрыОбъекта");
	
	Параметры.Вставить("ТаблицаЗагруженныхОбъектов", ТаблицаЗагруженныхОбъектов);

КонецПроцедуры

Процедура Конвертация_ПослеЗагрузкиДанных() Экспорт

	БухгалтерскийУчетПереопределяемый.УстановитьПараметрыУчетаРасчетовПоЗарплате(Ложь);
	БухгалтерскийУчетПереопределяемый.УстановитьУчетЗарплатыИКадровВоВнешнейПрограмме(Истина);
	БухгалтерскийУчетПереопределяемый.УстановитьНастройкиКадровогоУчета(Ложь, Ложь);
	
	МассивОрганизаций = Параметры.ЗагруженныеОрганизации;
	СоздатьУчетнуюПолитикуПоУмолчаниюДляОрганизаций (МассивОрганизаций);
	
	ПроверитьЗначениеОпцииИспНесколькихОрганизаций ();
	
	Для Каждого СтрокаТаблицы Из Параметры.ТаблицаЗагруженныхОбъектов Цикл
		
		Для Каждого Параметр Из СтрокаТаблицы.ПараметрыОбъекта Цикл
	
			Попытка
				Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
				Отбор.СтруктурнаяЕдиница = СтрокаТаблицы.ЗагружаемыйОбъект;
				ВидДолжности = Перечисления.ОтветственныеЛицаОрганизаций[СтрЗаменить(Параметр.Ключ,"ОтветственныеЛица","")];
				Отбор.ОтветственноеЛицо = ВидДолжности;
				СрезПоследних = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(ТекущаяДата(), Отбор);
				
				ПериодЗаписи = ТекущаяДата();
				
				МОЛ = Параметр.Значение;
				
				Если ЗначениеЗаполнено(МОЛ)
					И (СрезПоследних.Количество() < 1
					ИЛИ МОЛ <> СрезПоследних[0].ФизическоеЛицо) Тогда 
					
					МенеджерЗаписи = РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.Период             = ПериодЗаписи;
					МенеджерЗаписи.СтруктурнаяЕдиница = ?(ЗначениеЗаполнено(СтрокаТаблицы.Ссылка), СтрокаТаблицы.Ссылка, СтрокаТаблицы.ЗагружаемыйОбъект.Ссылка);
					МенеджерЗаписи.ОтветственноеЛицо  = ВидДолжности;
					МенеджерЗаписи.ФизическоеЛицо     = МОЛ;
					МенеджерЗаписи.Записать();
					
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура Конвертация_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан,ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура Конвертация_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта,
	ОбъектМодифицирован, ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура Конвертация_ПриПолученииИнформацииОбУдалении(Объект, Отказ) Экспорт

	МетаданныеОбъекта = Объект.Метаданные();
	
	Если Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда
		
		Отказ  = Истина;
		
		УстановитьПометкуУдаленияУОбъекта(Объект, Истина, "Справочник");
		
	ИначеЕсли Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда
		
		Отказ  = Истина;
		
		Если Объект.Проведен Тогда
			
			ОтменитьПроведениеОбъектаВИБ(Объект, ТипЗнч(Объект));
			
		КонецЕсли;
		
		Если НЕ Объект.Проведен Тогда
			
			УстановитьПометкуУдаленияУОбъекта(Объект, Истина, "Документ");
			
		КонецЕсли;
		
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		
		Отказ  = Истина;
		
		УстановитьПометкуУдаленияУОбъекта(Объект, Истина, "ПланВидовХарактеристик");
		
	КонецЕсли;

КонецПроцедуры

Процедура Конвертация_ПослеЗагрузкиПараметров(ФайлОбмена, Отказ, ПричинаОтказа) Экспорт

	

КонецПроцедуры

Процедура Конвертация_ПослеПолученияИнформацииОбУзлахОбмена(УзелОбменаЗагрузкаДанных) Экспорт

	Параметры.Вставить("УзелОбменаЗагрузкаДанных", УзелОбменаЗагрузкаДанных);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКО_ВедомостьНаВыплатуЗарплаты_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВедомостьНаВыплатуЗарплаты_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВедомостьНаВыплатуЗарплаты_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВедомостьНаВыплатуЗарплаты_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыДокументовФизическихЛиц_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыДокументовФизическихЛиц_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыДокументовФизическихЛиц_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыДокументовФизическихЛиц_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыКонтактнойИнформации_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыКонтактнойИнформации_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыКонтактнойИнформации_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ВидыКонтактнойИнформации_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ДокументыФизическихЛиц_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ДокументыФизическихЛиц_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ДокументыФизическихЛиц_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ДокументыФизическихЛиц_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_Должности_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_Должности_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_Должности_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_Должности_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_Контрагенты_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_Контрагенты_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_Контрагенты_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	
	Если Не Объект.ЭтоГруппа И Не ЗначениеЗаполнено(Объект.Ссылка.СтранаРегистрации) Тогда
		Объект.СтранаРегистрации = Справочники.СтраныМира.НайтиПоНаименованию("РОССИЯ");
	КонецЕсли;

КонецПроцедуры

Процедура ПКО_Контрагенты_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_Организации_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_Организации_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_Организации_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	Если Не ОбъектНайден Тогда
		Объект.ВидОбменаСКонтролирующимиОрганами = Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменОтключен;
		Параметры.ЗагруженныеОрганизации.Добавить(Объект);
	КонецЕсли;
	
	Если РежимЗагрузкиДанныхВИнформационнуюБазу() Тогда
		НоваяСтрока = Параметры.ТаблицаЗагруженныхОбъектов.Добавить();
		НоваяСтрока.ЗагружаемыйОбъект = Объект;
		НоваяСтрока.ПараметрыОбъекта  = ПараметрыОбъекта;
		НоваяСтрока.Ссылка = Ссылка;
	КонецЕсли;

КонецПроцедуры

Процедура ПКО_Организации_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ОтражениеЗарплаты_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ОтражениеЗарплаты_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ОтражениеЗарплаты_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ОтражениеЗарплаты_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПодразделенияОрганизаций_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПодразделенияОрганизаций_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПодразделенияОрганизаций_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПодразделенияОрганизаций_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПолФизическогоЛица_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПолФизическогоЛица_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПолФизическогоЛица_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ПолФизическогоЛица_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_Сотрудники_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_Сотрудники_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_Сотрудники_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_Сотрудники_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_СпособыОтраженияЗарплатыВБухУчете_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_СпособыОтраженияЗарплатыВБухУчете_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_СпособыОтраженияЗарплатыВБухУчете_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_СпособыОтраженияЗарплатыВБухУчете_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ТипыКонтактнойИнформации_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ТипыКонтактнойИнформации_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ТипыКонтактнойИнформации_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ТипыКонтактнойИнформации_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

Процедура ПКО_ФИОФизическихЛиц_ПередЗагрузкойОбъекта(ФайлОбмена, Отказ, Нпп, Источник, ИмяПравила, Правило,
	ГенерироватьНовыйНомерИлиКодЕслиНеУказан, ТипОбъектаСтрокой, ТипОбъекта,
	НеЗамещатьОбъект, РежимЗаписи, РежимПроведения) Экспорт

	

КонецПроцедуры

Процедура ПКО_ФИОФизическихЛиц_ПриЗагрузкеОбъекта(ФайлОбмена, ОбъектНайден, Объект, НеЗамещатьОбъект, ОбъектМодифицирован) Экспорт

	

КонецПроцедуры

Процедура ПКО_ФИОФизическихЛиц_ПослеЗагрузкиОбъекта(ФайлОбмена, Отказ, Ссылка, Объект, ПараметрыОбъекта, ОбъектМодифицирован,
	ИмяТипаОбъекта, ОбъектНайден) Экспорт

	

КонецПроцедуры

Процедура ПКО_ФИОФизическихЛиц_ПоследовательностьПолейПоиска(НомерВариантаПоиска, СвойстваПоиска, ПараметрыОбъекта, ПрекратитьПоиск,
	СсылкаНаОбъект, УстанавливатьУОбъектаВсеСвойстваПоиска, СтрокаИменСвойствПоиска) Экспорт

	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ГРУПП СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ВЫГРУЗКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЧИСТКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПАРАМЕТРОВ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// АЛГОРИТМЫ
// Данный раздел разрешено изменять.
// Также допустимо размещать процедуры с алгоритмами в любом из разделов выше.

Процедура ПроверитьЗначениеОпцииИспНесколькихОрганизаций() Экспорт

	
	Справочники.Организации.ОбновитьИспользуемыеВидыОрганизаций();
	
	Если Не Справочники.Организации.ИспользуетсяНесколькоОрганизаций()
		И Справочники.Организации.КоличествоОрганизаций() > 1 Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		Константы.ИспользоватьНесколькоОрганизаций.Установить(Истина);
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьУчетнуюПолитикуПоУмолчаниюДляОрганизаций(МассивОрганизаций) Экспорт

	Для каждого ОрганизацияОбъект Из МассивОрганизаций Цикл
		
		Если ТипЗнч(ОрганизацияОбъект) <> Тип("СправочникОбъект.Организации")
			ИЛИ Не ЗначениеЗаполнено(ОрганизацияОбъект.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			Организация = ОрганизацияОбъект.Ссылка; 
			
			НаборЗаписей = РегистрыСведений.УчетнаяПолитикаОрганизаций.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Организация);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаНабораЗаписей = НаборЗаписей.Добавить();
			СтрокаНабораЗаписей.Активность = Истина;
			СтрокаНабораЗаписей.Период = НачалоГода(ТекущаяДата());
			
			ЭтоФизЛицо	= Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
			СистемаНалогообложения = "Общая";
			
			ДанныеЗаполнения = Новый Структура("Организация", Организация);
			
			ДанныеЗаполнения.Вставить("СистемаНалогообложения", Перечисления.СистемыНалогообложения.Общая);
			ДанныеЗаполнения.Вставить("ПрименяетсяУСН", Ложь);
			ДанныеЗаполнения.Вставить("ПрименяетсяУСНДоходы", Ложь);
			ДанныеЗаполнения.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Ложь);
			ДанныеЗаполнения.Вставить("ПрименяетсяУСНПатент", Ложь);
			ДанныеЗаполнения.Вставить("ПлательщикНалогаНаПрибыль", Истина);
			ДанныеЗаполнения.Вставить("ПлательщикНДС", Истина);
			ДанныеЗаполнения.Вставить("ПлательщикЕНВД", Ложь);
			Если ЭтоФизЛицо Тогда
				ДанныеЗаполнения.Вставить("СпособОценкиМПЗ", Перечисления.СпособыОценки.ФИФО);
			КонецЕсли;
			
			РегистрыСведений.УчетнаяПолитикаОрганизаций.УстановкаПараметровУчетнойПолитикиПоУмолчанию(СтрокаНабораЗаписей, ДанныеЗаполнения);
			РегистрыСведений.УчетнаяПолитикаОрганизаций.УстановкаПараметровУчетнойПолитикиПоУмолчаниюНаПериод(СтрокаНабораЗаписей);
			
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
			НаборЗаписей.Записать();
			
			// Часть учетной политики - список прямых расходов для целей исчисления налога на прибыль
			Если Не ЭтоФизЛицо И СистемаНалогообложения = "Общая" Тогда
				РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Настроить(
					Организация,
					НачалоГода(СтрокаНабораЗаписей.Период),
					Ложь, // Не копировать записи предыдущего периода
					Ложь
				);// Не перезаписывать записи, если они уже есть
			КонецЕсли;
			
		Исключение
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
// Данный раздел изменять запрещено.

// Устанавливает значение параметра "Загрузка" для свойства объекта "ОбменДанными".
//
// Параметры:
//  Объект   - объект, для которого устанавливается свойство
//  Значение - значение устанавливаемого свойства "Загрузка"
// 
Процедура УстановитьОбменДаннымиЗагрузка(Объект, Значение = Истина, Знач ОтправкаНазад = Ложь)

	ОбщиеПроцедурыФункции.УстановитьОбменДаннымиЗагрузка(Объект, Значение, ОтправкаНазад);
	
КонецПроцедуры

// Записывает объект в информационную базу.
//
// Параметры:
//	Объект - Записываемый объект.
//	Тип - Строка - Тип объекта строкой.
// 
Процедура ЗаписатьОбъектВИБ(Объект, Тип, ЗаписатьОбъект = Ложь, Знач ОтправкаНазад = Ложь)

	ОбщиеПроцедурыФункции.ЗаписатьОбъектВИБ(Объект, Тип, ЗаписатьОбъект, ОтправкаНазад);
	
КонецПроцедуры

// Отменяет проведение объекта в информационной базе.
//
// Параметры:
//	Объект - Объект для отмены проведения.
//	Тип - Строка - Тип объекта строкой.
//
Процедура ОтменитьПроведениеОбъектаВИБ(Объект, Тип, ЗаписатьОбъект = Ложь)

	ОбщиеПроцедурыФункции.ОтменитьПроведениеОбъектаВИБ(Объект, Тип, ЗаписатьОбъект);
	
КонецПроцедуры

// Выгружает регистр по отбору.
// 
// Парметры:
//	НаборЗаписейДляВыгрузки - Структура или НаборЗаписей - Отбор
//
Процедура ВыгрузитьРегистр(НаборЗаписейДляВыгрузки, 
							Правило = Неопределено, 
							ВходящиеДанные = Неопределено, 
							НеВыгружатьОбъектыПоСсылкам = Ложь, 
							ИмяПКО = "",
							ПравилоВыгрузкиДанных = Неопределено)
							
	ОбщиеПроцедурыФункции.ВыгрузитьРегистр(НаборЗаписейДляВыгрузки, Правило, ВходящиеДанные, НеВыгружатьОбъектыПоСсылкам, ИмяПКО, ПравилоВыгрузкиДанных);

КонецПроцедуры

// Устанавливает пометку удаления.
//
// Параметры:
//	Объект - Объект для установки пометки.
//	ПометкаУдаления - Булево - Флаг пометки удаления.
//	ИмяТипаОбъекта - Строка - Тип объекта строкой.
//
Процедура УстановитьПометкуУдаленияУОбъекта(Объект, ПометкаУдаления, ИмяТипаОбъекта)
	
	ОбщиеПроцедурыФункции.УстановитьПометкуУдаленияУОбъекта(Объект, ПометкаУдаления, ИмяТипаОбъекта);
	
КонецПроцедуры

// Создает в файле обмена запись об удалении объекта.
//
// Параметры:
//	Ссылка - Ссылка на удаляемый объект.
//	ТипПриемника - Строка - Содрежит строковое представление типа приемника.
//	ТипИсточника - Строка - Содрежит строковое представление типа источника.
// 
Процедура ЗаписатьВФайлУдалениеОбъекта(Ссылка, Знач ТипПриемника, Знач ТипИсточника)
	
	ОбщиеПроцедурыФункции.ЗаписатьВФайлУдалениеОбъекта(Ссылка, ТипПриемника, ТипИсточника);
	
КонецПроцедуры

// Добавляет в xml файл информацию о типах значения
//
// Параметры:
//	Приемник - xml-узел объекта приемника
//	Тип - Строка - выгружаемый тип
//
Процедура ВыгрузитьИнформациюОТипах(Приемник, Тип) Экспорт
	
	ОбщиеПроцедурыФункции.ВыгрузитьИнформациюОТипах(Приемник, Тип);
	
КонецПроцедуры

// Регистрирует объект, созданный при выгрузке.
//
// Параметры:
//	Ссылка - Ссылка на регистрируемый объект.
// 
Процедура ЗарегистрироватьОбъектСозданныйПриВыгрузке(Ссылка)
	
	ОбщиеПроцедурыФункции.ЗарегистрироватьОбъектСозданныйПриВыгрузке(Ссылка);
	
КонецПроцедуры

// Регистрирует предупреждение в журнале регистрации.
// Если в процессе обмена данными было обращение к этой процедуре, то обмен данными остановлен не будет.
// После завершения обмена статус выполнения обмена в мониторе для пользователя будет иметь значение "Предупреждение", если не было ошибок.
//
// Параметры:
//  Предупреждение - Строка. Текст предупреждения, который надо зарегистрировать.
// Информация, предупреждения и ошибки, возникающие в процессе обмена данными регистрируются в журнале регистрации.
// 
Процедура ЗарегистрироватьПредупреждение(Предупреждение)
	
	ОбщиеПроцедурыФункции.ЗарегистрироватьПредупреждение(Предупреждение);
	
КонецПроцедуры

// Служебная. Инициализирует переменные, необходимые для отладки
//
// Параметры:
//  Владелец - Обработка КонвертацияОбъектовИнформационныхБаз
//
Процедура ПодключитьОбработкуДляОтладки(Владелец) Экспорт

	Параметры            	 = Владелец.Параметры;
	ОбщиеПроцедурыФункции	 = Владелец;
	Запросы              	 = Владелец.Запросы;
	УзелДляОбмена		 	 = Владелец.УзелДляОбмена;

КонецПроцедуры

// Производит выгрузку объекта в соответствии с указанным правилом конвертации
//
// Параметры:
//  Источник				 - произвольный источник данных
//  Приемник				 - xml-узел объекта приемника
//  ВходящиеДанные			 - произвольные вспомогательные данные, передаваемые правилу
//                             для выполнения конвертации
//  ИсходящиеДанные			 - произвольные вспомогательные данные, передаваемые правилам
//                             конвертации свойств
//  ИмяПКО					 - имя правила конвертации, согласно которому осуществляется выгрузка
//
// Возвращаемое значение:
//  xml-узел ссылки или значение приемника
//
Функция ВыгрузитьПоПравилу(Источник					= Неопределено,
						   Приемник					= Неопределено,
						   ВходящиеДанные			= Неопределено,
						   ИсходящиеДанные			= Неопределено,
						   ИмяПКО					= "")
						   
	Возврат ОбщиеПроцедурыФункции.ВыгрузитьПоПравилу(Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО);

КонецФункции

// Признак того, что это загрузка в информационную базу.
// 
// Возвращаемое значение:
//	Булево - Признак режима загрузки данных
// 
Функция РежимЗагрузкиДанныхВИнформационнуюБазу()
	
	Возврат ОбщиеПроцедурыФункции.РежимЗагрузкиДанныхВИнформационнуюБазу();
	
КонецФункции

#КонецЕсли
