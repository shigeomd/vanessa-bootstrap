
// Хранение контекста взаимодействия с сервисом
&НаКлиенте
Перем КонтекстВзаимодействия Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапускИПППриСтарте = Ложь;
	
	МониторИнтернетПоддержкиПереопределяемый.ИспользоватьОтображениеМонитораПриНачалеРаботы(
		ЗапускИПППриСтарте);
	
	Элементы.ГруппаНастройкаЗапускатьПриСтарте.Видимость = (ЗапускИПППриСтарте = Истина);
	
	ХранилищеОбщихНастроек.Сохранить(
		"ИнтернетПоддержкаПользователей",
		"ХэшОбновленияИнформационногоОкна",
		Параметры.ХэшИнформацииМонитора);
	
	ЗаголовокПользователя = Строка(Параметры.login);
	
	Элементы.НадписьЛогина.Заголовок = ЗаголовокПользователя;
	Элементы.НадписьЛогина.Подсказка = НСтр("ru = 'Логин текущего пользователя Интернет-поддержки:'")
		+ " " + ЗаголовокПользователя;
	
	ФормированиеФормы(Параметры);
	
	НастройкаЗапуска = ХранилищеОбщихНастроек.Загрузить(
		"ИнтернетПоддержкаПользователей",
		"ВсегдаПоказыватьПриСтартеПрограммы");
	
	Если НастройкаЗапуска = Неопределено Тогда
		НастройкаПоказПриСтарте = 0;
	ИначеЕсли НастройкаЗапуска = Истина Тогда
		ПоказыватьПриОбновлении = ХранилищеОбщихНастроек.Загрузить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении");
		Если ПоказыватьПриОбновлении = Истина Тогда
			НастройкаПоказПриСтарте = 1;
		Иначе
			НастройкаПоказПриСтарте = 0;
		КонецЕсли;
	Иначе
		НастройкаПоказПриСтарте = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнтернетПоддержкаПользователейКлиент.ОбработатьОткрытиеФормы(КонтекстВзаимодействия, ЭтотОбъект);
	
#Если ВебКлиент Тогда
	ПоказатьПредупреждение(,
		НСтр("ru = 'В веб-клиенте некоторые ссылки могут работать неправильно.
			|Приносим извинения за неудобства.'"),
		,
		НСтр("ru = 'Интернет-поддержка пользователей'"));
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если НЕ ПрограммноеЗакрытие Тогда
		ИнтернетПоддержкаПользователейКлиент.ЗавершитьБизнесПроцесс(КонтекстВзаимодействия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьВыходаНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОбработатьВыходПользователя(КонтекстВзаимодействия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура HTMLДокументПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ДанныеАктивногоЭлемента = Элемент.Документ.activeElement;
	Если ДанныеАктивногоЭлемента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		КлассАктивногоЭлемента = ДанныеАктивногоЭлемента.HRef;
	Исключение
		Возврат;
	КонецПопытки;
	
	Попытка
		ТаргетЭлемента = ДанныеАктивногоЭлемента.target;
	Исключение
		ТаргетЭлемента = Неопределено;
	КонецПопытки;
	
	Попытка
		ЗаголовокЭлемента = ДанныеАктивногоЭлемента.innerHTML;
	Исключение
		ЗаголовокЭлемента = Неопределено;
	КонецПопытки;
	
	Если ТаргетЭлемента <> Неопределено Тогда
		
		Если НРег(СокрЛП(ТаргетЭлемента)) = "_blank" Тогда
			СтандартнаяОбработка = Ложь;
			ИнтернетПоддержкаПользователейКлиент.ОткрытьИнтернетСтраницу(
				КлассАктивногоЭлемента,
				ЗаголовокЭлемента);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Найти(НРег(СокрЛП(КлассАктивногоЭлемента)),"openupdate") <> 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ВерсияОбработкиОбновления = ИнтернетПоддержкаПользователейКлиентСервер.ВерсияОбработкиОбновления();
		
		Если ПустаяСтрока(ВерсияОбработкиОбновления) Тогда
			ПоказатьПредупреждение(
				,
				НСтр("ru = 'Отсутствует механизм автоматического обновления.'"));
			Возврат;
		КонецЕсли;
		
		СообщениеОбОшибке = "";
		ИмяОсновнойФормыОбработкиОбновления = ИмяОсновнойФормыОбработкиОбновленияКонфигурации(
			СообщениеОбОшибке);
		
		Если ИмяОсновнойФормыОбработкиОбновления <> Неопределено Тогда
			ОткрытьФорму(ИмяОсновнойФормыОбработкиОбновления);
		Иначе
			Если НЕ ПустаяСтрока(СообщениеОбОшибке) Тогда
				ПоказатьПредупреждение(, СообщениеОбОшибке);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Найти(Нрег(СокрЛП(КлассАктивногоЭлемента)), "problemupdate") <> 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		ИнтернетПоддержкаПользователейКлиент.ОткрытьДиалогОтправкиЭлектронногоПисьма(
			КонтекстВзаимодействия,
			ПараметрыСообщенияВТехПоддержкуОбновление());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПоказПриСтартеПриИзменении(Элемент)
	
	НастройкаПоказПриСтартеПриИзмененииНаСервере(НастройкаПоказПриСтарте);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет адрес обозревателя
&НаСервере
Процедура ФормированиеФормы(ПараметрыФормы)
	
	Если ПараметрыФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УРЛ = Неопределено;
	ПараметрыФормы.Свойство("УРЛ", УРЛ);
	
	Если УРЛ <> Неопределено Тогда
		HTMLДокумент = УРЛ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НастройкаПоказПриСтартеПриИзмененииНаСервере(НастройкаПоказПриСтарте)
	
	Если НастройкаПоказПриСтарте = 0 Тогда
		ХранилищеОбщихНастроек.Сохранить(
			"ИнтернетПоддержкаПользователей",
			"ВсегдаПоказыватьПриСтартеПрограммы",
			Истина);
		ХранилищеОбщихНастроек.Сохранить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении",
			Ложь);
	ИначеЕсли НастройкаПоказПриСтарте = 1 Тогда
		ХранилищеОбщихНастроек.Сохранить(
			"ИнтернетПоддержкаПользователей",
			"ВсегдаПоказыватьПриСтартеПрограммы",
			Истина);
		ХранилищеОбщихНастроек.Сохранить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении",
			Истина);
	Иначе
		ХранилищеОбщихНастроек.Сохранить(
			"ИнтернетПоддержкаПользователей",
			"ВсегдаПоказыватьПриСтартеПрограммы",
			Ложь);
		ХранилищеОбщихНастроек.Сохранить(
			"ИнтернетПоддержкаПользователей",
			"ПоказПриСтартеТолькоПриИзменении",
			Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяОсновнойФормыОбработкиОбновленияКонфигурации(СообщениеОбОшибке)
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ОбновлениеКонфигурации") Тогда
		СообщениеОбОшибке = НСтр("ru = 'Отсутствует механизм автоматического обновления.'");
		ИнтернетПоддержкаПользователейВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
			НСтр("ru = 'Ошибка при вызове автоматического обновления. Отсутствует механизм автоматического обновления.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	МетаданныеОбработка = Метаданные.Обработки.Найти("ОбновлениеКонфигурации");
	Если МетаданныеОбработка = Неопределено Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Отсутствует механизм автоматического обновления.'");
		
		ИнтернетПоддержкаПользователейВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
			НСтр("ru = 'Ошибка при вызове автоматического обновления. В метаданных отсутствует обработка ОбновлениеКонфигурации.'"));
		
		Возврат Неопределено;
		
	Иначе
		
		МетаданныеОсновнаяФорма = МетаданныеОбработка.ОсновнаяФорма;
		Если МетаданныеОсновнаяФорма <> Неопределено Тогда
			Возврат МетаданныеОсновнаяФорма.ПолноеИмя();
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Ошибка при вызове автоматического обновления.
				|Подробнее см. в журнале регистрации.'");
			ИнтернетПоддержкаПользователейВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
				НСтр("ru = 'Ошибка при вызове автоматического обновления. Отсутствует основная форма обработки ОбновлениеКонфигурации.'"));
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПараметрыСообщенияВТехПоддержкуОбновление()
	
	Результат = Новый Структура;
	Результат.Вставить("Тема", НСтр("ru = 'Интернет-поддержка. Проблемы с обновлением конфигурации.'"));
	
	ТекстСообщения = Нстр("ru = 'Здравствуйте.
		|При обновлении конфигурации на новый релиз возникли следующие проблемы:
		|
		|
		|Логин: %1
		|Регистрационный номер: %2
		|
		|%ТехническиеПараметры%
		|-----------------------------------------------
		|С уважением, .'");
	
	ЛогинПользователя = ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(
		КонтекстВзаимодействия.КСКонтекст,
		"login");
	
	РегНомер = ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(
		КонтекстВзаимодействия.КСКонтекст,
		"regnumber");
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстСообщения,
		ЛогинПользователя,
		РегНомер);
	
	Результат.Вставить("ТекстСообщения", ТекстСообщения);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
