////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаКлиенте
Процедура ОбработкаВыбораЗначения()
	
	ТекущиеДанные = Элементы.СписокОснований.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Недоступен Тогда 
		ПоказатьПредупреждение( , НСтр("ru='Этот документ уже выбран'"));
		Возврат;
	КонецЕсли;
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Документ"     , ТекущиеДанные.Документ);
	СтруктураВыбора.Вставить("Подразделение", ТекущиеДанные.ПодразделениеОрганизации);
	СтруктураВыбора.Вставить("Договор"      , ТекущиеДанные.ДоговорКонтрагента);
	СтруктураВыбора.Вставить("Валюта"       , ТекущиеДанные.ВалютаДокумента);
	
	ОповеститьОВыборе(СтруктураВыбора);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ
//

&НаКлиенте
Процедура Изменить(Команда)
	
	Если Элементы.СписокОснований.ТекущиеДанные <> Неопределено Тогда
		Документ = Элементы.СписокОснований.ТекущиеДанные.Документ;
		ПоказатьЗначение( , Документ);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ СписокОснований
//

&НаКлиенте
Процедура СписокОснованийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначения();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере()
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Контрагент) Тогда
		ВызватьИсключение НСтр("ru='Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	УстановленоПодразделение = Ложь;
	УстановленДоговор        = Ложь;
	УстановленаВалюта        = Ложь;
	
	СписокПодобранныхОснований = Параметры.ПодобранныеОснования;
	
	ОтборОрганизация = Параметры.Организация;
	ОтборКонтрагент  = Параметры.Контрагент;
	
	ЭтоВыданныйСчетФактура = Ложь;
	
	ТипыОснований = Документы.ТипВсеСсылки();
	
	Если Параметры.ТипСчетаФактуры = "Выданный" Тогда
		ЭтоВыданныйСчетФактура = Истина;
		ТипыОснований = УчетНДСПереопределяемый.ПолучитьСписокТиповПоВидуСчетаФактурыВыставленного(
			Параметры.ВидСчетаФактуры, Параметры.Исправление);
	ИначеЕсли Параметры.ТипСчетаФактуры = "Полученный" Тогда
		ТипыОснований = УчетНДСПереопределяемый.ПолучитьСписокТиповПоВидуСчетаФактурыПолученного(
			Параметры.ВидСчетаФактуры, Параметры.Исправление);
	КонецЕсли;
	
	СписокОснований.Параметры.УстановитьЗначениеПараметра("ТипыОснований"     , ТипыОснований);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Организация"       , ОтборОрганизация);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Контрагент"        , ОтборКонтрагент);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("ТекущийСчетФактура", Параметры.СчетФактура);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Выданный"          , ЭтоВыданныйСчетФактура);
	СписокОснований.Параметры.УстановитьЗначениеПараметра("Выбранные"         , СписокПодобранныхОснований.ВыгрузитьЗначения());
	СписокОснований.Параметры.УстановитьЗначениеПараметра("ВидОперации"       , ?(Параметры.Исправление,
		Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки,
		Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение));
	
	Элементы.СписокОснований.ТекущаяСтрока = Параметры.ТекущийДокумент;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработкаВыбораЗначения();
	
КонецПроцедуры

