&НаКлиенте
Перем КонтекстЭДОКлиент;

&НаКлиенте
Перем ДанныеЗаполнения;

&НаКлиенте
Перем ДанныеОрганизации;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗначенийПолучатели = Параметры.Получатели;
	
	Для каждого СтрокаСпискаПолучателей Из СписокЗначенийПолучатели Цикл
		НоваяСтрока = Получатели.Добавить();
		НоваяСтрока.ТипПолучателя 	= Перечисления.ТипыКонтролирующихОрганов.ФНС;
		НоваяСтрока.КодПолучателя 	= СтрокаСпискаПолучателей.Значение;
		НоваяСтрока.КПП 			= СтрокаСпискаПолучателей.Представление;
	КонецЦикла;
	
	Организация = Параметры.Организация;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	// Заполняем текущие реквизиты организации 
	СтруктураРеквизитов = Новый Структура("Организация, ПриОткрытии", Организация, НЕ ДанныеЗаполнения = Неопределено);
	Если ДанныеЗаполнения <> Неопределено Тогда
		СтруктураРеквизитов.Вставить("АдресЮридический",);
		СтруктураРеквизитов.Вставить("АдресФактический",);
	КонецЕсли;
	КонтекстЭДОКлиент.ЗаполнитьДанные(СтруктураРеквизитов);
	ДанныеЗаполнения = КонтекстЭДОКлиент.ПолучитьДанныеЗаполнения(СтруктураРеквизитов);
	ДанныеОрганизации = ДанныеЗаполнения.СтруктураДанныхОрганизации;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ПОЛУЧАТЕЛИ

&НаКлиенте
Процедура ПолучателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	РедактироватьВыбранноеНаправление();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КнопкаОтмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОК(Команда)
	
	СписокЗначенийПолучатели = Новый СписокЗначений;
	
	Для каждого СтрокаСпискаПолучателей Из Получатели Цикл
		СписокЗначенийПолучатели.Добавить(СтрокаСпискаПолучателей.КодПолучателя, СтрокаСпискаПолучателей.КПП);
	КонецЦикла;
	
	Закрыть(СписокЗначенийПолучатели);
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНаправления(Команда)
	
	ТекстВопроса = НСтр("ru = 'Восстановить значения кодов по умолчанию?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановитьНаправленияЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНаправленияЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		Получатели.Очистить();
		ВосстановитьНаправленияПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаправление(Команда)
	Отбор = Новый Структура("ТипПолучателя", ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	
	НаправлениеДействие = "Добавить";
	
	ОткрытьФормуНаправления();
	
	Элементы.УдалитьНаправление.Доступность = Получатели.Количество() <> 0;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаправление(Команда)
	
	ТекущаяСтрока = Элементы.Получатели.ТекущаяСтрока;
	
	Если КонтекстЭДОКлиент.ТекущаяСтрокаВыбрана(Получатели,ТекущаяСтрока,"удаления") Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Удалить направление %1?'"),Элементы.Получатели.ТекущиеДанные.ТипПолучателя);
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьНаправлениеЗавершение", ЭтотОбъект, ТекущаяСтрока);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаправлениеЗавершение(КодВозврата, ТекущаяСтрока) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		ЭлементКоллекции = Получатели.НайтиПоИдентификатору(ТекущаяСтрока);
		ИндексЭлементаКоллекции = Получатели.Индекс(ЭлементКоллекции);
		Получатели.Удалить(ИндексЭлементаКоллекции);
		Элементы.УдалитьНаправление.Доступность = Получатели.Количество() <> 0;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьНаправление(Команда)
	РедактироватьВыбранноеНаправление();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОткрытьФормуНаправления(ТекущаяСтрока = Неопределено)
	
	КонтекстЭДОКлиент.ОткрытьФормуНаправленияДляФНС(ЭтаФорма,ТекущаяСтрока,КонтекстЭДОКлиент,ДанныеОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьВыбранноеНаправление()
	ТекущаяСтрока = Элементы.Получатели.ТекущаяСтрока;
	
	Если КонтекстЭДОКлиент.ТекущаяСтрокаВыбрана(Получатели,ТекущаяСтрока,"редактирования") Тогда
		ЭлементКоллекции = Получатели.НайтиПоИдентификатору(ТекущаяСтрока);
		НаправлениеДействие = "Редактировать";
		ОткрытьФормуНаправления(ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНаправленияПоУмолчанию()
	КонтекстЭДОКлиент.ВосстановитьНаправленияПоУмолчанию(Получатели,ДанныеОрганизации,Истина);
	Элементы.УдалитьНаправление.Доступность = Получатели.Количество() <> 0;
КонецПроцедуры

