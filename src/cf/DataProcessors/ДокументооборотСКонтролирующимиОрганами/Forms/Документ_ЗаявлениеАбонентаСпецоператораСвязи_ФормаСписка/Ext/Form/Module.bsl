&НаКлиенте
Перем КонтекстЭДОКлиент Экспорт;

&НаКлиенте
Процедура КомандаМастерНастройки(Команда)

	Организация = Неопределено;
	Отбор = Список.Отбор.Элементы;
	
	Для каждого  ЭлементОтбора из Отбор Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") и ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			Организация = ЭлементОтбора.ПравоеЗначение;	
		КонецЕсли;	
	КонецЦикла;	
	
	// Открытие первичного мастера
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Организация", Организация);
	ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаПодключение", ПараметрыФормы, ЭтаФорма);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗаявление(СсылкаНаОбъект)
	Объект = СсылкаНаОбъект.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(Объект, "ДокументЗаявление");
КонецПроцедуры

&НаКлиенте
Процедура КомандаТестОтправить(Команда)
	СсылкаНаОбъект = ЭтаФорма.Элементы.Список.ТекущиеДанные.Ссылка;
	ПолучитьЗаявление(СсылкаНаОбъект);
	КонтекстЭДОКлиент.СформироватьИОтправитьЗаявление(ДокументЗаявление);
КонецПроцедуры

&НаКлиенте
Процедура КомандаРучнаяНастройка(Команда)
	ПараметрыФормы = Новый Структура("РучнойВвод",Истина);
	ОткрытьФорму("Документ.ЗаявлениеАбонентаСпецоператораСвязи.ФормаОбъекта",ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьСтатусыЗаявлений(Команда)
	
	ОрганизацияЗаявлений = Неопределено;
	Если Список.Отбор.Элементы.Количество() > 0 Тогда
		// Обновляем только по списку организаций
		Отборы = Список.Отбор.Элементы;
		Для каждого Отбор Из Отборы Цикл
			Если Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") Тогда
				ОрганизацияЗаявлений = Отбор.ПравоеЗначение;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
		
	КонтекстЭДОКлиент.РегистрацияПолучитьОтветНаЗаявление(,,,ЭтаФорма.УникальныйИдентификатор,,ОрганизацияЗаявлений);
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьДокумент(СсылкаНаОбъект)
	Документ = СсылкаНаОбъект.ПолучитьОбъект();
	Документ.Статус = Перечисления.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отклонено;
	Документ.СтатусКомментарий = "Отменено пользователем.";
	Попытка
		Документ.Записать();
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось изменить статус для документа ""%1"", причина:
                 |%2'"), СсылкаНаОбъект, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ДействияФормыИзменитьСтатус(Команда)
	Данные = ЭтаФорма.Элементы.Список.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		ПоказатьПредупреждение(, "Выберите заявление для изменения статуса !");
	ИначеЕсли Данные.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено") 
		И Данные.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Отправлено") Тогда
		ПоказатьПредупреждение(, "Ручное изменение статуса возможно только для заявлений со статусом <Подготовлено> или <Отправлено> !")
	Иначе
		ДополнительныеПараметры = Новый Структура("Данные", Данные);
		ОписаниеОповещения = Новый ОписаниеОповещения("ДействияФормыИзменитьСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = "Отменить заявление? 
			|
			|Отмена необратима, получение ответа на заявление и создание учетной записи станет невозможным.";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияФормыИзменитьСтатусЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Данные = ДополнительныеПараметры.Данные;
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОбновитьДокумент(Данные.Ссылка);
		ОповеститьОбИзменении(Данные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияФормыПечатьЗаявка(Команда)
	
	
	Для каждого Документ Из ЭтаФорма.Элементы.Список.ВыделенныеСтроки Цикл	
		
		КонтекстЭДОКлиент.ПечатьЗаявленияНаПодключение(Документ);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияФормыПечатьСоглашение(Команда)
	
	Для каждого Документ Из ЭтаФорма.Элементы.Список.ВыделенныеСтроки Цикл
		
		КонтекстЭДОКлиент.ПечатьСоглашенияобОказанииУслуг(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияФормыПечатьЛицензия(Команда)
	
	Для каждого Документ Из ЭтаФорма.Элементы.Список.ВыделенныеСтроки Цикл
		
		КонтекстЭДОКлиент.ПечатьЛицензииОбИспользованииПО(Документ);
		
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ДействияФормыПечатьСертификат(Команда)
	
	Для каждого Документ Из ЭтаФорма.Элементы.Список.ВыделенныеСтроки Цикл
		
		КонтекстЭДОКлиент.ПечатьСертификатаПользователя(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеФормыПечатьПакет(Команда)
	
	МассивДокументов =  ЭтаФорма.Элементы.Список.ВыделенныеСтроки;
	ПечатьПакетаДокумента(МассивДокументов, 0);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьПакетаДокумента(МассивДокументов, НомерОбъекта)

	Если НомерОбъекта + 1 <= МассивДокументов.Количество() Тогда
		Документ = МассивДокументов[НомерОбъекта];
		ДополнительныеПараметры = Новый Структура("МассивДокументов, НомерОбъекта", МассивДокументов, НомерОбъекта);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьПакетаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		КонтекстЭДОКлиент.ПечатьПакетаДокументов(Документ, ОписаниеОповещения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПечатьПакетаДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	НомерОбъекта = ДополнительныеПараметры.НомерОбъекта;
	МассивДокументов = ДополнительныеПараметры.МассивДокументов;
	
	ПечатьПакетаДокумента(МассивДокументов, НомерОбъекта + 1);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		Элементы.Список.ПодчиненныеЭлементы.КраткоеНаименование.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаМастерФормированияЗаявкиНаИзменениеПараметровПодключения(Команда)
	
	Организация = Неопределено;
	Отбор = Список.Отбор.Элементы;
	
	Для каждого  ЭлементОтбора из Отбор Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") и ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			Организация = ЭлементОтбора.ПравоеЗначение;	
		КонецЕсли;	
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Организация) и  ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ПараметрыФормы = Новый Структура("Организация", Организация);
	КонецЕсли;
	
	ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаИзменениеПараметровПодключения",ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Ссылка = ТекущиеДанные.Ссылка;
		Если Поле.Имя = "Статус" Тогда
			
			СтандартнаяОбработка = Ложь;
			
			// Проверяем, было ли отправлено заявление
			СостояниеСдачиОтчетностиВСписке = ТекущиеДанные.Статус;
			Если СостояниеСдачиОтчетностиВСписке = ПредопределенноеЗначение("Перечисление.СтатусыЗаявленияАбонентаСпецоператораСвязи.Подготовлено") Тогда
				ТекстПредупреждения = НСтр("ru = 'Просмотр подробной информации о состоянии заявления 
												 |возможен только после его отправки'");
				ПоказатьПредупреждение(,ТекстПредупреждения);
				Возврат;
			КонецЕсли;
			
			КонтекстЭДОКлиент.ПоказатьФормуСтатусовОтправки(Ссылка);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
