&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСервисПослеАвтонастройки(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;
	
	АдресСервиса = ДополнительныеПараметры.АдресСервиса;
	
	КонтекстЭДОКлиент.ПерейтиПоСсылкеВИнтернетЭксплорере(АдресСервиса);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАвтонастройку(ВыполняемоеОповещение)
	
	КодРегиона = ВыполняемоеОповещение.ДополнительныеПараметры.КодРегиона;
	МассивОрганизацийДляВыбора = ПолучитьМассивОрганизацийДляВыбора(КодРегиона);
	
	Если МассивОрганизацийДляВыбора.Количество() = 1 Тогда
		Организация = МассивОрганизацийДляВыбора[0];
		УчетнаяЗапись = КонтекстЭДОКлиент.УчетнаяЗаписьОрганизации(Организация);
		ВыполнитьАвтонастройкуУчетнойЗаписи(УчетнаяЗапись, ВыполняемоеОповещение);
		Возврат;
	ИначеЕсли МассивОрганизацийДляВыбора.Количество() > 1 Тогда
		// открытие формы для выбора орагнизации
		// последующая автонастройка учетной записи выбранной организации
		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.ЗагрузитьЗначения(МассивОрганизацийДляВыбора);
		
		ДополнительныеПараметры = Новый Структура("ВыполняемоеОповещение", ВыполняемоеОповещение);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСервисПослеВыбораОрганизации", ЭтотОбъект, ДополнительныеПараметры);
		
		ПараметрыФормы = Новый Структура("СписокОрганизаций", СписокВыбора);
		ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ВыборОрганизацииИОНОнлайн", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
		Возврат;
	Иначе
		//Количество организаций для выбора равно 0
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСервисПослеВыбораОрганизации(Результат, ДополнительныеПараметры) Экспорт
	
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Результат = Неопределено Тогда
		//организация не выбрана                                
		//отменяем открытие сервиса
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Ложь);
		Возврат;
	КонецЕсли;
	
	Организация = Результат;
	УчетнаяЗапись = КонтекстЭДОКлиент.УчетнаяЗаписьОрганизации(Организация);
	ВыполнитьАвтонастройкуУчетнойЗаписи(УчетнаяЗапись, ВыполняемоеОповещение);
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАвтонастройкуУчетнойЗаписи(УчетнаяЗапись, ВыполняемоеОповещение)
	
	ДополнительныеПараметры = Новый Структура("ВыполняемоеОповещение", ВыполняемоеОповещение);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСервисПослеПолученияРезультатовАвтонастройки", ЭтотОбъект, ДополнительныеПараметры);
	//КонтекстЭДОКлиент.АвтоматическаяНастройкаУчетнойЗаписи(УчетнаяЗапись, ,ОписаниеОповещения, , , , Истина);
	//ТЕСТ 
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, Истина);
	//ТЕСТ 
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСервисПослеПолученияРезультатовАвтонастройки(Результат, ДополнительныеПараметры) Экспорт
	
	//не анализируем результат автонастройки
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьМассивОрганизацийДляВыбора(КодРегиона)
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	ТаблицаСвойств = КонтекстЭДОСервер.ПолучитьТаблицуИспользуемыхСпецоператоровУчетныхЗаписейОрганизаций();
	
	Если ТаблицаСвойств.Количество() > 1 Тогда
		
		//добавляем служебную колонку для фильтрации таблицы
		ТаблицаСвойств.Колонки.Добавить("НужноУдалить"); // тип Булево
		
		//убираем из таблицы спецоператоров, которые отсутствут в макете ПараметрыСпецоператоровСвязи
		ОтфильтроватьТаблицуСвойствПоСпецоператору(ТаблицаСвойств);
		
		Если ТаблицаСвойств.Количество() > 1 Тогда
			
			МассивОрганизацийДоФильтраПоКодуНО = ТаблицаСвойств.ВыгрузитьКолонку("Организация");

			//убираем из таблицы строки с неподходящим кодом НО
			ОтфильтроватьТаблицуСвойствПоКодуНО(ТаблицаСвойств, КодРегиона);
			
			Если ТаблицаСвойств.Количество() = 0 Тогда
				//у всех организаций неподходящий кодНО, оставляем выбор на пользователя
				Возврат МассивОрганизацийДоФильтраПоКодуНО;
				
			Иначе
				
				Возврат ТаблицаСвойств.ВыгрузитьКолонку("Организация");
				
			КонецЕсли;
			
		Иначе
			
			Возврат ТаблицаСвойств.ВыгрузитьКолонку("Организация");
			
		КонецЕсли;
		
	Иначе
		
		Возврат ТаблицаСвойств.ВыгрузитьКолонку("Организация");
	
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтфильтроватьТаблицуСвойствПоКодуНО(ТаблицаСвойств, КодРегиона)
	
	Для каждого СтрокаТаблицы Из ТаблицаСвойств Цикл
		
		КодНО = СтрокаТаблицы.КодНО;
		
		Если ЗначениеЗаполнено(КодНО) И Лев(КодНО, 2) = КодРегиона Тогда
			СтрокаТаблицы.НужноУдалить = Ложь;
		Иначе
			СтрокаТаблицы.НужноУдалить = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("НужноУдалить", Истина);
	
	МассивУдаляемыхСтрок = ТаблицаСвойств.НайтиСтроки(СтруктураОтбора);
	
	Для каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТаблицаСвойств.Удалить(УдаляемаяСтрока);  
	КонецЦикла; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтфильтроватьТаблицуСвойствПоСпецоператору(ТаблицаСвойств)
	
	Для каждого СтрокаТаблицы Из ТаблицаСвойств Цикл
		ИдентификаторСпецоператора = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ПолучитьПараметрСпецоператора(СтрокаТаблицы.Спецоператор, "СпецоператорСвязи");
		Если ЗначениеЗаполнено(ИдентификаторСпецоператора) Тогда
			СтрокаТаблицы.НужноУдалить = Ложь;
		Иначе
			СтрокаТаблицы.НужноУдалить = Истина;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("НужноУдалить", Истина);
	
	МассивУдаляемыхСтрок = ТаблицаСвойств.НайтиСтроки(СтруктураОтбора);
	
	Для каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТаблицаСвойств.Удалить(УдаляемаяСтрока);  
	КонецЦикла; 
	
КонецФункции

&НаКлиенте
Процедура ИОНОнлайнМоскваНажатие(Элемент)
	
	ДополнительныеПараметры = Новый Структура("АдресСервиса, КодРегиона", "https://213.24.62.114:443", "77");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСервисПослеАвтонастройки", ЭтотОбъект, ДополнительныеПараметры);
	
	ВыполнитьАвтонастройку(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ИОНОнлайнМосковскаяОбластьНажатие(Элемент)
	
	ДополнительныеПараметры = Новый Структура("АдресСервиса, КодРегиона", "http://213.24.62.98:444", "50");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСервисПослеАвтонастройки", ЭтотОбъект, ДополнительныеПараметры);
	
	ВыполнитьАвтонастройку(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти
