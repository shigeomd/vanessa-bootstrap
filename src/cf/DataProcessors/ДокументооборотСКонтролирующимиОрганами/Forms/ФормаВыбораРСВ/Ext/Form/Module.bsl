&НаСервере
Перем НомерКартинкиПоСтатусу;

&НаКлиенте
Процедура КомандаПродолжить(Команда)
	
	ВыбранныйОтчет = Неопределено;
	
	ВыбраннаяСтрока = Элементы.ЖурналОтчетов.ТекущиеДанные;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ВыбранныйОтчет = ВыбраннаяСтрока.РегламентированныйОтчет;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыбранныйОтчет) Тогда
		ПоказатьПредупреждение(, "Не выбран документ!");
		Возврат;
	КонецЕсли;
	
	Закрыть(ВыбранныйОтчет);

КонецПроцедуры


&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура КомандаУдалитьПривязку(Команда)
	Закрыть(ПустаяСсылкаНаДокумент());
КонецПроцедуры

&НаСервере
Функция ПустаяСсылкаНаДокумент()
	Документы.РегламентированныйОтчет.ПустаяСсылка();
КонецФункции


&НаСервере
Процедура ЗаполнитьСоответствие()
	
	Если НЕ ЗначениеЗаполнено(НомерКартинкиПоСтатусу) Тогда 
		
		НомерКартинкиПоСтатусу = Новый Соответствие;
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыРегламентированныхОтчетов.ВРаботе, 0);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыРегламентированныхОтчетов.Подготовлен, 1);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.ВКонверте, 2);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.Отправлен, 3);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.Доставлен, 4);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.НеПринят, 5);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыОтправки.Сдан, 6);
		НомерКартинкиПоСтатусу.Вставить(Перечисления.СтатусыРегламентированныхОтчетов.Сдан, 6);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСоответствие();
	
	// 
	Если НЕ ЗначениеЗаполнено(Параметры.НачальноеЗначениеВыбора) Тогда
		Элементы.КнопкаУдалитьПривязку.Видимость = Ложь;
	Иначе
		//Элементы.ЖурналОтчетов.ТекущаяСтрока = НачальноеЗначениеВыбора;
	КонецЕсли;
	
	// Заполним ТЗ ЖурналОтчетов
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегламентированныйОтчет.Ссылка КАК РегламентированныйОтчет
	               |ИЗ
	               |	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	               |ГДЕ
	               |	РегламентированныйОтчет.ДатаНачала >= &ДатаНачалаПериода
	               |	И РегламентированныйОтчет.ДатаОкончания <= &ДатаОкончанияПериода
	               |	И РегламентированныйОтчет.Организация = &Организация
	               |	И РегламентированныйОтчет.ИсточникОтчета = &ИсточникОтчета";
	
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ИсточникОтчета", "РегламентированныйОтчетРСВ1");
	Запрос.УстановитьПараметр("ДатаНачалаПериода", НачалоДня(Параметры.ДатаНачалаПериода));
	Запрос.УстановитьПараметр("ДатаОкончанияПериода", КонецДня(Параметры.ДатаОкончанияПериода));
	
	ПромежуточнаяТаблица = Запрос.Выполнить().Выгрузить();
	
	Ссылки = ПромежуточнаяТаблица.ВыгрузитьКолонку(0);
	
	ЖурналОтчетов.Загрузить(ПромежуточнаяТаблица);
	
	СоответствиеОтчетовСтатусам = Новый Соответствие;
	
	//Запрос = Новый Запрос;
	//МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	//Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	ВложенныйЗапрос.ОтчетСсылка КАК Отчет,
	//|	ОтправкиФСС.СтатусОтправки КАК Статус
	//|ПОМЕСТИТЬ втОтправкиФСС
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ОтправкиФСС.ОтчетСсылка КАК ОтчетСсылка,
	//|		МАКСИМУМ(ОтправкиФСС.ДатаОтправки) КАК ДатаОтправки
	//|	ИЗ
	//|		Справочник.ОтправкиФСС КАК ОтправкиФСС
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		ОтправкиФСС.ОтчетСсылка) КАК ВложенныйЗапрос
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОтправкиФСС КАК ОтправкиФСС
	//|		ПО (ОтправкиФСС.ОтчетСсылка = ВложенныйЗапрос.ОтчетСсылка)
	//|			И (ОтправкиФСС.ДатаОтправки = ВложенныйЗапрос.ДатаОтправки)";
	//Запрос.Выполнить();
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СтатусыОтправки) Тогда
	
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РегламентированныйОтчет.Ссылка КАК Отчет,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(СтатусыОтправки.Статус, ИСТИНА) = ИСТИНА
		               |				ИЛИ СтатусыОтправки.Статус = &ПустойСтатусОтправки
		               |			ТОГДА &СтатусПодготовлен
		               |		ИНАЧЕ СтатусыОтправки.Статус
		               |	КОНЕЦ КАК РезультирующийСтатус
		               |ИЗ
		               |	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
		               |		ПО РегламентированныйОтчет.Ссылка = СтатусыОтправки.Объект
		               |ГДЕ
		               |	РегламентированныйОтчет.Ссылка В(&Отчеты)";
		
		Запрос.УстановитьПараметр("СтатусСдан", Перечисления.СтатусыРегламентированныхОтчетов.Сдан);
		Запрос.УстановитьПараметр("СтатусПодготовлен", Перечисления.СтатусыРегламентированныхОтчетов.Подготовлен);
		Запрос.УстановитьПараметр("ПустойСтатусОтправки", Перечисления.СтатусыОтправки.ПустаяСсылка());
		Запрос.УстановитьПараметр("Отчеты", Ссылки);
		
	Иначе
		
		//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	РегламентированныйОтчет.Ссылка КАК Отчет,
		//|	ВЫБОР
		//|		КОГДА СтатусыРегламентированныхОтчетов.Статус = &СтатусПодготовлен
		//|			ТОГДА ВЫБОР
		//|					КОГДА ЕСТЬNULL(втОтправкиФСС.Статус, ИСТИНА) = ИСТИНА
		//|						ТОГДА &СтатусПодготовлен
		//|					ИНАЧЕ втОтправкиФСС.Статус
		//|				КОНЕЦ
		//|		ИНАЧЕ СтатусыРегламентированныхОтчетов.Статус КОНЕЦ КАК РезультирующийСтатус
		//|ИЗ
		//|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыРегламентированныхОтчетов КАК СтатусыРегламентированныхОтчетов
		//|		ПО РегламентированныйОтчет.Ссылка = СтатусыРегламентированныхОтчетов.Отчет
		//|		ЛЕВОЕ СОЕДИНЕНИЕ втОтправкиФСС
		//|		ПО РегламентированныйОтчет.Ссылка = втОтправкиФСС.Отчет
		//|ГДЕ
		//|	РегламентированныйОтчет.Ссылка В(&Отчеты)";
		//
		//Запрос.УстановитьПараметр("СтатусСдан", Перечисления.СтатусыРегламентированныхОтчетов.Сдан);
		//Запрос.УстановитьПараметр("СтатусПодготовлен", Перечисления.СтатусыРегламентированныхОтчетов.Подготовлен);
		//Запрос.УстановитьПараметр("Отчеты", Ссылки);
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеОтчетовСтатусам.Вставить(Выборка.Отчет, Выборка.РезультирующийСтатус);
	КонецЦикла;

	Для Каждого ОформлениеСтроки Из ЖурналОтчетов Цикл
		ИндексКартинки = НомерКартинкиПоСтатусу[СоответствиеОтчетовСтатусам[ОформлениеСтроки.РегламентированныйОтчет]];
		Если ИндексКартинки = Неопределено Тогда
			ИндексКартинки = 0;
		КонецЕсли;
		ОформлениеСтроки.ИндексКартинки = ИндексКартинки + Число(ОформлениеСтроки.РегламентированныйОтчет.ПометкаУдаления = Истина) * 7;
		ОформлениеСтроки.ПредставлениеПериода = ПредставлениеПериода(ОформлениеСтроки.РегламентированныйОтчет.ДатаНачала, КонецДня(ОформлениеСтроки.РегламентированныйОтчет.ДатаОкончания), "ФП=Истина");
	КонецЦикла;

	
КонецПроцедуры


&НаКлиенте
Процедура ЖурналОтчетовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура КомандаОткрыть(Команда)
	
	ТекСтрока = Элементы.ЖурналОтчетов.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ПоказатьЗначение(, ТекСтрока.РегламентированныйОтчет);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЖурналОтчетовПриАктивизацииСтроки(Элемент)
	
	Элементы.КнопкаОткрыть.Доступность = (Элемент.ТекущаяСтрока <> Неопределено);
	Элементы.КнопкаПродолжить.Доступность = (Элемент.ТекущаяСтрока <> Неопределено);

КонецПроцедуры


