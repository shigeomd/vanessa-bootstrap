&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьПрефиксыИБ();
	
	ПрефиксыОрганизаций.Загрузить(Обработки.ПомощникПереходаСРедакции20.ПолучитьТаблицуОрганизацийСПрефиксами());
	
	Для Каждого Организация Из ПрефиксыОрганизаций Цикл
		
		Если Организация.ПрефиксРедакции20 <> Организация.ПрефиксРедакции30 Тогда
			Организация.ПрефиксРедакции30 = "";
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьУникальностьПрефиксов(ПрефиксыОрганизаций, ПрефиксыОрганизацийНеУникальны);
	
	ЗаполнитьТаблицуШагов();
	
	Элементы.ПрефиксИнформационнойБазыРедакции30.Доступность = ПолучитьФункциональнуюОпцию("РаботаВЛокальномРежиме");
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПроверятьВозможностьПерехода = Ложь;
	ПерейтиНаШаг(Неопределено, ПроверятьВозможностьПерехода);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура НадписьОткрытьЖурналРегистрацииНажатие(Элемент)
	
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма", Новый Структура("Пользователь", ИмяПользователя()));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ПрефиксыОрганизаций

&НаКлиенте
Процедура ПрефиксыОрганизацийПрефиксРедакции30ПриИзменении(Элемент)
	
	ПрефиксыОрганизацийПрефиксРедакции30ПриИзмененииНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаДалее(Команда)
	
	ОписаниеШага = ПолучитьОписаниеШага(Элементы.ГруппаПомощник.ТекущаяСтраница);
	Если ОписаниеШага <> Неопределено
		И ЗначениеЗаполнено(ОписаниеШага.ГруппаПомощникаДалее) Тогда
		
		ВыполнитьДействияШагаДалее(Элементы.ГруппаПомощник.ТекущаяСтраница.Имя);
		
		ПроверятьВозможностьПерехода = Истина;
		ПерейтиНаШаг(Элементы[ОписаниеШага.ГруппаПомощникаДалее], ПроверятьВозможностьПерехода);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	ПропуститьПредупреждениеПередЗавершениемРаботыСистемы = Истина;
	ПрекратитьРаботуСистемы();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаГотово(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	
	ОписаниеШага = ПолучитьОписаниеШага(Элементы.ГруппаПомощник.ТекущаяСтраница);
	Если ОписаниеШага <> Неопределено
		И ЗначениеЗаполнено(ОписаниеШага.ГруппаПомощникаНазад) Тогда
		ПроверятьВозможностьПерехода = Ложь;
		ПерейтиНаШаг(Элементы[ОписаниеШага.ГруппаПомощникаНазад], ПроверятьВозможностьПерехода);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНачало(Команда)
	
	ПроверятьВозможностьПерехода = Ложь;
	ПерейтиНаШаг(Неопределено, ПроверятьВозможностьПерехода);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПрефиксыОрганизацийОрганизация");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПрефиксыОрганизацийПодразделениеОрганизации");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПрефиксыОрганизацийПрефиксРедакции20");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПрефиксыОрганизацийПрефиксРедакции30");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ПрефиксыОрганизаций.ПрефиксУникален", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаШаг(Знач Шаг, ПроверятьВозможностьПерехода)
	
	ОчиститьСообщения();
	
	Если Шаг = Неопределено Тогда
		Шаг = Элементы[ТаблицаШагов[0].ГруппаПомощника];
	КонецЕсли;
	
	ПереходНаШагВозможен = ?(ПроверятьВозможностьПерехода, ПроверитьВозможностьПерехода(Элементы.ГруппаПомощник.ТекущаяСтраница), Истина);
	
	ОписаниеШага = ПолучитьОписаниеШага(Шаг);
	
	Если ПереходНаШагВозможен
		И ОписаниеШага <> Неопределено Тогда
		
		Элементы.ГруппаПомощник.ТекущаяСтраница  = Элементы[ОписаниеШага.ГруппаПомощника];
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы[ОписаниеШага.ГруппаКоманднойПанели];
		УстановитьКнопкуПоУмолчанию();
		
	КонецЕсли;
	
	Если Элементы.ГруппаПомощник.ТекущаяСтраница = Элементы.ГруппаОжидание Тогда
		
		ПодключитьОбработчикОжидания("ВыполнитьОбработчикДлительнойОперации", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьПерехода(Знач Шаг)
	
	Если Шаг = Элементы.ГруппаПрефиксыИнформационнойБазы Тогда
		
		Если НЕ ЗначениеЗаполнено(ПрефиксИнформационнойБазыРедакции30) Тогда
			СообщениеПользователю = НСтр("ru = 'Укажите префикс информационной базы'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю, , "ПрефиксИнформационнойБазыРедакции30", );
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли Шаг = Элементы.ГруппаПрефиксыОрганизаций Тогда
		
		Отказ = Ложь;
		Для Каждого ПрефиксОрганизации ИЗ ПрефиксыОрганизаций Цикл
			
			Если НЕ ЗначениеЗаполнено(ПрефиксОрганизации.ПрефиксРедакции30) Тогда
				
				Если ЗначениеЗаполнено(ПрефиксОрганизации.ПодразделениеОрганизации) Тогда
					СообщениеПользователю = НСтр("ru = 'Укажите префикс для обособленного подразделения %1'");
					СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеПользователю, ПрефиксОрганизации.ПодразделениеОрганизации);
				Иначе
					СообщениеПользователю = НСтр("ru = 'Укажите префикс для организации %1'");
					СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеПользователю, ПрефиксОрганизации.Организация);
				КонецЕсли;
				
				Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ПрефиксыОрганизаций[%1].ПрефиксРедакции30", Формат(ПрефиксыОрганизаций.Индекс(ПрефиксОрганизации), "ЧЦ=10; ЧДЦ=; ЧН=0; ЧГ=0"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю, , Поле, , Отказ);
				
			ИначеЕсли НЕ ПрефиксОрганизации.ПрефиксУникален Тогда
				
				Если ЗначениеЗаполнено(ПрефиксОрганизации.ПодразделениеОрганизации) Тогда
					СообщениеПользователю = НСтр("ru = 'Префикс для обособленного подразделения %1 не уникален'");
					СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеПользователю, ПрефиксОрганизации.ПодразделениеОрганизации);
				Иначе
					СообщениеПользователю = НСтр("ru = 'Префикс для организации %1 не уникален'");
					СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеПользователю, ПрефиксОрганизации.Организация);
				КонецЕсли;
				
				Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ПрефиксыОрганизаций[%1].ПрефиксРедакции30", Формат(ПрефиксыОрганизаций.Индекс(ПрефиксОрганизации), "ЧЦ=10; ЧДЦ=; ЧН=0; ЧГ=0"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю, , Поле, , Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Отказ Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ПолучитьОписаниеШага(Знач Шаг)
	
	Отбор = Новый Структура("ГруппаПомощника", Шаг.Имя);
	Строки = ТаблицаШагов.НайтиСтроки(Отбор);
	Если Строки.Количество()>0 Тогда
		Возврат Строки[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура УстановитьКнопкуПоУмолчанию()
	
	Если Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииДалее Тогда
		Элементы.КомандаДалее1.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииДалееНазад Тогда
		Элементы.КомандаДалее2.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииГотово Тогда
		Элементы.КомандаГотово4.КнопкаПоУмолчанию = Истина;
	Иначе
		Для Каждого Элемент ИЗ Элементы Цикл
			Если ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
				Элемент.КнопкаПоУмолчанию = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьПрефиксыИБ()
	
	ЗначенияПрефиксов = ПолучитьЗначенияПрефиксаИБ();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ЗначенияПрефиксов);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияПрефиксаИБ()
	
	ЗначенияПрефиксов = Новый Структура();
	ЗначенияПрефиксов.Вставить("ПрефиксИнформационнойБазыРедакции20", Константы.ПрефиксУзлаРаспределеннойИнформационнойБазыБП20.Получить());
	ЗначенияПрефиксов.Вставить("ПрефиксИнформационнойБазыИзменен", Константы.ПрефиксУзлаРаспределеннойИнформационнойБазыБП20.Получить() <> 
												Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить());
	
	Возврат ЗначенияПрефиксов;
	
КонецФункции

&НаСервере
Процедура ПрефиксыОрганизацийПрефиксРедакции30ПриИзмененииНаСервере()
	
	ТекущаяСтрока = Элементы.ПрефиксыОрганизаций.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУникальностьПрефиксов(ПрефиксыОрганизаций, ПрефиксыОрганизацийНеУникальны);
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьУникальностьПрефиксов(ОрганизацииСПрефиксами, ПрефиксыОрганизацийНеУникальны)
	
	ПрефиксыОрганизацийНеУникальны = Ложь;
	
	УникальныеПрефиксы = ОрганизацииСПрефиксами.Выгрузить();
	УникальныеПрефиксы.Колонки.Добавить("КоличествоПрефиксов", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4,0)));
	УникальныеПрефиксы.ЗаполнитьЗначения(1, "КоличествоПрефиксов");
	Для Каждого Префикс ИЗ УникальныеПрефиксы Цикл
		Префикс.ПрефиксРедакции30 = ВРЕГ(Префикс.ПрефиксРедакции30);
	КонецЦикла;
	УникальныеПрефиксы.Свернуть("ПрефиксРедакции30", "КоличествоПрефиксов");
	
	Для Каждого Организация ИЗ ОрганизацииСПрефиксами Цикл
		Префикс = УникальныеПрефиксы.Найти(ВРЕГ(Организация.ПрефиксРедакции30), "ПрефиксРедакции30");
		Организация.ПрефиксУникален = Префикс.КоличествоПрефиксов = 1 ИЛИ Префикс.ПрефиксРедакции30 = "";
		ПрефиксыОрганизацийНеУникальны = ПрефиксыОрганизацийНеУникальны ИЛИ Не Организация.ПрефиксУникален;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьДействияШагаДалее(Шаг)
	
	Если Шаг = "ГруппаПрефиксыИнформационнойБазы" Тогда
	
		Если ПрефиксИнформационнойБазыРедакции30 <> Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы Тогда
			Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Установить(ПрефиксИнформационнойБазыРедакции30);
		КонецЕсли;
		
	ИначеЕсли Шаг = "ГруппаПрефиксыОрганизаций" Тогда
		
		Для Каждого СтрокаОрганизации ИЗ ПрефиксыОрганизаций Цикл	
			
			Если ЗначениеЗаполнено(СтрокаОрганизации.ПодразделениеОрганизации) Тогда
				ОбъектДляЗаписи = СтрокаОрганизации.ПодразделениеОрганизации.ПолучитьОбъект();
			Иначе
				ОбъектДляЗаписи = СтрокаОрганизации.Организация.ПолучитьОбъект();
			КонецЕсли;
			
			ОбъектДляЗаписи.Префикс = СтрокаОрганизации.ПрефиксРедакции30;
			ОбъектДляЗаписи.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработчикДлительнойОперации()
	
	Результат = ЗапуститьВосстановлениеВФоне();
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ИдентификаторЗадания    = Результат.ИдентификаторЗадания;
		АдресХранилища          = Результат.АдресХранилища;
	Иначе
		ЗавершитьВыполнениеЗадания();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьВосстановлениеВФоне()
	
	СтруктураПараметров = Новый Структура();
	НаименованиеЗадания = НСтр("ru = 'Восстановление нумерации в фоне'");
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"Обработки.ПомощникПереходаСРедакции20.ВыполнитьСохранениеНумерацииВФоне",
		СтруктураПараметров,
		НаименованиеЗадания);
	
	АдресХранилища = Результат.АдресХранилища;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			ЗавершитьВыполнениеЗадания();
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания",
				ПараметрыОбработчикаОжидания.ТекущийИнтервал,
				Истина);
		КонецЕсли;
		
	Исключение
		ИдентификаторЗадания = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыполнениеЗадания()
	
	ИдентификаторЗадания = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если РезультатВыполнения.ВыполненоУспешно Тогда
		ВыполненоУспешно = Истина;
		КомандаДалее(Неопределено);
	Иначе
		ТекстОшибки=РезультатВыполнения.ИнформацияОбОшибке;
		Элементы.ГруппаПомощник.ТекущаяСтраница  = Элементы.ГруппаОшибка;
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииВНачало;
		УстановитьКнопкуПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	ЗаданиеВыполнено = ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
	Возврат ЗаданиеВыполнено;
	
КонецФункции

&НаСервере
Функция ЗаполнитьТаблицуШагов()
	
	ПоказыватьИзменениеПрефиксовОрганизаций = Ложь;
	Для Каждого Организация Из ПрефиксыОрганизаций Цикл
		Если Организация.ПрефиксРедакции20 <> Организация.ПрефиксРедакции30 Тогда
			ПоказыватьИзменениеПрефиксовОрганизаций = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПоказыватьИзменениеПрефиксовИБ = ПрефиксИнформационнойБазыИзменен И ПолучитьФункциональнуюОпцию("РаботаВЛокальномРежиме");
	
	Если ПоказыватьИзменениеПрефиксовИБ Тогда
		Шаг = ТаблицаШагов.Добавить();
		Шаг.ГруппаПомощника = "ГруппаПрефиксыИнформационнойБазы";
		Шаг.ГруппаКоманднойПанели = "СтраницаНавигацииДалее";
	КонецЕсли;
	
	Если ПоказыватьИзменениеПрефиксовОрганизаций Тогда
		Шаг = ТаблицаШагов.Добавить();
		Шаг.ГруппаПомощника = "ГруппаПрефиксыОрганизаций";
		Шаг.ГруппаКоманднойПанели = ?(ТаблицаШагов.Количество() = 1, "СтраницаНавигацииДалее", "СтраницаНавигацииДалееНазад");
	КонецЕсли;
	
	Шаг = ТаблицаШагов.Добавить();
	Шаг.ГруппаПомощника = "ГруппаОжидание";
	Шаг.ГруппаКоманднойПанели = "СтраницаНавигацииОжидание";
	
	Шаг = ТаблицаШагов.Добавить();
	Шаг.ГруппаПомощника = "ГруппаЗавершение";
	Шаг.ГруппаКоманднойПанели = "СтраницаНавигацииГотово";
	
	Для К = 0 По ТаблицаШагов.Количество() - 1 Цикл
		ТаблицаШагов[К].ГруппаПомощникаНазад = ?(К = 0, "", ТаблицаШагов[К-1].ГруппаПомощника);
		ТаблицаШагов[К].ГруппаПомощникаДалее = ?(К < ТаблицаШагов.Количество() - 1, ТаблицаШагов[К+1].ГруппаПомощника, "");
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ВыполненоУспешно Тогда
		
		ПропуститьПредупреждениеПередЗавершениемРаботыСистемы = Истина;
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры





