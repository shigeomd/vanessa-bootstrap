#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Предопределенный 
		И Родитель <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Родитель") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Нельзя изменять подчиненность предопределенных счетов!'"), ЭтотОбъект, "Родитель", , Отказ);
	КонецЕсли;
	
	Порядок = ПолучитьПорядокКода();

	Если НЕ ЗначениеЗаполнено(КодБыстрогоВыбора) Тогда
		КодБыстрогоВыбора = СокрЛП(СтрЗаменить(Код, ".", ""));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СчетаРасчетов = Новый СписокЗначений;
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка"          , Ссылка);
	Запрос.УстановитьПараметр("СчетаРасчетов"   , СчетаРасчетов);
	Запрос.УстановитьПараметр("СписокИсключений", ПланыСчетов.Хозрасчетный.ПолучитьСчетаИсключения());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.Ссылка = &Ссылка
	|	И ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ(&СчетаРасчетов)
	|	И (НЕ ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ (&СписокИсключений))
	|	И ХозрасчетныйВидыСубконто.Ссылка <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
	|	И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)";
	
	ЭтоСчетРасчетов = НЕ Запрос.Выполнить().Пустой();
	
	Если ЭтоСчетРасчетов Тогда
		
		ВидСубконтоДокументыРасчетов =
			ВидыСубконто.Найти(
				ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
		
		Если ВидСубконтоДокументыРасчетов = Неопределено Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Список", "Корректность",,, НСтр("ru = 'Виды субконто'"),
				НСтр("ru = 'На счетах расчетов с контрагентами обязательно наличие субконто ""Документы расчетов с контрагентом"".'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидыСубконто", "Объект", Отказ);
		Иначе
			Если ВидСубконтоДокументыРасчетов.ТолькоОбороты Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Список", "Корректность",,, НСтр("ru = 'Виды субконто'"),
					НСтр("ru = 'Субконто ""Документы расчетов с контрагентом"" не может быть оборотным.'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидыСубконто", "Объект", Отказ);
			КонецЕсли;
			Если НЕ ВидСубконтоДокументыРасчетов.Суммовой Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Список", "Корректность",,, НСтр("ru = 'Виды субконто'"),
					НСтр("ru = 'Субконто ""Документы расчетов с контрагентом"" обязательно должен быть суммовым.'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидыСубконто", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли