////////////////////////////////////////////////////////////////////////////////
// Проверка одного или нескольких контрагентов при помощи веб-сервиса ФНС
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма, ВидПанелиПроверки = "") Экспорт
	
	// Если в отчете не добавлена панель результата проверки контрагентов, то данные действия не требуются.
	Если Форма.Элементы.Найти("ПроверкаКонтрагента") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.РеквизитыПроверкиКонтрагентов.ПроверкаИспользуется Тогда
		
		Если ЗначениеЗаполнено(ВидПанелиПроверки) Тогда 
			
			Форма.Элементы.ПроверкаКонтрагента.ТекущаяСтраница = Форма.Элементы[ВидПанелиПроверки];
			
			Если ВидПанелиПроверки = "НайденыНекорректныеКонтрагенты" Тогда
				
				УстановитьТекстПредупрежденияПоНекорректнымКонтрагентам(Форма);
				Форма.ПроверкаКонтрагентовПереключательРежимаОтображения = ?(Форма.РеквизитыПроверкиКонтрагентов.ВыведеныВсеСтроки, "Все", "Недействующие");
				
			КонецЕсли;
			Форма.Элементы.ПроверкаКонтрагента.Видимость = Истина;
			
		Иначе
			
			Форма.Элементы.ПроверкаКонтрагента.Видимость = Ложь;
			
		КонецЕсли;
		
	Иначе
		Форма.Элементы.ПроверкаКонтрагента.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиНужнуюПанельПроверкиКонтрагентовВОтчете(Форма) Экспорт

	Если Форма.РеквизитыПроверкиКонтрагентов.ПроверкаИспользуется Тогда
		
		Если Форма.РеквизитыПроверкиКонтрагентов.ЕстьДоступКВебСервисуФНС Тогда
			
			Если Форма.РеквизитыПроверкиКонтрагентов.ПроверкаВыполнялась Тогда
				
				Если НЕ Форма.РеквизитыПроверкиКонтрагентов.ЕстьКонтрагентыДляПроверки Тогда
				
					УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма, "ДопИнформацияПоПроверке");
				
				ИначеЕсли ЕстьНекорректныеКонтрагентыВДекларации(Форма) Тогда
					
					УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма, "НайденыНекорректныеКонтрагенты");
					
				Иначе
					
					УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма, "ВсеКонтрагентыКорректные");
					
				КонецЕсли;
				
			Иначе
				
				// Проверка не выполнилась, например, потому что в отчете не было ни одной записи.
				УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма);
				
			КонецЕсли;
			
		Иначе
			 УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма, "НетДоступаКСервису");
		КонецЕсли;
		
	Иначе
		УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма);
	КонецЕсли;

КонецПроцедуры

Функция ПроверяемыеРазделыДекларацииПоНДС() Экспорт
	
	Разделы = Новый Структура;
	Разделы.Вставить("Начальный", 8);
	Разделы.Вставить("Конечный",  12);
	
	Возврат Разделы;
	
КонецФункции

Функция ЕстьНекорректныеКонтрагентыВДекларации(Форма) Экспорт
	
	ЕстьНекорректныеКонтрагенты = Ложь;
	
	Разделы = ПроверяемыеРазделыДекларацииПоНДС();
		
	НачальныйРаздел = Разделы.Начальный;
	КонечныйРаздел 	= Разделы.Конечный;
	
	СтруктураРеквизитовФормы = Форма.СтруктураРеквизитовФормы;
	
	Для НомерРаздела = НачальныйРаздел По КонечныйРаздел Цикл
		
		АдресНекорректныхКонтрагентов = ИмяАдресаНекорректныхКонтрагентов(НомерРаздела);
		Если СтруктураРеквизитовФормы.Свойство(АдресНекорректныхКонтрагентов) Тогда
			
			ЕстьНекорректныеКонтрагенты = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЕстьНекорректныеКонтрагенты;
	
КонецФункции

Функция ЭтоРазделДекларацииСОшибкамиПроверкиКонтрагентов(Форма, НаименованиеТекущегоРаздела) Экспорт
	
	Если Найти(НаименованиеТекущегоРаздела, "Раздел") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НомерТекущегоРазделаСтрокой = СтрЗаменить(НаименованиеТекущегоРаздела, "Раздел", "");
	
	Если НЕ ЭтоПроверяемыйРаздел(НаименованиеТекущегоРаздела) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	НомерТекущегоРаздела = Число(НомерТекущегоРазделаСтрокой); 
	
	Результат = Ложь;
	
	Разделы = ПроверяемыеРазделыДекларацииПоНДС();
		
	НачальныйРаздел = Разделы.Начальный;
	КонечныйРаздел 	= Разделы.Конечный;
	
	СтруктураРеквизитовФормы = Форма.СтруктураРеквизитовФормы;
	
	Для НомерРаздела = НачальныйРаздел По КонечныйРаздел Цикл
		
		АдресНекорректныхКонтрагентов = ИмяАдресаНекорректныхКонтрагентов(НомерРаздела);
		Если СтруктураРеквизитовФормы.Свойство(АдресНекорректныхКонтрагентов) Тогда
			
			Если НомерТекущегоРаздела = НомерРаздела Тогда
			
				Результат = Истина;
				Прервать;
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЭтоПроверяемыйРаздел(ИмяРаздела) Экспорт
	
	Если ИмяРаздела = "Раздел8"
		ИЛИ ИмяРаздела = "Раздел9"
		ИЛИ ИмяРаздела = "Раздел10"
		ИЛИ ИмяРаздела = "Раздел11"
		ИЛИ ИмяРаздела = "Раздел12" Тогда
		
		Результат = Истина;
		
	Иначе
		
		Результат = Ложь;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИмяАдресаПроверенногоОтчета(НомерРаздела) Экспорт
	Возврат "АдресПроверенногоОтчетаРаздел" + Строка(НомерРаздела);
КонецФункции

Функция НазваниеВидаДанныхПроверенногоОтчета(НомерРаздела) Экспорт
	Возврат "ПроверенныйОтчетРаздел" + Строка(НомерРаздела);
КонецФункции

Функция ИмяАдресаОтчетаПоНекорректнымКонтрагентам(НомерРаздела) Экспорт
	Возврат "АдресОтчетаПоНекорректнымКонтрагентамРаздел" + Строка(НомерРаздела);
КонецФункции

Функция НазваниеВидаДанныхОтчетаПоНекорректнымКонтрагентам(НомерРаздела) Экспорт
	Возврат "ОтчетПоНекорректнымКонтрагентамРаздел" + Строка(НомерРаздела);
КонецФункции

Функция ИмяАдресаНекорректныхКонтрагентов(НомерРаздела) Экспорт
	Возврат "АдресНекорректныхКонтрагентовРаздел" + Строка(НомерРаздела);
КонецФункции

Функция НазваниеВидаДанныхНекорректныхКонтрагентов(НомерРаздела) Экспорт
	Возврат "НекорректныеКонтрагентыРаздел" + Строка(НомерРаздела);
КонецФункции

Функция ИмяАдресаРеквизитовПроверкиКонтрагентов() Экспорт
	Возврат "АдресРеквизитовПроверкиКонтрагентов";
КонецФункции

Функция НазваниеВидаДанныхРеквизитовПроверкиКонтрагентов() Экспорт
	Возврат "РеквизитыПроверкиКонтрагентов";
КонецФункции

Функция РаботаСКонтрагентамиСуществует() Экспорт
	Возврат ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСКонтрагентами");
КонецФункции
	
#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

Процедура УстановитьТекстПредупрежденияПоНекорректнымКонтрагентам(Форма)
	
	СсылкаНаИнструкцию = Новый ФорматированнаяСтрока(НСтр("ru = 'Подробнее...'"),,,,"e1cib/app/Обработка.ИнструкцияПоИспользованиюПроверкиКонтрагента");
	
	Разделы = ПроверяемыеРазделыДекларацииПоНДС();
		
	НачальныйРаздел = Разделы.Начальный;
	КонечныйРаздел 	= Разделы.Конечный;
	
	СтруктураРеквизитовФормы = Форма.СтруктураРеквизитовФормы;
	
	ТекстПредупреждения = Новый ФорматированнаяСтрока(НСтр("ru = 'Обнаружены недействующие контрагенты по данным ФНС '"), СсылкаНаИнструкцию);
	
	// Формируем массив разделов с ошибками
	МассивРазделов = Новый Массив;
	Для НомерРаздела = НачальныйРаздел По КонечныйРаздел Цикл
		
		АдресНекорректныхКонтрагентов = ИмяАдресаНекорректныхКонтрагентов(НомерРаздела);
		Если СтруктураРеквизитовФормы.Свойство(АдресНекорректныхКонтрагентов) Тогда
			
			МассивРазделов.Добавить(НомерРаздела);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Формируем текст надписи
	Если МассивРазделов.Количество() = 1 Тогда
		
		ШаблонСтроки = НСтр("ru = 'В разделе %1 обнаружены недействующие контрагенты по данным ФНС '");
		ШаблонСтроки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, МассивРазделов[0]);
		
		ТекстПредупреждения = Новый ФорматированнаяСтрока(ШаблонСтроки, СсылкаНаИнструкцию);
		
	ИначеЕсли МассивРазделов.Количество() > 1 Тогда
		
		ШаблонСтроки 	= НСтр("ru = 'В разделах %1 обнаружены недействующие контрагенты по данным ФНС '");
		СписокРазделов 	= СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(МассивРазделов, ",");
		ШаблонСтроки 	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, СписокРазделов);
		
		ТекстПредупреждения = Новый ФорматированнаяСтрока(ШаблонСтроки, СсылкаНаИнструкцию);
		
	КонецЕсли;
	
	// Устанавливаем текст предупреждения
	ЭлементФормы = Форма.Элементы.Найти("ТекстПриНекорректныхКонтрагентах");
	Если ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.Заголовок = ТекстПредупреждения;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти