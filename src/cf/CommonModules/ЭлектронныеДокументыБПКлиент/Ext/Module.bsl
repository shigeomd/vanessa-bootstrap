
Процедура ЗагрузитьРеализациюТоваровИУслугИзФайла(Форма) Экспорт

	Если Не ЭлектронныеДокументыБПВызовСервера.ИмеетсяВозможностьЗагрузкиДанныхИзФайла() Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Недостаточно прав для просмотра'"));
		Возврат;
		
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьЗагрузкуРеализацииТоваровИУслугXMLИзФайла", ЭтотОбъект, 
		Новый Структура("Форма", Форма));	
		
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);

КонецПроцедуры

Процедура ЗагрузитьРеализациюТоваровИУслугИзЭлектроннойПочты(Форма) Экспорт

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВариантЗагрузкиЭД", ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиЭД.РеализацияТоваровИУслуг"));
	ДополнительныеПараметры.Вставить("ГлубинаПоиска", 7);
	ДополнительныеПараметры.Вставить("ИдентификаторФормыВладельца", Форма.УникальныйИдентификатор);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьЗагрузкуРеализацииТоваровИУслугXMLИзЭлектроннойПочты", ЭтотОбъект);
	ОткрытьФорму("Обработка.ПрямойОбменЭД.Форма.Форма", ДополнительныеПараметры,,,,, ОписаниеОповещения);

КонецПроцедуры

#Область КонвертацияФайлаВФорматФНС

Процедура ПродолжитьЗагрузкуРеализацииТоваровИУслугXMLИзФайла(РасширениеПодключено,
	ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РасширениеПодключено = Истина Тогда
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Фильтр             = "(*.xlsx;*.mxl;*.zip)|*.xlsx;*.mxl;*.zip";
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок          = НСтр("ru='Выберите файл электронного документа'");
		
		Форма = ДополнительныеПараметры.Форма;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрочитатьЗагруженныеФайлы", ЭтотОбъект, 
			Новый Структура("Форма", Форма));		
		НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, Форма.УникальныйИдентификатор); 		
		
	Иначе 
		
		ТекстСообщения = НСтр("ru='Расширение для работы с файлами в веб-клиенте не подключено, загрузка поступления остановлена.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

	КонецЕсли;
	
КонецПроцедуры

Процедура ПродолжитьЗагрузкуРеализацииТоваровИУслугXMLИзЭлектроннойПочты(СтруктураЭД, ДополнительныеПараметры) Экспорт

	Если СтруктураЭД <> Неопределено Тогда
		
		ЗагрузитьЭД(СтруктураЭД);
		
	КонецЕсли;

КонецПроцедуры  

Процедура ПрочитатьЗагруженныеФайлы(ЗагруженныеФайлы, ДополнительныеПараметры) Экспорт 
	
	Если ЗагруженныеФайлы <> Неопределено Тогда
		
		ОписаниеФайлов = ЗагруженныеФайлы[0];
		АдресФайла     = ОписаниеФайлов.Хранение;
		ПолноеИмяФайла = ОписаниеФайлов.Имя;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ПолноеИмяФайла);				
	Если РасширениеФайла = "zip" Тогда		
		
		НачатьЗагрузкуЭД(АдресФайла, Форма.УникальныйИдентификатор, Истина);
		
	Иначе		
		
		ОбработатьТабличныйДокумент(АдресФайла, РасширениеФайла, Форма);
		
	КонецЕсли;
		
КонецПроцедуры 

Процедура ОбработатьТабличныйДокумент(АдресФайла, РасширениеФайла, Форма)
	
	Результат = ЭлектронныеДокументыБПВызовСервера.ОбработатьТабличныйДокументСервер(АдресФайла, РасширениеФайла, Форма.УникальныйИдентификатор);	
	Форма.ИдентификаторЗадания = Результат.ИдентификаторЗадания;
	Форма.АдресХранилища       = Результат.АдресХранилища;
	Если Не Результат.ЗаданиеВыполнено Тогда
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(Форма.ПараметрыОбработчикаОжидания);
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ОжиданиеКонвертацииФайла", 1, Истина);
		Форма.ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(Форма, Форма.ИдентификаторЗадания);		
				
	Иначе	
		
		НачатьЗагрузкуЭД(Форма.АдресХранилища, Форма.УникальныйИдентификатор);		
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеПоступленияИзЭД

Процедура НачатьЗагрузкуЭД(АдресХранилища, ИдентификаторФормы, ЭтоАрхивЭД = Ложь) Экспорт
	
	Если Не ЭтоАрхивЭД Тогда
		
		ДанныеЭД = ЭлектронныеДокументыБПВызовСервера.РазобратьПолученныеДанные(АдресХранилища, ИдентификаторФормы);	
		Если ДанныеЭД.Свойство("ТекстОшибки") Тогда
				
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ДанныеЭД.ТекстОшибки;		
			Сообщение.ИдентификаторНазначения = ИдентификаторФормы;
			Сообщение.Сообщить();
			Возврат;
				
		КонецЕсли;
		
	Иначе
		
		ДанныеЭД = Новый Структура;
		ДанныеЭД.Вставить("АдресХранилища", АдресХранилища);
		
	КонецЕсли;
		
	АдресаФайловXML = Новый Массив;
	АдресаФайловXML.Добавить(ДанныеЭД.АдресХранилища);
	СтруктураЭД = ЭлектронныеДокументыБПВызовСервера.ПолучитьКонтрагентаИДанныеДокумента(АдресаФайловXML, ИдентификаторФормы);	
	Если ДанныеЭД.Свойство("НомерСФ") Тогда
		
		СтруктураЭД.Вставить("НомерСФ", ДанныеЭД.НомерСФ);
		СтруктураЭД.Вставить("ДатаСФ", ДанныеЭД.ДатаСФ);
		
	КонецЕсли;
	
	Если СтруктураЭД <> Неопределено Тогда
	
		ЗагрузитьЭД(СтруктураЭД);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьЭД(СтруктураЭД)
	          	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СтруктураЭД", СтруктураЭД);		
	ОбработчикОповещенияПередЗаполнением = Новый ОписаниеОповещения("СопоставитьПередЗаполнениемОповещение",
			ЭтотОбъект,
			ДополнительныеПараметры);
	СопоставитьНоменклатуру(ОбработчикОповещенияПередЗаполнением, СтруктураЭД);	

КонецПроцедуры

Процедура СопоставитьПередЗаполнениемОповещение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЭД = ДополнительныеПараметры.СтруктураЭД;
	СсылкаДокумента = ЭлектронныеДокументыБПВызовСервера.СоздатьДокументИзЭД(СтруктураЭД);	
	Если СтруктураЭД.Свойство("НомерСФ") Тогда                 
					
		УчетНДСВызовСервера.СоздатьСчетФактуруПолученныйНаОсновании(СсылкаДокумента, СтруктураЭД.НомерСФ, СтруктураЭД.ДатаСФ);
					
	КонецЕсли; 	
	ПоказатьЗначение(, СсылкаДокумента);
	Оповестить("ЗагруженДокументПоступления");
	
КонецПроцедуры

Процедура СопоставитьНоменклатуру(ОбработчикОповещения, СтруктураЭД)
	
	СтруктураПараметров = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьПараметрыФормыСопоставленияНоменклатуры(СтруктураЭД);
	
	Если ЗначениеЗаполнено(СтруктураПараметров) Тогда
		ФормаСопоставления = ОткрытьФорму(СтруктураПараметров.ИмяФормы, СтруктураПараметров.ПараметрыОткрытияФормы,,,,, ОбработчикОповещения);
		
		Если ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
			
			// Если нет несопоставленной номенклатуры, форма сопоставления сразу закрывается.
			// При работе через веб-клиент в этом случае обработчик оповещения не срабатывает.
			Если ФормаСопоставления.НесопоставленнаяНоменклатураКонтрагента.Количество() = 0 Тогда
				
				СсылкаДокумента = ЭлектронныеДокументыБПВызовСервера.СоздатьДокументИзЭД(СтруктураЭД);
				Если СтруктураЭД.Свойство("НомерСФ") Тогда
					
					УчетНДСВызовСервера.СоздатьСчетФактуруПолученныйНаОсновании(СсылкаДокумента, СтруктураЭД.НомерСФ, СтруктураЭД.ДатаСФ);
					
				КонецЕсли;
				ПоказатьЗначение(, СсылкаДокумента);								
				Оповестить("ЗагруженДокументПоступления");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти
