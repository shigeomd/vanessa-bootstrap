
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА РАСШИФРОВКИ
//

// Процедура выводит форму расшифровки.
// 
// Пример:
// 	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
//		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
//			ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв1(ИДИменПоказателей, ПараметрыОтчета);
//		КонецЕсли;
// 	КонецЕсли;
//
Процедура ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета) Экспорт
	
	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
			
			ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв1(ИДИменПоказателей, ПараметрыОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2011Кв3" Тогда
			
			ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв3(ИДИменПоказателей, ПараметрыОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
			
			ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьМП" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			ОткрытьРасшифровкуБухОтчетностьМПФормаОтчета2012Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4_2" Тогда
			
			ОткрытьРасшифровкуБухОтчетностьМПФормаОтчета2012Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьСОНКО" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			ОткрытьРасшифровкуБухОтчетностьСОНКОФормаОтчета2012Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетПрибыль" Тогда
		
		ОткрытьРасшифровкуОтчетПрибыль(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетНДС" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2009Кв4" Тогда
			
			ОткрытьРасшифровкуОтчетНДСФормаОтчета2009Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетИмущество" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			ОткрытьРасшифровкуОтчетИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАвансыИмущество" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			ОткрытьРасшифровкуОтчетАвансыИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;

	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП3"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1Приложение3" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП2" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП2к" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма5З"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП5М"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1РП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП6"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаПМ"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма3ТОРГПМ"
		Тогда
		
		   ЗаполнениеФормСтатистикиКлиент.ОткрытьРасшифровкуСтатистики(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета);
				
	КонецЕсли;
	
	ЗарплатаКадрыКлиентВнутренний.ОткрытьРасшифровкуРегламентированногоОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета);
		
КонецПроцедуры

Процедура ОткрытьФормуПомощникаПоУчетуНДС(ПараметрыОткрытияПомощника) Экспорт
	
	УчетНДСКлиентПереопределяемый.ОткрытьФормуПомощникаПоУчетуНДС(ПараметрыОткрытияПомощника);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ КАЛЕНДАРЯ БУХГАЛТЕРА
//

// Функция возвращает имя формы, используемой для уплаты налога.
// 
// Пример:
//  Возврат "Документ.ПлатежноеПоручение.ФормаОбъекта";
//
Функция ИмяФормыДляУплатыНалога() Экспорт
	
	Возврат "Документ.ПлатежноеПоручение.ФормаОбъекта";
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СПИСКА ЗАДАЧ БУХГАЛТЕРА
//

// Процедура открывает форму списка задач бухгалтера.
//
Процедура ОткрытьКалендарь(Владелец, Организация, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПерейтиПоНавигационнойСсылке(ЗадачиБухгалтераКлиентСервер.СсылкаНаИТС());
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНТЕРФЕЙСА ВЗАИМОДЕЙСТВИЯ С КОНФИГУРАЦИЯМИ (БИБЛИОТЕКАМИ) - ПОТРЕБИТЕЛЯМИ
//

// Процедура переопределяет создание формы РСВ-1 из списка регламентированных отчетов.
//
// Параметры:
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриСозданииРСВ_1ИзСпискаРеглОтчетов(ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриСозданииРСВ_1ИзСпискаРеглОтчетов(ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет открытие формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриОткрытииРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриОткрытииРСВ_1ИзСпискаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет поведение при печати формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриПечатиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриПечатиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет поведение при выгрузке формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриВыгрузкеРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриВыгрузкеРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура переопределяет поведение при проверке выгрузки формы РСВ-1 из журнала регламентированных отчетов.
//
// Параметры:
//  Ссылка                   – ссылка на регламентированный отчет;
//  ОписаниеРСВ_1            – структура с полями:
//   Организация             – организация;
//   ДатаНачалаПериодаОтчета - дата;
//   ДатаКонцаПериодаОтчета  - дата;
//   КорректирующаяФорма     - булево;
//  СтандартнаяОбработка     – булево.
//
Процедура ПриПроверкеВыгрузкиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка) Экспорт
	
	ПерсонифицированныйУчетКлиент.ПриПроверкеВыгрузкиРСВ_1ИзЖурналаРеглОтчетов(Ссылка, ОписаниеРСВ_1, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура открывает форму с информацией об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ПредупредитьОбИзменениях(ИмяОтчета, ИмяФормы, Форма) Экспорт
	
	Если ИмяОтчета = "РегламентированныйОтчетПрибыль" И ИмяФормы = "ФормаОтчета2013Кв4" Тогда
		
		ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях(
			"ДобавленСчет69027",
			Форма,
			Форма.НастройкиПредупрежденийОбИзменениях);
			
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетАлкоПриложение12" И ИмяФормы = "ФормаОтчета2012Кв3" Тогда
		
		ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях(
			"ВведениеАлкогольныхКодов261",
			Форма,
			Форма.НастройкиПредупрежденийОбИзменениях);
			
	КонецЕсли;
	
КонецПроцедуры

// Процедура изменяет признак вывода предупреждения об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  ТребуетсяПредупредитьОбИзменениях - Булево - признак вывода предупреждения об изменениях;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ИзменитьПризнакВыводаПредупрежденияОбИзменениях(ИмяОтчета, ИмяФормы, ТребуетсяПредупредитьОбИзменениях, Форма) Экспорт
	
	Если ИмяОтчета = "РегламентированныйОтчетПрибыль" И ИмяФормы = "ФормаОтчета2013Кв4" Тогда
		
		НастройкаПредупреждений = Форма.НастройкиПредупрежденийОбИзменениях;
		КлючНастроек = "ДобавленСчет69027";
		
		Если ТипЗнч(НастройкаПредупреждений) = Тип("Структура") Тогда
			Если НастройкаПредупреждений.Свойство(КлючНастроек) Тогда
				Если НастройкаПредупреждений[КлючНастроек] = Ложь Тогда
					ТребуетсяПредупредитьОбИзменениях = Ложь;
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ТребуетсяПредупредитьОбИзменениях = Истина;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетАлкоПриложение12" И ИмяФормы = "ФормаОтчета2012Кв3" Тогда
		
		НастройкаПредупреждений = Форма.НастройкиПредупрежденийОбИзменениях;
		КлючНастроек = "ВведениеАлкогольныхКодов261";
		
		Если ТипЗнч(НастройкаПредупреждений) = Тип("Структура") Тогда
			Если НастройкаПредупреждений.Свойство(КлючНастроек) Тогда
				Если НастройкаПредупреждений[КлючНастроек] = Ложь Тогда
					ТребуетсяПредупредитьОбИзменениях = Ложь;
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ТребуетсяПредупредитьОбИзменениях = Истина;
		
	Иначе
		
		ТребуетсяПредупредитьОбИзменениях = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Процедура вызывается в формах отчета "РегламентированныйОтчетРСВ1"
// при нажатии кнопки перехода в специализированное рабочее место подготовки
// отчетности в ПФР.
//
Процедура ПерейтиВРабочееМестоПФР(Организация, ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета) Экспорт
	ЗарплатаКадрыКлиент.ПерейтиВРабочееМестоПодготовкиКвартальнойОтчетностиПФР(Организация, ДатаНачалаПериодаОтчета);				
КонецПроцедуры

// Процедура выполняет назначаемую команду формы.
//
// Параметры:
//   Форма - форма, из которой вызвана команда.
//
Процедура ВыполнитьНазначаемуюКомандуНаКлиенте(Форма) Экспорт

	Организации = Форма.Организация;
	
	Если Организации.Количество() = 1 Тогда
		ОрганизацияОтчета = Организации.Получить(0).Значение;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", ОрганизацияОтчета);
	ПараметрыФормы.Вставить("НачалоПериода", Форма.ДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("КонецПериода", Форма.ДатаКонцаПериодаОтчета);
	
	ОткрытьФорму("Отчет.ЭкспрессПроверкаВеденияУчета.Форма", Новый Структура("ПараметрыФормы", ПараметрыФормы));

КонецПроцедуры

// Процедура проверяет, выполнялась ли ранее настройка автозаполнения.
//
// Параметры:
// ПараметрыОтчета                        - Структура 
// ВыполняемоеОповещение                  - ОписаниеОповещения - Описание оповещения, которое будет вызвано после выполнения данной операции.
//                                                       В качестве результата описания оповещения должно передаваться булево значение, от которого зависит
//                                                       будет ли выполнятся дальнейший код в процедуре, которая вызвала этот метод.
//
Процедура ПроверитьНастройкиЗаполненияОтчета(ПараметрыОтчета, ВыполняемоеОповещение) Экспорт
	
	ИмяОтчета   = ПараметрыОтчета.ИДОтчета;
	ИмяФормы    = ПараметрыОтчета.ИДРедакцииОтчета;
	Организация = ПараметрыОтчета.Организация;
	
	РезультатПроверки = ЗаполнениеФормСтатистикиВызовСервера.ПроверитьНастройкиЗаполненияОтчета(ИмяОтчета, ИмяФормы, Организация);
		
	Если РезультатПроверки = Неопределено Тогда
		// У пользователя нет прав на редактирование настроек.
		// Поэтому предложить ему ничего не можем.
		// Либо настройка формы не предусмотрена.
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);
		Возврат;
	КонецЕсли;
	
	ФормаСтатистики 			= РезультатПроверки.ФормаСтатистики;
	ВыполнялисьНастройкиФормы 	= РезультатПроверки.ВыполнялисьНастройкиФормы;
	
	Если Не ВыполнялисьНастройкиФормы Тогда
		
		Кнопки = Новый СписокЗначений();
		
		Кнопки.Добавить(КодВозвратаДиалога.Да, 		"Открыть настройки");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, 	"Заполнить");
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, 	"Отмена");
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", ВыполняемоеОповещение);
		ДополнительныеПараметры.Вставить("Организация", Организация);
		ДополнительныеПараметры.Вставить("ФормаСтатистики", ФормаСтатистики);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьНастройкиЗаполненияОтчетаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = "Перед заполнением этой формы рекомендуем проверить настройки заполнения
			|";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура открывает форму настройки автозаполнения.
//
Процедура ОткрытьФормуНастройкиАвтозаполнения(ПараметрыФормы) Экспорт
	
	Перем ИмяОтчета, ИмяФормы, ИмяПоля, Организация;
	
	ПараметрыФормы.Свойство("ИДОтчета",             ИмяОтчета);
	ПараметрыФормы.Свойство("ИДРедакцииОтчета",     ИмяФормы);
	ПараметрыФормы.Свойство("ИДТекущегоПоказателя", ИмяПоля); // Может не передаваться или передаваться Неопределено, если пользователь хочет выполнить настройку для всей формы
	ПараметрыФормы.Свойство("Организация",          Организация);
	
	ОписаниеФормы = ЗаполнениеФормСтатистикиВызовСервера.ОписаниеФормыНастройкиПоля(ИмяОтчета, ИмяФормы, ИмяПоля, Организация);
	
	Если ТипЗнч(ОписаниеФормы) = Тип("Строка") Тогда
		
		ПоказатьПредупреждение(,ОписаниеФормы);
		
	Иначе
		
		ОткрытьФорму(ОписаниеФормы.ИмяФормы, ОписаниеФормы.ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура реализует печать объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность
// Параметры
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект, который необходимо напечатать
//		Если для данного объекта печать невозможна - нужно выдавать соотвествующее предупрежедние
//	ИмяМакетаДляПечати - Строка - имя макета для печати, при использовании которого необходимо распечатать объект
//		Если ИмяМакетаДляПечати пустое, то для печати использовать основной макет
//	СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будет выполнена печать с помощью подсистемы печати из БСП. 
Процедура Печать(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка) Экспорт
	
	УчетОбособленныхПодразделенийКлиент.ПечатьРегламентированногоОтчета(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка);
	
	ЗарплатаКадрыКлиент.ПечатьДокументаОтчетности(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура реализует выгрузку объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность
// Параметры
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект, который необходимо выгрузить
//Если для данного объекта выгрузка невозможна - нужно выдавать соотвествующее предупрежедние
//
Процедура Выгрузить(Ссылка) Экспорт
	
	УчетОбособленныхПодразделенийКлиент.ВыгрузкаРегламентированногоОтчета(Ссылка);
	
	ЗарплатаКадрыКлиент.ВыгрузитьДокументОтчетности(Ссылка);
	
	УчетНДСКлиент.ВыгрузкаЗаявленияОВвозеТоваров(Ссылка);
	
КонецПроцедуры

// Процедура реализует создание объектов, отображаемых на закладке Уведомления и Отчетность формы Отчетность, не входящие в состав БРО 
// Параметры
//	Организация - СправочникСсылка.Организации - Организация, по которой нужно создать объект
//  Тип  - Тип - Тип объекта, который необходимо создать
//  СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будет выполнено создание объекта стандартным образом
Процедура СоздатьНовыйОбъект(Организация, Тип, СтандартнаяОбработка) Экспорт
	
	УчетОбособленныхПодразделенийКлиент.СозданиеРегламентированногоОтчета(Организация, Тип, СтандартнаяОбработка);
	
	ЗарплатаКадрыКлиент.СоздатьНовыйДокументОтчетности(Организация, Тип, СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура открывает окно выбора обособленных подразделений в случае, когда стандартный механизм 
// по каким-либо причинам не может быть использован
// Вызывается из форм статистики (ЗП-*, П-4 и некоторых других)
// В качестве callback-процедуры следует использовать РегламентированнаяОтчетностьКлиент.ОбработкаВыбораОбособленногоПодразделения
// Параметры
//  Форма - форма отчета откуда открывается выбор подразделения
//  СтандартнаяОбработка - если отработано необходимо выставить СтандартнаяОбработка = Ложь
// Пример для ЗУП 3.0 КОРП
//  Там форма выбора это форма списка с параметром открытия РежимВыбора = Истина
//  СтандартнаяОбработка = Ложь;
//  Отбор = Новый Структура("Владелец, ИмеетНомерТерриториальногоОрганаРосстата", Форма.СтруктураРеквизитовФормы.Организация, Истина);
//  Параметры = Новый Структура("Отбор, РежимВыбора", Отбор, Истина);
//  ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораОбособленногоПодразделения", РегламентированнаяОтчетностьКлиент, Новый Структура("Форма", Форма));
//  ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора",Параметры,Форма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//
Процедура ОбработкаВыбораПоляОбособленныхПодразделений(Форма, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Процедура завершения проверки настройки заполнения статистических отчетов
// Вызывается если задан вопрос, про проверку настроек заполнения.
//
Процедура ПроверитьНастройкиЗаполненияОтчетаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Организация = ДополнительныеПараметры.Организация;
	ФормаСтатистики = ДополнительныеПараметры.ФормаСтатистики;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("ФормаСтатистики", ФормаСтатистики);
		ОткрытьФорму("РегистрСведений.НастройкаЗаполненияФормСтатистики.Форма.НастройкаЗаполненияФормСтатистики", ПараметрыФормы);
		Результат = Ложь;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗаполнениеФормСтатистикиВызовСервера.ЗаписатьНастройкиВыполнены(ФормаСтатистики, Организация);
		Результат = Истина;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Результат);
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв1(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности("Бухгалтерская отчетность",
		ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);

	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв3(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности("Бухгалтерская отчетность",
		ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьФормаОтчета2011Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности("Бухгалтерская отчетность",
		ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);

	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетПрибыль(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиДекларацииПоНалогуНаПрибыль(ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);

	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
			
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетНДСФормаОтчета2009Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПользовательскиеНастройки = Неопределено;
		
		ИдПоказателя = ИДИменПоказателей[0];
		
		ИдентификаторМакета = УчетНДСВызовСервера.ПолучитьИдентификаторМакетаРасшифровкиДекларацииПоНДС(ПараметрыОтчета, ИдПоказателя, ПользовательскиеНастройки);
		
		Если ЗначениеЗаполнено(ИдентификаторМакета) Тогда
			
			Если ТипЗнч(ИдентификаторМакета) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("Ключ", ИдентификаторМакета);
				ОткрытьФорму("Справочник.ОсновныеСредства.ФормаОбъекта", ПараметрыФормы,, Новый УникальныйИдентификатор);
				
			Иначе
				
				Если ПользовательскиеНастройки = Неопределено Тогда
					ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
				КонецЕсли;
				
				ЕстьОтбор = ПользовательскиеНастройки.Элементы.Найти("Отбор") <> Неопределено;
				ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Ложь, ЕстьОтбор, Ложь);
				
				ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
				ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
				ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
				ДополнительныеСвойства.Вставить("НачалоПериода",     ПараметрыОтчета.ДатаНачалаПериодаОтчета);
				ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
				ДополнительныеСвойства.Вставить("ВыводитьЗаголовок", Истина);
				ДополнительныеСвойства.Вставить("КлючВарианта",      ИдентификаторМакета);
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("ВидРасшифровки", 2);
				ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
				ПараметрыФормы.Вставить("ИДРасшифровки", ИдентификаторМакета);
				ПараметрыФормы.Вставить("ЗаполняемыеНастройки", ЗаполняемыеНастройки);
				ПараметрыФормы.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
				
				ОткрытьФорму("Отчет.РасшифровкаПоказателейНДС.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
			КонецЕсли;
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.'");
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПоказательДляРасшифровки = ИДИменПоказателей[0] + "_" + ПараметрыОтчета.НомерТекущейстраницы;
		
		ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
		
		Если ДополнительныеПараметрыРасшифровки <> Неопределено 
			И ДополнительныеПараметрыРасшифровки.РегламентныеОперацииВыполнены Тогда
			
			ПараметрыРасшифровки = ДополнительныеПараметрыРасшифровки.ПараметрыРасшифровки;
			
			ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Истина, Истина, Ложь);
			ДополнительныеСвойства = ПараметрыРасшифровки.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
			ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
			ДополнительныеСвойства.Вставить("НачалоПериода",     ПараметрыОтчета.ДатаНачалаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КлючВарианта",      "РасчетНалогаНаимущество");
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ВидРасшифровки", 2);
			ПараметрыФормы.Вставить("СформироватьПриОткрытии", 		Истина);
			ПараметрыФормы.Вставить("ЗаполняемыеНастройки", 		ЗаполняемыеНастройки);
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", 	ПараметрыРасшифровки);
			
			ОткрытьФорму("Отчет.СправкаРасчетНалогаНаИмущество.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
		Иначе
			Если ДополнительныеПараметрыРасшифровки = Неопределено Тогда
				ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.'");
			Иначе
				ТекстПредупреждения = НСтр("ru = 'Для расшифровки показателя необходимо выполнить регламентную операцию ""Расчет налога на имущество"".'");
			КонецЕсли;
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетАвансыИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПоказательДляРасшифровки = ИДИменПоказателей[0] + "_" + ПараметрыОтчета.НомерТекущейстраницы;
		
		ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
		
		Если ДополнительныеПараметрыРасшифровки <> Неопределено 
			И ДополнительныеПараметрыРасшифровки.РегламентныеОперацииВыполнены Тогда
			
			ПараметрыРасшифровки = ДополнительныеПараметрыРасшифровки.ПараметрыРасшифровки;
			
			ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Истина, Истина, Ложь);
			ДополнительныеСвойства = ПараметрыРасшифровки.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
			ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
			ДополнительныеСвойства.Вставить("НачалоПериода",     ПараметрыОтчета.ДатаНачалаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КлючВарианта",      "РасчетНалогаНаимущество");
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ВидРасшифровки", 2);
			ПараметрыФормы.Вставить("СформироватьПриОткрытии", 		Истина);
			ПараметрыФормы.Вставить("ЗаполняемыеНастройки", 		ЗаполняемыеНастройки);
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", 	ПараметрыРасшифровки);
			
			ОткрытьФорму("Отчет.СправкаРасчетНалогаНаИмущество.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
		Иначе
			Если ДополнительныеПараметрыРасшифровки = Неопределено Тогда
				ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.'");
			Иначе
				ТекстПредупреждения = НСтр("ru = 'Для расшифровки показателя необходимо выполнить регламентную операцию ""Расчет налога на имущество"".'");
			КонецЕсли;
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьМПФормаОтчета2012Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности("Бухгалтерская отчетность малых предприятий",
		ПараметрыОтчета.ДатаНачалаПериодаОтчета, ПараметрыОтчета.ДатаКонцаПериодаОтчета);

	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьСОНКОФормаОтчета2012Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности("Бухгалтерская отчетность СО НКО",
		ПараметрыОтчета.ДатаНачалаПериодаОтчета, ПараметрыОтчета.ДатаКонцаПериодаОтчета);
		
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаголовокРасшифровкиДляВсегоРаздела = ДополнительныеПараметры.ЗаголовокРасшифровкиДляВсегоРаздела;
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы)
	
	ПараметрыФормы.Вставить("ЗаголовокРасшифровки", ЗаголовокРасшифровкиДляВсегоРаздела);
	
	ФормаРасшифровки = ПолучитьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы, , Истина);
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры

Функция НаименованиеРасшифровкиБухОтчетности(НаименованиеОтчета, НачалоПериода, КонецПериода)
	
	Если НачалоГода(НачалоПериода) <> НачалоДня(НачалоПериода) Тогда
		ПериодОтчета = Формат(НачалоПериода, "ДФ=dd.MM.yyyy") + " - " + Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
	Иначе
		Если Месяц(КонецПериода) = 1 Тогда 
			ПериодОтчета = Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
		Иначе
			ПериодОтчета = "Январь - " + Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НаименованиеОтчета + " за " + ПериодОтчета + " - расшифровка значений показателей";
	
КонецФункции

Функция НаименованиеРасшифровкиДекларацииПоНалогуНаПрибыль(НачалоПериода, КонецПериода)
	
	ПериодОтчета = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
	
	Возврат "Декларация по налогу на прибыль за " + ПериодОтчета + " - расшифровка значений показателей";
	
КонецФункции

Функция КопияСтруктуры(ИсходнаяСтруктура)
	
	Результат = Новый Структура;
	
	Для Каждого Элемент Из ИсходнаяСтруктура Цикл
		Результат.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
