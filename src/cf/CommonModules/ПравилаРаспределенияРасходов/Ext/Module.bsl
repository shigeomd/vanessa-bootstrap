////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПравилаРаспределенияРасходовНаПроизводство(Период, Организация) Экспорт
	
	ПравилаРаспределения = НовыеПравилаРаспределения();
	
	ПрименятьПредопределенныеПравила = Истина;
	ПравилаРаспределенияРасходовМодификацияКонфигурации.ПередДобавлениемПравилРаспределенияРасходовНаПроизводство(
		ПравилаРаспределения,
		Период,
		Организация,
		ПрименятьПредопределенныеПравила);
		
	Если ПрименятьПредопределенныеПравила Тогда
		ДобавитьПредопределенныеПравилаРаспределенияРасходовНаПроизводство(ПравилаРаспределения, Период, Организация);
	КонецЕсли;
	
	ПравилаРаспределенияРасходовМодификацияКонфигурации.ПриДобавлениПравилРаспределенияРасходовНаПроизводство(
		ПравилаРаспределения,
		Период,
		Организация);
	
	ОбеспечитьУникальныеИменаПравил(ПравилаРаспределения);
	
	Возврат ПравилаРаспределения;
	
КонецФункции

Функция ПравилаРаспределенияРасходовНаПродажу(Период, Организация) Экспорт
	
	ПравилаРаспределения = НовыеПравилаРаспределения();
	
	ПрименятьПредопределенныеПравила = Истина;
	ПравилаРаспределенияРасходовМодификацияКонфигурации.ПередДобавлениемПравилРаспределенияРасходовНаПродажу(
		ПравилаРаспределения,
		Период,
		Организация,
		ПрименятьПредопределенныеПравила);
		
	Если ПрименятьПредопределенныеПравила Тогда
		ДобавитьПредопределенныеПравилаРаспределенияРасходовНаПродажу(ПравилаРаспределения, Период, Организация);
	КонецЕсли;
		
	ПравилаРаспределенияРасходовМодификацияКонфигурации.ПриДобавленииПравилРаспределенияРасходовНаПродажу(
		ПравилаРаспределения,
		Период,
		Организация);
	
	ОбеспечитьУникальныеИменаПравил(ПравилаРаспределения);
	
	Возврат ПравилаРаспределения;
	
КонецФункции

// Создает структуру таблицы правил распределения
//
Функция НовыеПравилаРаспределения() Экспорт
	
	ПравилаРаспределения = Новый ТаблицаЗначений();
	// Порядок правил важен: каждое следующее правило распределяет то, что не распределили предыдущие.
	
	ПравилаРаспределения.Колонки.Добавить("Имя", 	            ТипИмени());
	ПравилаРаспределения.Колонки.Добавить("Наименование", 	    Новый ОписаниеТипов("Строка"));
	
	// Содержание проводки следует задать только для тех правил распределения, 
	// которым не могут соответствовать предварительные проводки.
	// Например:
	// - проводка по списанию косвенных расходов НУ (Дт 90.08 Кт 20.01) не формируется до выполнения регламентной операции.
	//   Поэтому в ней можно указать содержание, соответствующее правилу распределения.
	// - проводка по выпуск продукции (Дт 43 Кт 20.01) формируется по правилу распределения. 
	//   В результате регламентной операции должны быть сформированы проводки по _корректировке_ предварительных сумм 
	//   (с соответствующим содержанием)
	// Принято допущение, что предварительные проводки могут соответствовать любому выпуску (про "Выпуск" см. ниже).
	// Поэтому содержание всех проводок по выпуску - стандартное, его не следует задавать.
	ПравилаРаспределения.Колонки.Добавить("СодержаниеПроводки", Новый ОписаниеТипов(Метаданные.РегистрыБухгалтерии.Хозрасчетный.Реквизиты.Содержание.Тип));
	
	// Следует отметить правила, которые приводят к появлению особых проводок и отражению в справках-расчетах
	ПравилаРаспределения.Колонки.Добавить("Выпуск",             Новый ОписаниеТипов("Булево"));
	
	// Ссылка на настройку, выполненную пользователем
	ПравилаРаспределения.Колонки.Добавить("Настройка", 		    Новый ОписаниеТипов("РегистрСведенийКлючЗаписи.МетодыРаспределенияКосвенныхРасходовОрганизаций"));
	ПравилаРаспределения.Колонки.Добавить("МетодРасчета",       Новый ОписаниеТипов("ПеречислениеСсылка.БазыРаспределенияКосвенныхРасходов"));
	// Отбор расходов, для которых следует применить это правило
	ПравилаРаспределения.Колонки.Добавить("ОтборРасходов", 	   Новый ОписаниеТипов("Структура")); 
	// Перечень полей запроса - разрезов аналитики _источника_, важных для распределения
	ПравилаРаспределения.Колонки.Добавить("ПоляИсточника",     Новый ОписаниеТипов("Структура"));
 	// Правило предусматривает выполнение одного из четырех действий:
	// - РаспределитьНаРасходы -  распределение сумм в соответствии с коэффициентами базы.
	//                            Аналитика приемника задана в виде полей, перечисленных в РазрезыРаспределения()
	//                            (НоменклатурнаяГруппа, СтатьяЗатрат и т.п.)
	//                            Аналитика приемника может определяться полями источника и полями базы (см. ПоляПриемника)
	// - РаспределитьНаСубконто - распределение сумм в соответствии с коэффициентами базы.
	//                            Аналитика приемника задана в виде полей, перечисленных в РазрезыУчета() + поле Номенклатура.
	//                            В частном случае приемник может быть Расходами, причем аналитика расходов явно задана в базе распределения.
	//                            В этом действие но в отличие от действия РаспределитьНаРасходы,
	// - ВыделитьНалоговыйУчет  - перенос сумм налогового учета с образованием разниц.
	//                            Тип разниц (ВР, ПР) определяется базой распределения.
	//                            Аналитика приемника задана так же, как и в правиле РаспределитьНаРасходы.
	//                            Коэффициенты базы не используются.
	// - Зафиксировать          - ограничение распределения расходов.
	//                            Расходы, к которым применено это правило, не участвуют в обработке следующими правилами.
	//                            База распределения не используется.
	//
	// В общем случае, расходы, к которым применено любое из правил, не участвуют в обработке другими правилами.
	// Исключение: расходы, к которым применено правило ВыделитьНалоговыйУчет могут быть в последствии обработаны другими правилами 
	// (с другими действиями). 
	// Обратное - неверно: после выполнения над расходами любого правила не имеет смысла выполнять над ними действие ВыделитьНалоговыйУчет.
	// Это нужно учитывать при определении порядка правил.
	// 
	// Такой подход позволяет сократит число ребер, по которым заведомо не будут двигаться суммы
	// (при оценке расходов для конкретной вершины сначала выделяется НУ, а потом выполняется распределение).
	
	ПравилаРаспределения.Колонки.Добавить("Действие",          Новый ОписаниеТипов("Строка"));
	// Перечень полей аналитики приемника, которые присутствуют в базе
	ПравилаРаспределения.Колонки.Добавить("ПоляПриемника",     Новый ОписаниеТипов("Структура"));
	// Несколько правил могут использовать одинаковую базу распределения - "таблицу с коэффициентами".
	// Если у нескольких правил указана одинаковая база распределения, 
	// то она будет рассчитана в соответствии с первым из этих правил.
	// "БазаРаспределения" описывает запрос, который помещает базу во временную таблицу.
	//
	// Своства структуры:
	// 1. Имя - имя временной таблицы, в которую будет помещен результат
	// 2. ТекстЗапроса - текст запроса, создающий временную таблицу.
	//    Может использовать временные таблицы, созданные следующими процедурами:
	//    РасчетСебестоимости.СоздатьСчетаЗатрат()
	//    РасчетСебестоимости.СоздатьПоступления()
	// 3. ПараметрыЗапроса - (опционально) - Структура, параметры запроса 
	//    Также можно использовать параметры, описанные в СоздатьБазыРаспределения()
	// 4. ПакетВременныхТаблиц - (опционально) - Имя пакета временных таблиц,
	//    которые используются для получения данных базы распределения.
	//    Несколько правил могут использовать одни и те же временные таблицы.
	//    Пакет с одинаковым именем будет создан один раз.
	// 5. СоздатьВременныеТаблицы - (если есть ПакетВременныхТаблиц) - 
	//    текст запроса, который создает временные таблицы
	// 6. ПараметрыВременныхТаблиц - (если есть ПакетВременныхТаблиц) - Структура, 
	//    параметры запроса, который создает временные таблицы
	// 7. УничтожитьВременныеТаблицы - (если есть ПакетВременныхТаблиц) - 
	//    текст запроса, который уинчтожает временные таблицы
	//
	// Если в запросе, формирующем базу распределения, требуется получить "пустые" ссылки,
	// то 
	// - в полях составного типа должно быть Неопределено
	// - в остальных - типизированное значение.
	// Например, в поле базы распределения СтатьяЗатрат недопустимо помещать Неопределено,
	// а в поле Субконто1 недопустимо помещать ссылку на пустую статью затрат.
	ПравилаРаспределения.Колонки.Добавить("БазаРаспределения", Новый ОписаниеТипов("Структура"));
	
	ПравилаРаспределения.Колонки.Добавить("ЕстьБазаРаспределения", Новый ОписаниеТипов("Булево"));
	
	ПравилаРаспределения.Индексы.Добавить("Имя");
	
	Возврат ПравилаРаспределения;
		
КонецФункции

Процедура ПроверитьНастройку(Ошибки, Период, Организация, ЗаполненаАналитикаРасходов = Истина) Экспорт
	
	Если Не БухгалтерскийУчетПереопределяемый.ВедетсяПроизводственнаяДеятельность(Организация, Период) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьМетодыРаспределенияКосвенныхРасходов(МенеджерВременныхТаблиц, Период, Организация);
	
	ПроверитьЗаданыМетодыРаспределенияКосвенныхРасходов(Ошибки, МенеджерВременныхТаблиц);
	ПроверитьУказанСписокСтатейЗатрат(Ошибки, МенеджерВременныхТаблиц);
	ПроверитьЗаполненСписокСтатейЗатрат(Ошибки, МенеджерВременныхТаблиц);
	ПроверитьМетодРаспределенияВыручка_ЕстьВыручка(Ошибки, МенеджерВременныхТаблиц, Период, Организация);
	ПроверитьМетодРаспределенияВыручка_ЕстьЗатраты(Ошибки, МенеджерВременныхТаблиц, Период, Организация);
	
	Если ЗаполненаАналитикаРасходов Тогда
		ПроверитьПолнотуНастройкиРаспределенияКосвенныхРасходов(Ошибки, МенеджерВременныхТаблиц, Период, Организация);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОЛУЧЕНИЕ НАСТРОЕК РАСПРЕДЕЛЕНИЯ КОСВЕННЫХ РАСХОДОВ

Процедура СоздатьМетодыРаспределенияКосвенныхРасходов(МенеджерВременныхТаблиц, Период, Организация)
	
	// Если применяется директ-костинг, то настройки для счета 26 игнорируются.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("Период",                 КонецМесяца(Период));
	Запрос.УстановитьПараметр("ДиректКостинг",          УчетнаяПолитика.ДиректКостинг(Организация, Период));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаНеПрименяетсяНастройка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	&ДиректКостинг
	|	И Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбщехозяйственныеРасходы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Настройки.Организация КАК Организация,
	|	Настройки.СчетЗатрат КАК СчетЗатрат,
	|	Настройки.Подразделение КАК Подразделение,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.БазаРаспределения,
	|	Настройки.СписокСтатейЗатрат,
	|	Настройки.СчетПрямыхЗатрат,
	|	Настройки.ПодразделениеЗатрат,
	|	Настройки.Период
	|ПОМЕСТИТЬ МетодыРаспределенияКосвенныхРасходов
	|ИЗ
	|	РегистрСведений.МетодыРаспределенияКосвенныхРасходовОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК Настройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаНеПрименяетсяНастройка КАК СчетаНеПрименяетсяНастройка
	|		ПО Настройки.СчетЗатрат = СчетаНеПрименяетсяНастройка.Счет
	|ГДЕ
	|	СчетаНеПрименяетсяНастройка.Счет ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаНеПрименяетсяНастройка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьНастройкаРаспределенияКосвенныхРасходов(МенеджерВременныхТаблиц)
	
	// МенеджерВременныхТаблиц должен содержать таблицу МетодыРаспределенияКосвенныхРасходов
	
	// НастройкаРаспределенияКосвенныхРасходов в отличие от МетодыРаспределенияКосвенныхРасходов 
	// содержит отдельные записи по каждому субсчету.
	// Если субсчетов нет, то НастройкаРаспределенияКосвенныхРасходов по составу совпадает с МетодыРаспределенияКосвенныхРасходов.
	//
	// Также НастройкаРаспределенияКосвенныхРасходов дополняется полем Приоритет. Об этом поле - в следующем разделе.
	//
	// РАСЧЕТ ПРИОРИТЕТА
	//
	// В настройке используется подход "незаполненное поле означает <все, для которых не указано явно>".
	// Кроме того, разные настройки могут быть выполнены как для счета-группы, так и для субсчета.
	// Поэтому одни и те же расходы могут попасть под две настройки и применяется приоретизация настроек.
	//
	// Для приоретизации условия, при которых настройка подходит в конкретном случае, отранжированы:
	// 0. "Для всех статей затрат"             - меньше всего влияет на авторитет правила
	// 1. "Для всех подразделений" 
	// 2. "Для всех счетов"                    - сильнее всего подрывает авторитет правила
	// (также может быть условие "для всех счетов, входящих в группу", оно между 1 и 2 и о нем - в соответствующем разделе).
	//
	// Таким образом, если есть две подходящие настройки, в одной из которых заполнено только подразделение, а в другой - только статья, 
	// то применять следует первую.
	//
	// В соответствии с рангом каждому из условий назначется вес - соответствующая порядковому номеру степень числа 2.
	// Исходя из этого оценивается сочетание условий, например:
	// 1. Заполнено все явно - отбор по трем признакам  (приоритет - 0)
	// 2. Пустая статья, отбор по двум признакам        (приоритет - 1)
	// 3. Пустое подразделение, отбор по двум признакам (приоритет - 2)
	// 4. Пустое подразделение и статья затрат          (приоритет - 3)
	// 5. Все пустое                                    (приоритет - 7)
	//
	// РАСЧЕТ ПРИОРИТЕТА ДЛЯ СЧЕТОВ-ГРУПП
	//
	// Если в иерархии счетов несколько уровней, то ранг условия "Для всех счетов" поднимается 
	// в зависимости от количества дополнительных уровней таким образом,
	// чтобы образовавшегося места хватило для всех условий вида "Для всех счетов, входящих в группу".
	// 
	// Так, если есть три уровня субсчетов, то
	// - настройка, выполненная "для всех счетов" получает приоритет 16 (2^(2+ 2)
	// - настройка, выполненная для счета 26      получает приоритет 8  (2^(2+(2-1)-0))
	// - настройка, выполненная для счета 26.01   получает приоритет 4  (2^(2+(2-1)-1))
	// - настройка, выполненная для счета 26.01.1 получает приоритет 0
	
	// Получим данные об иерархии счетов.
	// Рассчитаем приоритет счетам-группам (то есть тем счетам, для которых могут быть выполнены настройки).
	
	ИерархияСчетов = ИерархияСчетов();
	ИерархияСчетов.Колонки.Добавить("Приоритет",  Новый ОписаниеТипов("Число")); // Рассчитывается для СчетГруппа
	
	МаксимальныйУровеньСчетов = 0;
	
	Для Каждого ОписаниеСчета Из ИерархияСчетов Цикл
		МаксимальныйУровеньСчетов = Макс(МаксимальныйУровеньСчетов, ОписаниеСчета.УровеньСчетаГруппы);
	КонецЦикла;
	
	НачалоДиапазонаРангов = 2; // "Для всех счетов"
	РангДляВсехСчетов     = НачалоДиапазонаРангов + МаксимальныйУровеньСчетов;
	Для Каждого ОписаниеСчета Из ИерархияСчетов Цикл
		
		Если ОписаниеСчета.УровеньСчетаГруппы = МаксимальныйУровеньСчетов Тогда
			ОписаниеСчета.Приоритет = 0;
		Иначе
			ОписаниеСчета.Приоритет = Pow(2, НачалоДиапазонаРангов + МаксимальныйУровеньСчетов - 1 - ОписаниеСчета.УровеньСчетаГруппы);
		КонецЕсли;
		
	КонецЦикла;
	
	// Дополним МетодыРаспределенияКосвенныхРасходов данными о субсчетах - получим НастройкаРаспределенияКосвенныхРасходов
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.УстановитьПараметр("ИерархияСчетов",      ИерархияСчетов);
	Запрос.УстановитьПараметр("ВесДляВсехСчетов",    Pow(2, РангДляВсехСчетов));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИерархияСчетов.СчетГруппа КАК СчетГруппа,
	|	ИерархияСчетов.Счет КАК Счет,
	|	ИерархияСчетов.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ИерархияСчетов
	|ИЗ
	|	&ИерархияСчетов КАК ИерархияСчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Настройки.СчетЗатрат = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА &ВесДляВсехСчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ + ЕСТЬNULL(ИерархияСчетов.Приоритет, 0) + ВЫБОР
	|		КОГДА Настройки.Подразделение = &ПустоеПодразделение
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройки.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приоритет,
	|	Настройки.Организация КАК Организация,
	|	Настройки.СчетЗатрат КАК СчетНастройки,
	|	ЕСТЬNULL(ИерархияСчетов.Счет, Настройки.СчетЗатрат) КАК СчетЗатрат,
	|	Настройки.Подразделение КАК Подразделение,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.БазаРаспределения КАК БазаРаспределения,
	|	Настройки.СписокСтатейЗатрат КАК СписокСтатейЗатрат,
	|	Настройки.СчетПрямыхЗатрат КАК СчетПрямыхЗатрат,
	|	Настройки.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Настройки.Период КАК Период
	|ПОМЕСТИТЬ НастройкаРаспределенияКосвенныхРасходов
	|ИЗ
	|	МетодыРаспределенияКосвенныхРасходов КАК Настройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ИерархияСчетов
	|		ПО Настройки.СчетЗатрат = ИерархияСчетов.СчетГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетЗатрат,
	|	Подразделение,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИерархияСчетов";
	
	Запрос.Выполнить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОВЕРКА КОРРЕКТНОСТИ НАСТРОЙКИ

Процедура ПроверитьЗаданыМетодыРаспределенияКосвенныхРасходов(Ошибки, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Настройки.Период КАК Период,
	|	Настройки.Организация КАК Организация,
	|	Настройки.СчетЗатрат КАК СчетЗатрат,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(Настройки.Организация),
	|	ПРЕДСТАВЛЕНИЕ(Настройки.СчетЗатрат),
	|	ПРЕДСТАВЛЕНИЕ(Настройки.СтатьяЗатрат),
	|	ПРЕДСТАВЛЕНИЕ(Настройки.Подразделение)
	|ИЗ
	|	МетодыРаспределенияКосвенныхРасходов КАК Настройки
	|ГДЕ
	|	Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	СчетЗатрат,
	|	СтатьяЗатрат,
	|	Подразделение";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
	Ошибка.Описание = НСтр("ru = 'Не задана база распределения при настройке методов распределения косвенных расходов.'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МестоОшибки = Ошибка.ЛокализацияДетально.Добавить();
		МестоОшибки.Ссылка = СсылкаМетодыРаспределенияКосвенныхРасходовОрганизаций(Выборка);
		
	КонецЦикла;
		
	Если Ошибка.ЛокализацияДетально.Количество() = 1 Тогда
		Ошибка.Локализация = НСтр("ru = 'Проверьте запись:'");
	Иначе
		Ошибка.Локализация = НСтр("ru = 'Проверьте записи:'");
	КонецЕсли;
		
КонецПроцедуры

Процедура ПроверитьУказанСписокСтатейЗатрат(Ошибки, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Проверим, что заполнен список статей затрат для метода распределения косвенных расходов "Отдельные статьи прямых затрат"
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Настройки.Период КАК Период,
	|	Настройки.Организация КАК Организация,
	|	Настройки.СчетЗатрат КАК СчетЗатрат,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(Настройки.Организация),
	|	ПРЕДСТАВЛЕНИЕ(Настройки.СчетЗатрат),
	|	ПРЕДСТАВЛЕНИЕ(Настройки.СтатьяЗатрат),
	|	ПРЕДСТАВЛЕНИЕ(Настройки.Подразделение)
	|ИЗ
	|	МетодыРаспределенияКосвенныхРасходов КАК Настройки
	|ГДЕ
	|	Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат)
	|	И Настройки.СписокСтатейЗатрат = ЗНАЧЕНИЕ(Справочник.СписокСтатейЗатратВключенныхВБазуРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	СчетЗатрат,
	|	СтатьяЗатрат,
	|	Подразделение";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Ошибка          = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
	Ошибка.Описание = НСтр("ru = 'Не указан список статей затрат базы распределения ""Отдельные статьи прямых затрат"".'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МестоОшибки = Ошибка.ЛокализацияДетально.Добавить();
		МестоОшибки.Ссылка = СсылкаМетодыРаспределенияКосвенныхРасходовОрганизаций(Выборка);
		
	КонецЦикла;
		
	Если Ошибка.ЛокализацияДетально.Количество() = 1 Тогда
		Ошибка.Локализация = НСтр("ru = 'Проверьте запись:'");
	Иначе
		Ошибка.Локализация = НСтр("ru = 'Проверьте записи:'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполненСписокСтатейЗатрат(Ошибки, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Настройки.СписокСтатейЗатрат
	|ПОМЕСТИТЬ ВТ_Списки
	|ИЗ
	|	МетодыРаспределенияКосвенныхРасходов КАК Настройки
	|ГДЕ
	|	Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат)
	|	И Настройки.СписокСтатейЗатрат <> ЗНАЧЕНИЕ(Справочник.СписокСтатейЗатратВключенныхВБазуРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Списки.СписокСтатейЗатрат = ЗНАЧЕНИЕ(Справочник.СписокСтатейЗатратВключенныхВБазуРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаполненСписокСтатейЗатрат,
	|	Списки.СписокСтатейЗатрат КАК СписокСтатейЗатрат,
	|	ПРЕДСТАВЛЕНИЕ(Списки.СписокСтатейЗатрат)
	|ИЗ
	|	ВТ_Списки КАК Списки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СписокСтатейЗатратВключенныхВБазуРаспределенияКосвенныхРасходов.СтатьиЗатрат КАК СодержаниеСписка
	|		ПО Списки.СписокСтатейЗатрат = СодержаниеСписка.Ссылка
	|ГДЕ
	|	СодержаниеСписка.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписокСтатейЗатрат";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Ошибка          = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
		Ошибка.Описание = НСтр("ru = 'Не заполнен список статей затрат базы распределения ""Отдельные статьи прямых затрат"".'");
		
		ШаблонРекомендации = НСтр("ru = 'Заполните список статей затрат %1'");
		Ошибка.Рекомендация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонРекомендации, Выборка.СписокСтатейЗатрат);
		
		Ошибка.Ссылка = ПолучитьНавигационнуюСсылку(Выборка.СписокСтатейЗатрат);
		
	КонецЦикла;
	
	// Уберем за собой
	Запрос.Текст = "УНИЧТОЖИТЬ ВТ_Списки";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПроверитьМетодРаспределенияВыручка_ЕстьВыручка(Ошибки, МенеджерВременныхТаблиц, Период, Организация)
	
	// Проверим, что для настроек с методом распределения косвенных расходов "Выручка" есть выручка
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Настройки.Период КАК Период,
	|	Настройки.Организация КАК Организация,
	|	Настройки.СчетЗатрат КАК СчетЗатрат,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.Подразделение КАК Подразделение,
	|	Настройки.Организация.Представление,
	|	Настройки.СчетЗатрат.Представление,
	|	Настройки.СтатьяЗатрат.Представление,
	|	Настройки.Подразделение.Представление
	|ИЗ
	|	МетодыРаспределенияКосвенныхРасходов КАК Настройки
	|ГДЕ
	|	Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.Выручка)";
	
	ПодозрительныеНастройки = Запрос.Выполнить();
	Если ПодозрительныеНастройки.Пустой() Тогда
		Возврат;
	КонецЕсли;
	// Результат запроса обработаем позже
	
	// Убедимся, что такое заполнение настройки действительно является ошибкой
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",        КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("СчетаВыручки",        БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Выручка));
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Хозрасчетный.СчетКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.СчетКт В(&СчетаВыручки)
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Хозрасчетный.Активность
	|	И Хозрасчетный.Сумма > 0";
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// Установили, что есть ошибка и знаем, где она.
	// Сообщим об этом
	
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
	
	ДокументыОтраженияВыручки = Новый Массив;
	ДокументыОтраженияВыручки.Добавить(" - " + Метаданные.Документы.РеализацияТоваровУслуг.Синоним);
	ДокументыОтраженияВыручки.Добавить(" - " + Метаданные.Документы.ОказаниеУслуг.Синоним);
	ДокументыОтраженияВыручки.Добавить(" - " + Метаданные.Документы.АктОбОказанииПроизводственныхУслуг.Синоним);
	
	ДокументыОтраженияВыручки = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(ДокументыОтраженияВыручки, Символы.ПС);
	
	Ошибка.Описание     = НСтр("ru = 'Для распределения косвенных расходов используется база ""Выручка"", но выручка не отражена.'");
	Рекомендация        = НСтр("ru = 'Отразите реализацию услуг документами
                                |%1'");
	Ошибка.Рекомендация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Рекомендация, ДокументыОтраженияВыручки);
	
КонецПроцедуры

Процедура ПроверитьМетодРаспределенияВыручка_ЕстьЗатраты(Ошибки, МенеджерВременныхТаблиц, Период, Организация)
	
	ТолькоУслугиЗаказчикам = ТолькоУслугиЗаказчикам(Организация, Период);
	
	Если ТолькоУслугиЗаказчикам
		И УчетнаяПолитика.ПорядокСписанияРасходовНаСебестоимостьУслуг(Организация, Период) = 
		Перечисления.ПорядокСписанияРасходовНаСебестоимостьУслуг.БезУчетаВыручки Тогда
		Возврат;
	КонецЕсли;
		
	Если ПолучитьФункциональнуюОпцию("ВестиУчетЗатратПоПодразделениям") Тогда
		ПоЗатратамОпределяетсяПодразделение = Не ТолькоУслугиЗаказчикам;
	Иначе
		ПоЗатратамОпределяетсяПодразделение = Ложь;
	КонецЕсли;
	
	// Проверим, что для настроек с методом распределения косвенных расходов "Выручка"
	// можно определить счет и подразделение, на которые списать затраты
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустоеПодразделение",                 БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.УстановитьПараметр("ПоЗатратамОпределяетсяПодразделение", ПоЗатратамОпределяетсяПодразделение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Настройки.Период КАК Период,
	|	Настройки.Организация КАК Организация,
	|	Настройки.СчетЗатрат КАК СчетЗатрат,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.Подразделение КАК Подразделение,
	|	Настройки.Организация.Представление,
	|	Настройки.СчетЗатрат.Представление,
	|	Настройки.СтатьяЗатрат.Представление,
	|	Настройки.Подразделение.Представление,
	|	ВЫБОР
	|		КОГДА Настройки.СчетПрямыхЗатрат = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаполненСчет
	|ИЗ
	|	МетодыРаспределенияКосвенныхРасходов КАК Настройки
	|ГДЕ
	|	Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.Выручка)
	|	И (Настройки.СчетПрямыхЗатрат = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ИЛИ &ПоЗатратамОпределяетсяПодразделение = ИСТИНА
	|				И Настройки.ПодразделениеЗатрат = &ПустоеПодразделение)
	|ИТОГИ ПО
	|	ЗаполненСчет";
	ПодозрительныеНастройки = Запрос.Выполнить();
	Если ПодозрительныеНастройки.Пустой() Тогда
		Возврат;
	КонецЕсли;
	// Результат запроса обработаем позже
	
	// Убедимся, что такое заполнение настройки действительно является ошибкой
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",        КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("СчетаПрямыхРасходов", УчетЗатрат.ПредопределенныеСчетаПрямыхРасходов());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаПрямыхРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаПрямыхРасходов)
	|	И НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаПрямыхРасходов.Счет
	|				ИЗ
	|					СчетаПрямыхРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|			Организация = &Организация,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт <> 0";
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// Установили, что есть ошибка и знаем, где она.
	// Сообщим об этом
	
	ВыборкаОшибок = ПодозрительныеНастройки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОшибок.Следующий() Цикл
		
		Ошибка = ВыводСообщенийОбОшибках.ДобавитьОписаниеОшибки(Ошибки);
		
		Если ВыборкаОшибок.ЗаполненСчет Тогда
			Описание     = НСтр("ru = 'Для распределения косвенных расходов используется база ""Выручка"", но подразделение прямых расходов не указано.'");
			Рекомендация = НСтр("ru = 'Укажите подразделение прямых расходов.'");
		ИначеЕсли ПоЗатратамОпределяетсяПодразделение Тогда 
			// Не заполнени ни счет ни подразделение и оба они нужны
			Описание     = НСтр("ru = 'Для распределения косвенных расходов используется база ""Выручка"", но ни счет ни подразделение прямых расходов не указаны.'");
			Рекомендация = НСтр("ru = 'Укажите счет и подразделение прямых расходов.'");
		Иначе
			// Важен только счет
			Описание     = НСтр("ru = 'Для распределения косвенных расходов используется база ""Выручка"", но счет прямых расходов не указан.'");
			Рекомендация = НСтр("ru = 'Укажите счет прямых расходов.'");
		КонецЕсли;
		ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", Описание);
		
		Если Не ЗначениеЗаполнено(ВыборкаОшибок.СчетЗатрат) 
			Или БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(ВыборкаОшибок.СчетЗатрат, ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы) Тогда
			
			РекомендацияОХР = НСтр("ru = 'Проверьте, что общехозяйственные расходы требуется включать в себестоимость продукции. 
                                    |Если не требуется, то в учетной политике укажите, что общехозяйственные расходы включаются в себестоимость продаж (методом директ-костинг).'");
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст",  РекомендацияОХР);
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Ссылка", БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьНавигационнуюСсылкуНаУчетнуюПолитикуОрганизации());
			
		КонецЕсли;
		
		ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", Рекомендация);
		
		ВыборкаНастроек = ВыборкаОшибок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаНастроек.Количество() = 1 Тогда
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", НСтр("ru = 'Проверьте запись:'"));
			ДетальныеЗаписи = Ошибка;
		Иначе
			ДетальныеЗаписи = ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", НСтр("ru = 'Проверьте записи:'"));
		КонецЕсли;
		
		Пока ВыборкаНастроек.Следующий() Цикл
			ВыводСообщенийОбОшибках.ДобавитьСекцию(
				ДетальныеЗаписи, 
				"Ссылка", 
				СсылкаМетодыРаспределенияКосвенныхРасходовОрганизаций(ВыборкаНастроек));
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПолнотуНастройкиРаспределенияКосвенныхРасходов(Ошибки, МенеджерВременныхТаблиц, Период, Организация)
	
	СоздатьНастройкаРаспределенияКосвенныхРасходов(МенеджерВременныхТаблиц);
	
	// Получим аналитику косвенных расходов.
	// Учтем, что при применении директ-костинга для счета 26 уже есть предопределенное правило.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода",          НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",           КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("СчетаКосвенныхРасходов", УчетЗатрат.ПредопределенныеСчетаКосвенныхРасходов());
	Запрос.УстановитьПараметр("ДиректКостинг",          УчетнаяПолитика.ДиректКостинг(Организация, Период));
	Запрос.УстановитьПараметр("ПустоеПодразделение",    БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаКосвенныхРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаКосвенныхРасходов)
	|	И НЕ(&ДиректКостинг
	|				И Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбщехозяйственныеРасходы)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ЕстьNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОбороты.Субконто1 КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ВТ_КосвенныеРасходы
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКосвенныхРасходов.Счет
	|				ИЗ
	|					ВТ_СчетаКосвенныхРасходов КАК СчетаКосвенныхРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			Организация = &Организация,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Подразделение,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаКосвенныхРасходов";
	
	Запрос.Выполнить();
	
	// Применим настройки к расходам (по возрастанию общности).
	// Если останутся расходы, которые не "покрыты" настройками, то о них сообщим.
	
	// Если настройки не выполнены не только для конкретной комбинации аналитики, но и для всего счета,
	// то не будем выводить все возможные комбинации, а расскажем только про счет.
	// То же самое для подразделения: если указана настройка для счета, но не указана для сочетания счета и подразделения,
	// то расскажем про счет и подразделение, но не про каждую статью затрат.
	// Для этого служит поле запроса Группа - оно означает количество полей, по которому искали настройку 
	// для данной аналитики расходов, но не нашли. Например, "1" означает, что нет настройки даже для указанного счета.
	
	// В таблице МетодыРаспределенияКосвенныхРасходов используется правило
	// "незаполненное поле означает <все возможные значения>".
	// Для того, чтобы применить такие правила, в общем случае следует выполнить 2^N запросов,
	// где N - это число таких полей (колонок, которые могут быть не заполнены).
	// В данном случае - 14 запросов (8 + 4 + 2).
	// Несмотря на то, что текст запросов не зависит от данных конфигурации,
	// формируем этот текст динамически, чтобы не запутаться в запросах.
	
	// Фрагмент запроса нельзя редактировать конструктором, потому что он содержит комментарии,
	// которые ниже будут заменены
    ТекстЗапроса = 
	"ВЫБРАТЬ
	|	0 КАК Группа,
	|	Расходы.Счет КАК Счет,
	|	Расходы.Подразделение КАК Подразделение,
	|	Расходы.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ВТ_РасходыСНастройкой
	|ИЗ
	|	ВТ_КосвенныеРасходы КАК Расходы
	|ГДЕ
	|	ЛОЖЬ
	| 
	|//Объединить 
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Подразделение,
	|	СтатьяЗатрат";
	
	ШаблонЧастьЗапросаОбъединить = 
	"ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	//Группа,
	|	Расходы.Счет,
	|	Расходы.Подразделение,
	|	Расходы.СтатьяЗатрат
	|ИЗ
	|	ВТ_КосвенныеРасходы КАК Расходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкаРаспределенияКосвенныхРасходов КАК Настройки
	|		ПО Истина
	|//Счет_Истина           И Настройки.СчетЗатрат = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|//Счет_Ложь             И Расходы.Счет = Настройки.СчетЗатрат
	|//Подразделение_Истина	 И Настройки.Подразделение = &ПустоеПодразделение
	|//Подразделение_Ложь	 И Расходы.Подразделение = Настройки.Подразделение
	|//СтатьяЗатрат_Истина   И Настройки.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|//СтатьяЗатрат_Ложь     И Расходы.СтатьяЗатрат = Настройки.СтатьяЗатрат
	|
	|//Объединить 
	|";
	
	ПоляСоединения = Новый Массив;
	ПоляСоединения.Добавить("Счет");
	ПоляСоединения.Добавить("Подразделение");
	ПоляСоединения.Добавить("СтатьяЗатрат");
	
	Пока ПоляСоединения.Количество() > 0 Цикл
		
		КоличествоПолей = ПоляСоединения.Количество();
		Для Комбинация = 0 По Pow(2, КоличествоПолей) - 1 Цикл
			
			ЧастьЗапроса = СтрЗаменить(ШаблонЧастьЗапросаОбъединить, "//Группа", КоличествоПолей);
			
			ЗначенияПолей = РазложитьПоСтепенямДвойки(Комбинация, КоличествоПолей);
			Для НомерПоля = 0 По КоличествоПолей - 1 Цикл
				ИмяПоля = ПоляСоединения[НомерПоля];
				Если ЗначенияПолей[НомерПоля] Тогда
					ЧастьЗапроса = СтрЗаменить(ЧастьЗапроса, "//" + ИмяПоля + "_Истина", "");
				Иначе
					ЧастьЗапроса = СтрЗаменить(ЧастьЗапроса, "//" + ИмяПоля + "_Ложь",   "");
				КонецЕсли;
			КонецЦикла; // НомерПоля
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//Объединить", ЧастьЗапроса);
			
		КонецЦикла; // Комбинация
		
		ПоляСоединения.Удалить(ПоляСоединения.ВГраница());
		
	КонецЦикла;
	
	// Выполним запрос, который готовит таблицу ВТ_РасходыСНастройкой
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	// Выполним запрос, который сгруппирует данные таблицы ВТ_РасходыСНастройкой
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БезНастройки.Группа КАК Группа,
	|	БезНастройки.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА БезНастройки.Группа > 0
	|			ТОГДА БезНастройки.Подразделение
	|		ИНАЧЕ &ПустоеПодразделение
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА БезНастройки.Группа > 1
	|			ТОГДА БезНастройки.СтатьяЗатрат
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	БезНастройки.СчетПредставление КАК СчетПредставление,
	|	ВЫБОР
	|		КОГДА БезНастройки.Группа > 0
	|			ТОГДА БезНастройки.ПодразделениеПредставление
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПодразделениеПредставление,
	|	ВЫБОР
	|		КОГДА БезНастройки.Группа > 1
	|			ТОГДА БезНастройки.СтатьяЗатратПредставление
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СтатьяЗатратПредставление,
	|	БезНастройки.СчетУпорядочивание КАК СчетУпорядочивание,
	|	ВЫБОР
	|		КОГДА БезНастройки.Группа > 0
	|			ТОГДА БезНастройки.ПодразделениеУпорядочивание
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПодразделениеУпорядочивание,
	|	ВЫБОР
	|		КОГДА БезНастройки.Группа > 1
	|			ТОГДА БезНастройки.СтатьяЗатратУпорядочивание
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СтатьяЗатратУпорядочивание
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ЕСТЬNULL(ПопыткиНастроить.Группа, 0)) КАК Группа,
	|		Расходы.Счет КАК Счет,
	|		Расходы.Подразделение КАК Подразделение,
	|		Расходы.СтатьяЗатрат КАК СтатьяЗатрат,
	|		ПРЕДСТАВЛЕНИЕ(Расходы.Счет) КАК СчетПредставление,
	|		ПРЕДСТАВЛЕНИЕ(Расходы.Подразделение) КАК ПодразделениеПредставление,
	|		ПРЕДСТАВЛЕНИЕ(Расходы.СтатьяЗатрат) КАК СтатьяЗатратПредставление,
	|		Расходы.Счет.Код КАК СчетУпорядочивание,
	|		Расходы.Подразделение.РеквизитДопУпорядочивания КАК ПодразделениеУпорядочивание,
	|		Расходы.СтатьяЗатрат.Наименование КАК СтатьяЗатратУпорядочивание
	|	ИЗ
	|		ВТ_КосвенныеРасходы КАК Расходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасходыСНастройкой КАК Настройка
	|			ПО (Настройка.Группа = 3)
	|				И Расходы.Счет = Настройка.Счет
	|				И Расходы.Подразделение = Настройка.Подразделение
	|				И Расходы.СтатьяЗатрат = Настройка.СтатьяЗатрат
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасходыСНастройкой КАК ПопыткиНастроить
	|			ПО (ПопыткиНастроить.Группа <> 3)
	|				И Расходы.Счет = ПопыткиНастроить.Счет
	|				И Расходы.Подразделение = ПопыткиНастроить.Подразделение
	|				И Расходы.СтатьяЗатрат = ПопыткиНастроить.СтатьяЗатрат
	|	ГДЕ
	|		Настройка.Счет ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Расходы.Счет,
	|		Расходы.Счет.Код,
	|		Расходы.Подразделение,
	|		Расходы.Подразделение.РеквизитДопУпорядочивания,
	|		Расходы.СтатьяЗатрат,
	|		Расходы.СтатьяЗатрат.Наименование) КАК БезНастройки
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетУпорядочивание,
	|	ПодразделениеУпорядочивание,
	|	СтатьяЗатратУпорядочивание";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Описание = НСтр("ru = 'Не настроено распределение косвенных расходов.'");
		
		// Даем разные рекомендации для случая, когда требуется настройка для счета 26
		// и когда не требуется. Потому что распределение для счета 26 настраивается в двух местах.
		РекомендацияОХР = НСтр("ru = 'Проверьте, что общехозяйственные расходы требуется включать в себестоимость продукции. 
			|Если не требуется, то в учетной политике укажите, что общехозяйственные расходы включаются в себестоимость продаж (методом директ-костинг).
			|Если требуется, то настройте методы распределения косвенных расходов.'");
		СсылкаОХР       = БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьНавигационнуюСсылкуНаУчетнуюПолитикуОрганизации();
		
		РекомендацияОПР = НСтр("ru = 'Настройте методы распределения косвенных расходов'");
		СсылкаОПР       = "e1cib/list/РегистрСведений.МетодыРаспределенияКосвенныхРасходовОрганизаций";
		
		ВыводитьРекомендациюОХР = Ложь; // Выводим, если для счета 26 не выполнены настройки
		
		Ошибка = ВыводСообщенийОбОшибках.ДобавитьОписаниеОшибки(Ошибки);
		ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", Описание);

		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.Группа = 0 Тогда
				ШаблонСообщения = НСтр("ru = 'Не указан метод распределения для расходов на счете %1'");
			ИначеЕсли Выборка.Группа = 1 Тогда
				ШаблонСообщения = НСтр("ru = 'Не указан метод распределения для расходов на счете %1 по подразделению ""%2""'");
			Иначе
				ШаблонСообщения = НСтр("ru = 'Не указан метод распределения для расходов на счете %1 по подразделению ""%2"" и статье затрат ""%3""'");
			КонецЕсли;
			
			Локализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения,
				Выборка.СчетПредставление,
				Выборка.ПодразделениеПредставление,
				Выборка.СтатьяЗатратПредставление);
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", Локализация);
			
			ВыводитьРекомендациюОХР = ВыводитьРекомендациюОХР 
				Или БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Выборка.Счет, ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
			
		КонецЦикла;
		
		Если ВыводитьРекомендациюОХР Тогда
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст",  РекомендацияОХР);
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Ссылка", СсылкаОХР);
		Иначе
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст",  РекомендацияОПР);
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Ссылка", СсылкаОПР);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТ_КосвенныеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_РасходыСНастройкой";
	Запрос.Выполнить();
	
КонецПроцедуры

Функция СсылкаМетодыРаспределенияКосвенныхРасходовОрганизаций(Источник)
	
	Ключ = Новый Структура();
	
	Ключ.Вставить("Период", Источник.Период);
	Для Каждого Измерение Из Метаданные.РегистрыСведений.МетодыРаспределенияКосвенныхРасходовОрганизаций.Измерения Цикл
		Значение = Источник[Измерение.Имя];
		Ключ.Вставить(Измерение.Имя, Значение);
	КонецЦикла;
	
	// Получим навигационную ссылку
	ПараметрыКонструктора = Новый Массив;
	ПараметрыКонструктора.Добавить(Ключ);
	КлючЗаписи = Новый(Тип("РегистрСведенийКлючЗаписи.МетодыРаспределенияКосвенныхРасходовОрганизаций"), ПараметрыКонструктора);
	Возврат ПолучитьНавигационнуюСсылку(КлючЗаписи);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ДОБАВЛЕНИЕ ПРАВИЛ РАСПРЕДЕЛЕНИЯ

Процедура ДобавитьПредопределенныеПравилаРаспределенияРасходовНаПроизводство(ПравилаРаспределения, Период, Организация)
	
	// Устраним детализацию, которая нужна только для НУ - ВидРасходовНУ, НалоговыйУчет, КорСчет
	ДобавитьПравилоУдалитьАналитикуНалоговогоУчета(ПравилаРаспределения, Период, Организация);
	
	// Внесем ясность - все расходы отнесем к одному из двух видов деятельности
	ДобавитьПравилоРаспределениеМеждуВидамиДеятельности(ПравилаРаспределения, Период, Организация);
	
	// Очистим сумму НУ, если расходы не учитываются в целях налогообложения
	ДобавитьПравилоРасходыНеУчитываемыеВЦеляхНалогообложения(ПравилаРаспределения, Период, Организация);
	
	// Разберемся со сверхнормативными расходами
	ДобавитьПравилаНормируемыеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация);
	
	// Спишем расходы, которые заведомо одинаково отражаются в БУ и НУ
	ДобавитьПравилоДиректКостинг(ПравилаРаспределения, Период, Организация);
	
	// Разделим расходы на прямые и косвенные в налоговом учете
	ДобавитьПравилаПрямыеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация);
	
	// Спишем расходы, которые относятся на расходы текущего периода только в НУ
	ДобавитьПравилоКосвенныеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация);
	
	// Правила для косвенных расходов выполняем до распределения прямых, 
	// потому что с большой вероятностью приведут к появлению прямых расходов
	ДобавитьПравилаКосвенныеРасходыПоНастройке(ПравилаРаспределения, Период, Организация);
	
	// Сгруппируем прямые расходы
	ДобавитьПравилоНезавершенноеПроизводство(ПравилаРаспределения, Период, Организация);
	
	// Распределим прямые расходы
	ДобавитьПравилоПрямыеРасходыНаВыпуск(ПравилаРаспределения, Период, Организация);
	ДобавитьПравилоПрямыеРасходыПоВыручкеОтРеализацииУслуг(ПравилаРаспределения, Период, Организация);
	ДобавитьПравилоСписатьВсеПрямыеРасходыНаСебестоимостьОказанныхУслуг(ПравилаРаспределения, Период, Организация);
	
КонецПроцедуры

Процедура ДобавитьПредопределенныеПравилаРаспределенияРасходовНаПродажу(ПравилаРаспределения, Период, Организация)
		
	// Внесем ясность - все расходы отнесем к одному из двух видов деятельности
	ДобавитьПравилоРаспределениеМеждуВидамиДеятельности(ПравилаРаспределения, Период, Организация);
	
	// Очистим сумму НУ, если расходы не учитываются в целях налогообложения
	ДобавитьПравилоРасходыНеУчитываемыеВЦеляхНалогообложения(ПравилаРаспределения, Период, Организация);
	
	// Разберемся со сверхнормативными расходами
	ДобавитьПравилаНормируемыеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация);
	
	// Распределим транспортные расходы
	ДобавитьПравилаТранспортныеРасходы(ПравилаРаспределения);
	
	// Спишем все остальные расходы на продажу
	ДобавитьПравилоРасходыНаПродажу(ПравилаРаспределения);
	
КонецПроцедуры

// Основные правила

Процедура ДобавитьПравилоРаспределениеМеждуВидамиДеятельности(ПравилаРаспределения, Период, Организация)
	
	ТолькоОсновная = УчетнаяПолитика.ТолькоОсновнаяСистемаНалогообложения(Организация, Период);
	ТолькоОсобый   = УчетнаяПолитика.ТолькоОсобыйПорядокНалогообложения(Организация, Период);
	
	Если ТолькоОсновная Или ТолькоОсобый Тогда
		
		// Распределение не нужно.
		// Все расходы относим к одному виду деятельности.
		
		Правило = ПравилаРаспределения.Добавить();
		Правило.Имя          = "ВидыДеятельности";
		Правило.Наименование = НСтр("ru = 'Отнести к единственному виду деятельности'");
		
		// Отбор источника
		НеправильныеВидыДеятельности = Новый Массив;
		НеправильныеВидыДеятельности.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПустаяСсылка());
		НеправильныеВидыДеятельности.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
		Если ТолькоОсновная Тогда
			НеправильныеВидыДеятельности.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);
		Иначе
			НеправильныеВидыДеятельности.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
		КонецЕсли;
		
		Правило.ОтборРасходов = Новый Структура;
		Правило.ОтборРасходов.Вставить("ВидДеятельности", НеправильныеВидыДеятельности);
		
		// Поля источника
		Правило.ПоляИсточника = Новый Структура;
		
		// Поля приемника
		Правило.Действие = "РаспределитьНаРасходы"; // Поля приемника представлены в виде аналитики распределения
		Правило.ПоляПриемника = Новый Структура;
		Правило.ПоляПриемника.Вставить("ВидДеятельности");
		
		// База распределения
		Если ТолькоОсновная Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности,
			|	1 КАК База
			|ПОМЕСТИТЬ БазаРаспределения_ВидыДеятельности
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидДеятельности";
		Иначе // только особый порядок
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Значение(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) КАК ВидДеятельности,
			|	1 КАК База
			|ПОМЕСТИТЬ БазаРаспределения_ВидыДеятельности
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидДеятельности";
		КонецЕсли;
		
		Правило.БазаРаспределения  = Новый Структура;
		Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ВидыДеятельности");
		Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
		
	Иначе
	
		// Распределяем расходы между видами деятельности пропорционально выручке
		
		Правило = ПравилаРаспределения.Добавить();
		Правило.Имя          = "ВидыДеятельности";
		Правило.Наименование = НСтр("ru = 'Распределить между видами деятельности'");
		
		// Отбор источника
		Правило.ОтборРасходов = Новый Структура;
		Правило.ОтборРасходов.Вставить("ВидДеятельности", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
		
		// Поля источника
		Правило.ПоляИсточника = Новый Структура;
		
		// Поля приемника
		Правило.Действие = "РаспределитьНаРасходы"; // Поля приемника представлены в виде аналитики распределения
		Правило.ПоляПриемника = Новый Структура;
		Правило.ПоляПриемника.Вставить("ВидДеятельности");
		
		// База распределения
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДолиСписанияКосвенныхРасходов.ДоляЕНВД КАК Доля
		|ПОМЕСТИТЬ ВТ_ДоляЕНВД
		|ИЗ
		|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиСписанияКосвенныхРасходов
		|ГДЕ
		|	ДолиСписанияКосвенныхРасходов.Организация = &ГоловнаяОрганизация
		|	И ДолиСписанияКосвенныхРасходов.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) КАК ВидДеятельности,
		|	ДоляЕНВД.Доля КАК База
		|ПОМЕСТИТЬ БазаРаспределения_ВидыДеятельности
		|ИЗ
		|	ВТ_ДоляЕНВД КАК ДоляЕНВД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
		|	1 - ДоляЕНВД.Доля
		|ИЗ
		|	ВТ_ДоляЕНВД КАК ДоляЕНВД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидДеятельности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ДоляЕНВД";
		
		Правило.БазаРаспределения  = Новый Структура;
		Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ВидыДеятельности");
		Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПравилоНезавершенноеПроизводство(ПравилаРаспределения, Период, Организация)
	
	Если Не УчетнаяПолитика.ВедетсяПроизводственнаяДеятельность(Организация, Период) Тогда
		// Организация не использует счет 20
		Возврат;
	КонецЕсли;
	
	// Собираем все расходы по номенклатурной группе
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "НезавершенноеПроизводство";
	Правило.Наименование = НСтр("ru = 'Сгруппировать расходы на производство'");
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("Счет", БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(УчетЗатрат.ПредопределенныеСчетаПрямыхРасходов()));
	
	// Поля источника
	Правило.ПоляИсточника = Новый Структура;
	
	// Поля приемника
	Правило.Действие = "РаспределитьНаРасходы"; // Поля приемника представлены в виде аналитики распределения
	Правило.ПоляПриемника = Новый Структура;
	Правило.ПоляПриемника.Вставить("СтатьяЗатрат");
	Правило.ПоляПриемника.Вставить("КорСчет");
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ");
	
	// База распределения - частный случай распределения - "Перенос"
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СтатьяЗатрат,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_НезавершенноеПроизводство";
	
	Правило.БазаРаспределения  = Новый Структура;
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_НезавершенноеПроизводство");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилоДиректКостинг(ПравилаРаспределения, Период, Организация)
	
	СчетаРасходовНаУправление = Новый Массив;
	Если НЕ УчетнаяПолитика.ВедетсяПроизводственнаяДеятельность(Организация, Период) Тогда
		СчетаРасходовНаУправление.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
		// Учитываем возможность использования (только) 25го счета, 
		// когда использование 20го счета не предусмотрено учетной политикой
		СчетаРасходовНаУправление.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	ИначеЕсли УчетнаяПолитика.ДиректКостинг(Организация, Период) Тогда
		СчетаРасходовНаУправление.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	КонецЕсли;
	Если СчетаРасходовНаУправление.Количество() = 0 Тогда
		// Не предусмотрено учетной политикой
		Возврат;
	КонецЕсли;
	
	// Списываем расходы со счета 26 на финансовый результат
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя                = "ДиректКостинг";
	Правило.Наименование       = НСтр("ru = 'Списать расходы на результат текущего периода методом ""Директ-костинг""'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Закрытие счетов косвенных расходов'");
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("Счет", БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(СчетаРасходовНаУправление));
	
	УстановитьПравилоСписатьРасходыТекущегоПериода(Правило);
	
КонецПроцедуры

Процедура ДобавитьПравилоПрямыеРасходыПоВыручкеОтРеализацииУслуг(ПравилаРаспределения, Период, Организация)
	
	// Прямые расходы, связанные с оказанием услуг, отнести на результат с учетом номенклатурных групп
	
	Если Не УчетнаяПолитика.ОказаниеУслуг(Организация, Период) Тогда
		Возврат;
	КонецЕсли;
	
	ПорядокСписанияРасходовНаСебестоимостьУслуг = УчетнаяПолитика.ПорядокСписанияРасходовНаСебестоимостьУслуг(
		Организация,
		Период);
	
	Если ПорядокСписанияРасходовНаСебестоимостьУслуг = Перечисления.ПорядокСписанияРасходовНаСебестоимостьУслуг.ТолькоПоПлановымЦенам Тогда
		// Правило применяем, если это предусмотрено учетной политикой
		Возврат;
	КонецЕсли;
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "ВыпускУслуг";
	Правило.Наименование = НСтр("ru = 'Списать расходы на производство на результат текущего периода по данным о выручке от реализации услуг'");
	Правило.Выпуск       = Истина;
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("Счет", БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(УчетЗатрат.ПредопределенныеСчетаПрямыхРасходов()));
	
	// Поля источника
	Правило.ПоляИсточника = Новый Структура;
	Правило.ПоляИсточника.Вставить("ВидДеятельности",      "ВидДеятельности");
	Правило.ПоляИсточника.Вставить("НоменклатурнаяГруппа", "НоменклатурнаяГруппа");
	
	// Поля приемника
	Правило.Действие = "РаспределитьНаСубконто"; // Поля приемника представлены в виде субконто
	
	// База распределения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеализацияУслуг.СчетРасходов КАК Счет,
	|	РеализацияУслуг.Подразделение,
	|	РеализацияУслуг.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	РеализацияУслуг.СуммаОборот КАК Сумма
	|ПОМЕСТИТЬ ВТ_ВыручкаОтРеализацииУслуг
	|ИЗ
	|	РегистрНакопления.РеализацияУслуг.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И СчетРасходов <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК РеализацияУслуг
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Счет,
	|	ХозрасчетныйВидыСубконто.НомерСтроки КАК НомерСубконто
	|ПОМЕСТИТЬ ВТ_СубконтоНоменклатурныеГруппыФинансовогоРезультата
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ХозрасчетныйВидыСубконто.Ссылка В
	|			(ВЫБРАТЬ
	|				СчетаРезультата.Счет
	|			ИЗ
	|				ВТ_ВыручкаОтРеализацииУслуг КАК СчетаРезультата)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	РеализацияУслуг.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	РеализацияУслуг.Счет КАК Счет,
	|	РеализацияУслуг.Подразделение,
	|	ВЫБОР
	|		КОГДА СубконтоНоменклатурныеГруппы.НомерСубконто = 1
	|			ТОГДА РеализацияУслуг.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА СубконтоНоменклатурныеГруппы.НомерСубконто = 2
	|			ТОГДА РеализацияУслуг.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА СубконтоНоменклатурныеГруппы.НомерСубконто = 3
	|			ТОГДА РеализацияУслуг.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	РеализацияУслуг.Сумма КАК База
	|ПОМЕСТИТЬ БазаРаспределения_ВыручкаОтРеализацииУслуг
	|ИЗ
	|	ВТ_ВыручкаОтРеализацииУслуг КАК РеализацияУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СубконтоНоменклатурныеГруппыФинансовогоРезультата КАК СубконтоНоменклатурныеГруппы
	|		ПО РеализацияУслуг.Счет = СубконтоНоменклатурныеГруппы.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|		ПО РеализацияУслуг.Счет = СчетаДоходовИРасходовЕНВД.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности,
	|	НоменклатурнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыручкаОтРеализацииУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СубконтоНоменклатурныеГруппыФинансовогоРезультата";
	
	Правило.БазаРаспределения  = Новый Структура;
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ВыручкаОтРеализацииУслуг");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилоСписатьВсеПрямыеРасходыНаСебестоимостьОказанныхУслуг(ПравилаРаспределения, Период, Организация)
	
	// Отнесем прямые расходы на результат.
	
	Если Не УчетнаяПолитика.ОказаниеУслуг(Организация, Период) Тогда
		Возврат;
	КонецЕсли;
	
	ПорядокСписанияРасходовНаСебестоимостьУслуг = УчетнаяПолитика.ПорядокСписанияРасходовНаСебестоимостьУслуг(
		Организация, 
		Период);
	
	Если ПорядокСписанияРасходовНаСебестоимостьУслуг <> Перечисления.ПорядокСписанияРасходовНаСебестоимостьУслуг.БезУчетаВыручки Тогда
		// Не следует применять это правило, потому что номенклатурную группу и счет финансового результата следует определять сложнее
		// См. ДобавитьПравилоПрямыеРасходыПоВыручкеОтРеализацииУслуг()
		Возврат;
	КонецЕсли;
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "СписаниеРасходовНаУслуги";
	Правило.Наименование = НСтр("ru = 'Списать затраты, связанные с оказанием услуг, на результат текущего периода'");
	Правило.Выпуск       = Истина;
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("Счет", БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(УчетЗатрат.ПредопределенныеСчетаПрямыхРасходов()));
	
	// Поля источника
	Правило.ПоляИсточника = Новый Структура;
	Правило.ПоляИсточника.Вставить("ВидДеятельности",      "ВидДеятельности");
	// Нам нужно списать на субконто, взяв номенклатурную группу из аналитики источника.
	// Но способ "РаспределитьНаСубконто" не умеет брать аналитику из источника.
	// Поэтому мы добъемся нужного результата так:
	// включим в базу _все_ номенклатурные группы и свяжем базу с источником по НГ.
	Правило.ПоляИсточника.Вставить("НоменклатурнаяГруппа", "НоменклатурнаяГруппа");
	
	// Поля приемника
	Правило.Действие = "РаспределитьНаСубконто"; // Поля приемника представлены в виде субконто
	// Поле Подразделение приемника не заполняем - это сделает логика формирования проводок.
	
	// База распределения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД) КАК Счет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности
	|ПОМЕСТИТЬ ВТ_СчетаРезультата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажЕНВД),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Счет,
	|	СчетаСебестоимостьПродаж.ВидДеятельности КАК ВидДеятельности,
	|	ХозрасчетныйВидыСубконто.НомерСтроки КАК НомерСубконто
	|ПОМЕСТИТЬ ВТ_СчетаРезультатаНомерСубконто
	|ИЗ
	|	ВТ_СчетаРезультата КАК СчетаСебестоимостьПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО СчетаСебестоимостьПродаж.Счет = ХозрасчетныйВидыСубконто.Ссылка
	|			И (ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа
	|ПОМЕСТИТЬ ВТ_НоменклатурныеГруппы
	|ИЗ
	|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	|ГДЕ
	|	НЕ НоменклатурныеГруппы.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаРезультата.ВидДеятельности КАК ВидДеятельности,
	|	НоменклатурныеГруппы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	СчетаРезультата.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА СчетаРезультата.НомерСубконто = 1
	|			ТОГДА НоменклатурныеГруппы.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА СчетаРезультата.НомерСубконто = 2
	|			ТОГДА НоменклатурныеГруппы.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА СчетаРезультата.НомерСубконто = 3
	|			ТОГДА НоменклатурныеГруппы.НоменклатурнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_СписатьНаРезультатОтОказанияУслуг
	|ИЗ
	|	ВТ_НоменклатурныеГруппы КАК НоменклатурныеГруппы,
	|	ВТ_СчетаРезультатаНомерСубконто КАК СчетаРезультата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности,
	|	НоменклатурнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_НоменклатурныеГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаРезультатаНомерСубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаРезультата";
	
	Правило.БазаРаспределения  = Новый Структура;
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_СписатьНаРезультатОтОказанияУслуг");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилоПрямыеРасходыНаВыпуск(ПравилаРаспределения, Период, Организация)
	
	Если Не УчетнаяПолитика.ВедетсяПроизводственнаяДеятельность(Организация, Период) Тогда
		// Организация не использует счет 20
		Возврат;
	КонецЕсли;
	
	// Прямые расходы на выпуск по объему выпуска и плановой себестоимости
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "Выпуск";
	Правило.Наименование = НСтр("ru = 'Распределить расходы на выпуск продукции, услуг, работ'");
	Правило.Выпуск       = Истина;
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("Счет", БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(УчетЗатрат.ПредопределенныеСчетаПрямыхРасходов()));
	
	// Поля источника
	Правило.ПоляИсточника = Новый Структура;
	Правило.ПоляИсточника.Вставить("ВидДеятельности",      "ВидДеятельности");
	Правило.ПоляИсточника.Вставить("Счет",                 "СчетИсточник");
	Правило.ПоляИсточника.Вставить("Подразделение",        "ПодразделениеИсточник");
	Правило.ПоляИсточника.Вставить("НоменклатурнаяГруппа", "НоменклатурнаяГруппаИсточник");
	
	// Поля приемника
	Правило.Действие = "РаспределитьНаСубконто"; // Поля приемника представлены в виде субконто
	
	// База распределения
	// Выпуск продукции - это всегда ОсновнаяСистемаНалогообложения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Выпуск.СчетЗатрат КАК СчетИсточник,
	|	Выпуск.Подразделение КАК ПодразделениеИсточник,
	|	Выпуск.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаИсточник,
	|	Выпуск.СчетСписания КАК Счет,
	|	Выпуск.ПодразделениеСписания КАК Подразделение,
	|	Выпуск.СубконтоСписания1 КАК Субконто1,
	|	Выпуск.СубконтоСписания2 КАК Субконто2,
	|	Выпуск.СубконтоСписания3 КАК Субконто3,
	|	Выпуск.Продукция КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Выпуск.ПрямыеРасходыРаспределятьПоКоличеству
	|			ТОГДА Выпуск.КоличествоОборот
	|		ИНАЧЕ Выпуск.ПлановаяСтоимостьОборот
	|	КОНЕЦ КАК База
	|ПОМЕСТИТЬ ВТ_ВыпускПродукцииУслуг
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииУслуг.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК Выпуск
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Выпуск.СчетСписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	Выпуск.СчетИсточник КАК СчетИсточник,
	|	Выпуск.ПодразделениеИсточник КАК ПодразделениеИсточник,
	|	Выпуск.НоменклатурнаяГруппаИсточник КАК НоменклатурнаяГруппаИсточник,
	|	Выпуск.Счет КАК Счет,
	|	Выпуск.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА СчетаЗатрат.Счет ЕСТЬ NULL 
	|			ТОГДА Выпуск.Субконто1
	|		КОГДА СуммовойУчет.Субконто1
	|			ТОГДА Выпуск.Субконто1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА СчетаЗатрат.Счет ЕСТЬ NULL 
	|			ТОГДА Выпуск.Субконто2
	|		КОГДА СуммовойУчет.Субконто2
	|			ТОГДА Выпуск.Субконто2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА СчетаЗатрат.Счет ЕСТЬ NULL 
	|			ТОГДА Выпуск.Субконто3
	|		КОГДА СуммовойУчет.Субконто3
	|			ТОГДА Выпуск.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Субконто3,
	|	ВЫБОР
	|		КОГДА СчетаЗапасов.НомерСубконтоНоменклатура = 1
	|			ТОГДА ВЫРАЗИТЬ(Выпуск.Субконто1 КАК Справочник.Номенклатура)
	|		КОГДА СчетаЗапасов.НомерСубконтоНоменклатура = 2
	|			ТОГДА ВЫРАЗИТЬ(Выпуск.Субконто2 КАК Справочник.Номенклатура)
	|		КОГДА СчетаЗапасов.НомерСубконтоНоменклатура = 3
	|			ТОГДА ВЫРАЗИТЬ(Выпуск.Субконто3 КАК Справочник.Номенклатура)
	|		ИНАЧЕ Выпуск.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	Выпуск.База КАК База
	|ПОМЕСТИТЬ БазаРаспределения_Выпуск
	|ИЗ
	|	ВТ_ВыпускПродукцииУслуг КАК Выпуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|		ПО Выпуск.Счет = СчетаДоходовИРасходовЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммовойУчет КАК СуммовойУчет
	|		ПО Выпуск.Счет = СуммовойУчет.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗатрат КАК СчетаЗатрат
	|		ПО Выпуск.Счет = СчетаЗатрат.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗапасов КАК СчетаЗапасов
	|		ПО Выпуск.Счет = СчетаЗапасов.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности,
	|	СчетИсточник,
	|	ПодразделениеИсточник,
	|	НоменклатурнаяГруппаИсточник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыпускПродукцииУслуг";
	
	Правило.БазаРаспределения  = Новый Структура;
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_Выпуск");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилаКосвенныеРасходыПоНастройке(ПравилаРаспределения, Период, Организация)
	
	Если Не БухгалтерскийУчетПереопределяемый.ВедетсяПроизводственнаяДеятельность(Организация, Период) Тогда
		// Организация не использует счет 20
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьМетодыРаспределенияКосвенныхРасходов(МенеджерВременныхТаблиц, Период, Организация);
	СоздатьНастройкаРаспределенияКосвенныхРасходов(МенеджерВременныхТаблиц);
	
	// Упрощенно: одна строка регистра сведений - одно правило (есть исключение, см. далее)
	
	// Счет - это важный реквизит, должен быть заполнен.
	// Счет определяет, следует ли распределять расходы в разрезе подразделений.
	// Если в настройке счет не заполнен, то будет создано несколько правил - 
	// по одному на каждый счет косвенных расходов.
	// Эти правила будут отличаться отбором (по счету) и полями, в разрезе которых распределяются расходы.
	
	// Правила упорядочиваем по приоритету и кроме него так, чтобы они выполнялись всегда в одном и том же порядке.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СчетаКосвенныхРасходов", УчетЗатрат.ПредопределенныеСчетаКосвенныхРасходов());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.УчетПоПодразделениям
	|				И Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбщепроизводственныеРасходы))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВРазрезеПодразделений
	|ПОМЕСТИТЬ СчетаКосвенныхРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаКосвенныхРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Настройки.Приоритет,
	|	Настройки.Организация,
	|	СчетаКосвенныхРасходов.Счет,
	|	Настройки.СчетНастройки КАК СчетНастройки,
	|	Настройки.Период КАК ПериодНастройки,
	|	Настройки.Подразделение,
	|	Настройки.СтатьяЗатрат,
	|	СчетаКосвенныхРасходов.ВРазрезеПодразделений,
	|	Настройки.БазаРаспределения КАК МетодРасчета,
	|	Настройки.СписокСтатейЗатрат,
	|	Настройки.СчетПрямыхЗатрат,
	|	Настройки.ПодразделениеЗатрат
	|ИЗ
	|	НастройкаРаспределенияКосвенныхРасходов КАК Настройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаКосвенныхРасходов КАК СчетаКосвенныхРасходов
	|		ПО (Настройки.СчетЗатрат = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|ГДЕ
	|	Настройки.БазаРаспределения <> ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Настройки.Приоритет,
	|	Настройки.Организация,
	|	СчетаКосвенныхРасходов.Счет,
	|	Настройки.СчетНастройки,
	|	Настройки.Период,
	|	Настройки.Подразделение,
	|	Настройки.СтатьяЗатрат,
	|	СчетаКосвенныхРасходов.ВРазрезеПодразделений,
	|	Настройки.БазаРаспределения,
	|	Настройки.СписокСтатейЗатрат,
	|	Настройки.СчетПрямыхЗатрат,
	|	Настройки.ПодразделениеЗатрат
	|ИЗ
	|	НастройкаРаспределенияКосвенныхРасходов КАК Настройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаКосвенныхРасходов КАК СчетаКосвенныхРасходов
	|		ПО Настройки.СчетЗатрат = СчетаКосвенныхРасходов.Счет
	|ГДЕ
	|	Настройки.БазаРаспределения <> ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Настройки.Приоритет,
	|	СчетаКосвенныхРасходов.Счет,
	|	Настройки.Подразделение,
	|	Настройки.СтатьяЗатрат";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ПоляОтбора = Новый Структура("Счет, Подразделение, СтатьяЗатрат");// Заданы в настройке
	
	Пока Выборка.Следующий() Цикл
		
		КлючНастройки = Новый Структура; // Имена свойств совпадают с измерениями регистра сведений
		КлючНастройки.Вставить("Период",        Выборка.ПериодНастройки);
		КлючНастройки.Вставить("Организация",   Выборка.Организация);
		КлючНастройки.Вставить("СчетЗатрат",    Выборка.СчетНастройки);
		КлючНастройки.Вставить("СтатьяЗатрат",  Выборка.СтатьяЗатрат);
		КлючНастройки.Вставить("Подразделение", Выборка.Подразделение);
		ПараметрыКонструктора = Новый Массив;
		ПараметрыКонструктора.Добавить(КлючНастройки);
		Настройка = Новый(Тип("РегистрСведенийКлючЗаписи.МетодыРаспределенияКосвенныхРасходовОрганизаций"), ПараметрыКонструктора);
		
		// Отбор источника зависит от того, какие поля заполнены в настройке
		ОтборРасходов = Новый Структура;
		Для Каждого ПолеОтбора Из ПоляОтбора Цикл
			ЗначениеОтбора = Выборка[ПолеОтбора.Ключ];
			Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
				Если ПолеОтбора.Ключ = "Счет" Тогда
					// Для счета следует передавать массив, включающий все субсчета
					МассивСчетов = Новый Массив;
					МассивСчетов.Добавить(ЗначениеОтбора);
					ЗначениеОтбора = БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(МассивСчетов);
				КонецЕсли;
				ОтборРасходов.Вставить(ПолеОтбора.Ключ, ЗначениеОтбора);
			КонецЕсли;
		КонецЦикла;
		
		Если Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ОбъемВыпуска 
			ИЛИ Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ПлановаяСебестоимость Тогда
			
			ДобавитьПравилоМетодОбъемВыпуска(
				ПравилаРаспределения, 
				Настройка,
				ОтборРасходов,
				Выборка.МетодРасчета,
				Выборка.ВРазрезеПодразделений);
			
		ИначеЕсли Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.МатериальныеЗатраты 
			ИЛИ Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ОплатаТруда
			ИЛИ Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ПрямыеЗатраты
			ИЛИ Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат Тогда
			
			ДобавитьПравилаМетодСтоимостьРасходов(
				ПравилаРаспределения, 
				Настройка,
				ОтборРасходов,
				Выборка.МетодРасчета,
				Выборка.ВРазрезеПодразделений,
				Выборка.СписокСтатейЗатрат,
				Период,
				Организация);
			
		ИначеЕсли Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.Выручка Тогда
			
			Если Не ТолькоУслугиЗаказчикам(Организация, Период) Тогда
				
				// Расходы могут быть не связаны с оказанием услуг
				// Поэтому учтем при распределении не только выручку, но и затраты
				УчитыватьЗатраты = Истина;
				
			ИначеЕсли УчетнаяПолитика.ПорядокСписанияРасходовНаСебестоимостьУслуг(Организация, Период) = 
					Перечисления.ПорядокСписанияРасходовНаСебестоимостьУслуг.БезУчетаВыручки Тогда
					
				УчитыватьЗатраты = Ложь; // Подчеркнуто простая схема закрытия счетов
				
			Иначе
				
				УчитыватьЗатраты = Не ЗначениеЗаполнено(Выборка.СчетПрямыхЗатрат); // Для определения счета обратимся к затратам
				
			КонецЕсли;
			
			Если УчитыватьЗатраты Тогда
				
				ДобавитьПравилоМетодВыручка(
					ПравилаРаспределения,
					Настройка,
					ОтборРасходов,
					Выборка.ВРазрезеПодразделений,
					Выборка.СчетПрямыхЗатрат,
					Выборка.ПодразделениеЗатрат);

			КонецЕсли;
			
			Если Не УчитыватьЗатраты 
				Или ЗначениеЗаполнено(Выборка.СчетПрямыхЗатрат) Тогда // Если не удастся распределить по данным о затратах, то попробуем отнести все на услуги
				
				ДобавитьПравилоМетодВыручкаТолькоУслуги(
					ПравилаРаспределения,
					Настройка,
					ОтборРасходов,
					Выборка.СчетПрямыхЗатрат, 
					Выборка.ПодразделениеЗатрат);
				
			КонецЕсли;
			
		ИначеЕсли Выборка.МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.НеРаспределяется Тогда
			
			ДобавитьПравилоНеРаспределять(ПравилаРаспределения, Настройка, ОтборРасходов);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПравилоСписатьРасходыТекущегоПериода(Правило)
	
	// Поля приемника представлены в виде субконто. В такой базе должны присутствовать все поля
	Правило.Действие = "РаспределитьНаСубконто"; 
	
	// Для разных видов деятельности разные счета приемника
	Правило.ПоляИсточника.Вставить("ВидДеятельности", "ВидДеятельности");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности,
	|	&ПустоеПодразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД) КАК Счет,
	|	НЕОПРЕДЕЛЕНО КАК Субконто1,
	|	НЕОПРЕДЕЛЕНО КАК Субконто2,
	|	НЕОПРЕДЕЛЕНО КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_СписатьРасходыТекущегоПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения),
	|	&ПустоеПодразделение,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_СписатьРасходыТекущегоПериода");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

// Расходы на продажу

Процедура ДобавитьПравилаТранспортныеРасходы(ПравилаРаспределения)
	
	// Зафиксируем часть транспортных расходов (пропорционально остатку товара на складе):
	// - сначала разделим сумму расходов на относящиеся к остаткам реализованных и нереализованных товаров
	// - затем оградим их от списания
	
	// 1. Применим пропорцию
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя                = "РаспределитьТранспортныеРасходы";
	Правило.Наименование       = НСтр("ru = 'Распределить транспортные расходы'");
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("ВидРасходовНУ", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	// Поля приемника
	Правило.Действие = "РаспределитьНаРасходы"; // Поля приемника представлены в виде аналитики распределения
	Правило.ПоляПриемника = Новый Структура;
	Правило.ПоляПриемника.Вставить("НалоговыйУчет");
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ");
	
	// База распределения
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДолиСписанияКосвенныхРасходов.ДоляТранспортныхРасходов КАК Доля
	|ПОМЕСТИТЬ ДоляТранспортныхРасходовТекущегоПериода
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиСписанияКосвенныхРасходов
	|ГДЕ
	|	ДолиСписанияКосвенныхРасходов.Организация = &ГоловнаяОрганизация
	|	И ДолиСписанияКосвенныхРасходов.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ПустаяСсылка) КАК НалоговыйУчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ДоляТранспортныхРасходовТекущегоПериода.Доля КАК База
	|ПОМЕСТИТЬ БазаРаспределения_ТранспортныеРасходы
	|ИЗ
	|	ДоляТранспортныхРасходовТекущегоПериода КАК ДоляТранспортныхРасходовТекущегоПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.БудущихПериодов),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы),
	|	1 - ДоляТранспортныхРасходовТекущегоПериода.Доля
	|ИЗ
	|	ДоляТранспортныхРасходовТекущегоПериода КАК ДоляТранспортныхРасходовТекущегоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДоляТранспортныхРасходовТекущегоПериода";
	
	Правило.БазаРаспределения  = Новый Структура;
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ТранспортныеРасходы");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
	// 2. Оградим от списания транспортные расходы, относящиеся к остаткам нереализованных товаров
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "ТранспортныеРасходыБудущихПериодов";
	Правило.Наименование = НСтр("ru = 'Не списывать транспортные расходы, относящиеся к остаткам нереализованных товаров'");
	Правило.ОтборРасходов.Вставить("ВидРасходовНУ", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	Правило.ОтборРасходов.Вставить("НалоговыйУчет", Перечисления.ОсобенностиНалоговогоУчетаРасходов.БудущихПериодов);
	Правило.Действие = "Зафиксировать";
	
КонецПроцедуры

Процедура ДобавитьПравилоРасходыНаПродажу(ПравилаРаспределения)
	
	// Списываем расходы на продажу (на финансовый результат)
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя                = "РасходыНаПродажу";
	Правило.Наименование       = НСтр("ru = 'Списать расходы на продажу на результат текущего периода'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Закрытие счетов косвенных расходов'");
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура;
	СчетаРасходовНаПродажу = УчетЗатрат.ПредопределенныеСчетаРасходовНаПродажу();
	Правило.ОтборРасходов.Вставить("Счет", БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(СчетаРасходовНаПродажу));
	
	// Поля приемника представлены в виде субконто. В такой базе должны присутствовать все поля
	Правило.Действие = "РаспределитьНаСубконто"; 
	
	// Для разных видов деятельности разные счета приемника
	Правило.ПоляИсточника.Вставить("ВидДеятельности", "ВидДеятельности");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности,
	|	&ПустоеПодразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД) КАК Счет,
	|	НЕОПРЕДЕЛЕНО КАК Субконто1,
	|	НЕОПРЕДЕЛЕНО КАК Субконто2,
	|	НЕОПРЕДЕЛЕНО КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_СписатьРасходыНаПродажу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения),
	|	&ПустоеПодразделение,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_СписатьРасходыНаПродажу");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

// Предопределенные методы расчета базы распределения косвенных расходов

Функция РазрезыРаспределенияКосвенныхРасходов(ВРазрезеПодразделений)
	
	РазрезыРаспределения = Новый Структура;
	РазрезыРаспределения.Вставить("ВидДеятельности", "ВидДеятельности");
	Если ВРазрезеПодразделений Тогда
		РазрезыРаспределения.Вставить("Подразделение", "Подразделение");
	КонецЕсли;
	
	Возврат РазрезыРаспределения;
	
КонецФункции

Функция ПоляБазыКосвенныхРасходов()
	
	ПоляПриемника = Новый Структура;
	ПоляПриемника.Вставить("Счет");
	ПоляПриемника.Вставить("Подразделение");
	ПоляПриемника.Вставить("НоменклатурнаяГруппа");
	
	Возврат ПоляПриемника;
	
КонецФункции

Процедура ДобавитьПравилоМетодОбъемВыпуска(ПравилаРаспределения, Настройка, ОтборРасходов, МетодРасчета, ВРазрезеПодразделений)
	
	Индекс           = Перечисления.БазыРаспределенияКосвенныхРасходов.Индекс(МетодРасчета);
	ИмяМетодаРасчета = Метаданные.Перечисления.БазыРаспределенияКосвенныхРасходов.ЗначенияПеречисления[Индекс].Имя;
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "Метод" + ИмяМетодаРасчета;
	Правило.Наименование = НСтр("ru = 'Распределить косвенные расходы по базе, основанной на объеме выпуска'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Распределение ОПР и ОХР'");
	
	Правило.Настройка     = Настройка;
	Правило.МетодРасчета  = МетодРасчета;
	Правило.ОтборРасходов = ОтборРасходов;
	Правило.ПоляИсточника = РазрезыРаспределенияКосвенныхРасходов(ВРазрезеПодразделений);
	Правило.Действие      = "РаспределитьНаРасходы";
	Правило.ПоляПриемника = ПоляБазыКосвенныхРасходов();
	
	// Используется одинаковый запрос,
	// в качестве параметра передается метод расчета
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("МетодРасчета", МетодРасчета);
	
	// Выпуск продукции - это всегда ОсновнаяСистемаНалогообложения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	Выпуск.СчетЗатрат КАК Счет,
	|	Выпуск.Подразделение КАК Подразделение,
	|	Выпуск.НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА &МетодРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ОбъемВыпуска)
	|			ТОГДА Выпуск.КоличествоОборот
	|		ИНАЧЕ Выпуск.ПлановаяСтоимостьОборот
	|	КОНЕЦ КАК База
	|ПОМЕСТИТЬ ИмяБазыРаспределения
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииУслуг.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК Выпуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|		ПО Выпуск.СчетСписания = СчетаДоходовИРасходовЕНВД.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности,
	|	Подразделение";
	
	ИмяБазы = "БазаРаспределения_" + ИмяМетодаРасчета;
	
	Правило.БазаРаспределения.Вставить("Имя", ИмяБазы);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяБазыРаспределения", ИмяБазы);
	Правило.БазаРаспределения.Вставить("ТекстЗапроса",     ТекстЗапроса);
	Правило.БазаРаспределения.Вставить("ПараметрыЗапроса", ПараметрыЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилаМетодСтоимостьРасходов(ПравилаРаспределения, Настройка, ОтборРасходов, МетодРасчета, ВРазрезеПодразделений, СписокСтатейЗатрат, Период, Организация)
	
	Индекс           = Перечисления.БазыРаспределенияКосвенныхРасходов.Индекс(МетодРасчета);
	ИмяМетодаРасчета = Метаданные.Перечисления.БазыРаспределенияКосвенныхРасходов.ЗначенияПеречисления[Индекс].Имя;
	
	// Используется одинаковый запрос (см. ниже)
	// Особенности каждого метода:
	ВидРасходов        = Неопределено;
	СтатьиЗатрат       = Неопределено;
	ВсеСтатьиЗатрат    = Ложь;
	
	Если МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.МатериальныеЗатраты Тогда
		ВидРасходов        = Перечисления.ВидыРасходовНУ.МатериальныеРасходы;
	ИначеЕсли МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ОплатаТруда Тогда
		ВидРасходов        = Перечисления.ВидыРасходовНУ.ОплатаТруда;
	ИначеЕсли МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат Тогда
		СтатьиЗатрат       = СписокСтатейЗатрат;
	Иначе // Все прямые расходы
		ВсеСтатьиЗатрат    = Истина;
	КонецЕсли;
	
	Если МетодРасчета = Перечисления.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат Тогда
		// База определяется списком статей затрат
		Имя = "БазаРаспределения_" + УникальноеПредставлениеСсылки(СписокСтатейЗатрат);
	Иначе
		Имя = "БазаРаспределения_" + ИмяМетодаРасчета;
	КонецЕсли;
	
	// Общее для всех методов
	ПараметрыВременныхТаблиц = Новый Структура;
	ПараметрыВременныхТаблиц.Вставить("ВидРасходов",     ВидРасходов);
	ПараметрыВременныхТаблиц.Вставить("СтатьиЗатрат",    СтатьиЗатрат);
	ПараметрыВременныхТаблиц.Вставить("ВсеСтатьиЗатрат", ВсеСтатьиЗатрат);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	ПараметрыВременныхТаблиц.Вставить("ВидыСубконто", ВидыСубконто);
	
	// В отличие от других правил, это правило для расчета базы использует "внешние данные" - 
	// временную таблицу Поступления, которая записана в менеджер временных таблиц 
	// до создания схемы распределения.
	// Потому что для этой базы нужны данные о расходах "извне" с детализацией для корсчета,
	// получать их ресурсоемко и мы их уже получили.
	СоздатьВременныеТаблицы = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиЗатрат.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ВТ_СтатьиЗатрат
	|ИЗ
	|	Справочник.СписокСтатейЗатратВключенныхВБазуРаспределенияКосвенныхРасходов.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.Ссылка = &СтатьиЗатрат
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиЗатрат.Ссылка
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.ВидРасходовНУ = &ВидРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расходы.Счет КАК Счет,
	|	Расходы.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА СубконтоНоменклатурныеГруппы.НомерСубконто = 1
	|			ТОГДА Расходы.Субконто1
	|		КОГДА СубконтоНоменклатурныеГруппы.НомерСубконто = 2
	|			ТОГДА Расходы.Субконто2
	|		КОГДА СубконтоНоменклатурныеГруппы.НомерСубконто = 3
	|			ТОГДА Расходы.Субконто3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СубконтоСтатьиЗатрат.НомерСубконто = 1
	|				ТОГДА Расходы.Субконто1
	|			КОГДА СубконтоСтатьиЗатрат.НомерСубконто = 2
	|				ТОГДА Расходы.Субконто2
	|			КОГДА СубконтоСтатьиЗатрат.НомерСубконто = 3
	|				ТОГДА Расходы.Субконто3
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|		КОНЕЦ КАК Справочник.СтатьиЗатрат) КАК СтатьяЗатрат,
	|	Расходы.КорСчет КАК КорСчет,
	|	Расходы.Сумма КАК База,
	|	Расходы.СуммаНУ КАК БазаНУ
	|ПОМЕСТИТЬ ВТ_ПрямыеРасходы
	|ИЗ
	|	Поступления КАК Расходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаПрямыхРасходов КАК СчетаПрямыхРасходов
	|		ПО Расходы.Счет = СчетаПрямыхРасходов.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СубконтоНоменклатурныеГруппы КАК СубконтоНоменклатурныеГруппы
	|		ПО Расходы.Счет = СубконтоНоменклатурныеГруппы.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СубконтоСтатьиЗатрат КАК СубконтоСтатьиЗатрат
	|		ПО Расходы.Счет = СубконтоСтатьиЗатрат.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрямыеРасходы.Счет КАК Счет,
	|	ПрямыеРасходы.Подразделение КАК Подразделение,
	|	ПрямыеРасходы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПрямыеРасходы.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ПрямыеРасходы.КорСчет КАК КорСчет,
	|	ПрямыеРасходы.СтатьяЗатрат.ВидРасходовНУ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		ИНАЧЕ ЕСТЬNULL(ПрямыеРасходы.СтатьяЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат, 
	|				ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|	КОНЕЦ КАК ВидДеятельности,
	|	ПрямыеРасходы.База КАК База,
	|	ПрямыеРасходы.БазаНУ КАК БазаНУ
	|ПОМЕСТИТЬ ИмяБазыРаспределения_ПрямыеРасходы
	|ИЗ
	|	ВТ_ПрямыеРасходы КАК ПрямыеРасходы
	|ГДЕ
	|	(&ВсеСтатьиЗатрат
	|			ИЛИ ПрямыеРасходы.СтатьяЗатрат В
	|				(ВЫБРАТЬ
	|					СтатьиЗатрат.СтатьяЗатрат
	|				ИЗ
	|					ВТ_СтатьиЗатрат КАК СтатьиЗатрат))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Подразделение,
	|	НоменклатурнаяГруппа,
	|	СтатьяЗатрат,
	|	КорСчет,
	|	ВидРасходовНУ,
	|	ВидДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ПрямыеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СтатьиЗатрат";
	
	УничтожитьВременныеТаблицы = "УНИЧТОЖИТЬ ИмяБазыРаспределения_ПрямыеРасходы";
	
	СоздатьВременныеТаблицы    = СтрЗаменить(СоздатьВременныеТаблицы,    "ИмяБазыРаспределения", Имя);
	УничтожитьВременныеТаблицы = СтрЗаменить(УничтожитьВременныеТаблицы, "ИмяБазыРаспределения", Имя);
	
	// Стоимость расходов в налоговом учете может отличаться в БУ и НУ,
	// соответственно будет отличаться и база распределения.
	
	Если УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период) Тогда
		
		// Выделим налоговый учет
		
		Правило = ПравилаРаспределения.Добавить();
		Правило.Имя          = "ОтличаетсяБазаРаспределения";
		Правило.Наименование = НСтр("ru = 'Отразить постоянные разницы, вызванные отличием базы распределения в бухгалтерском и налоговом учете'");
		Правило.СодержаниеПроводки = НСтр("ru = 'Распределение ОПР и ОХР'");
		
		Правило.Настройка     = Настройка;
		Правило.МетодРасчета  = МетодРасчета;
		Правило.ОтборРасходов = ОтборРасходов;
		Правило.Действие      = "ВыделитьНалоговыйУчет";
		Правило.ПоляПриемника.Вставить("НалоговыйУчет");
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ОтличаетсяБазаРаспределения) КАК НалоговыйУчет,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийРасчетСебестоимости.ПостоянныеРазницы) КАК ТипРазниц
		|ПОМЕСТИТЬ БазаРаспределения_ОтличаетсяБазаРаспределения";
		
		Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ОтличаетсяБазаРаспределения");
		Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
		
		// Распределим в налоговом учете
		
		Правило = ПравилаРаспределения.Добавить();
		Правило.Имя          = "Метод" + ИмяМетодаРасчета + "НУ";
		Правило.Наименование = НСтр("ru = 'Распределить косвенные расходы по базе, основанной на величине прямых расходов в налоговом учете'");
		Правило.СодержаниеПроводки = НСтр("ru = 'Распределение ОПР и ОХР'");
		
		Правило.Настройка     = Настройка;
		Правило.МетодРасчета  = МетодРасчета;
		Правило.ОтборРасходов = ОтборРасходов;
		Правило.ПоляИсточника = РазрезыРаспределенияКосвенныхРасходов(ВРазрезеПодразделений);
		Правило.ПоляИсточника.Вставить("НалоговыйУчет", "НалоговыйУчетОтбор"); // Зададим отбор в тексте запроса, чтобы не портить ОтборРасходов
		
		Правило.Действие      = "РаспределитьНаРасходы";
		Правило.ПоляПриемника = ПоляБазыКосвенныхРасходов();
		Правило.ПоляПриемника.Вставить("НалоговыйУчет"); // Больше не нужен
		
		// Для налогового учета база распределения расходов должна быть ограничена только прямыми расходами налогового учета.
		// Текст запроса собираем из частей (см. далее)
		ТекстПакетаЗапросов = Новый Массив;
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Расходы.Счет КАК Счет,
		|	Расходы.Подразделение КАК Подразделение,
		|	Расходы.НоменклатурнаяГруппа,
		|	Расходы.СтатьяЗатрат КАК СтатьяЗатрат,
		|	Расходы.КорСчет КАК КорСчет,
		|	Расходы.ВидРасходовНУ КАК ВидРасходовНУ,
		|	Расходы.ВидДеятельности
		|ПОМЕСТИТЬ ВТ_АналитикаРасходовНУ
		|ИЗ
		|	ИмяБазыРаспределения_ПрямыеРасходы КАК Расходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасходовНУ,
		|	Подразделение,
		|	Счет,
		|	КорСчет,
		|	СтатьяЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Настройка.ВидРасходовНУ КАК ВидРасходовНУ,
		|	Настройка.Подразделение КАК Подразделение,
		|	Настройка.Счет КАК Счет,
		|	Настройка.КорСчет КАК КорСчет,
		|	Настройка.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВТ_ПравилаОпределенияПрямыхРасходовНалоговогоУчета
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Настройка
		|ГДЕ
		|	Настройка.Организация = &Организация
		|	И Настройка.ПериодДействия = НАЧАЛОПЕРИОДА(&НачалоПериода, ГОД)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасходовНУ,
		|	Подразделение,
		|	Счет,
		|	КорСчет,
		|	СтатьяЗатрат
		|";
		ТекстПакетаЗапросов.Добавить(ТекстЗапроса);
		
		// В таблице ВТ_ПравилаОпределенияПрямыхРасходовНалоговогоУчета используется правило
		// "незаполненное поле означает <все возможные значения>".
		// Для того, чтобы применить такие правила, в общем случае следует выполнить 2^N запросов,
		// где N - это число таких полей (колонок, которые могут быть не заполнены).
		// В данном случае - 16 запросов.
		// Несмотря на то, что текст запросов не зависит от данных конфигурации,
		// формируем этот текст динамически, чтобы не запутаться в 16 запросах.
		
		// Фрагмент запроса нельзя редактировать конструктором, потому что он содержит комментарии,
		// которые ниже будут заменены
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АналитикаРасходов.Счет КАК Счет,
		|	АналитикаРасходов.Подразделение КАК Подразделение,
		|	АналитикаРасходов.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	АналитикаРасходов.СтатьяЗатрат КАК СтатьяЗатрат,
		|	АналитикаРасходов.КорСчет КАК КорСчет,
		|	АналитикаРасходов.ВидРасходовНУ КАК ВидРасходовНУ,
		|	АналитикаРасходов.ВидДеятельности КАК ВидДеятельности
		|ПОМЕСТИТЬ ВТ_АналитикаПрямыхРасходовНУ
		|ИЗ
		|	ВТ_АналитикаРасходовНУ КАК АналитикаРасходов
		|ГДЕ
		|	ЛОЖЬ
		|//Объединить
		|ИНДЕКСИРОВАТЬ ПО
		|	НоменклатурнаяГруппа,
		|	ВидДеятельности,
		|	ВидРасходовНУ,
		|	Подразделение,
		|	КорСчет,
		|	СтатьяЗатрат,
		|	Счет";
		
		ШаблонЧастьЗапросаОбъединить = 
		"ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АналитикаРасходов.Счет,
		|	АналитикаРасходов.Подразделение,
		|	АналитикаРасходов.НоменклатурнаяГруппа,
		|	АналитикаРасходов.СтатьяЗатрат,
		|	АналитикаРасходов.КорСчет,
		|	АналитикаРасходов.ВидРасходовНУ,
		|	АналитикаРасходов.ВидДеятельности
		|ИЗ
		|	ВТ_АналитикаРасходовНУ КАК АналитикаРасходов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПравилаОпределенияПрямыхРасходовНалоговогоУчета КАК Правила
		|		ПО АналитикаРасходов.ВидРасходовНУ = Правила.ВидРасходовНУ
		|//Подразделение_Истина			И АналитикаРасходов.Подразделение = Правила.Подразделение
		|//Счет_Истина			И АналитикаРасходов.Счет = Правила.Счет
		|//КорСчет_Истина			И АналитикаРасходов.КорСчет = Правила.КорСчет
		|//СтатьяЗатрат_Истина			И АналитикаРасходов.СтатьяЗатрат = Правила.СтатьяЗатрат
		|//Подразделение_Ложь			И (Правила.Подразделение = &ПустоеПодразделение)
		|//Счет_Ложь			И (Правила.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|//КорСчет_Ложь			И (Правила.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|//СтатьяЗатрат_Ложь			И (Правила.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка))
		|//Объединить";
		
		ВсеПоля = Новый Массив;
		ВсеПоля.Добавить("Подразделение"); // 2^0 = 1
		ВсеПоля.Добавить("Счет");          // 2^1 = 2
		ВсеПоля.Добавить("КорСчет");       // 2^2 = 4
		ВсеПоля.Добавить("СтатьяЗатрат");  // 2^3 = 8
		
		КоличествоПолей = ВсеПоля.Количество();
		Для Комбинация = 0 По Pow(2, КоличествоПолей) - 1 Цикл
			
			ЧастьЗапроса = ШаблонЧастьЗапросаОбъединить;
			
			ЗначенияПолей = РазложитьПоСтепенямДвойки(Комбинация, КоличествоПолей);
			Для НомерПоля = 0 По КоличествоПолей - 1 Цикл
				ИмяПоля = ВсеПоля[НомерПоля];
				Если ЗначенияПолей[НомерПоля] Тогда
					ЧастьЗапроса = СтрЗаменить(ЧастьЗапроса, "//" + ИмяПоля + "_Истина", "");
				Иначе
					ЧастьЗапроса = СтрЗаменить(ЧастьЗапроса, "//" + ИмяПоля + "_Ложь",   "");
				КонецЕсли;
			КонецЦикла; // НомерПоля
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//Объединить", ЧастьЗапроса);
			
		КонецЦикла; // Комбинация
		
		ТекстПакетаЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ОтличаетсяБазаРаспределения) КАК НалоговыйУчетОтбор,
		|	ПрямыеРасходы.Подразделение КАК Подразделение,
		|	ПрямыеРасходы.ВидДеятельности КАК ВидДеятельности,
		|	ПрямыеРасходы.Счет,
		|	ПрямыеРасходы.НоменклатурнаяГруппа,
		|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ПустаяСсылка) КАК НалоговыйУчет,
		|	СУММА(ПрямыеРасходы.БазаНУ) КАК База
		|ПОМЕСТИТЬ ИмяБазыРаспределенияНУ
		|ИЗ
		|	ВТ_АналитикаПрямыхРасходовНУ КАК АналитикаРасходов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИмяБазыРаспределения_ПрямыеРасходы КАК ПрямыеРасходы
		|		ПО АналитикаРасходов.Счет = ПрямыеРасходы.Счет
		|			И АналитикаРасходов.Подразделение = ПрямыеРасходы.Подразделение
		|			И АналитикаРасходов.НоменклатурнаяГруппа = ПрямыеРасходы.НоменклатурнаяГруппа
		|			И АналитикаРасходов.СтатьяЗатрат = ПрямыеРасходы.СтатьяЗатрат
		|			И АналитикаРасходов.КорСчет = ПрямыеРасходы.КорСчет
		|			И АналитикаРасходов.ВидРасходовНУ = ПрямыеРасходы.ВидРасходовНУ
		|			И АналитикаРасходов.ВидДеятельности = ПрямыеРасходы.ВидДеятельности
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрямыеРасходы.Счет,
		|	ПрямыеРасходы.Подразделение,
		|	ПрямыеРасходы.НоменклатурнаяГруппа,
		|	ПрямыеРасходы.ВидДеятельности
		|
		|ИМЕЮЩИЕ
		|	СУММА(ПрямыеРасходы.БазаНУ) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйУчетОтбор,
		|	ВидДеятельности,
		|	Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_АналитикаПрямыхРасходовНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ПравилаОпределенияПрямыхРасходовНалоговогоУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_АналитикаРасходовНУ";
		
		ТекстПакетаЗапросов.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(
			ТекстПакетаЗапросов,
			ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяБазыРаспределения", Имя);
		
		Правило.БазаРаспределения.Вставить("Имя",          Имя + "НУ");
		Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
		
	КонецЕсли;
	
	// Теперь - для БУ
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "Метод" + ИмяМетодаРасчета;
	Правило.Наименование = НСтр("ru = 'Распределить косвенные расходы по базе, основанной на величине прямых расходов'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Распределение ОПР и ОХР'");
	
	Правило.Настройка     = Настройка;
	Правило.МетодРасчета  = МетодРасчета;
	Правило.ОтборРасходов = ОтборРасходов;
	Правило.ПоляИсточника = РазрезыРаспределенияКосвенныхРасходов(ВРазрезеПодразделений);
	Правило.ПоляИсточника.Вставить("НалоговыйУчет", "НалоговыйУчетОтбор"); // Обрабатываем только расходы без особенностей. Зададим отбор в тексте запроса, чтобы не портить ОтборРасходов. 
	
	Правило.Действие      = "РаспределитьНаРасходы";
	Правило.ПоляПриемника = ПоляБазыКосвенныхРасходов();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ПустаяСсылка) КАК НалоговыйУчетОтбор,
	|	ПрямыеРасходы.ВидДеятельности КАК ВидДеятельности,
	|	ПрямыеРасходы.Подразделение КАК Подразделение,
	|	ПрямыеРасходы.Счет,
	|	ПрямыеРасходы.НоменклатурнаяГруппа,
	|	СУММА(ПрямыеРасходы.База) КАК База
	|ПОМЕСТИТЬ ИмяБазыРаспределенияБУ
	|ИЗ
	|	ИмяБазыРаспределения_ПрямыеРасходы КАК ПрямыеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрямыеРасходы.Счет,
	|	ПрямыеРасходы.Подразделение,
	|	ПрямыеРасходы.ВидДеятельности,
	|	ПрямыеРасходы.НоменклатурнаяГруппа
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПрямыеРасходы.База) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НалоговыйУчетОтбор,
	|	ВидДеятельности,
	|	Подразделение";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяБазыРаспределения", Имя);
	
	Правило.БазаРаспределения.Вставить("Имя",                        Имя + "БУ");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса",               ТекстЗапроса);
	Правило.БазаРаспределения.Вставить("ПакетВременныхТаблиц",       Имя);
	Правило.БазаРаспределения.Вставить("СоздатьВременныеТаблицы",    СоздатьВременныеТаблицы);
	Правило.БазаРаспределения.Вставить("ПараметрыВременныхТаблиц",   ПараметрыВременныхТаблиц);
	Правило.БазаРаспределения.Вставить("УничтожитьВременныеТаблицы", УничтожитьВременныеТаблицы);
	
КонецПроцедуры

Процедура ДобавитьПравилоМетодВыручка(ПравилаРаспределения, Настройка, ОтборРасходов, ВРазрезеПодразделений, СчетПрямыхЗатрат, ПодразделениеЗатрат)
	
	// Цитата из методических материалов:
	// Выручка - распределение по номенклатурным группам, которые: 
	// - одновременно указаны в оборотах счетов 20,23 и в документах Реализация (акт, накладная) на закладке "Услуги" 
	//   (при условии, что в учетной политике на закладке "Производство" для услуг сторонним организациям выбран метод "По выручке"),
	// - одновременно указаны в оборотах счетов 20,23 и в оборотах счета 90.02 в корреспонденции со счетом 43 (реализация продукции), 
	//    указаны в документах Реализация (акт, накладная) на закладке "Услуги" при условии, что: 
	//     в учетной политике на закладке "Производство" для услуг сторонним организациям выбран метод "По выручке", 
	//     в регистре заполнены колонки "Счет прямых затрат", "Подразделение затрат".
	
	// Эта база уникальная для каждого правила, однако для ее создания используются одни и те же данные.
	// Для того, чтобы эти данные не получать многократно, сначала создается временная таблица ВыручкаПоАналитикеВыпуска, 
	// которая используется для всех правил с таким методом расчета
	
	ПараметрыВременныхТаблиц = Новый Структура;
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	ПараметрыВременныхТаблиц.Вставить("ВидыСубконто", ВидыСубконто);
	
	СоздатьВременныеТаблицы = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаВыручки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	(Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка))
	|			ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_НДС)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет КАК СчетВыручки,
	|	ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0) - ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) КАК СуммаБезНДС
	|ПОМЕСТИТЬ ВТ_ВыручкаПродукцииБезНДС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаВыручки.Счет
	|				ИЗ
	|					ВТ_СчетаВыручки),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|			Организация = &Организация,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	ВыручкаПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	СУММА(ВыручкаПродукции.СуммаБезНДС) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Выручка
	|ИЗ
	|	ВТ_ВыручкаПродукцииБезНДС КАК ВыручкаПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|		ПО ВыручкаПродукции.СчетВыручки = СчетаДоходовИРасходовЕНВД.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ,
	|	ВыручкаПродукции.НоменклатурнаяГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатурнаяГруппа,
	|	ВидДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХозрасчетныйОбороты.Счет,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа,
	|	ХозрасчетныйОбороты.Субконто2 КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ВТ_ПрямыеРасходы
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаПрямыхРасходов.Счет
	|				ИЗ
	|					СчетаПрямыхРасходов),
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						ВТ_Выручка.НоменклатурнаяГруппа
	|					ИЗ
	|						ВТ_Выручка),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХозрасчетныйОстатки.Счет,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, &ПустоеПодразделение),
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаПрямыхРасходов.Счет
	|				ИЗ
	|					СчетаПрямыхРасходов),
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						ВТ_Выручка.НоменклатурнаяГруппа
	|					ИЗ
	|						ВТ_Выручка)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокДт <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпускПродукции.СчетЗатрат КАК Счет,
	|	ВыпускПродукции.Подразделение,
	|	ВыпускПродукции.НоменклатурнаяГруппа,
	|	ВыпускПродукции.СчетСписания КАК СчетСписания
	|ПОМЕСТИТЬ ВТ_ВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииУслуг.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И НоменклатурнаяГруппа В
	|					(ВЫБРАТЬ
	|						ВТ_Выручка.НоменклатурнаяГруппа
	|					ИЗ
	|						ВТ_Выручка)) КАК ВыпускПродукции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетСписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрямыеРасходы.Счет,
	|	ПрямыеРасходы.Подразделение,
	|	ПрямыеРасходы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		ИНАЧЕ ЕСТЬNULL(СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат, 
	|				ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|	КОНЕЦ КАК ВидДеятельности
	|ПОМЕСТИТЬ ВТ_АналитикаПрямыхРасходов
	|ИЗ
	|	ВТ_ПрямыеРасходы КАК ПрямыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|		ПО ПрямыеРасходы.СтатьяЗатрат = СтатьиЗатрат.Ссылка
	|ГДЕ
	|	(СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ИЛИ &ТолькоОсновнаяСистемаНалогообложения
	|			ИЛИ &ТолькоОсобыйПорядокНалогообложения)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыпускПродукции.Счет,
	|	ВыпускПродукции.Подразделение,
	|	ВыпускПродукции.НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ
	|ИЗ
	|	ВТ_ВыпускПродукции КАК ВыпускПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|		ПО ВыпускПродукции.СчетСписания = СчетаДоходовИРасходовЕНВД.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатурнаяГруппа,
	|	ВидДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выручка.ВидДеятельности КАК ВидДеятельности,
	|	Выручка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПрямыеРасходы.Счет КАК Счет,
	|	ПрямыеРасходы.Подразделение,
	|	Выручка.Сумма
	|ПОМЕСТИТЬ ВыручкаПоАналитикеВыпуска
	|ИЗ
	|	ВТ_Выручка КАК Выручка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикаПрямыхРасходов КАК ПрямыеРасходы
	|		ПО Выручка.ВидДеятельности = ПрямыеРасходы.ВидДеятельности
	|			И Выручка.НоменклатурнаяГруппа = ПрямыеРасходы.НоменклатурнаяГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыручкаПродукцииБезНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Выручка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ПрямыеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыпускПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_АналитикаПрямыхРасходов";
	
	УничтожитьВременныеТаблицы =
	"УНИЧТОЖИТЬ ВыручкаПоАналитикеВыпуска";
	
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "МетодВыручка";
	Правило.Наименование = НСтр("ru = 'Распределить косвенные расходы по данным о выручке'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Распределение ОПР и ОХР'");
	
	Правило.Настройка     = Настройка;
	Правило.МетодРасчета  = Перечисления.БазыРаспределенияКосвенныхРасходов.Выручка;
	Правило.ОтборРасходов = ОтборРасходов;
	Правило.Действие      = "РаспределитьНаРасходы";
	Правило.ПоляИсточника = РазрезыРаспределенияКосвенныхРасходов(ВРазрезеПодразделений);
	Правило.ПоляПриемника = ПоляБазыКосвенныхРасходов();
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетЗатратПоПодразделениям") Тогда
		АналитикаЗаданаНастройкой = ЗначениеЗаполнено(СчетПрямыхЗатрат) И ЗначениеЗаполнено(ПодразделениеЗатрат);// Не допускаем пустое подразделение затрат для 25 счета
	Иначе
		АналитикаЗаданаНастройкой = ЗначениеЗаполнено(СчетПрямыхЗатрат);
	КонецЕсли;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("АналитикаЗаданаНастройкой", АналитикаЗаданаНастройкой);
	ПараметрыЗапроса.Вставить("СчетНастройки",             СчетПрямыхЗатрат);
	ПараметрыЗапроса.Вставить("ПодразделениеНастройки",    ПодразделениеЗатрат);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВыручкаПоАналитикеВыпуска.ВидДеятельности КАК ВидДеятельности,
	|	ВыручкаПоАналитикеВыпуска.Подразделение КАК Подразделение,
	|	ВыручкаПоАналитикеВыпуска.Счет КАК Счет,
	|	ВыручкаПоАналитикеВыпуска.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВыручкаПоАналитикеВыпуска.Сумма КАК База
	|ПОМЕСТИТЬ %ИмяБазыРаспределения%
	|ИЗ
	|	ВыручкаПоАналитикеВыпуска КАК ВыручкаПоАналитикеВыпуска
	|%ГДЕ%
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности,
	|	Подразделение";
		
	Если Не АналитикаЗаданаНастройкой Тогда
		Условие = "";
		Имя = "БазаРаспределения_Выручка";
	Иначе
		
		// База уникальна для каждого сочетания счета и подразделения в настройке
		Имя = "БазаРаспределения_Выручка_" 
			+ УникальноеПредставлениеСсылки(СчетПрямыхЗатрат)
			+ УникальноеПредставлениеСсылки(ПодразделениеЗатрат);
		
		Если ЗначениеЗаполнено(ПодразделениеЗатрат) Тогда
			// Настройка выполнена для счета и подразделения
			Условие =
			"ГДЕ
			|	ВыручкаПоАналитикеВыпуска.Счет = &СчетНастройки
			|	И ВыручкаПоАналитикеВыпуска.Подразделение = &ПодразделениеНастройки";
		Иначе 
			// Настройка выполнена только для счета
			Условие =
			"ГДЕ
			|	ВыручкаПоАналитикеВыпуска.Счет = &СчетНастройки";
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ГДЕ%", Условие);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяБазыРаспределения%", Имя);
	
	Правило.БазаРаспределения.Вставить("Имя",                        Имя);
	Правило.БазаРаспределения.Вставить("ТекстЗапроса",               ТекстЗапроса);
	Правило.БазаРаспределения.Вставить("ПараметрыЗапроса",           ПараметрыЗапроса);
	Правило.БазаРаспределения.Вставить("ПакетВременныхТаблиц",       "Выручка");
	Правило.БазаРаспределения.Вставить("СоздатьВременныеТаблицы",    СоздатьВременныеТаблицы);
	Правило.БазаРаспределения.Вставить("ПараметрыВременныхТаблиц",   ПараметрыВременныхТаблиц);
	Правило.БазаРаспределения.Вставить("УничтожитьВременныеТаблицы", УничтожитьВременныеТаблицы);
		
КонецПроцедуры

Процедура ДобавитьПравилоМетодВыручкаТолькоУслуги(ПравилаРаспределения, Настройка, ОтборРасходов, Знач СчетПрямыхЗатрат, Знач ПодразделениеЗатрат)
	
	// Косвенные расходы распределяются на счет 20 между номенклатурными группами пропорционально выручке от реализации услуг.
	
	// Эта база уникальная для каждого правила, однако для ее создания используются одни и те же данные.
	// Для того, чтобы эти данные не получать многократно, сначала создается временная таблица Выручка,
	// которая используется для всех правил с таким методом расчета
	
	СоздатьВременныеТаблицы =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаВыручки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаНДС
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_НДС))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	Хозрасчетный.СчетКт КАК Счет,
	|	Хозрасчетный.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_СуммыВыручки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				ВТ_СчетаВыручки.Счет
	|			ИЗ
	|				ВТ_СчетаВыручки)
	|	И Хозрасчетный.Активность
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.Регистратор ССЫЛКА Документ.АктОбОказанииПроизводственныхУслуг
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор,
	|	Хозрасчетный.НомерСтроки,
	|	Хозрасчетный.СчетКт,
	|	Хозрасчетный.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				ВТ_СчетаВыручки.Счет
	|			ИЗ
	|				ВТ_СчетаВыручки)
	|	И Хозрасчетный.Активность
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.Регистратор ССЫЛКА Документ.РеализацияУслугПоПереработке
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	Хозрасчетный.СчетДт КАК Счет,
	|	Хозрасчетный.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_СуммыНДС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				ВТ_СчетаНДС.Счет
	|			ИЗ
	|				ВТ_СчетаНДС)
	|	И Хозрасчетный.Активность
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.Регистратор ССЫЛКА Документ.АктОбОказанииПроизводственныхУслуг
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор,
	|	Хозрасчетный.НомерСтроки,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				ВТ_СчетаНДС.Счет
	|			ИЗ
	|				ВТ_СчетаНДС)
	|	И Хозрасчетный.Активность
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.Регистратор ССЫЛКА Документ.РеализацияУслугПоПереработке
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслуг.СчетРасходов КАК Счет,
	|	РеализацияУслуг.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	РеализацияУслуг.СуммаОборот КАК СуммаБезНДС
	|ПОМЕСТИТЬ ВТ_ВыручкаОтРеализацииУслуг
	|ИЗ
	|	РегистрНакопления.РеализацияУслуг.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК РеализацияУслуг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СуммыВыручки.Счет,
	|	ХозрасчетныйСубконто.Значение,
	|	СУММА(СуммыВыручки.Сумма)
	|ИЗ
	|	ВТ_СуммыВыручки КАК СуммыВыручки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО СуммыВыручки.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И СуммыВыручки.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|ГДЕ
	|	ХозрасчетныйСубконто.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит)
	|	И ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыВыручки.Счет,
	|	ХозрасчетныйСубконто.Значение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СуммыНДС.Счет,
	|	ХозрасчетныйСубконто.Значение,
	|	СУММА(-СуммыНДС.Сумма)
	|ИЗ
	|	ВТ_СуммыНДС КАК СуммыНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО СуммыНДС.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И СуммыНДС.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|ГДЕ
	|	ХозрасчетныйСубконто.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет)
	|	И ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыНДС.Счет,
	|	ХозрасчетныйСубконто.Значение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	РеализацияУслуг.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	СУММА(РеализацияУслуг.СуммаБезНДС) КАК Сумма
	|ПОМЕСТИТЬ ВыручкаОтРеализацииУслуг
	|ИЗ
	|	ВТ_ВыручкаОтРеализацииУслуг КАК РеализацияУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
	|		ПО РеализацияУслуг.Счет = СчетаДоходовИРасходовЕНВД.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &ТолькоОсновнаяСистемаНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОГДА &ТолькоОсобыйПорядокНалогообложения ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА СчетаДоходовИРасходовЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	КОНЕЦ,
	|	РеализацияУслуг.НоменклатурнаяГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыручкаОтРеализацииУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СуммыВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СуммыНДС";
	
	УничтожитьВременныеТаблицы =
	"УНИЧТОЖИТЬ ВыручкаОтРеализацииУслуг";
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "МетодВыручка";
	Правило.Наименование = НСтр("ru = 'Распределить косвенные расходы по данным о выручке'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Распределение ОПР и ОХР'");
	
	Правило.Настройка     = Настройка;
	Правило.МетодРасчета  = Перечисления.БазыРаспределенияКосвенныхРасходов.Выручка;
	Правило.ОтборРасходов = ОтборРасходов;
	Правило.Действие      = "РаспределитьНаРасходы";
	Правило.ПоляИсточника = РазрезыРаспределенияКосвенныхРасходов(Ложь); // Не в разрезе подразделений
	Правило.ПоляПриемника = ПоляБазыКосвенныхРасходов();// Ниже может быть скорректировано
	Если Не ЗначениеЗаполнено(ПодразделениеЗатрат) Тогда
		// Подразделение возьмем из источника, а не из базы
		Правило.ПоляПриемника.Удалить("Подразделение");
	КонецЕсли;
	
	// Если в "методах распределения косвенных расходов" задан счет затрат, то затраты будут отнесены на заданный счет.
	// Если не задан - то на предопределенный счет 20.01
	Если Не ЗначениеЗаполнено(СчетПрямыхЗатрат) Тогда
		СчетПрямыхЗатрат = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
	КонецЕсли;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Счет",          СчетПрямыхЗатрат);
	ПараметрыЗапроса.Вставить("Подразделение", ПодразделениеЗатрат);
	
	// База распределения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Выручка.ВидДеятельности КАК ВидДеятельности,
	|	&Подразделение КАК Подразделение,
	|	&Счет КАК Счет,
	|	Выручка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Выручка.Сумма КАК База
	|ПОМЕСТИТЬ ИмяБазыРаспределения
	|ИЗ
	|	ВыручкаОтРеализацииУслуг КАК Выручка
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДеятельности";
	
	// База уникальна для каждого сочетания аналитики приемника в настройке
	Если Не ЗначениеЗаполнено(СчетПрямыхЗатрат) И Не ЗначениеЗаполнено(ПодразделениеЗатрат) Тогда
		Имя = "БазаРаспределения_ВыручкаТолькоУслуги";
	Иначе
		Имя = "БазаРаспределения_ВыручкаТолькоУслуги_" 
			+ УникальноеПредставлениеСсылки(СчетПрямыхЗатрат)
			+ УникальноеПредставлениеСсылки(ПодразделениеЗатрат);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяБазыРаспределения", Имя);
	
	Правило.БазаРаспределения.Вставить("Имя",                        Имя);
	Правило.БазаРаспределения.Вставить("ТекстЗапроса",               ТекстЗапроса);
	Правило.БазаРаспределения.Вставить("ПараметрыЗапроса",           ПараметрыЗапроса);
	Правило.БазаРаспределения.Вставить("ПакетВременныхТаблиц",       "ВыручкаТолькоУслуги");
	Правило.БазаРаспределения.Вставить("СоздатьВременныеТаблицы",    СоздатьВременныеТаблицы);
	Правило.БазаРаспределения.Вставить("ПараметрыВременныхТаблиц",   Новый Структура);
	Правило.БазаРаспределения.Вставить("УничтожитьВременныеТаблицы", УничтожитьВременныеТаблицы);
		
КонецПроцедуры

Процедура ДобавитьПравилоНеРаспределять(ПравилаРаспределения, Настройка, ОтборРасходов)
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя           = "НеРаспределять";
	Правило.Наименование  = НСтр("ru = 'Не распределять расходы: следует распределить вручную'");
	
	Правило.Настройка     = Настройка;
	Правило.МетодРасчета  = Перечисления.БазыРаспределенияКосвенныхРасходов.НеРаспределяется;
	Правило.ОтборРасходов = ОтборРасходов;
	Правило.Действие      = "Зафиксировать";
	
КонецПроцедуры			

// Налоговый учет по налогу на прибыль

Процедура ДобавитьПравилаПрямыеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация)
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Если НЕ ПлательщикНалогаНаПрибыль Тогда
		// Правила применяем только на основной системе налогообложения
		Возврат;
	КонецЕсли;
	
	// Расходы, у которых неизвестен ВидУчетаНУ - заведомо прямые.
	// Расходы, у которых известен ВидУчетаНУ относим к прямым, если это предусмотрено настройкой.
	
	// Определим период, в котором введены актуальные сведения о списке расходов.
	// Обычно это тот же период, в котором введены остальные сведения учетной политики.
	// Но может быть исключение: учетная политика в целом действует с предыдущих лет,
	// а в список прямых расходов в текущем году внесены изменения.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(УчетнаяПолитика.Период, ГОД) КАК Год
	|ПОМЕСТИТЬ ГодАктуальнойУчетнойПолитики
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СписокПрямыхРасходов.ПериодДействия) КАК Год
	|ПОМЕСТИТЬ ГодАктуальногоСпискаПрямыхРасходов
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК СписокПрямыхРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГодАктуальнойУчетнойПолитики КАК ГодАктуальнойУчетнойПолитики
	|		ПО СписокПрямыхРасходов.ПериодДействия >= ГодАктуальнойУчетнойПолитики.Год
	|ГДЕ
	|	СписокПрямыхРасходов.Организация = &Организация
	|	И СписокПрямыхРасходов.ПериодДействия = НАЧАЛОПЕРИОДА(СписокПрямыхРасходов.ПериодДействия, ГОД)
	|	И СписокПрямыхРасходов.ПериодДействия <= &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ГодАктуальногоСпискаПрямыхРасходов.Год ЕСТЬ NULL 
	|			ТОГДА ГодАктуальнойУчетнойПолитики.Год
	|		ИНАЧЕ ГодАктуальногоСпискаПрямыхРасходов.Год
	|	КОНЕЦ КАК Период
	|ИЗ
	|	ГодАктуальнойУчетнойПолитики КАК ГодАктуальнойУчетнойПолитики,
	|	ГодАктуальногоСпискаПрямыхРасходов КАК ГодАктуальногоСпискаПрямыхРасходов";
	// В каждой из временных таблиц не более одной записи
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		// Учетная политика не задана
		Возврат;
	КонецЕсли;
	ПериодУчетнойПолитики = Выборка.Период;
	
	// Получим настройки.
	// Настройки сгруппируем так, чтобы в группе не содержалось столбцов,
	// в которых часть полей будет заполнена, а часть нет.
	// Множители должны быть такие же, как и в ДобавитьПравилоПрямыеРасходыНалоговогоУчета
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Период",      ПериодУчетнойПолитики);
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА Настройка.Подразделение = &ПустоеПодразделение
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройка.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройка.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройка.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА 8
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Группа
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Настройка
	|ГДЕ
	|	Настройка.Организация = &Организация
	|	И Настройка.ПериодДействия = НАЧАЛОПЕРИОДА(&Период, ГОД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Группа УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	// Для каждой группы создадим правило, которое отнесет расходы к прямым расходам налогового учета
	Пока Выборка.Следующий() Цикл
		ДобавитьПравилоПрямыеРасходыНалоговогоУчета(ПравилаРаспределения, Выборка.Группа, ПериодУчетнойПолитики);
	КонецЦикла;
	
	// Все остальные расходы, у которых заполнен ВидУчетаНУ, для целей налогового учета назовем косвенными
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "ВременныеРазницыКосвенныеРасходы";
	Правило.Наименование = НСтр("ru = 'Отразить временные разницы, вызванные разным моментом признания косвенных расходов налогового учета'");
	Правило.Действие     = "ВыделитьНалоговыйУчет";
	
	// Покажем, что расходы относятся в налоговом учете к косвенным
	Правило.ПоляПриемника.Вставить("НалоговыйУчет");
	// После выполнения правила значения не нужны
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ");
	Правило.ПоляПриемника.Вставить("КорСчет");       
	
	// Механика задания правил не позволяет задать условие вида "Заполнено".
	// Поэтому перечислим в базе все возможные значения перечисления
	Правило.ПоляИсточника.Вставить("ВидРасходовНУ", "ВидРасходовНУОтбор");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВидыРасходовНУ.Ссылка КАК ВидРасходовНУОтбор,
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ТекущегоПериода) КАК НалоговыйУчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийРасчетСебестоимости.ВременныеРазницы) КАК ТипРазниц
	|ПОМЕСТИТЬ БазаРаспределения_ВыделитьКосвенныеРасходыНалоговогоУчета
	|ИЗ
	|	Перечисление.ВидыРасходовНУ КАК ВидыРасходовНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходовНУОтбор";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ВыделитьКосвенныеРасходыНалоговогоУчета");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
	// После выполнения предыдущего правила не нужны ВидУчетаНУ и КорСчет, поэтому избавимся от них.
	// В результате не останется нераспределенных расходов с заполненным ВидУчетаНУ
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "СгруппироватьКосвенныеРасходы";
	Правило.Наименование = НСтр("ru = 'Сгруппировать расходы, избавившись от аналитики, которая больше не нужна'");
	Правило.Действие      = "РаспределитьНаРасходы";
	// После выполнения правила значения не нужны
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ");
	Правило.ПоляПриемника.Вставить("КорСчет");
	Правило.ПоляПриемника.Вставить("НалоговыйУчет");
	
	// Механика задания правил не позволяет задать условие вида "Заполнено".
	// Поэтому перечислим в базе все возможные значения перечисления
	Правило.ПоляИсточника.Вставить("ВидРасходовНУ", "ВидРасходовНУОтбор");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВидыРасходовНУ.Ссылка КАК ВидРасходовНУОтбор,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ПустаяСсылка) КАК НалоговыйУчет,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_СгруппироватьКосвенныеРасходы
	|ИЗ
	|	Перечисление.ВидыРасходовНУ КАК ВидыРасходовНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходовНУОтбор";
	
	Правило.БазаРаспределения.Вставить("Имя",              "БазаРаспределения_СгруппироватьКосвенныеРасходы");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса",     ТекстЗапроса);
	
	// Нормирование косвенных расходов выполняется в ДобавитьПравилаНормируемыеРасходыНалоговогоУчета()
	// Списание косвенных расходов выполняется в ДобавитьПравилоКосвенныеРасходыНалоговогоУчета()
	
КонецПроцедуры

Процедура ДобавитьПравилоПрямыеРасходыНалоговогоУчета(ПравилаРаспределения, Группа, ПериодУчетнойПолитики)
	
	// Для каждой группы создадим правило, которое отнесет расходы к прямым расходам налогового учета
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "ПрямыеРасходыНалоговогоУчетаПоНастройке";
	Правило.Наименование = НСтр("ru = 'Идентифицировать прямые расходы налогового учета (согласно учетной политике)'");
	
	// Все правила такого вида используют один пакет временных таблиц
	Правило.БазаРаспределения.Вставить("ПакетВременныхТаблиц", "ПрямыеРасходыНалоговогоУчета");
	
	ПараметрыВременныхТаблиц = Новый Структура;
	ПараметрыВременныхТаблиц.Вставить("ПериодУчетнойПолитики", ПериодУчетнойПолитики);
	ПараметрыВременныхТаблиц.Вставить("ИерархияСчетов",        ИерархияСчетов());
	
	СоздатьВременныеТаблицы = // Определение поля группа должно совпадать с текстом запроса в ДобавитьПравилаПрямыеРасходыНалоговогоУчета()
	"ВЫБРАТЬ
	|	ИерархияСчетов.СчетГруппа КАК СчетГруппа,
	|	ИерархияСчетов.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_ИерархияСчетов
	|ИЗ
	|	&ИерархияСчетов КАК ИерархияСчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА Настройка.Подразделение = &ПустоеПодразделение
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройка.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройка.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Настройка.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА 8
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Группа,
	|	Настройка.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Настройка.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ИерархияСчетов.Счет, Настройка.Счет) КАК Счет,
	|	ЕСТЬNULL(ИерархияКорСчетов.Счет, Настройка.КорСчет) КАК КорСчет,
	|	Настройка.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ПравилаОпределенияПрямыхРасходовНалоговогоУчета
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Настройка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ИерархияСчетов
	|		ПО Настройка.Счет = ИерархияСчетов.СчетГруппа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ИерархияКорСчетов
	|		ПО Настройка.КорСчет = ИерархияКорСчетов.СчетГруппа
	|ГДЕ
	|	Настройка.Организация = &Организация
	|	И Настройка.ПериодДействия = &ПериодУчетнойПолитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Группа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИерархияСчетов";
	
	УничтожитьВременныеТаблицы = 
	"УНИЧТОЖИТЬ ПравилаОпределенияПрямыхРасходовНалоговогоУчета";
	
	Правило.БазаРаспределения.Вставить("СоздатьВременныеТаблицы",    СоздатьВременныеТаблицы);
	Правило.БазаРаспределения.Вставить("ПараметрыВременныхТаблиц",   ПараметрыВременныхТаблиц);
	Правило.БазаРаспределения.Вставить("УничтожитьВременныеТаблицы", УничтожитьВременныеТаблицы);
	
	// Отнесем расходы к прямым расходам налогового учета.
	// Для этого достаточно очистить ВидРасходовНУ, так как 
	// - все расходы с пустым видом считаются прямыми
	// - вид расходов НУ не используется после того, как установлено, что расходы - прямые.
	// Переносим и сумму БУ и сумму НУ, 
	// чтобы избавиться от ненужной после выполнения этого правила аналитики - ВидРасходовНУ и КорСчет
	Правило.Действие      = "РаспределитьНаРасходы";
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ"); // Покажем, что эти расходы относятся к прямым
	Правило.ПоляПриемника.Вставить("КорСчет");       // После выполнения правила значения не нужны
	
	// Чтобы не делать много правил, отбор расходов зададим самой базой (см. текст запроса)
	// Связь с базой - по ВидРасходовНУ и по тем полям, которые заполнены.
	Правило.ПоляИсточника.Вставить("ВидРасходовНУ", "ВидРасходовНУОтбор");
	// Пустые поля означают "все". Чтобы это поддержать, связь по этим полям не выполняем.
	// Заполненность полей определим по номеру группы - разложим его на степени двойки.
	ВсеПоля = Новый Массив; // Порядок - как в запросе
	ВсеПоля.Добавить("Подразделение"); // 2^0 = 1
	ВсеПоля.Добавить("Счет");          // 2^1 = 2
	ВсеПоля.Добавить("КорСчет");       // 2^2 = 4
	ВсеПоля.Добавить("СтатьяЗатрат");  // 2^3 = 8
	
	// Из цикла по группам правил известна группа
	// ВидРасходов заполнен всегда
	КоличествоПолей = ВсеПоля.Количество();
	ПустыеПоля = РазложитьПоСтепенямДвойки(Группа, КоличествоПолей);
	Для Индекс = 0 По КоличествоПолей - 1 Цикл
		
		Если ПустыеПоля[Индекс] Тогда
			Продолжить;
		КонецЕсли;
		
		// Это поле используется, по нему нужна связь
		Поле       = ВсеПоля[Индекс];
		Правило.ПоляИсточника.Вставить(Поле, Поле + "Отбор");
		
	КонецЦикла;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Группа", Группа);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Правила.Счет КАК СчетОтбор,
	|	Правила.Подразделение КАК ПодразделениеОтбор,
	|	Правила.ВидРасходовНУ КАК ВидРасходовНУОтбор,
	|	Правила.СтатьяЗатрат КАК СтатьяЗатратОтбор,
	|	Правила.КорСчет КАК КорСчетОтбор,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет,
	|	1 КАК База
	|ПОМЕСТИТЬ ИмяБазыРаспределения
	|ИЗ
	|	ПравилаОпределенияПрямыхРасходовНалоговогоУчета КАК Правила
	|ГДЕ
	|	Правила.Группа = &Группа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходовНУОтбор,
	|	СчетОтбор,
	|	КорСчетОтбор,
	|	ПодразделениеОтбор,
	|	СтатьяЗатратОтбор";
	// Индексируем по убыванию частотности полей, для которых выполняются настройки
	// Но если состав индексов сделать зависящим от группы, то это увеличит производительность
	
	ИмяБазы = "БазаРаспределения_ПрямыеРасходыНалоговогоУчета_" + Группа;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяБазыРаспределения", ИмяБазы);
	Правило.БазаРаспределения.Вставить("Имя",              ИмяБазы);
	Правило.БазаРаспределения.Вставить("ТекстЗапроса",     ТекстЗапроса);
	Правило.БазаРаспределения.Вставить("ПараметрыЗапроса", ПараметрыЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилаНормируемыеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация)
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Если НЕ ПлательщикНалогаНаПрибыль Тогда
		// Правила применяем только на основной системе налогообложения
		Возврат;
	КонецЕсли;
	
	// Выполним нормирование расходов
	
	// Нормирование описано пятью правилами:
	// 1. нормируемые расходы распределим между нормативными и сверхнормативными
	//    Нормативные расходы обработаем на общем основании (например, в ДобавитьПравилаПрямыеРасходыНалоговогоУчета()).
	//    Сверхнормативные расходы обработаем правилами 2 - 4
	// 2. выделим сверхнормативные расходы налогового учета: 
	//    у них отличается порядок отражения в учете, они относятся к расходам будущих периодов.
	//    В результате получатся постоянные разницы
	// 3. зафиксируем сверхнормативные расходы, чтобы они никуда не распределились
	// 4. избавимся от аналитики НалоговыйУчет, которая более не нужна
	
	// Схематически можно изобразить так
	//
	//	                                                                            X
	//	                                                                           /
	//	                                                     [БудущихПериодов] (4) 
	//	                                                   / 
	//	                                                  /ПР
	//	                                                 /
	//	                            [Сверхнормативные] (2)   (5)   
	//	                          /                             \
	//	                         /k=норма                        \k=1
	//                          /                                 \
	// [Указан ВидРасходовНУ](1)                                    [Не указан ВидРасходовНУ, НалоговыйУчет, КорСчет]
	//                          \                      
	//                           \k=1-норма         
	//                            \                 
	//                                 [Нормативные]
	//                                              
	//                                                            
	// Легенда:
	//  []    - расходы, их критерии
	//  (1)   - номер правила, см. выше
	//  / и \ - стрелки слева направо, результат применения правила
	//  k     - коэффициент базы распределения
	//  ПР    - правило с действием "ВыделитьНалоговыйУчет"
	//  X     - правило с действием "Зафиксировать"
	
	// (1) Разделим нормируемые расходы на расходы в пределах норм (нормативные) и сверх норм (сверхнормативные)
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "НормированиеРасходовНалоговогоУчета";
	Правило.Наименование = НСтр("ru = 'Нормировать расходы в налоговом учете'");
	
	// ВидРасходовНУ определяет, относятся расходы к нормируемым или нет.
	// Кроме того, для разных видов расходов - разные нормы.
	Правило.ПоляИсточника.Вставить("ВидРасходовНУ", "ВидРасходовНУОтбор");
	
	Правило.Действие = "РаспределитьНаРасходы";
	Правило.ПоляПриемника.Вставить("НалоговыйУчет"); // В результате распределения расходы делятся на Нормативные и Сверхнормативные
	
	// Из-за особенностей хранения данных в регистре ДолиСписанияКосвенныхРасходов текст запроса конструируется кодом
	ПоляРегистраДолиРасходов = Новый Массив;
	ЗапросыДляОбъединения    = Новый Массив;
	Для Каждого ОписаниеПоля Из РегистрыСведений.ДолиСписанияКосвенныхРасходов.ИменаВидовНормируемыхРасходов() Цикл
		
		ПоляРегистраДолиРасходов.Добавить("ДолиРасходов." + ОписаниеПоля.Ключ);
		
		ТекстЗапроса = 
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ."+ ОписаниеПоля.Значение +") КАК ВидРасходовНУ,
		|	ДолиРасходов."+ ОписаниеПоля.Ключ +" КАК Доля
		|ИЗ
		|	ДанныеРегистраДолиРасходов КАК ДолиРасходов
		|
		|";
		
		ЗапросыДляОбъединения.Добавить(ТекстЗапроса);
		
	КонецЦикла;
	
	ТекстЗапроса = // Содержит заменяемые конструкции "// ПоляРегистраДолиРасходов" и "// ОБЪЕДИНИТЬ"
	"ВЫБРАТЬ
	|	// ПоляРегистраДолиРасходов
	|ПОМЕСТИТЬ ДанныеРегистраДолиРасходов
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиРасходов
	|ГДЕ
	|	ДолиРасходов.Организация = &ГоловнаяОрганизация
	|	И ДолиРасходов.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	0 КАК Доля
	|ПОМЕСТИТЬ НормыРасходов
	|ИЗ
	|	ДанныеРегистраДолиРасходов КАК ДолиРасходов
	|ГДЕ ЛОЖЬ
	|
	|// ОБЪЕДИНИТЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходовНУ
	|;
	|";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"// ПоляРегистраДолиРасходов", 
		СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(ПоляРегистраДолиРасходов, "," + Символы.ПС));
		
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"// ОБЪЕДИНИТЬ", 
		СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(ЗапросыДляОбъединения, Символы.ПС));
		
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	НормыРасходов.ВидРасходовНУ КАК ВидРасходовНУОтбор,
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.Нормативные) КАК НалоговыйУчет,
	|	НормыРасходов.Доля КАК База
	|ПОМЕСТИТЬ БазаРаспределения_НормированиеРасходовНалоговогоУчета
	|ИЗ
	|	НормыРасходов КАК НормыРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НормыРасходов.ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.Сверхнормативные),
	|	1 - НормыРасходов.Доля
	|ИЗ
	|	НормыРасходов КАК НормыРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходовНУОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеРегистраДолиРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НормыРасходов";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_НормированиеРасходовНалоговогоУчета");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
	// (2) Выделим сверхнормативные расходы - образуются постоянные разницы
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "ВыделитьСверхнормативныеРасходы";
	Правило.Наименование = НСтр("ru = 'Отразить постоянные разницы, вызванные сверхнормативными расходами в налоговом учете'");
	
	Правило.ОтборРасходов.Вставить("НалоговыйУчет", Перечисления.ОсобенностиНалоговогоУчетаРасходов.Сверхнормативные);
	Правило.Действие      = "ВыделитьНалоговыйУчет";
	Правило.ПоляПриемника.Вставить("НалоговыйУчет"); // Назовем их "БудущихПериодов", см. правило (4)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.БудущихПериодов) КАК НалоговыйУчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийРасчетСебестоимости.ПостоянныеРазницы) КАК ТипРазниц
	|ПОМЕСТИТЬ БазаРаспределения_ВыделитьСверхнормативныеРасходы";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_ВыделитьСверхнормативныеРасходы");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
		
	// (3) Оградим расходы будущих периодов от дальнейшего распределения
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "СверхнормативныеРасходыНалоговогоУчета";
	Правило.Наименование = НСтр("ru = 'Не распределять сверхнормативные расходы налогового учета'");
	Правило.ОтборРасходов.Вставить("НалоговыйУчет", Перечисления.ОсобенностиНалоговогоУчетаРасходов.БудущихПериодов);
	Правило.Действие = "Зафиксировать";
	
	// (4) Избавимся от аналитики, которая стала ненужной
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "СгруппироватьНормируемыеРасходы";
	Правило.Наименование = НСтр("ru = 'Сгруппировать расходы, избавившись от аналитики, которая больше не нужна'");
	
	ОтборНалоговыйУчет = Новый Массив;
	Правило.ОтборРасходов.Вставить("НалоговыйУчет", Перечисления.ОсобенностиНалоговогоУчетаРасходов.Сверхнормативные);
	
	Правило.Действие = "РаспределитьНаРасходы";
	
	// После выполнения правила значения не нужны
	Правило.ПоляПриемника.Вставить("НалоговыйУчет");
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ");
	Правило.ПоляПриемника.Вставить("КорСчет");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ПустаяСсылка) КАК НалоговыйУчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_СгруппироватьНормируемыеРасходы";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_СгруппироватьНормируемыеРасходы");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилоКосвенныеРасходыНалоговогоУчета(ПравилаРаспределения, Период, Организация)
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Если НЕ ПлательщикНалогаНаПрибыль Тогда
		// Правило применяем только на основной системе налогообложения
		Возврат;
	КонецЕсли;
	
	// Спишем косвенные расходы налогового учета на счет расходов текущего периода
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя                = "СписатьКосвенныеРасходы";
	Правило.Наименование       = НСтр("ru = 'Списать косвенные расходы налогового учета на результат текущего периода'");
	Правило.СодержаниеПроводки = НСтр("ru = 'Закрытие счетов косвенных расходов'");
	
	Правило.ОтборРасходов.Вставить("НалоговыйУчет", Перечисления.ОсобенностиНалоговогоУчетаРасходов.ТекущегоПериода);
	
	УстановитьПравилоСписатьРасходыТекущегоПериода(Правило);
	
КонецПроцедуры

Процедура ДобавитьПравилоУдалитьАналитикуНалоговогоУчета(ПравилаРаспределения, Период, Организация)
	
	// ВидРасходовНУ, НалоговыйУчет, КорСчет
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Если ПлательщикНалогаНаПрибыль Тогда
		// Правило применяем только для УСН
		Возврат;
	КонецЕсли;
	
	// Собираем все расходы по номенклатурной группе
	
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "УдалитьАналитикуНалоговогоУчета";
	Правило.Наименование = НСтр("ru = 'Удалить аналитику налогового учета по налогу на прибыль'");
	
	// Отбор источника
	Правило.ОтборРасходов = Новый Структура; // Все расходы
	
	// Поля источника
	Правило.ПоляИсточника = Новый Структура;
	
	// Поля приемника
	Правило.Действие = "РаспределитьНаРасходы"; // Поля приемника представлены в виде аналитики распределения
	Правило.ПоляПриемника = Новый Структура;
	Правило.ПоляПриемника.Вставить("НалоговыйУчет");
	Правило.ПоляПриемника.Вставить("КорСчет");
	Правило.ПоляПриемника.Вставить("ВидРасходовНУ");
	
	// База распределения - частный случай распределения - "Перенос"
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.ПустаяСсылка) КАК НалоговыйУчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка) КАК ВидРасходовНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет,
	|	1 КАК База
	|ПОМЕСТИТЬ БазаРаспределения_УдалитьАналитикуНалоговогоУчета";
	
	Правило.БазаРаспределения  = Новый Структура;
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_УдалитьАналитикуНалоговогоУчета");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьПравилоРасходыНеУчитываемыеВЦеляхНалогообложения(ПравилаРаспределения, Период, Организация)
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Если НЕ ПлательщикНалогаНаПрибыль Тогда
		// Правила применяем только на основной системе налогообложения
		Возврат;
	КонецЕсли;
	
	// Суммы не учитываемых расходов отложим отдельно и затем исключим из распределения.
	// В расходах, которые будут распределены появятся постоянные разницы.
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "РасходыНеУчитываемыеВЦеляхНалогообложенияВыделить";
	Правило.Наименование = НСтр("ru = 'Отразить постоянные разницы, вызванные тем, что часть расходов не учитывается в целях налогообложения'");
	
	Правило.ОтборРасходов = Новый Структура;
	Правило.ОтборРасходов.Вставить("ВидРасходовНУ",   Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения);
	Правило.ОтборРасходов.Вставить("ВидДеятельности", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	
	Правило.Действие = "ВыделитьНалоговыйУчет";
	
	Правило.ПоляПриемника.Вставить("НалоговыйУчет");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиНалоговогоУчетаРасходов.НеУчитываемыеВЦеляхНалогообложения) КАК НалоговыйУчет,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийРасчетСебестоимости.ПостоянныеРазницы) КАК ТипРазниц
	|ПОМЕСТИТЬ БазаРаспределения_НеУчитываемыеВЦеляхНалогообложения";
	
	Правило.БазаРаспределения.Вставить("Имя",          "БазаРаспределения_НеУчитываемыеВЦеляхНалогообложения");
	Правило.БазаРаспределения.Вставить("ТекстЗапроса", ТекстЗапроса);
	
	// Исключим суммы НУ из дальнейшего распределения
	Правило = ПравилаРаспределения.Добавить();
	Правило.Имя          = "РасходыНеУчитываемыеВЦеляхНалогообложенияЗафиксировать";
	Правило.Наименование = НСтр("ru = 'Исключить из распределения суммы расходов, не учитываемых в целях налогообложения'");
	Правило.ОтборРасходов.Вставить("НалоговыйУчет", Перечисления.ОсобенностиНалоговогоУчетаРасходов.НеУчитываемыеВЦеляхНалогообложения);
	Правило.Действие     = "Зафиксировать";
	
КонецПроцедуры

// База "Выручка"

Функция ТолькоУслугиЗаказчикам(Организация, Период)
	
	Возврат Не УчетнаяПолитика.ВыпускПродукции(Организация, Период)
		И Не УчетнаяПолитика.РассчитыватьСебестоимостьПолуфабрикатов(Организация, Период)
		И Не УчетнаяПолитика.РассчитыватьСебестоимостьУслугСобственнымПодразделениям(Организация, Период);
			
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ

Функция ТипИмени() Экспорт
	
	Возврат Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50));
	
КонецФункции

Функция УникальноеПредставлениеСсылки(Ссылка)
	Идентификатор = Строка(Ссылка.УникальныйИдентификатор());
	Идентификатор = СтрЗаменить(Идентификатор, "{", "");
	Идентификатор = СтрЗаменить(Идентификатор, "}", "");
	Идентификатор = СтрЗаменить(Идентификатор, "-", "");
	Возврат Идентификатор;
КонецФункции

Функция РазложитьПоСтепенямДвойки(Знач Число, Размер)
	
	Результат = Новый Массив(Размер);
	
	Для НомерПоля = 1 По Размер Цикл
		
		// Обходим с конца
		Индекс     = Размер - НомерПоля;
		Множитель  = Pow(2, Индекс);
		
		Результат[Индекс] = (Число >= Множитель);
		
		Число = Число % Множитель;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбеспечитьУникальныеИменаПравил(ПравилаРаспределения)
	
	ИменаПравил = ПравилаРаспределения.Скопировать(,"Имя");
	ИменаПравил.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ИменаПравил.ЗаполнитьЗначения(1, "Количество");
	ИменаПравил.Свернуть("Имя","Количество");
	
	Для Каждого ОписаниеИмениПравила Из ИменаПравил Цикл
		
		Если ОписаниеИмениПравила.Количество = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ПравилаСОдинаковымИменем = ПравилаРаспределения.НайтиСтроки(Новый Структура("Имя", ОписаниеИмениПравила.Имя));
		Префикс = 0;
		Для Каждого Правило Из ПравилаСОдинаковымИменем Цикл
			Префикс = Префикс + 1;
			Правило.Имя = Правило.Имя + Формат(Префикс, "ЧГ=0");
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИерархияСчетов()
	
	ИерархияСчетов = Новый ТаблицаЗначений;
	ИерархияСчетов.Колонки.Добавить("СчетГруппа",         Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ИерархияСчетов.Колонки.Добавить("Счет",               Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ИерархияСчетов.Колонки.Добавить("УровеньСчетаГруппы", Новый ОписаниеТипов("Число"));
	ИерархияСчетов.Колонки.Добавить("Уровень",            Новый ОписаниеТипов("Число"));
	
	// Счетов расходов немного, поэтому на каждый счет выполним свой запрос.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетаРасходов", УчетЗатрат.ПредопределенныеСчетаРасходов());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК СчетГруппа
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасходов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ИерархияСчета             = БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(Выборка.СчетГруппа);
		УровеньСчетаГруппы        = Выборка.СчетГруппа.Уровень();
		
		Для Каждого Счет Из ИерархияСчета Цикл
			
			НоваяСтрока = ИерархияСчетов.Добавить();
			НоваяСтрока.СчетГруппа         = Выборка.СчетГруппа;
			НоваяСтрока.Счет               = Счет;
			НоваяСтрока.УровеньСчетаГруппы = УровеньСчетаГруппы;
			НоваяСтрока.Уровень            = Счет.Уровень();
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ИерархияСчетов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СОЗДАНИЕ ВРЕМЕННЫХ ТАБЛИЦ С БАЗАМИ РАСПРЕДЕЛЕНИЯ И ИНФОРМАЦИЕЙ О ПРАВИЛАХ РАСПРЕДЕЛЕНИЯ

Процедура СоздатьБазыРаспределения(МенеджерВременныхТаблиц, ПравилаРаспределения, Период, Организация, Протокол = Неопределено) Экспорт
	
	// Соберем все пакеты временных таблиц всех правил в одну коллекцию
	ПакетыВременныхТаблиц = Новый Структура;
	Для Каждого ПравилоРаспределения Из ПравилаРаспределения Цикл
		БазаРаспределения = ПравилоРаспределения.БазаРаспределения;
		Если БазаРаспределения.Свойство("ПакетВременныхТаблиц") Тогда
			
			ОписаниеПакета = Новый Структура;
			ОписаниеПакета.Вставить("Создать",    БазаРаспределения.СоздатьВременныеТаблицы);
			ОписаниеПакета.Вставить("Уничтожить", БазаРаспределения.УничтожитьВременныеТаблицы);
			ОписаниеПакета.Вставить("Параметры",  БазаРаспределения.ПараметрыВременныхТаблиц);
			
			ПакетыВременныхТаблиц.Вставить(БазаРаспределения.ПакетВременныхТаблиц, ОписаниеПакета);
			
		КонецЕсли;
	КонецЦикла;
	
	// Общий запрос
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",        КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.УстановитьПараметр("ТолькоОсновнаяСистемаНалогообложения",
		УчетнаяПолитика.ТолькоОсновнаяСистемаНалогообложения(Организация, Период));
	Запрос.УстановитьПараметр("ТолькоОсобыйПорядокНалогообложения",
		УчетнаяПолитика.ТолькоОсобыйПорядокНалогообложения(Организация, Период));
	
	// Создадим временные таблицы, которые используются в запросах баз распределения
	ВыполнитьЗапросВременныхТаблиц("Создать", Запрос, ПакетыВременныхТаблиц);
	
	// Создадим таблицы с базами распределения
	СозданыТаблицы   = Новый Структура;
	
	// Разные методы используют разные наборы параметров, поэтому выполняем запрос в цикле
	Для Каждого ПравилоРаспределения Из ПравилаРаспределения Цикл
		
		БазаРаспределения = ПравилоРаспределения.БазаРаспределения;
		
		Если НЕ БазаРаспределения.Свойство("Имя") Тогда
			// Никакие данные (временная таблица) для этого правила не нужны
			Продолжить;
		КонецЕсли;
		
		Если СозданыТаблицы.Свойство(БазаРаспределения.Имя) Тогда
			// Уже создана
			Продолжить;
		КонецЕсли;
		
		Запрос.Текст = БазаРаспределения.ТекстЗапроса;
		
		Если БазаРаспределения.Свойство("ПараметрыЗапроса") Тогда
			Для Каждого Параметр Из БазаРаспределения.ПараметрыЗапроса Цикл
				Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
			КонецЦикла;
		КонецЕсли;
		
		// Выполним запрос - создадим новую временную таблицу
		СозданыТаблицы.Вставить(БазаРаспределения.Имя);
		Запрос.Выполнить();
		
	КонецЦикла;
	
	// Уничтожим временные таблицы, которые использовались в запросах баз распределения
	ВыполнитьЗапросВременныхТаблиц("Уничтожить", Запрос, ПакетыВременныхТаблиц);
	
	// Отсеем заведомо невыполнимые правила
	КоэффициентыБазРаспределения = Новый Структура;
	Если СозданыТаблицы.Количество() > 0 Тогда
		
		ИменаБазРаспределения = Новый Массив; // Коллекция имен, в которой гарантируется порядок элементов
		Для Каждого КлючИЗначение Из СозданыТаблицы Цикл
			ИменаБазРаспределения.Добавить(КлючИЗначение.Ключ);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ТекстЗапроса = "";
		// Интересует только наличие данных, но не сами данные
		ШаблонТекстаЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ИмяБазыРаспределения КАК ДанныеБазыРаспределения;";
		
		Для Каждого ИмяБазыРаспределения Из ИменаБазРаспределения Цикл
			ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ШаблонТекстаЗапроса, "ИмяБазыРаспределения", ИмяБазыРаспределения);
		КонецЦикла;
		
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Для Индекс = 0 По ИменаБазРаспределения.ВГраница() Цикл
			Если РезультатЗапроса[Индекс].Пустой() Тогда
				Продолжить;
			КонецЕсли;
			КоэффициентыБазРаспределения.Вставить(ИменаБазРаспределения[Индекс]);
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого ПравилоРаспределения Из ПравилаРаспределения Цикл
		
		БазаРаспределения = ПравилоРаспределения.БазаРаспределения;
		
		Если БазаРаспределения.Свойство("Имя") Тогда
			ПравилоРаспределения.ЕстьБазаРаспределения = КоэффициентыБазРаспределения.Свойство(БазаРаспределения.Имя);
		Иначе
			// Никакие данные (временная таблица) для этого правила не нужны
			ПравилоРаспределения.ЕстьБазаРаспределения = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьЗапросВременныхТаблиц(ТипЗапроса, Запрос, ПакетВременныхТаблиц)
	
	// У каждого пакета могут быть свои параметры,
	// поэтому для каждого пакета - свой запрос
	Для Каждого ОписаниеПакетаВременныхТаблиц Из ПакетВременныхТаблиц Цикл
		
		Для Каждого Параметр Из ОписаниеПакетаВременныхТаблиц.Значение.Параметры Цикл
			Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
		КонецЦикла;
		
		Запрос.Текст = ОписаниеПакетаВременныхТаблиц.Значение[ТипЗапроса];
		
		Запрос.Выполнить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьОсобенностиФормированияПроводок(МенеджерВременныхТаблиц, Правила) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Правила", Правила);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Правила.Имя КАК Правило,
	|	Правила.СодержаниеПроводки КАК СодержаниеПроводки
	|ПОМЕСТИТЬ СодержаниеПроводокРаспределенияРасходов
	|ИЗ
	|	&Правила КАК Правила
	|ГДЕ
	|	Правила.СодержаниеПроводки <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Правило
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Правила.Имя КАК Правило,
	|	ИСТИНА КАК Выпуск
	|ПОМЕСТИТЬ ПравилаРаспределенияРасходовВыпуск
	|ИЗ
	|	&Правила КАК Правила
	|ГДЕ
	|	Правила.Выпуск
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Правило";
	
	Запрос.Выполнить();
	
КонецПроцедуры
