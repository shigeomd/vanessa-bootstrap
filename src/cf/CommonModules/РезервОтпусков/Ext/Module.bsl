#Область ПрограммныйИнтерфейс

// Возвращает структуру настроек резервов отпусков
//
// Параметры:
//   Организация - Спр.Организации.СправочникСсылка - Организация.
//   Период - Дата - Период дат.
//
// Возвращаемое значение:
//  Структура - описанная в методе
//
Функция НастройкиРезервовОтпусков(Организация, Период) Экспорт
	
	Настройки = Новый Структура;
	
	Настройки.Вставить("ФормироватьРезервОтпусковБУ", Ложь);
	Настройки.Вставить("ФормироватьРезервОтпусковНУ", Ложь);
	Настройки.Вставить("МетодНачисленияРезерваОтпусков", Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод);
	Настройки.Вставить("НормативОтчисленийВРезервОтпусков", 0);
	Настройки.Вставить("ПредельнаяВеличинаОтчисленийВРезервОтпусков", 0);
	
	Если Не ЗначениеЗаполнено(Период) Или Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Настройки;
	КонецЕсли;
	
	НастройкиРасчетаРезервовОтпусков = РегистрыСведений.НастройкиРасчетаРезервовОтпусков.СрезПоследних(Период, Новый Структура("Организация", Организация));
	Если НастройкиРасчетаРезервовОтпусков.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Настройки, НастройкиРасчетаРезервовОтпусков[0]);
	КонецЕсли;
	
	РезервОтпусковПереопределяемый.ЗаполнитьНастройкиРезервовОтпусков(Настройки, Организация, Период);
	
	Возврат Настройки;
	
КонецФункции

// Возвращает ссылку на заполненный Док.НачислениеОценочныхОбязательствПоОтпускам.
// Если для заданного месяца и организации существует несколько 
// документов, возвращается хронологически первый.
// Если необходимого документа нет, он создается и записывается.
// В любом случае выполняется заполнение документа.
//
// Параметры:
//	ПериодРегистрации - Дата - Период регистрации
//	Организация - СправочникСсылка.Организации - Ссылка на организацию
//
// Возвращаемое значение - ссылка на документ.
//
Функция ДокументНачислениеОценочныхОбязательствПоОтпускам(ПериодРегистрации, Организация) Экспорт
	
	ДокументСсылка = Неопределено;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НачислениеОценочныхОбязательствПоОтпускам.Ссылка КАК Документ
	|ИЗ
	|	Документ.НачислениеОценочныхОбязательствПоОтпускам КАК НачислениеОценочныхОбязательствПоОтпускам
	|ГДЕ
	|	НачислениеОценочныхОбязательствПоОтпускам.ПериодРегистрации = &ПериодРегистрации
	|	И НачислениеОценочныхОбязательствПоОтпускам.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачислениеОценочныхОбязательствПоОтпускам.Дата,
	|	НачислениеОценочныхОбязательствПоОтпускам.Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ДокументОбъект = Выборка.Документ.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.НачислениеОценочныхОбязательствПоОтпускам.СоздатьДокумент();
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		ДокументОбъект.ПериодРегистрации = ПериодРегистрации;
		ДокументОбъект.Организация = Организация;
	КонецЕсли;

	ЗаполнитьДокументНачислениеОценочныхОбязательствПоОтпускам(ДокументОбъект);
	
	ДокументОбъект.Записать();
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	
	Возврат ДокументСсылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// См. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения.
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.НачислениеОценочныхОбязательствПоОтпускам",		"ПериодРегистрации",	"БухгалтерскийУчетЗарплаты", "Организация");
	
КонецПроцедуры

// Процедура обеспечивает сбор сведений о хранении данных, 
// относящихся к персональным
//
// Параметры:
//		ТаблицаСведений - таблица значений с полями:
//			Объект 			- строка, содержащая полное имя объекта метаданных,
//			ПоляРегистрации - строка, в которой перечислены имена полей регистрации, 
//								отдельные поля регистрации отделяются запятой,
//								альтернативные - символом "|",
//			ПоляДоступа		- строка, в которой перечислены через запятую имена полей доступа.
//			ОбластьДанных	- строка с идентификатором области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	// Документ.НачислениеОценочныхОбязательствПоОтпускам.
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.НачислениеОценочныхОбязательствПоОтпускам";
	НовыеСведения.ПоляРегистрации	= "РасчетРезерваОтпусков.Сотрудник";
	НовыеСведения.ПоляДоступа		= "РасчетРезерваОтпусков.ОстатокОтпуска";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	// Документ.НачислениеОценочныхОбязательствПоОтпускам.
	// Табличная часть РасчетРезерваОтпусков.
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.НачислениеОценочныхОбязательствПоОтпускам";
	НовыеСведения.ПоляРегистрации	= "РасчетРезерваОтпусков.Сотрудник";
	НовыеСведения.ПоляДоступа		= "РасчетРезерваОтпусков.ФОТ,РасчетРезерваОтпусков.СтраховыеВзносы,
	|РасчетРезерваОтпусков.СуммаРезерва,РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносов,РасчетРезерваОтпусков.СреднийЗаработок,
	|РасчетРезерваОтпусков.СуммаРезерваНУ,РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНУ,РасчетРезерваОтпусков.СуммаРезерваНакоплено,
	|РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНакоплено,РасчетРезерваОтпусков.СуммаРезерваНакопленоНУ,
	|РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНакопленоНУ,РасчетРезерваОтпусков.СуммаРезерваИсчислено,
	|РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовИсчислено,РасчетРезерваОтпусков.СуммаРезерваИсчисленоНУ,
	|РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовИсчисленоНУ,РасчетРезерваОтпусков.ФССНесчастныеСлучаи,
	|РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаи,РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиНУ,
	|РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиНакоплено,РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
	|РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиИсчислено,РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ";
	НовыеСведения.ПоляДоступа = СтрЗаменить(НовыеСведения.ПоляДоступа, Символы.ПС, "");
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	// Документ.НачислениеОценочныхОбязательствПоОтпускам.
	// Табличная часть ОценочныеОбязательстваПоВознаграждениямРаботникам.
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.НачислениеОценочныхОбязательствПоОтпускам";
	НовыеСведения.ПоляРегистрации	= "ОценочныеОбязательстваПоВознаграждениямРаботникам.Сотрудник";
	НовыеСведения.ПоляДоступа		= "ОценочныеОбязательстваПоВознаграждениямРаботникам.СуммаРезерва,
	|ОценочныеОбязательстваПоВознаграждениямРаботникам.СуммаРезерваСтраховыхВзносов,
	|ОценочныеОбязательстваПоВознаграждениямРаботникам.СуммаРезерваНУ,ОценочныеОбязательстваПоВознаграждениямРаботникам.СуммаРезерваСтраховыхВзносовНУ,
	|ОценочныеОбязательстваПоВознаграждениямРаботникам.СуммаРезерваФССНесчастныеСлучаи,
	|ОценочныеОбязательстваПоВознаграждениямРаботникам.СуммаРезерваФССНесчастныеСлучаиНУ";
	НовыеСведения.ПоляДоступа = СтрЗаменить(НовыеСведения.ПоляДоступа, Символы.ПС, "");
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	// РегистрСведений.РасчетРезерваОтпусков.
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.РасчетРезерваОтпусков";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо,Сотрудник";
	НовыеСведения.ПоляДоступа		= "ОстатокОтпуска";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	// РегистрСведений.РасчетРезерваОтпусков.
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.РасчетРезерваОтпусков";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо,Сотрудник";
	НовыеСведения.ПоляДоступа		= "ФОТ,СтраховыеВзносы,СуммаРезерва,СуммаРезерваСтраховыхВзносов,СреднийЗаработок,
	|СуммаРезерваНУ,СуммаРезерваСтраховыхВзносовНУ,СуммаРезерваНакоплено,СуммаРезерваСтраховыхВзносовНакоплено,СуммаРезерваНакопленоНУ,
	|СуммаРезерваСтраховыхВзносовНакопленоНУ,СуммаРезерваИсчислено,СуммаРезерваСтраховыхВзносовИсчислено,СуммаРезерваИсчисленоНУ,
	|СуммаРезерваСтраховыхВзносовИсчисленоНУ,ФССНесчастныеСлучаи,СуммаРезерваФССНесчастныеСлучаи,СуммаРезерваФССНесчастныеСлучаиНУ,
	|СуммаРезерваФССНесчастныеСлучаиНакоплено,СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,СуммаРезерваФССНесчастныеСлучаиИсчислено,
	|СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ";
	НовыеСведения.ПоляДоступа = СтрЗаменить(НовыеСведения.ПоляДоступа, Символы.ПС, "");
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	// РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо,Сотрудник";
	НовыеСведения.ПоляДоступа		= "СуммаРезерваВыбыло,СуммаРезерваСтраховыхВзносовВыбыло,СуммаРезерваВыбылоНУ,
	|СуммаРезерваСтраховыхВзносовВыбылоНУ,СуммаРезерваФССНесчастныеСлучаиВыбыло,СуммаРезерваФССНесчастныеСлучаиВыбылоНУ";
	НовыеСведения.ПоляДоступа = СтрЗаменить(НовыеСведения.ПоляДоступа, Символы.ПС, "");
	НовыеСведения.ОбластьДанных		= "Доходы";

КонецПроцедуры

// Списывает расходы по оплате отпуска за счет оценочных обязательств
//
// Параметры:
//			Организация - СправочникСсылка.Организации - Организация.
//			ПериодРегистрации - Дата - ПериодРегистрации.
//			ДокументСсылка - ДокументСсылка - ДокументСсылка.
//			ТаблицаНачисленнаяЗарплатаИВзносы - ТаблицаЗначений - из ОтражениеЗарплатыВБухучете.ДанныеДляОтраженияЗарплатыВБухучете.
//			НачисленныеОтпуска - ТаблицаЗначений - из ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска().
//			КолонкиСуммирования - Массив - Имена колонок для суммирования значений.
//
Процедура СписатьРасходыПоОплатеОтпускаЗаСчетОценочныхОбязательств(Организация, ПериодРегистрации, ДокументСсылка, ТаблицаНачисленнаяЗарплатаИВзносы, НачисленныеОтпуска, КолонкиСуммирования) Экспорт

	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
	Если Не НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ВидОперации", Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск);
	ТаблицаОтпусков = ТаблицаНачисленнаяЗарплатаИВзносы.Скопировать(Отбор);
	
	Если ТаблицаОтпусков.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНачисленнаяЗарплатаИВзносы.Индексы.Добавить("Сотрудник,ВидОперации");
	
	НоваяТаблицаОтпусков = ТаблицаОтпусков.СкопироватьКолонки();
	
	КолонкиСуммированияСтрока = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(КолонкиСуммирования);
	ТаблицаОтпусков.Свернуть("Сотрудник", КолонкиСуммированияСтрока);
	Сотрудники = ТаблицаОтпусков.ВыгрузитьКолонку("Сотрудник");
	
	НакопленныеОценочныеОбязательства = НакопленныеОценочныеОбязательства(Организация, ПериодРегистрации, ДокументСсылка, Сотрудники);
	
	КолонкиВзносов = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(КолонкиСуммирования);
	ИндексЭлемента = КолонкиВзносов.Найти("Сумма");
	КолонкиВзносов.Удалить(ИндексЭлемента);
	
	КолонкиГруппировок = Новый Массив;
	Для каждого КолонкаТЗ Из НоваяТаблицаОтпусков.Колонки Цикл
		Если КолонкиСуммирования.Найти(КолонкаТЗ.Имя) = Неопределено Тогда
			КолонкиГруппировок.Добавить(КолонкаТЗ.Имя);
		КонецЕсли;
	КонецЦикла;
	КолонкиГруппировокСтрока = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(КолонкиГруппировок);
	
	Отбор = Новый Структура("Сотрудник");
	ОтборОсновнойТаблицы = Новый Структура("Сотрудник,ВидОперации", Неопределено, Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск);
	
	Для каждого СтрокаТЗ Из ТаблицаОтпусков Цикл
		
		СуммаВзносовПоСтроке = 0;
		Для каждого КолонкаТЗ Из ТаблицаОтпусков.Колонки Цикл
			Если КолонкиВзносов.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
				СуммаВзносовПоСтроке = СуммаВзносовПоСтроке + СтрокаТЗ[КолонкаТЗ.Имя];
			КонецЕсли;
		КонецЦикла;
		
		Отбор.Сотрудник = СтрокаТЗ.Сотрудник;
		ОценочныеОбязательстваСотрудника = НакопленныеОценочныеОбязательства.НайтиСтроки(Отбор);
		
		ОтборОсновнойТаблицы.Сотрудник = СтрокаТЗ.Сотрудник;
		СтрокиОтпуска = ТаблицаНачисленнаяЗарплатаИВзносы.НайтиСтроки(ОтборОсновнойТаблицы);
		
		Если ОценочныеОбязательстваСотрудника.Количество() = 0 Тогда
			
			Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
				ЗаполнитьЗначенияСвойств(НоваяТаблицаОтпусков.Добавить(), СтрокаОтпуска);
			КонецЦикла;
			
		Иначе
			
			Сумма = Макс(ОценочныеОбязательстваСотрудника[0].Сумма, 0);
			СтраховыеВзносы = Макс(ОценочныеОбязательстваСотрудника[0].СтраховыеВзносы, 0);
			СуммаНУ = Макс(ОценочныеОбязательстваСотрудника[0].СуммаНУ, 0);
			СтраховыеВзносыНУ = Макс(ОценочныеОбязательстваСотрудника[0].СтраховыеВзносыНУ, 0);
			
			Если Сумма = 0 и СуммаНУ = 0 И СтраховыеВзносы = 0 И СтраховыеВзносыНУ = 0 Тогда
				
				Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
					ЗаполнитьЗначенияСвойств(НоваяТаблицаОтпусков.Добавить(), СтрокаОтпуска);
				КонецЦикла;
				
			ИначеЕсли Сумма >= СтрокаТЗ.Сумма И СтраховыеВзносы >= СуммаВзносовПоСтроке И СуммаНУ >= СтрокаТЗ.Сумма И СтраховыеВзносыНУ >= СуммаВзносовПоСтроке Тогда
				
				Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
					НоваяСтрока = НоваяТаблицаОтпусков.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска);
					НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы;
				КонецЦикла;
				
			Иначе
				
				КоэффициентСуммыБу   = ?(СтрокаТЗ.Сумма = 0,0, Мин(Сумма/СтрокаТЗ.Сумма,1));
				КоэффициентВзносовБу = ?(СуммаВзносовПоСтроке = 0,0, Мин(СтраховыеВзносы/СуммаВзносовПоСтроке,1));
				КоэффициентСуммыНУ   = ?(НастройкиРезервовОтпусков.ФормироватьРезервОтпусковНУ,?(СтрокаТЗ.Сумма = 0,0, Мин(СуммаНУ/СтрокаТЗ.Сумма,1)),0);
				КоэффициентВзносовНУ = ?(НастройкиРезервовОтпусков.ФормироватьРезервОтпусковНУ,?(СуммаВзносовПоСтроке = 0,0, Мин(СтраховыеВзносыНУ/СуммаВзносовПоСтроке,1)),0);
				
				ТаблицаОтпусковВременная = НоваяТаблицаОтпусков.СкопироватьКолонки();
				
				Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
					
					Для каждого КолонкаТЗ Из ТаблицаОтпусков.Колонки Цикл
						
						Если КолонкиСуммирования.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
							
							Если КолонкаТЗ.Имя = "Сумма" Тогда
								КоэффициентБУ = КоэффициентСуммыБУ;
								КоэффициентНУ = КоэффициентСуммыНУ;
							Иначе
								КоэффициентБУ = КоэффициентВзносовБу;
								КоэффициентНУ = КоэффициентВзносовНу;
							КонецЕсли;
							
							СуммаБУ_ОО = ОКР(СтрокаОтпуска[КолонкаТЗ.Имя] * КоэффициентБУ, 2);
							СуммаБУ    = СтрокаОтпуска[КолонкаТЗ.Имя] - СуммаБУ_ОО;
							
							СуммаНУ_ОО = ОКР(СтрокаОтпуска[КолонкаТЗ.Имя] * КоэффициентНУ, 2);
							СуммаНУ    = СтрокаОтпуска[КолонкаТЗ.Имя] - СуммаНУ_ОО;
							
							Разница_ОО = СуммаБУ_ОО - СуммаНУ_ОО;
							Разница = СуммаБУ - СуммаНУ;
							
							Если Разница_ОО = 0 Тогда
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = СуммаБУ_ОО;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы;
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = СуммаБУ;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск;
								
							ИначеЕсли Разница_ОО > 0 Тогда
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = СуммаНУ_ОО;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы;
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = Разница_ОО;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства;
								
							ИначеЕсли Разница_ОО < 0 Тогда
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = СуммаБУ_ОО;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы;
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = -1*Разница_ОО;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы;
								
							КонецЕсли;
							
							Если Разница > 0 Тогда
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = СуммаНу;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск;
								
							ИначеЕсли Разница < 0 Тогда
								
								НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
								НоваяСтрока[КолонкаТЗ.Имя] = СуммаБу;
								НоваяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск;
								
							КонецЕсли;	
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
				
				ТаблицаОтпусковВременная.Свернуть(КолонкиГруппировокСтрока,КолонкиСуммированияСтрока);
				
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаОтпусковВременная,НоваяТаблицаОтпусков);
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачисленнаяЗарплатаИВзносы", ТаблицаНачисленнаяЗарплатаИВзносы);
	Запрос.УстановитьПараметр("НоваяТаблицаОтпусков", НоваяТаблицаОтпусков);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ПоляВзносов,
	|	НачисленияИВзносы.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|	НачисленияИВзносы.Сумма
	|ПОМЕСТИТЬ ВТНачисленнаяЗарплатаИВзносы
	|ИЗ
	|	&НачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ПоляВзносов,
	|	НачисленияИВзносы.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|	НачисленияИВзносы.Сумма
	|ПОМЕСТИТЬ ВТТаблицаОтпусков
	|ИЗ
	|	&НоваяТаблицаОтпусков КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,
	|	СУММА(НачисленияИВзносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(НачисленияИВзносы.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияИВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|		НачисленияИВзносы.Подразделение КАК Подразделение,
	|		НачисленияИВзносы.ВидОперации КАК ВидОперации,
	|		НачисленияИВзносы.Начисление КАК Начисление,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|		НачисленияИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|		НачисленияИВзносы.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		НачисленияИВзносы.ПоляВзносов КАК ПоляВзносов,
	|		НачисленияИВзносы.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|		НачисленияИВзносы.Сумма КАК Сумма
	|	ИЗ
	|		ВТНачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|	ГДЕ
	|		НачисленияИВзносы.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленияИВзносы.ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник,
	|		НачисленияИВзносы.Подразделение,
	|		НачисленияИВзносы.ВидОперации,
	|		НачисленияИВзносы.Начисление,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов,
	|		НачисленияИВзносы.ОблагаетсяЕНВД,
	|		НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|		НачисленияИВзносы.ПериодПринятияРасходов,
	|		НачисленияИВзносы.ПоляВзносов,
	|		НачисленияИВзносы.ФССНесчастныеСлучаи,
	|		НачисленияИВзносы.Сумма
	|	ИЗ
	|		ВТТаблицаОтпусков КАК НачисленияИВзносы) КАК НачисленияИВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО НачисленияИВзносы.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачисленияИВзносы.Сумма) <> 0
	|		ИЛИ СУММА(НачисленияИВзносы.ПоляВзносов) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ТаблицаОтпусков.Сотрудник,
	|	ТаблицаОтпусков.ВидОперации,
	|	СУММА(ТаблицаОтпусков.Сумма) КАК Сумма,
	|	СУММА(ТаблицаОтпусков.ПоляВзносов) КАК СтраховыеВзносы,
	|	СУММА(ТаблицаОтпусков.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи
	|ИЗ
	|	ВТТаблицаОтпусков КАК ТаблицаОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ТаблицаОтпусков.Сотрудник = Сотрудники.Ссылка
	|ГДЕ
	|	ТаблицаОтпусков.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОтпусков.Сотрудник,
	|	Сотрудники.Наименование,
	|	ТаблицаОтпусков.ВидОперации
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаОтпусков.Сумма) <> 0
	|		ИЛИ СУММА(ТаблицаОтпусков.ФССНесчастныеСлучаи) <> 0
	|		ИЛИ СУММА(ТаблицаОтпусков.ПоляВзносов) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудники.Наименование";
	
	ТекстПолейВзносов = "";
	ТекстПолейСуммВзносов = "";
	ТекстПолейСуммВзносовУсловие = "";
	ТекстПолейСуммВзносовОтпуск = "";
	ТекстПолейСуммВзносовОтпускУсловие = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Если ИмяПоля = "ФССНесчастныеСлучаи" Тогда
			Продолжить;
		КонецЕсли;
		ТекстПолейВзносов = ТекстПолейВзносов + "НачисленияИВзносы." + ИмяПоля + " КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПолейСуммВзносов = ТекстПолейСуммВзносов + "СУММА(НачисленияИВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПолейСуммВзносовУсловие = ТекстПолейСуммВзносовУсловие + "ИЛИ СУММА(НачисленияИВзносы." + ИмяПоля + ") <> 0" + Символы.ПС;
		ТекстПолейСуммВзносовОтпускУсловие = ТекстПолейСуммВзносовОтпускУсловие + "ИЛИ СУММА(ТаблицаОтпусков." + ИмяПоля + ") <> 0" + Символы.ПС;
		ТекстПолейСуммВзносовОтпуск = ТекстПолейСуммВзносовОтпуск + ?(ПустаяСтрока(ТекстПолейСуммВзносовОтпуск),"","+") + " ТаблицаОтпусков." + ИмяПоля;
	КонецЦикла;
	ТекстПолейСуммВзносовОтпуск = "СУММА("+ТекстПолейСуммВзносовОтпуск+") КАК СтраховыеВзносы,";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НачисленияИВзносы.ПоляВзносов,", ТекстПолейВзносов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НачисленияИВзносы.ПоляВзносов КАК ПоляВзносов,", ТекстПолейВзносов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИЛИ СУММА(НачисленияИВзносы.ПоляВзносов) <> 0", ТекстПолейСуммВзносовУсловие);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИЛИ СУММА(ТаблицаОтпусков.ПоляВзносов) <> 0", ТекстПолейСуммВзносовОтпускУсловие);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(ТаблицаОтпусков.ПоляВзносов) КАК СтраховыеВзносы,", ТекстПолейСуммВзносовОтпуск);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,", ТекстПолейСуммВзносов);
	
	Результат = Запрос.ВыполнитьПакет();
		
	ТаблицаНачисленнаяЗарплатаИВзносы.Очистить();
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНачисленнаяЗарплатаИВзносы.Добавить(),Выборка);
	КонецЦикла;
	
	Выборка = Результат[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(НачисленныеОтпуска.Добавить(),Выборка);
	КонецЦикла;

КонецПроцедуры

// Формирует движения выплаты отпусков за счет резерва
//
// Параметры:
//			Движения - КоллекцияДвижений - Движения.
//			Отказ - Булево - Отказ.
//			Организация - СправочникСсылка.Организации - Организация.
//			ПериодРегистрации - Дата - ПериодРегистрации.
//			ВыплатаОтпусковЗаСчетРезерва - ТаблицаЗначений - из ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска.
//
Процедура СформироватьДвиженияВыплатаОтпусковЗаСчетРезерва(Движения, Отказ, Организация, ПериодРегистрации, ВыплатаОтпусковЗаСчетРезерва) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.УстановитьПараметр("ВыплатаОтпусковЗаСчетРезерва", ВыплатаОтпусковЗаСчетРезерва);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыплатаОтпусковЗаСчетРезерва.Сотрудник,
	|	ВыплатаОтпусковЗаСчетРезерва.ВидОперации,
	|	ВыплатаОтпусковЗаСчетРезерва.Сумма,
	|	ВыплатаОтпусковЗаСчетРезерва.СтраховыеВзносы,
	|	ВыплатаОтпусковЗаСчетРезерва.ФССНесчастныеСлучаи
	|ПОМЕСТИТЬ ВТВыплаты
	|ИЗ
	|	&ВыплатаОтпусковЗаСчетРезерва КАК ВыплатаОтпусковЗаСчетРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	Выплаты.Сотрудник,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства))
	|			ТОГДА Выплаты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваВыбыло,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы))
	|			ТОГДА Выплаты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваВыбылоНУ,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства))
	|			ТОГДА Выплаты.СтраховыеВзносы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовВыбыло,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы))
	|			ТОГДА Выплаты.СтраховыеВзносы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовВыбылоНУ,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства))
	|			ТОГДА Выплаты.ФССНесчастныеСлучаи
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиВыбыло,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы))
	|			ТОГДА Выплаты.ФССНесчастныеСлучаи
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиВыбылоНУ
	|ИЗ
	|	ВТВыплаты КАК Выплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО Выплаты.Сотрудник = Сотрудники.Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
		Движения.ВыплатаОтпусковЗаСчетРезерва.Загрузить(Результат);
		Движения.ВыплатаОтпусковЗаСчетРезерва.Записывать = Истина;
	КонецЕсли;

КонецПроцедуры

// Формирует движения списания резерва отпусков в Рнк.ВыплатаОтпусковЗаСчетРезерва
//
// Параметры:
//			Движения - КоллекцияДвижений - Движения.
//			Отказ - Булево - Отказ.
//			Организация - СправочникСсылка.Организации - Организация.
//			ПериодРегистрации - Дата - ПериодРегистрации.
//			ТаблицаОбязательств - ТаблицаЗначений - Соответствует ресурсам Рнк.ВыплатаОтпусковЗаСчетРезерва.
//
Процедура СформироватьДвиженияСписаниеРезерваОтпусков(Движения, Отказ, Организация, ПериодРегистрации, ТаблицаОбязательств) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбязательств", ТаблицаОбязательств);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбязательств.СуммаРезерваВыбыло КАК СуммаРезерва,
	|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовВыбыло КАК СуммаРезерваСтраховыхВзносов,
	|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиВыбыло КАК СуммаРезерваФССНесчастныеСлучаи,
	|	ТаблицаОбязательств.СуммаРезерваВыбылоНУ КАК СуммаРезерваНУ,
	|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовВыбылоНУ КАК СуммаРезерваСтраховыхВзносовНУ,
	|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиВыбылоНУ КАК СуммаРезерваФССНесчастныеСлучаиНУ,
	|	&Организация КАК Организация,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
	|ИЗ
	|	&ТаблицаОбязательств КАК ТаблицаОбязательств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация КАК Организация,
	|	ВТ_ТаблицаОбязательств.Период КАК Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерва) КАК Сумма,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваНУ) КАК СуммаНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВознаграждениям) КАК ТипОценочногоОбязательства,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерва <> 0
	|			ИЛИ ВТ_ТаблицаОбязательств.СуммаРезерваНУ <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов),
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоСтраховымВзносам),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов <> 0
	|			ИЛИ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи),
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВзносамФССНСиПЗ),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи <> 0
	|			ИЛИ ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	ТипОценочногоОбязательства";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
		Движения.ОценочныеОбязательства.Загрузить(Результат);
		Движения.ОценочныеОбязательства.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область НачислениеРезерваОтпусков

Функция МетодНачисленияРезерваОтпусков(Организация, Период) Экспорт
	
	Возврат УточнитьМетодНачисленияРезерваОтпусков(Организация, Период);

КонецФункции

Функция ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Регистратор = Неопределено) Экспорт
	
	ТаблицыРасчетаОбязательств = ОтражениеЗарплатыВБухучете.ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОстаткиОтпусков",                 ТаблицыРасчетаОбязательств.ОстаткиОтпусков);
	Запрос.УстановитьПараметр("ФондОплатыТрудаИСтраховыеВзносы", ТаблицыРасчетаОбязательств.ФондОплатыТрудаИСтраховыеВзносы);
	Запрос.УстановитьПараметр("Регистратор",                     Регистратор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиОтпусков.Организация,
	|	ОстаткиОтпусков.Сотрудник,
	|	ОстаткиОтпусков.ОстатокОтпусков,
	|	ОстаткиОтпусков.СреднийЗаработок
	|ПОМЕСТИТЬ ВТ_ОстаткиОтпусков
	|ИЗ
	|	&ОстаткиОтпусков КАК ОстаткиОтпусков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФондОплатыТрудаИСтраховыеВзносы.Организация,
	|	ФондОплатыТрудаИСтраховыеВзносы.Сотрудник,
	|	ФондОплатыТрудаИСтраховыеВзносы.Подразделение,
	|	ФондОплатыТрудаИСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	ФондОплатыТрудаИСтраховыеВзносы.СтатьяФинансирования,
	|	ФондОплатыТрудаИСтраховыеВзносы.ОблагаетсяЕНВД,
	|	ФондОплатыТрудаИСтраховыеВзносы.ФондОплатыТруда,
	|	ФондОплатыТрудаИСтраховыеВзносы.СтраховыеВзносы,
	|	ФондОплатыТрудаИСтраховыеВзносы.ФССНесчастныеСлучаи
	|ПОМЕСТИТЬ ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|ИЗ
	|	&ФондОплатыТрудаИСтраховыеВзносы КАК ФондОплатыТрудаИСтраховыеВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Регистратор КАК Регистратор,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Организация КАК Организация,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.ФондОплатыТруда КАК ФОТ,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СтраховыеВзносы КАК СтраховыеВзносы,
	|	ВТ_ОстаткиОтпусков.ОстатокОтпусков КАК ОстатокОтпуска,
	|	ВТ_ОстаткиОтпусков.СреднийЗаработок КАК СреднийЗаработок,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Подразделение КАК Подразделение,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи
	|ИЗ
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиОтпусков КАК ВТ_ОстаткиОтпусков
	|		ПО ВТ_ОстаткиОтпусков.Организация = ВТ_ФондОплатыТрудаИСтраховыеВзносы.Организация
	|			И ВТ_ОстаткиОтпусков.Сотрудник = ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура СобратьДанныеДляНачислениеРезерваОтпусков(Регистратор, Организация, ПериодРегистрации, ОценочныеОбязательстваПоВознаграждениямРаботникам, РасчетРезерваОтпусков, ОценочныеОбязательства) Экспорт
	
	Реквизиты = Новый Структура("Организация, Период", Организация, ПериодРегистрации);
	
	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, НачалоМесяца(ПериодРегистрации));
	ФормироватьРезервОтпусковБУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ;
	ФормироватьРезервОтпусковНУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковНУ;
		
	Если НЕ ФормироватьРезервОтпусковБУ И НЕ ФормироватьРезервОтпусковНУ Тогда
		Возврат;
	КонецЕсли;
	
	МетодНачисленияРезерваОтпусков              = НастройкиРезервовОтпусков.МетодНачисленияРезерваОтпусков;
	НормативОтчисленийВРезервОтпусков           = НастройкиРезервовОтпусков.НормативОтчисленийВРезервОтпусков;
	ПредельнаяВеличинаОтчисленийВРезервОтпусков = НастройкиРезервовОтпусков.ПредельнаяВеличинаОтчисленийВРезервОтпусков;
	
	ПараметрыРасчетаОбязательств = ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Регистратор);
	
	Организации = ВсяОрганизация(Организация);
	ДоляРезервовОтпусков = ДоляСписанияКосвенныхРасходов(ПериодРегистрации, Организация, Регистратор);
	ПредельнаяВеличинаРезерваТекущегоМесяца = Окр(ДоляРезервовОтпусков*ПараметрыРасчетаОбязательств.Итог("ФОТ"),2);

	СтруктураПараметровРасчета = Новый Структура("Организация,ПериодРегистрации,ФормироватьРезервОтпусковБУ,ФормироватьРезервОтпусковНУ,
								|МетодНачисленияРезерваОтпусков,НормативОтчисленийВРезервОтпусков,
								|ПредельнаяВеличинаОтчисленийВРезервОтпусков,ПредельнаяВеличинаРезерваТекущегоМесяца",
								Организация,ПериодРегистрации,ФормироватьРезервОтпусковБУ,ФормироватьРезервОтпусковНУ,
								МетодНачисленияРезерваОтпусков,НормативОтчисленийВРезервОтпусков,
								ПредельнаяВеличинаОтчисленийВРезервОтпусков,ПредельнаяВеличинаРезерваТекущегоМесяца);
	
	ПараметрыРасчетаОбязательств.Колонки.Добавить("ТекущаяСтавкаСтраховыхВзносов",              Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("ТекущаяСтавкаФССНесчастныеСлучаи",           Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерва",                               Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносов",               Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваФССНесчастныеСлучаи",            Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваНУ",                             Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовНУ",             Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваФССНесчастныеСлучаиНУ",          Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваНакоплено",                      Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовНакоплено",      Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваФССНесчастныеСлучаиНакоплено",   Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваНакопленоНУ",                    Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовНакопленоНУ",    Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваФССНесчастныеСлучаиНакопленоНУ", Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваИсчислено",                      Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовИсчислено",      Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваФССНесчастныеСлучаиИсчислено",   Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваИсчисленоНУ",                    Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовИсчисленоНУ",    Новый ОписаниеТипов("Число"));
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ", Новый ОписаниеТипов("Число"));
	
	РассчитатьСуммыРезервовОтпусков(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
	ВычислитьСуммыРезервовТекущегоМесяца(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, Регистратор);
	
	СформироватьТаблицуНачислениеРезерваОтпусков(ПараметрыРасчетаОбязательств, Реквизиты, ОценочныеОбязательстваПоВознаграждениямРаботникам, СтруктураПараметровРасчета);
	СформироватьТаблицуРасчетаРезерваОтпусков(ПараметрыРасчетаОбязательств, Реквизиты, РасчетРезерваОтпусков);
	СформироватьТаблицуОценочныеОбязательства(ПараметрыРасчетаОбязательств, Реквизиты, ОценочныеОбязательства);
	
КонецПроцедуры

Процедура СформироватьТаблицуНачислениеРезерваОтпусков(ТаблицаОбязательств, Реквизиты, ОценочныеОбязательстваПоВознаграждениямРаботникам, СтруктураПараметровРасчета)
	
	ТаблицаРезервов =  ТаблицаОбязательств.Скопировать();
	
	ТаблицаРезервов.Свернуть("Сотрудник, Подразделение, СпособОтраженияЗарплатыВБухУчете",
	"СуммаРезерва,СуммаРезерваНУ,СуммаРезерваСтраховыхВзносов,СуммаРезерваСтраховыхВзносовНУ,СуммаРезерваФССНесчастныеСлучаи,СуммаРезерваФССНесчастныеСлучаиНУ");

	Для Каждого СтрокаТаблицы ИЗ ТаблицаРезервов Цикл
		
		Если СтрокаТаблицы.СуммаРезерва = 0
			И СтрокаТаблицы.СуммаРезерваНУ = 0
			И (СтрокаТаблицы.СуммаРезерва - СтрокаТаблицы.СуммаРезерваНУ) = 0
			И СтрокаТаблицы.СуммаРезерваСтраховыхВзносов = 0
			И СтрокаТаблицы.СуммаРезерваСтраховыхВзносовНУ = 0
			И (СтрокаТаблицы.СуммаРезерваСтраховыхВзносов - СтрокаТаблицы.СуммаРезерваСтраховыхВзносовНУ) = 0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ОценочныеОбязательстваПоВознаграждениямРаботникам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьТаблицуРасчетаРезерваОтпусков(ТаблицаОбязательств, Реквизиты, РасчетРезерваОтпусков)
	
	ТаблицаРезервов =  ТаблицаОбязательств.Скопировать();
	
	ТаблицаРезервов.Свернуть("Сотрудник,
	|СреднийЗаработок,ТекущаяСтавкаСтраховыхВзносов" ,
	"ОстатокОтпуска,ФОТ,СтраховыеВзносы,ФССНесчастныеСлучаи,
	|СуммаРезерваНакоплено,СуммаРезерваСтраховыхВзносовНакоплено,СуммаРезерваФССНесчастныеСлучаиНакоплено,
	|СуммаРезерваНакопленоНУ,СуммаРезерваСтраховыхВзносовНакопленоНУ,СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
	|СуммаРезерваИсчислено,СуммаРезерваСтраховыхВзносовИсчислено,СуммаРезерваФССНесчастныеСлучаиИсчислено,
	|СуммаРезерваИсчисленоНУ,СуммаРезерваСтраховыхВзносовИсчисленоНУ,СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
	|СуммаРезерва,СуммаРезерваСтраховыхВзносов,СуммаРезерваФССНесчастныеСлучаи,
	|СуммаРезерваНУ,СуммаРезерваСтраховыхВзносовНУ,СуммаРезерваФССНесчастныеСлучаиНУ");
	
	ТаблицаРезервов.Колонки.Добавить("Организация");
	ТаблицаРезервов.Колонки.Добавить("ПериодРасчета");
	ТаблицаРезервов.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	ТаблицаРезервов.ЗаполнитьЗначения(Реквизиты.Период, "ПериодРасчета");
	
	РасчетРезерваОтпусков = ТаблицаРезервов.Скопировать();
	
КонецПроцедуры

Процедура СформироватьТаблицуОценочныеОбязательства(ТаблицаОбязательств, Реквизиты, ОценочныеОбязательства)
	
	ТаблицаРезервов =  ТаблицаОбязательств.Скопировать();
	
	ТаблицаРезервов.Свернуть("Подразделение, СпособОтраженияЗарплатыВБухУчете",
	"СуммаРезерва,СуммаРезерваНУ,СуммаРезерваСтраховыхВзносов,СуммаРезерваСтраховыхВзносовНУ,СуммаРезерваФССНесчастныеСлучаи,СуммаРезерваФССНесчастныеСлучаиНУ");

	Для Каждого СтрокаТаблицы ИЗ ТаблицаРезервов Цикл
		
		Если СтрокаТаблицы.СуммаРезерва = 0
			И СтрокаТаблицы.СуммаРезерваНУ = 0
			И (СтрокаТаблицы.СуммаРезерва - СтрокаТаблицы.СуммаРезерваНУ) = 0
			И СтрокаТаблицы.СуммаРезерваСтраховыхВзносов = 0
			И СтрокаТаблицы.СуммаРезерваСтраховыхВзносовНУ = 0
			И (СтрокаТаблицы.СуммаРезерваСтраховыхВзносов - СтрокаТаблицы.СуммаРезерваСтраховыхВзносовНУ) = 0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ОценочныеОбязательства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНачислениеОценочныхОбязательствПоОтпускам(ДокументОбъект) Экспорт
	
	// Начисленная зарплата и взносы.
	ДокументОбъект.РасчетРезерваОтпусков.Очистить();
	
	ДокументОбъект.ОценочныеОбязательстваПоВознаграждениямРаботникам.Очистить();
	
	ДокументОбъект.ОценочныеОбязательства.Очистить();
	
	Если ДокументОбъект.ДоляРасходов = 0 Тогда
		
		ДокументОбъект.ДоляРасходов = ДоляРезерваОтпусков(ДокументОбъект.ПериодРегистрации, 
			ДокументОбъект.Организация, ДокументОбъект.Ссылка);
			
	КонецЕсли;
	
	РасчетРезерваОтпусков = ДокументОбъект.РасчетРезерваОтпусков.Выгрузить();
	
	ОценочныеОбязательстваПоВознаграждениямРаботникам = ДокументОбъект.ОценочныеОбязательстваПоВознаграждениямРаботникам.Выгрузить();
	
	ОценочныеОбязательства = ДокументОбъект.ОценочныеОбязательства.Выгрузить();

	СобратьДанныеДляНачислениеРезерваОтпусков(ДокументОбъект.Ссылка, ДокументОбъект.Организация, ДокументОбъект.ПериодРегистрации, 
		ОценочныеОбязательстваПоВознаграждениямРаботникам, РасчетРезерваОтпусков, ОценочныеОбязательства);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОценочныеОбязательстваПоВознаграждениямРаботникам,
		ДокументОбъект.ОценочныеОбязательстваПоВознаграждениямРаботникам);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетРезерваОтпусков,
		ДокументОбъект.РасчетРезерваОтпусков);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОценочныеОбязательства,
		ДокументОбъект.ОценочныеОбязательства);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетСуммыРезерва

Процедура РассчитатьСуммыРезервовОтпусков(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета)
			
	Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ Тогда
		СуммыРезервовОтпусковМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
		СуммыРезервовОтпусковНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета)
	КонецЕсли;
 
	Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ Тогда
		СуммыРезервовОтпусковНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, "НУ")
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычислитьСуммыРезервовТекущегоМесяца(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, Регистратор)
	
	ЗначениеРезервОтпусков                     = Перечисления.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВознаграждениям;
	ЗначениеВзносыРезерваОтпусков              = Перечисления.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоСтраховымВзносам;
	ЗначениеФССНесчастныеСлучаиРезерваОтпусков = Перечисления.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВзносамФССНСиПЗ;
	
	ТаблицаНакопленныхРезервов = ТаблицаНакопленныхРезервовТекущегоМесяца(СтруктураПараметровРасчета, Регистратор);
	
	НачисленоРезервов                    = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваИсчислено");
	НачисленоВзносовРезервов             = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваСтраховыхВзносовИсчислено");
	НачисленоФССНесчастныеСлучаиРезервов = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваФССНесчастныеСлучаиИсчислено");
	ВсегоНачисленоРезервов               = НачисленоРезервов + НачисленоВзносовРезервов + НачисленоФССНесчастныеСлучаиРезервов;
	
	НачисленоРезервовНУ                    = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваИсчисленоНУ");
	НачисленоВзносовРезервовНУ             = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваСтраховыхВзносовИсчисленоНУ");
	НачисленоФССНесчастныеСлучаиРезервовНУ = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ");
	ВсегоНачисленоРезервовНУ               = НачисленоРезервовНУ + НачисленоВзносовРезервовНУ + НачисленоФССНесчастныеСлучаиРезервовНУ;
	
	НакопленоРезервов                      = 0;
	НакопленоРезервовНУ                    = 0;
	НакопленоВзносовРезервов               = 0;
	НакопленоВзносовРезервовНУ             = 0;
	НакопленоФССНесчастныеСлучаиРезервов   = 0;
	НакопленоФССНесчастныеСлучаиРезервовНУ = 0;
	
	Если ТаблицаНакопленныхРезервов <> Неопределено Тогда
		
		НайденнаяСтрока = ТаблицаНакопленныхРезервов.Найти(ЗначениеРезервОтпусков, "ТипОценочногоОбязательства"); 
		Если НайденнаяСтрока <> Неопределено Тогда
			НакопленоРезервов   = НайденнаяСтрока.НачальныйОстаток + НайденнаяСтрока.Оборот;
			НакопленоРезервовНУ = НайденнаяСтрока.НачальныйОстатокНУ + НайденнаяСтрока.ОборотНУ;
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаНакопленныхРезервов.Найти(ЗначениеВзносыРезерваОтпусков, "ТипОценочногоОбязательства"); 
		Если НайденнаяСтрока <> Неопределено Тогда
			НакопленоВзносовРезервов   = НайденнаяСтрока.НачальныйОстаток + НайденнаяСтрока.Оборот;
			НакопленоВзносовРезервовНУ = НайденнаяСтрока.НачальныйОстатокНУ + НайденнаяСтрока.ОборотНУ;
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаНакопленныхРезервов.Найти(ЗначениеФССНесчастныеСлучаиРезерваОтпусков, "ТипОценочногоОбязательства"); 
		Если НайденнаяСтрока <> Неопределено Тогда
			НакопленоФССНесчастныеСлучаиРезервов   = НайденнаяСтрока.НачальныйОстаток + НайденнаяСтрока.Оборот;
			НакопленоФССНесчастныеСлучаиРезервовНУ = НайденнаяСтрока.НачальныйОстатокНУ + НайденнаяСтрока.ОборотНУ;
		КонецЕсли;
		
	КонецЕсли;
	
	ВсегоНакопленоРезервов   = НакопленоРезервов + НакопленоВзносовРезервов + НакопленоФССНесчастныеСлучаиРезервов;
	ВсегоНакопленоРезервовНУ = НакопленоРезервовНУ + НакопленоВзносовРезервовНУ + НакопленоФССНесчастныеСлучаиРезервовНУ;
	
	СтруктураПараметровРасчета.Вставить("НакопленоРезервов",                      НакопленоРезервов);
	СтруктураПараметровРасчета.Вставить("НакопленоВзносовРезервов",               НакопленоВзносовРезервов);
	СтруктураПараметровРасчета.Вставить("НакопленоФССНесчастныеСлучаиРезервов",   НакопленоФССНесчастныеСлучаиРезервов);
	СтруктураПараметровРасчета.Вставить("ВсегоНакопленоРезервов",                 ВсегоНакопленоРезервов);
	СтруктураПараметровРасчета.Вставить("НакопленоРезервовНУ",                    НакопленоРезервовНУ);
	СтруктураПараметровРасчета.Вставить("НакопленоВзносовРезервовНУ",             НакопленоВзносовРезервовНУ);
	СтруктураПараметровРасчета.Вставить("НакопленоФССНесчастныеСлучаиРезервовНУ", НакопленоФССНесчастныеСлучаиРезервовНУ);
	СтруктураПараметровРасчета.Вставить("ВсегоНакопленоРезервовНУ",               ВсегоНакопленоРезервовНУ);
	
	СтруктураПараметровРасчета.Вставить("НачисленоРезервов",                      НачисленоРезервов);
	СтруктураПараметровРасчета.Вставить("НачисленоВзносовРезервов",               НачисленоВзносовРезервов);
	СтруктураПараметровРасчета.Вставить("НачисленоФССНесчастныеСлучаиРезервов",   НачисленоФССНесчастныеСлучаиРезервов);
	СтруктураПараметровРасчета.Вставить("ВсегоНачисленоРезервов",                 ВсегоНачисленоРезервов);
	СтруктураПараметровРасчета.Вставить("НачисленоРезервовНУ",                    НачисленоРезервовНУ);
	СтруктураПараметровРасчета.Вставить("НачисленоВзносовРезервовНУ",             НачисленоВзносовРезервовНУ);
	СтруктураПараметровРасчета.Вставить("НачисленоФССНесчастныеСлучаиРезервовНУ", НачисленоФССНесчастныеСлучаиРезервовНУ);
	СтруктураПараметровРасчета.Вставить("ВсегоНачисленоРезервовНУ",               ВсегоНачисленоРезервовНУ);
	
	СуммыРезервовТекущегоМесяцаНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты);
	Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ Тогда
		СуммыРезервовТекущегоМесяцаНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, "НУ");
	КонецЕсли;
	ДополнитьТаблицуНакопленнымиРезервами(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
	
	СуммыРезервовТекущегоМесяцаМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область НормативныйМетод

Процедура СуммыРезервовОтпусковНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, ВидУчета = "")
	
	Если СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод 
		ИЛИ ВидУчета = "НУ" Тогда
		
		Для Каждого СтрокаТаблицы ИЗ ПараметрыРасчетаОбязательств Цикл
			
			СтрокаТаблицы["СуммаРезерваИсчислено" + ВидУчета]                    = Окр(СтрокаТаблицы.ФОТ*СтруктураПараметровРасчета.НормативОтчисленийВРезервОтпусков/100,2);
			СтрокаТаблицы["СуммаРезерваСтраховыхВзносовИсчислено" + ВидУчета]    = Окр(СтрокаТаблицы.СтраховыеВзносы*СтруктураПараметровРасчета.НормативОтчисленийВРезервОтпусков/100,2);
			СтрокаТаблицы["СуммаРезерваФССНесчастныеСлучаиИсчислено" + ВидУчета] = Окр(СтрокаТаблицы.ФССНесчастныеСлучаи*СтруктураПараметровРасчета.НормативОтчисленийВРезервОтпусков/100,2);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СуммыРезервовТекущегоМесяцаНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, ВидУчета = "")
	
	Если ((СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод))
		ИЛИ (СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ И ВидУчета = "НУ") Тогда
		Если СтруктураПараметровРасчета["ВсегоНакопленоРезервов" + ВидУчета] + СтруктураПараметровРасчета["ВсегоНачисленоРезервов" + ВидУчета] > СтруктураПараметровРасчета.ПредельнаяВеличинаОтчисленийВРезервОтпусков Тогда
			Разница = СтруктураПараметровРасчета.ПредельнаяВеличинаОтчисленийВРезервОтпусков - СтруктураПараметровРасчета["ВсегоНакопленоРезервов" + ВидУчета];
			Разница = Мин(Разница,СтруктураПараметровРасчета["ВсегоНачисленоРезервов" + ВидУчета], СтруктураПараметровРасчета.ПредельнаяВеличинаРезерваТекущегоМесяца);
			Если Разница <> 0 Тогда
				
				ВсегоНачисленоРезервов = СтруктураПараметровРасчета["НачисленоРезервов" + ВидУчета]
					+ СтруктураПараметровРасчета["НачисленоВзносовРезервов" + ВидУчета]
					+ СтруктураПараметровРасчета["НачисленоФССНесчастныеСлучаиРезервов" + ВидУчета];
				
				ДоляВзносов =  СтруктураПараметровРасчета["НачисленоВзносовРезервов" + ВидУчета]/ВсегоНачисленоРезервов;
				ВзносыКНачислению  = Окр(Разница*ДоляВзносов, 2);
				
				ДоляФССНесчастныеСлучаи =  СтруктураПараметровРасчета["НачисленоФССНесчастныеСлучаиРезервов" + ВидУчета]/ВсегоНачисленоРезервов;
				ФССНесчастныеСлучаиКНачислению  = Окр(Разница*ДоляФССНесчастныеСлучаи, 2);
				
				РезервКНачислению = Разница - ВзносыКНачислению - ФССНесчастныеСлучаиКНачислению;
				
				РаспределитьСуммуПоКолонкеТаблицы(РезервКНачислению, ПараметрыРасчетаОбязательств, "СуммаРезерва" + ВидУчета,                    "СуммаРезерваИсчислено" + ВидУчета);
				РаспределитьСуммуПоКолонкеТаблицы(ВзносыКНачислению, ПараметрыРасчетаОбязательств, "СуммаРезерваСтраховыхВзносов" + ВидУчета,    "СуммаРезерваСтраховыхВзносовИсчислено" + ВидУчета);
				РаспределитьСуммуПоКолонкеТаблицы(ФССНесчастныеСлучаиКНачислению, ПараметрыРасчетаОбязательств, "СуммаРезерваФССНесчастныеСлучаи" + ВидУчета, "СуммаРезерваФССНесчастныеСлучаиИсчислено" + ВидУчета);
				
			Иначе
				
				ПараметрыРасчетаОбязательств.ЗаполнитьЗначения(0, "СуммаРезерва" + ВидУчета);
				ПараметрыРасчетаОбязательств.ЗаполнитьЗначения(0, "СуммаРезерваСтраховыхВзносов" + ВидУчета);
				ПараметрыРасчетаОбязательств.ЗаполнитьЗначения(0, "СуммаРезерваФССНесчастныеСлучаи" + ВидУчета);
				
			КонецЕсли;
			
		Иначе
			
			РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета["НачисленоРезервов" + ВидУчета],                     ПараметрыРасчетаОбязательств, "СуммаРезерва" + ВидУчета,                    "СуммаРезерваИсчислено" + ВидУчета);
			РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета["НачисленоВзносовРезервов" + ВидУчета] ,             ПараметрыРасчетаОбязательств, "СуммаРезерваСтраховыхВзносов" + ВидУчета,    "СуммаРезерваСтраховыхВзносовИсчислено" + ВидУчета);
			РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета["НачисленоФССНесчастныеСлучаиРезервов" + ВидУчета],  ПараметрыРасчетаОбязательств, "СуммаРезерваФССНесчастныеСлучаи" + ВидУчета, "СуммаРезерваФССНесчастныеСлучаиИсчислено" + ВидУчета);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьТаблицуНакопленнымиРезервами(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета)
	
	Если (СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод) 
		ИЛИ СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ Тогда
		
		ТолькоНУ = НЕ СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ;
		
		ТаблицаОстатков = ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаОбязательств", ПараметрыРасчетаОбязательств);
		Запрос.УстановитьПараметр("ТаблицаОстатков",     ТаблицаОстатков);
		Запрос.УстановитьПараметр("ТолькоНУ",            ТолькоНУ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник,
		|	ТаблицаОбязательств.Подразделение,
		|	ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаОбязательств.ФОТ,
		|	ТаблицаОбязательств.СтраховыеВзносы,
		|	ТаблицаОбязательств.ФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.ОстатокОтпуска,
		|	ТаблицаОбязательств.СреднийЗаработок,
		|	ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов,
		|	ТаблицаОбязательств.ТекущаяСтавкаФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.СуммаРезерва,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.СуммаРезерваНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ,
		|	ТаблицаОбязательств.СуммаРезерваНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваИсчисленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
		|	ТаблицаОбязательств.Регистратор
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
		|ИЗ
		|	&ТаблицаОбязательств КАК ТаблицаОбязательств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	СУММА(ТаблицаОбязательств.СуммаРезерва) КАК СуммаРезерва,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов) КАК СуммаРезерваСтраховыхВзносов,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи) КАК СуммаРезерваФССНесчастныеСлучаи,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваНУ) КАК СуммаРезерваНУ,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ) КАК СуммаРезерваСтраховыхВзносовНУ,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ) КАК СуммаРезерваФССНесчастныеСлучаиНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательствСводная
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ТаблицаОбязательств
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОбязательств.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Сотрудник КАК Сотрудник,
		|	ТаблицаОстатков.СуммаРезерваОстаток КАК СуммаРезерваОстаток,
		|	ТаблицаОстатков.СуммаРезерваСтраховыхВзносовОстаток КАК СуммаРезерваСтраховыхВзносовОстаток,
		|	ТаблицаОстатков.СуммаРезерваФССНесчастныеСлучаиОстаток КАК СуммаРезерваФССНесчастныеСлучаиОстаток,
		|	ТаблицаОстатков.СуммаРезерваОстатокНУ КАК СуммаРезерваОстатокНУ,
		|	ТаблицаОстатков.СуммаРезерваСтраховыхВзносовОстатокНУ КАК СуммаРезерваСтраховыхВзносовОстатокНУ,
		|	ТаблицаОстатков.СуммаРезерваФССНесчастныеСлучаиОстатокНУ КАК СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|ПОМЕСТИТЬ ВТ_ОстаткиРезервов
		|ИЗ
		|	&ТаблицаОстатков КАК ТаблицаОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаОбязательств.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ВТ_ТаблицаОбязательств.ФОТ КАК ФОТ,
		|	ВТ_ТаблицаОбязательств.СтраховыеВзносы КАК СтраховыеВзносы,
		|	ВТ_ТаблицаОбязательств.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.ОстатокОтпуска КАК ОстатокОтпуска,
		|	ВТ_ТаблицаОбязательств.СреднийЗаработок КАК СреднийЗаработок,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов КАК ТекущаяСтавкаСтраховыхВзносов,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаФССНесчастныеСлучаи КАК ТекущаяСтавкаФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.СуммаРезерва КАК СуммаРезерва,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов КАК СуммаРезерваСтраховыхВзносов,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи КАК СуммаРезерваФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваНУ КАК СуммаРезерваНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ КАК СуммаРезерваСтраховыхВзносовНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ КАК СуммаРезерваФССНесчастныеСлучаиНУ,
		|	ВЫБОР
		|		КОГДА &ТолькоНУ
		|			ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваНакоплено
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|						ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваНакоплено,
		|	ВЫБОР
		|		КОГДА &ТолькоНУ
		|			ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|						ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНакоплено,
		|	ВЫБОР
		|		КОГДА &ТолькоНУ
		|			ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакоплено
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = 0
		|						ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиНакоплено,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = 0
		|				ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = ВТ_ТаблицаОбязательств.СуммаРезерваНУ
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ
		|	КОНЕЦ КАК СуммаРезерваНакопленоНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = 0
		|				ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНакопленоНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = 0
		|				ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ
		|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено КАК СуммаРезерваИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено КАК СуммаРезерваСтраховыхВзносовИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено КАК СуммаРезерваФССНесчастныеСлучаиИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчисленоНУ КАК СуммаРезерваИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ КАК СуммаРезерваСтраховыхВзносовИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ КАК СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.Регистратор КАК Регистратор
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОбязательствСводная КАК ВТ_ТаблицаОбязательствСводная
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ТаблицаОбязательствСводная.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиРезервов КАК ВТ_ОстаткиРезервов
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ОстаткиРезервов.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	СпособОтраженияЗарплатыВБухучете";
		
		ПараметрыРасчетаОбязательств = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РезервОтпусковМетодОбязательств

// Содержимое модуля отличается в версиях ПРОФ и КОРП

#Область Соглашения

Функция УточнитьМетодНачисленияРезерваОтпусков(Организация, Период) Экспорт

	Результат = Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод;
	
	// Версия КОРП
	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, НачалоМесяца(Период));
	Результат = НастройкиРезервовОтпусков.МетодНачисленияРезерваОтпусков;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область МетодОбязательств

Процедура СуммыРезервовОтпусковМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета) Экспорт
	
	Если СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.МетодОбязательств Тогда
		
		СводнаяТаблица =  ПараметрыРасчетаОбязательств.Скопировать();
		
		СводнаяТаблица.Свернуть("Сотрудник", "СтраховыеВзносы, ФССНесчастныеСлучаи, ФОТ");
		
		Для Каждого СтрокаТаблицы ИЗ ПараметрыРасчетаОбязательств Цикл
			
			МассивСтрок = СводнаяТаблица.НайтиСтроки(Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник));
			
			Если МассивСтрок.Количество() <> 0 Тогда
				
				// Проверка на случай нулевого ФОТа
				Если МассивСтрок[0].ФОТ = 0 Тогда
				
					НулевойЗнаменатель = Истина;
					
				Иначе 
					
					НулевойЗнаменатель = Ложь;
					
				КонецЕсли;
				
				// Проверка на случай отсутствия остатка отпусков или среднего заработка
				Если (СтрокаТаблицы.СреднийЗаработок = Null)
					ИЛИ (СтрокаТаблицы.ОстатокОтпуска = Null) Тогда
				
					СтрокаТаблицы.СуммаРезерваИсчислено = 0;	
				
				Иначе
				
					СтрокаТаблицы.СуммаРезерваИсчислено = Окр(СтрокаТаблицы.СреднийЗаработок*СтрокаТаблицы.ОстатокОтпуска, 2);
				
				КонецЕсли;
				
				
				// Расчет на случай нулевого ФОТа
				Если НулевойЗнаменатель Тогда
				
					СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов = 0;
				
				Иначе
				
					СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов = Окр(МассивСтрок[0].СтраховыеВзносы/МассивСтрок[0].ФОТ*100, 4);				
				
				КонецЕсли; 
				
				СтрокаТаблицы.СуммаРезерваСтраховыхВзносовИсчислено = Окр(СтрокаТаблицы.СуммаРезерваИсчислено*СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов/100, 2);
				
				Если НулевойЗнаменатель Тогда
				
					СтрокаТаблицы.ТекущаяСтавкаФССНесчастныеСлучаи = 0;
				
				Иначе
				
					СтрокаТаблицы.ТекущаяСтавкаФССНесчастныеСлучаи = Окр(МассивСтрок[0].ФССНесчастныеСлучаи/МассивСтрок[0].ФОТ*100, 4);
				
				КонецЕсли; 
				
				СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиИсчислено = Окр(СтрокаТаблицы.СуммаРезерваИсчислено*СтрокаТаблицы.ТекущаяСтавкаФССНесчастныеСлучаи/100, 2);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СуммыРезервовТекущегоМесяцаМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты) Экспорт
	
	Если (СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.МетодОбязательств) Тогда
		
		ТаблицаОстатков = ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаОбязательств",        ПараметрыРасчетаОбязательств);
		Запрос.УстановитьПараметр("ТаблицаОстатков",            ТаблицаОстатков);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник,
		|	ТаблицаОбязательств.Подразделение,
		|	ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаОбязательств.ФОТ,
		|	ТаблицаОбязательств.СтраховыеВзносы,
		|	ТаблицаОбязательств.ФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.ОстатокОтпуска,
		|	ТаблицаОбязательств.СреднийЗаработок,
		|	ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов,
		|	ТаблицаОбязательств.ТекущаяСтавкаФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.СуммаРезерва,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.СуммаРезерваНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ,
		|	ТаблицаОбязательств.СуммаРезерваНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваИсчисленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
		|	ТаблицаОбязательств.Регистратор
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
		|ИЗ
		|	&ТаблицаОбязательств КАК ТаблицаОбязательств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	СУММА(ТаблицаОбязательств.СуммаРезерва) КАК СуммаРезерва,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов) КАК СуммаРезерваСтраховыхВзносов,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи) КАК СуммаРезерваФССНесчастныеСлучаи
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательствСводная
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ТаблицаОбязательств
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОбязательств.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Сотрудник КАК Сотрудник,
		|	ТаблицаОстатков.СуммаРезерваОстаток КАК СуммаРезерваОстаток,
		|	ТаблицаОстатков.СуммаРезерваСтраховыхВзносовОстаток КАК СуммаРезерваСтраховыхВзносовОстаток,
		|	ТаблицаОстатков.СуммаРезерваФССНесчастныеСлучаиОстаток КАК СуммаРезерваФССНесчастныеСлучаиОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиРезервов
		|ИЗ
		|	&ТаблицаОстатков КАК ТаблицаОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаОбязательств.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ВТ_ТаблицаОбязательств.ФОТ КАК ФОТ,
		|	ВТ_ТаблицаОбязательств.СтраховыеВзносы КАК СтраховыеВзносы,
		|	ВТ_ТаблицаОбязательств.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.ОстатокОтпуска КАК ОстатокОтпуска,
		|	ВТ_ТаблицаОбязательств.СреднийЗаработок КАК СреднийЗаработок,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов КАК ТекущаяСтавкаСтраховыхВзносов,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаФССНесчастныеСлучаи КАК ТекущаяСтавкаФССНесчастныеСлучаи,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|					КОНЕЦ
		|			КОНЕЦ < 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерва,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|					КОНЕЦ
		|			КОНЕЦ < 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносов,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи
		|					КОНЕЦ
		|			КОНЕЦ < 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = 0
		|								ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваНУ КАК СуммаРезерваНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ КАК СуммаРезерваСтраховыхВзносовНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ КАК СуммаРезерваФССНесчастныеСлучаиНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|				ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|	КОНЕЦ КАК СуммаРезерваНакоплено,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|				ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНакоплено,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = 0
		|				ИЛИ ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаи
		|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиНакоплено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваНакопленоНУ КАК СуммаРезерваНакопленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакопленоНУ КАК СуммаРезерваСтраховыхВзносовНакопленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ КАК СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено КАК СуммаРезерваИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено КАК СуммаРезерваСтраховыхВзносовИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено КАК СуммаРезерваФССНесчастныеСлучаиИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчисленоНУ КАК СуммаРезерваИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ КАК СуммаРезерваСтраховыхВзносовИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ КАК СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.Регистратор КАК Регистратор
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОбязательствСводная КАК ВТ_ТаблицаОбязательствСводная
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ТаблицаОбязательствСводная.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиРезервов КАК ВТ_ОстаткиРезервов
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ОстаткиРезервов.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	СпособОтраженияЗарплатыВБухучете";
		
		ПараметрыРасчетаОбязательств = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств) Экспорт
	
	ТаблицаРаспределенияОстатков = ПараметрыРасчетаОбязательств.Скопировать();
	
	ПредыдущийПериод = КонецМесяца(ДобавитьМесяц(СтруктураПараметровРасчета.ПериодРегистрации, -1));
	ТекущийПериод    = КонецМесяца(СтруктураПараметровРасчета.ПериодРегистрации);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      СтруктураПараметровРасчета.Организация);
	Запрос.УстановитьПараметр("ПредыдущийПериод", ПредыдущийПериод);
	Запрос.УстановитьПараметр("ТекущийПериод",    ТекущийПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетРезерваОтпусковПредыдущийМесяц.Сотрудник КАК Сотрудник,
	|	СУММА(РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваНакоплено + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерва) КАК СуммаРезерваОстаток,
	|	СУММА(РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваСтраховыхВзносовНакоплено + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваСтраховыхВзносов) КАК СуммаРезерваСтраховыхВзносовОстаток,
	|	РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиНакоплено + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаи КАК СуммаРезерваФССНесчастныеСлучаиОстаток,
	|	СУММА(РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваНакопленоНУ + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваНУ) КАК СуммаРезерваОстатокНУ,
	|	СУММА(РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваСтраховыхВзносовНакопленоНУ + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваСтраховыхВзносовНУ) КАК СуммаРезерваСтраховыхВзносовОстатокНУ,
	|	РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиНУ КАК СуммаРезерваФССНесчастныеСлучаиОстатокНУ
	|ПОМЕСТИТЬ ВТ_ПредыдущийМесяц
	|ИЗ
	|	РегистрСведений.РасчетРезерваОтпусков КАК РасчетРезерваОтпусковПредыдущийМесяц
	|ГДЕ
	|	РасчетРезерваОтпусковПредыдущийМесяц.Организация = &Организация
	|	И КОНЕЦПЕРИОДА(РасчетРезерваОтпусковПредыдущийМесяц.ПериодРасчета, МЕСЯЦ) = КОНЕЦПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетРезерваОтпусковПредыдущийМесяц.Сотрудник,
	|	РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиНакоплено + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаи,
	|	РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыплатаОтпусковЗаСчетРезерва.Сотрудник КАК Сотрудник,
	|	СУММА(ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваВыбыло) КАК СуммаРезерваВыбыло,
	|	СУММА(ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваСтраховыхВзносовВыбыло) КАК СуммаРезерваСтраховыхВзносовВыбыло,
	|	ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваФССНесчастныеСлучаиВыбыло КАК СуммаРезерваФССНесчастныеСлучаиВыбыло,
	|	СУММА(ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваВыбылоНУ) КАК СуммаРезерваВыбылоНУ,
	|	СУММА(ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваСтраховыхВзносовВыбылоНУ) КАК СуммаРезерваСтраховыхВзносовВыбылоНУ,
	|	ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваФССНесчастныеСлучаиВыбылоНУ КАК СуммаРезерваФССНесчастныеСлучаиВыбылоНУ
	|ПОМЕСТИТЬ ВТ_ТекущийМесяц
	|ИЗ
	|	РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва КАК ВыплатаОтпусковЗаСчетРезерва
	|ГДЕ
	|	ВыплатаОтпусковЗаСчетРезерва.Организация = &Организация
	|	И КОНЕЦПЕРИОДА(ВыплатаОтпусковЗаСчетРезерва.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(&ТекущийПериод, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаОтпусковЗаСчетРезерва.Сотрудник,
	|	ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваФССНесчастныеСлучаиВыбыло,
	|	ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваФССНесчастныеСлучаиВыбылоНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПредыдущийМесяц.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_ПредыдущийМесяц.СуммаРезерваОстаток - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваВыбыло, 0)) КАК СуммаРезерваОстаток,
	|	СУММА(ВТ_ПредыдущийМесяц.СуммаРезерваСтраховыхВзносовОстаток - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваСтраховыхВзносовВыбыло, 0)) КАК СуммаРезерваСтраховыхВзносовОстаток,
	|	ВТ_ПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиОстаток - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваФССНесчастныеСлучаиВыбыло, 0) КАК СуммаРезерваФССНесчастныеСлучаиОстаток,
	|	СУММА(ВТ_ПредыдущийМесяц.СуммаРезерваОстатокНУ - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваВыбылоНУ, 0)) КАК СуммаРезерваОстатокНУ,
	|	СУММА(ВТ_ПредыдущийМесяц.СуммаРезерваСтраховыхВзносовОстатокНУ - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваСтраховыхВзносовВыбылоНУ, 0)) КАК СуммаРезерваСтраховыхВзносовОстатокНУ,
	|	ВТ_ПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиОстатокНУ - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваФССНесчастныеСлучаиВыбылоНУ, 0) КАК СуммаРезерваФССНесчастныеСлучаиОстатокНУ
	|ИЗ
	|	ВТ_ПредыдущийМесяц КАК ВТ_ПредыдущийМесяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущийМесяц КАК ВТ_ТекущийМесяц
	|		ПО ВТ_ПредыдущийМесяц.Сотрудник = ВТ_ТекущийМесяц.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПредыдущийМесяц.Сотрудник,
	|	ВТ_ПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиОстаток - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваФССНесчастныеСлучаиВыбыло, 0),
	|	ВТ_ПредыдущийМесяц.СуммаРезерваФССНесчастныеСлучаиОстатокНУ - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваФССНесчастныеСлучаиВыбылоНУ, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() <> 0 Тогда
		
		Для Каждого СтрокаТаблицы Из РезультатЗапроса Цикл
			
			МассивСтрок = ТаблицаРаспределенияОстатков.НайтиСтроки(Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник));
			Если МассивСтрок.Количество() <> 0 Тогда
				Если МассивСтрок.Количество() > 1 Тогда
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваОстаток;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива ИЗ МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваИсчислено);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваИсчислено = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовОстаток;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива ИЗ МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваСтраховыхВзносовИсчислено);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваСтраховыхВзносовИсчислено = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиОстаток;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива ИЗ МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваФССНесчастныеСлучаиИсчислено);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваФССНесчастныеСлучаиИсчислено = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваОстатокНУ;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива ИЗ МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваИсчисленоНУ);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваИсчисленоНУ = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовОстатокНУ;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива ИЗ МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваСтраховыхВзносовИсчисленоНУ);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваСтраховыхВзносовИсчисленоНУ = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиОстатокНУ;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива ИЗ МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
				Иначе
					МассивСтрок[0].СуммаРезерваИсчислено                      = СтрокаТаблицы.СуммаРезерваОстаток;
					МассивСтрок[0].СуммаРезерваСтраховыхВзносовИсчислено      = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовОстаток;
					МассивСтрок[0].СуммаРезерваФССНесчастныеСлучаиИсчислено   = СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиОстаток;
					МассивСтрок[0].СуммаРезерваИсчисленоНУ                    = СтрокаТаблицы.СуммаРезерваОстатокНУ;
					МассивСтрок[0].СуммаРезерваСтраховыхВзносовИсчисленоНУ    = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовОстатокНУ;
					МассивСтрок[0].СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ = СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиОстатокНУ;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;	
		
	Иначе
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоФССНесчастныеСлучаиРезервов,   ТаблицаРаспределенияОстатков, "СуммаРезерваФССНесчастныеСлучаиИсчислено",   "СуммаРезерваИсчислено");
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоВзносовРезервов,               ТаблицаРаспределенияОстатков, "СуммаРезерваСтраховыхВзносовИсчислено",      "СуммаРезерваИсчислено");
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоРезервов,                      ТаблицаРаспределенияОстатков, "СуммаРезерваИсчислено");
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоФССНесчастныеСлучаиРезервовНУ, ТаблицаРаспределенияОстатков, "СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ", "СуммаРезерваИсчисленоНУ");
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоВзносовРезервовНУ,             ТаблицаРаспределенияОстатков, "СуммаРезерваСтраховыхВзносовИсчисленоНУ",    "СуммаРезерваИсчисленоНУ");
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоРезервовНУ,                    ТаблицаРаспределенияОстатков, "СуммаРезерваИсчисленоНУ");
	КонецЕсли;
	
	ТаблицаРаспределенияОстатков.Колонки.СуммаРезерваИсчислено.Имя                      = "СуммаРезерваОстаток";
	ТаблицаРаспределенияОстатков.Колонки.СуммаРезерваСтраховыхВзносовИсчислено.Имя      = "СуммаРезерваСтраховыхВзносовОстаток";
	ТаблицаРаспределенияОстатков.Колонки.СуммаРезерваФССНесчастныеСлучаиИсчислено.Имя   = "СуммаРезерваФССНесчастныеСлучаиОстаток";
	ТаблицаРаспределенияОстатков.Колонки.СуммаРезерваИсчисленоНУ.Имя                    = "СуммаРезерваОстатокНУ";
	ТаблицаРаспределенияОстатков.Колонки.СуммаРезерваСтраховыхВзносовИсчисленоНУ.Имя    = "СуммаРезерваСтраховыхВзносовОстатокНУ";
	ТаблицаРаспределенияОстатков.Колонки.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ.Имя = "СуммаРезерваФССНесчастныеСлучаиОстатокНУ";
	
	ТаблицаРаспределенияОстатков.Свернуть("Сотрудник, Регистратор", "СуммаРезерваОстаток, СуммаРезерваСтраховыхВзносовОстаток, СуммаРезерваФССНесчастныеСлучаиОстаток, СуммаРезерваОстатокНУ, СуммаРезерваСтраховыхВзносовОстатокНУ, СуммаРезерваФССНесчастныеСлучаиОстатокНУ");
	
	Возврат ТаблицаРаспределенияОстатков;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область РезервОтпусковПереопределяемый

#Область НакопленныеРезервы

// Получаем суммы накопленных резервов по сотрудникам, 
// для отражения в учете оплаты отпуска за счет резерва
//
Функция НакопленныеОценочныеОбязательства(Организация, Период, ДокументСсылка, Сотрудники) Экспорт
	
	ПредыдущийПериод = КонецМесяца(ДобавитьМесяц(Период, -1));
	ТекущийПериод    = КонецМесяца(Период);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("ТекущийПериод",    ТекущийПериод);
	Запрос.УстановитьПараметр("ПредыдущийПериод", ПредыдущийПериод);
	Запрос.УстановитьПараметр("Сотрудники",       Сотрудники);
	Запрос.УстановитьПараметр("Регистратор",      ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыплатаОтпусков.Сотрудник,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваВыбылоОборот) КАК СуммаРезерваВыбылоОборот,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваСтраховыхВзносовВыбылоОборот) КАК СуммаРезерваСтраховыхВзносовВыбылоОборот,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваВыбылоНУОборот) КАК СуммаРезерваВыбылоНУОборот,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваСтраховыхВзносовВыбылоНУОборот) КАК СуммаРезерваСтраховыхВзносовВыбылоНУОборот,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваФССНесчастныеСлучаиВыбылоОборот) КАК СуммаРезерваФССНесчастныеСлучаиВыбылоОборот,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваФССНесчастныеСлучаиВыбылоНУОборот) КАК СуммаРезерваФССНесчастныеСлучаиВыбылоНУОборот
	|ПОМЕСТИТЬ ВТ_ДанныеПредыдущегоПериода
	|ИЗ
	|	РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва.Обороты(
	|			НАЧАЛОПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ),
	|			КОНЕЦПЕРИОДА(&ТекущийПериод, МЕСЯЦ),
	|			Регистратор,
	|			Организация = &Организация
	|				И Сотрудник В (&Сотрудники)) КАК ВыплатаОтпусков
	|ГДЕ
	|	ВыплатаОтпусков.Регистратор <> &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаОтпусков.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыплатаОтпусковТекущийДокумент.Сотрудник,
	|	СУММА(ВыплатаОтпусковТекущийДокумент.СуммаРезерваВыбылоОборот) КАК СуммаРезерваВыбылоОборот,
	|	СУММА(ВыплатаОтпусковТекущийДокумент.СуммаРезерваСтраховыхВзносовВыбылоОборот) КАК СуммаРезерваСтраховыхВзносовВыбылоОборот,
	|	СУММА(ВыплатаОтпусковТекущийДокумент.СуммаРезерваВыбылоНУОборот) КАК СуммаРезерваВыбылоНУОборот,
	|	СУММА(ВыплатаОтпусковТекущийДокумент.СуммаРезерваСтраховыхВзносовВыбылоНУОборот) КАК СуммаРезерваСтраховыхВзносовВыбылоНУОборот,
	|	СУММА(ВыплатаОтпусковТекущийДокумент.СуммаРезерваФССНесчастныеСлучаиВыбылоОборот) КАК СуммаРезерваФССНесчастныеСлучаиВыбылоОборот,
	|	СУММА(ВыплатаОтпусковТекущийДокумент.СуммаРезерваФССНесчастныеСлучаиВыбылоНУОборот) КАК СуммаРезерваФССНесчастныеСлучаиВыбылоНУОборот
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва.Обороты(
	|			НАЧАЛОПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ),
	|			КОНЕЦПЕРИОДА(&ТекущийПериод, МЕСЯЦ),
	|			Регистратор,
	|			Организация = &Организация
	|				И Сотрудник В (&Сотрудники)) КАК ВыплатаОтпусковТекущийДокумент
	|ГДЕ
	|	ВыплатаОтпусковТекущийДокумент.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаОтпусковТекущийДокумент.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетРезерваОтпусков.Сотрудник КАК Сотрудник,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваНакоплено, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерва, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваВыбылоОборот, 0) - ЕСТЬNULL(ВыплатаОтпусковТекущийДокумент.СуммаРезерваВыбылоОборот, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНакоплено, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносов, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваСтраховыхВзносовВыбылоОборот, 0) - ЕСТЬNULL(ВыплатаОтпусковТекущийДокумент.СуммаРезерваСтраховыхВзносовВыбылоОборот, 0)) КАК СтраховыеВзносы,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиНакоплено, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаи, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваФССНесчастныеСлучаиВыбылоОборот, 0) - ЕСТЬNULL(ВыплатаОтпусковТекущийДокумент.СуммаРезерваФССНесчастныеСлучаиВыбылоОборот, 0)) КАК ФССНесчастныеСлучаи,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваНакопленоНУ, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваНУ, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваВыбылоНУОборот, 0) - ЕСТЬNULL(ВыплатаОтпусковТекущийДокумент.СуммаРезерваВыбылоНУОборот, 0)) КАК СуммаНУ,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНакопленоНУ, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНУ, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваСтраховыхВзносовВыбылоНУОборот, 0) - ЕСТЬNULL(ВыплатаОтпусковТекущийДокумент.СуммаРезерваСтраховыхВзносовВыбылоНУОборот, 0)) КАК СтраховыеВзносыНУ,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваФССНесчастныеСлучаиНУ, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваФССНесчастныеСлучаиВыбылоНУОборот, 0) - ЕСТЬNULL(ВыплатаОтпусковТекущийДокумент.СуммаРезерваФССНесчастныеСлучаиВыбылоНУОборот, 0)) КАК ФССНесчастныеСлучаиНУ
	|ИЗ
	|	РегистрСведений.РасчетРезерваОтпусков КАК РасчетРезерваОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПредыдущегоПериода КАК ВыплатаОтпусков
	|		ПО РасчетРезерваОтпусков.Сотрудник = ВыплатаОтпусков.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеДокумента КАК ВыплатаОтпусковТекущийДокумент
	|		ПО РасчетРезерваОтпусков.Сотрудник = ВыплатаОтпусковТекущийДокумент.Сотрудник
	|ГДЕ
	|	РасчетРезерваОтпусков.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ)
	|	И РасчетРезерваОтпусков.Организация = &Организация
	|	И РасчетРезерваОтпусков.Сотрудник В(&Сотрудники)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетРезерваОтпусков.Сотрудник";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область ОпределениеДолиРезерва

Функция РассчитыватьДолиРезерваПоБУ(Организация, Период) Экспорт
	
	Возврат УточнитьМетодНачисленияРезерваОтпусков(Организация, Период) = Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод;
	
КонецФункции

Функция ДоляРезерваОтпусков(Период, Организация, Регистратор = Неопределено) Экспорт
	
	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, НачалоМесяца(Период));
	РассчитыватьДолиПоНУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковНУ;
	РассчитыватьДолиПоБУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ;

	Если РассчитыватьДолиПоБУ Тогда
		РассчитыватьДолиПоБУ = РассчитыватьДолиРезерваПоБУ(Организация, Период);
	КонецЕсли;
	
	Если НЕ РассчитыватьДолиПоБУ И НЕ РассчитыватьДолиПоНУ Тогда
		Возврат 0;
	КонецЕсли;
	
	Организации = ВсяОрганизация(Организация);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации",                Организации);
	Запрос.УстановитьПараметр("НачалоПериода",              НачалоГода(Период));
	Запрос.УстановитьПараметр("КонецПериода",               КонецМесяца(Период));
	Запрос.УстановитьПараметр("Регистратор",               Регистратор);
	
	Если Регистратор = Неопределено Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства,
		|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНачальныйОстаток + ОценочныеОбязательстваОстаткиИОбороты.СуммаПриход) КАК НакопленныйРезерв,
		|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНУНачальныйОстаток + ОценочныеОбязательстваОстаткиИОбороты.СуммаНУПриход) КАК НакопленныйРезервНУ
		|ИЗ
		|	РегистрНакопления.ОценочныеОбязательства.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Организация В (&Организации)) КАК ОценочныеОбязательстваОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства";
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства,
		|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНачальныйОстаток + ОценочныеОбязательстваОстаткиИОбороты.СуммаПриход) КАК НакопленныйРезерв,
		|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНУНачальныйОстаток + ОценочныеОбязательстваОстаткиИОбороты.СуммаНУПриход) КАК НакопленныйРезервНУ
		|ПОМЕСТИТЬ ВТ_ОстаткиИОбороты
		|ИЗ
		|	РегистрНакопления.ОценочныеОбязательства.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Организация В (&Организации)) КАК ОценочныеОбязательстваОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства,
		|	СУММА(ОценочныеОбязательстваОбороты.СуммаПриход) КАК Оборот,
		|	СУММА(ОценочныеОбязательстваОбороты.СуммаНУПриход) КАК ОборотНУ
		|ПОМЕСТИТЬ ВТ_ТекущиеОбороты
		|ИЗ
		|	РегистрНакопления.ОценочныеОбязательства.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Организация В (&Организации)) КАК ОценочныеОбязательстваОбороты
		|ГДЕ
		|	ОценочныеОбязательстваОбороты.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства КАК ТипОценочногоОбязательства,
		|	СУММА(ВТ_ОстаткиИОбороты.НакопленныйРезерв - ЕСТЬNULL(ВТ_ТекущиеОбороты.Оборот, 0)) КАК НакопленныйРезерв,
		|	СУММА(ВТ_ОстаткиИОбороты.НакопленныйРезервНУ - ЕСТЬNULL(ВТ_ТекущиеОбороты.ОборотНУ, 0)) КАК НакопленныйРезервНУ
		|ИЗ
		|	ВТ_ОстаткиИОбороты КАК ВТ_ОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеОбороты КАК ВТ_ТекущиеОбороты
		|		ПО ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства = ВТ_ТекущиеОбороты.ТипОценочногоОбязательства
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства";
	КонецЕсли;

	ТаблицаНакопленныхРезервов = Запрос.Выполнить().Выгрузить();
		
	ТаблицаФондаОплатыТруда = ОтражениеЗарплатыВБухучете.ФондОплатыТрудаПоОрганизациямДляРасчетаОценочныхОбязательствОтпусков(Организации, Период);
	
	НормативОтчисленийВРезервОтпусков           = НастройкиРезервовОтпусков.НормативОтчисленийВРезервОтпусков;
	ПредельнаяВеличинаОтчисленийВРезервОтпусков = НастройкиРезервовОтпусков.ПредельнаяВеличинаОтчисленийВРезервОтпусков;
	
	ФондОплатыТруда          = ТаблицаФондаОплатыТруда.Итог("ФондаОплатыТруда");
	ВсегоНачисленоРезервов   = Окр(ФондОплатыТруда*НормативОтчисленийВРезервОтпусков/100,2);
	
	Если РассчитыватьДолиПоБУ Тогда
		ВсегоНакопленоРезервов = ТаблицаНакопленныхРезервов.Итог("НакопленныйРезерв");
	Иначе
		ВсегоНакопленоРезервов = ТаблицаНакопленныхРезервов.Итог("НакопленныйРезервНУ");
	КонецЕсли;
	
	Если ВсегоНакопленоРезервов + ВсегоНачисленоРезервов > ПредельнаяВеличинаОтчисленийВРезервОтпусков Тогда
		Разница = ПредельнаяВеличинаОтчисленийВРезервОтпусков - ВсегоНакопленоРезервов;
		РезервОтпусковТекущегоМесяца = Макс(0,Мин(Разница,ВсегоНачисленоРезервов));
	Иначе
		РезервОтпусковТекущегоМесяца = ВсегоНачисленоРезервов;
	КонецЕсли;
	
	Если ФондОплатыТруда = 0 Тогда
		ДоляРезервовОтпусков = 0;
	Иначе
		ДоляРезервовОтпусков = РезервОтпусковТекущегоМесяца/ФондОплатыТруда;	
	КонецЕсли;
	// Эта доля - максимально допустимое соотношение 
	// между начисленным резервом текущего месяца
	// и фондом оплаты труда текущего месяца
	
	ДолиСписанияКосвенныхРасходов = РегистрыСведений.ЗарплатаКадрыДолиСписанияКосвенныхРасходов.СоздатьМенеджерЗаписи();
	ДолиСписанияКосвенныхРасходов.Организация = Организация;
	ДолиСписанияКосвенныхРасходов.ПериодРасчета = Период;
	ДолиСписанияКосвенныхРасходов.Прочитать();
	ДолиСписанияКосвенныхРасходов.Организация = Организация;
	ДолиСписанияКосвенныхРасходов.ПериодРасчета = Период;
	ДолиСписанияКосвенныхРасходов.ДоляРезервовОтпусков = ДоляРезервовОтпусков;
	ДолиСписанияКосвенныхРасходов.Записать();
	
	Возврат ДоляРезервовОтпусков;
	
КонецФункции

Функция ДоляСписанияКосвенныхРасходов(Период, Организация, Регистратор = Неопределено) Экспорт
	
	ДолиСписанияКосвенныхРасходов = РегистрыСведений.ЗарплатаКадрыДолиСписанияКосвенныхРасходов.Получить(Новый Структура("Организация,ПериодРасчета", Организация, Период));
	ДоляРезервовОтпусков = ДолиСписанияКосвенныхРасходов.ДоляРезервовОтпусков;
	
	Если ДоляРезервовОтпусков = 0 Тогда
		ДоляРезервовОтпусков = ДоляРезерваОтпусков(Период, Организация, Регистратор);
	КонецЕсли;
	
	Возврат ДоляРезервовОтпусков;
	
КонецФункции

#КонецОбласти

#Область ОпределениеРазмераРезерваТекущегоПериода

// Получает накопленные с начала года суммы резервов с учетом движений текущего месяца
//
Функция ТаблицаНакопленныхРезервовТекущегоМесяца(СтруктураПараметровРасчета, Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   СтруктураПараметровРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(СтруктураПараметровРасчета.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(СтруктураПараметровРасчета.ПериодРегистрации));
	Запрос.УстановитьПараметр("Регистратор",   Регистратор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства,
	|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНачальныйОстаток) КАК НачальныйОстаток,
	|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНУНачальныйОстаток) КАК НачальныйОстатокНУ,
	|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаПриход) КАК Оборот,
	|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНУПриход) КАК ОборотНУ
	|ПОМЕСТИТЬ ВТ_ОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.ОценочныеОбязательства.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Организация = &Организация) КАК ОценочныеОбязательстваОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства,
	|	СУММА(ОценочныеОбязательстваОбороты.СуммаПриход) КАК Оборот,
	|	СУММА(ОценочныеОбязательстваОбороты.СуммаНУПриход) КАК ОборотНУ
	|ПОМЕСТИТЬ ВТ_ТекущиеОбороты
	|ИЗ
	|	РегистрНакопления.ОценочныеОбязательства.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Организация = &Организация) КАК ОценочныеОбязательстваОбороты
	|ГДЕ
	|	ОценочныеОбязательстваОбороты.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства КАК ТипОценочногоОбязательства,
	|	СУММА(ВТ_ОстаткиИОбороты.НачальныйОстаток) КАК НачальныйОстаток,
	|	СУММА(ВТ_ОстаткиИОбороты.НачальныйОстатокНУ) КАК НачальныйОстатокНУ,
	|	СУММА(ВТ_ОстаткиИОбороты.Оборот - ЕСТЬNULL(ВТ_ТекущиеОбороты.Оборот, 0)) КАК Оборот,
	|	СУММА(ВТ_ОстаткиИОбороты.ОборотНУ - ЕСТЬNULL(ВТ_ТекущиеОбороты.ОборотНУ, 0)) КАК ОборотНУ
	|ИЗ
	|	ВТ_ОстаткиИОбороты КАК ВТ_ОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеОбороты КАК ВТ_ТекущиеОбороты
	|		ПО ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства = ВТ_ТекущиеОбороты.ТипОценочногоОбязательства
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства";
	
	ТаблицаНакопленныхРезервов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаНакопленныхРезервов;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

// Возвращает перечень (фиксированный массив) всех структурных частей переданной головной организации, имеющих отдельный баланс.
// В перечень входит головная организация и все ее обособленные подразделения на выделенном балансе.
//
Функция ВсяОрганизация(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";

	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
	Возврат Новый ФиксированныйМассив(Результат);
	
КонецФункции

// Функция выполняет пропорциональное распределение суммы в соответствии
// с заданными коэффициентами распределения
//
// Параметры:
//		ИсхСумма - распределяемая сумма
//		МассивКоэф - массив коэффициентов распределения
//		Точность - точность округления при распределении. Необязателен.
//
//	Возврат:
//		МассивСумм - массив размерностью равный массиву коэффициентов, содержит
//			суммы в соответствии с весом коэффициента (из массива коэффициентов)
//          В случае если распределить не удалось (сумма = 0, кол-во коэф. = 0,
//          или суммарный вес коэф. = 0), тогда возвращается значение Неопределено
//
Функция РаспределитьПропорционально(Знач ИсхСумма, МассивКоэф, Знач Точность = 2) Экспорт

	Если МассивКоэф.Количество() = 0 Или ИсхСумма = 0 Или ИсхСумма = Null Тогда
		Возврат Неопределено;
	КонецЕсли;

	ИндексМакс = 0;
	МаксЗнач   = 0;
	РаспрСумма = 0;
	СуммаКоэф  = 0;

	Для ИндексМассиваКоэффициентов = 0 По МассивКоэф.Количество() - 1 Цикл

		МодульЧисла = ?(МассивКоэф[ИндексМассиваКоэффициентов] > 0, МассивКоэф[ИндексМассиваКоэффициентов], - МассивКоэф[ИндексМассиваКоэффициентов]);

		Если МаксЗнач < МодульЧисла Тогда
			МаксЗнач = МодульЧисла;
			ИндексМакс = ИндексМассиваКоэффициентов;
		КонецЕсли;

		СуммаКоэф = СуммаКоэф + МассивКоэф[ИндексМассиваКоэффициентов];

	КонецЦикла;

	Если СуммаКоэф = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	МассивСумм = Новый Массив(МассивКоэф.Количество());

	Для ИндексМассиваКоэффициентов = 0 По МассивКоэф.Количество() - 1 Цикл
		МассивСумм[ИндексМассиваКоэффициентов] = Окр(ИсхСумма * МассивКоэф[ИндексМассиваКоэффициентов] / СуммаКоэф, Точность, 1);
		РаспрСумма = РаспрСумма + МассивСумм[ИндексМассиваКоэффициентов];
	КонецЦикла;

	// Погрешности округления отнесем на коэффициент с максимальным весом
	Если Не РаспрСумма = ИсхСумма Тогда
		МассивСумм[ИндексМакс] = МассивСумм[ИндексМакс] + ИсхСумма - РаспрСумма;
	КонецЕсли;

	Возврат МассивСумм;

КонецФункции // РаспределитьПропорционально()

Процедура РаспределитьСуммуПоКолонкеТаблицы(РаспределяемаяСумма, Таблица, ИмяКолонки, ИмяКолонкиБазы = "") Экспорт

	Если РаспределяемаяСумма <> 0 Тогда
		Если ПустаяСтрока(ИмяКолонкиБазы) Тогда
			МассивСтарыхСумм = Таблица.ВыгрузитьКолонку(ИмяКолонки);
		Иначе
			МассивСтарыхСумм = Таблица.ВыгрузитьКолонку(ИмяКолонкиБазы);
		КонецЕсли;
		МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
		Если МассивНовыхСумм <> Неопределено Тогда
	 		Таблица.ЗагрузитьКолонку(МассивНовыхСумм, ИмяКолонки);
		КонецЕсли; 
	Иначе
		Таблица.ЗаполнитьЗначения(0, ИмяКолонки);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область РегистрацияДвиженийДокумента

Процедура СформироватьДвиженияПоНачислениюОбязательств(Движения, Отказ, Организация, Период, ПериодРегистрации, ДанныеДляОтражения) Экспорт
	
	Если ДанныеДляОтражения.Свойство("ОценочныеОбязательства") Тогда
		СформироватьДвиженияНачислениеРезерваОтпусков(ДанныеДляОтражения.ОценочныеОбязательства, Организация, ПериодРегистрации, Движения, Отказ)
	КонецЕсли;
	Если ДанныеДляОтражения.Свойство("РасчетРезерваОтпусков") Тогда
		СформироватьДвиженияРегистраРасчетРезерваОтпусков(ДанныеДляОтражения.РасчетРезерваОтпусков, Организация, Период, ПериодРегистрации, Движения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияРегистраРасчетРезерваОтпусков(ТаблицаОбязательств, Организация, Период, ПериодРегистрации, Движения, Отказ)
	
	ТаблицаОбязательств.Свернуть("Сотрудник,	
	|СреднийЗаработок,ТекущаяСтавкаСтраховыхВзносов" ,
	"ОстатокОтпуска,ФОТ,СтраховыеВзносы,ФССНесчастныеСлучаи,
	|СуммаРезерваНакоплено,СуммаРезерваСтраховыхВзносовНакоплено,СуммаРезерваФССНесчастныеСлучаиНакоплено,
	|СуммаРезерваНакопленоНУ,СуммаРезерваСтраховыхВзносовНакопленоНУ,СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
	|СуммаРезерваИсчислено,СуммаРезерваСтраховыхВзносовИсчислено,СуммаРезерваФССНесчастныеСлучаиИсчислено,
	|СуммаРезерваИсчисленоНУ,СуммаРезерваСтраховыхВзносовИсчисленоНУ,СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
	|СуммаРезерва,СуммаРезерваСтраховыхВзносов,СуммаРезерваФССНесчастныеСлучаи,
	|СуммаРезерваНУ,СуммаРезерваСтраховыхВзносовНУ,СуммаРезерваФССНесчастныеСлучаиНУ");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудники", ТаблицаОбязательств.ВыгрузитьКолонку("Сотрудник"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка В(&Сотрудники)";
	Выборка = Запрос.Выполнить().Выбрать();
	СотрудникиФизическиеЛица = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СотрудникиФизическиеЛица.Вставить(Выборка.Сотрудник, Выборка.ФизическоеЛицо);
	КонецЦикла;	
	
	Для каждого СтрокаТЗ Из ТаблицаОбязательств Цикл
	
		НоваяСтрока = Движения.РасчетРезерваОтпусков.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.ПериодРасчета = ПериодРегистрации;
		НоваяСтрока.Период = КонецМесяца(ПериодРегистрации);
		НоваяСтрока.ФизическоеЛицо = СотрудникиФизическиеЛица[НоваяСтрока.Сотрудник];
	
	КонецЦикла;
	
	Движения.РасчетРезерваОтпусков.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияНачислениеРезерваОтпусков(ТаблицаОбязательств, Организация, ПериодРегистрации, Движения, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбязательств", ТаблицаОбязательств);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбязательств.СуммаРезерва,
	|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
	|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи,
	|	ТаблицаОбязательств.СуммаРезерваНУ,
	|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ,
	|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ,
	|	&Организация КАК Организация,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
	|ИЗ
	|	&ТаблицаОбязательств КАК ТаблицаОбязательств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация КАК Организация,
	|	ВТ_ТаблицаОбязательств.Период КАК Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерва) КАК Сумма,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваНУ) КАК СуммаНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВознаграждениям) КАК ТипОценочногоОбязательства
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерва <> 0
	|			ИЛИ ВТ_ТаблицаОбязательств.СуммаРезерваНУ <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов),
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоСтраховымВзносам)
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов <> 0
	|			ИЛИ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи),
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВзносамФССНСиПЗ)
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи <> 0
	|			ИЛИ ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	ТипОценочногоОбязательства";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
		Движения.ОценочныеОбязательства.Загрузить(Результат);
		Движения.ОценочныеОбязательства.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
	
#КонецОбласти 

