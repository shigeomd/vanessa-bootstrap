////////////////////////////////////////////////////////////////////////////////
// Ответственные лица: процедуры и функции для работы с ответственным лицами.
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция возвращает структуру с реквизитами ответственных лиц.
//
// Параметры:
//  Организация - организация, для которой нужно определить руководящих лиц.
//	ДатаСреза - дата со временем, на которые необходимо определить сведения.
//	Подразделение - подразделение, для которого необходимо определить ответственных лиц.
//
Функция ОтветственныеЛица(Организация, ДатаСреза, Подразделение = Неопределено) Экспорт

	ДанныеОтветственныхЛиц = ОтветственныеЛицаБП.ПустаяСтруктураОтветственныхЛиц();

	СобиратьПоОрганизации = НЕ ЗначениеЗаполнено(Подразделение);

	Если Организация <> Неопределено тогда

		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, 
				"ИндивидуальныйПредприниматель, ЮридическоеФизическоеЛицо");
		Иначе
			РеквизитыОрганизации = Новый Структура();
			РеквизитыОрганизации.Вставить("ИндивидуальныйПредприниматель");
			РеквизитыОрганизации.Вставить("ЮридическоеФизическоеЛицо");
		КонецЕсли;

		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   ДатаСреза);
		ЗапросПоЛицам.УстановитьПараметр("Организация", Организация);

		Если РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			
			ДанныеФизическогоЛица = УчетЗарплаты.ДанныеФизическихЛиц(Организация, РеквизитыОрганизации.ИндивидуальныйПредприниматель, ДатаСреза, Истина);
			ФИО = Новый Структура("Фамилия, Имя, Отчество, Представление",
			ДанныеФизическогоЛица.Фамилия,
			ДанныеФизическогоЛица.Имя,
			ДанныеФизическогоЛица.Отчество,
			ДанныеФизическогоЛица.Представление);
			
			ДанныеОтветственныхЛиц.Руководитель               = РеквизитыОрганизации.ИндивидуальныйПредприниматель;
			ДанныеОтветственныхЛиц.РуководительДолжность      = "";
			ДанныеОтветственныхЛиц.РуководительФИО            = ФИО;
			ДанныеОтветственныхЛиц.РуководительПредставление  = ДанныеФизическогоЛица.Представление;
			
		КонецЕсли;

		Если СобиратьПоОрганизации Тогда

			ЗапросПоЛицам.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование КАК ФизическоеЛицоПредставление,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Наименование КАК ДолжностьПредставление
			|ИЗ
			|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних";
			
			Руководители = ЗапросПоЛицам.Выполнить().Выбрать();
		Иначе

			// Создание таблицы иерархии подразделения.
			ТаблицаСтруктурныхЕдиниц = Новый ТаблицаЗначений;
			ТаблицаСтруктурныхЕдиниц.Колонки.Добавить("Порядок", ОбщегоНазначения.ОписаниеТипаЧисло(15));
			
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
			МассивТипов.Добавить(БухгалтерскийУчетКлиентСерверПереопределяемый.ТипПодразделения());
			
			ТаблицаСтруктурныхЕдиниц.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));

			Порядок = 1;

			// Добавление подразделения.
			НоваяСтрока = ТаблицаСтруктурныхЕдиниц.Добавить();
			НоваяСтрока.Порядок            = Порядок;
			НоваяСтрока.СтруктурнаяЕдиница = Подразделение;

			// Добавление родителей подразделения.
			МассивПодразделений = ОбщегоНазначенияБПВызовСервера.ПолучитьСписокВышеСтоящихГрупп(Подразделение);
			Для Каждого РодительПодразделения Из МассивПодразделений Цикл

				Порядок = Порядок + 1;

				НоваяСтрока = ТаблицаСтруктурныхЕдиниц.Добавить();
				НоваяСтрока.Порядок            = Порядок;
				НоваяСтрока.СтруктурнаяЕдиница = РодительПодразделения;

			КонецЦикла;

			// Добавление организации.
			НоваяСтрока = ТаблицаСтруктурныхЕдиниц.Добавить();
			НоваяСтрока.Порядок            = Порядок + 1;
			НоваяСтрока.СтруктурнаяЕдиница = Организация;

			// Поиск наименьшей структурной единицы, для которой задано ответственное лицо.
			ЗапросПоЛицам.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			ЗапросПоЛицам.УстановитьПараметр("ВнешнийИсточник", ТаблицаСтруктурныхЕдиниц);
			ЗапросПоЛицам.Текст =
			"ВЫБРАТЬ
			|	ВнешнийИсточник.Порядок,
			|	ВнешнийИсточник.СтруктурнаяЕдиница
			|ПОМЕСТИТЬ ТаблицаСтруктурныхЕдиниц
			|ИЗ
			|	&ВнешнийИсточник КАК ВнешнийИсточник
			|ИНДЕКСИРОВАТЬ ПО
			|	СтруктурнаяЕдиница
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо КАК ОтветственноеЛицо,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность
			|ПОМЕСТИТЬ ОтветственныеЛицаОрганизацийСрезПоследних
			|ИЗ
			|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаСреза, ) КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СтруктурнаяЕдиница,
			|	ОтветственноеЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МИНИМУМ(ТаблицаСтруктурныхЕдиниц.Порядок) КАК Порядок,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо
			|ПОМЕСТИТЬ ОтветственныеЛица
			|ИЗ
			|	ТаблицаСтруктурныхЕдиниц КАК ТаблицаСтруктурныхЕдиниц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтветственныеЛицаОрганизацийСрезПоследних КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|		ПО ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо
			|;
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо
			|ИЗ
			|	ОтветственныеЛицаОрганизацийСрезПоследних
			|";
			МассивФизЛиц = ЗапросПоЛицам.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
			ЗапросПоЛицам.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);

			// Получение информации о должностях и ФИО ответственных лиц.
			ЗапросПоЛицам.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОтветственныеЛица.ОтветственноеЛицо,
			|	ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование КАК ФизическоеЛицоПредставление,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК Должность,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Наименование КАК ДолжностьПредставление
			|ИЗ
			|	ОтветственныеЛица КАК ОтветственныеЛица
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСтруктурныхЕдиниц КАК ТаблицаСтруктурныхЕдиниц
			|		ПО ОтветственныеЛица.Порядок = ТаблицаСтруктурныхЕдиниц.Порядок
			|		ЛЕВОЕ СОЕДИНЕНИЕ ОтветственныеЛицаОрганизацийСрезПоследних КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|		ПО (ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница)
			|			И ОтветственныеЛица.ОтветственноеЛицо = ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо";
			Руководители = ЗапросПоЛицам.Выполнить().Выбрать();
		КонецЕсли;

		Пока Руководители.Следующий() Цикл

			Фамилия       = " ";
			Имя           = " ";
			Отчество      = " ";
			Представление = ОбщегоНазначенияБПВызовСервера.ФамилияИнициалыФизЛица(Руководители.ФизическоеЛицо, Фамилия, Имя, Отчество, ДатаСреза);
			

			ФИО = Новый Структура("Фамилия, Имя, Отчество, Представление", Фамилия, Имя, Отчество, Представление);

			Если Руководители.ОтветственноеЛицо      = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель Тогда
				ДанныеОтветственныхЛиц.Руководитель               			= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.РуководительДолжность      			= Руководители.Должность;
				ДанныеОтветственныхЛиц.РуководительДолжностьПредставление  	= Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.РуководительФИО            			= ФИО;
				ДанныеОтветственныхЛиц.РуководительПредставление  			= Представление;

			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер Тогда
				ДанныеОтветственныхЛиц.ГлавныйБухгалтер           			= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.ГлавныйБухгалтерДолжность  			= Руководители.Должность;
				ДанныеОтветственныхЛиц.ГлавныйБухгалтерДолжностьПредставление= Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.ГлавныйБухгалтерФИО        			= ФИО;
				ДанныеОтветственныхЛиц.ГлавныйБухгалтерПредставление  		= Представление;

			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы Тогда
				ДанныеОтветственныхЛиц.РуководительКадровойСлужбы						= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.РуководительКадровойСлужбыДолжность  			= Руководители.Должность;
				ДанныеОтветственныхЛиц.РуководительКадровойСлужбыДолжностьПредставление = Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.РуководительКадровойСлужбыФИО        			= ФИО;
				ДанныеОтветственныхЛиц.РуководительКадровойСлужбыПредставление	  		= Представление;

			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Кассир Тогда
				ДанныеОтветственныхЛиц.Кассир                     			= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.КассирДолжность      		 		= Руководители.Должность;
				ДанныеОтветственныхЛиц.КассирДолжностьПредставление	 		= Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.КассирФИО            		 		= ФИО;
				ДанныеОтветственныхЛиц.КассирПредставление  				= Представление;

			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаБухгалтерскиеРегистры Тогда
				ДанныеОтветственныхЛиц.ОтветственныйЗаБухгалтерскиеРегистры    				= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.ОтветственныйЗаБухгалтерскиеРегистрыДолжность     	= Руководители.Должность;
				ДанныеОтветственныхЛиц.ОтветственныйЗаБухгалтерскиеРегистрыДолжностьПредставление = Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.ОтветственныйЗаБухгалтерскиеРегистрыФИО 				= ФИО;
				ДанныеОтветственныхЛиц.ОтветственныйЗаБухгалтерскиеРегистрыПредставление 	= Представление;

			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаНалоговыеРегистры Тогда
				ДанныеОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистры    				= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистрыДолжность     	= Руководители.Должность;
				ДанныеОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистрыДолжностьПредставление = Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистрыФИО 				= ФИО;
				ДанныеОтветственныхЛиц.ОтветственныйЗаНалоговыеРегистрыПредставление 	= Представление;
				
			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.УполномоченныйПредставитель Тогда
				ДанныеОтветственныхЛиц.УполномоченныйПредставитель    					= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.УполномоченныйПредставительДолжность     		= Руководители.Должность;
				ДанныеОтветственныхЛиц.УполномоченныйПредставительДолжностьПредставление= Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.УполномоченныйПредставительФИО 					= ФИО;
				ДанныеОтветственныхЛиц.УполномоченныйПредставительПредставление 		= Представление;

			ИначеЕсли Руководители.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Исполнитель Тогда
				ДанныеОтветственныхЛиц.Исполнитель    					= Руководители.ФизическоеЛицо;
				ДанныеОтветственныхЛиц.ИсполнительДолжность     		= Руководители.Должность;
				ДанныеОтветственныхЛиц.ИсполнительДолжностьПредставление= Руководители.ДолжностьПредставление;
				ДанныеОтветственныхЛиц.ИсполнительФИО 					= ФИО;
				ДанныеОтветственныхЛиц.ИсполнительПредставление 		= Представление;

			КонецЕсли;

		КонецЦикла;
		
		ЗапросПоЛицам.МенеджерВременныхТаблиц.Закрыть();

	КонецЕсли;

	Возврат ДанныеОтветственныхЛиц;

КонецФункции

// Функция возвращает массив с датами изменения в ответственных лицах.
//
Функция ДатыИзмененияОтветственныхЛицОрганизаций(Организация) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизаций.Период КАК Период,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизаций.Период,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница = ПодразделенияОрганизаций.Ссылка
	|			И (ПодразделенияОрганизаций.Владелец = &Организация)";
	
	ТаблицаОтветственныеЛица = Запрос.Выполнить().Выгрузить();
	ТаблицаОтветственныеЛица.Индексы.Добавить("ФизическоеЛицо");
	
	МассивДат            = ТаблицаОтветственныеЛица.ВыгрузитьКолонку("Период");
	МассивФизическиеЛица = ТаблицаОтветственныеЛица.ВыгрузитьКолонку("ФизическоеЛицо");
	
	МассивДат            = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивДат);
	МассивФизическиеЛица = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивФизическиеЛица);
	
	ТаблицаФизическиеЛица = КадровыйУчет.ПериодыИзмененияФИОФизическихЛиц(МассивФизическиеЛица);
	
	Для каждого СтрокаТаблицыФизическиеЛица Из ТаблицаФизическиеЛица Цикл
		
		ДатыНазначенияОтвественныхЛиц = ТаблицаОтветственныеЛица.НайтиСтроки(Новый Структура("ФизическоеЛицо", СтрокаТаблицыФизическиеЛица.ФизическоеЛицо));
		Для каждого ДатаНазначенияОтветственногоЛица Из ДатыНазначенияОтвественныхЛиц Цикл
			// Добавляем дату изменения ФИО ответственного лица, только если оно произошло после назначения в должность
			Если ДатаНазначенияОтветственногоЛица.Период < СтрокаТаблицыФизическиеЛица.Период 
					И МассивДат.Найти(СтрокаТаблицыФизическиеЛица.Период) = Неопределено Тогда
			
				МассивДат.Добавить(СтрокаТаблицыФизическиеЛица.Период);
				Прервать;
			
			КонецЕсли; 
		
		КонецЦикла; 
	
	КонецЦикла;

	Возврат МассивДат;

КонецФункции

// Функция возвращает структуру ДанныеУполномоченногоЛица сведения о полномочиях пользователя.
//
// Параметры:
//	Организация 	- СправочникСсылка.Организация
//	Пользователь 	- СправочникСсылка.Пользователи, если не заполнен, то для всех пользователей.
//
Функция ДанныеУполномоченногоЛица(Организация, Пользователь = Неопределено) Экспорт 
	
	Результат = ОтветственныеЛицаБП.ПустаяСтруктураУполномоченногоЛица();

	Запрос = Новый Запрос;
	
	МассивПользователей = Новый Массив;
	МассивПользователей.Добавить(Справочники.Пользователи.ПустаяСсылка());
	Если Пользователь <> Неопределено Тогда
		МассивПользователей.Добавить(Пользователь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Пользователи",МассивПользователей);
	Запрос.Текст = "ВЫБРАТЬ
	               |	УполномоченныеЛица.УполномоченноеЛицо,
	               |	УполномоченныеЛица.ЗаКогоПодписывает,
	               |	УполномоченныеЛица.НомерДатаПриказа,
	               |	ВЫБОР
	               |		КОГДА УполномоченныеЛица.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	               |			ТОГДА 0
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК ТипПользователя
	               |ИЗ
	               |	РегистрСведений.УполномоченныеЛицаОрганизаций КАК УполномоченныеЛица
	               |ГДЕ
	               |	УполномоченныеЛица.Организация = &Организация
	               |	И УполномоченныеЛица.Пользователь В(&Пользователи)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТипПользователя";
		
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл	
		Если Выборка.ЗаКогоПодписывает = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель Тогда 
			Результат.Руководитель 			= Выборка.УполномоченноеЛицо;
			Результат.ПриказРуководитель 	= Выборка.НомерДатаПриказа;
		
		ИначеЕсли Выборка.ЗаКогоПодписывает = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер Тогда 
			Результат.ГлавныйБухгалтер 			= Выборка.УполномоченноеЛицо;
			Результат.ПриказГлавныйБухгалтер 	= Выборка.НомерДатаПриказа;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

// Возвращает ответственное лицо на складе на указанную дату.
//
Функция ОтветственноеЛицоНаСкладе(Склад, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК МОЛ
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, СтруктурнаяЕдиница = &Склад) КАК ОтветственныеЛицаСрезПоследних";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	Иначе
		Возврат Результат[0].МОЛ;
	КонецЕсли;
	
КонецФункции
