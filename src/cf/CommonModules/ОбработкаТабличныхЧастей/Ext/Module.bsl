// Процедура заполняет ставку НДС в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти     - строка табличной части документа,
//  ДокументОбъект           - объект редактируемого документа.
//
Процедура ЗаполнитьСтавкуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти, МетаданныеДокумента) Экспорт
	Перем СтавкаБезНДС;
	
	Если НЕ ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Номенклатура", МетаданныеДокумента, ИмяТабличнойЧасти)
		ИЛИ НЕ ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
		ИЛИ НЕ ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЕстьСчетУчетаНДСПоРеализации	= ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СчетУчетаНДСПоРеализации", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСчетУчета	= ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СчетУчета", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСчетДоходов	= ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СчетДоходов", МетаданныеДокумента, ИмяТабличнойЧасти);
	
	Если ТипЗнч(ДокументОбъект) = Тип("Структура") Тогда
		ЕстьОрганизация				= ДокументОбъект.Свойство("Организация");
		ЕстьДеятельностьНаПатенте	= ДокументОбъект.Свойство("ДеятельностьНаПатенте");
	Иначе
		ЕстьОрганизация				= ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеДокумента);
		ЕстьДеятельностьНаПатенте	= ОбщегоНазначения.ЕстьРеквизитОбъекта("ДеятельностьНаПатенте", МетаданныеДокумента);
	КонецЕсли;
	
	СтавкаБезНДС	= Ложь;
	
	Если ЕстьСчетУчетаНДСПоРеализации 
		ИЛИ МетаданныеДокумента.Имя = "СчетНаОплатуПокупателю" Тогда
		// Документы реализации
		
		Если ЕстьДеятельностьНаПатенте И ДокументОбъект.ДеятельностьНаПатенте Тогда
			
			// Особый порядок налогообложения
			СтавкаБезНДС	= Истина;
		
		ИначеЕсли ЕстьОрганизация
			И (УчетнаяПолитика.ПрименяетсяУСН(ДокументОбъект.Организация, ДокументОбъект.Дата)
				ИЛИ УчетнаяПолитика.ПрименяетсяОсобыйПорядокНалогообложения(ДокументОбъект.Организация, ДокументОбъект.Дата)) Тогда
			
			Если ЕстьСчетУчета И БухгалтерскийУчетВызовСервераПовтИсп.КомиссионныйТовар(СтрокаТабличнойЧасти.СчетУчета) Тогда
				// Комиссионные товары
				СтавкаБезНДС	= Ложь;
			Иначе
				// УСН
				СтавкаБезНДС	= Истина;
			КонецЕсли;
			
		ИначеЕсли ЕстьСчетДоходов И БухгалтерскийУчетВызовСервераПовтИсп.СчетОтноситсяКДеятельностиЕНВД(СтрокаТабличнойЧасти.СчетДоходов) Тогда
			// ЕНВД
			СтавкаБезНДС	= Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	СтавкаНДСПоУмолчанию = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "СтавкаНДС");
	
	Если СтавкаБезНДС Тогда
		СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	ИначеЕсли ЗначениеЗаполнено(СтавкаНДСПоУмолчанию) Тогда
		СтрокаТабличнойЧасти.СтавкаНДС = СтавкаНДСПоУмолчанию;
	Иначе
		СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет единицу и цену по ценам продажи в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части документа,
//  ДокументОбъект       - объект редактируемого документа.
//  ВалютаРегламентированногоУчета - валюта регламентированного учета
//
Процедура ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти, МетаданныеДокумента) Экспорт

	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ТипЦен", МетаданныеДокумента) Тогда
				
		ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		ВалютаДокумента	= ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаДокумента", МетаданныеДокумента),
			ДокументОбъект.ВалютаДокумента, ВалютаРегламентированногоУчета);
			
		ЦенаВключаетНДС = Ложь;
		
		Если ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
			Цена	= Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТабличнойЧасти.Номенклатура,
				ДокументОбъект.ТипЦен, ДокументОбъект.Дата, ВалютаДокумента,
				ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, ВалютаРегламентированногоУчета),
				ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, ВалютаРегламентированногоУчета));
		Иначе
			ЦенаИНДС = Ценообразование.ПолучитьЦенуПоДокументам(СтрокаТабличнойЧасти.Номенклатура,
				Перечисления.СпособыЗаполненияЦен.ПоПродажнымЦенам,
				ДокументОбъект.Дата, ВалютаДокумента,
				ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, ВалютаРегламентированногоУчета),
				ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, ВалютаРегламентированногоУчета));
			Цена = ЦенаИНДС.ПолученнаяЦена;
			ЦенаВключаетНДС = ЦенаИНДС.ЦенаВключаетНДС;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Цена) Тогда
			
			Если ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
				ЦенаВключаетНДС	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
			КонецЕсли;
			
			СуммаВключаетНДС = ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
				И ДокументОбъект.СуммаВключаетНДС;
			
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
				СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);
			Иначе
				СтавкаНДС = 0;
			КонецЕсли;
			
			Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(Цена, ЦенаВключаетНДС, СуммаВключаетНДС, СтавкаНДС);
			
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Цена	= Цена;
	Иначе
		СтрокаТабличнойЧасти.Цена	= 0;
	КонецЕсли;
	
	Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ЕдиницаИзмерения", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
			СтрокаТабличнойЧасти.Коэффициент		= 1;
			СтрокаТабличнойЧасти.ЕдиницаИзмерения	=
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "ЕдиницаИзмерения");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет единицу и цену по ценам продажи в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части документа,
//  ДокументОбъект       - объект редактируемого документа.
//  МетаданныеДокумента  - метаданные
//
Процедура ЗаполнитьЦенуВРозницеТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, МетаданныеДокумента = Неопределено) Экспорт

	Если ТипЗнч(ДокументОбъект) = Тип("Структура") Тогда
		ЕстьСклад	= ДокументОбъект.Свойство("Склад");
	Иначе
		ЕстьСклад	= ОбщегоНазначения.ЕстьРеквизитОбъекта("Склад", МетаданныеДокумента);
	КонецЕсли;
	
	ТипЦенРозничнойТорговли = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	Если ЕстьСклад И ЗначениеЗаполнено(ДокументОбъект.Склад) Тогда
		ТипЦенРозничнойТорговли = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Склад, "ТипЦенРозничнойТорговли");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЦенРозничнойТорговли) Тогда
		
		ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		СтрокаТабличнойЧасти.ЦенаВРознице = Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТабличнойЧасти.Номенклатура,
			ТипЦенРозничнойТорговли, ДокументОбъект.Дата,
			ВалютаРегламентированногоУчета, 1, 1);
	
	Иначе
		
		СтрокаТабличнойЧасти.ЦенаВРознице = 0;
		
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет номер ГТД и Страну происхождения в строке ТЧ
//
// Параметры
//  СтрокаТабличнойЧасти - Строка ТЧ
//  Поступление - Булево, проставлять номер ГТД для поступления или для расхода
//  Организация - СправочникСсылка.Организации, для какой организации определять остатки по номеру ГТД при расходе
//  ДатаОстатков - Дата, на которую определять остатки по номеру ГТД
//  СтруктураСоответствияИмен - Структура, в которой содержатся имена полей ТЧ соответствующие именам "Номенклатура"
//  Комиссионер - СправочникСсылка.Контрагенты, комиссионер, по которому показывать остатки по номеру ГТД
//
Процедура ЗаполнитьНомерГТДИСтрануПроисхождения(СтрокаТабличнойЧасти, ИмяТабличнойЧасти, МетаданныеДокумента) Экспорт

	Если НЕ ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Номенклатура", МетаданныеДокумента, ИмяТабличнойЧасти) ИЛИ НЕ ПолучитьФункциональнуюОпцию("ВедетсяУчетИмпортныхТоваров") Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("НомерГТД", МетаданныеДокумента, ИмяТабличнойЧасти)
			ИЛИ ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтранаПроисхождения", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			РеквизитыНоменклатуры	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТабличнойЧасти.Номенклатура, "НомерГТД, СтранаПроисхождения");
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, РеквизитыНоменклатуры);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьНомерГТДИСтрануПроисхождения()

// Процедура заполняет единицу и цену по ценам покупки в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти           - строка табличной части документа,
//  ДокументОбъект                 - объект редактируемого документа.
//  ПересчитыватьНалогиВЦене       - булево, определяет необходимость пересчета цен по флагам налогов в документе,
//                                   необязательный, по умолчанию Истина.
//
Процедура ЗаполнитьЕдиницуЦенуПокупкиТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти, МетаданныеДокумента, ПересчитыватьНалогиВЦене = Истина) Экспорт

	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ТипЦен", МетаданныеДокумента) Тогда
		
		ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		ВалютаДокумента	= ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаДокумента", МетаданныеДокумента),
			ДокументОбъект.ВалютаДокумента, ВалютаРегламентированногоУчета);
			
		ЦенаВключаетНДС	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
		
		ЦенаВключаетНДС = Ложь;
		
		Если ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
			Цена	= Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТабличнойЧасти.Номенклатура,
				ДокументОбъект.ТипЦен, ДокументОбъект.Дата, ВалютаДокумента,
				ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, ВалютаРегламентированногоУчета),
				ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, ВалютаРегламентированногоУчета));
		Иначе
			ЦенаИНДС = Ценообразование.ПолучитьЦенуПоДокументам(СтрокаТабличнойЧасти.Номенклатура,
					Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам,
					ДокументОбъект.Дата, ВалютаДокумента,
					ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, ВалютаРегламентированногоУчета),
					ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, ВалютаРегламентированногоУчета));
				Цена = ЦенаИНДС.ПолученнаяЦена;
				ЦенаВключаетНДС = ЦенаИНДС.ЦенаВключаетНДС;
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Цена) И ПересчитыватьНалогиВЦене Тогда
			
			Если ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда		
				ЦенаВключаетНДС	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
			КонецЕсли;
			
			СуммаВключаетНДС = ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
				И ДокументОбъект.СуммаВключаетНДС;
			
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
				СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);
			Иначе
				СтавкаНДС = 0;
			КонецЕсли;
			
			Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(Цена, ЦенаВключаетНДС, СуммаВключаетНДС, СтавкаНДС);
			
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Цена	= Цена;
		
		// если в документе существует реквизит КоличествоМест, то рассчитанная цена идет за него
		// вычислим цену за базовую единицу
		Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ЕдиницаИзмерения", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			Если СтрокаТабличнойЧасти.Коэффициент > 0 Тогда
				СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Цена / СтрокаТабличнойЧасти.Коэффициент;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		СтрокаТабличнойЧасти.Цена	= 0;
	КонецЕсли;
	
	Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ЕдиницаИзмерения", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
			СтрокаТабличнойЧасти.Коэффициент		= 1;
			СтрокаТабличнойЧасти.ЕдиницаИзмерения	=
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "ЕдиницаИзмерения");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет единицу и цену по ценам покупки в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти           - строка табличной части документа,
//  ДокументОбъект                 - объект редактируемого документа.
//  ПересчитыватьНалогиВЦене       - булево, определяет необходимость пересчета цен по флагам налогов в документе,
//                                   необязательный, по умолчанию Истина.
//
Процедура ЗаполнитьПлановуюСебестоимостьТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти, МетаданныеДокумента, ТипЦенПлановойСебестоимости, ПересчитыватьНалогиВЦене = Истина) Экспорт

	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Если НЕ ЗначениеЗаполнено(ТипЦенПлановойСебестоимости) Тогда
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ТипЦен", МетаданныеДокумента) Тогда
			ТипЦенПлановойСебестоимости = ДокументОбъект.ТипЦен;
		Иначе
			ТипЦенПлановойСебестоимости = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
		КонецЕсли;
	КонецЕсли;

	ДатаДокумента = ДокументОбъект.Дата;

	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаДокумента", МетаданныеДокумента) Тогда
		ВалютаДокумента = ДокументОбъект.ВалютаДокумента;
	Иначе
		ВалютаДокумента = ВалютаРегламентированногоУчета;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента) Тогда
		СуммаВключаетНДС = ДокументОбъект.СуммаВключаетНДС;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	// Если не заданы значения измерений, то устанавливаем по справочнику
	Если НЕ ЗначениеЗаполнено(ТипЦенПлановойСебестоимости) Тогда

		// берем из самого реквизита Номенклатура
		Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ЕдиницаИзмерения", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмерения  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "ЕдиницаИзмерения");
			СтрокаТабличнойЧасти.Коэффициент       = 1;
			СтрокаТабличнойЧасти.ПлановаяСтоимость = 0;
		КонецЕсли;

	Иначе
		// из регистра
		ПлановаяСтоимость = Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТабличнойЧасти.Номенклатура,
			ТипЦенПлановойСебестоимости, ДатаДокумента, ВалютаДокумента,
			ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, ВалютаРегламентированногоУчета),
			ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, ВалютаРегламентированногоУчета));

		// Если цену заполнили из регистра, то ее надо пересчитывать по флагам налогообложения
		Если НЕ ЗначениеЗаполнено(ПлановаяСтоимость) Тогда
			СтрокаТабличнойЧасти.ПлановаяСтоимость = 0;
		Иначе
			Если ПересчитыватьНалогиВЦене Тогда
				СтрокаТабличнойЧасти.ПлановаяСтоимость = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(ПлановаяСтоимость,
					ТипЦенПлановойСебестоимости.ЦенаВключаетНДС,
					СуммаВключаетНДС, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
			Иначе
				СтрокаТабличнойЧасти.ПлановаяСтоимость = ПлановаяСтоимость;
			КонецЕсли;
		КонецЕсли;

		// Если единица оказалась не заполненной, то заполняем ее основной единицей номенклатуры
		Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ЕдиницаИзмерения", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
				СтрокаТабличнойЧасти.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "ЕдиницаИзмерения");
				СтрокаТабличнойЧасти.Коэффициент      = 1
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	// если в документе существует реквизит СуммаПлановая, то рассчитаем его
	Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаПлановая", МетаданныеДокумента, ИмяТабличнойЧасти)
		И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Количество", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		СтрокаТабличнойЧасти.СуммаПлановая = СтрокаТабличнойЧасти.ПлановаяСтоимость * СтрокаТабличнойЧасти.Количество;
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет цену и сумму в рознице
//
// Параметры:
//  СтрокаТабличнойЧасти           - строка табличной части документа,
//  ДокументОбъект                 - объект редактируемого документа.
//  УчетВПродажныхЦенах      	   - булево
//  РазделятьПоСтавкамНДС      	   - булево
//
Процедура ЗаполнитьЦенуСуммуВРозницеТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, УчетВПродажныхЦенах, РазделятьПоСтавкамНДС) Экспорт

	РеквизитыСклада	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Склад, "ТипСклада, ТипЦенРозничнойТорговли");
	
	Если    РеквизитыСклада.ТипСклада <> Перечисления.ТипыСкладов.ОптовыйСклад
			И УчетВПродажныхЦенах
			И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровПоставщику.ПокупкаКомиссия
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВидДоговора")
				<> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда

		СтрокаТабличнойЧасти.ЦенаВРознице = Ценообразование.ПолучитьЦенуНоменклатуры(
			СтрокаТабличнойЧасти.Номенклатура, РеквизитыСклада.ТипЦенРозничнойТорговли, ДокументОбъект.Дата, Константы.ВалютаРегламентированногоУчета.Получить(), 1, 1);
		СтрокаТабличнойЧасти.СуммаВРознице = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.ЦенаВРознице;
		
		Если РеквизитыСклада.ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка И РазделятьПоСтавкамНДС Тогда
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
				СтрокаТабличнойЧасти.СтавкаНДСВРознице = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "СтавкаНДС");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьЕдиницуЦенуПокупкиТабЧасти()
