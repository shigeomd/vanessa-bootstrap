// Функция возвращает цену компании для требуемой номенклатуры в указанном типе цен , 
// на заданную дату, за заданную единицу измерения, пересчитанную в требуемую валюту по заданному курсу.
//
// Параметры: 
//  Номенклатура         - ссылка на элемент справочника "Номенклатура", для которого надо получить цену,
//  ТипЦен               - ссылка на элемент справочника "Типы цен", определяет цену какого типа надо получить,
//  Дата                 - дата, на которую надо получить цену, если не заполнено, то берется рабочая дата
//  ЕдиницаИзмерения     - ссылка на элемент справочника "Единицы измерения", определяет для какой единицы надо получить 
//                         цену, если не заполнен, то заполняется единицей цены
//  Валюта               - ссылка на элемент справочника "Валюты", определяет валюту. в которой надо вернуть цену,
//                         если не заполнен, то заполняется валютой цены
//  Курс                 - число, курс требуемой валюты, если не заполнен, берется курс из регистра 
//                         сведений "Курсы валют",
//  Кратность            - число, кратность требуемой валюты, если не заполнена, берется курс из регистра 
//                         сведений "Курсы валют",
//
// Возвращаемое значение:
//  Число, рассчитанное значение цены.
//
Функция ПолучитьЦенуНоменклатуры(Номенклатура, ТипЦен, Дата, Валюта = Неопределено, Курс = 0, Кратность = 1) Экспорт

	ПолученнаяЦена = 0;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата",         Дата);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТипЦен",       ТипЦен);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Валюта
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, Номенклатура = &Номенклатура И ТипЦен = &ТипЦен) КАК ЦеныНоменклатуры";

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПолученнаяЦена = Выборка.Цена;
		ВалютаЦены     = Выборка.Валюта;
	КонецЕсли;

	Если НЕ (ВалютаЦены = Валюта) И НЕ (Валюта = Неопределено) И НЕ (ВалютаЦены = Неопределено) Тогда

		СтруктураКурсаЦены = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаЦены, Дата);
		ПолученнаяЦена     = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
			ПолученнаяЦена, ВалютаЦены, Валюта, 
		    СтруктураКурсаЦены.Курс, Курс, 
		    СтруктураКурсаЦены.Кратность, Кратность);

	ИначеЕсли Валюта = Неопределено Тогда
		Валюта = ВалютаЦены;
	КонецЕсли;

	Возврат ПолученнаяЦена;

КонецФункции // ПолучитьЦенуНоменклатуры()

Функция ПолучитьЦенуПоДокументам(Номенклатура, СпособЗаполненияЦены, Дата, Валюта = Неопределено, Курс = 0, Кратность = 1) Экспорт
	
	ПолученнаяЦена 	= 0;
	ЦенаВключаетНДС	= Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура",     	  Номенклатура);
	Запрос.УстановитьПараметр("СпособЗаполненияЦены", СпособЗаполненияЦены);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЦеныНоменклатурыДокументов.Цена,
	               |	ЦеныНоменклатурыДокументов.Валюта,
	               |	ЦеныНоменклатурыДокументов.ЦенаВключаетНДС
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатурыДокументов КАК ЦеныНоменклатурыДокументов
	               |ГДЕ
	               |	ЦеныНоменклатурыДокументов.Номенклатура = &Номенклатура
	               |	И ЦеныНоменклатурыДокументов.СпособЗаполненияЦены = &СпособЗаполненияЦены";

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПолученнаяЦена  = Выборка.Цена;
		ВалютаЦены      = Выборка.Валюта;
		ЦенаВключаетНДС = Выборка.ЦенаВключаетНДС;
	КонецЕсли;
	
	Если НЕ (ВалютаЦены = Валюта) И НЕ (Валюта = Неопределено) И НЕ (ВалютаЦены = Неопределено) Тогда

		СтруктураКурсаЦены = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаЦены, Дата);
		ПолученнаяЦена     = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
			ПолученнаяЦена, ВалютаЦены, Валюта, 
		    СтруктураКурсаЦены.Курс, Курс, 
		    СтруктураКурсаЦены.Кратность, Кратность);

	ИначеЕсли Валюта = Неопределено Тогда
		Валюта = ВалютаЦены;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ПолученнаяЦена",  ПолученнаяЦена);
	СтруктураВозврата.Вставить("ЦенаВключаетНДС", ЦенаВключаетНДС);
	
	Возврат СтруктураВозврата;

КонецФункции

// Возвращает таблицу цен номенклатуры
//
// Параметры:
//  МассивНоменклатуры - массив номенклатуры
//  ТипЦен             - тип цен
//  Дата               - дата цен
//
// Возвращаемое значение:
//  Таблица значений, содержащая цены, валюты цен и курсы валют на переданную дату
//
Функция ПолучитьТаблицуЦенНоменклатуры(МассивНоменклатуры, ТипЦен, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",				Дата);
	Запрос.УстановитьПараметр("ТипЦен",				ТипЦен);
	Запрос.УстановитьПараметр("МассивНоменклатуры",	МассивНоменклатуры);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта,
	|	ЦеныНоменклатурыСрезПоследних.ТипЦен
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&Период,
	|			ТипЦен = &ТипЦен
	|				И Номенклатура В (&МассивНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Валюта КАК Валюта,
	|	ЕСТЬNULL(КурсыВалют.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК Кратность,
	|	ТипыЦенНоменклатуры.ЦенаВключаетНДС
	|ИЗ
	|	ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО ЦеныНоменклатуры.Валюта = КурсыВалют.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыЦенНоменклатуры КАК ТипыЦенНоменклатуры
	|		ПО ЦеныНоменклатуры.ТипЦен = ТипыЦенНоменклатуры.Ссылка";
	
	ТаблицаЦенНоменклатуры = Запрос.Выполнить().Выгрузить();
	ТаблицаЦенНоменклатуры.Индексы.Добавить("Номенклатура");
	
	Возврат ТаблицаЦенНоменклатуры;
	
КонецФункции

Функция ПолучитьТаблицуЦенНоменклатурыДокументов(МассивНоменклатуры, СпособЗаполненияЦены, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",					Дата);	
	Запрос.УстановитьПараметр("СпособЗаполненияЦены",	СпособЗаполненияЦены);
	Запрос.УстановитьПараметр("МассивНоменклатуры",		МассивНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыДокументов.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыДокументов.Цена КАК Цена,
	|	ЦеныНоменклатурыДокументов.Валюта КАК Валюта,
	|	ЦеныНоменклатурыДокументов.ЦенаВключаетНДС
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыДокументов КАК ЦеныНоменклатурыДокументов
	|ГДЕ
	|	ЦеныНоменклатурыДокументов.Номенклатура В(&МассивНоменклатуры)
	|	И ЦеныНоменклатурыДокументов.СпособЗаполненияЦены = &СпособЗаполненияЦены
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Валюта КАК Валюта,
	|	ЕСТЬNULL(КурсыВалют.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК Кратность,
	|	ЦеныНоменклатуры.ЦенаВключаетНДС
	|ИЗ
	|	ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО ЦеныНоменклатуры.Валюта = КурсыВалют.Валюта";
	
	ТаблицаЦенНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЦенНоменклатуры;
	
КонецФункции

Процедура ОбновитьЦеныНоменклатуры(ДокументСсылка, СпособЗаполненияЦены, Валюта = Неопределено, СуммаВключаетНДС = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда 
		Валюта = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СпособЗаполненияЦены", СпособЗаполненияЦены);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",	  СуммаВключаетНДС);
	Запрос.УстановитьПараметр("Валюта",				  Валюта);
	Запрос.УстановитьПараметр("Ссылка",				  ДокументСсылка);
	
	Запрос.Текст = Документы[ДокументСсылка.Метаданные().Имя].ТекстЗапросаДанныеДляОбновленияЦенДокументов()
	+ "ВЫБРАТЬ
	  |	ТаблицаНоменклатуры.Номенклатура,
	  |	МАКСИМУМ(ТаблицаНоменклатуры.Цена) КАК Цена,
	  |	ТаблицаНоменклатуры.Валюта,
	  |	ТаблицаНоменклатуры.СпособЗаполненияЦены,
	  |	ТаблицаНоменклатуры.ЦенаВключаетНДС
	  |ПОМЕСТИТЬ ТаблицаНоменклатурыСМаксимальнойЦеной
	  |ИЗ
	  |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	ТаблицаНоменклатуры.Номенклатура,
	  |	ТаблицаНоменклатуры.Валюта,
	  |	ТаблицаНоменклатуры.СпособЗаполненияЦены,
	  |	ТаблицаНоменклатуры.ЦенаВключаетНДС
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной.Номенклатура,
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной.Цена КАК Цена,
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной.Валюта,
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной.СпособЗаполненияЦены КАК СпособЗаполненияЦены,
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной.ЦенаВключаетНДС
	  |ИЗ
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной КАК ТаблицаНоменклатурыСМаксимальнойЦеной
	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыДокументов КАК ЦеныНоменклатурыДокументов
	  |		ПО ТаблицаНоменклатурыСМаксимальнойЦеной.Номенклатура = ЦеныНоменклатурыДокументов.Номенклатура
	  |			И ТаблицаНоменклатурыСМаксимальнойЦеной.Валюта = ЦеныНоменклатурыДокументов.Валюта
	  |			И ТаблицаНоменклатурыСМаксимальнойЦеной.СпособЗаполненияЦены = ЦеныНоменклатурыДокументов.СпособЗаполненияЦены
	  |ГДЕ
	  |	ТаблицаНоменклатурыСМаксимальнойЦеной.Цена <> ЕСТЬNULL(ЦеныНоменклатурыДокументов.Цена, 0)";
	
	ТаблицаЦенНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЦенНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	ЗначенияБлокировки = Новый Соответствие;
	ЗначенияБлокировки.Вставить("СпособЗаполненияЦены", СпособЗаполненияЦены);

	СтруктураПараметровБлокировки = Новый Структура();
	СтруктураПараметровБлокировки.Вставить("ТипТаблицы",     "РегистрСведений");
	СтруктураПараметровБлокировки.Вставить("ИмяТаблицы",     "ЦеныНоменклатурыДокументов");
	СтруктураПараметровБлокировки.Вставить("ИсточникДанных", ТаблицаЦенНоменклатуры);

	ОписаниеИсточника = Новый Соответствие;
	ОписаниеИсточника.Вставить("Номенклатура", "Номенклатура");

	ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, ЗначенияБлокировки, ОписаниеИсточника);
	
	Попытка
		
		Для Каждого Стр Из ТаблицаЦенНоменклатуры Цикл
			
			МенеджерЗаписи = РегистрыСведений.ЦеныНоменклатурыДокументов.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Стр);
			МенеджерЗаписи.Записать();
			
		КонецЦикла;			
		ЗафиксироватьТранзакцию();
		
	Исключение
		//Обновленные данные о ценах записываюся полностью по документу или не записываются вообще.
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с формой цен и валют.

// Позволяет получить список реквизитов документа, необходимых для дальнейшей
// передачи в обработку заполнения цен и валют.
//
// Параметры: 
//  ДокументОбъект      - объект документа, для реквизитов будет производится заполнение
//  СтруктураИсключений - структура, в которую передаются те исключения, которые или невозможно
//                        определить по метаданным, или, несмотря ни на что, нельзя включать в
//                        возвращаемую структуру.
//                        В структуре - ключ = имя реквизита, значение = истина (необходимо добавить
//                        в структуру) или ложь (нельзя добавлять в структуру)
//
// Возвращаемое значение:
//  Сформированная структура реквизитов документа.
//
Функция ПолучитьСтруктуруРеквизитовДокументаДляЦенообразования(ДокументОбъект, СтруктураИсключений = Неопределено) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	// Зададим, какие реквизиты вообще нам могут быть нужны
	СтруктураВозможныхВариантовРеквизитов = Новый Структура();
	СтруктураВозможныхВариантовРеквизитов.Вставить("ТипЦен");
	СтруктураВозможныхВариантовРеквизитов.Вставить("ВалютаДокумента");
	СтруктураВозможныхВариантовРеквизитов.Вставить("КурсДокумента");
	СтруктураВозможныхВариантовРеквизитов.Вставить("КратностьДокумента");
	СтруктураВозможныхВариантовРеквизитов.Вставить("КурсВзаиморасчетов");
	СтруктураВозможныхВариантовРеквизитов.Вставить("КратностьВзаиморасчетов");
	СтруктураВозможныхВариантовРеквизитов.Вставить("СуммаВключаетНДС");

	// Зададим, какие реквизиты надо редактировать.
	СтруктураРеквизитовДокумента = Новый Структура();
	Для Каждого ТекущийЭлементСтруктуры Из СтруктураВозможныхВариантовРеквизитов Цикл
		НужныйРеквизитДокумента = ТекущийЭлементСтруктуры.Ключ;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(НужныйРеквизитДокумента, МетаданныеДокумента) Тогда
			СтруктураРеквизитовДокумента.Вставить(НужныйРеквизитДокумента);
		КонецЕсли;
	КонецЦикла;

	// теперь проверим исключения
	Если СтруктураИсключений<>Неопределено Тогда
		Для Каждого ТекущийЭлементСтруктуры Из СтруктураИсключений Цикл
			Если ТекущийЭлементСтруктуры.Значение Тогда
				// надо добавить реквизит, если его еще нет
				СтруктураРеквизитовДокумента.Вставить(ТекущийЭлементСтруктуры.Ключ);
			Иначе
				// надо удалить реквизит, если он есть
				СтруктураРеквизитовДокумента.Удалить(ТекущийЭлементСтруктуры.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат СтруктураРеквизитовДокумента;

КонецФункции

// В строке табличной части заполняется плановая себестоимость номенклатуры.
//
// Параметры: 
//  СтрокаТЧ - строка табличной части, в которой надо заполнить плановую себестоимость;
//  Дата     - дата, на которую надо получить плановую себестоимость.
//
Процедура ЗаполнитьПлановуюСебестоимость(СтрокаТЧ, Дата) Экспорт

	ТипЦенПлановойСебестоимости    = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	Если ЗначениеЗаполнено(ТипЦенПлановойСебестоимости) Тогда
		СтрокаТЧ.ПлановаяСтоимость = ПолучитьЦенуНоменклатуры(
			СтрокаТЧ.Номенклатура,
			ТипЦенПлановойСебестоимости, Дата,
			ВалютаРегламентированногоУчета, 1);
	Иначе
		СтрокаТЧ.ПлановаяСтоимость = 0;	
	КонецЕсли;

КонецПроцедуры

