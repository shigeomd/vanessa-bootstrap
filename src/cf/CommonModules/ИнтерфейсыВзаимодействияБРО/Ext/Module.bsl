//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНТЕРФЕЙСА ВЗАИМОДЕЙСТВИЯ С СЕРВИСОМ "СПИСОК ЗАДАЧ БУХГАЛТЕРА"
//

// Описывает перечень требований, которые могут быть исполнены объектами БРО.
//
// Возвращаемое значение:
//  Соответствие - 
//   Ключ - Строка, имя требования (может содержать точку - ".")
//   Значение - Строка, имя регл. отчета
Функция РеглОтчетыИсполнителиТребований() Экспорт
	
	// У перечисленных здесь отчетов должен быть метод ДанныеРеглОтчета()
	
	ИсполнителиТребований = Новый Соответствие;
	// Бухгалтерская отчетность
	ИсполнителиТребований.Вставить("БухгалтерскаяОтчетность",                                "РегламентированныйОтчетБухОтчетность");
	ИсполнителиТребований.Вставить("БухгалтерскаяОтчетность.2013_МалыеПредприятия",          "РегламентированныйОтчетБухОтчетностьМП");
	ИсполнителиТребований.Вставить("БухгалтерскаяОтчетность.2013_НекоммерческиеОрганизации", "РегламентированныйОтчетБухОтчетность");
	ИсполнителиТребований.Вставить("БухгалтерскаяОтчетность.2013_СоциальноОриентированные",  "РегламентированныйОтчетБухОтчетностьСОНКО");
	
	// Федеральные налоги
	ИсполнителиТребований.Вставить("НалогНаПрибыль",                     "РегламентированныйОтчетПрибыль");
	
	ИсполнителиТребований.Вставить("УСН.2013_УплатаОрганизация",         "РегламентированныйОтчетУСН"); // БРО предоставляет инструменты только для "годовых" правил
	ИсполнителиТребований.Вставить("УСН.2013_ДекларацияОрганизация",     "РегламентированныйОтчетУСН");
	ИсполнителиТребований.Вставить("УСН.2013_УплатаПредприниматель",     "РегламентированныйОтчетУСН");
	ИсполнителиТребований.Вставить("УСН.2013_ДекларацияПредприниматель", "РегламентированныйОтчетУСН");

	ИсполнителиТребований.Вставить("НДС",                            			    "РегламентированныйОтчетНДС");
	ИсполнителиТребований.Вставить("НДФЛ_Предприниматель",              		    "РегламентированныйОтчет3НДФЛ");
	ИсполнителиТребований.Вставить("ЕНВД",                               			"РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход");
	ИсполнителиТребований.Вставить("СтраховыеВзносы.2013_ОтчетностьФСС",            "РегламентированныйОтчет4ФСС");
	ИсполнителиТребований.Вставить("СтраховыеВзносы.2014_ОтчетностьФССБумажная",    "РегламентированныйОтчет4ФСС");
	ИсполнителиТребований.Вставить("СтраховыеВзносы.2014_ОтчетностьФССЭлектронная", "РегламентированныйОтчет4ФСС");
	ИсполнителиТребований.Вставить("СтраховыеВзносы.2013_ОтчетностьПФР",            "РегламентированныйОтчетРСВ1");
	ИсполнителиТребований.Вставить("СтраховыеВзносы.2014_ОтчетностьПФРБумажная",    "РегламентированныйОтчетРСВ1");
 	ИсполнителиТребований.Вставить("СтраховыеВзносы.2014_ОтчетностьПФРЭлектронная", "РегламентированныйОтчетРСВ1");
	
	ИсполнителиТребований.Вставить("ЕСХН",                                          "РегламентированныйОтчетЕСХН");
	ИсполнителиТребований.Вставить("НДПИ",                                          "РегламентированныйОтчетНДПИ");
	ИсполнителиТребований.Вставить("ВодныйНалог",                                   "РегламентированныйОтчетВода");
	ИсполнителиТребований.Вставить("НалогНаИгорныйБизнес",                          "РегламентированныйОтчетНалогНаИгорныйБизнес");
	ИсполнителиТребований.Вставить("РозничныеЦеныНаТабак",                          "РегламентированныйОтчетРозничныеЦеныНаТабак");
	
	// Росприроднадзор
	ИсполнителиТребований.Вставить("Росприроднадзор.2014_ПлатаЗаНегативноеВоздействиеНаОкружающуюСреду", "РегламентированныйОтчетРасчетПлатыОкрСредаСвод");
	ИсполнителиТребований.Вставить("Росприроднадзор.2014_ПлатаЗаНегативноеВоздействиеУплата",            "РегламентированныйОтчетРасчетПлатыОкрСредаСвод");
	ИсполнителиТребований.Вставить("Росприроднадзор.2014_ОтходыМСП",                                     "РегламентированныйОтчетОтходыСубъектовМСП");
	ИсполнителиТребований.Вставить("Росприроднадзор.2014_2ТПОтходы",                                     "РегламентированныйОтчетФорма2ТПОтходы");
	
	// Акцизы
	ИсполнителиТребований.Вставить("Акцизы.2013_УплатаСвидетельство",     "РегламентированныйОтчетАкцизыПриложение1");
	ИсполнителиТребований.Вставить("Акцизы.2013_ДекларацияСвидетельство", "РегламентированныйОтчетАкцизыПриложение1");
	ИсполнителиТребований.Вставить("Акцизы.2013_Декларация",              "РегламентированныйОтчетАкцизыПриложение1");
	ИсполнителиТребований.Вставить("Акцизы.2013_Уплата",                  "РегламентированныйОтчетАкцизыПриложение1");
	ИсполнителиТребований.Вставить("Акцизы.2013_ДекларацияТабак",         "РегламентированныйОтчетАкцизыТабак"); 
	ИсполнителиТребований.Вставить("Акцизы.2013_УплатаТабак",             "РегламентированныйОтчетАкцизыТабак");
	ИсполнителиТребований.Вставить("Акцизы.2013_ИзвещениеАванс",          "РегламентированныйОтчетИзвещениеОбУплатеАвансовогоПлатежаАкциза");
	ИсполнителиТребований.Вставить("Акцизы.2013_ОсвобождениеАванс",       "РегламентированныйОтчетИзвещениеОбОсвАвансовогоПлатежаАкциза");
	
	// Региональные и местные налоги
	ИсполнителиТребований.Вставить("НалогНаИмущество",                       "РегламентированныйОтчетИмущество");
	ИсполнителиТребований.Вставить("НалогНаИмущество.2013_Налоговый_расчет", "РегламентированныйОтчетАвансыИмущество");
	ИсполнителиТребований.Вставить("НалогНаИмущество.2013_Аванс",            "РегламентированныйОтчетАвансыИмущество");
	ИсполнителиТребований.Вставить("ТранспортныйНалог",                      "РегламентированныйОтчетТранспортныйНалог");
	ИсполнителиТребований.Вставить("ЗемельныйНалог",                         "РегламентированныйОтчетЗемельныйНалог");
	ИсполнителиТребований.Вставить("ЗемельныйНалог.2015_Декларация",         "РегламентированныйОтчетЗемельныйНалог");
	ИсполнителиТребований.Вставить("ЗемельныйНалог.2015_Налог_Год",          "РегламентированныйОтчетЗемельныйНалог");
	ИсполнителиТребований.Вставить("ЗемельныйНалог.2015_Аванс",              "РегламентированныйОтчетЗемельныйНалог");
	
	// Статистика
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П1",                     "РегламентированныйОтчетСтатистикаФормаП1");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П1_3",                   "РегламентированныйОтчетСтатистикаФормаП1Приложение3");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П1СХ",                   "РегламентированныйОтчетСтатистикаФормаП1СХ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П2",                     "РегламентированныйОтчетСтатистикаФормаП2");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П2инвест" ,              "РегламентированныйОтчетСтатистикаФормаП2инв");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П2краткая",              "РегламентированныйОтчетСтатистикаФормаП2к");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П3",                     "РегламентированныйОтчетСтатистикаФормаП3");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П4",                     "РегламентированныйОтчетСтатистикаФормаП4");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2103_П5м",                    "РегламентированныйОтчетСтатистикаФормаП5М");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_5З",                     "РегламентированныйОтчетСтатистикаФорма5З");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П6",                     "РегламентированныйОтчетСтатистикаФормаП6");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Предприятие",           "РегламентированныйОтчетСтатистикаФорма1П");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ПМ",                     "РегламентированныйОтчетСтатистикаФормаПМ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_МПМикро",                "РегламентированныйОтчетСтатистикаФормаМПм");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Инвест",                "РегламентированныйОтчетСтатистикаФорма1И");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1РПКвартал",             "РегламентированныйОтчетСтатистикаФорма1РП");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1РПГод",                 "РегламентированныйОтчетСтатистикаФорма1РП");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_3Информ",                "РегламентированныйОтчетСтатистикаФорма3Информ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_3Ф",                     "РегламентированныйОтчетСтатистикаФорма3Ф");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ЗПНаука",                "РегламентированныйОтчетСтатистикаФормаЗПНаука");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ЗПОбразование",          "РегламентированныйОтчетСтатистикаФормаЗПОбразование");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ЗПЗдрав",                "РегламентированныйОтчетСтатистикаФормаЗПЗдрав");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ЗПКультура",             "РегламентированныйОтчетСтатистикаФормаЗПКультура");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ЗПСоц",                  "РегламентированныйОтчетСтатистикаФормаЗПСоц");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_11Краткая",              "РегламентированныйОтчетСтатистикаФорма11К");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_11",                     "РегламентированныйОтчетСтатистикаФорма11");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1торги",                 "РегламентированныйОтчетСтатистикаФорма1Т");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Квотирование",          "РегламентированныйОтчетСтатистика1Квотирование");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_П4НЗ",                   "РегламентированныйОтчетСтатистикаФормаП4НЗ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_С1",                     "РегламентированныйОтчетСтатистикаФормаС1");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_С2",                     "РегламентированныйОтчетСтатистикаФормаС2");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ДАП",                   "РегламентированныйОтчетСтатистикаФорма1ДАП");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ДАС",                    "РегламентированныйОтчетСтатистикаФормаДАС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_22ЖКХсв",                "РегламентированныйОтчетСтатистикаФорма22ЖКХсв");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ПМПром",                 "РегламентированныйОтчетСтатистикаФормаПМПром");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ПМТорг",                 "РегламентированныйОтчетСтатистикаФормаПМТорг");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Автотранс",             "РегламентированныйОтчетСтатистикаФорма1Автотранс");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Алкоголь",              "РегламентированныйОтчетСтатистикаФорма1Алкоголь");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1АлкогольОпт",           "РегламентированныйОтчетСтатистикаФорма1АлкогольОпт");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2ЦеныПриобр",            "РегламентированныйОтчетСтатистикаФорма2ЦеныПриобр");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_9КС",                    "РегламентированныйОтчетСтатистикаФорма9КС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ИПсвед",                "РегламентированныйОтчетСтатистикаФорма1ИПсвед");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Услуги",                "РегламентированныйОтчетСтатистикаФорма1Услуги");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ЦеныПроизвГодовая",     "РегламентированныйОтчетСтатистикаФорма1ЦеныПроизв");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ЦеныПроизвМесячная",    "РегламентированныйОтчетСтатистикаФорма1ЦеныПроизв");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ДАуслуги",              "РегламентированныйОтчетСтатистикаФорма1ДАуслуги");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_65АвтотрансГодовая",     "РегламентированныйОтчетСтатистикаФорма65Автотранс");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_65АвтотрансКвартальная", "РегламентированныйОтчетСтатистикаФорма65Автотранс");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Закупки",               "РегламентированныйОтчетСтатистикаФорма1Закупки");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_3СБвывоз",               "РегламентированныйОтчетСтатистикаФорма3СБвывоз");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_11Сделка",               "РегламентированныйОтчетСтатистикаФорма11Сделка");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ДАППМ",                  "РегламентированныйОтчетСтатистикаФормаДАППМ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_3ТОРГПМ",                "РегламентированныйОтчетСтатистикаФорма3ТОРГПМ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2НаукаКр",               "РегламентированныйОтчетСтатистикаФорма2НаукаКр");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ТРавто",                "РегламентированныйОтчетСтатистикаФорма1ТРавто");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Учет",                  "РегламентированныйОтчетСтатистикаФорма1Учет");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_8ВЭСуслуги",             "РегламентированныйОтчетСтатистикаФорма8ВЭСуслуги");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ВЭС",                   "РегламентированныйОтчетСтатистикаФорма1ВЭС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_11ТЭР",                  "РегламентированныйОтчетСтатистикаФорма11ТЭР");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_4ТЭР",                   "РегламентированныйОтчетСтатистикаФорма4ТЭР");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1МБ",                    "РегламентированныйОтчетСтатистикаФорма1МБ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_12Ф",                    "РегламентированныйОтчетСтатистикаФорма12Ф");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ТГМС",                  "РегламентированныйОтчетСтатистикаФорма1ТГМС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ТОРГ",                  "РегламентированныйОтчетСтатистикаФорма1ТОРГ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_7Травматизм",            "РегламентированныйОтчетСтатистикаФорма7Травматизм");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_26ЖКХ",                  "РегламентированныйОтчетСтатистикаФорма26ЖКХ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ИЖС",                   "РегламентированныйОтчетСтатистикаФорма1ИЖС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Администрация",         "РегламентированныйОтчетСтатистикаФорма1Администрация");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_ДАФЛ",                   "РегламентированныйОтчетСтатистикаФормаДАФЛ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_МПмсх",                  "РегламентированныйОтчетСтатистикаФормаМПмсх");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ЦеныПриобр",            "РегламентированныйОтчетСтатистикаФорма1ЦеныПриобр");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1МО",                    "РегламентированныйОтчетСтатистикаФорма1МО");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2014_1ДАуслуги",              "РегламентированныйОтчетСтатистикаФорма1ДАуслуги");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2014_8ВЭСуслуги",             "РегламентированныйОтчетСтатистикаФорма8ВЭСуслуги");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1натураБМ",              "РегламентированныйОтчетСтатистикаФорма1НатураБМ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2012_2ТПВоздух",              "РегламентированныйОтчетСтатистикаФорма2ТПВоздух");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2012_12Строительство",        "РегламентированныйОтчетСтатистикаФорма12Строительство");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2012_4Запасы",                "РегламентированныйОтчетСтатистикаФорма4Запасы");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Технология",            "РегламентированныйОтчетСтатистикаФорма1Технология");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_4Инновация",             "РегламентированныйОтчетСтатистикаФорма4Инновация");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_24Энергетика",           "РегламентированныйОтчетСтатистикаФорма24Энергетика");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_14МЕТлом",               "РегламентированныйОтчетСтатистикаФорма14МЕТлом");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2МС",                    "РегламентированныйОтчетСтатистикаФорма2МС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2ГСГЗ",                  "РегламентированныйОтчетСтатистикаФорма2ГСГЗ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Туст",                  "РегламентированныйОтчетСтатистикаФорма1Туст");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_3Приватизация",          "РегламентированныйОтчетСтатистикаФорма3Приватизация");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2Приватизация",          "РегламентированныйОтчетСтатистикаФорма2Приватизация");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Тчзп",                  "РегламентированныйОтчетСтатистикаФорма1Тчзп");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_85К",                    "РегламентированныйОтчетСтатистикаФорма85К");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ТЕП",                   "РегламентированныйОтчетСтатистикаФорма1ТЕП");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ФПинд",                 "РегламентированныйОтчетСтатистикаФорма1ФПинд");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Кадры",                 "РегламентированныйОтчетСтатистикаФорма1Кадры");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1КСРКраткая",            "РегламентированныйОтчетСтатистикаФорма1КСРКраткая");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1КСР",                   "РегламентированныйОтчетСтатистикаФорма1КСР");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ДМ",                    "РегламентированныйОтчетСтатистикаФорма1ДМ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2ДМДавальческоеСырье",   "РегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырье");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_4ДМ",                    "РегламентированныйОтчетСтатистикаФорма4ДМ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1РабочаяСила",           "РегламентированныйОтчетСтатистикаФорма1РабочаяСила");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2014_9ФПФ",                   "РегламентированныйОтчетСтатистикаФорма9ФПФ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2014_9ФСС",                   "РегламентированныйОтчетСтатистикаФорма9ФСС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2014_9ФОМС",                  "РегламентированныйОтчетСтатистикаФорма9ФОМС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ФП",                    "РегламентированныйОтчетСтатистикаФорма1ФП");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2014_1СХцены",                "РегламентированныйОтчетСтатистикаФорма1СХцены");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2СБСеверСр",             "РегламентированныйОтчетСтатистикаФорма2СБСеверСр");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_2МПИнн",                 "РегламентированныйОтчетСтатистикаФорма2МПинн");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1Контракт",              "РегламентированныйОтчетСтатистикаФорма1Контракт");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_11НА",                   "РегламентированныйОтчетСтатистикаФорма11НА");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1РЖ",                    "РегламентированныйОтчетСтатистикаФорма1РЖ");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1МС",                    "РегламентированныйОтчетСтатистикаФорма1МС");
	ИсполнителиТребований.Вставить("СтатистическаяОтчетность.2013_1ГС",                    "РегламентированныйОтчетСтатистикаФорма1ГС");
	
	// Алкогольные отчеты
	Для НомерПриложения = 1 По 12 Цикл
		
		ИмяОтчета = "РегламентированныйОтчетАлкоПриложение" + НомерПриложения;
		
		ИмяПравила = "ДекларированиеАлкогольнойПродукции.2013_Приложение" + НомерПриложения;
		ИсполнителиТребований.Вставить(ИмяПравила, ИмяОтчета);
		
		ИмяПравила = "ДекларированиеАлкогольнойПродукции.2013_Приложение" + НомерПриложения + "Квартал4";
		ИсполнителиТребований.Вставить(ИмяПравила, ИмяОтчета);
		
		ИмяПравила = "ДекларированиеАлкогольнойПродукции.2014_Приложение" + НомерПриложения;
		ИсполнителиТребований.Вставить(ИмяПравила, ИмяОтчета);
		
	КонецЦикла;
	
	// Прочие отчеты
	ИсполнителиТребований.Вставить("СведенияОСреднесписочнойЧисленности", "РегламентированныйОтчетСведенияОСреднесписочнойЧисленностиРаботников");
	ИсполнителиТребований.Вставить("ЕдинаяУпрощеннаяДекларация",          "РегламентированныйОтчетЕУНД");
	ИсполнителиТребований.Вставить("РасчетСуммыУтилизационногоСбора",     "РегламентированныйОтчетУтилизационныйСбор");
	ИсполнителиТребований.Вставить("СоответствиеУсловийТруда",            "РегламентированныйОтчетСоответствиеУсловийТруда");
			
	// Так как поиск в соответствии регистрозависимый, то приведем все ключи к верхнему регистру.
	ИсполнителиТребованийВРег = Новый Соответствие;
	
	Для Каждого КлючИЗначение Из ИсполнителиТребований Цикл
		ИсполнителиТребованийВРег.Вставить(ВРег(КлючИЗначение.Ключ), КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат ИсполнителиТребованийВРег;
	
КонецФункции

// Описывает перечень задач бухгалтера (налогов, отчетов), которые могут быть исполнены объектами БРО.
//
// Возвращаемое значение:
//  Соответствие - 
//   Ключ - Строка, имя задачи (не содержит точку - ".")
//   Значение - Массив строк - имен регл. отчетов
Функция РеглОтчетыИсполнителиЗадачБухгалтера() Экспорт
	
	НалогиОтчеты = Новый Соответствие;
	
	Для Каждого Требование Из РеглОтчетыИсполнителиТребований() Цикл
		ИмяНалогаОтчета = ИмяНалогаОтчета(Требование.Ключ);
		РеглОтчеты = НалогиОтчеты[ИмяНалогаОтчета];
		Если РеглОтчеты = Неопределено Тогда
			РеглОтчеты = Новый Массив;
			НалогиОтчеты.Вставить(ИмяНалогаОтчета, РеглОтчеты);
		КонецЕсли;
		РеглОтчеты.Добавить(Требование.Значение);
	КонецЦикла;
	
	Возврат НалогиОтчеты;
	
КонецФункции

// Определяет, обрабатывает ли БРО указанное требование
//
// Параметры:
//  Требование - Строка, имя требования (может содержать точку - ".")
//
// Возвращаемое значение - Булево
Функция ТребованиеОбрабатывается(Требование) Экспорт
	
	Возврат ИмяРеглОтчета(Требование) <> Неопределено;
	
КонецФункции

// Описывает форму нового или существующего регл. отчета, который позволяет выполнить требование
//
// Параметры:
//  Требование    - Строка, имя требования (может содержать точку - ".")
//  Организация   - СправочникСсылка.Организация
//  НачалоПериода - Дата
//  КонецПериода  - Дата
//  Периодичность - ПеречислениеСсылка.Периодичность
//
// Возвращаемое значение - Структура, содержащая свойства
//  Имя - Строка, имя формы
//  Параметры - Структура, параметры формы
Функция ОписаниеФормыРеглОтчета(Требование, Организация, РегистрацияВНалоговомОргане, НачалоПериода, КонецПериода, Периодичность) Экспорт

	ИмяРеглОтчета = ИмяРеглОтчета(Требование);
	
	Если ИмяРеглОтчета = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеФормыРеглОтчета = Новый Структура;
	ОписаниеФормыРеглОтчета.Вставить("Имя",       "");
	ОписаниеФормыРеглОтчета.Вставить("Параметры", Новый Структура);
		
	ЭкземплярыРеглОтчета = РегламентированнаяОтчетность.ПолучитьСсылкуНаРеглОтчет(ИмяРеглОтчета, Организация, НачалоДня(КонецПериода),, РегистрацияВНалоговомОргане);
	
	Если ЭкземплярыРеглОтчета.Количество() > 0 Тогда
			
		ОписаниеФормыРеглОтчета.Имя = "Документ.РегламентированныйОтчет.ФормаОбъекта";
				
		ОписаниеФормыРеглОтчета.Параметры.Вставить("Ключ", ЭкземплярыРеглОтчета[0]);
				
	Иначе
		
		ПравоДоступаКОтчету = РегламентированнаяОтчетностьВызовСервера.ПравоДоступаКРегламентированномуОтчету(ИмяРеглОтчета);
		
		Если НЕ ПравоДоступаКОтчету = Истина Тогда
			Возврат Неопределено;
		КонецЕсли;

		ИмяФормыРеглОтчета = РегламентированнаяОтчетностьВызовСервера.ИмяФормыРеглОтчетаДействующейВОтчетномПериоде(ИмяРеглОтчета, КонецПериода);
		
		Если НЕ ЗначениеЗаполнено(ИмяФормыРеглОтчета) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ОписаниеФормыРеглОтчета.Имя = "Отчет." + ИмяРеглОтчета + ".Форма." + ИмяФормыРеглОтчета;
		
		ОписаниеФормыРеглОтчета.Параметры.Вставить("мДатаНачалаПериодаОтчета", НачалоПериода);
		ОписаниеФормыРеглОтчета.Параметры.Вставить("мДатаКонцаПериодаОтчета",  КонецПериода);
		ОписаниеФормыРеглОтчета.Параметры.Вставить("мПериодичность",           Периодичность);
		ОписаниеФормыРеглОтчета.Параметры.Вставить("Организация",              Организация);
		ОписаниеФормыРеглОтчета.Параметры.Вставить("НалоговыйОрган",           РегистрацияВНалоговомОргане);
		ОписаниеФормыРеглОтчета.Параметры.Вставить("мВыбраннаяФорма",          ИмяФормыРеглОтчета);
		ОписаниеФормыРеглОтчета.Параметры.Вставить("СформироватьФормуОтчетаАвтоматически", Истина); 
		ОписаниеФормыРеглОтчета.Параметры.Вставить("БезОткрытияФормы",         Ложь);
		
		// Особые случаи
		Если Требование = "БухгалтерскаяОтчетность.2013_НекоммерческиеОрганизации" Тогда
			ОписаниеФормыРеглОтчета.Параметры.Вставить("ЭтоБалансНекоммерческойОрганизации", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОписаниеФормыРеглОтчета;
	
КонецФункции

// Получает данные, сохраненные в регл. отчете - о суммах, которые следует уплатить по декларации
//
// Параметры:
//  Требование       - Строка, имя требования (может содержать точку - ".")
//  Организация      - СправочникСсылка.Организации
//  ПериодДекларации - Дата окончания периода (без времени) 
//
// Возвращаемое значение - 
//  Неопределено,
//  Таблица значений, описанная в НовыйТаблицаДанныхРеглОтчета()
Функция ДанныеРеглОтчетаДляУплатыНалога(Требование, Организация, РегистрацияВНалоговомОргане, ПериодДекларации) Экспорт
	
	ИмяРеглОтчета = ИмяРеглОтчета(Требование);
	
	Если ИмяРеглОтчета = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЭкземплярыРеглОтчета = РегламентированнаяОтчетность.ПолучитьСсылкуНаРеглОтчет(ИмяРеглОтчета, Организация, НачалоДня(ПериодДекларации),, РегистрацияВНалоговомОргане);
	
	Если ЭкземплярыРеглОтчета.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЭкземплярРеглОтчета = ЭкземплярыРеглОтчета[0];
	
	Платежи = Отчеты[ИмяРеглОтчета].ДанныеРеглОтчета(ЭкземплярРеглОтчета);
	
	Если Платежи = Неопределено Тогда
		Платежи = НовыйТаблицаДанныхРеглОтчета();
	КонецЕсли;
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("Ссылка",              ЭкземплярРеглОтчета);
	ДанныеРеглОтчета.Вставить("ДатаПодписи",         ЭкземплярРеглОтчета.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("КодНалоговогоОргана", ЭкземплярРеглОтчета.КодНалоговогоОргана);
	ДанныеРеглОтчета.Вставить("Платежи",             Платежи);
	
	Возврат ДанныеРеглОтчета;
	
КонецФункции

// Описывает структуру таблицы значений с данными регл. отчета
//
Функция НовыйТаблицаДанныхРеглОтчета() Экспорт
	
	ТаблицаДанныхРеглОтчета = Новый ТаблицаЗначений;
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("ВидНалога", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыНалогов"));
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("Период",	  Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("ОКАТО",  	  Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(11)));
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("КБК",       Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(20)));
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("Сумма",     Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("Аванс",     Новый ОписаниеТипов("Булево"));
	ТаблицаДанныхРеглОтчета.Колонки.Добавить("Агент",     Новый ОписаниеТипов("Булево"));
	
	Возврат ТаблицаДанныхРеглОтчета;
	
КонецФункции

// Предоставляет пользовательское представление формы регл. отчета
//
// Параметры:
//  Требование   - Строка, имя требования (может содержать точку - ".")
//  ПериодОтчета - Дата окончания периода (без времени)
//
// Возвращаемое значение:
//  Строка
Функция ПредставлениеФормыРегламентированногоОтчета(Требование, ПериодОтчета) Экспорт

	ИмяРеглОтчета      = ИмяРеглОтчета(Требование);
	
	Если ИмяРеглОтчета = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяФормыРеглОтчета = РегламентированнаяОтчетностьВызовСервера.ИмяФормыРеглОтчетаДействующейВОтчетномПериоде(ИмяРеглОтчета, ПериодОтчета);
	
	Возврат Метаданные.Отчеты[ИмяРеглОтчета].Формы[ИмяФормыРеглОтчета].Синоним;
	
КонецФункции

// Определяет список регл. отчетов, которые не предназначены для выполнения каких-либо формализованных требований.
// Служит для проверки, что в календаре бухгалтера внесены все требования, которые может исполнять программа.
// 
// Возвращаемое значение:
//  Массив строк
Функция РеглОтчетыСверхТребований() Экспорт
	
	РеглОтчетыСверхТребований = Новый Массив;
	
	РеглОтчеты = Новый Соответствие;
	// Составим список всех отчетов, затем исключим те, которые участвуют в выполнении тех или иных требований.
	// То, что останется - сверх требований.
	// Исключенными считаем элементы соответствия с значением Ложь.
	
	СписокОтчетов = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСписокРегламентированныхОтчетов();
	Для Каждого ЭлементСписка Из СписокОтчетов Цикл
		РеглОтчеты.Вставить(ЭлементСписка.Значение, Истина);
	КонецЦикла;
	
	ИсполнителиТребований = РеглОтчетыИсполнителиТребований();
	Для Каждого ЭлементСписка Из ИсполнителиТребований Цикл
		РеглОтчеты.Вставить(ЭлементСписка.Значение, Ложь);
	КонецЦикла;
	
	Для Каждого ЭлементСписка Из РеглОтчеты Цикл
		Если ЭлементСписка.Значение = Истина Тогда
			РеглОтчетыСверхТребований.Добавить(ЭлементСписка.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РеглОтчетыСверхТребований;
	
КонецФункции

// Определяет имя регл. отчета, который позволяет исполнить требование
//
// Параметры:
//  Требование   - Строка, имя требования (может содержать точку - ".")
//  ИсполнителиТребований - Соответствие, возвращаемое РеглОтчетыИсполнителиТребований()
//               Следует передавать, если функция используется многократно, в цикле.
//
// Возвращаемое значение: Строка, имя объекта метаданных Отчет
Функция ИмяРеглОтчета(Знач Требование, ИсполнителиТребований = Неопределено) Экспорт
	
	Требование = ВРег(Требование);
	
	Если ИсполнителиТребований = Неопределено Тогда
		ИсполнителиТребований = РеглОтчетыИсполнителиТребований();
	КонецЕсли;
	
	РегламентированныйОтчет = ИсполнителиТребований[Требование];
	
	Если РегламентированныйОтчет = Неопределено Тогда
		
		ИмяНалогаОтчета = ИмяНалогаОтчета(Требование);
		РегламентированныйОтчет = ИсполнителиТребований[ИмяНалогаОтчета];
		
	КонецЕсли;
	
	Возврат РегламентированныйОтчет;
	
КонецФункции

// Определяет имя задачи бухгалтера (налога, отчета) по имени требования.
// Имя требования начинается с имени задач. Имя задачи отделено точкой - "."
//
// Параметры:
//  Требование - Строка, имя требования (содержит точку - ".")
//
// Возвращаемое значение:
//  Строка, имя задачи (не содержит точку - ".")
Функция ИмяНалогаОтчета(Требование)
	
	ПозицияТочки = Найти(Требование, ".");
	
	Если ПозицияТочки = 0 Тогда
		Возврат Требование;
	Иначе 
		Возврат Лев(Требование, ПозицияТочки - 1);
	КонецЕсли;
	
КонецФункции

// Описывает регл. отчеты, экземпляры которых присутствуют в информационной базе.
// Такие отчеты должны быть видны в списке экземпляров отчетов, несмотря на настройки конфигурации
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  РеглОтчеты - Массив строк - имен регл. отчетов, среди которых надо найти те, которые нельзя скрывать
//
// Возвращаемое значение:
//  Массив строк - имен объектов метаданных Отчет
Функция РеглОтчетыКоторыеНельзяСкрыватьНастройкамиКонфигурации(Организации, РеглОтчеты = Неопределено) Экспорт
	
	НельзяСкрыватьОтчеты = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации", Организации);
	Если РеглОтчеты = Неопределено Тогда
		Запрос.УстановитьПараметр("РеглОтчеты",             Новый Массив);
		Запрос.УстановитьПараметр("НетОтбораПоРеглОтчетам", Истина);
	Иначе
		Запрос.УстановитьПараметр("РеглОтчеты",             РеглОтчеты);
		Запрос.УстановитьПараметр("НетОтбораПоРеглОтчетам", Ложь);
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РегламентированныйОтчет.ИсточникОтчета КАК ИмяОтчета
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.Организация В(&Организации)
	|	И (&НетОтбораПоРеглОтчетам
	|			ИЛИ РегламентированныйОтчет.ИсточникОтчета В (&РеглОтчеты))";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НельзяСкрыватьОтчеты.Вставить(Выборка.ИмяОтчета);
	КонецЦикла;
	
	Возврат НельзяСкрыватьОтчеты;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНТЕРФЕЙСА ВЗАИМОДЕЙСТВИЯ С ПРИКЛАДНЫМ КОДОМ АВТОМАТИЧЕСКОГО ЗАПОЛНЕНИЯ ДАННЫХ СТАТИСТИЧЕСКОЙ ОТЧЕТНОСТИ
//

Функция ПоляКоторыеНеВсегдаТребуетсяЗаполнять(ИмяРеглОтчета, ИмяФормы, Период) Экспорт
	
	НеТребуютсяПоляФормы = Новый Массив;
	
	Если ИмяРеглОтчета = "РегламентированныйОтчетСтатистикаФормаП3" 
		И ИмяФормы = "ФормаОтчета2013Кв1" Тогда
		
		ПоследнийМесяцКвартала = Месяц(Период) % 3 = 0;
		
		Если НЕ ПоследнийМесяцКвартала Тогда
			
			НеТребуютсяПоляФормы.Добавить("П010000801");
			НеТребуютсяПоляФормы.Добавить("П010000802");
			НеТребуютсяПоляФормы.Добавить("П010000901");
			НеТребуютсяПоляФормы.Добавить("П010000902");
			НеТребуютсяПоляФормы.Добавить("П010001001");
			НеТребуютсяПоляФормы.Добавить("П010001002");
			НеТребуютсяПоляФормы.Добавить("П010001101");
			НеТребуютсяПоляФормы.Добавить("П010001102");
			НеТребуютсяПоляФормы.Добавить("П010002101");
			НеТребуютсяПоляФормы.Добавить("П010002102");
			НеТребуютсяПоляФормы.Добавить("П010002201");
			НеТребуютсяПоляФормы.Добавить("П010002202");
			НеТребуютсяПоляФормы.Добавить("П010002301");
			НеТребуютсяПоляФормы.Добавить("П010002302");
			НеТребуютсяПоляФормы.Добавить("П010002401");
			НеТребуютсяПоляФормы.Добавить("П010002402");
			
			// Раздел 2 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("П020003001");
			НеТребуютсяПоляФормы.Добавить("П020003002");
			НеТребуютсяПоляФормы.Добавить("П020003101");
			НеТребуютсяПоляФормы.Добавить("П020003102");
			НеТребуютсяПоляФормы.Добавить("П020003201");
			НеТребуютсяПоляФормы.Добавить("П020003202");
			НеТребуютсяПоляФормы.Добавить("П020003301"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П020003302"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П020003401");
			НеТребуютсяПоляФормы.Добавить("П020003402");
			НеТребуютсяПоляФормы.Добавить("П020003501");
			НеТребуютсяПоляФормы.Добавить("П020003502");
			
			// Раздел 3 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("П030003601");
			НеТребуютсяПоляФормы.Добавить("П030003602");
			НеТребуютсяПоляФормы.Добавить("П030003701");
			НеТребуютсяПоляФормы.Добавить("П030003702");
			НеТребуютсяПоляФормы.Добавить("П030003801");
			НеТребуютсяПоляФормы.Добавить("П030003802");
			НеТребуютсяПоляФормы.Добавить("П030003901");
			НеТребуютсяПоляФормы.Добавить("П030003902");
			НеТребуютсяПоляФормы.Добавить("П030004001");
			НеТребуютсяПоляФормы.Добавить("П030004002");
			НеТребуютсяПоляФормы.Добавить("П030004101");
			НеТребуютсяПоляФормы.Добавить("П030004102");
			НеТребуютсяПоляФормы.Добавить("П030004201");
			НеТребуютсяПоляФормы.Добавить("П030004202");
			НеТребуютсяПоляФормы.Добавить("П030004301");
			НеТребуютсяПоляФормы.Добавить("П030004302");
			НеТребуютсяПоляФормы.Добавить("П030004401");
			НеТребуютсяПоляФормы.Добавить("П030004402");
			НеТребуютсяПоляФормы.Добавить("П030004501");
			НеТребуютсяПоляФормы.Добавить("П030004502");
			НеТребуютсяПоляФормы.Добавить("П30004701");
			НеТребуютсяПоляФормы.Добавить("П30004702");
			НеТребуютсяПоляФормы.Добавить("П030004601");
			НеТребуютсяПоляФормы.Добавить("П030004602");
			НеТребуютсяПоляФормы.Добавить("П030004701");
			НеТребуютсяПоляФормы.Добавить("П030004702");
			НеТребуютсяПоляФормы.Добавить("П030004801");
			НеТребуютсяПоляФормы.Добавить("П030004802");
			
			// Раздел 4 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("П040004901");
			НеТребуютсяПоляФормы.Добавить("П040004902");
			НеТребуютсяПоляФормы.Добавить("П040004903");
			НеТребуютсяПоляФормы.Добавить("П040004904");
			НеТребуютсяПоляФормы.Добавить("П040004905");
			НеТребуютсяПоляФормы.Добавить("П040004906");
			НеТребуютсяПоляФормы.Добавить("П040004907");
			НеТребуютсяПоляФормы.Добавить("П040005001"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005002"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005003"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005004"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005005"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005006"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005007"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040005101");
			НеТребуютсяПоляФормы.Добавить("П040005102");
			НеТребуютсяПоляФормы.Добавить("П040005103");
			НеТребуютсяПоляФормы.Добавить("П040005104");
			НеТребуютсяПоляФормы.Добавить("П040005105");
			НеТребуютсяПоляФормы.Добавить("П040005106");
			НеТребуютсяПоляФормы.Добавить("П040005107");
			НеТребуютсяПоляФормы.Добавить("П040005201");
			НеТребуютсяПоляФормы.Добавить("П040005202");
			НеТребуютсяПоляФормы.Добавить("П040005203");
			НеТребуютсяПоляФормы.Добавить("П040005204");
			НеТребуютсяПоляФормы.Добавить("П040005205");
			НеТребуютсяПоляФормы.Добавить("П040005206");
			НеТребуютсяПоляФормы.Добавить("П040005207");
			НеТребуютсяПоляФормы.Добавить("П040005301");
			НеТребуютсяПоляФормы.Добавить("П040005302");
			НеТребуютсяПоляФормы.Добавить("П040005303");
			НеТребуютсяПоляФормы.Добавить("П040005304");
			НеТребуютсяПоляФормы.Добавить("П040005305");
			НеТребуютсяПоляФормы.Добавить("П040005306");
			НеТребуютсяПоляФормы.Добавить("П040005307");
			НеТребуютсяПоляФормы.Добавить("П040005401");
			НеТребуютсяПоляФормы.Добавить("П040005402");
			НеТребуютсяПоляФормы.Добавить("П040005403");
			НеТребуютсяПоляФормы.Добавить("П040005404");
			НеТребуютсяПоляФормы.Добавить("П040005405");
			НеТребуютсяПоляФормы.Добавить("П040005406");
			НеТребуютсяПоляФормы.Добавить("П040005407");
			НеТребуютсяПоляФормы.Добавить("П040005501");
			НеТребуютсяПоляФормы.Добавить("П040005502");
			НеТребуютсяПоляФормы.Добавить("П040005503");
			НеТребуютсяПоляФормы.Добавить("П040005504");
			НеТребуютсяПоляФормы.Добавить("П040005505");
			НеТребуютсяПоляФормы.Добавить("П040005506");
			НеТребуютсяПоляФормы.Добавить("П040005507");
			НеТребуютсяПоляФормы.Добавить("П040005601");
			НеТребуютсяПоляФормы.Добавить("П040005602");
			НеТребуютсяПоляФормы.Добавить("П040005603");
			НеТребуютсяПоляФормы.Добавить("П040005604");
			НеТребуютсяПоляФормы.Добавить("П040005605");
			НеТребуютсяПоляФормы.Добавить("П040005606");
			НеТребуютсяПоляФормы.Добавить("П040005607");
			НеТребуютсяПоляФормы.Добавить("П040005701");
			НеТребуютсяПоляФормы.Добавить("П040005702");
			НеТребуютсяПоляФормы.Добавить("П040005703");
			НеТребуютсяПоляФормы.Добавить("П040005704");
			НеТребуютсяПоляФормы.Добавить("П040005705");
			НеТребуютсяПоляФормы.Добавить("П040005706");
			НеТребуютсяПоляФормы.Добавить("П040005707");
			НеТребуютсяПоляФормы.Добавить("П040005801");
			НеТребуютсяПоляФормы.Добавить("П040005802");
			НеТребуютсяПоляФормы.Добавить("П040005803");
			НеТребуютсяПоляФормы.Добавить("П040005804");
			НеТребуютсяПоляФормы.Добавить("П040005805");
			НеТребуютсяПоляФормы.Добавить("П040005806");
			НеТребуютсяПоляФормы.Добавить("П040005807");
			НеТребуютсяПоляФормы.Добавить("П040005901");
			НеТребуютсяПоляФормы.Добавить("П040005902");
			НеТребуютсяПоляФормы.Добавить("П040005903");
			НеТребуютсяПоляФормы.Добавить("П040005904");
			НеТребуютсяПоляФормы.Добавить("П040005905");
			НеТребуютсяПоляФормы.Добавить("П040005906");
			НеТребуютсяПоляФормы.Добавить("П040005907");
			НеТребуютсяПоляФормы.Добавить("П040006001");
			НеТребуютсяПоляФормы.Добавить("П040006002");
			НеТребуютсяПоляФормы.Добавить("П040006003");
			НеТребуютсяПоляФормы.Добавить("П040006004");
			НеТребуютсяПоляФормы.Добавить("П040006005");
			НеТребуютсяПоляФормы.Добавить("П040006006");
			НеТребуютсяПоляФормы.Добавить("П040006007");
			НеТребуютсяПоляФормы.Добавить("П040006101");
			НеТребуютсяПоляФормы.Добавить("П040006102"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040006103"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040006104"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040006105"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040006106"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040006107"); // итоговый
			НеТребуютсяПоляФормы.Добавить("П040006201");
			НеТребуютсяПоляФормы.Добавить("П040006202");
			НеТребуютсяПоляФормы.Добавить("П040006203");
			НеТребуютсяПоляФормы.Добавить("П040006204");
			НеТребуютсяПоляФормы.Добавить("П040006205");
			НеТребуютсяПоляФормы.Добавить("П040006206");
			НеТребуютсяПоляФормы.Добавить("П040006207");
			НеТребуютсяПоляФормы.Добавить("П040006301");
			НеТребуютсяПоляФормы.Добавить("П040006302");
			НеТребуютсяПоляФормы.Добавить("П040006303");
			НеТребуютсяПоляФормы.Добавить("П040006304");
			НеТребуютсяПоляФормы.Добавить("П040006305");
			НеТребуютсяПоляФормы.Добавить("П040006306");
			НеТребуютсяПоляФормы.Добавить("П040006307");
			НеТребуютсяПоляФормы.Добавить("П040006401");
			НеТребуютсяПоляФормы.Добавить("П040006402");
			НеТребуютсяПоляФормы.Добавить("П040006403");
			НеТребуютсяПоляФормы.Добавить("П040006404");
			НеТребуютсяПоляФормы.Добавить("П040006405");
			НеТребуютсяПоляФормы.Добавить("П040006406");
			НеТребуютсяПоляФормы.Добавить("П040006407");
			
		КонецЕсли;
		
	ИначеЕсли ИмяРеглОтчета = "РегламентированныйОтчетСтатистикаФормаП1"
			И (ИмяФормы = "ФормаОтчета2010Кв1" Или ИмяФормы = "ФормаОтчета2014Кв1") Тогда
		
		ПоследнийМесяцКвартала = Месяц(Период) % 3 = 0;
		
		Если НЕ ПоследнийМесяцКвартала Тогда
			
			// Строка 3 раздела 1 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("П000100303");
			НеТребуютсяПоляФормы.Добавить("П000100304");
			НеТребуютсяПоляФормы.Добавить("П000100305");
			
			// Строка 4 раздела 1 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("П000100403");
			НеТребуютсяПоляФормы.Добавить("П000100404");
			НеТребуютсяПоляФормы.Добавить("П000100405");
			
			// Строка 5 раздела 1 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("П000100503");
			НеТребуютсяПоляФормы.Добавить("П000100504");
			НеТребуютсяПоляФормы.Добавить("П000100505");
			
			// Строка "Справочно:" раздела 5 заполняется только в квартальный период
			НеТребуютсяПоляФормы.Добавить("ПотребЭнерг");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НеТребуютсяПоляФормы;
	
КонецФункции

// Краткое представление формы, которое выводится, например, в заголовке диалога настройки
//
Функция КраткоеПредставлениеФормы(РегламентированныйОтчет) Экспорт
	
	МетаОтчет = Метаданные.Отчеты.Найти(РегламентированныйОтчет.ИсточникОтчета);
	
	Если МетаОтчет = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если МетаОтчет.ОсновнаяФорма <> Неопределено Тогда
		КраткоеПредставление = СокрЛП(СтрЗаменить(СтрЗаменить(МетаОтчет.ОсновнаяФорма.Синоним, "Статистика:", ""), "Форма", ""));
	Иначе
		КраткоеПредставление = СокрЛП(СтрЗаменить(Лев(МетаОтчет.Синоним, Найти(МетаОтчет.Синоним, """") - 1), "Форма", ""));
	КонецЕсли;
	
	Возврат КраткоеПредставление;
	
КонецФункции

// Возвращает список классификаторов, про которые знает БРО.
// Возвращаемое занчение имеет тип "список значений"
// В данной версии это:
// "ВидыДеятельности"
// "ВидыПродукцииОпт"
// "ВидыПродукцииПроизводство"
// "ВидыПродукцииРозница"
// "УслугиНаселению"
// 
// Возвращаемое значение: список строк.
//
Функция ВидыКлассификаторов() Экспорт 
	
	Результат = Новый СписокЗначений;
	
	Результат.Добавить("ВидыДеятельности");
	Результат.Добавить("ВидыПродукцииОпт");
	Результат.Добавить("ВидыПродукцииПроизводство");
	Результат.Добавить("ВидыПродукцииРозница");
	Результат.Добавить("УслугиНаселению");
	
	Возврат Результат;
	
КонецФункции

// Возвращает список версий классификатора
// ВидКласификатора - строка
// 
// возвращаемое значение - список версий, тип - список значений.
// Например: для ВидКласификатора = "ВидыПродукцииОпт"
// вернем список версий ("2010кв1", "2012кв1", "2013кв1", "2013кв4", "2014кв1") с представлением
//
Функция ВерсииКлассификатора(ВидКласификатора) Экспорт
	
	Результат = Новый СписокЗначений;
	
	Если ВидКласификатора = "ВидыДеятельности" Тогда
		Результат.Добавить("2010кв1", "2010");
		Результат.Добавить("2012кв1", "2012");
		Результат.Добавить("2014кв1", "2014");
	ИначеЕсли ВидКласификатора = "ВидыПродукцииОпт"
		Или ВидКласификатора = "ВидыПродукцииПроизводство"
		Или ВидКласификатора = "ВидыПродукцииРозница" Тогда
		Результат.Добавить("2010кв1", "2010");
		Результат.Добавить("2012кв1", "2012");
		Результат.Добавить("2013кв1", "2013, 1-3 кв.");
		Результат.Добавить("2013кв4", "2013, 4 кв.");
		Результат.Добавить("2014кв1", "2014");
	ИначеЕсли ВидКласификатора = "УслугиНаселению" Тогда
		Результат.Добавить("2010кв1", "2010");
		Результат.Добавить("2013кв1", "2013, 1-3 кв.");
		Результат.Добавить("2013кв4", "2013, 4 кв.");
		Результат.Добавить("2014кв1", "2014");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// По классификатору и версии вернем таблицу значений
// ВидКласификатора, Версия - строки
// Возвращаем таблицу значений с 4 колонками:
// Код, Наименование, НаименованиеЕдиницыИзмерения, КодЕдиницыИзмерения
// Все колонки имеют тип "строка"
// 
Функция ДанныеКлассификатора(ВидКласификатора, ВерсияКлассификатора) Экспорт
	Если ВидКласификатора = "ВидыДеятельности" Тогда
		Возврат КлассификаторВидовДеятельности(ВерсияКлассификатора);
	ИначеЕсли ВидКласификатора = "ВидыПродукцииОпт" Тогда
		Возврат КлассификаторПродукцииОпт(ВерсияКлассификатора);
	ИначеЕсли ВидКласификатора = "ВидыПродукцииПроизводство" Тогда
		Возврат КлассификаторПродукцииПроизводство(ВерсияКлассификатора);
	ИначеЕсли ВидКласификатора = "ВидыПродукцииРозница" Тогда
		Возврат КлассификаторПродукцииРозница(ВерсияКлассификатора);
	ИначеЕсли ВидКласификатора = "УслугиНаселению" Тогда
		Возврат КлассификаторУслугНаселению(ВерсияКлассификатора);
	Иначе
		Возврат ПустаяТаблица();
	КонецЕсли;
КонецФункции

Функция КлассификаторВидовДеятельности(ВерсияКлассификатора)
	
	Если ВерсияКлассификатора = "2010кв1" Тогда
		Возврат ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2010кв1", "s_okved", "pril_okved_51");
	ИначеЕсли ВерсияКлассификатора = "2012кв1" Тогда
		Возврат ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okved", "pril_okved_51");
	ИначеЕсли ВерсияКлассификатора = "2014кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2014кв1", "s_okved", "pril_okved_51");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП2", "Списки2014кв1", "КодыОКВЭД", "ОКВЭД_51");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	Иначе
		Возврат ПустаяТаблица();
	КонецЕсли;
	
КонецФункции

Функция КлассификаторПродукцииОпт(ВерсияКлассификатора)
	
	Если ВерсияКлассификатора = "2010кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2010кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2010кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2012кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2010кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2013кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2013кв4" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв4", "s_okp", "okp_7", "okp_ei_80");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2014кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2014кв1", "s_okp", "pril_okp_7", "s_okp_ei_80");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2014кв1", "s_okp", "okp_7", "okp_ei_80");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	Иначе
		Возврат ПустаяТаблица();
	КонецЕсли;
	
КонецФункции

Функция КлассификаторПродукцииПроизводство(ВерсияКлассификатора)
	
	Если ВерсияКлассификатора = "2010кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2010кв1", "s_okp", "pril_okp_50", "s_okp_ei_50");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2010кв1", "s_okp", "pril_okp_50", "s_okp_ei_50");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2012кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_55", "s_okp_ei_50");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2010кв1", "s_okp", "pril_okp_50", "s_okp_ei_50");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2013кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_55", "s_okp_ei_50");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв1", "s_okp", "pril_okp_55", "s_okp_ei_50");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2013кв4" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_55", "s_okp_ei_50");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв4", "s_okp", "okp_55", "okp_ei_55");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2014кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2014кв1", "s_okp", "pril_okp_55", "s_okp_ei_50");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2014кв1", "s_okp", "okp_55", "okp_ei_55");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	Иначе
		Возврат ПустаяТаблица();
	КонецЕсли;
	
КонецФункции

Функция КлассификаторПродукцииРозница(ВерсияКлассификатора)
	
	Если ВерсияКлассификатора = "2010кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2010кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2010кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2012кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2010кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2013кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2013кв4" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2012кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв4", "s_okp", "okp_6", "okp_ei_70");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	ИначеЕсли ВерсияКлассификатора = "2014кв1" Тогда
		Таб1 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП1", "Списки2014кв1", "s_okp", "pril_okp_6", "s_okp_ei_70");
		Таб2 = ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5м", "Списки2013кв4", "s_okp", "okp_6", "okp_ei_70");
		Возврат ОбъединитьТаблицы(Таб1, Таб2);
	Иначе
		Возврат ПустаяТаблица();
	КонецЕсли;
	
КонецФункции

Функция КлассификаторУслугНаселению(ВерсияКлассификатора)
	
	Если ВерсияКлассификатора = "2010кв1" Тогда
		Возврат ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5М", "Списки2010кв1", "s_okun");
	ИначеЕсли ВерсияКлассификатора = "2013кв1" Тогда
		Возврат ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5М", "Списки2013кв1", "s_okun");
	ИначеЕсли ВерсияКлассификатора = "2013кв4" Тогда
		Возврат ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5М", "Списки2013кв4", "s_okun");
	ИначеЕсли ВерсияКлассификатора = "2014кв1" Тогда
		Возврат ТаблицаИзМакета("РегламентированныйОтчетСтатистикаФормаП5М", "Списки2014кв1", "s_okun");
	Иначе
		Возврат ПустаяТаблица();
	КонецЕсли;
	
КонецФункции

Функция ПустаяТаблица()
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	Строка64  = Новый ОписаниеТипов(Массив, , Новый КвалификаторыСтроки(64, ДопустимаяДлина.Переменная));
	Строка512  = Новый ОписаниеТипов(Массив, , Новый КвалификаторыСтроки(512, ДопустимаяДлина.Переменная));
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Код", Строка64);
	Результат.Колонки.Добавить("Наименование", Строка512);
	Результат.Колонки.Добавить("НаименованиеЕдиницыИзмерения", Строка64);
	Результат.Колонки.Добавить("КодЕдиницыИзмерения", Строка64);
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаИзМакета(ИмяОтчета, ИмяМакета, ИмяОбласти, ИмяОбластиСОтбором = "", ИмяОбластиСЕдиницамиИзмерения = "")
	
	Результат = ПустаяТаблица();
	
	Если Метаданные.Отчеты.Найти(ИмяОтчета) = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	МакетСоставаПоказателей = Отчеты[ИмяОтчета].ПолучитьМакет(ИмяМакета);
	Если ТипЗнч(МакетСоставаПоказателей) <> Тип("ТабличныйДокумент") Тогда
		Возврат Результат;
	КонецЕсли;
	
	Строка16  = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(16,  ДопустимаяДлина.Переменная));
	Строка128 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(128, ДопустимаяДлина.Переменная));
	Строка512 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(512, ДопустимаяДлина.Переменная));
	
	КоллекцияСписковВыбора = Новый Соответствие;
	Для Каждого Область Из МакетСоставаПоказателей.Области Цикл
		Если Не (Область.Имя = ИмяОбласти Или Область.Имя = ИмяОбластиСОтбором Или Область.Имя = ИмяОбластиСЕдиницамиИзмерения) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			ВерхОбласти = Область.Верх;
			НизОбласти = Область.Низ;
			ТаблСписка = Новый ТаблицаЗначений;
			ТаблСписка.Колонки.Добавить("Код",     Строка16   ,, МакетСоставаПоказателей.Область(ВерхОбласти, 1, ВерхОбласти, 1).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("Название",Строка512  ,, МакетСоставаПоказателей.Область(ВерхОбласти, 2, ВерхОбласти, 2).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("НазваниеДоп",Строка128,, МакетСоставаПоказателей.Область(ВерхОбласти, 3, ВерхОбласти, 3).ШиринаКолонки);
			Для НомСтр = ВерхОбласти По НизОбласти Цикл
				КодПоказателя = СокрП(МакетСоставаПоказателей.Область(НомСтр, 1).Текст);
				Если КодПоказателя <> "###" И КодПоказателя <> "" Тогда
					НовСтрока = ТаблСписка.Добавить();
					НовСтрока.Код = СокрЛП(КодПоказателя);
					НовСтрока.Название = СокрЛП(МакетСоставаПоказателей.Область(НомСтр, 2).Текст);
					НовСтрока.НазваниеДоп = СокрЛП(МакетСоставаПоказателей.Область(НомСтр, 3).Текст);
				КонецЕсли;
			КонецЦикла;
			КоллекцияСписковВыбора.Вставить(Область.Имя, ТаблСписка);
		КонецЕсли;
	КонецЦикла;
	
	ЕстьОбластьСОтбором = ЗначениеЗаполнено(КоллекцияСписковВыбора[ИмяОбластиСОтбором]);
	ЕстьИмяОбластьСЕдиницамиИзмерения = ЗначениеЗаполнено(КоллекцияСписковВыбора[ИмяОбластиСЕдиницамиИзмерения]);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Область", КоллекцияСписковВыбора[ИмяОбласти]);
	Если ЕстьОбластьСОтбором Тогда
		Запрос.УстановитьПараметр("ОбластьСОтбором", КоллекцияСписковВыбора[ИмяОбластиСОтбором]);
	КонецЕсли;
	Если ЕстьИмяОбластьСЕдиницамиИзмерения Тогда
		Запрос.УстановитьПараметр("ОбластьСЕдиницамиИзмерения", КоллекцияСписковВыбора[ИмяОбластиСЕдиницамиИзмерения]);
	КонецЕсли;
	
	Если ЕстьОбластьСОтбором Тогда 
		Если ЕстьИмяОбластьСЕдиницамиИзмерения Тогда 
			
			Запрос.Текст = "ВЫБРАТЬ
				|	Таб.Код,
				|	Таб.Название
				|ПОМЕСТИТЬ ВТ_Таб
				|ИЗ &Область КАК Таб
				|ИНДЕКСИРОВАТЬ ПО Код
				|;
				|
				|ВЫБРАТЬ
				|	Таб.Код,
				|	Таб.Название КАК Фильтр,
				|	Таб.НазваниеДоп КАК Название
				|ПОМЕСТИТЬ ВТ_ЕдИзм
				|ИЗ &ОбластьСЕдиницамиИзмерения КАК Таб
				|ИНДЕКСИРОВАТЬ ПО Код
				|;
				|
				|ВЫБРАТЬ
				|	Таб.Код
				|ПОМЕСТИТЬ ВТ_Отбор
				|ИЗ &ОбластьСОтбором КАК Таб
				|;
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Таб.Код КАК Код,
				|	Таб.Название КАК Наименование,
				|	ТабЕдИзм.Название КАК НаименованиеЕдиницыИзмерения,
				|	ТабЕдИзм.Код КАК КодЕдиницыИзмерения
				|ИЗ
				|	ВТ_Таб КАК Таб
				|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕдИзм КАК ТабЕдИзм
				|	ПО Таб.Код = ТабЕдИзм.Фильтр
				|ГДЕ
				|	Таб.Код В (ВЫБРАТЬ Отбор.Код ИЗ ВТ_Отбор КАК Отбор)";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ
				|	Таб.Код,
				|	Таб.Название
				|ПОМЕСТИТЬ ВТ_Таб
				|ИЗ &Область КАК Таб
				|;
				|
				|ВЫБРАТЬ
				|	Таб.Код
				|ПОМЕСТИТЬ ВТ_Отбор
				|ИЗ &ОбластьСОтбором КАК Таб
				|;
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Таб.Код КАК Код,
				|	Таб.Название КАК Наименование
				|ИЗ
				|	ВТ_Таб КАК Таб
				|ГДЕ
				|	Таб.Код В (ВЫБРАТЬ Отбор.Код ИЗ ВТ_Отбор КАК Отбор)";
		КонецЕсли;
	Иначе
		Если ЕстьИмяОбластьСЕдиницамиИзмерения Тогда 
			Запрос.Текст = "ВЫБРАТЬ
				|	Таб.Код,
				|	Таб.Название
				|ПОМЕСТИТЬ ВТ_Таб
				|ИЗ &Область КАК Таб
				|ИНДЕКСИРОВАТЬ ПО Код
				|;
				|
				|ВЫБРАТЬ
				|	Таб.Код,
				|	Таб.Название КАК Фильтр,
				|	Таб.НазваниеДоп КАК Название
				|ПОМЕСТИТЬ ВТ_ЕдИзм
				|ИЗ &ОбластьСЕдиницамиИзмерения КАК Таб
				|ИНДЕКСИРОВАТЬ ПО Код
				|;
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Таб.Код КАК Код,
				|	Таб.Название КАК Наименование,
				|	ТабЕдИзм.Название КАК НаименованиеЕдиницыИзмерения,
				|	ТабЕдИзм.Код КАК КодЕдиницыИзмерения
				|ИЗ
				|	ВТ_Таб КАК Таб
				|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕдИзм КАК ТабЕдИзм
				|	ПО Таб.Код = ТабЕдИзм.Фильтр";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ
				|	Таб.Код,
				|	Таб.Название
				|ПОМЕСТИТЬ ВТ_Таб
				|ИЗ &Область КАК Таб
				|;
				|
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Таб.Код КАК Код,
				|	Таб.Название КАК Наименование
				|ИЗ ВТ_Таб КАК Таб";
		КонецЕсли;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из РезультатЗапроса Цикл
		НовСтр = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция ОбъединитьТаблицы(Таб1, Таб2)
	
	Результат = ПустаяТаблица();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таб1", Таб1);
	Запрос.УстановитьПараметр("Таб2", Таб2);
	
	Запрос.Текст = "ВЫБРАТЬ
		|	Таб.Код КАК Код,
		|	Таб.Наименование КАК Наименование,
		|	Таб.НаименованиеЕдиницыИзмерения КАК НаименованиеЕдиницыИзмерения,
		|	Таб.КодЕдиницыИзмерения КАК КодЕдиницыИзмерения
		|ПОМЕСТИТЬ ВТ_ТАБ1
		|ИЗ &Таб1 КАК Таб
		|ИНДЕКСИРОВАТЬ ПО Код
		|;
		|
		|ВЫБРАТЬ
		|	Таб.Код КАК Код,
		|	Таб.Наименование КАК Наименование,
		|	Таб.НаименованиеЕдиницыИзмерения КАК НаименованиеЕдиницыИзмерения,
		|	Таб.КодЕдиницыИзмерения КАК КодЕдиницыИзмерения
		|ПОМЕСТИТЬ ВТ_ТАБ2
		|ИЗ &Таб2 КАК Таб
		|ИНДЕКСИРОВАТЬ ПО Код
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таб.Код КАК Код,
		|	Таб.Наименование КАК Наименование,
		|	Таб.НаименованиеЕдиницыИзмерения КАК НаименованиеЕдиницыИзмерения,
		|	Таб.КодЕдиницыИзмерения КАК КодЕдиницыИзмерения
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таб2.Код КАК Код,
		|		Таб2.Наименование КАК Наименование,
		|		Таб2.НаименованиеЕдиницыИзмерения КАК НаименованиеЕдиницыИзмерения,
		|		Таб2.КодЕдиницыИзмерения КАК КодЕдиницыИзмерения
		|	ИЗ
		|		ВТ_ТАБ2 КАК Таб2
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТАБ1 КАК Таб1
		|			ПО Таб2.Код = Таб1.Код
		|	ГДЕ
		|		Таб1.Код ЕСТЬ NULL 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Таб1.Код,
		|		Таб1.Наименование,
		|		ВЫБОР
		|			КОГДА Таб1.НаименованиеЕдиницыИзмерения = """" И НЕ (Таб2.НаименованиеЕдиницыИзмерения ЕСТЬ NULL)
		|				ТОГДА Таб2.НаименованиеЕдиницыИзмерения
		|			ИНАЧЕ Таб1.НаименованиеЕдиницыИзмерения
		|		КОНЕЦ КАК НаименованиеЕдиницыИзмерения,
		|		ВЫБОР
		|			КОГДА Таб1.КодЕдиницыИзмерения = """" И НЕ (Таб2.КодЕдиницыИзмерения ЕСТЬ NULL)
		|				ТОГДА Таб2.КодЕдиницыИзмерения
		|			ИНАЧЕ Таб1.КодЕдиницыИзмерения
		|		КОНЕЦ КАК КодЕдиницыИзмерения
		|	ИЗ
		|		ВТ_ТАБ1 КАК Таб1
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТАБ2 КАК Таб2
		|			ПО Таб1.Код = Таб2.Код) КАК Таб";
		
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из РезультатЗапроса Цикл
		НовСтр = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОПИСАНИЯ ФОРМ СТАТИСТИКИ

// Функция читает структуру XML переданной формы статистики
// Параметры:
// 	- ФормаСтатистики - Справочник ФормыСтатистики
// Возвращаемое значение:
// ТаблицаЗначений, содежит иерархию полей формы статистики
//
Функция ПолучитьПоляФормыСтатистики(ИмяОтчета, ИмяСхемыВыгрузки) Экспорт
	
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("Показатель",   ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("НомерСтроки",  ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ИмяПоля",      ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("Родитель",     Новый ОписаниеТипов("СтрокаТаблицыЗначений"));
	ТаблицаПоказателей.Колонки.Добавить("Период",       Новый ОписаниеТипов("Строка"));// ТекущийПериод, ПредыдущийПериод или АналогичныйПериодПредыдущегоГода
	ТаблицаПоказателей.Колонки.Добавить("ЭтоГруппа",    Новый ОписаниеТипов("Булево"));
	ТаблицаПоказателей.Колонки.Добавить("СНачалаГода",  Новый ОписаниеТипов("Булево"));
	ТаблицаПоказателей.Колонки.Добавить("ЕстьЭлементы", Новый ОписаниеТипов("Булево"));
	
	ДеревоПоказателей = РегламентированнаяОтчетность.ИзвлечьСтруктуруXML(ИмяОтчета, ИмяСхемыВыгрузки);
	
	Для Каждого Тег_report Из ДеревоПоказателей.Строки	Цикл
		
		Если Тег_report.Код = "report" Тогда
			
			Для Каждого Тег_sections Из Тег_report.Строки Цикл
				
				Если Тег_sections.Код = "sections" Тогда
					
					Для Каждого Тег_section Из Тег_sections.Строки Цикл
						
						Если Тег_section.Код = "section" Тогда
							
							Группа = ТаблицаПоказателей.Добавить();
							
							Группа.Показатель 	= Тег_section.Представление;
							Группа.ЭтоГруппа 	= Истина;
							
							РодительРаздел = Группа;
							
							Для Каждого Тег_row Из Тег_section.Строки Цикл
								
								Если Тег_row.Код = "row" Тогда
									
									НаименованиеПоказателя = Тег_row.Представление;
									
									Строка = ТаблицаПоказателей.Добавить();
									
									Строка.Показатель 	= НаименованиеПоказателя;
									Строка.ЭтоГруппа 	= Истина;
									Строка.Родитель 	= РодительРаздел;
									Родитель 			= Строка;
									
									НомерСтроки = "";
									
									Для Каждого Тег_col Из Тег_row.Строки Цикл
										
										Если Тег_col.Код = "code" Тогда
											
											НомерСтроки	= Тег_col.ЗначениеПоУмолчанию;
											Родитель.Показатель = "Строка " + НомерСтроки + ": " + НаименованиеПоказателя;
										Иначе
											
											ИмяПоля = Тег_col.Ключ;
											
											Если ЗначениеЗаполнено(ИмяПоля) И ЭтоКодПоказателяП(ИмяПоля) Тогда 
												
												Строка = ТаблицаПоказателей.Добавить();
												
												Представление = Тег_col.Представление;
												
												Строка.ИмяПоля 			= ИмяПоля;
												Строка.Показатель 		= Тег_col.Представление;
												Строка.НомерСтроки 		= НомерСтроки;
												Строка.Родитель 		= Родитель;
												Родитель.ЕстьЭлементы 	= Истина;
												РодительРаздел.ЕстьЭлементы = Истина;
												
												Если Найти(НРег(Представление),"за предыдущий") Тогда	
													
													Строка.Период = "ПредыдущийПериод";
													
												ИначеЕсли Найти(НРег(Представление),"за соответствующий") Тогда
												
													Строка.Период = "АналогичныйПериодПредыдущегоГода";
													
												Иначе
													
													Строка.Период = "ТекущийПериод";
													
												КонецЕсли;	
												
												Если Найти(НРег(Представление),"с начала ") И Найти(НРег(Представление)," года") Тогда	
													
													Строка.СНачалаГода = Истина;
													
												КонецЕсли;	
												
											КонецЕсли;
											
										КонецЕсли;
										
									КонецЦикла; // col
									
								КонецЕсли;
								
							КонецЦикла; // row
							
						КонецЕсли;
						
					КонецЦикла; //section
					
				КонецЕсли	
				
			КонецЦикла;	// sections
			
		КонецЕсли;
		
	КонецЦикла; //report	
	
	Возврат	ТаблицаПоказателей;
	
КонецФункции	

// Функция считывает версии списков отчета
//
// Парамеры: 
// - ИмяОтчета - Строка, идентификатор отчета для которого нужно вернуть версии списков
//
// ВозврвщаемоеЗначение:
// СписокЗначений с версиями списков отчета
//
Функция ПолучитьВерсииСписковОтчета(ИмяОтчета) Экспорт
	
	СписокВерсий = Новый СписокЗначений;
	
	//Ищем переданный отчет
	ОтчетМетаданные = Метаданные.Отчеты.Найти(ИмяОтчета);
	
	Если ОтчетМетаданные = Неопределено Тогда 
		Возврат СписокВерсий;	
	КонецЕсли;	
		
	Для Каждого Макет Из ОтчетМетаданные.Макеты Цикл
		
		Если Лев(Макет.Имя,6) = "Списки" Тогда
			
			СписокВерсий.Добавить(Макет.Имя, Лев(СтрЗаменить(Макет.Имя, "Списки", ""), 4));
			
		Иначе
			
			Если СписокВерсий.Количество() > 0 Тогда
				Прервать;	
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат СписокВерсий;	
	
КонецФункции

// Функция возвращает структуру содержащую 2 параметра:
// - ОтчетИсточникДанных
// - ОбластьИсточникДанных
// У отчета <ОтчетИсточникДанных> есть макет <ИмяМакетаСписков> (например: Списки2012Кв1)
// в макете <ИмяМакетаСписков> в области <ОбластьИсточникДанных> 
// содержатся коды и наименования элементов классификатора
//
Функция ПолучитьРасположениеКлассификатораСтатистики(ИмяКлассификатора) Экспорт
	
	СтруктураПараметров = Новый Структура("ОтчетИсточникДанных, ОбластьИсточникДанных");
	
	Если ИмяКлассификатора = "КлассификаторВидовЭкономическойДеятельности" Тогда
		
		СтруктураПараметров.Вставить("ОтчетИсточникДанных", "РегламентированныйОтчетСтатистикаФормаП1");
		СтруктураПараметров.Вставить("ОбластьИсточникДанных", "s_okved");
		
	ИначеЕсли ИмяКлассификатора = "КлассификаторПродукцииПоВидамДеятельности" Тогда
		
		СтруктураПараметров.Вставить("ОтчетИсточникДанных", "РегламентированныйОтчетСтатистикаФормаП1");
		СтруктураПараметров.Вставить("ОбластьИсточникДанных", "s_okp");
		
	ИначеЕсли ИмяКлассификатора = "КлассификаторУслугНаселению" Тогда
		
		СтруктураПараметров.Вставить("ОтчетИсточникДанных", "РегламентированныйОтчетСтатистикаФормаП5М");
		СтруктураПараметров.Вставить("ОбластьИсточникДанных", "s_okun");
		
	КонецЕсли;	
	
	Возврат СтруктураПараметров;
	
КонецФункции	

Функция ЭтоКодПоказателяП(КодПок)
	
	Если СтрДлина(КодПок) < 9 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Пок = СокрЛП(КодПок);
	
	Если Сред(Пок, 1, 1) = "П" Тогда
		
		Для Сч = 2 По СтрДлина(КодПок) Цикл
			
			КодСимв = КодСимвола(Пок, Сч);
			
			Если НЕ ((КодСимв >= КодСимвола("0")) И (КодСимв <= КодСимвола("9"))) Тогда
				Возврат Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Получает данные переданного списка выбора отчета
//
// Параметры:
// 	Обязательные
//  - ИмяОтчета - Строка, Идентификатор отчета содежащего искомый список;
//  - ИмяМакета - Строка, Идентификатор макета в котором хранятся списки отчета;
//  - ИмяСписка - Строка, Имя искомого списка в макете "Списки" отчета;
//  Необязательные
//  - ДополнятьКодСлева - Булево, дополнять код слева (по умолчанию) символом "0"  
//		до длины кода (по умолчанию) 12, длина кода и символ дополнения могут быть определены
//      следующими параметрами
//	- ДлинаКода - Число, длина кода классификатора, коды классификатора будут приведены к этой длине
//	- СимволДополненияКода - Строка, символ которым нужно дополнить код слева, до заданной длины
// ВозвращаемоеЗначение:
// 	- ТаблицаЗначений с данными списка
Функция ПолучитьЗначенияИзСпискаВыбораОтчета(ИмяОтчета, ИмяМакета, ИмяСписка, ДополнятьКодСлева = Ложь, ДлинаКода = Неопределено, СимволДополненияКода = "0") Экспорт
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	
	СпискиОтчета = Отчеты[ИмяОтчета].ПолучитьМакет(ИмяМакета);
	
	//В полученном макете содержатся значения всех списков используемых в отчете
	//ищем переданный
	Список = СпискиОтчета.Области.Найти(ИмяСписка);
	
	Если Список = Неопределено Тогда
		Возврат ТаблицаПоказателей;	
	КонецЕсли;	
	
	Если Список.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		//заполнение дерева данными списка	
		ВерхОбласти = Список.Верх;
		НизОбласти = Список.Низ;
		
		НомерКолонки = 1;
		Область = СпискиОтчета.Область(ВерхОбласти - 1, НомерКолонки);
		ИмяКолонки = Область.Текст;
		ДлинаКодаКлассификатора = 12;
		
		Если ДлинаКода <> Неопределено Тогда
			
			ДлинаКодаКлассификатора = ДлинаКода;
			
		КонецЕсли;	
		
		Пока ЗначениеЗаполнено(ИмяКолонки) Цикл
			
			
			Если ИмяКолонки = "id" Тогда
				ТаблицаПоказателей.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
			ИначеЕсли ИмяКолонки = "Text" Тогда
				ТаблицаПоказателей.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(255)));
			Иначе
				ТаблицаПоказателей.Колонки.Добавить(СтрЗаменить(ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяКолонки, "")," ", "_"), Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(255)));
			КонецЕсли;	
			
			НомерКолонки = НомерКолонки + 1;
			Область = СпискиОтчета.Область(ВерхОбласти - 1, НомерКолонки);
			ИмяКолонки = Область.Текст;
			
		КонецЦикла;
		
		Для НомСтр = ВерхОбласти По НизОбласти Цикл
			
			СтрокаСписка = ТаблицаПоказателей.Добавить();
			
			Для Каждого Колонка Из ТаблицаПоказателей.Колонки Цикл
				
				ЗначениеКолнки = СокрП(СпискиОтчета.Область(НомСтр, ТаблицаПоказателей.Колонки.Индекс(Колонка) + 1).Текст);
				Если Колонка.Имя = "Код" И ДополнятьКодСлева Тогда
					
					ЗначениеКолнки = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ЗначениеКолнки, ДлинаКодаКлассификатора, СимволДополненияКода);	
					
				КонецЕсли;	
				
				СтрокаСписка[Колонка.Имя] = ЗначениеКолнки;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;

	ТаблицаПоказателей.Сортировать(ТаблицаПоказателей.Колонки[0].Имя + " Возр");
	
	Возврат ТаблицаПоказателей;	

КонецФункции	

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНТЕРФЕЙСА ВЗАИМОДЕЙСТВИЯ С БЗКБ
//

// Процедура обновляет сохраненные данные регламентированного отчета 
// заданного вида для указанной организации за нужный отчетный период.
//
// Параметры:
//	ИсточникОтчета        - строка с наименованием регламентированного отчета (совпадает с именем объекта метаданных).
// 	Организация           - ссылка на элемент справочника организаций.
//  ДатаНачала     		  - дата начала отчетного периода (левая граница отчетного преиода).
//  ДатаОкончания         - дата окончания отчетного периода (правая граница отчетного периода).
//  СсылкаНаСохрРеглОтчет - ссылка на сохраненный регламентированный отчет, данные которого нужно получить.
//
// Пример:
//  ИнтерфейсыВзаимодействия.ОбновитьДанныеРеглОтчета("РегламентированныйОтчетРСВ1", Организация, '20120101', '20121231', СсылкаНаСохрРеглОтчет);
//
Процедура ОбновитьДанныеРеглОтчета(ИсточникОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет) Экспорт
	
	ИмяФормыОтчета = РегламентированнаяОтчетностьВызовСервера.ИмяФормыРеглОтчетаДействующейВОтчетномПериоде(ИсточникОтчета, ДатаОкончания, СсылкаНаСохрРеглОтчет);
	
	Если ИмяФормыОтчета = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось обновить данные отчета!'");
		Сообщение.Сообщить();
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = НачалоГода(ДатаОкончания);
	КонецЕсли;
	
	Если ИмяФормыОтчета = "ФормаОтчета2010Кв4" Тогда
		
		ОбновитьРеглОтчетРСВ1ФормаОтчета2010Кв4(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2011Кв1" Тогда
		
		ОбновитьРеглОтчетРСВ1ФормаОтчета2011Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2012Кв1" Тогда
		
		ОбновитьРеглОтчетРСВ1ФормаОтчета2012Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2013Кв1" Тогда
		
		ОбновитьРеглОтчетРСВ1ФормаОтчета2013Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2014Кв1" Тогда
		
		ОбновитьРеглОтчетРСВ1ФормаОтчета2014Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет);
			
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2015Кв1" Тогда
		
		ОбновитьРеглОтчетРСВ1ФормаОтчета2015Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет);
			
	КонецЕсли;
	
КонецПроцедуры

// Функция автоматически формирует регламентированный отчет заданного вида для указанной организации
// за нужный отчетный период, сохраняет его в ИБ и возвращает ссылку.
//
// Возвращемое значение: ссылка на документ "РегламентированныйОтчет".
//
// Параметры:
//  ИсточникОтчета      - строка с наименованием регламентированного отчета (совпадает с именем объекта метаданных);
//  Организация         - ссылка на элемент справочника организаций;
//  ДатаНачала          - дата начала отчетного периода (левая граница отчетного преиода);
//  ДатаОкончания       - дата окончания отчетного периода (правая граница отчетного периода);
//  КорректирующийОтчет - булево (признак корректирующего отчета);
//  ИмяФормыОтчета      - строка с именем формы регламентированного отчета (определяет нужную из форм,
//                        действующих в отчетном периоде).
//
// Пример:
//  ИнтерфейсыВзаимодействия.СформироватьАвтоматическиРеглОтчет("РегламентированныйОтчетРСВ1", Организация, '20120101', '20121231');
//
Функция СформироватьАвтоматическиРеглОтчет(ИсточникОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет = Ложь, ИмяФормыОтчета = Неопределено) Экспорт
	
	Если ИмяФормыОтчета = Неопределено Тогда
		ИмяФормыОтчета = РегламентированнаяОтчетностьВызовСервера.ИмяФормыРеглОтчетаДействующейВОтчетномПериоде(ИсточникОтчета, ДатаОкончания);
	КонецЕсли;
	
	Если ИмяФормыОтчета = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось сформировать отчет!'");
		Сообщение.Сообщить();
		
		Возврат ИмяФормыОтчета;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = НачалоГода(ДатаОкончания);
	КонецЕсли;
	
	Если ИмяФормыОтчета = "ФормаОтчета2010Кв4" Тогда
		
		Возврат СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2010Кв4(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2011Кв1" Тогда
		
		Возврат СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2011Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2012Кв1" Тогда
		
		Возврат СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2012Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2013Кв1" Тогда
		
		Возврат СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2013Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2014Кв1" Тогда
		
		Возврат СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2014Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет);
		
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2015Кв1" Тогда
		
		Возврат СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2015Кв1(
			ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ОбновитьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет)
	
	ДанныеРеглОтчета = ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2010Кв4(СсылкаНаСохрРеглОтчет);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	РазделыОтчета.Вставить("Раздел12",  Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел12));
	РазделыОтчета.Вставить("Раздел30",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел30));
	РазделыОтчета.Вставить("Раздел41",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел41, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0004100010, "П0004100010"));
	РазделыОтчета.Вставить("Раздел42",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел42));
	РазделыОтчета.Вставить("Раздел43",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел43));
	РазделыОтчета.Вставить("Раздел50",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел50));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, СтруктураРеквизитовОтчета(ДанныеРеглОтчета));
	
	ЗаписатьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецПроцедуры

Процедура ОбновитьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет)
	
	ДанныеРеглОтчета = ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2011Кв1(СсылкаНаСохрРеглОтчет);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	РазделыОтчета.Вставить("Раздел12",  Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел12));
	РазделыОтчета.Вставить("Раздел30",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел30));
	РазделыОтчета.Вставить("Раздел41",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел41, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0004100010, "П0004100010"));
	РазделыОтчета.Вставить("Раздел42",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел42));
	РазделыОтчета.Вставить("Раздел43",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел43));
	РазделыОтчета.Вставить("Раздел44",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел44));
	РазделыОтчета.Вставить("Раздел50",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел50));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, СтруктураРеквизитовОтчета(ДанныеРеглОтчета));
	
	ЗаписатьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецПроцедуры

Процедура ОбновитьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет)
	
	ДанныеРеглОтчета = ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2012Кв1(СсылкаНаСохрРеглОтчет);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	РазделыОтчета.Вставить("Раздел1",   Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1));
	РазделыОтчета.Вставить("Раздел2",   Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел2));
	РазделыОтчета.Вставить("Раздел31",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел31, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0003100010, "П0003100010"));
	РазделыОтчета.Вставить("Раздел32",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел32));
	РазделыОтчета.Вставить("Раздел33",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел33));
	РазделыОтчета.Вставить("Раздел34",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел34));
	РазделыОтчета.Вставить("Раздел35",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел35, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0003500001, "П0003500001"));
	РазделыОтчета.Вставить("Раздел36",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел36));
	РазделыОтчета.Вставить("Раздел37",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел37));
	РазделыОтчета.Вставить("Раздел38",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел38));
	РазделыОтчета.Вставить("Раздел4",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел4, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0004000001, "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел5, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0005000001, "П0005000001"));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	ЗаписатьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецПроцедуры

Процедура ОбновитьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет)
	
	ДанныеРеглОтчета = ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2013Кв1(СсылкаНаСохрРеглОтчет);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	РазделыОтчета.Вставить("Раздел1",   Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1));
	РазделыОтчета.Вставить("Раздел2",   Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел2));
	РазделыОтчета.Вставить("Раздел22",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел22));
	РазделыОтчета.Вставить("Раздел31",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел31, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0003100001, "П0003100001"));
	РазделыОтчета.Вставить("Раздел32",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел32));
	РазделыОтчета.Вставить("Раздел34",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел34));
	РазделыОтчета.Вставить("Раздел35",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел35, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0003500001, "П0003500001"));
	РазделыОтчета.Вставить("Раздел36",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел36));
	РазделыОтчета.Вставить("Раздел37",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел37));
	РазделыОтчета.Вставить("Раздел38",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел38));
	РазделыОтчета.Вставить("Раздел4",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел4, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0004000001, "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел5, ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0005000001, "П0005000001"));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	ЗаписатьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецПроцедуры

Процедура ОбновитьРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет)
	
	ДанныеРеглОтчета = ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2014Кв1(СсылкаНаСохрРеглОтчет);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	РазделыОтчета.Вставить("Раздел1",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1));
	РазделыОтчета.Вставить("Раздел21",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел21));
	РазделыОтчета.Вставить("Раздел22",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел22));
	РазделыОтчета.Вставить("Раздел24",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел24));
	РазделыОтчета.Вставить("Раздел31",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел31));
	РазделыОтчета.Вставить("Раздел33",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел33,
		ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0003500001, "П0003500001"));
	РазделыОтчета.Вставить("Раздел35",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел35));
	РазделыОтчета.Вставить("Раздел4",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел4,
		ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0004000001, "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел5,
		ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0005000001, "П0005000001"));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация,
		ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	ЗаписатьРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация,
		ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецПроцедуры

Процедура ОбновитьРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, СсылкаНаСохрРеглОтчет)
	
	ДанныеРеглОтчета = ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2015Кв1(СсылкаНаСохрРеглОтчет);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	РазделыОтчета.Вставить("Раздел1",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1));
	РазделыОтчета.Вставить("Раздел21",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел21));
	РазделыОтчета.Вставить("Раздел22",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел22));
	РазделыОтчета.Вставить("Раздел24",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Истина, ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел24));
	РазделыОтчета.Вставить("Раздел31",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел31));
	РазделыОтчета.Вставить("Раздел32",
		Новый Структура("МногостраничностьВРазделе, Данные",
		Ложь,   ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел32));
	РазделыОтчета.Вставить("Раздел4",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел4,
		ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0004000001, "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел5,
		ДанныеРеглОтчета.ДанныеМногострочныхРазделов.П0005000001, "П0005000001"));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация,
		ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	ЗаписатьРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация,
		ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, СтруктураРеквизитовОтчета)
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	ТаблицаСтраницРаздела12 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела12.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела12.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела12.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела12.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел12.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела12.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
	Контейнер.Вставить("Раздел12",  ТаблицаСтраницРаздела12);
	Контейнер.Вставить("Раздел30",  РазделыОтчета.Раздел30.Данные);
	Контейнер.Вставить("Раздел41",  РазделыОтчета.Раздел41.Данные);
	Контейнер.Вставить("Раздел41_ДанныеДопСтрок", РазделыОтчета.Раздел41.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел42",  РазделыОтчета.Раздел42.Данные);
	Контейнер.Вставить("Раздел43",  РазделыОтчета.Раздел43.Данные);
	Контейнер.Вставить("Раздел50",  РазделыОтчета.Раздел50.Данные);
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета, ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
	
	РазделыОтчета.Раздел12.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела12 Цикл
		
		Стр = РазделыОтчета.Раздел12.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел41.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел41.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел41.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	Если РазделыОтчета.Раздел41.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел41.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, СтруктураРеквизитовОтчета)
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	ТаблицаСтраницРаздела12 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела12.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела12.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела12.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела12.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел12.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела12.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
	Контейнер.Вставить("Раздел12",  ТаблицаСтраницРаздела12);
	Контейнер.Вставить("Раздел30",  РазделыОтчета.Раздел30.Данные);
	Контейнер.Вставить("Раздел41",  РазделыОтчета.Раздел41.Данные);
	Контейнер.Вставить("Раздел41_ДанныеДопСтрок", РазделыОтчета.Раздел41.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел42",  РазделыОтчета.Раздел42.Данные);
	Контейнер.Вставить("Раздел43",  РазделыОтчета.Раздел43.Данные);
	Контейнер.Вставить("Раздел44",  РазделыОтчета.Раздел44.Данные);
	Контейнер.Вставить("Раздел50",  РазделыОтчета.Раздел50.Данные);
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета, ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
	
	РазделыОтчета.Раздел12.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела12 Цикл
		
		Стр = РазделыОтчета.Раздел12.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел41.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел41.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел41.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	Если РазделыОтчета.Раздел41.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел41.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета)
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	ТаблицаСтраницРаздела2 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела2.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела2.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела2.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела2.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел2.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела2.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
	Контейнер.Вставить("Раздел1",   РазделыОтчета.Раздел1.Данные);
	Контейнер.Вставить("Раздел2",   ТаблицаСтраницРаздела2);
	Контейнер.Вставить("Раздел31",  РазделыОтчета.Раздел31.Данные);
	Контейнер.Вставить("Раздел31_ДанныеДопСтрок", РазделыОтчета.Раздел31.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел32",  РазделыОтчета.Раздел32.Данные);
	Контейнер.Вставить("Раздел33",  РазделыОтчета.Раздел33.Данные);
	Контейнер.Вставить("Раздел34",  РазделыОтчета.Раздел34.Данные);
	Контейнер.Вставить("Раздел35",  РазделыОтчета.Раздел35.Данные);
	Контейнер.Вставить("Раздел35_ДанныеДопСтрок", РазделыОтчета.Раздел35.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел36",  РазделыОтчета.Раздел36.Данные);
	Контейнер.Вставить("Раздел37",  РазделыОтчета.Раздел37.Данные);
	Контейнер.Вставить("Раздел38",  РазделыОтчета.Раздел38.Данные);
	Контейнер.Вставить("Раздел4",   РазделыОтчета.Раздел4.Данные);
	Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел5",   РазделыОтчета.Раздел5.Данные);
	Контейнер.Вставить("Раздел5_ДанныеДопСтрок", РазделыОтчета.Раздел5.ДанныеДопСтрок);
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета, ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
	
	РазделыОтчета.Раздел2.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела2 Цикл
		
		Стр = РазделыОтчета.Раздел2.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел31.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел31.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел31.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел35.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел35.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел35.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел4.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел4.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел5.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел5.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел5.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	Если РазделыОтчета.Раздел31.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел31.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	Если РазделыОтчета.Раздел35.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел35.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	Если РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел4.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	Если РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел5.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета)
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	ТаблицаСтраницРаздела2 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела2.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела2.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела2.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела2.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел2.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела2.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
	Контейнер.Вставить("Раздел1",   РазделыОтчета.Раздел1.Данные);
	Контейнер.Вставить("Раздел2",   ТаблицаСтраницРаздела2);
	Контейнер.Вставить("Раздел22",  РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел31",  РазделыОтчета.Раздел31.Данные);
	Контейнер.Вставить("Раздел31_ДанныеДопСтрок", РазделыОтчета.Раздел31.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел32",  РазделыОтчета.Раздел32.Данные);
	Контейнер.Вставить("Раздел34",  РазделыОтчета.Раздел34.Данные);
	Контейнер.Вставить("Раздел35",  РазделыОтчета.Раздел35.Данные);
	Контейнер.Вставить("Раздел35_ДанныеДопСтрок", РазделыОтчета.Раздел35.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел36",  РазделыОтчета.Раздел36.Данные);
	Контейнер.Вставить("Раздел37",  РазделыОтчета.Раздел37.Данные);
	Контейнер.Вставить("Раздел38",  РазделыОтчета.Раздел38.Данные);
	Контейнер.Вставить("Раздел4",   РазделыОтчета.Раздел4.Данные);
	Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел5",   РазделыОтчета.Раздел5.Данные);
	Контейнер.Вставить("Раздел5_ДанныеДопСтрок", РазделыОтчета.Раздел5.ДанныеДопСтрок);
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета, ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
	
	РазделыОтчета.Раздел2.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела2 Цикл
		
		Стр = РазделыОтчета.Раздел2.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел31.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел31.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел31.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел35.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел35.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел35.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел4.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел4.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел5.ДанныеДопСтрок Цикл
						
		Для Каждого Колонка Из РазделыОтчета.Раздел5.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел5.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	Если РазделыОтчета.Раздел31.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел31.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	Если РазделыОтчета.Раздел35.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел35.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	Если РазделыОтчета.Раздел35.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел35.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	Если РазделыОтчета.Раздел35.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел35.ДанныеДопСтрок.Добавить();
	КонецЕсли; 
	
	РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета)
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация",             Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	ТаблицаСтраницРаздела21 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела21.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела21.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела21.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела21.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел21.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела21.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	ТаблицаСтраницРаздела24 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела24.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела24.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела24.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела24.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел24.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела24.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
	Контейнер.Вставить("Раздел1",   РазделыОтчета.Раздел1.Данные);
	Контейнер.Вставить("Раздел21",  ТаблицаСтраницРаздела21);
	Контейнер.Вставить("Раздел22",  РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел24",  ТаблицаСтраницРаздела24);
	Контейнер.Вставить("Раздел31",  РазделыОтчета.Раздел31.Данные);
	Контейнер.Вставить("Раздел33",  РазделыОтчета.Раздел33.Данные);
	Контейнер.Вставить("Раздел33_ДанныеДопСтрок", РазделыОтчета.Раздел33.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел35",  РазделыОтчета.Раздел35.Данные);
	Контейнер.Вставить("Раздел4",   РазделыОтчета.Раздел4.Данные);
	Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел5",   РазделыОтчета.Раздел5.Данные);
	Контейнер.Вставить("Раздел5_ДанныеДопСтрок", РазделыОтчета.Раздел5.ДанныеДопСтрок);
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета, ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
	
	РазделыОтчета.Раздел21.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела21 Цикл
		
		Стр = РазделыОтчета.Раздел21.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	РазделыОтчета.Раздел24.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела24 Цикл
		
		Стр = РазделыОтчета.Раздел24.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел33.ДанныеДопСтрок Цикл
		
		Для Каждого Колонка Из РазделыОтчета.Раздел33.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел33.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
		
		Для Каждого Колонка Из РазделыОтчета.Раздел4.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел4.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел5.ДанныеДопСтрок Цикл
		
		Для Каждого Колонка Из РазделыОтчета.Раздел5.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел5.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	Если РазделыОтчета.Раздел33.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел33.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	Если РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел4.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	Если РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел5.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета)
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация",             Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
	
	ТаблицаСтраницРаздела21 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела21.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела21.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела21.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела21.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел21.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела21.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	ТаблицаСтраницРаздела24 = Новый ТаблицаЗначений;
	ТаблицаСтраницРаздела24.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ТаблицаСтраницРаздела24.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ТаблицаСтраницРаздела24.Колонки.Добавить("Данные", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаСтраницРаздела24.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрТаблЗнач Из РазделыОтчета.Раздел24.Данные Цикл
		
		Стр = ТаблицаСтраницРаздела24.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		СтрокаСписка = Новый СписокЗначений();
		СтрокаСписка.Вставить(0, СтрТаблЗнач.Данные);
		Стр.Данные = СтрокаСписка;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
	Контейнер.Вставить("Раздел1",   РазделыОтчета.Раздел1.Данные);
	Контейнер.Вставить("Раздел21",  ТаблицаСтраницРаздела21);
	Контейнер.Вставить("Раздел22",  РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел24",  ТаблицаСтраницРаздела24);
	Контейнер.Вставить("Раздел31",  РазделыОтчета.Раздел31.Данные);
	Контейнер.Вставить("Раздел32",  РазделыОтчета.Раздел32.Данные);
	Контейнер.Вставить("Раздел4",   РазделыОтчета.Раздел4.Данные);
	Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел5",   РазделыОтчета.Раздел5.Данные);
	Контейнер.Вставить("Раздел5_ДанныеДопСтрок", РазделыОтчета.Раздел5.ДанныеДопСтрок);
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета, ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
	
	РазделыОтчета.Раздел21.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела21 Цикл
		
		Стр = РазделыОтчета.Раздел21.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	РазделыОтчета.Раздел24.Данные.Очистить();
	
	Для Каждого СтрТаблЗнач Из ТаблицаСтраницРаздела24 Цикл
		
		Стр = РазделыОтчета.Раздел24.Данные.Добавить();
		Стр.Представление = СтрТаблЗнач.Представление;
		Стр.АктивнаяСтраница = СтрТаблЗнач.АктивнаяСтраница;
		Стр.Данные = СтрТаблЗнач.Данные[0].Значение;
		Стр.АвтоматическоеПредставление = СтрТаблЗнач.АвтоматическоеПредставление;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
		
		Для Каждого Колонка Из РазделыОтчета.Раздел4.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел4.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	НомСтр = 1;
	
	Для Каждого ДопСтрока Из РазделыОтчета.Раздел5.ДанныеДопСтрок Цикл
		
		Для Каждого Колонка Из РазделыОтчета.Раздел5.ДанныеДопСтрок.Колонки Цикл
		
			РазделыОтчета.Раздел5.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
		
		КонецЦикла;
		
		НомСтр = НомСтр + 1;
		
	КонецЦикла;
	
	ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета);
	
	Если РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел4.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	Если РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел5.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2010Кв4(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Сведения = Новый СписокЗначений;
	
	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	Сведения.Добавить("", "НаимЮЛПол");
	Сведения.Добавить("", "ОГРН"); 
	Сведения.Добавить("", "ОКАТО");
	Сведения.Добавить("", "ОКВЭД");
	Сведения.Добавить("", "РегистрационныйНомерФСС");
	Сведения.Добавить("", "АдрЮР");
	Сведения.Добавить("", "АдрФакт");
	Сведения.Добавить("", "АдрПрописки");
	Сведения.Добавить("", "АдрМЖ");
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, Сведения);
	
	ИННЮЛ = "";
	КППЮЛ = "";
	НаимЮЛПол = "";
	ОГРН = "";
	ОКАТО = "";
	ОКВЭД = "";
	РегистрационныйНомерФСС = "";
	РегНомПФР = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаОкончания, "РегНомПФР").РегНомПФР;
	АдрЮР = "";
	АдрФакт = "";
	АдрПрописки = "";
	АдрМЖ = "";
	ФИОРук = "";
	ФИОБух = "";
	ФИО = "";
	ФИОИсп = "";
	ТелИсп = "";
	ТелОрганизации = "";
	ТелСлуж = "";
	
	ОргСведения.Свойство("ИННЮЛ", ИННЮЛ);
	ОргСведения.Свойство("КППЮЛ", КППЮЛ);
	ОргСведения.Свойство("НаимЮЛПол", НаимЮЛПол);
	ОргСведения.Свойство("ОГРН", ОГРН);
	ОргСведения.Свойство("ОКАТО", ОКАТО);
	ОргСведения.Свойство("ОКВЭД", ОКВЭД);
	ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
	ОргСведения.Свойство("АдрЮР", АдрЮР);
	ОргСведения.Свойство("АдрФакт", АдрФакт);
	ОргСведения.Свойство("АдрПрописки", АдрПрописки);
	ОргСведения.Свойство("АдрМЖ", АдрМЖ);
	ОргСведения.Свойство("ФИОРук", ФИОРук);
	ОргСведения.Свойство("ФИОБух", ФИОБух);
	ОргСведения.Свойство("ФИО", ФИО);
	ОргСведения.Свойство("ФИОИсп", ФИОИсп);
	ОргСведения.Свойство("ТелИсп", ТелИсп);
	ОргСведения.Свойство("ТелОрганизации", ТелОрганизации);
	ОргСведения.Свойство("ТелСлуж", ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол = ФИО;
		Адрес = АдрПрописки;
		ТелОрганизации = ТелСлуж;
		ФИОРук = ФИО;
		ФИОБух = "";
		ФИОИсп = "";
		ТелИсп = "";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОргНазв = НаимЮЛПол;   	
	РазделыОтчета.Титульный.Данные.ПрПодп = "1"; 
	РазделыОтчета.Титульный.Данные.ОргПодписантФамилия = ФИОРук;    	
	РазделыОтчета.Титульный.Данные.ДокУпПред = "";
	РазделыОтчета.Титульный.Данные.ИНН = ИННЮЛ;
	РазделыОтчета.Титульный.Данные.КПП = КППЮЛ;
	РазделыОтчета.Титульный.Данные.ОГРН = ОГРН;
	
	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если Найти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	РазделыОтчета.Титульный.Данные.ТелОрганизации = ТелОрганизации;
	РазделыОтчета.Титульный.Данные.ОКАТО = ОКАТО;
	РазделыОтчета.Титульный.Данные.ОКВЭД = ОКВЭД;	
	
	Если СтрДлина(РегНомПФР) < 14 Тогда
		Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
		КонецЕсли;	
		Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
		КонецЕсли;
	КонецЕсли;	
	
	РазделыОтчета.Титульный.Данные.НомРег = РегНомПФР;
	
	Если Не ПБОЮЛ Тогда
		Адрес = АдрЮр;
	КонецЕсли;
	
	СтруктураАдреса = РегламентированнаяОтчетностьКлиентСервер.РазложитьАдрес(Адрес);
	
	Если НЕ СтруктураАдреса = Неопределено Тогда
		
		РазделыОтчета.Титульный.Данные.Адрес1 = СтруктураАдреса.Индекс;
		РазделыОтчета.Титульный.Данные.Адрес2 = СтруктураАдреса.Регион;
		РазделыОтчета.Титульный.Данные.Адрес3 = СтруктураАдреса.Район;
		РазделыОтчета.Титульный.Данные.Адрес4 = СтруктураАдреса.Город;
		РазделыОтчета.Титульный.Данные.Адрес5 = СтруктураАдреса.НаселенныйПункт;
		РазделыОтчета.Титульный.Данные.Адрес6 = СтруктураАдреса.Улица;
		РазделыОтчета.Титульный.Данные.Адрес7 = СтруктураАдреса.Дом;
		РазделыОтчета.Титульный.Данные.Адрес8 = СтруктураАдреса.Корпус;
		РазделыОтчета.Титульный.Данные.Адрес9 = СтруктураАдреса.Квартира;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2011Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Сведения = Новый СписокЗначений;
	
	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	Сведения.Добавить("", "НаимЮЛПол");
	Сведения.Добавить("", "ОГРН"); 
	Сведения.Добавить("", "ОКАТО");
	Сведения.Добавить("", "ОКВЭД");
	Сведения.Добавить("", "РегистрационныйНомерФСС");
	Сведения.Добавить("", "АдрЮР");
	Сведения.Добавить("", "АдрФакт");
	Сведения.Добавить("", "АдрПрописки");
	Сведения.Добавить("", "АдрМЖ");
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, Сведения);
	
	ИННЮЛ = "";
	КППЮЛ = "";
	НаимЮЛПол = "";
	ОГРН = "";
	ОКАТО = "";
	ОКВЭД = "";
	РегистрационныйНомерФСС = "";
	РегНомПФР = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаОкончания, "РегНомПФР").РегНомПФР;
	АдрЮР = "";
	АдрФакт = "";
	АдрПрописки = "";
	АдрМЖ = "";
	ФИОРук = "";
	ФИОБух = "";
	ФИО = "";
	ФИОИсп = "";
	ТелИсп = "";
	ТелОрганизации = "";
	ТелСлуж = "";
	
	ОргСведения.Свойство("ИННЮЛ", ИННЮЛ);
	ОргСведения.Свойство("КППЮЛ", КППЮЛ);
	ОргСведения.Свойство("НаимЮЛПол", НаимЮЛПол);
	ОргСведения.Свойство("ОГРН", ОГРН);
	ОргСведения.Свойство("ОКАТО", ОКАТО);
	ОргСведения.Свойство("ОКВЭД", ОКВЭД);
	ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
	ОргСведения.Свойство("АдрЮР", АдрЮР);
	ОргСведения.Свойство("АдрФакт", АдрФакт);
	ОргСведения.Свойство("АдрПрописки", АдрПрописки);
	ОргСведения.Свойство("АдрМЖ", АдрМЖ);
	ОргСведения.Свойство("ФИОРук", ФИОРук);
	ОргСведения.Свойство("ФИОБух", ФИОБух);
	ОргСведения.Свойство("ФИО", ФИО);
	ОргСведения.Свойство("ФИОИсп", ФИОИсп);
	ОргСведения.Свойство("ТелИсп", ТелИсп);
	ОргСведения.Свойство("ТелОрганизации", ТелОрганизации);
	ОргСведения.Свойство("ТелСлуж", ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол = ФИО;
		Адрес = АдрПрописки;
		ТелОрганизации = ТелСлуж;
		ФИОРук = ФИО;
		ФИОБух = "";
		ФИОИсп = "";
		ТелИсп = "";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОргНазв = НаимЮЛПол;   	
	РазделыОтчета.Титульный.Данные.ПрПодп = "1"; 
	РазделыОтчета.Титульный.Данные.ОргПодписантФамилия = ФИОРук;    	
	РазделыОтчета.Титульный.Данные.ДокУпПред = "";
	РазделыОтчета.Титульный.Данные.ИНН = ИННЮЛ;
	РазделыОтчета.Титульный.Данные.КПП = КППЮЛ;
	РазделыОтчета.Титульный.Данные.ОГРН = ОГРН;
	
	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если Найти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	РазделыОтчета.Титульный.Данные.ТелОрганизации = ТелОрганизации;
	РазделыОтчета.Титульный.Данные.ОКАТО = ОКАТО;
	РазделыОтчета.Титульный.Данные.ОКВЭД = ОКВЭД;	
	
	Если СтрДлина(РегНомПФР) < 14 Тогда
		Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
		КонецЕсли;	
		Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
		КонецЕсли;
	КонецЕсли;	
	
	РазделыОтчета.Титульный.Данные.НомРег = РегНомПФР;
	
	Если Не ПБОЮЛ Тогда
		Адрес = АдрЮр;
	КонецЕсли;
	
	СтруктураАдреса = РегламентированнаяОтчетностьКлиентСервер.РазложитьАдрес(Адрес);
	
	Если НЕ СтруктураАдреса = Неопределено Тогда
		
		РазделыОтчета.Титульный.Данные.Адрес1 = СтруктураАдреса.Индекс;
		РазделыОтчета.Титульный.Данные.Адрес2 = СтруктураАдреса.Регион;
		РазделыОтчета.Титульный.Данные.Адрес3 = СтруктураАдреса.Район;
		РазделыОтчета.Титульный.Данные.Адрес4 = СтруктураАдреса.Город;
		РазделыОтчета.Титульный.Данные.Адрес5 = СтруктураАдреса.НаселенныйПункт;
		РазделыОтчета.Титульный.Данные.Адрес6 = СтруктураАдреса.Улица;
		РазделыОтчета.Титульный.Данные.Адрес7 = СтруктураАдреса.Дом;
		РазделыОтчета.Титульный.Данные.Адрес8 = СтруктураАдреса.Корпус;
		РазделыОтчета.Титульный.Данные.Адрес9 = СтруктураАдреса.Квартира;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2012Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Сведения = Новый СписокЗначений;
	
	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	Сведения.Добавить("", "НаимЮЛПол");
	Сведения.Добавить("", "ОГРН"); 
	Сведения.Добавить("", "ОКАТО");
	Сведения.Добавить("", "ОКВЭД");
	Сведения.Добавить("", "РегистрационныйНомерФСС");
	Сведения.Добавить("", "АдрЮР");
	Сведения.Добавить("", "АдрФакт");
	Сведения.Добавить("", "АдрПрописки");
	Сведения.Добавить("", "АдрМЖ");
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, Сведения);
	
	ИННЮЛ = "";
	КППЮЛ = "";
	НаимЮЛПол = "";
	ОГРН = "";
	ОКАТО = "";
	ОКВЭД = "";
	РегистрационныйНомерФСС = "";
	РегНомПФР = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаОкончания, "РегНомПФР").РегНомПФР;
	АдрЮР = "";
	АдрФакт = "";
	АдрПрописки = "";
	АдрМЖ = "";
	ФИОРук = "";
	ФИОБух = "";
	ФИО = "";
	ФИОИсп = "";
	ТелИсп = "";
	ТелОрганизации = "";
	ТелСлуж = "";
	
	ОргСведения.Свойство("ИННЮЛ", ИННЮЛ);
	ОргСведения.Свойство("КППЮЛ", КППЮЛ);
	ОргСведения.Свойство("НаимЮЛПол", НаимЮЛПол);
	ОргСведения.Свойство("ОГРН", ОГРН);
	ОргСведения.Свойство("ОКАТО", ОКАТО);
	ОргСведения.Свойство("ОКВЭД", ОКВЭД);
	ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
	ОргСведения.Свойство("АдрЮР", АдрЮР);
	ОргСведения.Свойство("АдрФакт", АдрФакт);
	ОргСведения.Свойство("АдрПрописки", АдрПрописки);
	ОргСведения.Свойство("АдрМЖ", АдрМЖ);
	ОргСведения.Свойство("ФИОРук", ФИОРук);
	ОргСведения.Свойство("ФИОБух", ФИОБух);
	ОргСведения.Свойство("ФИО", ФИО);
	ОргСведения.Свойство("ФИОИсп", ФИОИсп);
	ОргСведения.Свойство("ТелИсп", ТелИсп);
	ОргСведения.Свойство("ТелОрганизации", ТелОрганизации);
	ОргСведения.Свойство("ТелСлуж", ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол = ФИО;
		Адрес = АдрПрописки;
		ТелОрганизации = ТелСлуж;
		ФИОРук = ФИО;
		ФИОБух = "";
		ФИОИсп = "";
		ТелИсп = "";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОргНазв = НаимЮЛПол;   	
	РазделыОтчета.Титульный.Данные.ПрПодп = "1"; 
	РазделыОтчета.Титульный.Данные.ОргПодписантФамилия = ФИОРук;    	
	РазделыОтчета.Титульный.Данные.ОргПредНаим = "";
	РазделыОтчета.Титульный.Данные.ДокУпПред = "";
	РазделыОтчета.Титульный.Данные.ИНН = ИННЮЛ;
	РазделыОтчета.Титульный.Данные.КПП = КППЮЛ;
	РазделыОтчета.Титульный.Данные.ОГРН = ОГРН;
	
	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если Найти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	РазделыОтчета.Титульный.Данные.ТелОрганизации = ТелОрганизации;
	РазделыОтчета.Титульный.Данные.ОКАТО = ОКАТО;
	РазделыОтчета.Титульный.Данные.ОКВЭД = ОКВЭД;	
	
	Если СтрДлина(РегНомПФР) < 14 Тогда
		Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
		КонецЕсли;	
		Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
		КонецЕсли;
	КонецЕсли;	
	
	РазделыОтчета.Титульный.Данные.НомРег = РегНомПФР;
	
	Если Не ПБОЮЛ Тогда
		Адрес = АдрЮр;
	КонецЕсли;
	
	СтруктураАдреса = РегламентированнаяОтчетностьКлиентСервер.РазложитьАдрес(Адрес);
	
	Если НЕ СтруктураАдреса = Неопределено Тогда
		
		РазделыОтчета.Титульный.Данные.Адрес1 = СтруктураАдреса.Индекс;
		РазделыОтчета.Титульный.Данные.Адрес2 = СтруктураАдреса.Регион;
		РазделыОтчета.Титульный.Данные.Адрес3 = СтруктураАдреса.Район;
		РазделыОтчета.Титульный.Данные.Адрес4 = СтруктураАдреса.Город;
		РазделыОтчета.Титульный.Данные.Адрес5 = СтруктураАдреса.НаселенныйПункт;
		РазделыОтчета.Титульный.Данные.Адрес6 = СтруктураАдреса.Улица;
		РазделыОтчета.Титульный.Данные.Адрес7 = СтруктураАдреса.Дом;
		РазделыОтчета.Титульный.Данные.Адрес8 = СтруктураАдреса.Корпус;
		РазделыОтчета.Титульный.Данные.Адрес9 = СтруктураАдреса.Квартира;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2013Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);

	Сведения = Новый СписокЗначений;

	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	Сведения.Добавить("", "НаимЮЛПол");
	Сведения.Добавить("", "ОГРН"); 
	Сведения.Добавить("", "ОКАТО");
	Сведения.Добавить("", "ОКВЭД");
	Сведения.Добавить("", "РегистрационныйНомерФСС");
	Сведения.Добавить("", "АдрЮР");
	Сведения.Добавить("", "АдрФакт");
	Сведения.Добавить("", "АдрПрописки");
	Сведения.Добавить("", "АдрМЖ");
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, Сведения);
	
	ИННЮЛ = "";
	КППЮЛ = "";
	НаимЮЛПол = "";
	ОГРН = "";
	ОКАТО = "";
	ОКВЭД = "";
	РегистрационныйНомерФСС = "";
	РегНомПФР = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаОкончания, "РегНомПФР").РегНомПФР;
	АдрЮР = "";
	АдрФакт = "";
	АдрПрописки = "";
	АдрМЖ = "";
	ФИОРук = "";
	ФИОБух = "";
	ФИО = "";
	ФИОИсп = "";
	ТелИсп = "";
	ТелОрганизации = "";
	ТелСлуж = "";
	
	ОргСведения.Свойство("ИННЮЛ", ИННЮЛ);
	ОргСведения.Свойство("КППЮЛ", КППЮЛ);
	ОргСведения.Свойство("НаимЮЛПол", НаимЮЛПол);
	ОргСведения.Свойство("ОГРН", ОГРН);
	ОргСведения.Свойство("ОКАТО", ОКАТО);
	ОргСведения.Свойство("ОКВЭД", ОКВЭД);
	ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
	ОргСведения.Свойство("АдрЮР", АдрЮР);
	ОргСведения.Свойство("АдрФакт", АдрФакт);
	ОргСведения.Свойство("АдрПрописки", АдрПрописки);
	ОргСведения.Свойство("АдрМЖ", АдрМЖ);
	ОргСведения.Свойство("ФИОРук", ФИОРук);
	ОргСведения.Свойство("ФИОБух", ФИОБух);
	ОргСведения.Свойство("ФИО", ФИО);
	ОргСведения.Свойство("ФИОИсп", ФИОИсп);
	ОргСведения.Свойство("ТелИсп", ТелИсп);
	ОргСведения.Свойство("ТелОрганизации", ТелОрганизации);
	ОргСведения.Свойство("ТелСлуж", ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол = ФИО;
		Адрес = АдрПрописки;
		ТелОрганизации = ТелСлуж;
		ФИОРук = ФИО;
		ФИОБух = "";
		ФИОИсп = "";
		ТелИсп = "";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОргНазв = НаимЮЛПол;
	РазделыОтчета.Титульный.Данные.ПрПодп = "1"; 
	РазделыОтчета.Титульный.Данные.ОргПодписантФамилия = ФИОРук;
	РазделыОтчета.Титульный.Данные.ОргПредНаим = "";
	РазделыОтчета.Титульный.Данные.ДокУпПред = "";
	РазделыОтчета.Титульный.Данные.ИНН = ИННЮЛ;
	РазделыОтчета.Титульный.Данные.КПП = КППЮЛ;
	РазделыОтчета.Титульный.Данные.ОГРН = ОГРН;
	
	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если Найти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	РазделыОтчета.Титульный.Данные.ТелОрганизации = ТелОрганизации;
	РазделыОтчета.Титульный.Данные.ОКАТО = ОКАТО;
	РазделыОтчета.Титульный.Данные.ОКВЭД = ОКВЭД;
	
	Если СтрДлина(РегНомПФР) < 14 Тогда
		Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
		КонецЕсли;	
		Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
		КонецЕсли;
	КонецЕсли;	
	
	РазделыОтчета.Титульный.Данные.НомРег = РегНомПФР;
	
	Если Не ПБОЮЛ Тогда
		Адрес = АдрЮр;
	КонецЕсли;
	
	СтруктураАдреса = РегламентированнаяОтчетностьКлиентСервер.РазложитьАдрес(Адрес);
	
	Если НЕ СтруктураАдреса = Неопределено Тогда
		
		РазделыОтчета.Титульный.Данные.Адрес1 = СтруктураАдреса.Индекс;
		РазделыОтчета.Титульный.Данные.Адрес2 = СтруктураАдреса.Регион;
		РазделыОтчета.Титульный.Данные.Адрес3 = СтруктураАдреса.Район;
		РазделыОтчета.Титульный.Данные.Адрес4 = СтруктураАдреса.Город;
		РазделыОтчета.Титульный.Данные.Адрес5 = СтруктураАдреса.НаселенныйПункт;
		РазделыОтчета.Титульный.Данные.Адрес6 = СтруктураАдреса.Улица;
		РазделыОтчета.Титульный.Данные.Адрес7 = СтруктураАдреса.Дом;
		РазделыОтчета.Титульный.Данные.Адрес8 = СтруктураАдреса.Корпус;
		РазделыОтчета.Титульный.Данные.Адрес9 = СтруктураАдреса.Квартира;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2014Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Сведения = Новый СписокЗначений;
	
	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	Сведения.Добавить("", "НаимЮЛПол");
	Сведения.Добавить("", "ОКВЭД");
	Сведения.Добавить("", "РегистрационныйНомерФСС");
	Сведения.Добавить("", "АдрЮР");
	Сведения.Добавить("", "АдрФакт");
	Сведения.Добавить("", "АдрПрописки");
	Сведения.Добавить("", "АдрМЖ");
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаПодписи, Сведения);
	
	ИННЮЛ                   = "";
	КППЮЛ                   = "";
	НаимЮЛПол               = "";
	ОКВЭД                   = "";
	РегистрационныйНомерФСС = "";
	РегНомПФР               = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаОкончания, "РегНомПФР").РегНомПФР;
	АдрЮР                   = "";
	АдрФакт                 = "";
	АдрПрописки             = "";
	АдрМЖ                   = "";
	ФИОРук                  = "";
	ФИОБух                  = "";
	ФИО                     = "";
	ФИОИсп                  = "";
	ТелИсп                  = "";
	ТелОрганизации          = "";
	ТелСлуж                 = "";
	
	ОргСведения.Свойство("ИННЮЛ",                   ИННЮЛ);
	ОргСведения.Свойство("КППЮЛ",                   КППЮЛ);
	ОргСведения.Свойство("НаимЮЛПол",               НаимЮЛПол);
	ОргСведения.Свойство("ОКВЭД",                   ОКВЭД);
	ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
	ОргСведения.Свойство("АдрЮР",                   АдрЮР);
	ОргСведения.Свойство("АдрФакт",                 АдрФакт);
	ОргСведения.Свойство("АдрПрописки",             АдрПрописки);
	ОргСведения.Свойство("АдрМЖ",                   АдрМЖ);
	ОргСведения.Свойство("ФИОРук",                  ФИОРук);
	ОргСведения.Свойство("ФИОБух",                  ФИОБух);
	ОргСведения.Свойство("ФИО",                     ФИО);
	ОргСведения.Свойство("ФИОИсп",                  ФИОИсп);
	ОргСведения.Свойство("ТелИсп",                  ТелИсп);
	ОргСведения.Свойство("ТелОрганизации",          ТелОрганизации);
	ОргСведения.Свойство("ТелСлуж",                 ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол      = ФИО;
		Адрес          = АдрПрописки;
		ТелОрганизации = ТелСлуж;
		ФИОРук         = ФИО;
		ФИОБух         = "";
		ФИОИсп         = "";
		ТелИсп         = "";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОргНазв             = НаимЮЛПол;
	РазделыОтчета.Титульный.Данные.ПрПодп              = "1";
	РазделыОтчета.Титульный.Данные.ОргПодписантФамилия = ФИОРук;
	РазделыОтчета.Титульный.Данные.ОргПредНаим         = "";
	РазделыОтчета.Титульный.Данные.ДокУпПред           = "";
	РазделыОтчета.Титульный.Данные.ИНН                 = ИННЮЛ;
	РазделыОтчета.Титульный.Данные.КПП                 = КППЮЛ;
	
	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если Найти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	РазделыОтчета.Титульный.Данные.ТелОрганизации = ТелОрганизации;
	РазделыОтчета.Титульный.Данные.ОКВЭД          = ОКВЭД;
	
	Если СтрДлина(РегНомПФР) < 14 Тогда
		Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
		КонецЕсли;	
		Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
		КонецЕсли;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомРег = РегНомПФР;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2015Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Сведения = Новый СписокЗначений;
	
	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	Сведения.Добавить("", "НаимЮЛПол");
	Сведения.Добавить("", "ОКВЭД");
	Сведения.Добавить("", "РегистрационныйНомерФСС");
	Сведения.Добавить("", "АдрЮР");
	Сведения.Добавить("", "АдрФакт");
	Сведения.Добавить("", "АдрПрописки");
	Сведения.Добавить("", "АдрМЖ");
	Сведения.Добавить("", "ФИОРук");
	Сведения.Добавить("", "ФИОБух");
	Сведения.Добавить("", "ФИО");
	Сведения.Добавить("", "ФИОИсп");
	Сведения.Добавить("", "ТелИсп");
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "ТелСлуж");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаПодписи, Сведения);
	
	ИННЮЛ                   = "";
	КППЮЛ                   = "";
	НаимЮЛПол               = "";
	ОКВЭД                   = "";
	РегистрационныйНомерФСС = "";
	РегНомПФР               = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаОкончания, "РегНомПФР").РегНомПФР;
	АдрЮР                   = "";
	АдрФакт                 = "";
	АдрПрописки             = "";
	АдрМЖ                   = "";
	ФИОРук                  = "";
	ФИОБух                  = "";
	ФИО                     = "";
	ФИОИсп                  = "";
	ТелИсп                  = "";
	ТелОрганизации          = "";
	ТелСлуж                 = "";
	
	ОргСведения.Свойство("ИННЮЛ",                   ИННЮЛ);
	ОргСведения.Свойство("КППЮЛ",                   КППЮЛ);
	ОргСведения.Свойство("НаимЮЛПол",               НаимЮЛПол);
	ОргСведения.Свойство("ОКВЭД",                   ОКВЭД);
	ОргСведения.Свойство("РегистрационныйНомерФСС", РегистрационныйНомерФСС);
	ОргСведения.Свойство("АдрЮР",                   АдрЮР);
	ОргСведения.Свойство("АдрФакт",                 АдрФакт);
	ОргСведения.Свойство("АдрПрописки",             АдрПрописки);
	ОргСведения.Свойство("АдрМЖ",                   АдрМЖ);
	ОргСведения.Свойство("ФИОРук",                  ФИОРук);
	ОргСведения.Свойство("ФИОБух",                  ФИОБух);
	ОргСведения.Свойство("ФИО",                     ФИО);
	ОргСведения.Свойство("ФИОИсп",                  ФИОИсп);
	ОргСведения.Свойство("ТелИсп",                  ТелИсп);
	ОргСведения.Свойство("ТелОрганизации",          ТелОрганизации);
	ОргСведения.Свойство("ТелСлуж",                 ТелСлуж);
	
	Если ПБОЮЛ Тогда
		
		НаимЮлПол      = ФИО;
		Адрес          = АдрПрописки;
		ТелОрганизации = ТелСлуж;
		ФИОРук         = ФИО;
		ФИОБух         = "";
		ФИОИсп         = "";
		ТелИсп         = "";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОргНазв             = НаимЮЛПол;
	РазделыОтчета.Титульный.Данные.ПрПодп              = "1";
	РазделыОтчета.Титульный.Данные.ОргПодписантФамилия = ФИОРук;
	РазделыОтчета.Титульный.Данные.ОргПредНаим         = "";
	РазделыОтчета.Титульный.Данные.ДокУпПред           = "";
	РазделыОтчета.Титульный.Данные.ИНН                 = ИННЮЛ;
	РазделыОтчета.Титульный.Данные.КПП                 = КППЮЛ;
	
	РазрешенныеЗнаки = "0123456789";
	ОткорректированныйНомерТелефона = "";
	Для Инд = 1 По СтрДлина(ТелОрганизации) Цикл
		ТекущийСимвол = Сред(ТелОрганизации, Инд, 1);
		Если Найти(РазрешенныеЗнаки, ТекущийСимвол) <> 0 Тогда
			ОткорректированныйНомерТелефона = ОткорректированныйНомерТелефона + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	ТелОрганизации = ОткорректированныйНомерТелефона;
	
	РазделыОтчета.Титульный.Данные.ТелОрганизации = ТелОрганизации;
	РазделыОтчета.Титульный.Данные.ОКВЭД          = ОКВЭД;
	
	Если СтрДлина(РегНомПФР) < 14 Тогда
		Если Сред(РегНомПФР, 4, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,3) + "-" + Сред(РегНомПФР, 4);
		КонецЕсли;	
		Если Сред(РегНомПФР, 8, 1) <> "-" Тогда
			РегНомПФР = Лев(РегНомПФР,7) + "-" + Сред(РегНомПФР, 8);
		КонецЕсли;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомРег = РегНомПФР;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2010Кв4(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	
	// Многостраничные разделы.
	//
	Если НаимРаздела = "Раздел12" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = СтруктураДанных;
	
	// Многострочные разделы.
	//
	ИначеЕсли НаимРаздела = "Раздел41" Тогда
		  
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
		ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
				
	// Обычные разделы.
	//
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2011Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	
	// Многостраничные разделы.
	//
	Если НаимРаздела = "Раздел12" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = СтруктураДанных;
	
	// Многострочные разделы.
	//
	ИначеЕсли НаимРаздела = "Раздел41" Тогда
		  
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
		ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
				
	// Обычные разделы.
	//
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2012Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	
	// Многостраничные разделы.
	//
	Если НаимРаздела = "Раздел2" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = СтруктураДанных;
	
	// Многострочные разделы.
	//
	ИначеЕсли НаимРаздела = "Раздел31"
		  ИЛИ НаимРаздела = "Раздел35"
		  ИЛИ НаимРаздела = "Раздел4"
		  ИЛИ НаимРаздела = "Раздел5" Тогда
		  
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
		ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
				
	// Обычные разделы.
	//
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2013Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	
	// Многостраничные разделы.
	//
	Если НаимРаздела = "Раздел2" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = СтруктураДанных;
		
	// Многострочные разделы.
	//
	ИначеЕсли НаимРаздела = "Раздел31"
		  ИЛИ НаимРаздела = "Раздел35"
		  ИЛИ НаимРаздела = "Раздел4"
		  ИЛИ НаимРаздела = "Раздел5" Тогда
		  
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
		ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
				
	// Обычные разделы.
	//
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2014Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	
	// Многостраничные разделы.
	Если НаимРаздела = "Раздел21"
	 Или НаимРаздела = "Раздел24" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = СтруктураДанных;
		
	// Многострочные разделы.
	ИначеЕсли НаимРаздела = "Раздел33"
		  ИЛИ НаимРаздела = "Раздел4"
		  ИЛИ НаимРаздела = "Раздел5" Тогда
		  
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
		ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2015Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	
	// Многостраничные разделы.
	Если НаимРаздела = "Раздел21"
	 Или НаимРаздела = "Раздел24" Тогда
		
		СтруктураДанных = Новый Структура;
		
		Для Каждого Область Из ТабличныйДокумент.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			   И Область.СодержитЗначение Тогда
				СтруктураДанных.Вставить(Область.Имя, Область.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = СтруктураДанных;
		
	// Многострочные разделы.
	ИначеЕсли НаимРаздела = "Раздел4"
		  ИЛИ НаимРаздела = "Раздел5" Тогда
		  
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
		ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, ИмяРаздела = "")
	
	Если ИмяРаздела = "Раздел12" Тогда // Раздел 1.2
		
		Для Каждого Страница Из РазделыОтчета.Раздел12.Данные Цикл
			
			Данные = Страница.Данные;
			
			//Раздел 2
			Данные.П000200020003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020103)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020203);
			Данные.П000200020004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020104)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020204);
			Данные.П000200020005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020105)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020205);
			Данные.П000200020006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020106)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020206);
			Данные.П000200021003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021103)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021203);
			Данные.П000200021004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021104)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021204);
			Данные.П000200021005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021105)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021205);
			Данные.П000200021006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021106)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021206);
			Данные.П000200021603 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021703)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021803);
			Данные.П000200021604 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021704)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021804);
			Данные.П000200021605 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021705)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021805);
			Данные.П000200021606 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021706)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021806);
			Данные.П000200022003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020103)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021103)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021403)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021703);
			Данные.П000200022004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020104)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021104)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021404)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021704);
			Данные.П000200022005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020105)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021105)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021405)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021705);
			Данные.П000200022006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020106)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021106)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021406)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021706);
			Данные.П000200022103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020203)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021203)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021503)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021803);
			Данные.П000200022104 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020204)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021204)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021504)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021804);
			Данные.П000200022105 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020205)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021205)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021505)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021805);
			Данные.П000200022106 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020206)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021206)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021506)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021806);
			
			//Раздел 1
			Если РазделыОтчета.Раздел12.Данные.Индекс(Страница) = 0 Тогда 
				Данные.П000100011003 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024103")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034103)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039103);
				Данные.П000100011103 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024104")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034104)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039104);
				Данные.П000100011203 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024105")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034105)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039105);
				Данные.П000100011303 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024106")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034106)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039106);
				Данные.П000100011004 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024203")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034203)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039203);
				Данные.П000100011104 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024204")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034204)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039204);
				Данные.П000100011204 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024205")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034205)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039205);
				Данные.П000100011304 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024206")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034206)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039206);
				Данные.П000100011005 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024303")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034303)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039303);
				Данные.П000100011105 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024304")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034304)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039304);
				Данные.П000100011205 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024305")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034305)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039305);
				Данные.П000100011305 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024306")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034306)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039306);
				Данные.П000100011006 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024403")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034403)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039403);
				Данные.П000100011106 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024404")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034404)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039404);
				Данные.П000100011206 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024405")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034405)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039405);
				Данные.П000100011306 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024406")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034406)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039406);
				Данные.П000100011403 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011103)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011203)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011303);
				Данные.П000100011404 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011104)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011204)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011304);
				Данные.П000100011405 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011105)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011205)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011305);
				Данные.П000100011406 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011106)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011206)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011306);
				Данные.П000100013003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010003)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011003)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012003);
				Данные.П000100013004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010004)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011004)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012004);
				Данные.П000100013005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010005)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011005)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012005);
				Данные.П000100013006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010006)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011006)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012006);
				Данные.П000100014403 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014103)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014203)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014303);
				Данные.П000100014404 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014104)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014204)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014304);
				Данные.П000100014405 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014105)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014205)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014305);
				Данные.П000100014406 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014106)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014206)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014306);
				Данные.П000100015003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013003)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014003);
				Данные.П000100015004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013004)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014004);
				Данные.П000100015005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013005)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014005);
				Данные.П000100015006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013006)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014006);
			Иначе
				Данные.П000100011003 = 0;
				Данные.П000100011103 = 0;
				Данные.П000100011203 = 0;
				Данные.П000100011303 = 0;
				Данные.П000100011004 = 0;
				Данные.П000100011104 = 0;
				Данные.П000100011204 = 0;
				Данные.П000100011304 = 0;
				Данные.П000100011005 = 0;
				Данные.П000100011105 = 0;
				Данные.П000100011205 = 0;
				Данные.П000100011305 = 0;
				Данные.П000100011006 = 0;
				Данные.П000100011106 = 0;
				Данные.П000100011206 = 0;
				Данные.П000100011306 = 0;
				Данные.П000100011403 = 0;
				Данные.П000100011404 = 0;
				Данные.П000100011405 = 0;
				Данные.П000100011406 = 0;
				Данные.П000100013003 = 0;
				Данные.П000100013004 = 0;
				Данные.П000100013005 = 0;
				Данные.П000100013006 = 0;
				Данные.П000100014403 = 0;
				Данные.П000100014404 = 0;
				Данные.П000100014405 = 0;
				Данные.П000100014406 = 0;
				Данные.П000100015003 = 0;
				Данные.П000100015004 = 0;
				Данные.П000100015005 = 0;
				Данные.П000100015006 = 0;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел30" Тогда  // Раздел 3.0
		
		РазделыОтчета.Раздел30.Данные.П000300030003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030203);
		
		РазделыОтчета.Раздел30.Данные.П000300030004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030204);
		
		РазделыОтчета.Раздел30.Данные.П000300030005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030205);
		
		РазделыОтчета.Раздел30.Данные.П000300030006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030206);
		
		РазделыОтчета.Раздел30.Данные.П000300031003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031203);
		
		РазделыОтчета.Раздел30.Данные.П000300031004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031204);
		
		РазделыОтчета.Раздел30.Данные.П000300031005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031205);
		
		РазделыОтчета.Раздел30.Данные.П000300031006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031206);
		
		РазделыОтчета.Раздел30.Данные.П000300031603 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031703)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031803);
		
		РазделыОтчета.Раздел30.Данные.П000300031604 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031704)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031804);
		
		РазделыОтчета.Раздел30.Данные.П000300031605 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031705)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031805);
		
		РазделыОтчета.Раздел30.Данные.П000300031606 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031706)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031806);
		
		РазделыОтчета.Раздел30.Данные.П000300032003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031403)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031703);
		
		РазделыОтчета.Раздел30.Данные.П000300032004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031404)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031704);
		
		РазделыОтчета.Раздел30.Данные.П000300032005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031405)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031705);
		
		РазделыОтчета.Раздел30.Данные.П000300032006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031406)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031706);
		
		РазделыОтчета.Раздел30.Данные.П000300032103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031503)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031803);
		
		РазделыОтчета.Раздел30.Данные.П000300032104 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031504)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031804);
		
		РазделыОтчета.Раздел30.Данные.П000300032105 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031505)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031805);
		
		РазделыОтчета.Раздел30.Данные.П000300032106 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031506)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031806);
		
		РазделыОтчета.Раздел30.Данные.П000300035003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035203);
		
		РазделыОтчета.Раздел30.Данные.П000300035004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035204);
		
		РазделыОтчета.Раздел30.Данные.П000300035005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035205);
		
		РазделыОтчета.Раздел30.Данные.П000300035006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035206);
		
		РазделыОтчета.Раздел30.Данные.П000300036003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036203);
		
		РазделыОтчета.Раздел30.Данные.П000300036004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036204);
		
		РазделыОтчета.Раздел30.Данные.П000300036005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036205);
		
		РазделыОтчета.Раздел30.Данные.П000300036006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036206);
		
		РазделыОтчета.Раздел30.Данные.П000300036303 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036403)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036503);
		
		РазделыОтчета.Раздел30.Данные.П000300036304 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036404)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036504);
		
		РазделыОтчета.Раздел30.Данные.П000300036305 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036405)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036505);
		
		РазделыОтчета.Раздел30.Данные.П000300036306 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036406)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036506);
		
		РазделыОтчета.Раздел30.Данные.П000300037003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036403);
		
		РазделыОтчета.Раздел30.Данные.П000300037004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036404);
		
		РазделыОтчета.Раздел30.Данные.П000300037005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036405);
		
		РазделыОтчета.Раздел30.Данные.П000300037006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036406);
		
		РазделыОтчета.Раздел30.Данные.П000300037103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036503);
		
		РазделыОтчета.Раздел30.Данные.П000300037104 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036504);
		
		РазделыОтчета.Раздел30.Данные.П000300037105 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036505);
		
		РазделыОтчета.Раздел30.Данные.П000300037106 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036506);
		
		РазделыОтчета.Раздел30.Данные.П000300038003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035003)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036003)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036303);
		
		РазделыОтчета.Раздел30.Данные.П000300038004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035004)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036004)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036304);
		
		РазделыОтчета.Раздел30.Данные.П000300038005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035005)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036005)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036305);
		
		РазделыОтчета.Раздел30.Данные.П000300038006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035006)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036006)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036306);
		
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел12");
		
	ИначеЕсли ИмяРаздела = "Раздел41" Тогда // Раздел 4.1
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел41.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001005;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001006;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001007;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001008;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002005", Колонка5);
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002006", Колонка6);
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002007", Колонка7);
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002008", Колонка8);
		
	ИначеЕсли ИмяРаздела = "Раздел42" Тогда // Раздел 4.2
		
		П000420042103 = РазделыОтчета.Раздел42.Данные.П000420042103;
		П000420042203 = РазделыОтчета.Раздел42.Данные.П000420042203;
		РазделыОтчета.Раздел42.Данные.П000420042303 = ? (П000420042103 <> 0, (П000420042203 / П000420042103) * 100, 0);
		П000420042104 = РазделыОтчета.Раздел42.Данные.П000420042104;
		П000420042204 = РазделыОтчета.Раздел42.Данные.П000420042204;
		РазделыОтчета.Раздел42.Данные.П000420042304 = ? (П000420042104 <> 0, (П000420042204 / П000420042104) * 100, 0);
		П000420042105 = РазделыОтчета.Раздел42.Данные.П000420042105;
		П000420042205 = РазделыОтчета.Раздел42.Данные.П000420042205;
		РазделыОтчета.Раздел42.Данные.П000420042305 = ? (П000420042105 <> 0, (П000420042205 / П000420042105) * 100, 0);
		П000420042106 = РазделыОтчета.Раздел42.Данные.П000420042106;
		П000420042206 = РазделыОтчета.Раздел42.Данные.П000420042206;
		РазделыОтчета.Раздел42.Данные.П000420042306 = ? (П000420042106 <> 0, (П000420042206 / П000420042106) * 100, 0);
		П000420042403 = РазделыОтчета.Раздел42.Данные.П000420042403;
		П000420042503 = РазделыОтчета.Раздел42.Данные.П000420042503;
		РазделыОтчета.Раздел42.Данные.П000420042603 = ? (П000420042403 <> 0, (П000420042503 / П000420042403) * 100, 0);
		П000420042404 = РазделыОтчета.Раздел42.Данные.П000420042404;
		П000420042504 = РазделыОтчета.Раздел42.Данные.П000420042504;
		РазделыОтчета.Раздел42.Данные.П000420042604 = ? (П000420042404 <> 0, (П000420042504 / П000420042404) * 100, 0);
		П000420042405 = РазделыОтчета.Раздел42.Данные.П000420042405;
		П000420042505 = РазделыОтчета.Раздел42.Данные.П000420042505;
		РазделыОтчета.Раздел42.Данные.П000420042605 = ? (П000420042405 <> 0, (П000420042505 / П000420042405) * 100, 0);
		П000420042406 = РазделыОтчета.Раздел42.Данные.П000420042406;
		П000420042506 = РазделыОтчета.Раздел42.Данные.П000420042506;
		РазделыОтчета.Раздел42.Данные.П000420042606 = ? (П000420042406 <> 0, (П000420042506 / П000420042406) * 100, 0);
		П000420042703 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042703);
		П000420042803 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042803);
		РазделыОтчета.Раздел42.Данные.П000420042903 = ? (П000420042703 <> 0, (П000420042803 / П000420042703) * 100, 0);
		П000420042704 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042704);
		П000420042804 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042804);
		РазделыОтчета.Раздел42.Данные.П000420042904 = ? (П000420042704 <> 0, (П000420042804 / П000420042704) * 100, 0);
		П000420042705 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042705);
		П000420042805 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042805);
		РазделыОтчета.Раздел42.Данные.П000420042905 = ? (П000420042705 <> 0, (П000420042805 / П000420042705) * 100, 0);
		П000420042706 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042706);
		П000420042806 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042806);
		РазделыОтчета.Раздел42.Данные.П000420042906 = ? (П000420042706 <> 0, (П000420042806 / П000420042706) * 100, 0);
		
	ИначеЕсли ИмяРаздела = "Раздел43" Тогда  // Раздел 4.3
		
		П000430043003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел43.Данные.П000430043003);
		П000430043103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел43.Данные.П000430043103);
		РазделыОтчета.Раздел43.Данные.П000430043203 = ?(П000430043003 <> 0, (П000430043103 / П000430043003) * 100, 0);
		
	ИначеЕсли ИмяРаздела = "Раздел50" Тогда // Раздел 5
		
		РазделыОтчета.Раздел50.Данные.П000500053003 = 
			ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500051003) - 
			ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500052003);
			
			РазделыОтчета.Раздел50.Данные.П000500053004 = 
				ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500051004) - 
				ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500052004);
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел30");
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел41");
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел42");
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел43");
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел50");
		РасчетРеглОтчетРСВ1ФормаОтчета2010Кв4(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел12");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, ИмяРаздела = "")
	
	Если ИмяРаздела = "Раздел12" Тогда // Раздел 1.2
		
		Для Каждого Страница Из РазделыОтчета.Раздел12.Данные Цикл
			
			Данные = Страница.Данные;
			
			//Раздел 2
			Данные.П000200020003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020103)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020203);
			Данные.П000200020004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020104)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020204);
			Данные.П000200020005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020105)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020205);
			Данные.П000200020006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020106)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020206);
			Данные.П000200021003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021103)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021203);
			Данные.П000200021004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021104)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021204);
			Данные.П000200021005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021105)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021205);
			Данные.П000200021006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021106)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021206);
			Данные.П000200021603 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021703)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021803);
			Данные.П000200021604 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021704)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021804);
			Данные.П000200021605 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021705)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021805);
			Данные.П000200021606 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021706)
				+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021806);
			Данные.П000200022003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020103)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021103)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021403)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021703);
			Данные.П000200022004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020104)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021104)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021404)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021704);
			Данные.П000200022005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020105)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021105)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021405)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021705);
			Данные.П000200022006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020106)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021106)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021406)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021706);
			Данные.П000200022103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020203)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021203)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021503)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021803);
			Данные.П000200022104 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020204)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021204)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021504)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021804);
			Данные.П000200022105 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020205)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021205)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021505)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021805);
			Данные.П000200022106 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200020206)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021206)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021506)
				- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000200021806);
			
			//Раздел 1
			Если РазделыОтчета.Раздел12.Данные.Индекс(Страница) = 0 Тогда 
				Данные.П000100011003 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024103")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034103)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039103);
				Данные.П000100011103 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024104")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034104)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039104);
				Данные.П000100011203 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024105")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034105)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039105);
				Данные.П000100011303 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024106")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034106)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039106);
				Данные.П000100011004 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024203")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034203)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039203);
				Данные.П000100011104 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024204")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034204)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039204);
				Данные.П000100011204 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024205")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034205)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039205);
				Данные.П000100011304 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024206")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034206)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039206);
				Данные.П000100011005 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024303")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034303)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039303);
				Данные.П000100011105 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024304")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034304)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039304);
				Данные.П000100011205 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024305")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034305)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039305);
				Данные.П000100011305 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024306")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034306)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039306);
				Данные.П000100011006 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024403")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034403)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039403);
				Данные.П000100011106 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024404")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034404)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039404);
				Данные.П000100011206 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024405")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034405)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039405);
				Данные.П000100011306 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел12.Данные, "П000200024406")
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300034406)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300039406);
				Данные.П000100011403 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011103)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011203)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011303);
				Данные.П000100011404 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011104)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011204)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011304);
				Данные.П000100011405 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011105)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011205)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011305);
				Данные.П000100011406 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011106)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011206)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011306);
				Данные.П000100013003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010003)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011003)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012003);
				Данные.П000100013004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010004)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011004)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012004);
				Данные.П000100013005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010005)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011005)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012005);
				Данные.П000100013006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100010006)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100011006)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100012006);
				Данные.П000100014403 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014103)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014203)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014303);
				Данные.П000100014404 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014104)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014204)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014304);
				Данные.П000100014405 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014105)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014205)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014305);
				Данные.П000100014406 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014106)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014206)
					+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014306);
				Данные.П000100015003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013003)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014003);
				Данные.П000100015004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013004)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014004);
				Данные.П000100015005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013005)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014005);
				Данные.П000100015006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100013006)
					- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, Данные.П000100014006);
				Иначе
					Данные.П000100011003 = 0;
					Данные.П000100011103 = 0;
					Данные.П000100011203 = 0;
					Данные.П000100011303 = 0;
					Данные.П000100011004 = 0;
					Данные.П000100011104 = 0;
					Данные.П000100011204 = 0;
					Данные.П000100011304 = 0;
					Данные.П000100011005 = 0;
					Данные.П000100011105 = 0;
					Данные.П000100011205 = 0;
					Данные.П000100011305 = 0;
					Данные.П000100011006 = 0;
					Данные.П000100011106 = 0;
					Данные.П000100011206 = 0;
					Данные.П000100011306 = 0;
					Данные.П000100011403 = 0;
					Данные.П000100011404 = 0;
					Данные.П000100011405 = 0;
					Данные.П000100011406 = 0;
					Данные.П000100013003 = 0;
					Данные.П000100013004 = 0;
					Данные.П000100013005 = 0;
					Данные.П000100013006 = 0;
					Данные.П000100014403 = 0;
					Данные.П000100014404 = 0;
					Данные.П000100014405 = 0;
					Данные.П000100014406 = 0;
					Данные.П000100015003 = 0;
					Данные.П000100015004 = 0;
					Данные.П000100015005 = 0;
					Данные.П000100015006 = 0;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел30" Тогда  // Раздел 3.0
		
		РазделыОтчета.Раздел30.Данные.П000300030003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030203);
		
		РазделыОтчета.Раздел30.Данные.П000300030004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030204);
		
		РазделыОтчета.Раздел30.Данные.П000300030005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030205);
		
		РазделыОтчета.Раздел30.Данные.П000300030006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030206);
		
		РазделыОтчета.Раздел30.Данные.П000300031003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031203);
		
		РазделыОтчета.Раздел30.Данные.П000300031004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031204);
		
		РазделыОтчета.Раздел30.Данные.П000300031005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031205);
		
		РазделыОтчета.Раздел30.Данные.П000300031006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031206);
		
		РазделыОтчета.Раздел30.Данные.П000300031603 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031703)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031803);
		
		РазделыОтчета.Раздел30.Данные.П000300031604 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031704)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031804);
		
		РазделыОтчета.Раздел30.Данные.П000300031605 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031705)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031805);
		
		РазделыОтчета.Раздел30.Данные.П000300031606 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031706)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031806);
		
		РазделыОтчета.Раздел30.Данные.П000300032003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031403)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031703);
		
		РазделыОтчета.Раздел30.Данные.П000300032004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031404)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031704);
		
		РазделыОтчета.Раздел30.Данные.П000300032005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031405)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031705);
		
		РазделыОтчета.Раздел30.Данные.П000300032006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031406)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031706);
		
		РазделыОтчета.Раздел30.Данные.П000300032103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031503)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031803);
		
		РазделыОтчета.Раздел30.Данные.П000300032104 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031504)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031804);
		
		РазделыОтчета.Раздел30.Данные.П000300032105 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031505)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031805);
		
		РазделыОтчета.Раздел30.Данные.П000300032106 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300030206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031506)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300031806);
		
		РазделыОтчета.Раздел30.Данные.П000300035003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035203);
		
		РазделыОтчета.Раздел30.Данные.П000300035004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035204);
		
		РазделыОтчета.Раздел30.Данные.П000300035005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035205);
		
		РазделыОтчета.Раздел30.Данные.П000300035006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035206);
		
		РазделыОтчета.Раздел30.Данные.П000300036003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036103)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036203);
		
		РазделыОтчета.Раздел30.Данные.П000300036004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036104)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036204);
		
		РазделыОтчета.Раздел30.Данные.П000300036005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036105)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036205);
		
		РазделыОтчета.Раздел30.Данные.П000300036006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036106)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036206);
		
		РазделыОтчета.Раздел30.Данные.П000300036303 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036403)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036503);
		
		РазделыОтчета.Раздел30.Данные.П000300036304 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036404)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036504);
		
		РазделыОтчета.Раздел30.Данные.П000300036305 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036405)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036505);
		
		РазделыОтчета.Раздел30.Данные.П000300036306 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036406)
		+ ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036506);
		
		РазделыОтчета.Раздел30.Данные.П000300037003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036103)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036403);
		
		РазделыОтчета.Раздел30.Данные.П000300037004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036104)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036404);
		
		РазделыОтчета.Раздел30.Данные.П000300037005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036105)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036405);
		
		РазделыОтчета.Раздел30.Данные.П000300037006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036106)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036406);
		
		РазделыОтчета.Раздел30.Данные.П000300037103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036203)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036503);
		
		РазделыОтчета.Раздел30.Данные.П000300037104 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036204)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036504);
		
		РазделыОтчета.Раздел30.Данные.П000300037105 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036205)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036505);
		
		РазделыОтчета.Раздел30.Данные.П000300037106 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036206)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036506);
		
		РазделыОтчета.Раздел30.Данные.П000300038003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035003)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036003)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036303);
		
		РазделыОтчета.Раздел30.Данные.П000300038004 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035004)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036004)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036304);
		
		РазделыОтчета.Раздел30.Данные.П000300038005 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035005)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036005)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036305);
		
		РазделыОтчета.Раздел30.Данные.П000300038006 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300035006)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036006)
		- ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел30.Данные.П000300036306);
		
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел12");
		
	ИначеЕсли ИмяРаздела = "Раздел41" Тогда // Раздел 4.1
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел41.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001005;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001006;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001007;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел41.ДанныеДопСтрок[Ном - 1].П000410001008;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002005", Колонка5);
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002006", Колонка6);
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002007", Колонка7);
		РазделыОтчета.Раздел41.Данные.Вставить("П000410002008", Колонка8);
		
	ИначеЕсли ИмяРаздела = "Раздел42" Тогда // Раздел 4.2
		
		П000420042103 = РазделыОтчета.Раздел42.Данные.П000420042103;
		П000420042203 = РазделыОтчета.Раздел42.Данные.П000420042203;
		РазделыОтчета.Раздел42.Данные.П000420042303 = ? (П000420042103 <> 0, (П000420042203 / П000420042103) * 100, 0);
		П000420042104 = РазделыОтчета.Раздел42.Данные.П000420042104;
		П000420042204 = РазделыОтчета.Раздел42.Данные.П000420042204;
		РазделыОтчета.Раздел42.Данные.П000420042304 = ? (П000420042104 <> 0, (П000420042204 / П000420042104) * 100, 0);
		П000420042105 = РазделыОтчета.Раздел42.Данные.П000420042105;
		П000420042205 = РазделыОтчета.Раздел42.Данные.П000420042205;
		РазделыОтчета.Раздел42.Данные.П000420042305 = ? (П000420042105 <> 0, (П000420042205 / П000420042105) * 100, 0);
		П000420042106 = РазделыОтчета.Раздел42.Данные.П000420042106;
		П000420042206 = РазделыОтчета.Раздел42.Данные.П000420042206;
		РазделыОтчета.Раздел42.Данные.П000420042306 = ? (П000420042106 <> 0, (П000420042206 / П000420042106) * 100, 0);
		П000420042403 = РазделыОтчета.Раздел42.Данные.П000420042403;
		П000420042503 = РазделыОтчета.Раздел42.Данные.П000420042503;
		РазделыОтчета.Раздел42.Данные.П000420042603 = ? (П000420042403 <> 0, (П000420042503 / П000420042403) * 100, 0);
		П000420042404 = РазделыОтчета.Раздел42.Данные.П000420042404;
		П000420042504 = РазделыОтчета.Раздел42.Данные.П000420042504;
		РазделыОтчета.Раздел42.Данные.П000420042604 = ? (П000420042404 <> 0, (П000420042504 / П000420042404) * 100, 0);
		П000420042405 = РазделыОтчета.Раздел42.Данные.П000420042405;
		П000420042505 = РазделыОтчета.Раздел42.Данные.П000420042505;
		РазделыОтчета.Раздел42.Данные.П000420042605 = ? (П000420042405 <> 0, (П000420042505 / П000420042405) * 100, 0);
		П000420042406 = РазделыОтчета.Раздел42.Данные.П000420042406;
		П000420042506 = РазделыОтчета.Раздел42.Данные.П000420042506;
		РазделыОтчета.Раздел42.Данные.П000420042606 = ? (П000420042406 <> 0, (П000420042506 / П000420042406) * 100, 0);
		П000420042703 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042703);
		П000420042803 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042803);
		РазделыОтчета.Раздел42.Данные.П000420042903 = ? (П000420042703 <> 0, (П000420042803 / П000420042703) * 100, 0);
		П000420042704 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042704);
		П000420042804 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042804);
		РазделыОтчета.Раздел42.Данные.П000420042904 = ? (П000420042704 <> 0, (П000420042804 / П000420042704) * 100, 0);
		П000420042705 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042705);
		П000420042805 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042805);
		РазделыОтчета.Раздел42.Данные.П000420042905 = ? (П000420042705 <> 0, (П000420042805 / П000420042705) * 100, 0);
		П000420042706 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042706);
		П000420042806 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел42.Данные.П000420042806);
		РазделыОтчета.Раздел42.Данные.П000420042906 = ? (П000420042706 <> 0, (П000420042806 / П000420042706) * 100, 0);
		
	ИначеЕсли ИмяРаздела = "Раздел43" Тогда  // Раздел 4.3
		
		П000430043003 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел43.Данные.П000430043003);
		П000430043103 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел43.Данные.П000430043103);
		РазделыОтчета.Раздел43.Данные.П000430043203 = ?(П000430043003 <> 0, (П000430043103 / П000430043003) * 100, 0);
		
	ИначеЕсли ИмяРаздела = "Раздел44" Тогда // Раздел 4.4
		
		П000440043503 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел44.Данные.П000440043503);
		П000440043603 = ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел44.Данные.П000440043603);
		РазделыОтчета.Раздел44.Данные.П000440043703 = ?(П000440043503 <> 0, (П000440043603 / П000440043503) * 100, 0);
		
	ИначеЕсли ИмяРаздела = "Раздел50" Тогда // Раздел 5
		
		РазделыОтчета.Раздел50.Данные.П000500053003 = 
			ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500051003) - 
			ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500052003);
			
			РазделыОтчета.Раздел50.Данные.П000500053004 = 
				ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500051004) - 
				ОкруглитьЧислоПоФормату(СтруктураРеквизитовОтчета, РазделыОтчета.Раздел50.Данные.П000500052004);
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел30");
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел41");
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел42");
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел43");
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел44");
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел50");
		РасчетРеглОтчетРСВ1ФормаОтчета2011Кв1(СтруктураРеквизитовОтчета, РазделыОтчета, "Раздел12");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, ИмяРаздела = "")
	
	Если ИмяРаздела = "Раздел1" Тогда // Раздел 1
		
		РазделыОтчета.Раздел1.Данные.П000100013003 = РазделыОтчета.Раздел1.Данные.П000100010003
		+ РазделыОтчета.Раздел1.Данные.П000100011003
		+ РазделыОтчета.Раздел1.Данные.П000100012003;
		
		РазделыОтчета.Раздел1.Данные.П000100013004 = РазделыОтчета.Раздел1.Данные.П000100010004
		+ РазделыОтчета.Раздел1.Данные.П000100011004
		+ РазделыОтчета.Раздел1.Данные.П000100012004;
		
		РазделыОтчета.Раздел1.Данные.П000100013005 = РазделыОтчета.Раздел1.Данные.П000100010005
		+ РазделыОтчета.Раздел1.Данные.П000100011005
		+ РазделыОтчета.Раздел1.Данные.П000100012005;
		
		РазделыОтчета.Раздел1.Данные.П000100014403 = РазделыОтчета.Раздел1.Данные.П000100014103
		+ РазделыОтчета.Раздел1.Данные.П000100014203
		+ РазделыОтчета.Раздел1.Данные.П000100014303;
		
		РазделыОтчета.Раздел1.Данные.П000100014404 = РазделыОтчета.Раздел1.Данные.П000100014104
		+ РазделыОтчета.Раздел1.Данные.П000100014204
		+ РазделыОтчета.Раздел1.Данные.П000100014304;
		
		РазделыОтчета.Раздел1.Данные.П000100014405 = РазделыОтчета.Раздел1.Данные.П000100014105
		+ РазделыОтчета.Раздел1.Данные.П000100014205
		+ РазделыОтчета.Раздел1.Данные.П000100014305;
		
		РазделыОтчета.Раздел1.Данные.П000100015003 = РазделыОтчета.Раздел1.Данные.П000100013003
		- РазделыОтчета.Раздел1.Данные.П000100014003;
		
		РазделыОтчета.Раздел1.Данные.П000100015004 = РазделыОтчета.Раздел1.Данные.П000100013004
		- РазделыОтчета.Раздел1.Данные.П000100014004;
		
		РазделыОтчета.Раздел1.Данные.П000100015005 = РазделыОтчета.Раздел1.Данные.П000100013005
		- РазделыОтчета.Раздел1.Данные.П000100014005;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда // Раздел 2
		
		Для Каждого Страница Из РазделыОтчета.Раздел2.Данные Цикл
			
			Данные = Страница.Данные;
			
			Данные.П000200024003 = Данные.П000200020103
			+ Данные.П000200020303
			- Данные.П000200021103
			- Данные.П000200021303
			- Данные.П000200022103
			- Данные.П000200022303
			- Данные.П000200023103
			- Данные.П000200023303;
			
			Данные.П000200024004 = Данные.П000200020104
			+ Данные.П000200020304
			- Данные.П000200021104
			- Данные.П000200021304
			- Данные.П000200022104
			- Данные.П000200022304
			- Данные.П000200023104
			- Данные.П000200023304;
			
			Данные.П000200024005 = Данные.П000200020105
			+ Данные.П000200020305
			- Данные.П000200021105
			- Данные.П000200021305
			- Данные.П000200022105
			- Данные.П000200022305
			- Данные.П000200023105
			- Данные.П000200023305;
			
			Данные.П000200024006 = Данные.П000200020106
			+ Данные.П000200020306
			- Данные.П000200021106
			- Данные.П000200021306
			- Данные.П000200022106
			- Данные.П000200022306
			- Данные.П000200023106
			- Данные.П000200023306;
			
			Данные.П000200024103 = Данные.П000200020203
			- Данные.П000200021203
			- Данные.П000200022203
			- Данные.П000200023203;
			
			Данные.П000200024104 = Данные.П000200020204
			- Данные.П000200021204
			- Данные.П000200022204
			- Данные.П000200023204;
			
			Данные.П000200024105 = Данные.П000200020205
			- Данные.П000200021205
			- Данные.П000200022205
			- Данные.П000200023205;
			
			Данные.П000200024106 = Данные.П000200020206
			- Данные.П000200021206
			- Данные.П000200022206
			- Данные.П000200023206;
			
			Данные.П000200027503 = Данные.П000200027103
			- Данные.П000200027203
			- Данные.П000200027303
			- Данные.П000200027403;
			
			Данные.П000200027504 = Данные.П000200027104
			- Данные.П000200027204
			- Данные.П000200027304
			- Данные.П000200027404;
			
			Данные.П000200027505 = Данные.П000200027105
			- Данные.П000200027205
			- Данные.П000200027305
			- Данные.П000200027405;
			
			Данные.П000200027506 = Данные.П000200027106
			- Данные.П000200027206
			- Данные.П000200027306
			- Данные.П000200027406;
			
		КонецЦикла;		
		
		РазделыОтчета.Раздел1.Данные.П000100011003 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025003")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025203");
		РазделыОтчета.Раздел1.Данные.П000100011004 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025103");
		РазделыОтчета.Раздел1.Данные.П000100011005 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200027603");
		РазделыОтчета.Раздел1.Данные.П000100011103 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025004")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025204");
		РазделыОтчета.Раздел1.Данные.П000100011104 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025104");
		РазделыОтчета.Раздел1.Данные.П000100011105 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200027604");
		РазделыОтчета.Раздел1.Данные.П000100011203 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025005")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025205");
		РазделыОтчета.Раздел1.Данные.П000100011204 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025105");
		РазделыОтчета.Раздел1.Данные.П000100011205 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200027605");
		РазделыОтчета.Раздел1.Данные.П000100011303 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025006")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025206");
		РазделыОтчета.Раздел1.Данные.П000100011304 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200025106");
		РазделыОтчета.Раздел1.Данные.П000100011305 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000200027606");
		РазделыОтчета.Раздел1.Данные.П000100011403 = РазделыОтчета.Раздел1.Данные.П000100011103
		+ РазделыОтчета.Раздел1.Данные.П000100011203
		+ РазделыОтчета.Раздел1.Данные.П000100011303;
		РазделыОтчета.Раздел1.Данные.П000100011404 = РазделыОтчета.Раздел1.Данные.П000100011104
		+ РазделыОтчета.Раздел1.Данные.П000100011204
		+ РазделыОтчета.Раздел1.Данные.П000100011304;
		РазделыОтчета.Раздел1.Данные.П000100011405 = РазделыОтчета.Раздел1.Данные.П000100011105
		+ РазделыОтчета.Раздел1.Данные.П000100011205
		+ РазделыОтчета.Раздел1.Данные.П000100011305;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел31" Тогда // Раздел 3.1	
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел31.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310001005;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310001006;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310001007;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310001008;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел31.Данные.Вставить("П000310002005", Колонка5);
		РазделыОтчета.Раздел31.Данные.Вставить("П000310002006", Колонка6);
		РазделыОтчета.Раздел31.Данные.Вставить("П000310002007", Колонка7);
		РазделыОтчета.Раздел31.Данные.Вставить("П000310002008", Колонка8);
		
	ИначеЕсли ИмяРаздела = "Раздел32" Тогда // Раздел 3.2
		
		П000320032103 = РазделыОтчета.Раздел32.Данные.П000320032103;
		П000320032203 = РазделыОтчета.Раздел32.Данные.П000320032203;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032303", ? (П000320032103 <> 0, (П000320032203 / П000320032103) * 100, 0));
		
		П000320032104 = РазделыОтчета.Раздел32.Данные.П000320032104;
		П000320032204 = РазделыОтчета.Раздел32.Данные.П000320032204;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032304", ?(П000320032104 <> 0, (П000320032204 / П000320032104) * 100, 0));
		
		П000320032105 = РазделыОтчета.Раздел32.Данные.П000320032105;
		П000320032205 = РазделыОтчета.Раздел32.Данные.П000320032205;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032305", ?(П000320032105 <> 0, (П000320032205 / П000320032105) * 100, 0));
		
		П000320032106 = РазделыОтчета.Раздел32.Данные.П000320032106;
		П000320032206 = РазделыОтчета.Раздел32.Данные.П000320032206;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032306", ? (П000320032106 <> 0, (П000320032206 / П000320032106) * 100, 0));
		
	ИначеЕсли ИмяРаздела = "Раздел33" Тогда // Раздел 3.3
		
		П000330033103 = РазделыОтчета.Раздел33.Данные.П000330033103;
		П000330033203 = РазделыОтчета.Раздел33.Данные.П000330033203;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033303", ?(П000330033103 <> 0, (П000330033203 / П000330033103) * 100, 0));
		
		П000330033104 = РазделыОтчета.Раздел33.Данные.П000330033104;
		П000330033204 = РазделыОтчета.Раздел33.Данные.П000330033204;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033304", ?(П000330033104 <> 0, (П000330033204 / П000330033104) * 100, 0));
		
		П000330033105 = РазделыОтчета.Раздел33.Данные.П000330033105;
		П000330033205 = РазделыОтчета.Раздел33.Данные.П000330033205;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033305", ?(П000330033105 <> 0, (П000330033205 / П000330033105) * 100, 0));
		
		П000330033106 = РазделыОтчета.Раздел33.Данные.П000330033106;
		П000330033206 = РазделыОтчета.Раздел33.Данные.П000330033206;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033306", ?(П000330033106 <> 0, (П000330033206 / П000330033106) * 100, 0));
		
		П000330033403 = РазделыОтчета.Раздел33.Данные.П000330033403;
		П000330033503 = РазделыОтчета.Раздел33.Данные.П000330033503;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033603", ?(П000330033403 <> 0, (П000330033503 / П000330033403) * 100, 0));
		
		П000330033404 = РазделыОтчета.Раздел33.Данные.П000330033404;
		П000330033504 = РазделыОтчета.Раздел33.Данные.П000330033504;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033604", ?(П000330033404 <> 0, (П000330033504 / П000330033404) * 100, 0));
		
		П000330033405 = РазделыОтчета.Раздел33.Данные.П000330033405;
		П000330033505 = РазделыОтчета.Раздел33.Данные.П000330033505;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033605", ?(П000330033405 <> 0, (П000330033505 / П000330033405) * 100, 0));
		
		П000330033406 = РазделыОтчета.Раздел33.Данные.П000330033406;
		П000330033506 = РазделыОтчета.Раздел33.Данные.П000330033506;
		
		РазделыОтчета.Раздел33.Данные.Вставить("П000330033606", ?(П000330033406 <> 0, (П000330033506 / П000330033406) * 100, 0));
		
	ИначеЕсли ИмяРаздела = "Раздел34" Тогда  // Раздел 3.4	
		
		РазделыОтчета.Раздел34.Данные.Вставить("П000340034303", ?(РазделыОтчета.Раздел34.Данные.П000340034103 = 0, 0,
		РазделыОтчета.Раздел34.Данные.П000340034203
		/ РазделыОтчета.Раздел34.Данные.П000340034103 * 100));
		
		РазделыОтчета.Раздел34.Данные.Вставить("П000340034304", ?(РазделыОтчета.Раздел34.Данные.П000340034104 = 0, 0,
		РазделыОтчета.Раздел34.Данные.П000340034204
		/ РазделыОтчета.Раздел34.Данные.П000340034104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел35" Тогда  // Раздел 3.5
		
		Колонка3 = 0;
		Колонка4 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел35.ДанныеДопСтрок.Количество() Цикл
			
			Колонка3 = Колонка3 + РазделыОтчета.Раздел35.ДанныеДопСтрок[Ном - 1].П000350000103;
			Колонка4 = Колонка4 + РазделыОтчета.Раздел35.ДанныеДопСтрок[Ном - 1].П000350000104;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел35.Данные.Вставить("П000350000203", Колонка3);
		РазделыОтчета.Раздел35.Данные.Вставить("П000350000204", Колонка4);
		
	ИначеЕсли ИмяРаздела = "Раздел36" Тогда // Раздел 3.6
		
		РазделыОтчета.Раздел36.Данные.Вставить("П000360036303", ?(РазделыОтчета.Раздел36.Данные.П000360036103 = 0, 0,
		РазделыОтчета.Раздел36.Данные.П000360036203
		/ РазделыОтчета.Раздел36.Данные.П000360036103 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел37" Тогда // Раздел 3.7
		
		РазделыОтчета.Раздел37.Данные.Вставить("П000370037503", ?(РазделыОтчета.Раздел37.Данные.П000370037103 = 0, 0,
		(РазделыОтчета.Раздел37.Данные.П000370037203
		+ РазделыОтчета.Раздел37.Данные.П000370037303
		+ РазделыОтчета.Раздел37.Данные.П000370037403)
		/ РазделыОтчета.Раздел37.Данные.П000370037103 * 100));
		
		РазделыОтчета.Раздел37.Данные.Вставить("П000370037504", ?(РазделыОтчета.Раздел37.Данные.П000370037104 = 0, 0,
		(РазделыОтчета.Раздел37.Данные.П000370037204
		+ РазделыОтчета.Раздел37.Данные.П000370037304
		+ РазделыОтчета.Раздел37.Данные.П000370037404)
		/ РазделыОтчета.Раздел37.Данные.П000370037104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел38" Тогда  // Раздел 3.8	
		
		РазделыОтчета.Раздел38.Данные.Вставить("П000380038303", ?(РазделыОтчета.Раздел38.Данные.П000380038103 = 0, 0,
		РазделыОтчета.Раздел38.Данные.П000380038203
		/ РазделыОтчета.Раздел38.Данные.П000380038103 * 100));
		
		РазделыОтчета.Раздел38.Данные.Вставить("П000380038304", ?(РазделыОтчета.Раздел38.Данные.П000380038104 = 0, 0,
		РазделыОтчета.Раздел38.Данные.П000380038204
		/ РазделыОтчета.Раздел38.Данные.П000380038104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда // Раздел 4
		
		Колонка4 = 0;
		Колонка5 = 0;
		Колонка6 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() Цикл
			
			Колонка4 = Колонка4 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000104;
			Колонка5 = Колонка5 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000105;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000106;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000204", Колонка4);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000205", Колонка5);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000206", Колонка6);
		
		РазделыОтчета.Раздел1.Данные.П000100012003 = РазделыОтчета.Раздел4.Данные.П000400000204;
		РазделыОтчета.Раздел1.Данные.П000100012004 = РазделыОтчета.Раздел4.Данные.П000400000205;				
		РазделыОтчета.Раздел1.Данные.П000100012005 = РазделыОтчета.Раздел4.Данные.П000400000206;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел5" Тогда // Раздел 5
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000150;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000160;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000170;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000180;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000250", Колонка5);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000260", Колонка6);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000270", Колонка7);	
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000280", Колонка8);
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел5");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел4");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел38");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел37");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел36");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел35");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел34");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел33");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел32");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел31");
		РасчетРеглОтчетРСВ1ФормаОтчета2012Кв1(РазделыОтчета, "Раздел2");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, ИмяРаздела = "")
	
	Если ИмяРаздела = "Раздел1" Тогда // Раздел 1
		
		РазделыОтчета.Раздел1.Данные.П000100013003 = РазделыОтчета.Раздел1.Данные.П000100010003
		+ РазделыОтчета.Раздел1.Данные.П000100011003
		+ РазделыОтчета.Раздел1.Данные.П000100012003;
		
		РазделыОтчета.Раздел1.Данные.П000100013004 = РазделыОтчета.Раздел1.Данные.П000100010004
		+ РазделыОтчета.Раздел1.Данные.П000100011004
		+ РазделыОтчета.Раздел1.Данные.П000100012004;
		
		РазделыОтчета.Раздел1.Данные.П000100013005 = РазделыОтчета.Раздел1.Данные.П000100010005
		+ РазделыОтчета.Раздел1.Данные.П000100011005
		+ РазделыОтчета.Раздел1.Данные.П000100012005;
		
		РазделыОтчета.Раздел1.Данные.П000100013006 = РазделыОтчета.Раздел1.Данные.П000100010006
		+ РазделыОтчета.Раздел1.Данные.П000100011006
		+ РазделыОтчета.Раздел1.Данные.П000100012006;
		
		РазделыОтчета.Раздел1.Данные.П000100013007 = РазделыОтчета.Раздел1.Данные.П000100010007
		+ РазделыОтчета.Раздел1.Данные.П000100011007
		+ РазделыОтчета.Раздел1.Данные.П000100012007;
		
		РазделыОтчета.Раздел1.Данные.П000100014403 = РазделыОтчета.Раздел1.Данные.П000100014103
		+ РазделыОтчета.Раздел1.Данные.П000100014203
		+ РазделыОтчета.Раздел1.Данные.П000100014303;
		
		РазделыОтчета.Раздел1.Данные.П000100014404 = РазделыОтчета.Раздел1.Данные.П000100014104
		+ РазделыОтчета.Раздел1.Данные.П000100014204
		+ РазделыОтчета.Раздел1.Данные.П000100014304;
		
		РазделыОтчета.Раздел1.Данные.П000100014405 = РазделыОтчета.Раздел1.Данные.П000100014105
		+ РазделыОтчета.Раздел1.Данные.П000100014205
		+ РазделыОтчета.Раздел1.Данные.П000100014305;
		
		РазделыОтчета.Раздел1.Данные.П000100014406 = РазделыОтчета.Раздел1.Данные.П000100014106
		+ РазделыОтчета.Раздел1.Данные.П000100014206
		+ РазделыОтчета.Раздел1.Данные.П000100014306;
		
		РазделыОтчета.Раздел1.Данные.П000100014407 = РазделыОтчета.Раздел1.Данные.П000100014107
		+ РазделыОтчета.Раздел1.Данные.П000100014207
		+ РазделыОтчета.Раздел1.Данные.П000100014307;
		
		РазделыОтчета.Раздел1.Данные.П000100015003 = РазделыОтчета.Раздел1.Данные.П000100013003
		- РазделыОтчета.Раздел1.Данные.П000100014003;
		
		РазделыОтчета.Раздел1.Данные.П000100015004 = РазделыОтчета.Раздел1.Данные.П000100013004
		- РазделыОтчета.Раздел1.Данные.П000100014004;
		
		РазделыОтчета.Раздел1.Данные.П000100015005 = РазделыОтчета.Раздел1.Данные.П000100013005
		- РазделыОтчета.Раздел1.Данные.П000100014005;
		
		РазделыОтчета.Раздел1.Данные.П000100015006 = РазделыОтчета.Раздел1.Данные.П000100013006
		- РазделыОтчета.Раздел1.Данные.П000100014006;
		
		РазделыОтчета.Раздел1.Данные.П000100015007 = РазделыОтчета.Раздел1.Данные.П000100013007
		- РазделыОтчета.Раздел1.Данные.П000100014007;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда // Раздел 2
		
		Для Каждого Страница Из РазделыОтчета.Раздел2.Данные Цикл
			
			Данные = Страница.Данные;
			
			Данные.П000210024003 = Данные.П000210020103
			+ Данные.П000210020303
			- Данные.П000210021103
			- Данные.П000210021303
			- Данные.П000210022103
			- Данные.П000210022303
			- Данные.П000210023103
			- Данные.П000210023303;
			
			Данные.П000210024004 = Данные.П000210020104
			+ Данные.П000210020304
			- Данные.П000210021104
			- Данные.П000210021304
			- Данные.П000210022104
			- Данные.П000210022304
			- Данные.П000210023104
			- Данные.П000210023304;
			
			Данные.П000210024005 = Данные.П000210020105
			+ Данные.П000210020305
			- Данные.П000210021105
			- Данные.П000210021305
			- Данные.П000210022105
			- Данные.П000210022305
			- Данные.П000210023105
			- Данные.П000210023305;
			
			Данные.П000210024006 = Данные.П000210020106
			+ Данные.П000210020306
			- Данные.П000210021106
			- Данные.П000210021306
			- Данные.П000210022106
			- Данные.П000210022306
			- Данные.П000210023106
			- Данные.П000210023306;
			
			Данные.П000210024103 = Данные.П000210020203
			- Данные.П000210021203
			- Данные.П000210022203
			- Данные.П000210023203;
			
			Данные.П000210024104 = Данные.П000210020204
			- Данные.П000210021204
			- Данные.П000210022204
			- Данные.П000210023204;
			
			Данные.П000210024105 = Данные.П000210020205
			- Данные.П000210021205
			- Данные.П000210022205
			- Данные.П000210023205;
			
			Данные.П000210024106 = Данные.П000210020206
			- Данные.П000210021206
			- Данные.П000210022206
			- Данные.П000210023206;
			
			Данные.П000210027503 = Данные.П000210027103
			- Данные.П000210027203
			- Данные.П000210027303
			- Данные.П000210027403;
			
			Данные.П000210027504 = Данные.П000210027104
			- Данные.П000210027204
			- Данные.П000210027304
			- Данные.П000210027404;
			
			Данные.П000210027505 = Данные.П000210027105
			- Данные.П000210027205
			- Данные.П000210027305
			- Данные.П000210027405;
			
			Данные.П000210027506 = Данные.П000210027106
			- Данные.П000210027206
			- Данные.П000210027306
			- Данные.П000210027406;
			
		КонецЦикла;		
		
		РазделыОтчета.Раздел1.Данные.П000100011003 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025003")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025203");
		РазделыОтчета.Раздел1.Данные.П000100011004 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025103");
		РазделыОтчета.Раздел1.Данные.П000100011007 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210027603");
		РазделыОтчета.Раздел1.Данные.П000100011103 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025004")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025204");
		РазделыОтчета.Раздел1.Данные.П000100011104 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025104");
		РазделыОтчета.Раздел1.Данные.П000100011107 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210027604");
		РазделыОтчета.Раздел1.Данные.П000100011203 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025005")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025205");
		РазделыОтчета.Раздел1.Данные.П000100011204 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025105");
		РазделыОтчета.Раздел1.Данные.П000100011207 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210027605");
		РазделыОтчета.Раздел1.Данные.П000100011303 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025006")
		+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025206");
		РазделыОтчета.Раздел1.Данные.П000100011304 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210025106");
		РазделыОтчета.Раздел1.Данные.П000100011307 = СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел2.Данные, "П000210027606");
		РазделыОтчета.Раздел1.Данные.П000100011403 = РазделыОтчета.Раздел1.Данные.П000100011103
		+ РазделыОтчета.Раздел1.Данные.П000100011203
		+ РазделыОтчета.Раздел1.Данные.П000100011303;
		РазделыОтчета.Раздел1.Данные.П000100011404 = РазделыОтчета.Раздел1.Данные.П000100011104
		+ РазделыОтчета.Раздел1.Данные.П000100011204
		+ РазделыОтчета.Раздел1.Данные.П000100011304;
		РазделыОтчета.Раздел1.Данные.П000100011407 = РазделыОтчета.Раздел1.Данные.П000100011107
		+ РазделыОтчета.Раздел1.Данные.П000100011207
		+ РазделыОтчета.Раздел1.Данные.П000100011307;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда // Раздел 2.2
		
		РазделыОтчета.Раздел22.Данные.П000220028303 = РазделыОтчета.Раздел22.Данные.П000220028003
		- РазделыОтчета.Раздел22.Данные.П000220028103
		- РазделыОтчета.Раздел22.Данные.П000220028203;
		
		РазделыОтчета.Раздел22.Данные.П000220028304 = РазделыОтчета.Раздел22.Данные.П000220028004
		- РазделыОтчета.Раздел22.Данные.П000220028104
		- РазделыОтчета.Раздел22.Данные.П000220028204;
		
		РазделыОтчета.Раздел22.Данные.П000220028305 = РазделыОтчета.Раздел22.Данные.П000220028005
		- РазделыОтчета.Раздел22.Данные.П000220028105
		- РазделыОтчета.Раздел22.Данные.П000220028205;
		
		РазделыОтчета.Раздел22.Данные.П000220028306 = РазделыОтчета.Раздел22.Данные.П000220028006
		- РазделыОтчета.Раздел22.Данные.П000220028106
		- РазделыОтчета.Раздел22.Данные.П000220028206;
		
		
		РазделыОтчета.Раздел22.Данные.П000230029303 = РазделыОтчета.Раздел22.Данные.П000230029003
		- РазделыОтчета.Раздел22.Данные.П000230029103
		- РазделыОтчета.Раздел22.Данные.П000230029203;
		
		РазделыОтчета.Раздел22.Данные.П000230029304 = РазделыОтчета.Раздел22.Данные.П000230029004
		- РазделыОтчета.Раздел22.Данные.П000230029104
		- РазделыОтчета.Раздел22.Данные.П000230029204;
		
		РазделыОтчета.Раздел22.Данные.П000230029305 = РазделыОтчета.Раздел22.Данные.П000230029005
		- РазделыОтчета.Раздел22.Данные.П000230029105
		- РазделыОтчета.Раздел22.Данные.П000230029205;
		
		РазделыОтчета.Раздел22.Данные.П000230029306 = РазделыОтчета.Раздел22.Данные.П000230029006
		- РазделыОтчета.Раздел22.Данные.П000230029106
		- РазделыОтчета.Раздел22.Данные.П000230029206;
		
		РазделыОтчета.Раздел1.Данные.П000100011305 = РазделыОтчета.Раздел22.Данные.П000220028406;
		
		РазделыОтчета.Раздел1.Данные.П000100011306 = РазделыОтчета.Раздел22.Данные.П000230029406;
		
		РазделыОтчета.Раздел1.Данные.П000100011205 = РазделыОтчета.Раздел22.Данные.П000220028405;
		
		РазделыОтчета.Раздел1.Данные.П000100011206 = РазделыОтчета.Раздел22.Данные.П000230029405;
		
		РазделыОтчета.Раздел1.Данные.П000100011105 = РазделыОтчета.Раздел22.Данные.П000220028404;
		
		РазделыОтчета.Раздел1.Данные.П000100011106 = РазделыОтчета.Раздел22.Данные.П000230029404;
		
		РазделыОтчета.Раздел1.Данные.П000100011005 = РазделыОтчета.Раздел22.Данные.П000220028403;
		
		РазделыОтчета.Раздел1.Данные.П000100011006 = РазделыОтчета.Раздел22.Данные.П000230029403;
		
		РазделыОтчета.Раздел1.Данные.П000100011405 = РазделыОтчета.Раздел1.Данные.П000100011105
		+ РазделыОтчета.Раздел1.Данные.П000100011205
		+ РазделыОтчета.Раздел1.Данные.П000100011305;
		
		РазделыОтчета.Раздел1.Данные.П000100011406 = РазделыОтчета.Раздел1.Данные.П000100011106
		+ РазделыОтчета.Раздел1.Данные.П000100011206
		+ РазделыОтчета.Раздел1.Данные.П000100011306;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел31" Тогда // Раздел 3.1	
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел31.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310000105;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310000106;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310000107;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел31.ДанныеДопСтрок[Ном - 1].П000310000108;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел31.Данные.Вставить("П000310000205", Колонка5);
		РазделыОтчета.Раздел31.Данные.Вставить("П000310000206", Колонка6);
		РазделыОтчета.Раздел31.Данные.Вставить("П000310000207", Колонка7);
		РазделыОтчета.Раздел31.Данные.Вставить("П000310000208", Колонка8);
		
	ИначеЕсли ИмяРаздела = "Раздел32" Тогда // Раздел 3.2
		
		П000320032103 = РазделыОтчета.Раздел32.Данные.П000320032103;
		П000320032203 = РазделыОтчета.Раздел32.Данные.П000320032203;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032303", ? (П000320032103 <> 0, (П000320032203 / П000320032103) * 100, 0));
		
		П000320032104 = РазделыОтчета.Раздел32.Данные.П000320032104;
		П000320032204 = РазделыОтчета.Раздел32.Данные.П000320032204;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032304", ?(П000320032104 <> 0, (П000320032204 / П000320032104) * 100, 0));
		
		П000320032105 = РазделыОтчета.Раздел32.Данные.П000320032105;
		П000320032205 = РазделыОтчета.Раздел32.Данные.П000320032205;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032305", ?(П000320032105 <> 0, (П000320032205 / П000320032105) * 100, 0));
		
		П000320032106 = РазделыОтчета.Раздел32.Данные.П000320032106;
		П000320032206 = РазделыОтчета.Раздел32.Данные.П000320032206;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000320032306", ? (П000320032106 <> 0, (П000320032206 / П000320032106) * 100, 0));
		
		П000330033103 = РазделыОтчета.Раздел32.Данные.П000330033103;
		П000330033203 = РазделыОтчета.Раздел32.Данные.П000330033203;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033303", ? (П000330033103 <> 0, (П000330033203 / П000330033103) * 100, 0));
		
		П000330033104 = РазделыОтчета.Раздел32.Данные.П000330033104;
		П000330033204 = РазделыОтчета.Раздел32.Данные.П000330033204;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033304", ? (П000330033104 <> 0, (П000330033204 / П000330033104) * 100, 0));
		
		П000330033105 = РазделыОтчета.Раздел32.Данные.П000330033105;
		П000330033205 = РазделыОтчета.Раздел32.Данные.П000330033205;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033305", ? (П000330033105 <> 0, (П000330033205 / П000330033105) * 100, 0));
		
		П000330033106 = РазделыОтчета.Раздел32.Данные.П000330033106;
		П000330033206 = РазделыОтчета.Раздел32.Данные.П000330033206;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033306", ? (П000330033106 <> 0, (П000330033206 / П000330033106) * 100, 0));
		
		П000330033403 = РазделыОтчета.Раздел32.Данные.П000330033403;
		П000330033503 = РазделыОтчета.Раздел32.Данные.П000330033503;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033603", ? (П000330033403 <> 0, (П000330033503 / П000330033403) * 100, 0));
		
		П000330033404 = РазделыОтчета.Раздел32.Данные.П000330033404;
		П000330033504 = РазделыОтчета.Раздел32.Данные.П000330033504;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033604", ? (П000330033404 <> 0, (П000330033504 / П000330033404) * 100, 0));
		
		П000330033405 = РазделыОтчета.Раздел32.Данные.П000330033405;
		П000330033505 = РазделыОтчета.Раздел32.Данные.П000330033505;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033605", ? (П000330033405 <> 0, (П000330033505 / П000330033405) * 100, 0));
		
		П000330033406 = РазделыОтчета.Раздел32.Данные.П000330033406;
		П000330033506 = РазделыОтчета.Раздел32.Данные.П000330033506;
		
		РазделыОтчета.Раздел32.Данные.Вставить("П000330033606", ? (П000330033406 <> 0, (П000330033506 / П000330033406) * 100, 0));
		
	ИначеЕсли ИмяРаздела = "Раздел34" Тогда  // Раздел 3.4	
		
		РазделыОтчета.Раздел34.Данные.Вставить("П000340034303", ?(РазделыОтчета.Раздел34.Данные.П000340034103 = 0, 0,
		РазделыОтчета.Раздел34.Данные.П000340034203
		/ РазделыОтчета.Раздел34.Данные.П000340034103 * 100));
		
		РазделыОтчета.Раздел34.Данные.Вставить("П000340034304", ?(РазделыОтчета.Раздел34.Данные.П000340034104 = 0, 0,
		РазделыОтчета.Раздел34.Данные.П000340034204
		/ РазделыОтчета.Раздел34.Данные.П000340034104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел35" Тогда  // Раздел 3.5
		
		Колонка3 = 0;
		Колонка4 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел35.ДанныеДопСтрок.Количество() Цикл
			
			Колонка3 = Колонка3 + РазделыОтчета.Раздел35.ДанныеДопСтрок[Ном - 1].П000350000103;
			Колонка4 = Колонка4 + РазделыОтчета.Раздел35.ДанныеДопСтрок[Ном - 1].П000350000104;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел35.Данные.Вставить("П000350000203", Колонка3);
		РазделыОтчета.Раздел35.Данные.Вставить("П000350000204", Колонка4);
		
	ИначеЕсли ИмяРаздела = "Раздел36" Тогда // Раздел 3.6
		
		РазделыОтчета.Раздел36.Данные.Вставить("П000360036303", ?(РазделыОтчета.Раздел36.Данные.П000360036103 = 0, 0,
		РазделыОтчета.Раздел36.Данные.П000360036203
		/ РазделыОтчета.Раздел36.Данные.П000360036103 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел37" Тогда // Раздел 3.7
		
		РазделыОтчета.Раздел37.Данные.Вставить("П000370037503", ?(РазделыОтчета.Раздел37.Данные.П000370037103 = 0, 0,
		(РазделыОтчета.Раздел37.Данные.П000370037203
		+ РазделыОтчета.Раздел37.Данные.П000370037303
		+ РазделыОтчета.Раздел37.Данные.П000370037403)
		/ РазделыОтчета.Раздел37.Данные.П000370037103 * 100));
		
		РазделыОтчета.Раздел37.Данные.Вставить("П000370037504", ?(РазделыОтчета.Раздел37.Данные.П000370037104 = 0, 0,
		(РазделыОтчета.Раздел37.Данные.П000370037204
		+ РазделыОтчета.Раздел37.Данные.П000370037304
		+ РазделыОтчета.Раздел37.Данные.П000370037404)
		/ РазделыОтчета.Раздел37.Данные.П000370037104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел38" Тогда  // Раздел 3.8	
		
		РазделыОтчета.Раздел38.Данные.Вставить("П000380038303", ?(РазделыОтчета.Раздел38.Данные.П000380038103 = 0, 0,
		РазделыОтчета.Раздел38.Данные.П000380038203
		/ РазделыОтчета.Раздел38.Данные.П000380038103 * 100));
		
		РазделыОтчета.Раздел38.Данные.Вставить("П000380038304", ?(РазделыОтчета.Раздел38.Данные.П000380038104 = 0, 0,
		РазделыОтчета.Раздел38.Данные.П000380038204
		/ РазделыОтчета.Раздел38.Данные.П000380038104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда // Раздел 4
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		Колонка9 = 0;
		Колонка10 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000105;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000106;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000107;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000108;
			Колонка9 = Колонка9 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000109;
			Колонка10 = Колонка10 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000110;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000205", Колонка5);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000206", Колонка6);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000207", Колонка7);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000208", Колонка8);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000209", Колонка9);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000210", Колонка10);
		
		РазделыОтчета.Раздел1.Данные.П000100012003 = РазделыОтчета.Раздел4.Данные.П000400000205;
		
		РазделыОтчета.Раздел1.Данные.П000100012004 = РазделыОтчета.Раздел4.Данные.П000400000207;
		РазделыОтчета.Раздел1.Данные.П000100012005 = РазделыОтчета.Раздел4.Данные.П000400000208;
		РазделыОтчета.Раздел1.Данные.П000100012006 = РазделыОтчета.Раздел4.Данные.П000400000209;
		РазделыОтчета.Раздел1.Данные.П000100012007 = РазделыОтчета.Раздел4.Данные.П000400000210;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел5" Тогда // Раздел 5
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000150;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000160;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000170;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000180;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000250", Колонка5);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000260", Колонка6);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000270", Колонка7);	
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000280", Колонка8);
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел5");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел4");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел38");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел37");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел36");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел35");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел34");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел32");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел31");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел22");
		РасчетРеглОтчетРСВ1ФормаОтчета2013Кв1(РазделыОтчета, "Раздел2");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, ИмяРаздела = "")
	
	Если ИмяРаздела = "Раздел1" Тогда // Раздел 1.
		
		// Расчет в стр. 130 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100013003
			= РазделыОтчета.Раздел1.Данные.П000100010003
			+ РазделыОтчета.Раздел1.Данные.П000100011003
			+ РазделыОтчета.Раздел1.Данные.П000100012003;
			
		РазделыОтчета.Раздел1.Данные.П000100013004
			= РазделыОтчета.Раздел1.Данные.П000100010004
			+ РазделыОтчета.Раздел1.Данные.П000100012004;
			
		РазделыОтчета.Раздел1.Данные.П000100013005
			= РазделыОтчета.Раздел1.Данные.П000100010005
			+ РазделыОтчета.Раздел1.Данные.П000100012005;
			
		РазделыОтчета.Раздел1.Данные.П000100013006
			= РазделыОтчета.Раздел1.Данные.П000100010006
			+ РазделыОтчета.Раздел1.Данные.П000100011006
			+ РазделыОтчета.Раздел1.Данные.П000100012006;
			
		РазделыОтчета.Раздел1.Данные.П000100013007
			= РазделыОтчета.Раздел1.Данные.П000100010007
			+ РазделыОтчета.Раздел1.Данные.П000100011007
			+ РазделыОтчета.Раздел1.Данные.П000100012007;
			
		РазделыОтчета.Раздел1.Данные.П000100013008
			= РазделыОтчета.Раздел1.Данные.П000100010008
			+ РазделыОтчета.Раздел1.Данные.П000100011008
			+ РазделыОтчета.Раздел1.Данные.П000100012008;
		
		// Расчет в стр. 144 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100014403
			= РазделыОтчета.Раздел1.Данные.П000100014103
			+ РазделыОтчета.Раздел1.Данные.П000100014203
			+ РазделыОтчета.Раздел1.Данные.П000100014303;
			
		РазделыОтчета.Раздел1.Данные.П000100014404
			= РазделыОтчета.Раздел1.Данные.П000100014104
			+ РазделыОтчета.Раздел1.Данные.П000100014204
			+ РазделыОтчета.Раздел1.Данные.П000100014304;
			
		РазделыОтчета.Раздел1.Данные.П000100014405
			= РазделыОтчета.Раздел1.Данные.П000100014105
			+ РазделыОтчета.Раздел1.Данные.П000100014205
			+ РазделыОтчета.Раздел1.Данные.П000100014305;
			
		РазделыОтчета.Раздел1.Данные.П000100014406
			= РазделыОтчета.Раздел1.Данные.П000100014106
			+ РазделыОтчета.Раздел1.Данные.П000100014206
			+ РазделыОтчета.Раздел1.Данные.П000100014306;
			
		РазделыОтчета.Раздел1.Данные.П000100014407
			= РазделыОтчета.Раздел1.Данные.П000100014107
			+ РазделыОтчета.Раздел1.Данные.П000100014207
			+ РазделыОтчета.Раздел1.Данные.П000100014307;
			
		РазделыОтчета.Раздел1.Данные.П000100014408
			= РазделыОтчета.Раздел1.Данные.П000100014108
			+ РазделыОтчета.Раздел1.Данные.П000100014208
			+ РазделыОтчета.Раздел1.Данные.П000100014308;
		
		// Расчет в стр. 150 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100015003
			= РазделыОтчета.Раздел1.Данные.П000100013003
			- РазделыОтчета.Раздел1.Данные.П000100014003;
		
		РазделыОтчета.Раздел1.Данные.П000100015004
			= РазделыОтчета.Раздел1.Данные.П000100013004
			- РазделыОтчета.Раздел1.Данные.П000100014004;
		
		РазделыОтчета.Раздел1.Данные.П000100015005
			= РазделыОтчета.Раздел1.Данные.П000100013005
			- РазделыОтчета.Раздел1.Данные.П000100014005;
		
		РазделыОтчета.Раздел1.Данные.П000100015006
			= РазделыОтчета.Раздел1.Данные.П000100013006
			- РазделыОтчета.Раздел1.Данные.П000100014006;
		
		РазделыОтчета.Раздел1.Данные.П000100015007
			= РазделыОтчета.Раздел1.Данные.П000100013007
			- РазделыОтчета.Раздел1.Данные.П000100014007;
		
		РазделыОтчета.Раздел1.Данные.П000100015008
			= РазделыОтчета.Раздел1.Данные.П000100013008
			- РазделыОтчета.Раздел1.Данные.П000100014008;
		
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда // Раздел 2.1.
		
		Для Каждого Страница Из РазделыОтчета.Раздел21.Данные Цикл
			
			Данные = Страница.Данные;
			
			// Расчет в стр. 204 раздела 2.1.
			
			Данные.П000210020403
				= Данные.П000210020003
				- Данные.П000210020103
				- Данные.П000210020203
				- Данные.П000210020303;
			
			Данные.П000210020404
				= Данные.П000210020004
				- Данные.П000210020104
				- Данные.П000210020204
				- Данные.П000210020304;
			
			Данные.П000210020405
				= Данные.П000210020005
				- Данные.П000210020105
				- Данные.П000210020205
				- Данные.П000210020305;
			
			Данные.П000210020406
				= Данные.П000210020006
				- Данные.П000210020106
				- Данные.П000210020206
				- Данные.П000210020306;
			
			// Расчет в стр. 214 раздела 2.1.
			
			Данные.П000210021403
				= Данные.П000210021003
				- Данные.П000210021103
				- Данные.П000210021203
				- Данные.П000210021303;
			
			Данные.П000210021404
				= Данные.П000210021004
				- Данные.П000210021104
				- Данные.П000210021204
				- Данные.П000210021304;
			
			Данные.П000210021405
				= Данные.П000210021005
				- Данные.П000210021105
				- Данные.П000210021205
				- Данные.П000210021305;
			
			Данные.П000210021406
				= Данные.П000210021006
				- Данные.П000210021106
				- Данные.П000210021206
				- Данные.П000210021306;
			
		КонецЦикла;
		
		// Расчет по гр. 3 и 8 в стр. 110 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011003
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020503")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020603");
		
		РазделыОтчета.Раздел1.Данные.П000100011008
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021503");
		
		// Расчет по гр. 3 и 8 в стр. 111 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011103
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020504")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020604");
		
		РазделыОтчета.Раздел1.Данные.П000100011108
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021504");
		
		// Расчет по гр. 3 и 8 в стр. 112 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011203
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020505")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020605");
		
		РазделыОтчета.Раздел1.Данные.П000100011208
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021505");
		
		// Расчет по гр. 3 и 8 в стр. 113 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011303
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020506")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020606");
		
		РазделыОтчета.Раздел1.Данные.П000100011308
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021506");
		
		// Расчет по гр. 3 и 8 в стр. 114 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011403
			= РазделыОтчета.Раздел1.Данные.П000100011103
			+ РазделыОтчета.Раздел1.Данные.П000100011203
			+ РазделыОтчета.Раздел1.Данные.П000100011303;
		
		РазделыОтчета.Раздел1.Данные.П000100011408
			= РазделыОтчета.Раздел1.Данные.П000100011108
			+ РазделыОтчета.Раздел1.Данные.П000100011208
			+ РазделыОтчета.Раздел1.Данные.П000100011308;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда // Разделы 2.2, 2.3.
		
		// Расчет в стр. 223 раздела 2.2.
		
		РазделыОтчета.Раздел22.Данные.П000220022303
			= РазделыОтчета.Раздел22.Данные.П000220022003
			- РазделыОтчета.Раздел22.Данные.П000220022103;
		
		РазделыОтчета.Раздел22.Данные.П000220022304
			= РазделыОтчета.Раздел22.Данные.П000220022004
			- РазделыОтчета.Раздел22.Данные.П000220022104;
		
		РазделыОтчета.Раздел22.Данные.П000220022305
			= РазделыОтчета.Раздел22.Данные.П000220022005
			- РазделыОтчета.Раздел22.Данные.П000220022105;
		
		РазделыОтчета.Раздел22.Данные.П000220022306
			= РазделыОтчета.Раздел22.Данные.П000220022006
			- РазделыОтчета.Раздел22.Данные.П000220022106;
		
		// Расчет в стр. 233 раздела 2.3.
		
		РазделыОтчета.Раздел22.Данные.П000230023303
			= РазделыОтчета.Раздел22.Данные.П000230023003
			- РазделыОтчета.Раздел22.Данные.П000230023103;
		
		РазделыОтчета.Раздел22.Данные.П000230023304
			= РазделыОтчета.Раздел22.Данные.П000230023004
			- РазделыОтчета.Раздел22.Данные.П000230023104;
		
		РазделыОтчета.Раздел22.Данные.П000230023305
			= РазделыОтчета.Раздел22.Данные.П000230023005
			- РазделыОтчета.Раздел22.Данные.П000230023105;
		
		РазделыОтчета.Раздел22.Данные.П000230023306
			= РазделыОтчета.Раздел22.Данные.П000230023006
			- РазделыОтчета.Раздел22.Данные.П000230023106;
		
		// Расчет по гр. 6 и 7 в стр. 110 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011006
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022403;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011007
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023403;
		
		// Расчет по гр. 6 и 7 в стр. 111 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011106
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022404;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011107
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023404;
		
		// Расчет по гр. 6 и 7 в стр. 112 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011206
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022405;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011207
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023405;
		
		// Расчет по гр. 6 и 7 в стр. 113 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011306
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022406;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011307
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023406;
		
		// Расчет по гр. 6 и 7 в стр. 114 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011406
			= РазделыОтчета.Раздел1.Данные.П000100011106
			+ РазделыОтчета.Раздел1.Данные.П000100011206
			+ РазделыОтчета.Раздел1.Данные.П000100011306;
		
		РазделыОтчета.Раздел1.Данные.П000100011407
			= РазделыОтчета.Раздел1.Данные.П000100011107
			+ РазделыОтчета.Раздел1.Данные.П000100011207
			+ РазделыОтчета.Раздел1.Данные.П000100011307;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел24" Тогда // Раздел 2.4.
		
		Для Каждого Страница Из РазделыОтчета.Раздел24.Данные Цикл
			
			Данные = Страница.Данные;
			
			// Расчет в стр. 243 раздела 2.4.
			
			Данные.П000240024303
				= Данные.П000240024003
				- Данные.П000240024103;
			
			Данные.П000240024304
				= Данные.П000240024004
				- Данные.П000240024104;
			
			Данные.П000240024305
				= Данные.П000240024005
				- Данные.П000240024105;
			
			Данные.П000240024306
				= Данные.П000240024006
				- Данные.П000240024106;
			
			// Расчет в стр. 249 раздела 2.4.
			
			Данные.П000240024903
				= Данные.П000240024603
				- Данные.П000240024703;
			
			Данные.П000240024904
				= Данные.П000240024604
				- Данные.П000240024704;
			
			Данные.П000240024905
				= Данные.П000240024605
				- Данные.П000240024705;
			
			Данные.П000240024906
				= Данные.П000240024606
				- Данные.П000240024706;
			
			// Расчет в стр. 255 раздела 2.4.
			
			Данные.П000240025503
				= Данные.П000240025203
				- Данные.П000240025303;
			
			Данные.П000240025504
				= Данные.П000240025204
				- Данные.П000240025304;
			
			Данные.П000240025505
				= Данные.П000240025205
				- Данные.П000240025305;
			
			Данные.П000240025506
				= Данные.П000240025206
				- Данные.П000240025306;
			
			// Расчет в стр. 261 раздела 2.4.
			
			Данные.П000240026103
				= Данные.П000240025803
				- Данные.П000240025903;
			
			Данные.П000240026104
				= Данные.П000240025804
				- Данные.П000240025904;
			
			Данные.П000240026105
				= Данные.П000240025805
				- Данные.П000240025905;
			
			Данные.П000240026106
				= Данные.П000240025806
				- Данные.П000240025906;
			
			// Расчет в стр. 267 раздела 2.4.
			
			Данные.П000240026703
				= Данные.П000240026403
				- Данные.П000240026503;
			
			Данные.П000240026704
				= Данные.П000240026404
				- Данные.П000240026504;
			
			Данные.П000240026705
				= Данные.П000240026405
				- Данные.П000240026505;
			
			Данные.П000240026706
				= Данные.П000240026406
				- Данные.П000240026506;
			
		КонецЦикла;
		
		// Расчет по гр. 6 и 7 в стр. 110 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011006 = РазделыОтчета.Раздел22.Данные.П000220022403
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011007 = РазделыОтчета.Раздел22.Данные.П000230023403
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 111 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011106 = РазделыОтчета.Раздел22.Данные.П000220022404
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011107 = РазделыОтчета.Раздел22.Данные.П000230023404
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 112 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011206 = РазделыОтчета.Раздел22.Данные.П000220022405
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011207 = РазделыОтчета.Раздел22.Данные.П000230023405
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 113 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011306 = РазделыОтчета.Раздел22.Данные.П000220022406
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011307 = РазделыОтчета.Раздел22.Данные.П000230023406
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 114 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011406
			= РазделыОтчета.Раздел1.Данные.П000100011106
			+ РазделыОтчета.Раздел1.Данные.П000100011206
			+ РазделыОтчета.Раздел1.Данные.П000100011306;
			
		РазделыОтчета.Раздел1.Данные.П000100011407
			= РазделыОтчета.Раздел1.Данные.П000100011107
			+ РазделыОтчета.Раздел1.Данные.П000100011207
			+ РазделыОтчета.Раздел1.Данные.П000100011307;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел31" Тогда // Разделы 3.1, 3.2.
		
		// Расчет в стр. 323 раздела 3.1.
		
		П000320032103 = РазделыОтчета.Раздел31.Данные.П000320032103;
		П000320032203 = РазделыОтчета.Раздел31.Данные.П000320032203;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000320032303", ?(П000320032103 <> 0, (П000320032203 / П000320032103) * 100, 0));
		
		П000320032104 = РазделыОтчета.Раздел31.Данные.П000320032104;
		П000320032204 = РазделыОтчета.Раздел31.Данные.П000320032204;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000320032304", ?(П000320032104 <> 0, (П000320032204 / П000320032104) * 100, 0));
		
		П000320032105 = РазделыОтчета.Раздел31.Данные.П000320032105;
		П000320032205 = РазделыОтчета.Раздел31.Данные.П000320032205;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000320032305", ?(П000320032105 <> 0, (П000320032205 / П000320032105) * 100, 0));
		
		П000320032106 = РазделыОтчета.Раздел31.Данные.П000320032106;
		П000320032206 = РазделыОтчета.Раздел31.Данные.П000320032206;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000320032306", ?(П000320032106 <> 0, (П000320032206 / П000320032106) * 100, 0));
		
		// Расчет в стр. 333 раздела 3.2.
		
		П000330033103 = РазделыОтчета.Раздел31.Данные.П000330033103;
		П000330033203 = РазделыОтчета.Раздел31.Данные.П000330033203;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033303", ?(П000330033103 <> 0, (П000330033203 / П000330033103) * 100, 0));
		
		П000330033104 = РазделыОтчета.Раздел31.Данные.П000330033104;
		П000330033204 = РазделыОтчета.Раздел31.Данные.П000330033204;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033304", ?(П000330033104 <> 0, (П000330033204 / П000330033104) * 100, 0));
		
		П000330033105 = РазделыОтчета.Раздел31.Данные.П000330033105;
		П000330033205 = РазделыОтчета.Раздел31.Данные.П000330033205;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033305", ?(П000330033105 <> 0, (П000330033205 / П000330033105) * 100, 0));
		
		П000330033106 = РазделыОтчета.Раздел31.Данные.П000330033106;
		П000330033206 = РазделыОтчета.Раздел31.Данные.П000330033206;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033306", ?(П000330033106 <> 0, (П000330033206 / П000330033106) * 100, 0));
		
		// Расчет в стр. 336 раздела 3.2.
		
		П000330033403 = РазделыОтчета.Раздел31.Данные.П000330033403;
		П000330033503 = РазделыОтчета.Раздел31.Данные.П000330033503;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033603", ?(П000330033403 <> 0, (П000330033503 / П000330033403) * 100, 0));
		
		П000330033404 = РазделыОтчета.Раздел31.Данные.П000330033404;
		П000330033504 = РазделыОтчета.Раздел31.Данные.П000330033504;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033604", ?(П000330033404 <> 0, (П000330033504 / П000330033404) * 100, 0));
		
		П000330033405 = РазделыОтчета.Раздел31.Данные.П000330033405;
		П000330033505 = РазделыОтчета.Раздел31.Данные.П000330033505;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033605", ?(П000330033405 <> 0, (П000330033505 / П000330033405) * 100, 0));
		
		П000330033406 = РазделыОтчета.Раздел31.Данные.П000330033406;
		П000330033506 = РазделыОтчета.Раздел31.Данные.П000330033506;
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000330033606", ?(П000330033406 <> 0, (П000330033506 / П000330033406) * 100, 0));
		
	ИначеЕсли ИмяРаздела = "Раздел33" Тогда // Раздел 3.3, 3.4.
		
		// Расчет в стр. 343 раздела 3.3.
		
		РазделыОтчета.Раздел33.Данные.Вставить(
			"П000340034303", ?(РазделыОтчета.Раздел33.Данные.П000340034103 = 0, 0,
			РазделыОтчета.Раздел33.Данные.П000340034203 / РазделыОтчета.Раздел33.Данные.П000340034103 * 100));
		
		РазделыОтчета.Раздел33.Данные.Вставить(
			"П000340034304", ?(РазделыОтчета.Раздел33.Данные.П000340034104 = 0, 0,
			РазделыОтчета.Раздел33.Данные.П000340034204 / РазделыОтчета.Раздел33.Данные.П000340034104 * 100));
		
		// Расчет в стр. "Итого ..." (после многострочной части) раздела 3.4.
		
		Колонка3 = 0;
		Колонка4 = 0;
		Для Ном = 1 По РазделыОтчета.Раздел33.ДанныеДопСтрок.Количество() Цикл
			Колонка3 = Колонка3 + РазделыОтчета.Раздел33.ДанныеДопСтрок[Ном - 1].П000350000103;
			Колонка4 = Колонка4 + РазделыОтчета.Раздел33.ДанныеДопСтрок[Ном - 1].П000350000104;
		КонецЦикла;
		РазделыОтчета.Раздел33.Данные.Вставить("П000350000203", Колонка3);
		РазделыОтчета.Раздел33.Данные.Вставить("П000350000204", Колонка4);
		
	ИначеЕсли ИмяРаздела = "Раздел35" Тогда // Разделы 3.5, 3.6.
		
		// Расчет в стр. 363 раздела 3.5.
		
		РазделыОтчета.Раздел35.Данные.Вставить(
			"П000360036303", ?(РазделыОтчета.Раздел35.Данные.П000360036103 = 0, 0,
			РазделыОтчета.Раздел35.Данные.П000360036203 / РазделыОтчета.Раздел35.Данные.П000360036103 * 100));
		
		// Расчет в стр. 375 раздела 3.6.
		
		РазделыОтчета.Раздел35.Данные.Вставить(
			"П000370037503", ?(РазделыОтчета.Раздел35.Данные.П000370037103 = 0, 0,
			 (РазделыОтчета.Раздел35.Данные.П000370037203
			+ РазделыОтчета.Раздел35.Данные.П000370037303
			+ РазделыОтчета.Раздел35.Данные.П000370037403)
			/ РазделыОтчета.Раздел35.Данные.П000370037103 * 100));

		РазделыОтчета.Раздел35.Данные.Вставить(
			"П000370037504", ?(РазделыОтчета.Раздел35.Данные.П000370037104 = 0, 0,
			 (РазделыОтчета.Раздел35.Данные.П000370037204
			+ РазделыОтчета.Раздел35.Данные.П000370037304
			+ РазделыОтчета.Раздел35.Данные.П000370037404)
			/ РазделыОтчета.Раздел35.Данные.П000370037104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда // Раздел 4.
		
		// Расчет в стр. "Итого ..." (после многострочной части) раздела 4.
		
		Колонка6  = 0;
		Колонка7  = 0;
		Колонка8  = 0;
		Колонка9  = 0;
		Колонка10 = 0;
		Колонка11 = 0;
		Колонка12 = 0;
		Колонка13 = 0;
		Колонка14 = 0;
		
		СуммаРазд4Гр13СКодом1ВГр3 = 0;
		СуммаРазд4Гр13СКодом2ВГр3 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() Цикл
			
			Колонка6  = Колонка6  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000106;
			Колонка7  = Колонка7  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000107;
			Колонка8  = Колонка8  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000108;
			Колонка9  = Колонка9  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000109;
			Колонка10 = Колонка10 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000110;
			Колонка11 = Колонка11 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000111;
			Колонка12 = Колонка12 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000112;
			Колонка13 = Колонка13 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000113;
			Колонка14 = Колонка14 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000114;
			
			Если РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000103 = "1" Тогда
				
				// Вычисление значения, необходимого для расчета
				// по гр. 6 в стр. 120 раздела 1.
				// Суммируем значения по гр. 13 раздела 4,
				// при значении кода основания в гр. 3 равном "1".
				СуммаРазд4Гр13СКодом1ВГр3 = СуммаРазд4Гр13СКодом1ВГр3
					+ РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000113;
				
			ИначеЕсли РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000103 = "2" Тогда
				
				// Вычисление значения, необходимого для расчета
				// по гр. 7 в стр. 120 раздела 1.
				// Суммируем значения по гр. 13 раздела 4,
				// при значении кода основания в гр. 3 равном "2".
				СуммаРазд4Гр13СКодом2ВГр3 = СуммаРазд4Гр13СКодом2ВГр3
					+ РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000113;
				
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000206", Колонка6);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000207", Колонка7);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000208", Колонка8);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000209", Колонка9);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000210", Колонка10);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000211", Колонка11);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000212", Колонка12);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000213", Колонка13);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000214", Колонка14);
		
		// Расчет по гр. 3 - 8 в стр. 120,
		// а также по гр. 3 и 4 в стр. 121 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100012003 = РазделыОтчета.Раздел4.Данные.П000400000206;
		РазделыОтчета.Раздел1.Данные.П000100012004 = РазделыОтчета.Раздел4.Данные.П000400000208;
		РазделыОтчета.Раздел1.Данные.П000100012005 = РазделыОтчета.Раздел4.Данные.П000400000210;
		РазделыОтчета.Раздел1.Данные.П000100012006
			= РазделыОтчета.Раздел4.Данные.П000400000211 + СуммаРазд4Гр13СКодом1ВГр3;
		РазделыОтчета.Раздел1.Данные.П000100012007
			= РазделыОтчета.Раздел4.Данные.П000400000212 + СуммаРазд4Гр13СКодом2ВГр3;
		РазделыОтчета.Раздел1.Данные.П000100012008 = РазделыОтчета.Раздел4.Данные.П000400000214;
		РазделыОтчета.Раздел1.Данные.П000100012103 = РазделыОтчета.Раздел4.Данные.П000400000207;
		РазделыОтчета.Раздел1.Данные.П000100012104 = РазделыОтчета.Раздел4.Данные.П000400000209;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел5" Тогда // Раздел 5.
		
		// Расчет в стр. "Итого ..." (после многострочной части) раздела 5.
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000150;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000160;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000170;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000180;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000250", Колонка5);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000260", Колонка6);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000270", Колонка7);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000280", Колонка8);
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел5");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел4");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел35");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел33");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел31");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел24");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел22");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел21");
		РасчетРеглОтчетРСВ1ФормаОтчета2014Кв1(РазделыОтчета, "Раздел1");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, ИмяРаздела = "")
	
	Если ИмяРаздела = "Раздел1" Тогда // Раздел 1.
		
		// Расчет в стр. 130 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100013003
			= РазделыОтчета.Раздел1.Данные.П000100010003
			+ РазделыОтчета.Раздел1.Данные.П000100011003
			+ РазделыОтчета.Раздел1.Данные.П000100012003;
			
		РазделыОтчета.Раздел1.Данные.П000100013004
			= РазделыОтчета.Раздел1.Данные.П000100010004
			+ РазделыОтчета.Раздел1.Данные.П000100012004;
			
		РазделыОтчета.Раздел1.Данные.П000100013005
			= РазделыОтчета.Раздел1.Данные.П000100010005
			+ РазделыОтчета.Раздел1.Данные.П000100012005;
			
		РазделыОтчета.Раздел1.Данные.П000100013006
			= РазделыОтчета.Раздел1.Данные.П000100010006
			+ РазделыОтчета.Раздел1.Данные.П000100011006
			+ РазделыОтчета.Раздел1.Данные.П000100012006;
			
		РазделыОтчета.Раздел1.Данные.П000100013007
			= РазделыОтчета.Раздел1.Данные.П000100010007
			+ РазделыОтчета.Раздел1.Данные.П000100011007
			+ РазделыОтчета.Раздел1.Данные.П000100012007;
			
		РазделыОтчета.Раздел1.Данные.П000100013008
			= РазделыОтчета.Раздел1.Данные.П000100010008
			+ РазделыОтчета.Раздел1.Данные.П000100011008
			+ РазделыОтчета.Раздел1.Данные.П000100012008;
		
		// Расчет в стр. 144 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100014403
			= РазделыОтчета.Раздел1.Данные.П000100014103
			+ РазделыОтчета.Раздел1.Данные.П000100014203
			+ РазделыОтчета.Раздел1.Данные.П000100014303;
			
		РазделыОтчета.Раздел1.Данные.П000100014404
			= РазделыОтчета.Раздел1.Данные.П000100014104
			+ РазделыОтчета.Раздел1.Данные.П000100014204
			+ РазделыОтчета.Раздел1.Данные.П000100014304;
			
		РазделыОтчета.Раздел1.Данные.П000100014405
			= РазделыОтчета.Раздел1.Данные.П000100014105
			+ РазделыОтчета.Раздел1.Данные.П000100014205
			+ РазделыОтчета.Раздел1.Данные.П000100014305;
			
		РазделыОтчета.Раздел1.Данные.П000100014406
			= РазделыОтчета.Раздел1.Данные.П000100014106
			+ РазделыОтчета.Раздел1.Данные.П000100014206
			+ РазделыОтчета.Раздел1.Данные.П000100014306;
			
		РазделыОтчета.Раздел1.Данные.П000100014407
			= РазделыОтчета.Раздел1.Данные.П000100014107
			+ РазделыОтчета.Раздел1.Данные.П000100014207
			+ РазделыОтчета.Раздел1.Данные.П000100014307;
			
		РазделыОтчета.Раздел1.Данные.П000100014408
			= РазделыОтчета.Раздел1.Данные.П000100014108
			+ РазделыОтчета.Раздел1.Данные.П000100014208
			+ РазделыОтчета.Раздел1.Данные.П000100014308;
		
		// Расчет в стр. 150 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100015003
			= РазделыОтчета.Раздел1.Данные.П000100013003
			- РазделыОтчета.Раздел1.Данные.П000100014003;
		
		РазделыОтчета.Раздел1.Данные.П000100015004
			= РазделыОтчета.Раздел1.Данные.П000100013004
			- РазделыОтчета.Раздел1.Данные.П000100014004;
		
		РазделыОтчета.Раздел1.Данные.П000100015005
			= РазделыОтчета.Раздел1.Данные.П000100013005
			- РазделыОтчета.Раздел1.Данные.П000100014005;
		
		РазделыОтчета.Раздел1.Данные.П000100015006
			= РазделыОтчета.Раздел1.Данные.П000100013006
			- РазделыОтчета.Раздел1.Данные.П000100014006;
		
		РазделыОтчета.Раздел1.Данные.П000100015007
			= РазделыОтчета.Раздел1.Данные.П000100013007
			- РазделыОтчета.Раздел1.Данные.П000100014007;
		
		РазделыОтчета.Раздел1.Данные.П000100015008
			= РазделыОтчета.Раздел1.Данные.П000100013008
			- РазделыОтчета.Раздел1.Данные.П000100014008;
		
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда // Раздел 2.1.
		
		Для Каждого Страница Из РазделыОтчета.Раздел21.Данные Цикл
			
			Данные = Страница.Данные;
			
			// Расчет в стр. 204 раздела 2.1.
			
			Данные.П000210020403
				= Данные.П000210020003
				- Данные.П000210020103
				- Данные.П000210020203
				- Данные.П000210020303;
			
			Данные.П000210020404
				= Данные.П000210020004
				- Данные.П000210020104
				- Данные.П000210020204
				- Данные.П000210020304;
			
			Данные.П000210020405
				= Данные.П000210020005
				- Данные.П000210020105
				- Данные.П000210020205
				- Данные.П000210020305;
			
			Данные.П000210020406
				= Данные.П000210020006
				- Данные.П000210020106
				- Данные.П000210020206
				- Данные.П000210020306;
			
			// Расчет в стр. 213 раздела 2.1.
			
			Данные.П000210021303
				= Данные.П000210021003
				- Данные.П000210021103
				- Данные.П000210021203;
			
			Данные.П000210021304
				= Данные.П000210021004
				- Данные.П000210021104
				- Данные.П000210021204;
			
			Данные.П000210021305
				= Данные.П000210021005
				- Данные.П000210021105
				- Данные.П000210021205;
			
			Данные.П000210021306
				= Данные.П000210021006
				- Данные.П000210021106
				- Данные.П000210021206;
			
		КонецЦикла;
		
		// Расчет по гр. 3 и 8 в стр. 110 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011003
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020503")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020603");
		РазделыОтчета.Раздел1.Данные.П000100011003 = Макс(РазделыОтчета.Раздел1.Данные.П000100011003, 0);
		
		РазделыОтчета.Раздел1.Данные.П000100011008
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021403");
		РазделыОтчета.Раздел1.Данные.П000100011008 = Макс(РазделыОтчета.Раздел1.Данные.П000100011008, 0);
		
		// Расчет по гр. 3 и 8 в стр. 111 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011103
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020504")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020604");
		
		РазделыОтчета.Раздел1.Данные.П000100011108
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021404");
		
		// Расчет по гр. 3 и 8 в стр. 112 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011203
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020505")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020605");
		
		РазделыОтчета.Раздел1.Данные.П000100011208
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021405");
		
		// Расчет по гр. 3 и 8 в стр. 113 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011303
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020506")
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210020606");
		
		РазделыОтчета.Раздел1.Данные.П000100011308
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел21.Данные, "П000210021406");
		
		// Расчет по гр. 3 и 8 в стр. 114 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011403
			= РазделыОтчета.Раздел1.Данные.П000100011103
			+ РазделыОтчета.Раздел1.Данные.П000100011203
			+ РазделыОтчета.Раздел1.Данные.П000100011303;
		
		РазделыОтчета.Раздел1.Данные.П000100011408
			= РазделыОтчета.Раздел1.Данные.П000100011108
			+ РазделыОтчета.Раздел1.Данные.П000100011208
			+ РазделыОтчета.Раздел1.Данные.П000100011308;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда // Разделы 2.2, 2.3.
		
		// Расчет в стр. 223 раздела 2.2.
		
		РазделыОтчета.Раздел22.Данные.П000220022303
			= РазделыОтчета.Раздел22.Данные.П000220022003
			- РазделыОтчета.Раздел22.Данные.П000220022103;
		
		РазделыОтчета.Раздел22.Данные.П000220022304
			= РазделыОтчета.Раздел22.Данные.П000220022004
			- РазделыОтчета.Раздел22.Данные.П000220022104;
		
		РазделыОтчета.Раздел22.Данные.П000220022305
			= РазделыОтчета.Раздел22.Данные.П000220022005
			- РазделыОтчета.Раздел22.Данные.П000220022105;
		
		РазделыОтчета.Раздел22.Данные.П000220022306
			= РазделыОтчета.Раздел22.Данные.П000220022006
			- РазделыОтчета.Раздел22.Данные.П000220022106;
		
		// Расчет в стр. 233 раздела 2.3.
		
		РазделыОтчета.Раздел22.Данные.П000230023303
			= РазделыОтчета.Раздел22.Данные.П000230023003
			- РазделыОтчета.Раздел22.Данные.П000230023103;
		
		РазделыОтчета.Раздел22.Данные.П000230023304
			= РазделыОтчета.Раздел22.Данные.П000230023004
			- РазделыОтчета.Раздел22.Данные.П000230023104;
		
		РазделыОтчета.Раздел22.Данные.П000230023305
			= РазделыОтчета.Раздел22.Данные.П000230023005
			- РазделыОтчета.Раздел22.Данные.П000230023105;
		
		РазделыОтчета.Раздел22.Данные.П000230023306
			= РазделыОтчета.Раздел22.Данные.П000230023006
			- РазделыОтчета.Раздел22.Данные.П000230023106;
		
		// Расчет по гр. 6 и 7 в стр. 110 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011006
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022403;
		РазделыОтчета.Раздел1.Данные.П000100011006 = Макс(РазделыОтчета.Раздел1.Данные.П000100011006, 0);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011007
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023403;
		РазделыОтчета.Раздел1.Данные.П000100011007 = Макс(РазделыОтчета.Раздел1.Данные.П000100011007, 0);
		
		// Расчет по гр. 6 и 7 в стр. 111 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011106
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022404;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011107
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023404;
		
		// Расчет по гр. 6 и 7 в стр. 112 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011206
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022405;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011207
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023405;
		
		// Расчет по гр. 6 и 7 в стр. 113 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011306
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000220022406;
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011307
			= СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие)
			+ РазделыОтчета.Раздел22.Данные.П000230023406;
		
		// Расчет по гр. 6 и 7 в стр. 114 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011406
			= РазделыОтчета.Раздел1.Данные.П000100011106
			+ РазделыОтчета.Раздел1.Данные.П000100011206
			+ РазделыОтчета.Раздел1.Данные.П000100011306;
		
		РазделыОтчета.Раздел1.Данные.П000100011407
			= РазделыОтчета.Раздел1.Данные.П000100011107
			+ РазделыОтчета.Раздел1.Данные.П000100011207
			+ РазделыОтчета.Раздел1.Данные.П000100011307;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел24" Тогда // Раздел 2.4.
		
		Для Каждого Страница Из РазделыОтчета.Раздел24.Данные Цикл
			
			Данные = Страница.Данные;
			
			// Расчет в стр. 243 раздела 2.4.
			
			Данные.П000240024303
				= Данные.П000240024003
				- Данные.П000240024103;
			
			Данные.П000240024304
				= Данные.П000240024004
				- Данные.П000240024104;
			
			Данные.П000240024305
				= Данные.П000240024005
				- Данные.П000240024105;
			
			Данные.П000240024306
				= Данные.П000240024006
				- Данные.П000240024106;
			
			// Расчет в стр. 249 раздела 2.4.
			
			Данные.П000240024903
				= Данные.П000240024603
				- Данные.П000240024703;
			
			Данные.П000240024904
				= Данные.П000240024604
				- Данные.П000240024704;
			
			Данные.П000240024905
				= Данные.П000240024605
				- Данные.П000240024705;
			
			Данные.П000240024906
				= Данные.П000240024606
				- Данные.П000240024706;
			
			// Расчет в стр. 255 раздела 2.4.
			
			Данные.П000240025503
				= Данные.П000240025203
				- Данные.П000240025303;
			
			Данные.П000240025504
				= Данные.П000240025204
				- Данные.П000240025304;
			
			Данные.П000240025505
				= Данные.П000240025205
				- Данные.П000240025305;
			
			Данные.П000240025506
				= Данные.П000240025206
				- Данные.П000240025306;
			
			// Расчет в стр. 261 раздела 2.4.
			
			Данные.П000240026103
				= Данные.П000240025803
				- Данные.П000240025903;
			
			Данные.П000240026104
				= Данные.П000240025804
				- Данные.П000240025904;
			
			Данные.П000240026105
				= Данные.П000240025805
				- Данные.П000240025905;
			
			Данные.П000240026106
				= Данные.П000240025806
				- Данные.П000240025906;
			
			// Расчет в стр. 267 раздела 2.4.
			
			Данные.П000240026703
				= Данные.П000240026403
				- Данные.П000240026503;
			
			Данные.П000240026704
				= Данные.П000240026404
				- Данные.П000240026504;
			
			Данные.П000240026705
				= Данные.П000240026405
				- Данные.П000240026505;
			
			Данные.П000240026706
				= Данные.П000240026406
				- Данные.П000240026506;
			
		КонецЦикла;
		
		// Расчет по гр. 6 и 7 в стр. 110 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011006 = РазделыОтчета.Раздел22.Данные.П000220022403
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие);
		РазделыОтчета.Раздел1.Данные.П000100011006 = Макс(РазделыОтчета.Раздел1.Данные.П000100011006, 0);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011007 = РазделыОтчета.Раздел22.Данные.П000230023403
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024403", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025003", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025603", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026203", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026803", Условие);
		РазделыОтчета.Раздел1.Данные.П000100011007 = Макс(РазделыОтчета.Раздел1.Данные.П000100011007, 0);
		
		// Расчет по гр. 6 и 7 в стр. 111 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011106 = РазделыОтчета.Раздел22.Данные.П000220022404
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011107 = РазделыОтчета.Раздел22.Данные.П000230023404
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024404", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025004", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025604", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026204", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026804", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 112 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011206 = РазделыОтчета.Раздел22.Данные.П000220022405
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011207 = РазделыОтчета.Раздел22.Данные.П000230023405
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024405", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025005", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025605", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026205", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026805", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 113 раздела 1.
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "1");
		РазделыОтчета.Раздел1.Данные.П000100011306 = РазделыОтчета.Раздел22.Данные.П000220022406
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие);
		
		Условие = Новый Структура;
		Условие.Вставить("П000240001001", "2");
		РазделыОтчета.Раздел1.Данные.П000100011307 = РазделыОтчета.Раздел22.Данные.П000230023406
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240024406", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025006", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240025606", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026206", Условие)
			+ СуммаПоказателяПоВсемСтраницам(РазделыОтчета.Раздел24.Данные, "П000240026806", Условие);
		
		// Расчет по гр. 6 и 7 в стр. 114 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100011406
			= РазделыОтчета.Раздел1.Данные.П000100011106
			+ РазделыОтчета.Раздел1.Данные.П000100011206
			+ РазделыОтчета.Раздел1.Данные.П000100011306;
			
		РазделыОтчета.Раздел1.Данные.П000100011407
			= РазделыОтчета.Раздел1.Данные.П000100011107
			+ РазделыОтчета.Раздел1.Данные.П000100011207
			+ РазделыОтчета.Раздел1.Данные.П000100011307;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел31" Тогда // Раздел 3.1.
		
		// Расчет в стр. 343 раздела 3.1.
		
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000340034303", ?(РазделыОтчета.Раздел31.Данные.П000340034103 = 0, 0,
			РазделыОтчета.Раздел31.Данные.П000340034203 / РазделыОтчета.Раздел31.Данные.П000340034103 * 100));
		
		РазделыОтчета.Раздел31.Данные.Вставить(
			"П000340034304", ?(РазделыОтчета.Раздел31.Данные.П000340034104 = 0, 0,
			РазделыОтчета.Раздел31.Данные.П000340034204 / РазделыОтчета.Раздел31.Данные.П000340034104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел32" Тогда // Разделы 3.2, 3.3.
		
		// Расчет в стр. 363 раздела 3.2.
		
		РазделыОтчета.Раздел32.Данные.Вставить(
			"П000360036303", ?(РазделыОтчета.Раздел32.Данные.П000360036103 = 0, 0,
			РазделыОтчета.Раздел32.Данные.П000360036203 / РазделыОтчета.Раздел32.Данные.П000360036103 * 100));
		
		// Расчет в стр. 375 раздела 3.3.
		
		РазделыОтчета.Раздел32.Данные.Вставить(
			"П000370037503", ?(РазделыОтчета.Раздел32.Данные.П000370037103 = 0, 0,
			 (РазделыОтчета.Раздел32.Данные.П000370037203
			+ РазделыОтчета.Раздел32.Данные.П000370037303
			+ РазделыОтчета.Раздел32.Данные.П000370037403)
			/ РазделыОтчета.Раздел32.Данные.П000370037103 * 100));

		РазделыОтчета.Раздел32.Данные.Вставить(
			"П000370037504", ?(РазделыОтчета.Раздел32.Данные.П000370037104 = 0, 0,
			 (РазделыОтчета.Раздел32.Данные.П000370037204
			+ РазделыОтчета.Раздел32.Данные.П000370037304
			+ РазделыОтчета.Раздел32.Данные.П000370037404)
			/ РазделыОтчета.Раздел32.Данные.П000370037104 * 100));
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда // Раздел 4.
		
		// Расчет в стр. "Итого ..." (после многострочной части) раздела 4.
		
		Колонка6  = 0;
		Колонка7  = 0;
		Колонка8  = 0;
		Колонка9  = 0;
		Колонка10 = 0;
		Колонка11 = 0;
		Колонка12 = 0;
		Колонка13 = 0;
		Колонка14 = 0;
		
		СуммаРазд4Гр13СКодом1ВГр3 = 0;
		СуммаРазд4Гр13СКодом2ВГр3 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() Цикл
			
			Колонка6  = Колонка6  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000106;
			Колонка7  = Колонка7  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000107;
			Колонка8  = Колонка8  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000108;
			Колонка9  = Колонка9  + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000109;
			Колонка10 = Колонка10 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000110;
			Колонка11 = Колонка11 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000111;
			Колонка12 = Колонка12 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000112;
			Колонка13 = Колонка13 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000113;
			Колонка14 = Колонка14 + РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000114;
			
			Если РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000103 = "1" Тогда
				
				// Вычисление значения, необходимого для расчета
				// по гр. 6 в стр. 120 раздела 1.
				// Суммируем значения по гр. 13 раздела 4,
				// при значении кода основания в гр. 3 равном "1".
				СуммаРазд4Гр13СКодом1ВГр3 = СуммаРазд4Гр13СКодом1ВГр3
					+ РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000113;
				
			ИначеЕсли РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000103 = "2" Тогда
				
				// Вычисление значения, необходимого для расчета
				// по гр. 7 в стр. 120 раздела 1.
				// Суммируем значения по гр. 13 раздела 4,
				// при значении кода основания в гр. 3 равном "2".
				СуммаРазд4Гр13СКодом2ВГр3 = СуммаРазд4Гр13СКодом2ВГр3
					+ РазделыОтчета.Раздел4.ДанныеДопСтрок[Ном - 1].П000400000113;
				
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000206", Колонка6);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000207", Колонка7);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000208", Колонка8);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000209", Колонка9);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000210", Колонка10);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000211", Колонка11);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000212", Колонка12);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000213", Колонка13);
		РазделыОтчета.Раздел4.Данные.Вставить("П000400000214", Колонка14);
		
		// Расчет по гр. 3 - 8 в стр. 122,
		// а также по гр. 3 и 4 в стр. 123 раздела 1.
		
		РазделыОтчета.Раздел1.Данные.П000100012203 = РазделыОтчета.Раздел4.Данные.П000400000206;
		РазделыОтчета.Раздел1.Данные.П000100012204 = РазделыОтчета.Раздел4.Данные.П000400000208;
		РазделыОтчета.Раздел1.Данные.П000100012205 = РазделыОтчета.Раздел4.Данные.П000400000210;
		РазделыОтчета.Раздел1.Данные.П000100012206
			= РазделыОтчета.Раздел4.Данные.П000400000211 + СуммаРазд4Гр13СКодом1ВГр3;
		РазделыОтчета.Раздел1.Данные.П000100012207
			= РазделыОтчета.Раздел4.Данные.П000400000212 + СуммаРазд4Гр13СКодом2ВГр3;
		РазделыОтчета.Раздел1.Данные.П000100012208 = РазделыОтчета.Раздел4.Данные.П000400000214;
		РазделыОтчета.Раздел1.Данные.П000100012303 = РазделыОтчета.Раздел4.Данные.П000400000207;
		РазделыОтчета.Раздел1.Данные.П000100012304 = РазделыОтчета.Раздел4.Данные.П000400000209;
		
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел1");
		
	ИначеЕсли ИмяРаздела = "Раздел5" Тогда // Раздел 5.
		
		// Расчет в стр. "Итого ..." (после многострочной части) раздела 5.
		
		Колонка5 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		Колонка8 = 0;
		
		Для Ном = 1 По РазделыОтчета.Раздел5.ДанныеДопСтрок.Количество() Цикл
			
			Колонка5 = Колонка5 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000150;
			Колонка6 = Колонка6 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000160;
			Колонка7 = Колонка7 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000170;
			Колонка8 = Колонка8 + РазделыОтчета.Раздел5.ДанныеДопСтрок[Ном - 1].П000500000180;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000250", Колонка5);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000260", Колонка6);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000270", Колонка7);
		РазделыОтчета.Раздел5.Данные.Вставить("П000500000280", Колонка8);
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел5");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел4");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел32");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел31");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел24");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел22");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел21");
		РасчетРеглОтчетРСВ1ФормаОтчета2015Кв1(РазделыОтчета, "Раздел1");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2010Кв4(ДеревоСтраницОтчета)

	ДеревоСтраницОтчета.Колонки.Добавить("Представление",            Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",              Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",   Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",            Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",         Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Титульный";
	СтрокаУровня1.Представление          = "Титульный лист";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаТитульный";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел12";
	СтрокаУровня1.Представление          = "Раздел 1, Раздел 2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел12";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел30";
	СтрокаУровня1.Представление          = "Раздел 3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел30";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел41";
	СтрокаУровня1.Представление          = "Раздел 4.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел41";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел42";
	СтрокаУровня1.Представление          = "Раздел 4.2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел42";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел43";
	СтрокаУровня1.Представление          = "Раздел 4.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел43";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел50";
	СтрокаУровня1.Представление          = "Раздел 5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел50";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2011Кв1(ДеревоСтраницОтчета)

	ДеревоСтраницОтчета.Колонки.Добавить("Представление",            Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",              Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",   Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",            Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",         Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Титульный";
	СтрокаУровня1.Представление          = "Титульный лист";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаТитульный";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел12";
	СтрокаУровня1.Представление          = "Раздел 1, Раздел 2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел12";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел30";
	СтрокаУровня1.Представление          = "Раздел 3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел30";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел41";
	СтрокаУровня1.Представление          = "Раздел 4.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел41";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел42";
	СтрокаУровня1.Представление          = "Раздел 4.2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел42";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел43";
	СтрокаУровня1.Представление          = "Раздел 4.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел43";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел44";
	СтрокаУровня1.Представление          = "Раздел 4.4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел44";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел50";
	СтрокаУровня1.Представление          = "Раздел 5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел50";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2012Кв1(ДеревоСтраницОтчета)

	ДеревоСтраницОтчета.Колонки.Добавить("Представление",            Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",              Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",   Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",            Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",         Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Титульный";
	СтрокаУровня1.Представление          = "Титульный лист";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаТитульный";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел1";
	СтрокаУровня1.Представление          = "Раздел 1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел1";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел2";
	СтрокаУровня1.Представление          = "Раздел 2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел2";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел31";
	СтрокаУровня1.Представление          = "Раздел 3.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел31";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел32";
	СтрокаУровня1.Представление          = "Раздел 3.2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел32";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел33";
	СтрокаУровня1.Представление          = "Раздел 3.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел33";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел34";
	СтрокаУровня1.Представление          = "Раздел 3.4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел34";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел35";
	СтрокаУровня1.Представление          = "Раздел 3.5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел35";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел36";
	СтрокаУровня1.Представление          = "Раздел 3.6";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел36";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел37";
	СтрокаУровня1.Представление          = "Раздел 3.7";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел37";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел38";
	СтрокаУровня1.Представление          = "Раздел 3.8";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел38";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел4";
	СтрокаУровня1.Представление          = "Раздел 4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел4";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел5";
	СтрокаУровня1.Представление          = "Раздел 5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел5";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2013Кв1(ДеревоСтраницОтчета)

	ДеревоСтраницОтчета.Колонки.Добавить("Представление",            Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",              Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",   Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",            Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",         Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Титульный";
	СтрокаУровня1.Представление          = "Титульный лист";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаТитульный";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел1";
	СтрокаУровня1.Представление          = "Раздел 1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел1";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел2";
	СтрокаУровня1.Представление          = "Раздел 2.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел2";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел22";
	СтрокаУровня1.Представление          = "Раздел 2.2-2.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел2";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел31";
	СтрокаУровня1.Представление          = "Раздел 3.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел31";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел32";
	СтрокаУровня1.Представление          = "Раздел 3.2-3.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел32";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел34";
	СтрокаУровня1.Представление          = "Раздел 3.4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел34";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел35";
	СтрокаУровня1.Представление          = "Раздел 3.5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел35";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел36";
	СтрокаУровня1.Представление          = "Раздел 3.6";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел36";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел37";
	СтрокаУровня1.Представление          = "Раздел 3.7";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел37";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел38";
	СтрокаУровня1.Представление          = "Раздел 3.8";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел38";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел4";
	СтрокаУровня1.Представление          = "Раздел 4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел4";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел5";
	СтрокаУровня1.Представление          = "Раздел 5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел5";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2014Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Титульный";
	СтрокаУровня1.Представление          = "Титульный лист";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаТитульный";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел1";
	СтрокаУровня1.Представление          = "Раздел 1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел1";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел21";
	СтрокаУровня1.Представление          = "Раздел 2.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел21";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел22";
	СтрокаУровня1.Представление          = "Раздел 2.2-2.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел22";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел24";
	СтрокаУровня1.Представление          = "Раздел 2.4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел24";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел25";
	СтрокаУровня1.Представление          = "Раздел 2.5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел25";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел31";
	СтрокаУровня1.Представление          = "Раздел 3.1-3.2";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел31";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел33";
	СтрокаУровня1.Представление          = "Раздел 3.3-3.4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел33";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел35";
	СтрокаУровня1.Представление          = "Раздел 3.5-3.6";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел35";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел4";
	СтрокаУровня1.Представление          = "Раздел 4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел4";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел5";
	СтрокаУровня1.Представление          = "Раздел 5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел5";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел6";
	СтрокаУровня1.Представление          = "Раздел 6";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел6";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2015Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Титульный";
	СтрокаУровня1.Представление          = "Титульный лист";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаТитульный";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел1";
	СтрокаУровня1.Представление          = "Раздел 1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел1";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел21";
	СтрокаУровня1.Представление          = "Раздел 2.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел21";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел22";
	СтрокаУровня1.Представление          = "Раздел 2.2-2.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел22";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел24";
	СтрокаУровня1.Представление          = "Раздел 2.4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел24";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел25";
	СтрокаУровня1.Представление          = "Раздел 2.5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел25";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел31";
	СтрокаУровня1.Представление          = "Раздел 3.1";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел31";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел32";
	СтрокаУровня1.Представление          = "Раздел 3.2-3.3";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел32";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел4";
	СтрокаУровня1.Представление          = "Раздел 4";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел4";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел5";
	СтрокаУровня1.Представление          = "Раздел 5";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел5";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы            = "Раздел6";
	СтрокаУровня1.Представление          = "Раздел 6";
	СтрокаУровня1.ИмяПоляТабличногоДокум = "ПолеТабличногоДокументаРаздел6";
	СтрокаУровня1.ОриентацияСтраницы     = ОриентацияСтраницы.Портрет;
	СтрокаУровня1.ВыводНаПечать          = 1;
	СтрокаУровня1.ПоказатьСтраницу       = 1;
	
КонецПроцедуры

Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2010Кв4(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "НомРег1" Тогда
			ПоказателиТаблПоле.Вставить("НомРег");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.НомРег = СокрЛП(ПоказателиТаблПоле.НомРег) + ПоказателиТаблПоле["НомРег" + Ном];
				ПоказателиТаблПоле.Удалить("НомРег" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомТФОМС1" Тогда
			ПоказателиТаблПоле.Вставить("НомТФОМС");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.НомТФОМС = СокрЛП(ПоказателиТаблПоле.НомТФОМС) + ПоказателиТаблПоле["НомТФОМС" + Ном];
				ПоказателиТаблПоле.Удалить("НомТФОМС" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ИНН1" Тогда
			ПоказателиТаблПоле.Вставить("ИНН");
			Для Ном = 1 По 12 Цикл
				ПоказателиТаблПоле.ИНН = СокрЛП(ПоказателиТаблПоле.ИНН) + ПоказателиТаблПоле["ИНН" + Ном];
				ПоказателиТаблПоле.Удалить("ИНН" + Ном);
			КонецЦикла;
			Если Лев(ПоказателиТаблПоле.ИНН, 2) = "00" Тогда
				ПоказателиТаблПоле.ИНН = Сред(ПоказателиТаблПоле.ИНН, 3);
			КонецЕсли;
		ИначеЕсли ИмяПоказателя = "КПП1" Тогда
			ПоказателиТаблПоле.Вставить("КПП");
			Для Ном = 1 По 9 Цикл
				ПоказателиТаблПоле.КПП = СокрЛП(ПоказателиТаблПоле.КПП) + ПоказателиТаблПоле["КПП" + Ном];
				ПоказателиТаблПоле.Удалить("КПП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОГРН1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРН");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРН = СокрЛП(ПоказателиТаблПоле.ОГРН) + ПоказателиТаблПоле["ОГРН" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРН" + Ном);
			КонецЦикла;		
		ИначеЕсли ИмяПоказателя = "ОГРНИП1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРНИП");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРНИП = СокрЛП(ПоказателиТаблПоле.ОГРНИП) + ПоказателиТаблПоле["ОГРНИП" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРНИП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ТелОрганизации1" Тогда
			ПоказателиТаблПоле.Вставить("ТелОрганизации");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ТелОрганизации = СокрЛП(ПоказателиТаблПоле.ТелОрганизации) + ПоказателиТаблПоле["ТелОрганизации" + Ном];
				ПоказателиТаблПоле.Удалить("ТелОрганизации" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКАТО1" Тогда
			ПоказателиТаблПоле.Вставить("ОКАТО");
			Для Ном = 1 По 11 Цикл
				ПоказателиТаблПоле.ОКАТО = СокрЛП(ПоказателиТаблПоле.ОКАТО) + ПоказателиТаблПоле["ОКАТО" + Ном];
				ПоказателиТаблПоле.Удалить("ОКАТО" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКВЭД1" Тогда
			ПоказателиТаблПоле.Вставить("ОКВЭД");
			Для Ном = 1 По 8 Цикл
				ПоказателиТаблПоле.ОКВЭД = СокрЛП(ПоказателиТаблПоле.ОКВЭД) + ПоказателиТаблПоле["ОКВЭД" + Ном];
				ПоказателиТаблПоле.Удалить("ОКВЭД" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКПО1" Тогда
			ПоказателиТаблПоле.Вставить("ОКПО");
			Для Ном = 1 По 10 Цикл
				ПоказателиТаблПоле.ОКПО = СокрЛП(ПоказателиТаблПоле.ОКПО) + ПоказателиТаблПоле["ОКПО" + Ном];
				ПоказателиТаблПоле.Удалить("ОКПО" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКОПФ1" Тогда
			ПоказателиТаблПоле.Вставить("ОКОПФ");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.ОКОПФ = СокрЛП(ПоказателиТаблПоле.ОКОПФ) + ПоказателиТаблПоле["ОКОПФ" + Ном];
				ПоказателиТаблПоле.Удалить("ОКОПФ" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКФС1" Тогда
			ПоказателиТаблПоле.Вставить("ОКФС");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.ОКФС = СокрЛП(ПоказателиТаблПоле.ОКФС) + ПоказателиТаблПоле["ОКФС" + Ном];
				ПоказателиТаблПоле.Удалить("ОКФС" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ПоказателиТаблПоле.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.НомерКорректировки = СокрЛП(ПоказателиТаблПоле.НомерКорректировки) + ПоказателиТаблПоле["НомерКорректировки" + Ном];
				ПоказателиТаблПоле.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;				
		ИначеЕсли ИмяПоказателя = "Период1" Тогда
			ПоказателиТаблПоле.Вставить("Период");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Период = СокрЛП(ПоказателиТаблПоле.Период) + ПоказателиТаблПоле["Период" + Ном];
				ПоказателиТаблПоле.Удалить("Период" + Ном);
			КонецЦикла;					
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ПоказателиТаблПоле.Вставить("ОтчетГод");
			Для Ном = 1 По 4 Цикл
				ПоказателиТаблПоле.ОтчетГод = СокрЛП(ПоказателиТаблПоле.ОтчетГод) + ПоказателиТаблПоле["ОтчетГод" + Ном];
				ПоказателиТаблПоле.Удалить("ОтчетГод" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "КолЗастрахованных1" Тогда
			ПоказателиТаблПоле.Вставить("КолЗастрахованных");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.КолЗастрахованных = СокрЛП(ПоказателиТаблПоле.КолЗастрахованных) + ПоказателиТаблПоле["КолЗастрахованных" + Ном];
				ПоказателиТаблПоле.Удалить("КолЗастрахованных" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "СрСписЧисл1" Тогда
			ПоказателиТаблПоле.Вставить("СрСписЧисл");
			Для Ном = 1 По 5 Цикл
				ПоказателиТаблПоле.СрСписЧисл = СокрЛП(ПоказателиТаблПоле.СрСписЧисл) + ПоказателиТаблПоле["СрСписЧисл" + Ном];
				ПоказателиТаблПоле.Удалить("СрСписЧисл" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Тариф1" Тогда
			ПоказателиТаблПоле.Вставить("Тариф");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Тариф = СокрЛП(ПоказателиТаблПоле.Тариф) + ПоказателиТаблПоле["Тариф" + Ном];
				ПоказателиТаблПоле.Удалить("Тариф" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ПоказателиТаблПоле.Вставить("Прил");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Прил = СокрЛП(ПоказателиТаблПоле.Прил) + ПоказателиТаблПоле["Прил" + Ном];
				ПоказателиТаблПоле.Удалить("Прил" + Ном);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2011Кв1(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "НомРег1" Тогда
			ПоказателиТаблПоле.Вставить("НомРег");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.НомРег = СокрЛП(ПоказателиТаблПоле.НомРег) + ПоказателиТаблПоле["НомРег" + Ном];
				ПоказателиТаблПоле.Удалить("НомРег" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомТФОМС1" Тогда
			ПоказателиТаблПоле.Вставить("НомТФОМС");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.НомТФОМС = СокрЛП(ПоказателиТаблПоле.НомТФОМС) + ПоказателиТаблПоле["НомТФОМС" + Ном];
				ПоказателиТаблПоле.Удалить("НомТФОМС" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ИНН1" Тогда
			ПоказателиТаблПоле.Вставить("ИНН");
			Для Ном = 1 По 12 Цикл
				ПоказателиТаблПоле.ИНН = СокрЛП(ПоказателиТаблПоле.ИНН) + ПоказателиТаблПоле["ИНН" + Ном];
				ПоказателиТаблПоле.Удалить("ИНН" + Ном);
			КонецЦикла;
			Если Лев(ПоказателиТаблПоле.ИНН, 2) = "00" Тогда
				ПоказателиТаблПоле.ИНН = Сред(ПоказателиТаблПоле.ИНН, 3);
			КонецЕсли;
		ИначеЕсли ИмяПоказателя = "КПП1" Тогда
			ПоказателиТаблПоле.Вставить("КПП");
			Для Ном = 1 По 9 Цикл
				ПоказателиТаблПоле.КПП = СокрЛП(ПоказателиТаблПоле.КПП) + ПоказателиТаблПоле["КПП" + Ном];
				ПоказателиТаблПоле.Удалить("КПП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОГРН1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРН");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРН = СокрЛП(ПоказателиТаблПоле.ОГРН) + ПоказателиТаблПоле["ОГРН" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРН" + Ном);
			КонецЦикла;		
		ИначеЕсли ИмяПоказателя = "ОГРНИП1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРНИП");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРНИП = СокрЛП(ПоказателиТаблПоле.ОГРНИП) + ПоказателиТаблПоле["ОГРНИП" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРНИП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ТелОрганизации1" Тогда
			ПоказателиТаблПоле.Вставить("ТелОрганизации");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ТелОрганизации = СокрЛП(ПоказателиТаблПоле.ТелОрганизации) + ПоказателиТаблПоле["ТелОрганизации" + Ном];
				ПоказателиТаблПоле.Удалить("ТелОрганизации" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКАТО1" Тогда
			ПоказателиТаблПоле.Вставить("ОКАТО");
			Для Ном = 1 По 11 Цикл
				ПоказателиТаблПоле.ОКАТО = СокрЛП(ПоказателиТаблПоле.ОКАТО) + ПоказателиТаблПоле["ОКАТО" + Ном];
				ПоказателиТаблПоле.Удалить("ОКАТО" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКВЭД1" Тогда
			ПоказателиТаблПоле.Вставить("ОКВЭД");
			Для Ном = 1 По 8 Цикл
				ПоказателиТаблПоле.ОКВЭД = СокрЛП(ПоказателиТаблПоле.ОКВЭД) + ПоказателиТаблПоле["ОКВЭД" + Ном];
				ПоказателиТаблПоле.Удалить("ОКВЭД" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКПО1" Тогда
			ПоказателиТаблПоле.Вставить("ОКПО");
			Для Ном = 1 По 10 Цикл
				ПоказателиТаблПоле.ОКПО = СокрЛП(ПоказателиТаблПоле.ОКПО) + ПоказателиТаблПоле["ОКПО" + Ном];
				ПоказателиТаблПоле.Удалить("ОКПО" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКОПФ1" Тогда
			ПоказателиТаблПоле.Вставить("ОКОПФ");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.ОКОПФ = СокрЛП(ПоказателиТаблПоле.ОКОПФ) + ПоказателиТаблПоле["ОКОПФ" + Ном];
				ПоказателиТаблПоле.Удалить("ОКОПФ" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКФС1" Тогда
			ПоказателиТаблПоле.Вставить("ОКФС");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.ОКФС = СокрЛП(ПоказателиТаблПоле.ОКФС) + ПоказателиТаблПоле["ОКФС" + Ном];
				ПоказателиТаблПоле.Удалить("ОКФС" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ПоказателиТаблПоле.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.НомерКорректировки = СокрЛП(ПоказателиТаблПоле.НомерКорректировки) + ПоказателиТаблПоле["НомерКорректировки" + Ном];
				ПоказателиТаблПоле.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;				
		ИначеЕсли ИмяПоказателя = "Период1" Тогда
			ПоказателиТаблПоле.Вставить("Период");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Период = СокрЛП(ПоказателиТаблПоле.Период) + ПоказателиТаблПоле["Период" + Ном];
				ПоказателиТаблПоле.Удалить("Период" + Ном);
			КонецЦикла;					
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ПоказателиТаблПоле.Вставить("ОтчетГод");
			Для Ном = 1 По 4 Цикл
				ПоказателиТаблПоле.ОтчетГод = СокрЛП(ПоказателиТаблПоле.ОтчетГод) + ПоказателиТаблПоле["ОтчетГод" + Ном];
				ПоказателиТаблПоле.Удалить("ОтчетГод" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "КолЗастрахованных1" Тогда
			ПоказателиТаблПоле.Вставить("КолЗастрахованных");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.КолЗастрахованных = СокрЛП(ПоказателиТаблПоле.КолЗастрахованных) + ПоказателиТаблПоле["КолЗастрахованных" + Ном];
				ПоказателиТаблПоле.Удалить("КолЗастрахованных" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "СрСписЧисл1" Тогда
			ПоказателиТаблПоле.Вставить("СрСписЧисл");
			Для Ном = 1 По 5 Цикл
				ПоказателиТаблПоле.СрСписЧисл = СокрЛП(ПоказателиТаблПоле.СрСписЧисл) + ПоказателиТаблПоле["СрСписЧисл" + Ном];
				ПоказателиТаблПоле.Удалить("СрСписЧисл" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Тариф1" Тогда
			ПоказателиТаблПоле.Вставить("Тариф");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Тариф = СокрЛП(ПоказателиТаблПоле.Тариф) + ПоказателиТаблПоле["Тариф" + Ном];
				ПоказателиТаблПоле.Удалить("Тариф" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ПоказателиТаблПоле.Вставить("Прил");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Прил = СокрЛП(ПоказателиТаблПоле.Прил) + ПоказателиТаблПоле["Прил" + Ном];
				ПоказателиТаблПоле.Удалить("Прил" + Ном);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2012Кв1(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "НомРег1" Тогда
			ПоказателиТаблПоле.Вставить("НомРег");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.НомРег = СокрЛП(ПоказателиТаблПоле.НомРег) + ПоказателиТаблПоле["НомРег" + Ном];
				ПоказателиТаблПоле.Удалить("НомРег" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ИНН1" Тогда
			ПоказателиТаблПоле.Вставить("ИНН");
			Для Ном = 1 По 12 Цикл
				ПоказателиТаблПоле.ИНН = СокрЛП(ПоказателиТаблПоле.ИНН) + ПоказателиТаблПоле["ИНН" + Ном];
				ПоказателиТаблПоле.Удалить("ИНН" + Ном);
			КонецЦикла;
			Если Лев(ПоказателиТаблПоле.ИНН, 2) = "00" Тогда
				ПоказателиТаблПоле.ИНН = Сред(ПоказателиТаблПоле.ИНН, 3);
			КонецЕсли;
		ИначеЕсли ИмяПоказателя = "КПП1" Тогда
			ПоказателиТаблПоле.Вставить("КПП");
			Для Ном = 1 По 9 Цикл
				ПоказателиТаблПоле.КПП = СокрЛП(ПоказателиТаблПоле.КПП) + ПоказателиТаблПоле["КПП" + Ном];
				ПоказателиТаблПоле.Удалить("КПП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОГРН1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРН");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРН = СокрЛП(ПоказателиТаблПоле.ОГРН) + ПоказателиТаблПоле["ОГРН" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРН" + Ном);
			КонецЦикла;		
		ИначеЕсли ИмяПоказателя = "ОГРНИП1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРНИП");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРНИП = СокрЛП(ПоказателиТаблПоле.ОГРНИП) + ПоказателиТаблПоле["ОГРНИП" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРНИП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ТелОрганизации1" Тогда
			ПоказателиТаблПоле.Вставить("ТелОрганизации");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.ТелОрганизации = СокрЛП(ПоказателиТаблПоле.ТелОрганизации) + ПоказателиТаблПоле["ТелОрганизации" + Ном];
				ПоказателиТаблПоле.Удалить("ТелОрганизации" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКАТО1" Тогда
			ПоказателиТаблПоле.Вставить("ОКАТО");
			Для Ном = 1 По 11 Цикл
				ПоказателиТаблПоле.ОКАТО = СокрЛП(ПоказателиТаблПоле.ОКАТО) + ПоказателиТаблПоле["ОКАТО" + Ном];
				ПоказателиТаблПоле.Удалить("ОКАТО" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКВЭД1" Тогда
			ПоказателиТаблПоле.Вставить("ОКВЭД");
			Для Ном = 1 По 8 Цикл
				ПоказателиТаблПоле.ОКВЭД = СокрЛП(ПоказателиТаблПоле.ОКВЭД) + ПоказателиТаблПоле["ОКВЭД" + Ном];
				ПоказателиТаблПоле.Удалить("ОКВЭД" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ПоказателиТаблПоле.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.НомерКорректировки = СокрЛП(ПоказателиТаблПоле.НомерКорректировки) + ПоказателиТаблПоле["НомерКорректировки" + Ном];
				ПоказателиТаблПоле.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;				
		ИначеЕсли ИмяПоказателя = "Период1" Тогда
			ПоказателиТаблПоле.Вставить("Период");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Период = СокрЛП(ПоказателиТаблПоле.Период) + ПоказателиТаблПоле["Период" + Ном];
				ПоказателиТаблПоле.Удалить("Период" + Ном);
			КонецЦикла;					
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ПоказателиТаблПоле.Вставить("ОтчетГод");
			Для Ном = 1 По 4 Цикл
				ПоказателиТаблПоле.ОтчетГод = СокрЛП(ПоказателиТаблПоле.ОтчетГод) + ПоказателиТаблПоле["ОтчетГод" + Ном];
				ПоказателиТаблПоле.Удалить("ОтчетГод" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "КолЗастрахованных1" Тогда
			ПоказателиТаблПоле.Вставить("КолЗастрахованных");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.КолЗастрахованных = СокрЛП(ПоказателиТаблПоле.КолЗастрахованных) + ПоказателиТаблПоле["КолЗастрахованных" + Ном];
				ПоказателиТаблПоле.Удалить("КолЗастрахованных" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "СрСписЧисл1" Тогда
			ПоказателиТаблПоле.Вставить("СрСписЧисл");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.СрСписЧисл = СокрЛП(ПоказателиТаблПоле.СрСписЧисл) + ПоказателиТаблПоле["СрСписЧисл" + Ном];
				ПоказателиТаблПоле.Удалить("СрСписЧисл" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ПоказателиТаблПоле.Вставить("Прил");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.Прил = СокрЛП(ПоказателиТаблПоле.Прил) + ПоказателиТаблПоле["Прил" + Ном];
				ПоказателиТаблПоле.Удалить("Прил" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "СоставленаНа1" Тогда
			ПоказателиТаблПоле.Вставить("СоставленаНа");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.СоставленаНа = СокрЛП(ПоказателиТаблПоле.СоставленаНа) + ПоказателиТаблПоле["СоставленаНа" + Ном];
				ПоказателиТаблПоле.Удалить("СоставленаНа" + Ном);
			КонецЦикла;	
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2013Кв1(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "НомРег1" Тогда
			ПоказателиТаблПоле.Вставить("НомРег");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.НомРег = СокрЛП(ПоказателиТаблПоле.НомРег) + ПоказателиТаблПоле["НомРег" + Ном];
				ПоказателиТаблПоле.Удалить("НомРег" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ИНН1" Тогда
			ПоказателиТаблПоле.Вставить("ИНН");
			Для Ном = 1 По 12 Цикл
				ПоказателиТаблПоле.ИНН = СокрЛП(ПоказателиТаблПоле.ИНН) + ПоказателиТаблПоле["ИНН" + Ном];
				ПоказателиТаблПоле.Удалить("ИНН" + Ном);
			КонецЦикла;
			Если Лев(ПоказателиТаблПоле.ИНН, 2) = "00" Тогда
				ПоказателиТаблПоле.ИНН = Сред(ПоказателиТаблПоле.ИНН, 3);
			КонецЕсли;
		ИначеЕсли ИмяПоказателя = "КПП1" Тогда
			ПоказателиТаблПоле.Вставить("КПП");
			Для Ном = 1 По 9 Цикл
				ПоказателиТаблПоле.КПП = СокрЛП(ПоказателиТаблПоле.КПП) + ПоказателиТаблПоле["КПП" + Ном];
				ПоказателиТаблПоле.Удалить("КПП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОГРН1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРН");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРН = СокрЛП(ПоказателиТаблПоле.ОГРН) + ПоказателиТаблПоле["ОГРН" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРН" + Ном);
			КонецЦикла;		
		ИначеЕсли ИмяПоказателя = "ОГРНИП1" Тогда
			ПоказателиТаблПоле.Вставить("ОГРНИП");
			Для Ном = 1 По 15 Цикл
				ПоказателиТаблПоле.ОГРНИП = СокрЛП(ПоказателиТаблПоле.ОГРНИП) + ПоказателиТаблПоле["ОГРНИП" + Ном];
				ПоказателиТаблПоле.Удалить("ОГРНИП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ТелОрганизации1" Тогда
			ПоказателиТаблПоле.Вставить("ТелОрганизации");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.ТелОрганизации = СокрЛП(ПоказателиТаблПоле.ТелОрганизации) + ПоказателиТаблПоле["ТелОрганизации" + Ном];
				ПоказателиТаблПоле.Удалить("ТелОрганизации" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКАТО1" Тогда
			ПоказателиТаблПоле.Вставить("ОКАТО");
			Для Ном = 1 По 11 Цикл
				ПоказателиТаблПоле.ОКАТО = СокрЛП(ПоказателиТаблПоле.ОКАТО) + ПоказателиТаблПоле["ОКАТО" + Ном];
				ПоказателиТаблПоле.Удалить("ОКАТО" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "ОКВЭД1" Тогда
			ПоказателиТаблПоле.Вставить("ОКВЭД");
			Для Ном = 1 По 8 Цикл
				ПоказателиТаблПоле.ОКВЭД = СокрЛП(ПоказателиТаблПоле.ОКВЭД) + ПоказателиТаблПоле["ОКВЭД" + Ном];
				ПоказателиТаблПоле.Удалить("ОКВЭД" + Ном);
			КонецЦикла;			
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ПоказателиТаблПоле.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.НомерКорректировки = СокрЛП(ПоказателиТаблПоле.НомерКорректировки) + ПоказателиТаблПоле["НомерКорректировки" + Ном];
				ПоказателиТаблПоле.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;				
		ИначеЕсли ИмяПоказателя = "Период1" Тогда
			ПоказателиТаблПоле.Вставить("Период");
			Для Ном = 1 По 2 Цикл
				ПоказателиТаблПоле.Период = СокрЛП(ПоказателиТаблПоле.Период) + ПоказателиТаблПоле["Период" + Ном];
				ПоказателиТаблПоле.Удалить("Период" + Ном);
			КонецЦикла;					
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ПоказателиТаблПоле.Вставить("ОтчетГод");
			Для Ном = 1 По 4 Цикл
				ПоказателиТаблПоле.ОтчетГод = СокрЛП(ПоказателиТаблПоле.ОтчетГод) + ПоказателиТаблПоле["ОтчетГод" + Ном];
				ПоказателиТаблПоле.Удалить("ОтчетГод" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "КолЗастрахованных1" Тогда
			ПоказателиТаблПоле.Вставить("КолЗастрахованных");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.КолЗастрахованных = СокрЛП(ПоказателиТаблПоле.КолЗастрахованных) + ПоказателиТаблПоле["КолЗастрахованных" + Ном];
				ПоказателиТаблПоле.Удалить("КолЗастрахованных" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "СрСписЧисл1" Тогда
			ПоказателиТаблПоле.Вставить("СрСписЧисл");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.СрСписЧисл = СокрЛП(ПоказателиТаблПоле.СрСписЧисл) + ПоказателиТаблПоле["СрСписЧисл" + Ном];
				ПоказателиТаблПоле.Удалить("СрСписЧисл" + Ном);
			КонецЦикла;						
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ПоказателиТаблПоле.Вставить("Прил");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.Прил = СокрЛП(ПоказателиТаблПоле.Прил) + ПоказателиТаблПоле["Прил" + Ном];
				ПоказателиТаблПоле.Удалить("Прил" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "СоставленаНа1" Тогда
			ПоказателиТаблПоле.Вставить("СоставленаНа");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.СоставленаНа = СокрЛП(ПоказателиТаблПоле.СоставленаНа) + ПоказателиТаблПоле["СоставленаНа" + Ном];
				ПоказателиТаблПоле.Удалить("СоставленаНа" + Ном);
			КонецЦикла;	
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2014Кв1(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "НомРег1" Тогда
			ПоказателиТаблПоле.Вставить("НомРег");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.НомРег = СокрЛП(ПоказателиТаблПоле.НомРег)
					+ ПоказателиТаблПоле["НомРег" + Ном];
				ПоказателиТаблПоле.Удалить("НомРег" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ИНН1" Тогда
			ПоказателиТаблПоле.Вставить("ИНН");
			Для Ном = 1 По 12 Цикл
				ПоказателиТаблПоле.ИНН = СокрЛП(ПоказателиТаблПоле.ИНН)
					+ ПоказателиТаблПоле["ИНН" + Ном];
				ПоказателиТаблПоле.Удалить("ИНН" + Ном);
			КонецЦикла;
			Если Лев(ПоказателиТаблПоле.ИНН, 2) = "00" Тогда
				ПоказателиТаблПоле.ИНН = Сред(ПоказателиТаблПоле.ИНН, 3);
			КонецЕсли;
		ИначеЕсли ИмяПоказателя = "КПП1" Тогда
			ПоказателиТаблПоле.Вставить("КПП");
			Для Ном = 1 По 9 Цикл
				ПоказателиТаблПоле.КПП = СокрЛП(ПоказателиТаблПоле.КПП)
					+ ПоказателиТаблПоле["КПП" + Ном];
				ПоказателиТаблПоле.Удалить("КПП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ТелОрганизации1" Тогда
			ПоказателиТаблПоле.Вставить("ТелОрганизации");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.ТелОрганизации = СокрЛП(ПоказателиТаблПоле.ТелОрганизации)
					+ ПоказателиТаблПоле["ТелОрганизации" + Ном];
				ПоказателиТаблПоле.Удалить("ТелОрганизации" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКВЭД1" Тогда
			ПоказателиТаблПоле.Вставить("ОКВЭД");
			Для Ном = 1 По 8 Цикл
				ПоказателиТаблПоле.ОКВЭД = СокрЛП(ПоказателиТаблПоле.ОКВЭД)
					+ ПоказателиТаблПоле["ОКВЭД" + Ном];
				ПоказателиТаблПоле.Удалить("ОКВЭД" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ПоказателиТаблПоле.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.НомерКорректировки = СокрЛП(ПоказателиТаблПоле.НомерКорректировки)
					+ ПоказателиТаблПоле["НомерКорректировки" + Ном];
				ПоказателиТаблПоле.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ПоказателиТаблПоле.Вставить("ОтчетГод");
			Для Ном = 1 По 4 Цикл
				ПоказателиТаблПоле.ОтчетГод = СокрЛП(ПоказателиТаблПоле.ОтчетГод)
					+ ПоказателиТаблПоле["ОтчетГод" + Ном];
				ПоказателиТаблПоле.Удалить("ОтчетГод" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "КолЗастрахованных1" Тогда
			ПоказателиТаблПоле.Вставить("КолЗастрахованных");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.КолЗастрахованных = СокрЛП(ПоказателиТаблПоле.КолЗастрахованных)
					+ ПоказателиТаблПоле["КолЗастрахованных" + Ном];
				ПоказателиТаблПоле.Удалить("КолЗастрахованных" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "СрСписЧисл1" Тогда
			ПоказателиТаблПоле.Вставить("СрСписЧисл");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.СрСписЧисл = СокрЛП(ПоказателиТаблПоле.СрСписЧисл)
					+ ПоказателиТаблПоле["СрСписЧисл" + Ном];
				ПоказателиТаблПоле.Удалить("СрСписЧисл" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ПоказателиТаблПоле.Вставить("Прил");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.Прил = СокрЛП(ПоказателиТаблПоле.Прил)
					+ ПоказателиТаблПоле["Прил" + Ном];
				ПоказателиТаблПоле.Удалить("Прил" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "СоставленаНа1" Тогда
			ПоказателиТаблПоле.Вставить("СоставленаНа");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.СоставленаНа = СокрЛП(ПоказателиТаблПоле.СоставленаНа)
					+ ПоказателиТаблПоле["СоставленаНа" + Ном];
				ПоказателиТаблПоле.Удалить("СоставленаНа" + Ном);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2015Кв1(ПоказателиОтчета)
	
	ПоказателиТаблПоле = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого Показатель Из ПоказателиТаблПоле Цикл
		
		ИмяПоказателя = Показатель.Ключ;
		
		Если ИмяПоказателя = "НомРег1" Тогда
			ПоказателиТаблПоле.Вставить("НомРег");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.НомРег = СокрЛП(ПоказателиТаблПоле.НомРег)
					+ ПоказателиТаблПоле["НомРег" + Ном];
				ПоказателиТаблПоле.Удалить("НомРег" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ИНН1" Тогда
			ПоказателиТаблПоле.Вставить("ИНН");
			Для Ном = 1 По 12 Цикл
				ПоказателиТаблПоле.ИНН = СокрЛП(ПоказателиТаблПоле.ИНН)
					+ ПоказателиТаблПоле["ИНН" + Ном];
				ПоказателиТаблПоле.Удалить("ИНН" + Ном);
			КонецЦикла;
			Если Лев(ПоказателиТаблПоле.ИНН, 2) = "00" Тогда
				ПоказателиТаблПоле.ИНН = Сред(ПоказателиТаблПоле.ИНН, 3);
			КонецЕсли;
		ИначеЕсли ИмяПоказателя = "КПП1" Тогда
			ПоказателиТаблПоле.Вставить("КПП");
			Для Ном = 1 По 9 Цикл
				ПоказателиТаблПоле.КПП = СокрЛП(ПоказателиТаблПоле.КПП)
					+ ПоказателиТаблПоле["КПП" + Ном];
				ПоказателиТаблПоле.Удалить("КПП" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ТелОрганизации1" Тогда
			ПоказателиТаблПоле.Вставить("ТелОрганизации");
			Для Ном = 1 По 14 Цикл
				ПоказателиТаблПоле.ТелОрганизации = СокрЛП(ПоказателиТаблПоле.ТелОрганизации)
					+ ПоказателиТаблПоле["ТелОрганизации" + Ном];
				ПоказателиТаблПоле.Удалить("ТелОрганизации" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОКВЭД1" Тогда
			ПоказателиТаблПоле.Вставить("ОКВЭД");
			Для Ном = 1 По 8 Цикл
				ПоказателиТаблПоле.ОКВЭД = СокрЛП(ПоказателиТаблПоле.ОКВЭД)
					+ ПоказателиТаблПоле["ОКВЭД" + Ном];
				ПоказателиТаблПоле.Удалить("ОКВЭД" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ПоказателиТаблПоле.Вставить("НомерКорректировки");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.НомерКорректировки = СокрЛП(ПоказателиТаблПоле.НомерКорректировки)
					+ ПоказателиТаблПоле["НомерКорректировки" + Ном];
				ПоказателиТаблПоле.Удалить("НомерКорректировки" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ПоказателиТаблПоле.Вставить("ОтчетГод");
			Для Ном = 1 По 4 Цикл
				ПоказателиТаблПоле.ОтчетГод = СокрЛП(ПоказателиТаблПоле.ОтчетГод)
					+ ПоказателиТаблПоле["ОтчетГод" + Ном];
				ПоказателиТаблПоле.Удалить("ОтчетГод" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "КолЗастрахованных1" Тогда
			ПоказателиТаблПоле.Вставить("КолЗастрахованных");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.КолЗастрахованных = СокрЛП(ПоказателиТаблПоле.КолЗастрахованных)
					+ ПоказателиТаблПоле["КолЗастрахованных" + Ном];
				ПоказателиТаблПоле.Удалить("КолЗастрахованных" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "СрСписЧисл1" Тогда
			ПоказателиТаблПоле.Вставить("СрСписЧисл");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.СрСписЧисл = СокрЛП(ПоказателиТаблПоле.СрСписЧисл)
					+ ПоказателиТаблПоле["СрСписЧисл" + Ном];
				ПоказателиТаблПоле.Удалить("СрСписЧисл" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ПоказателиТаблПоле.Вставить("Прил");
			Для Ном = 1 По 3 Цикл
				ПоказателиТаблПоле.Прил = СокрЛП(ПоказателиТаблПоле.Прил)
					+ ПоказателиТаблПоле["Прил" + Ном];
				ПоказателиТаблПоле.Удалить("Прил" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "СоставленаНа1" Тогда
			ПоказателиТаблПоле.Вставить("СоставленаНа");
			Для Ном = 1 По 6 Цикл
				ПоказателиТаблПоле.СоставленаНа = СокрЛП(ПоказателиТаблПоле.СоставленаНа)
					+ ПоказателиТаблПоле["СоставленаНа" + Ном];
				ПоказателиТаблПоле.Удалить("СоставленаНа" + Ном);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КонвертироватьДанныеРаздела12СтарогоОбразцаРСВ1ФормаОтчета2010Кв4(ДанныеРеглОтчета)
	
	Для Каждого СтраницаРаздела12 Из ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел12 Цикл
		
		Если СтраницаРаздела12.Данные.Свойство("П000200001001_1") Тогда
			
			СтраницаРаздела12.Данные.Вставить("П000200001001", СокрЛП(СтраницаРаздела12.Данные.П000200001001_1
				+ СтраницаРаздела12.Данные.П000200001001_2));
				
			Для Ном = 1 По 2 Цикл
				СтраницаРаздела12.Данные.Удалить("П000200001001_" + Ном);
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЦикла;
		
КонецПроцедуры

Процедура КонвертироватьДанныеРаздела12СтарогоОбразцаРСВ1ФормаОтчета2011Кв1(ДанныеРеглОтчета)
	
	Для Каждого СтраницаРаздела12 Из ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел12 Цикл
		
		Если СтраницаРаздела12.Данные.Свойство("П000200001001_1") Тогда
			
			СтраницаРаздела12.Данные.Вставить("П000200001001", СокрЛП(СтраницаРаздела12.Данные.П000200001001_1
				+ СтраницаРаздела12.Данные.П000200001001_2));
				
			Для Ном = 1 По 2 Цикл
				СтраницаРаздела12.Данные.Удалить("П000200001001_" + Ном);
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЦикла;
		
КонецПроцедуры

Процедура КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2012Кв1(ДанныеРеглОтчета)
	
	Для Каждого СтраницаРаздела2 Из ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел2 Цикл
		
		Если СтраницаРаздела2.Данные.Свойство("П000200001002") Тогда
			
			СтраницаРаздела2.Данные.Вставить("П000200001001", СокрЛП(СтраницаРаздела2.Данные.П000200001001 + СтраницаРаздела2.Данные.П000200001002));

			СтраницаРаздела2.Данные.Удалить("П000200001002");
			
		КонецЕсли;
			
	КонецЦикла;
		
КонецПроцедуры

Процедура КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2013Кв1(ДанныеРеглОтчета)
	
	Для Каждого СтраницаРаздела2 Из ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел2 Цикл
		
		Если СтраницаРаздела2.Данные.Свойство("П000200001002") Тогда
			
			СтраницаРаздела2.Данные.Вставить("П000200001001", СокрЛП(СтраницаРаздела2.Данные.П000200001001 + СтраницаРаздела2.Данные.П000200001002));

			СтраницаРаздела2.Данные.Удалить("П000200001002");
			
		КонецЕсли;
			
	КонецЦикла;
		
КонецПроцедуры

Процедура КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2014Кв1(ДанныеРеглОтчета)
	
	Для Каждого СтраницаРаздела21 Из ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел21 Цикл
		
		Если СтраницаРаздела21.Данные.Свойство("П000210001002") Тогда
			
			СтраницаРаздела21.Данные.Вставить("П000210001001",
				СокрЛП(СтраницаРаздела21.Данные.П000210001001
					 + СтраницаРаздела21.Данные.П000210001002));
			
			СтраницаРаздела21.Данные.Удалить("П000210001002");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2015Кв1(ДанныеРеглОтчета)
	
	Для Каждого СтраницаРаздела21 Из ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел21 Цикл
		
		Если СтраницаРаздела21.Данные.Свойство("П000210001002") Тогда
			
			СтраницаРаздела21.Данные.Вставить("П000210001001",
				СокрЛП(СтраницаРаздела21.Данные.П000210001001
					 + СтраницаРаздела21.Данные.П000210001002));
			
			СтраницаРаздела21.Данные.Удалить("П000210001002");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел41", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001001", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001002", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001003", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001004", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001005", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001006", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001007", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001008", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел12", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел12 = ДанныеДопСтраниц.Раздел12.Добавить();
	ДопСтраницаРаздел12.Представление = "Лист N 1";
	ДопСтраницаРаздел12.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел12.АвтоматическоеПредставление = Истина;
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел12",   Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел12));
	РазделыОтчета.Вставить("Раздел30",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел41",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел41, "П0004100010"));
	РазделыОтчета.Вставить("Раздел42",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел43",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел50",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, СтруктураРеквизитовОтчета());
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = "000";
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ЗаполнитьНачальныеНастройки(ИсточникОтчета, ИмяФормыОтчета, "СоставПоказателей2010Кв4", СтруктураВариантыЗаполнения);
	
	СтруктураДокУпПред = Новый Структура;
	СтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
	СтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
	СтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("ДатаВыдачи", "");
	СтруктураДокУпПред.Вставить("КемВыдан", " ");
	
	НаименованияЭлементовАдреса = Новый Структура;
	НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
	НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
	НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2010Кв4(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", 1);
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("НомерПачки", 0);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "24/01/2011");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СтруктураДокУпПред);
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", Ложь);
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", НаименованияЭлементовАдреса);
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ЗаписатьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел41", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001001", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001002", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001003", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001004", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001005", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001006", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001007", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Колонки.Добавить("П000410001008", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел41.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел12", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел12.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел12 = ДанныеДопСтраниц.Раздел12.Добавить();
	ДопСтраницаРаздел12.Представление = "Лист N 1";
	ДопСтраницаРаздел12.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел12.АвтоматическоеПредставление = Истина;
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел12",   Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел12));
	РазделыОтчета.Вставить("Раздел30",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел41",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел41, "П0004100010"));
	РазделыОтчета.Вставить("Раздел42",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел43",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел44",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел50",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, СтруктураРеквизитовОтчета());
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = "000";
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ЗаполнитьНачальныеНастройки(ИсточникОтчета, ИмяФормыОтчета, "СоставПоказателей2011Кв1", СтруктураВариантыЗаполнения);
	
	СтруктураДокУпПред = Новый Структура;
	СтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
	СтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
	СтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("ДатаВыдачи", "");
	СтруктураДокУпПред.Вставить("КемВыдан", " ");
	
	НаименованияЭлементовАдреса = Новый Структура;
	НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
	НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
	НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2011Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", 1);
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("НомерПачки", 0);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "24/01/2011");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СтруктураДокУпПред);
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", Ложь);
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", НаименованияЭлементовАдреса);
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ЗаписатьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел31", Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел35", Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел4",  Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел5",  Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001001", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001002", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001003", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001004", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001005", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001006", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001007", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310001008", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Добавить();
	
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000101", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000121", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000122", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000103", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000104", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(8, 5)));
	ДанныеДопСтрок.Раздел35.Добавить();
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000101", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000102", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000103", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000104", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000105", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000106", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000110", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000120", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000131", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000132", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000141", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000142", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000150", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000160", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000170", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000180", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Лист N 1";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел1",   Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел2",   Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	РазделыОтчета.Вставить("Раздел31",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел31, "П0003100010"));
	РазделыОтчета.Вставить("Раздел32",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел33",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел34",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел35",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел35, "П0003500001"));
	РазделыОтчета.Вставить("Раздел36",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел37",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел38",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел4",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел4, "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел5, "П0005000001"));
			
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = "000";
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ЗаполнитьНачальныеНастройки(ИсточникОтчета, ИмяФормыОтчета, "СоставПоказателей2012Кв1", СтруктураВариантыЗаполнения);
	
	СтруктураДокУпПред = Новый Структура;
	СтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
	СтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
	СтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("ДатаВыдачи", "");
	СтруктураДокУпПред.Вставить("КемВыдан", " ");
	
	НаименованияЭлементовАдреса = Новый Структура;
	НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
	НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
	НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2012Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", 1);
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("НомерПачки", 0);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "10/05/2012");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СтруктураДокУпПред);
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", Ложь);
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", НаименованияЭлементовАдреса);
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ЗаписатьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел31", Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел35", Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел4",  Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел5",  Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000101", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000102", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000131", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000132", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000133", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000134", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000135", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000141", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000142", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000143", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000144", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000145", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000105", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000106", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000107", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Колонки.Добавить("П000310000108", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел31.Добавить();
	
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000101", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000121", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000122", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000103", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел35.Колонки.Добавить("П000350000104", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(8, 5)));
	ДанныеДопСтрок.Раздел35.Добавить();
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000101", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000102", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(1)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000103", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000104", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000105", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000106", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000107", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2))); 
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000108", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000109", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000110", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000110", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000120", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000131", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000132", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000141", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000142", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000150", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000160", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000170", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000180", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Лист N 1";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел1",   Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел2",   Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	РазделыОтчета.Вставить("Раздел22",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел31",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел31, "П0003100001"));
	РазделыОтчета.Вставить("Раздел32",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел34",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел35",  Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел35, "П0003500001"));
	РазделыОтчета.Вставить("Раздел36",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел37",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел38",  Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел4",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел4, "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",   Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок", Ложь, Новый Структура, ДанныеДопСтрок.Раздел5, "П0005000001"));
			
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = "000";
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ЗаполнитьНачальныеНастройки(ИсточникОтчета, ИмяФормыОтчета, "СоставПоказателей2013Кв1", СтруктураВариантыЗаполнения);
	
	СтруктураДокУпПред = Новый Структура;
	СтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("СерияРимскиеЦифры", " ");
	СтруктураДокУпПред.Вставить("СерияРусскиеБуквы", " ");
	СтруктураДокУпПред.Вставить("НомерУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("ДатаВыдачи", "");
	СтруктураДокУпПред.Вставить("КемВыдан", " ");
	
	НаименованияЭлементовАдреса = Новый Структура;
	НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
	НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
	НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2013Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", 1);
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("НомерПачки", 0);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/03/2013");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СтруктураДокУпПред);
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", Ложь);
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", НаименованияЭлементовАдреса);
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ЗаписатьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел33", Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел4",  Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел5",  Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел33.Колонки.Добавить("П000350000101",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел33.Колонки.Добавить("П000350000121",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел33.Колонки.Добавить("П000350000122",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел33.Колонки.Добавить("П000350000103",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел33.Колонки.Добавить("П000350000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(8, 5)));
	ДанныеДопСтрок.Раздел33.Добавить();
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000101",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000102",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000103",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000105",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000106",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000107",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2))); 
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000108",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000109",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000110",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000111",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000112",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000113",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000114",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000110",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000120",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000131",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000132",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000141",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000142",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000150",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000160",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000170",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000180",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел21", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел21 = ДанныеДопСтраниц.Раздел21.Добавить();
	ДопСтраницаРаздел21.Представление = "Лист N 1";
	ДопСтраницаРаздел21.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел21.АвтоматическоеПредставление = Истина;
	
	//ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел24", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел24 = ДанныеДопСтраниц.Раздел24.Добавить();
	ДопСтраницаРаздел24.Представление = "Лист N 1";
	ДопСтраницаРаздел24.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел24.АвтоматическоеПредставление = Истина;
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел1",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел21",
		Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел21));
	РазделыОтчета.Вставить("Раздел22",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел24",
		Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел24));
	РазделыОтчета.Вставить("Раздел31",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел33",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел33, "П0003500001"));
	РазделыОтчета.Вставить("Раздел35",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел4",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел4,  "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел5,  "П0005000001"));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2014Кв1(
		ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = 0;
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ЗаполнитьНачальныеНастройки(
		ИсточникОтчета, ИмяФормыОтчета, "СоставПоказателей2014Кв1", СтруктураВариантыЗаполнения);
	
	СтруктураДокУпПред = Новый Структура;
	СтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("СерияРимскиеЦифры",           " ");
	СтруктураДокУпПред.Вставить("СерияРусскиеБуквы",           " ");
	СтруктураДокУпПред.Вставить("НомерУдостоверяющего",        " ");
	СтруктураДокУпПред.Вставить("ДатаВыдачи",                  "");
	СтруктураДокУпПред.Вставить("КемВыдан",                    " ");
	
	НаименованияЭлементовАдреса = Новый Структура;
	НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
	НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
	НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2014Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", 1);
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("НомерПачки", 0);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/01/2014");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СтруктураДокУпПред);
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", Ложь);
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", НаименованияЭлементовАдреса);
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ЗаписатьРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел4",  Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел5",  Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000101",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000102",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000103",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000105",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000106",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000107",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2))); 
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000108",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000109",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000110",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000111",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000112",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000113",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000400000114",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000110",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(6, 0)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000120",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000131",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000132",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000141",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000142",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000150",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000160",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000170",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Колонки.Добавить("П000500000180",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(15, 2)));
	ДанныеДопСтрок.Раздел5.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел21", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел21.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел21 = ДанныеДопСтраниц.Раздел21.Добавить();
	ДопСтраницаРаздел21.Представление = "Лист N 1";
	ДопСтраницаРаздел21.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел21.АвтоматическоеПредставление = Истина;
	
	//ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел24", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("АктивнаяСтраница", Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел24.Колонки.Добавить("АвтоматическоеПредставление", Новый ОписаниеТипов("Булево"));
	ДопСтраницаРаздел24 = ДанныеДопСтраниц.Раздел24.Добавить();
	ДопСтраницаРаздел24.Представление = "Лист N 1";
	ДопСтраницаРаздел24.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел24.АвтоматическоеПредставление = Истина;
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел1",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел21",
		Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел21));
	РазделыОтчета.Вставить("Раздел22",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел24",
		Новый Структура("МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел24));
	РазделыОтчета.Вставить("Раздел31",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел32",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь,   Новый Структура));
	РазделыОтчета.Вставить("Раздел4",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел4,  "П0004000001"));
	РазделыОтчета.Вставить("Раздел5",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел5,  "П0005000001"));
	
	ЗаполнитьРеглОтчетРСВ1ФормаОтчета2015Кв1(
		ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = 0;
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ЗаполнитьНачальныеНастройки(
		ИсточникОтчета, ИмяФормыОтчета, "СоставПоказателей2015Кв1", СтруктураВариантыЗаполнения);
	
	СтруктураДокУпПред = Новый Структура;
	СтруктураДокУпПред.Вставить("НаименованиеУдостоверяющего", " ");
	СтруктураДокУпПред.Вставить("СерияРимскиеЦифры",           " ");
	СтруктураДокУпПред.Вставить("СерияРусскиеБуквы",           " ");
	СтруктураДокУпПред.Вставить("НомерУдостоверяющего",        " ");
	СтруктураДокУпПред.Вставить("ДатаВыдачи",                  "");
	СтруктураДокУпПред.Вставить("КемВыдан",                    " ");
	
	НаименованияЭлементовАдреса = Новый Структура;
	НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
	НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
	НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2015Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", 1);
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("НомерПачки", 0);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "11/03/2015");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СтруктураДокУпПред);
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", Ложь);
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", НаименованияЭлементовАдреса);
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ЗаписатьРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета);
	
КонецФункции

Функция ЗаписатьРеглОтчетРСВ1ФормаОтчета2010Кв4(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
			
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "РСВ-1 ПФР";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.НомерПачки               = ДанныеРеглОтчета.НомерПачки;
    ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	НомерМесяца = Формат(ДатаОкончания, "ДФ=М");
	
	Если НЕ НомерМесяца = "12" Тогда  
		НомерМесяца = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(НомерМесяца, 2, 0);
	КонецЕсли;
		
	РазделыОтчета.Титульный.Данные.Период = НомерМесяца;
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = Формат(ДанныеРеглОтчета.ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'""");
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2010Кв4(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(ДанныеРеглОтчета.НомерПачки) Тогда
		
		ДанныеРеглОтчета.НомерПачки = НомерПачкиИзРегистра + 1;
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.НомерПачки = ДанныеРеглОтчета.НомерПачки;
		
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
		
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
		
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
				
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
			
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
		
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);

	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);

	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("ДокументУпПред", ДанныеРеглОтчета.ДокументУпПред);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", ДанныеРеглОтчета.ДанныеОтчетаИзмененыВручную);
		
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
       	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		Если ДанныеРеглОтчета.НомерПачки > НомерПачкиИзРегистра Тогда
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод), ДанныеРеглОтчета.НомерПачки);
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
		
	ДокументРегламентированныйОтчет.Разблокировать();
			
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетРСВ1ФормаОтчета2011Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
			
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "РСВ-1 ПФР";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.НомерПачки               = ДанныеРеглОтчета.НомерПачки;
    ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	НомерМесяца = Формат(ДатаОкончания, "ДФ=М");
	
	Если НЕ НомерМесяца = "12" Тогда  
		НомерМесяца = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(НомерМесяца, 2, 0);
	КонецЕсли;
		
	РазделыОтчета.Титульный.Данные.Период = НомерМесяца;
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = Формат(ДанныеРеглОтчета.ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'""");
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2011Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(ДанныеРеглОтчета.НомерПачки) Тогда
		
		ДанныеРеглОтчета.НомерПачки = НомерПачкиИзРегистра + 1;
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.НомерПачки = ДанныеРеглОтчета.НомерПачки;
		
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
		
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
		
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
				
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
			
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
		
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);

	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);

	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("ДокументУпПред", ДанныеРеглОтчета.ДокументУпПред);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", ДанныеРеглОтчета.ДанныеОтчетаИзмененыВручную);
		
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
       	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		Если ДанныеРеглОтчета.НомерПачки > НомерПачкиИзРегистра Тогда
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод), ДанныеРеглОтчета.НомерПачки);
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
		
	ДокументРегламентированныйОтчет.Разблокировать();
			
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетРСВ1ФормаОтчета2012Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
			
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "РСВ-1 ПФР";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.НомерПачки               = ДанныеРеглОтчета.НомерПачки;
    ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	НомерМесяца = Формат(ДатаОкончания, "ДФ=М");
	
	Если НЕ НомерМесяца = "12" Тогда  
		НомерМесяца = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(НомерМесяца, 2, 0);
	КонецЕсли;
		
	РазделыОтчета.Титульный.Данные.Период = НомерМесяца;
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = Формат(ДанныеРеглОтчета.ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'""");
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2012Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(ДанныеРеглОтчета.НомерПачки) Тогда
		
		ДанныеРеглОтчета.НомерПачки = НомерПачкиИзРегистра + 1;
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.НомерПачки = ДанныеРеглОтчета.НомерПачки;
		
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
		
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
		
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
				
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
			
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
		
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);

	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);

	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("ДокументУпПред", ДанныеРеглОтчета.ДокументУпПред);
	
	СписокСохранения.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", ДанныеРеглОтчета.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
	
	СписокСохранения.Вставить("НаименованияЭлементовАдреса", ДанныеРеглОтчета.НаименованияЭлементовАдреса);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", ДанныеРеглОтчета.ДанныеОтчетаИзмененыВручную);
		
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
       	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		Если ДанныеРеглОтчета.НомерПачки > НомерПачкиИзРегистра Тогда
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод), ДанныеРеглОтчета.НомерПачки);
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
		
	ДокументРегламентированныйОтчет.Разблокировать();
			
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетРСВ1ФормаОтчета2013Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
			
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "РСВ-1 ПФР";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.НомерПачки               = ДанныеРеглОтчета.НомерПачки;
    ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	НомерМесяца = Формат(ДатаОкончания, "ДФ=М");
	
	Если НЕ НомерМесяца = "12" Тогда  
		НомерМесяца = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(НомерМесяца, 2, 0);
	КонецЕсли;
		
	РазделыОтчета.Титульный.Данные.Период = НомерМесяца;
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = Формат(ДанныеРеглОтчета.ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'""");
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2013Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(ДанныеРеглОтчета.НомерПачки) Тогда
		
		ДанныеРеглОтчета.НомерПачки = НомерПачкиИзРегистра + 1;
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.НомерПачки = ДанныеРеглОтчета.НомерПачки;
		
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
		
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
		
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
				
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
			
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
		
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);

	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);

	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("ДокументУпПред", ДанныеРеглОтчета.ДокументУпПред);
	
	СписокСохранения.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", ДанныеРеглОтчета.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
	
	СписокСохранения.Вставить("НаименованияЭлементовАдреса", ДанныеРеглОтчета.НаименованияЭлементовАдреса);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", ДанныеРеглОтчета.ДанныеОтчетаИзмененыВручную);
		
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
       	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		Если ДанныеРеглОтчета.НомерПачки > НомерПачкиИзРегистра Тогда
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод), ДанныеРеглОтчета.НомерПачки);
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;

		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));

		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
		
	ДокументРегламентированныйОтчет.Разблокировать();
			
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетРСВ1ФормаОтчета2014Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "РСВ-1 ПФР";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.НомерПачки               = ДанныеРеглОтчета.НомерПачки;
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	НомерМесяца = Формат(ДатаОкончания, "ДФ=М");
	
	Если НомерМесяца = "12" Тогда
		НомерМесяца = "0";
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = НомерМесяца;
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = Формат(ДанныеРеглОтчета.ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'""");
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2014Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(
		Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(ДанныеРеглОтчета.НомерПачки) Тогда
		
		ДанныеРеглОтчета.НомерПачки = НомерПачкиИзРегистра + 1;
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.НомерПачки = ДанныеРеглОтчета.НомерПачки;
	
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
		
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("ДокументУпПред", ДанныеРеглОтчета.ДокументУпПред);
	
	СписокСохранения.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", ДанныеРеглОтчета.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
	
	СписокСохранения.Вставить("НаименованияЭлементовАдреса", ДанныеРеглОтчета.НаименованияЭлементовАдреса);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", ДанныеРеглОтчета.ДанныеОтчетаИзмененыВручную);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		Если ДанныеРеглОтчета.НомерПачки > НомерПачкиИзРегистра Тогда
			
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(
				Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод), ДанныеРеглОтчета.НомерПачки);
			
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетРСВ1ФормаОтчета2015Кв1(ИсточникОтчета, ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "РСВ-1 ПФР";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.НомерПачки               = ДанныеРеглОтчета.НомерПачки;
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	НомерМесяца = Формат(ДатаОкончания, "ДФ=М");
	
	Если НомерМесяца = "12" Тогда
		НомерМесяца = "0";
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = НомерМесяца;
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = Формат(ДанныеРеглОтчета.ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'""");
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетРСВ1ФормаОтчета2015Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	НомерПачкиИзРегистра = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(
		Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод));
	
	Если НЕ ЗначениеЗаполнено(ДанныеРеглОтчета.НомерПачки) Тогда
		
		ДанныеРеглОтчета.НомерПачки = НомерПачкиИзРегистра + 1;
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.НомерПачки = ДанныеРеглОтчета.НомерПачки;
	
	ПоказателиОтчета = Новый Структура();
	
	ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
		
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("ДокументУпПред", ДанныеРеглОтчета.ДокументУпПред);
	
	СписокСохранения.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", ДанныеРеглОтчета.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
	
	СписокСохранения.Вставить("НаименованияЭлементовАдреса", ДанныеРеглОтчета.НаименованияЭлементовАдреса);
	
	СписокСохранения.Вставить("ДанныеОтчетаИзмененыВручную", ДанныеРеглОтчета.ДанныеОтчетаИзмененыВручную);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		Если ДанныеРеглОтчета.НомерПачки > НомерПачкиИзРегистра Тогда
			
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(
				Организация, Число(РазделыОтчета.Титульный.Данные.ОтчетГод), ДанныеРеглОтчета.НомерПачки);
			
		КонецЕсли;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2010Кв4(СсылкаНаСохрРеглОтчет)
	
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариантовАвтоЗаполнения;

	ДокРеглОтч = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
	
	ДанныеРеглОтчета = Новый Структура;
	
	ДанныеРеглОтчета.Вставить("ДатаПодписи",              ДокРеглОтч.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения",         ДокРеглОтч.ЕдиницаИзмерения);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", ДокРеглОтч.ТочностьЕдиницыИзмерения);
	ДанныеРеглОтчета.Вставить("Комментарий",              ДокРеглОтч.Комментарий);
	ДанныеРеглОтчета.Вставить("НомерПачки",               ДокРеглОтч.НомерПачки);

	СписокСохранения = ДокРеглОтч.ДанныеОтчета.Получить();

	ДеревоНастройкиСтраниц = ДокРеглОтч.ДеревоНастройкиСтраниц.Получить();
	
	Если ДеревоНастройкиСтраниц = Неопределено Тогда
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", Новый ДеревоЗначений);
		ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2010Кв4(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	Иначе
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоНастройкиСтраниц.Скопировать());
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	КонецЕсли;
		
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);
	КонецЕсли;
			
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", СписокСохранения.ФлПодсчетСтраниц);

	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", СписокСохранения.ФлОтклВыборЗначений);
	Если ДанныеРеглОтчета.ФлОтклВыборЗначений = Неопределено Тогда
		ДанныеРеглОтчета.ФлОтклВыборЗначений = Ложь;
	КонецЕсли;

	ДанныеРеглОтчета.Вставить("Автозаполнение", СписокСохранения.Автозаполнение);
	
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СписокСохранения.ДокументУпПред);
	Если ДанныеРеглОтчета.ДокументУпПред = Неопределено Тогда
		
		ДанныеРеглОтчета.ДокументУпПред = Новый Структура;
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРимскиеЦифры", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРусскиеБуквы", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НомерУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("ДатаВыдачи", "");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;	
		
	ДанныеРеглОтчета.Вставить("ВерсияФормы", СписокСохранения.ВерсияФормы);
		
	ДанныеРеглОтчета.Вставить("ПоказателиОтчета", СписокСохранения.ПоказателиОтчета);
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2010Кв4(ДанныеРеглОтчета.ПоказателиОтчета);
		
	КонвертироватьДанныеРаздела12СтарогоОбразцаРСВ1ФормаОтчета2010Кв4(ДанныеРеглОтчета);
			
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", СписокСохранения.ДанныеОтчетаИзмененыВручную);
			
	ДанныеРеглОтчета.Вставить("ВидДокумента", ДокРеглОтч.Вид);
		
	Если ДанныеРеглОтчета.ВидДокумента = Неопределено Тогда
		ДанныеРеглОтчета.ВидДокумента = 0;
	КонецЕсли;

	Если ДанныеРеглОтчета.ВидДокумента = 0 Тогда
		ДанныеРеглОтчета.Вставить("НомерКорректировки", 0);
	Иначе
		ДанныеРеглОтчета.Вставить("НомерКорректировки", ДанныеРеглОтчета.ВидДокумента);
		ДанныеРеглОтчета.ВидДокумента = 1;
	КонецЕсли;
	
	Возврат ДанныеРеглОтчета;
    		
КонецФункции

Функция ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2011Кв1(СсылкаНаСохрРеглОтчет)
	
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариантовАвтоЗаполнения;

	ДокРеглОтч = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
	
	ДанныеРеглОтчета = Новый Структура;
	
	ДанныеРеглОтчета.Вставить("ДатаПодписи",              ДокРеглОтч.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения",         ДокРеглОтч.ЕдиницаИзмерения);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", ДокРеглОтч.ТочностьЕдиницыИзмерения);
	ДанныеРеглОтчета.Вставить("Комментарий",              ДокРеглОтч.Комментарий);
	ДанныеРеглОтчета.Вставить("НомерПачки",               ДокРеглОтч.НомерПачки);

	СписокСохранения = ДокРеглОтч.ДанныеОтчета.Получить();

	ДеревоНастройкиСтраниц = ДокРеглОтч.ДеревоНастройкиСтраниц.Получить();
	
	Если ДеревоНастройкиСтраниц = Неопределено Тогда
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", Новый ДеревоЗначений);
		ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2011Кв1(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	Иначе
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоНастройкиСтраниц.Скопировать());
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	КонецЕсли;
		
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);
	КонецЕсли;
			
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", СписокСохранения.ФлПодсчетСтраниц);

	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", СписокСохранения.ФлОтклВыборЗначений);
	Если ДанныеРеглОтчета.ФлОтклВыборЗначений = Неопределено Тогда
		ДанныеРеглОтчета.ФлОтклВыборЗначений = Ложь;
	КонецЕсли;

	ДанныеРеглОтчета.Вставить("Автозаполнение", СписокСохранения.Автозаполнение);
	
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СписокСохранения.ДокументУпПред);
	Если ДанныеРеглОтчета.ДокументУпПред = Неопределено Тогда
		
		ДанныеРеглОтчета.ДокументУпПред = Новый Структура;
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРимскиеЦифры", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРусскиеБуквы", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НомерУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("ДатаВыдачи", "");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;	
		
	ДанныеРеглОтчета.Вставить("ВерсияФормы", СписокСохранения.ВерсияФормы);
		
	ДанныеРеглОтчета.Вставить("ПоказателиОтчета", СписокСохранения.ПоказателиОтчета);
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2011Кв1(ДанныеРеглОтчета.ПоказателиОтчета);
		
	КонвертироватьДанныеРаздела12СтарогоОбразцаРСВ1ФормаОтчета2011Кв1(ДанныеРеглОтчета);
			
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", СписокСохранения.ДанныеОтчетаИзмененыВручную);
			
	ДанныеРеглОтчета.Вставить("ВидДокумента", ДокРеглОтч.Вид);
		
	Если ДанныеРеглОтчета.ВидДокумента = Неопределено Тогда
		ДанныеРеглОтчета.ВидДокумента = 0;
	КонецЕсли;

	Если ДанныеРеглОтчета.ВидДокумента = 0 Тогда
		ДанныеРеглОтчета.Вставить("НомерКорректировки", 0);
	Иначе
		ДанныеРеглОтчета.Вставить("НомерКорректировки", ДанныеРеглОтчета.ВидДокумента);
		ДанныеРеглОтчета.ВидДокумента = 1;
	КонецЕсли;
	
	Возврат ДанныеРеглОтчета;
    		
КонецФункции

Функция ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2012Кв1(СсылкаНаСохрРеглОтчет)
	
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариантовАвтоЗаполнения;

	ДокРеглОтч = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
	
	ДанныеРеглОтчета = Новый Структура;
	
	ДанныеРеглОтчета.Вставить("ДатаПодписи",              ДокРеглОтч.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения",         ДокРеглОтч.ЕдиницаИзмерения);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", ДокРеглОтч.ТочностьЕдиницыИзмерения);
	ДанныеРеглОтчета.Вставить("Комментарий",              ДокРеглОтч.Комментарий);
	ДанныеРеглОтчета.Вставить("НомерПачки",               ДокРеглОтч.НомерПачки);

	СписокСохранения = ДокРеглОтч.ДанныеОтчета.Получить();

	ДеревоНастройкиСтраниц = ДокРеглОтч.ДеревоНастройкиСтраниц.Получить();
	
	Если ДеревоНастройкиСтраниц = Неопределено Тогда
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", Новый ДеревоЗначений);
		ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2012Кв1(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	Иначе
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоНастройкиСтраниц.Скопировать());
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	КонецЕсли;
		
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);
	КонецЕсли;
			
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", СписокСохранения.ФлПодсчетСтраниц);

	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", СписокСохранения.ФлОтклВыборЗначений);
	Если ДанныеРеглОтчета.ФлОтклВыборЗначений = Неопределено Тогда
		ДанныеРеглОтчета.ФлОтклВыборЗначений = Ложь;
	КонецЕсли;

	ДанныеРеглОтчета.Вставить("Автозаполнение", СписокСохранения.Автозаполнение);
	
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СписокСохранения.ДокументУпПред);
	Если ДанныеРеглОтчета.ДокументУпПред = Неопределено Тогда
		
		ДанныеРеглОтчета.ДокументУпПред = Новый Структура;
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРимскиеЦифры", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРусскиеБуквы", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НомерУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("ДатаВыдачи", "");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;	
		
	ДанныеРеглОтчета.Вставить("ВерсияФормы", СписокСохранения.ВерсияФормы);
		
	ДанныеРеглОтчета.Вставить("ПоказателиОтчета", СписокСохранения.ПоказателиОтчета);
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2012Кв1(ДанныеРеглОтчета.ПоказателиОтчета);
		
	КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2012Кв1(ДанныеРеглОтчета);
			
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", СписокСохранения.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
		
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", СписокСохранения.НаименованияЭлементовАдреса);
		
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", СписокСохранения.ДанныеОтчетаИзмененыВручную);
			
	Если ДанныеРеглОтчета.НаименованияЭлементовАдреса = Неопределено Тогда
		
		ДанныеРеглОтчета.НаименованияЭлементовАдреса = Новый Структура;
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
		
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ДокРеглОтч.Вид);
		
	Если ДанныеРеглОтчета.ВидДокумента = Неопределено Тогда
		ДанныеРеглОтчета.ВидДокумента = 0;
	КонецЕсли;

	Если ДанныеРеглОтчета.ВидДокумента = 0 Тогда
		ДанныеРеглОтчета.Вставить("НомерКорректировки", 0);
	Иначе
		ДанныеРеглОтчета.Вставить("НомерКорректировки", ДанныеРеглОтчета.ВидДокумента);
		ДанныеРеглОтчета.ВидДокумента = 1;
	КонецЕсли;
	
	Возврат ДанныеРеглОтчета;
    		
КонецФункции

Функция ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2013Кв1(СсылкаНаСохрРеглОтчет)
	
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариантовАвтоЗаполнения;

	ДокРеглОтч = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
	
	ДанныеРеглОтчета = Новый Структура;
	
	ДанныеРеглОтчета.Вставить("ДатаПодписи",              ДокРеглОтч.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения",         ДокРеглОтч.ЕдиницаИзмерения);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", ДокРеглОтч.ТочностьЕдиницыИзмерения);
	ДанныеРеглОтчета.Вставить("Комментарий",              ДокРеглОтч.Комментарий);
	ДанныеРеглОтчета.Вставить("НомерПачки",               ДокРеглОтч.НомерПачки);

	СписокСохранения = ДокРеглОтч.ДанныеОтчета.Получить();

	ДеревоНастройкиСтраниц = ДокРеглОтч.ДеревоНастройкиСтраниц.Получить();
	
	Если ДеревоНастройкиСтраниц = Неопределено Тогда
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", Новый ДеревоЗначений);
		ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2013Кв1(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	Иначе
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоНастройкиСтраниц.Скопировать());
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	КонецЕсли;
		
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);
	КонецЕсли;
			
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", СписокСохранения.ФлПодсчетСтраниц);

	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", СписокСохранения.ФлОтклВыборЗначений);
	Если ДанныеРеглОтчета.ФлОтклВыборЗначений = Неопределено Тогда
		ДанныеРеглОтчета.ФлОтклВыборЗначений = Ложь;
	КонецЕсли;

	ДанныеРеглОтчета.Вставить("Автозаполнение", СписокСохранения.Автозаполнение);
	
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СписокСохранения.ДокументУпПред);
	Если ДанныеРеглОтчета.ДокументУпПред = Неопределено Тогда
		
		ДанныеРеглОтчета.ДокументУпПред = Новый Структура;
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРимскиеЦифры", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРусскиеБуквы", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НомерУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("ДатаВыдачи", "");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;	
		
	ДанныеРеглОтчета.Вставить("ВерсияФормы", СписокСохранения.ВерсияФормы);
		
	ДанныеРеглОтчета.Вставить("ПоказателиОтчета", СписокСохранения.ПоказателиОтчета);
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2013Кв1(ДанныеРеглОтчета.ПоказателиОтчета);
		
	КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2013Кв1(ДанныеРеглОтчета);
			
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами", СписокСохранения.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
		
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", СписокСохранения.НаименованияЭлементовАдреса);
		
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", СписокСохранения.ДанныеОтчетаИзмененыВручную);
			
	Если ДанныеРеглОтчета.НаименованияЭлементовАдреса = Неопределено Тогда
		
		ДанныеРеглОтчета.НаименованияЭлементовАдреса = Новый Структура;
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
		
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ДокРеглОтч.Вид);
		
	Если ДанныеРеглОтчета.ВидДокумента = Неопределено Тогда
		ДанныеРеглОтчета.ВидДокумента = 0;
	КонецЕсли;

	Если ДанныеРеглОтчета.ВидДокумента = 0 Тогда
		ДанныеРеглОтчета.Вставить("НомерКорректировки", 0);
	Иначе
		ДанныеРеглОтчета.Вставить("НомерКорректировки", ДанныеРеглОтчета.ВидДокумента);
		ДанныеРеглОтчета.ВидДокумента = 1;
	КонецЕсли;
	
	Возврат ДанныеРеглОтчета;
    		
КонецФункции

Функция ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2014Кв1(СсылкаНаСохрРеглОтчет)
	
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариантовАвтоЗаполнения;
	
	ДокРеглОтч = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
	
	ДанныеРеглОтчета = Новый Структура;
	
	ДанныеРеглОтчета.Вставить("ДатаПодписи",              ДокРеглОтч.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения",         ДокРеглОтч.ЕдиницаИзмерения);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", ДокРеглОтч.ТочностьЕдиницыИзмерения);
	ДанныеРеглОтчета.Вставить("Комментарий",              ДокРеглОтч.Комментарий);
	ДанныеРеглОтчета.Вставить("НомерПачки",               ДокРеглОтч.НомерПачки);
	
	СписокСохранения = ДокРеглОтч.ДанныеОтчета.Получить();
	
	ДеревоНастройкиСтраниц = ДокРеглОтч.ДеревоНастройкиСтраниц.Получить();
	
	Если ДеревоНастройкиСтраниц = Неопределено Тогда
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", Новый ДеревоЗначений);
		ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2014Кв1(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	Иначе
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоНастройкиСтраниц.Скопировать());
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	КонецЕсли;
		
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", СписокСохранения.ФлПодсчетСтраниц);
	
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", СписокСохранения.ФлОтклВыборЗначений);
	Если ДанныеРеглОтчета.ФлОтклВыборЗначений = Неопределено Тогда
		ДанныеРеглОтчета.ФлОтклВыборЗначений = Ложь;
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("Автозаполнение", СписокСохранения.Автозаполнение);
	
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СписокСохранения.ДокументУпПред);
	
	Если ДанныеРеглОтчета.ДокументУпПред = Неопределено Тогда
		
		ДанныеРеглОтчета.ДокументУпПред = Новый Структура;
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРимскиеЦифры", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРусскиеБуквы", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НомерУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("ДатаВыдачи", "");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ВерсияФормы", СписокСохранения.ВерсияФормы);
	
	ДанныеРеглОтчета.Вставить("ПоказателиОтчета", СписокСохранения.ПоказателиОтчета);
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2014Кв1(
		ДанныеРеглОтчета.ПоказателиОтчета);
	
	КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2014Кв1(ДанныеРеглОтчета);
	
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами",
		СписокСохранения.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
	
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", СписокСохранения.НаименованияЭлементовАдреса);
	
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", СписокСохранения.ДанныеОтчетаИзмененыВручную);
	
	Если ДанныеРеглОтчета.НаименованияЭлементовАдреса = Неопределено Тогда
		
		ДанныеРеглОтчета.НаименованияЭлементовАдреса = Новый Структура;
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
		
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ДокРеглОтч.Вид);
	
	Если ДанныеРеглОтчета.ВидДокумента = Неопределено Тогда
		ДанныеРеглОтчета.ВидДокумента = 0;
	КонецЕсли;
	
	Если ДанныеРеглОтчета.ВидДокумента = 0 Тогда
		ДанныеРеглОтчета.Вставить("НомерКорректировки", 0);
	Иначе
		ДанныеРеглОтчета.Вставить("НомерКорректировки", ДанныеРеглОтчета.ВидДокумента);
		ДанныеРеглОтчета.ВидДокумента = 1;
	КонецЕсли;
	
	Возврат ДанныеРеглОтчета;
	
КонецФункции

Функция ВосстановитьСохраненныеДанныеРеглОтчетРСВ1ФормаОтчета2015Кв1(СсылкаНаСохрРеглОтчет)
	
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеМногостраничныхРазделов;
	Перем ДанныеВариантовАвтоЗаполнения;
	
	ДокРеглОтч = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
	
	ДанныеРеглОтчета = Новый Структура;
	
	ДанныеРеглОтчета.Вставить("ДатаПодписи",              ДокРеглОтч.ДатаПодписи);
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения",         ДокРеглОтч.ЕдиницаИзмерения);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", ДокРеглОтч.ТочностьЕдиницыИзмерения);
	ДанныеРеглОтчета.Вставить("Комментарий",              ДокРеглОтч.Комментарий);
	ДанныеРеглОтчета.Вставить("НомерПачки",               ДокРеглОтч.НомерПачки);
	
	СписокСохранения = ДокРеглОтч.ДанныеОтчета.Получить();
	
	ДеревоНастройкиСтраниц = ДокРеглОтч.ДеревоНастройкиСтраниц.Получить();
	
	Если ДеревоНастройкиСтраниц = Неопределено Тогда
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", Новый ДеревоЗначений);
		ФормироватьСтруктуруСтраницРеглОтчетРСВ1ФормаОтчета2015Кв1(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	Иначе
		ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоНастройкиСтраниц.Скопировать());
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	КонецЕсли;
		
	Если СписокСохранения.Свойство("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	КонецЕсли;
	
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения) Тогда
		ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеВариантовАвтоЗаполнения);
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", СписокСохранения.ФлПодсчетСтраниц);
	
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", СписокСохранения.ФлОтклВыборЗначений);
	Если ДанныеРеглОтчета.ФлОтклВыборЗначений = Неопределено Тогда
		ДанныеРеглОтчета.ФлОтклВыборЗначений = Ложь;
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("Автозаполнение", СписокСохранения.Автозаполнение);
	
	ДанныеРеглОтчета.Вставить("ДокументУпПред", СписокСохранения.ДокументУпПред);
	
	Если ДанныеРеглОтчета.ДокументУпПред = Неопределено Тогда
		
		ДанныеРеглОтчета.ДокументУпПред = Новый Структура;
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НаименованиеУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРимскиеЦифры", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("СерияРусскиеБуквы", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("НомерУдостоверяющего", " ");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("ДатаВыдачи", "");
		ДанныеРеглОтчета.ДокументУпПред.Вставить("КемВыдан", " ");
		
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ВерсияФормы", СписокСохранения.ВерсияФормы);
	
	ДанныеРеглОтчета.Вставить("ПоказателиОтчета", СписокСохранения.ПоказателиОтчета);
	
	ВосстановитьСведенияОбОрганизацииИзТитульногоЛистаСтарогоОбразцаРеглОтчетРСВ1ФормаОтчета2015Кв1(
		ДанныеРеглОтчета.ПоказателиОтчета);
	
	КонвертироватьДанныеРаздела2СтарогоОбразцаРСВ1ФормаОтчета2015Кв1(ДанныеРеглОтчета);
	
	ДанныеРеглОтчета.Вставить("ОтображатьНулевыеЗначенияСтрок100и150Цифрами",
		СписокСохранения.ОтображатьНулевыеЗначенияСтрок100и150Цифрами);
	
	ДанныеРеглОтчета.Вставить("НаименованияЭлементовАдреса", СписокСохранения.НаименованияЭлементовАдреса);
	
	ДанныеРеглОтчета.Вставить("ДанныеОтчетаИзмененыВручную", СписокСохранения.ДанныеОтчетаИзмененыВручную);
	
	Если ДанныеРеглОтчета.НаименованияЭлементовАдреса = Неопределено Тогда
		
		ДанныеРеглОтчета.НаименованияЭлементовАдреса = Новый Структура;
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипДома",     "владение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКорпуса",  "строение");
		ДанныеРеглОтчета.НаименованияЭлементовАдреса.Вставить("ТипКвартиры", "оф.");
		
	КонецЕсли;
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ДокРеглОтч.Вид);
	
	Если ДанныеРеглОтчета.ВидДокумента = Неопределено Тогда
		ДанныеРеглОтчета.ВидДокумента = 0;
	КонецЕсли;
	
	Если ДанныеРеглОтчета.ВидДокумента = 0 Тогда
		ДанныеРеглОтчета.Вставить("НомерКорректировки", 0);
	Иначе
		ДанныеРеглОтчета.Вставить("НомерКорректировки", ДанныеРеглОтчета.ВидДокумента);
		ДанныеРеглОтчета.ВидДокумента = 1;
	КонецЕсли;
	
	Возврат ДанныеРеглОтчета;
	
КонецФункции

Процедура ЗаполнитьНачальныеНастройки(ИсточникОтчета, ИмяФормыОтчета, ИмяМакета, СтруктураВариантыЗаполнения)
	
	МакетСоставаПоказателей = Отчеты[ИсточникОтчета].ПолучитьМакет(ИмяМакета);
	
	Для Инд = 0 По МакетСоставаПоказателей.Области.Количество() - 1 Цикл
		
		ТекОбласть  = МакетСоставаПоказателей.Области[Инд];
		ИмяСтраницы = ТекОбласть.Имя;
		
		ТаблицаВариантыЗаполнения = Новый ТаблицаЗначений;
		ТаблицаВариантыЗаполнения.Колонки.Добавить("КодПоказателя",
			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
		ТаблицаВариантыЗаполнения.Колонки.Добавить("ВариантЗаполнения",
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
		ТаблицаВариантыЗаполнения.Колонки.Добавить("ЗначениеАвто",
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТаблицаВариантыЗаполнения.Колонки.Добавить("Дельта",
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТаблицаВариантыЗаполнения.Колонки.Добавить("Комментарий",
			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
		ТаблицаВариантыЗаполнения.Колонки.Добавить("КодПоказателяПоСтруктуре",
			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
		
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			
			КодПоказателя = СокрП(МакетСоставаПоказателей.Область(Ном, 1).Текст);
			ИмяПоказателя = КодПоказателя;
			
			Если КодПоказателя = "===" Тогда
				Прервать;
			КонецЕсли;
			
			Если Лев(КодПоказателя, 2) = "//" Тогда
				Продолжить;
			КонецЕсли;
			
			КодПоказателяПоФорме = СокрЛП(МакетСоставаПоказателей.Область(Ном, 2).Текст);
			стрКолСтрокИсходный  = СокрЛП(МакетСоставаПоказателей.Область(Ном, 5).Текст);
			стрВариантЗаполнения = РегламентированнаяОтчетность.ПолучитьВариантЗаполненияПоказателяРегОтчета(
				МакетСоставаПоказателей, Ном);
			
			чВариантЗаполнения   = ? (ПустаяСтрока(стрВариантЗаполнения), 0, Число(стрВариантЗаполнения));
			
			Если чВариантЗаполнения <> 0 Тогда
				НоваяСтрока = ТаблицаВариантыЗаполнения.Добавить();
				НоваяСтрока.КодПоказателя = ? (НЕ ПустаяСтрока(КодПоказателяПоФорме), КодПоказателяПоФорме, КодПоказателя);
				НоваяСтрока.ВариантЗаполнения = чВариантЗаполнения;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ТаблицаВариантыЗаполнения.Количество() > 0 Тогда
			
			МассивВариантовЗаполненияСтраниц = Новый Массив;
			МассивВариантовЗаполненияСтраниц.Добавить(ТаблицаВариантыЗаполнения);
			
			СтруктураВариантыЗаполнения.Вставить(ИмяСтраницы, МассивВариантовЗаполненияСтраниц);
			
		Конецесли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета)
	
	Префикс = "ПолеТабличногоДокумента";
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если НЕ Раздел.Значение.МногостраничностьВРазделе Тогда
			ПоказателиОтчета.Вставить(Префикс + Раздел.Ключ, Раздел.Значение.Данные);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПустыеСтруктурыДанных(ИсточникОтчета, ИмяФормыОтчета, РазделыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если (НЕ Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные.Количество() = 0)
		   ИЛИ (Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные[0].Данные.Количество() = 0) Тогда
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(Отчеты[ИсточникОтчета].ПолучитьМакет(ИмяФормыОтчета + "_" + Раздел.Ключ));
			
			Если ИмяФормыОтчета = "ФормаОтчета2010Кв4" Тогда
				СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2010Кв4(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2011Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2011Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2012Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2012Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2013Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2013Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2014Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2014Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2015Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетРСВ1ФормаОтчета2015Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСтруктуруМногострочногоРаздела(ДанныеДопСтрок, ТабличныйДокумент)
	
	Для НомСтр = 1 По ДанныеДопСтрок.Количество() Цикл
		
		ТекСтрокаТаблицы = ДанныеДопСтрок[НомСтр - 1];
		
		Для Каждого Колонка Из ДанныеДопСтрок.Колонки Цикл
			
			ИмяЯчейки     = Колонка.Имя + "_" + НомСтр;
			ОбластьЯчейки = ТабличныйДокумент.Области[ИмяЯчейки];
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ЗначениеЯчейки = ОбластьЯчейки.Значение;
			Иначе
				ЗначениеЯчейки = ОбластьЯчейки.Текст;
			КонецЕсли;
			
			ТекСтрокаТаблицы[Колонка.Имя] = ЗначениеЯчейки;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СуммаПоказателяПоВсемСтраницам(ДанныеРаздела, Показатель, Условия = Неопределено)
	
	Результат = 0;
	
	Для Инд = 0 По ДанныеРаздела.Количество() - 1 Цикл
		
		Данные = ДанныеРаздела[Инд].Данные;
		
		Если НЕ Данные = Неопределено Тогда
			
			Если ((Условия = Неопределено) ИЛИ ВыполняютсяУсловияЗаполнения(Данные, Условия)) Тогда
				
				Результат = Результат + Данные[Показатель];
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ВыполняютсяУсловияЗаполнения(СтруктураДанных, Условия)
	
	Результат = Ложь;
	Для каждого Условие Из Условия Цикл
		Показатель = Условие.Ключ;
		ТребЗначение = Условие.Значение;
		ЗначениеПоказателя = СтруктураДанных[Показатель];
		Если ТребЗначение = Неопределено Тогда
			Результат = (ЗначениеПоказателя <> "");
		Иначе
			Результат = (ЗначениеПоказателя = ТребЗначение);
		КонецЕсли;
		Если НЕ Результат Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СобратьДанные(ТабличныйДокумент)
	
	СтруктураДанных = Новый Структура;
	
	Для Инд = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
		
		ТекущаяОбласть = ТабличныйДокумент.Области[Инд];
		
		Если НЕ ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
		 ИЛИ НЕ ТекущаяОбласть.СодержитЗначение = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
		
	КонецЦикла;
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ОкруглитьЧислоПоФормату(СтруктураРеквизитов, ИсходноеЧисло)
	
	Делитель = СтруктураРеквизитов.СоответствиеЕдиницыИзмеренияДелителю["Окр"
		+ СтрЗаменить(СтруктураРеквизитов.ЕдиницаИзмерения, " ", "")];
	
	ОкругленноеЧисло = Окр(ИсходноеЧисло / Делитель, СтруктураРеквизитов.ТочностьЕдиницыИзмерения) * Делитель;
	
	Возврат ОкругленноеЧисло;
	
КонецФункции

Функция СтруктураРеквизитовОтчета(ДанныеОтчета = Неопределено)
	
	СтруктураРеквизитов = Новый Структура;
	
	СоответствиеЕдиницыИзмеренияДелителю = Новый Структура;
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1", 1);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000", 1000);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000000", 1000000);
	
	СтруктураРеквизитов.Вставить("СоответствиеЕдиницыИзмеренияДелителю", СоответствиеЕдиницыИзмеренияДелителю);
	
	Если ДанныеОтчета = Неопределено Тогда 
		СтруктураРеквизитов.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
		СтруктураРеквизитов.Вставить("ТочностьЕдиницыИзмерения", 0);
	Иначе
		СтруктураРеквизитов.Вставить("ЕдиницаИзмерения", ДанныеОтчета.ЕдиницаИзмерения);
		СтруктураРеквизитов.Вставить("ТочностьЕдиницыИзмерения", ДанныеОтчета.ТочностьЕдиницыИзмерения);
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Процедура устанавливает значение реквизита "Вид" формы РСВ-1.
//
// Параметры:
//  Ссылка              - ДокументСсылка.РегламентированныйОтчет;
//  КорректирующаяФорма - булево.
//
Процедура УстановитьВидФормыРСВ_1(Ссылка, КорректирующаяФорма) Экспорт
	
	ОбъектРегОтчет = Ссылка.ПолучитьОбъект();
	ОбъектРегОтчет.Вид = ?(КорректирующаяФорма, 1, 0);
	ОбъектРегОтчет.Записать();
	
КонецПроцедуры

// Функция определяет для организации, подключен ли документооборот с контролирующим органом.
//
// Параметры:
//  Организация			 - СправочникСсылка.Организации - Организация, для которой определяется
//		наличие подключенного документооборота с контролирующим органом.
//  КонтролирующийОрган	 - Перечисление.ТипыКонтролирующихОрганов - контролирующий орган, для 
//		которого определяется наличие подключения.
// Возвращаемое значение:
//  Булево - Истина, если документооборот с контролирующим органом подключен.
Функция ПодключенДокументооборотСКонтролирующимОрганом(Организация, КонтролирующийОрган) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КонтекстЭДОСервер 			= ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	ДокументооборотПодключен 	= КонтекстЭДОСервер.ПодключенДокументооборотСКонтролирующимОрганом(Организация, КонтролирующийОрган);
	
	Возврат ДокументооборотПодключен;
	
КонецФункции
