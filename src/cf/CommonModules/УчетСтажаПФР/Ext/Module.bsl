
#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора = Неопределено, РежимЗагрузки = Ложь) Экспорт
	УчетСтажаПФРВнутренний.ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, РежимЗагрузки);		
КонецПроцедуры	

Функция РесурсыУчетаСтажаПФР() Экспорт	
	Возврат УчетСтажаПФРВнутренний.РесурсыУчетаСтажаПФР();
КонецФункции

Функция ДанныеДляРегистрацииВУчетеСтажаПФР() Экспорт
	ДанныеДляРегистрации = Новый Структура;
	ДанныеДляРегистрации.Вставить("ТипДоговора", Перечисления.ТипыДоговоровСЗВ63.Трудовой);
	ДанныеДляРегистрации.Вставить("РегистрируемыеПериоды", Новый Массив);
	
	Возврат ДанныеДляРегистрации;
КонецФункции	

Функция ДанныеДляРегистрацииДоговоровГПХВУчетеСтажаПФР() Экспорт
	ДанныеДляРегистрации = Новый Структура;
	ДанныеДляРегистрации.Вставить("ТипДоговора", Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой);
	ДанныеДляРегистрации.Вставить("РегистрируемыеПериоды", Новый Массив);
	
	Возврат ДанныеДляРегистрации;	
КонецФункции

Функция ОписаниеРегистрируемогоПериода() Экспорт
	ОписаниеРегистрируемогоПериода = Новый Структура;
	ОписаниеРегистрируемогоПериода.Вставить("Сотрудник");
	ОписаниеРегистрируемогоПериода.Вставить("ДатаНачалаПериода");
	ОписаниеРегистрируемогоПериода.Вставить("ДатаОкончанияПериода");
	ОписаниеРегистрируемогоПериода.Вставить("Состояние");
	ОписаниеРегистрируемогоПериода.Вставить("ВидЗанятости");
	ОписаниеРегистрируемогоПериода.Вставить("ДатаНачалаСобытия");

	Возврат ОписаниеРегистрируемогоПериода;
	
КонецФункции	

Функция ДобавитьЗаписьВДанныеДляРегистрацииВУчета(РегистрируемыеДанные, ОписаниеРегистрируемогоПериода) Экспорт 
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Сотрудник", ОписаниеРегистрируемогоПериода.Сотрудник);
	СтруктураЗаписи.Вставить("ДатаНачалаПериода", ОписаниеРегистрируемогоПериода.ДатаНачалаПериода);
	СтруктураЗаписи.Вставить("ДатаОкончанияПериода", ОписаниеРегистрируемогоПериода.ДатаОкончанияПериода);
	СтруктураЗаписи.Вставить("Состояние", ОписаниеРегистрируемогоПериода.Состояние);
	СтруктураЗаписи.Вставить("ВидЗанятости", ОписаниеРегистрируемогоПериода.ВидЗанятости);
	СтруктураЗаписи.Вставить("ЗначенияРесурсов", Новый Структура);
	
	Если ЗначениеЗаполнено(ОписаниеРегистрируемогоПериода.ДатаНачалаСобытия) Тогда
		СтруктураЗаписи.Вставить("ДатаНачалаСобытия", ОписаниеРегистрируемогоПериода.ДатаНачалаСобытия);
	Иначе
		СтруктураЗаписи.Вставить("ДатаНачалаСобытия", ОписаниеРегистрируемогоПериода.ДатаНачалаПериода);              
	КонецЕсли;	
	
	РегистрируемыеДанные.РегистрируемыеПериоды.Добавить(СтруктураЗаписи);
	
	Возврат СтруктураЗаписи;
КонецФункции	

Процедура УстановитьЗначениеРегистрируемогоРесурса(СтруктураЗаписи, Ресурс, ЗначениеРесурса) Экспорт
	СтруктураЗаписи.ЗначенияРесурсов.Вставить(Ресурс, ЗначениеРесурса);	
КонецПроцедуры	

Процедура ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, РегистрируемыеДанные) Экспорт
	Если РегистрируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РегистрируемыеДанные.ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой Тогда
		ЗарегистрироватьПериодыПоТрудовогмуДоговору(Движения, РегистрируемыеДанные.РегистрируемыеПериоды);
	Иначе
		ЗарегистрироватьПериодыДоговоровГПХ(Движения, РегистрируемыеДанные.РегистрируемыеПериоды);	
	КонецЕсли;	
КонецПроцедуры	

Процедура ЗарегистрироватьПериодыПоТрудовогмуДоговору(Движения, РегистрируемыеДанные)
	ТаблицаФильтрПолученияВидаЗанятости = Новый ТаблицаЗначений;
	ТаблицаФильтрПолученияВидаЗанятости.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаФильтрПолученияВидаЗанятости.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	ВидыЗанятостиСотрудников = ВидыЗанятостиСотрудников(РегистрируемыеДанные);	
	
	Сотрудники = ВидыЗанятостиСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	ГоловныеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ГоловнаяОрганизация");
	
	ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.Трудовой;
	
	СтруктураПоиска = Новый Структура("Сотрудник, Период");
	Для Каждого ДанныеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		СтруктураПоиска.Сотрудник = ДанныеРегистрируемогоПериода.Сотрудник;
		СтруктураПоиска.Период = ДанныеРегистрируемогоПериода.ДатаНачалаПериода;
		
		ВидЗанятости = ВидЗанятостиСотрудникаНаНачалоПериода(ВидыЗанятостиСотрудников, СтруктураПоиска);
		ГоловнаяОрганизация = ГоловныеОрганизации[ДанныеРегистрируемогоПериода.Сотрудник]; 
		ФизическоеЛицо = ФизическиеЛицаСотрудников[ДанныеРегистрируемогоПериода.Сотрудник];
		
		Если ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы
			Или ВидЗанятости = Перечисления.ВидыЗанятости.Совместительство Тогда
			
			ДобавитьЗаписьВНаборРегистраУчетаСтажа(
				Движения.ПараметрыПериодовСтажаПФР, 
				ГоловнаяОрганизация,
				ФизическоеЛицо, 
				ТипДоговора, 
				ДанныеРегистрируемогоПериода);
			
		КонецЕсли;		
			
	КонецЦикла;	
	
	Движения.ПараметрыПериодовСтажаПФР.Записывать = Истина;
КонецПроцедуры	

Процедура ЗарегистрироватьПериодыДоговоровГПХ(Движения, РегистрируемыеДанные) 
	МассивСотрудников = Новый Массив;
	
	Для Каждого ОписаниеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		МассивСотрудников.Добавить(ОписаниеРегистрируемогоПериода.Сотрудник);	
	КонецЦикла;	
	
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСотрудников, "ФизическоеЛицо");
	ГоловныеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСотрудников, "ГоловнаяОрганизация");
	
	ТипДоговора = Перечисления.ТипыДоговоровСЗВ63.ГражданскоПравовой;
	
	Для Каждого ДанныеРегистрируемогоПериода Из РегистрируемыеДанные Цикл
		ГоловнаяОрганизация = ГоловныеОрганизации[ДанныеРегистрируемогоПериода.Сотрудник]; 
		ФизическоеЛицо = ФизическиеЛицаСотрудников[ДанныеРегистрируемогоПериода.Сотрудник];
							
		ДобавитьЗаписьВНаборРегистраУчетаСтажа(
			Движения.ПараметрыПериодовСтажаПФР, 
			ГоловнаяОрганизация,
			ФизическоеЛицо, 
			ТипДоговора, 
			ДанныеРегистрируемогоПериода);
				
	КонецЦикла;	
	
	Движения.ПараметрыПериодовСтажаПФР.Записывать = Истина;		
КонецПроцедуры

Процедура ДобавитьЗаписьВНаборРегистраУчетаСтажа(НаборЗаписей, ГоловнаяОрганизация, ФизическоеЛицо, ТипДоговора, ДанныеРегистрируемогоПериода)
	// Периоды до 2010 года в учете стажа ПФР нам учитывать не нужно.
	Если ЗначениеЗаполнено(ДанныеРегистрируемогоПериода.ДатаОкончанияПериода)
		И ДанныеРегистрируемогоПериода.ДатаОкончанияПериода < '20100101' Тогда
		
		Возврат;
	КонецЕсли;	
	
	ЗаписьНабора = НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей);
	
	ЗаписьНабора.ГоловнаяОрганизация = ГоловнаяОрганизация;
	ЗаписьНабора.ФизическоеЛицо = ФизическоеЛицо;
	ЗаписьНабора.ТипДоговора = ТипДоговора;
	ЗаписьНабора.ДатаНачалаСобытия = ДанныеРегистрируемогоПериода.ДатаНачалаСобытия;
	ЗаписьНабора.Начало = ДанныеРегистрируемогоПериода.ДатаНачалаПериода;
	ЗаписьНабора.Окончание = ДанныеРегистрируемогоПериода.ДатаОкончанияПериода;
	ЗаписьНабора.Приоритет = ДанныеРегистрируемогоПериода.Состояние;	
	
	Для Каждого РегистрируемыйРесурс Из ДанныеРегистрируемогоПериода.ЗначенияРесурсов Цикл
		ЗаписьНабора[РегистрируемыйРесурс.Ключ] = РегистрируемыйРесурс.Значение;
		ЗаписьНабора["ИспользованиеРесурса" + РегистрируемыйРесурс.Ключ] = Перечисления.ЗначениеРесурсаРегистровСостоянийСотрудника.Установлено;
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗарегистрироватьСторноПериодовСтажаПФР(Движения, ДокументСсылка, СторнируемыйДокумент) Экспорт
	ЗарплатаКадры.ЗарегистрироватьСторноИсходныхДанныхСостояний(Движения, "ПараметрыПериодовСтажаПФР", ДокументСсылка, СторнируемыйДокумент);	
КонецПроцедуры	

Функция НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей)
	Возврат УчетСтажаПФРВнутренний.НоваяЗаписьНабораРегистраУчетаСтажаПФР(НаборЗаписей);	
КонецФункции	

Функция ВидыЗанятостиСотрудников(РегистрируемыеДанные)
	ТаблицаФильтрПолученияВидаЗанятости = Новый ТаблицаЗначений;
	ТаблицаФильтрПолученияВидаЗанятости.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаФильтрПолученияВидаЗанятости.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	УказанныеВидыЗанятости = Новый ТаблицаЗначений;
	УказанныеВидыЗанятости.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	УказанныеВидыЗанятости.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	УказанныеВидыЗанятости.Колонки.Добавить("ВидЗанятости", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗанятости"));
	
	Для Каждого РегистрируемыйПериод Из РегистрируемыеДанные Цикл
		Если Не ЗначениеЗаполнено(РегистрируемыйПериод.ВидЗанятости) Тогда
			СтрокаТаблицыФильтра = ТаблицаФильтрПолученияВидаЗанятости.Добавить();
			СтрокаТаблицыФильтра.Сотрудник = РегистрируемыйПериод.Сотрудник;
			СтрокаТаблицыФильтра.Период = РегистрируемыйПериод.ДатаНачалаПериода;
		Иначе
			СтрокаТаблицыУказанныеВидыЗанятости = УказанныеВидыЗанятости.Добавить();
			СтрокаТаблицыУказанныеВидыЗанятости.Сотрудник = РегистрируемыйПериод.Сотрудник;
			СтрокаТаблицыУказанныеВидыЗанятости.Период = РегистрируемыйПериод.ДатаНачалаПериода;
			СтрокаТаблицыУказанныеВидыЗанятости.ВидЗанятости = РегистрируемыйПериод.ВидЗанятости;
		КонецЕсли;			
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаФильтрПолученияВидаЗанятости", ТаблицаФильтрПолученияВидаЗанятости);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаФильтрПолученияВидаЗанятости.Сотрудник,
	|	ТаблицаФильтрПолученияВидаЗанятости.Период
	|ПОМЕСТИТЬ ВТСотрудникиПериоды
	|ИЗ
	|	&ТаблицаФильтрПолученияВидаЗанятости КАК ТаблицаФильтрПолученияВидаЗанятости";
	
	Запрос.Выполнить();
	
	ПараметрыПолученияКадровыхДанных = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
											Запрос.МенеджерВременныхТаблиц,
											"ВТСотрудникиПериоды");
											
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(
		ПараметрыПолученияКадровыхДанных,
		Ложь,
		"ВидЗанятости");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеСотрудников.Сотрудник,
	|	КадровыеДанныеСотрудников.ВидЗанятости,
	|	КадровыеДанныеСотрудников.Период
	|ИЗ
	|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
	
	ВидыЗанятостиСотрудников = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(УказанныеВидыЗанятости, ВидыЗанятостиСотрудников);
	
	ВидыЗанятостиСотрудников.Индексы.Добавить("Сотрудник, Период");
	
	Возврат ВидыЗанятостиСотрудников;
КонецФункции	

Функция ВидЗанятостиСотрудникаНаНачалоПериода(ВидыЗанятостиСотрудников, СтруктураПоиска) 
	НайденныеСтроки = ВидыЗанятостиСотрудников.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Перечисления.ВидыЗанятости.ПустаяСсылка();
	Иначе
		Возврат НайденныеСтроки[0].ВидЗанятости;
	КонецЕсли;	
	
КонецФункции	

Функция ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР() Экспорт
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР = Новый Структура;
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("Организация");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("НачалоПериода");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("ОкончаниеПериода");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("ИмяВТОтбор");
	ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР.Вставить("ИзмеренияОтбора", Новый Массив);
	
	Возврат ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР;
	
КонецФункции

Процедура СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбора, ИмяВТРезультат = "ВТДанныеУчетаСтажаПФР") Экспорт
	Если ПараметрыОтбора.НачалоПериода = Неопределено Тогда
		НачалоПериода = '20100101';
	Иначе
		НачалоПериода = ПараметрыОтбора.НачалоПериода;	
	КонецЕсли;	
	
	Если ПараметрыОтбора.ОкончаниеПериода = Неопределено Тогда
		ТекущийПериод = НачалоКвартала(ТекущаяДатаСеанса());
		ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ПредшествующийОтчетныйПериодПерсУчета(ТекущийПериод);
	Иначе
		ОкончаниеПериода = ПараметрыОтбора.ОкончаниеПериода;	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(Запрос.МенеджерВременныхТаблиц);
	СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(Запрос.МенеджерВременныхТаблиц);
	СоздатьВТОтчетныеПериоды(Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(
		Запрос.МенеджерВременныхТаблиц,
		НачалоПериода,
		ОкончаниеПериода,
		"МЕСЯЦ");                                            
		
	Запрос.УстановитьПараметр("Организация", ПараметрыОтбора.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", НачалоДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("ПараметрыСтажаСПравомНаДосрочнуюПенсию2014", ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2014());
	Запрос.УстановитьПараметр("ПараметрыСтажаСПравомНаДосрочнуюПенсию2013", ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2013());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыСтажаПФР.ГоловнаяОрганизация,
	|	ПериодыСтажаПФР.ФизическоеЛицо,
	|	ПериодыСтажаПФР.ТипДоговора,
	|	ОтчетныеПериоды.ОтчетныйПериод,
	|	ВЫБОР
	|		КОГДА ПериодыСтажаПФР.Начало < ОтчетныеПериоды.ОтчетныйПериод
	|			ТОГДА ОтчетныеПериоды.ОтчетныйПериод
	|		ИНАЧЕ ПериодыСтажаПФР.Начало
	|	КОНЕЦ КАК Начало,
	|	ВЫБОР
	|		КОГДА ПериодыСтажаПФР.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ПериодыСтажаПФР.Окончание > ОтчетныеПериоды.ОкончаниеПериода
	|			ТОГДА ОтчетныеПериоды.ОкончаниеПериода
	|		ИНАЧЕ ПериодыСтажаПФР.Окончание
	|	КОНЕЦ КАК Окончание,
	|	ПериодыСтажаПФР.ВидСтажаПФР,
	|	ПериодыСтажаПФР.Организация,
	|	ВЫБОР
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014
	|				И ПериодыСтажаПФР.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСЗВ63.ГражданскоПравовой)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДОГОВОР)
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014
	|			ТОГДА СоответствиеВидовСтажаПараметрамИсчисления2014.ПараметрИсчисляемогоСтажа
	|		ИНАЧЕ СоответствиеВидовСтажаПараметрамИсчисления2013.ПараметрИсчисляемогоСтажа
	|	КОНЕЦ КАК ТретийПараметрИсчисляемогоСтажа,
	|	ВЫБОР
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014
	|				И СоответствиеВидовСтажаПараметрамИсчисления2014.ПараметрИсчисляемогоСтажа В (&ПараметрыСтажаСПравомНаДосрочнуюПенсию2014)
	|				И ПериодыСтажаПФР.ВидСтажаПФР <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.ВключаетсяВСтраховойСтаж)
	|			ТОГДА ИСТИНА
	|		КОГДА ОтчетныеПериоды.ИспользоватьПараметрыСтажа2013
	|				И СоответствиеВидовСтажаПараметрамИсчисления2013.ПараметрИсчисляемогоСтажа В (&ПараметрыСтажаСПравомНаДосрочнуюПенсию2013)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПравоНаЛьготныйСтаж,
	|	NULL КАК СтруктурнаяЕдиница,
	|	NULL КАК Должность,
	|	NULL КАК КоличествоСтавок,
	|	NULL КАК НеполныйРабочийДень,
	|	NULL КАК ОснованиеДосрочногоНазначенияПенсии,
	|	NULL КАК КодПозицииСписка,
	|	NULL КАК ТерриториальныеУсловия,
	|	NULL КАК ОсобыеУсловияТруда,
	|	NULL КАК ЗарегистрированоЗначениеТерриториальныеУсловия,
	|	NULL КАК ЗарегистрированоЗначениеОснованиеВыслугиЛет,
	|	NULL КАК ЗарегистрированоЗначениеОсобыеУсловияТруда
	|ПОМЕСТИТЬ ВТИсходныеДанныеУчетаСтажа
	|ИЗ
	|	РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
	|		ПО (&УсловияСвязиПоИзмерениям)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтчетныеПериоды КАК ОтчетныеПериоды
	|		ПО ПериодыСтажаПФР.Начало <= ОтчетныеПериоды.ОкончаниеПериода
	|			И (ПериодыСтажаПФР.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ПериодыСтажаПФР.Окончание >= ОтчетныеПериоды.ОтчетныйПериод)
	|			И (ПериодыСтажаПФР.ВидСтажаПФР <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж))
	|			И (&УсловиеОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовСтажаПараметрамИсчисления2014 КАК СоответствиеВидовСтажаПараметрамИсчисления2014
	|		ПО ПериодыСтажаПФР.ВидСтажаПФР = СоответствиеВидовСтажаПараметрамИсчисления2014.ВидСтажа
	|			И (ОтчетныеПериоды.ИспользоватьПараметрыСтажа2014)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовСтажаПараметрамИсчисления2013 КАК СоответствиеВидовСтажаПараметрамИсчисления2013
	|		ПО ПериодыСтажаПФР.ВидСтажаПФР = СоответствиеВидовСтажаПараметрамИсчисления2013.ВидСтажа
	|			И (ОтчетныеПериоды.ИспользоватьПараметрыСтажа2013)";
	
	ТекстыДополнителныхПолейЗапроса = ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР();
	                                                            
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "КоличествоСтавок", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "НеполныйРабочийДень", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ОснованиеДосрочногоНазначенияПенсии", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "КодПозицииСписка", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ТерриториальныеУсловия", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ОсобыеУсловияТруда", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеТерриториальныеУсловия", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеОснованиеВыслугиЛет", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "ЗарегистрированоЗначениеОсобыеУсловияТруда", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "СтруктурнаяЕдиница", ТекстыДополнителныхПолейЗапроса);
	УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, "Должность", ТекстыДополнителныхПолейЗапроса);

	
	Если ПараметрыОтбора.ИмяВТОтбор = Неопределено Тогда
		ПодстрокаЗамены = "ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФильтр КАК Фильтр
						   |		ПО (&УсловияСвязиПоИзмерениям)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ПодстрокаЗамены, "");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТФильтр", ПараметрыОтбора.ИмяВТОтбор);	
		
		УсловиеСвязи = "";
		Для Каждого ИзмерениеФильтра Из ПараметрыОтбора.ИзмеренияОтбора Цикл 
			УсловиеСвязи = УсловиеСвязи + "
										|	И ПериодыСтажаПФР." + ИзмерениеФильтра + " = Фильтр." + ИзмерениеФильтра;
		КонецЦикла;
		
		УсловиеСвязи = Сред(УсловиеСвязи, 4);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияСвязиПоИзмерениям", УсловиеСвязи);
	КонецЕсли;	
	
	Если ПараметрыОтбора.Организация = Неопределено Тогда
		ТекстУсловияОрганизация = "ИСТИНА";
	Иначе
		ТекстУсловияОрганизация = "ПериодыСтажаПФР.Организация = &Организация";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОрганизация", ТекстУсловияОрганизация);

	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанныеУчетаСтажа.СтруктурнаяЕдиница,
	|	&НачалоПериода КАК ДатаНачала,
	|	&ОкончаниеПериода КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПодразделения
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТИсходныеДанныеУчетаСтажа.Должность,
	|	&НачалоПериода КАК ДатаНачала,
	|	&ОкончаниеПериода КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТДолжности
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ВТИсходныеДанныеУчетаСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	Периоды.Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаПериоды
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа,
	|	ВТПериоды КАК Периоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСоответствиеВидовСтажаПараметрамИсчисления2013
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСоответствиеВидовСтажаПараметрамИсчисления2014
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериоды";
	
	Запрос.Выполнить();
	
	УчетСтраховыхВзносов.СформироватьВТДанныеОПравахНаСтрахование(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛицаПериоды",
		Ложь);
				
	ПараметрыПолученияДанных = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ПараметрыПолученияДанных.ВключатьЗаписиНаНачалоПериода = Истина;		
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
							"ВТПодразделения",
							"СтруктурнаяЕдиница");
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"ТерриториальныеУсловияПФР",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПолученияДанных);
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
							"ВТДолжности",
							"Должность");
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"КлассыУсловийТрудаПоДолжностям",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПолученияДанных);
		
	ПерсонифицированныйУчет.СоздатьВТИнтервалыПоТаблицеДат(
		Запрос.МенеджерВременныхТаблиц, 
		"ВТДанныеОПравахНаСтрахование", 
		"МЕСЯЦ",
		"ФизическоеЛицо, ЗастрахованПФР, ГоловнаяОрганизация",  
		"ВТПраваНаСтрахованиеИнтервалы");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	ТерриториальныеУсловияПФРПоПериодам.Период
	|ПОМЕСТИТЬ ВТПериодыИзмененияДанных
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловияПФРПоПериодам
	|		ПО ИсходныеДанныеУчетаСтажа.Начало <= ТерриториальныеУсловияПФРПоПериодам.Период
	|			И ИсходныеДанныеУчетаСтажа.Окончание >= ТерриториальныеУсловияПФРПоПериодам.Период
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	КлассыУсловийТрудаПоДолжностям.Период
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО (КлассыУсловийТрудаПоДолжностям.Должность = ИсходныеДанныеУчетаСтажа.Должность)
	|			И (КлассыУсловийТрудаПоДолжностям.Период >= ИсходныеДанныеУчетаСтажа.Начало)
	|			И (КлассыУсловийТрудаПоДолжностям.Период <= ИсходныеДанныеУчетаСтажа.Окончание)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПраваНаСтрахованиеИнтервалы.ГоловнаяОрганизация,
	|	ПраваНаСтрахованиеИнтервалы.ФизическоеЛицо,
	|	ПраваНаСтрахованиеИнтервалы.ДатаНачалаИнтервала
	|ИЗ
	|	ВТПраваНаСтрахованиеИнтервалы КАК ПраваНаСтрахованиеИнтервалы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПраваНаСтрахованиеИнтервалы.ГоловнаяОрганизация,
	|	ПраваНаСтрахованиеИнтервалы.ФизическоеЛицо,
	|	ПраваНаСтрахованиеИнтервалы.ДатаОкончанияИнтервала
	|ИЗ
	|	ВТПраваНаСтрахованиеИнтервалы КАК ПраваНаСтрахованиеИнтервалы
	|ГДЕ
	|	ПраваНаСтрахованиеИнтервалы.ДатаОкончанияИнтервала < &ОкончаниеПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	ИсходныеДанныеУчетаСтажа.Начало
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыИзмененияДанных.ГоловнаяОрганизация,
	|	ПериодыИзмененияДанных.ФизическоеЛицо,
	|	ПериодыИзмененияДанных.Период,
	|	ИсходныеДанныеУчетаСтажа.Начало,
	|	ИсходныеДанныеУчетаСтажа.СтруктурнаяЕдиница,
	|	ИсходныеДанныеУчетаСтажа.Должность,
	|	ИсходныеДанныеУчетаСтажа.Окончание
	|ПОМЕСТИТЬ ВТКлючиДляСрезаПериодическихДанных
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодыИзмененияДанных КАК ПериодыИзмененияДанных
	|		ПО ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация = ПериодыИзмененияДанных.ГоловнаяОрганизация
	|			И ИсходныеДанныеУчетаСтажа.ФизическоеЛицо = ПериодыИзмененияДанных.ФизическоеЛицо
	|			И ИсходныеДанныеУчетаСтажа.Начало <= ПериодыИзмененияДанных.Период
	|			И ИсходныеДанныеУчетаСтажа.Окончание >= ПериодыИзмененияДанных.Период
	|";
	
	Запрос.Выполнить();
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлючиДляСрезаПериодическихДанных.ГоловнаяОрганизация,
	|	КлючиДляСрезаПериодическихДанных.ФизическоеЛицо,
	|	КлючиДляСрезаПериодическихДанных.Период,
	|	КлючиДляСрезаПериодическихДанных.Начало,
	|	КлючиДляСрезаПериодическихДанных.СтруктурнаяЕдиница,
	|	КлючиДляСрезаПериодическихДанных.Должность,
	|	МАКСИМУМ(ТерриториальныеУсловия.Период) КАК ДатаСрезаТерриториальныхУсловий,
	|	МАКСИМУМ(КлассыУсловийТрудаПоДолжностям.Период) КАК ДатаСрезаКлассаУсловийТруда,
	|	КлючиДляСрезаПериодическихДанных.Окончание
	|ПОМЕСТИТЬ ВТДатыСрезаПериодическихДанных
	|ИЗ
	|	ВТКлючиДляСрезаПериодическихДанных КАК КлючиДляСрезаПериодическихДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловия
	|		ПО КлючиДляСрезаПериодическихДанных.СтруктурнаяЕдиница = ТерриториальныеУсловия.СтруктурнаяЕдиница
	|			И КлючиДляСрезаПериодическихДанных.Период >= ТерриториальныеУсловия.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО КлючиДляСрезаПериодическихДанных.Должность = КлассыУсловийТрудаПоДолжностям.Должность
	|			И КлючиДляСрезаПериодическихДанных.Период >= КлассыУсловийТрудаПоДолжностям.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиДляСрезаПериодическихДанных.ГоловнаяОрганизация,
	|	КлючиДляСрезаПериодическихДанных.ФизическоеЛицо,
	|	КлючиДляСрезаПериодическихДанных.Период,
	|	КлючиДляСрезаПериодическихДанных.СтруктурнаяЕдиница,
	|	КлючиДляСрезаПериодическихДанных.Должность,
	|	КлючиДляСрезаПериодическихДанных.Начало,
	|	КлючиДляСрезаПериодическихДанных.Окончание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКлючиДляСрезаПериодическихДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДолжности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыИзмененияДанных";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыСрезаПериодическихДанных.ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА ТерриториальныеУсловияПоПериодам.ТерриториальныеУсловияПФР = ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПРОЧ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)
	|		ИНАЧЕ ТерриториальныеУсловияПоПериодам.ТерриториальныеУсловияПФР
	|	КОНЕЦ КАК ТерриториальныеУсловияПФР,
	|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда,
	|	ДанныеОПравахНаСтрахование.ЗастрахованПФР,
	|	ДатыСрезаПериодическихДанных.ФизическоеЛицо,
	|	ДатыСрезаПериодическихДанных.Период,
	|	ДатыСрезаПериодическихДанных.Начало,
	|	ДатыСрезаПериодическихДанных.Окончание,
	|	ДатыСрезаПериодическихДанных.СтруктурнаяЕдиница,
	|	ДатыСрезаПериодическихДанных.Должность
	|ПОМЕСТИТЬ ВТЗначениеПериодическихПараметровСтажа
	|ИЗ
	|	ВТДатыСрезаПериодическихДанных КАК ДатыСрезаПериодическихДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтрахованиеИнтервалы КАК ДанныеОПравахНаСтрахование
	|		ПО ДатыСрезаПериодическихДанных.ГоловнаяОрганизация = ДанныеОПравахНаСтрахование.ГоловнаяОрганизация
	|			И ДатыСрезаПериодическихДанных.ФизическоеЛицо = ДанныеОПравахНаСтрахование.ФизическоеЛицо
	|			И (ДатыСрезаПериодическихДанных.Период МЕЖДУ ДанныеОПравахНаСтрахование.ДатаНачалаИнтервала И ДанныеОПравахНаСтрахование.ДатаОкончанияИнтервала)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО ДатыСрезаПериодическихДанных.Должность = КлассыУсловийТрудаПоДолжностям.Должность
	|			И ДатыСрезаПериодическихДанных.ДатаСрезаКлассаУсловийТруда = КлассыУсловийТрудаПоДолжностям.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТерриториальныеУсловияПФР КАК ТерриториальныеУсловияПоПериодам
	|		ПО ДатыСрезаПериодическихДанных.ДатаСрезаТерриториальныхУсловий = ТерриториальныеУсловияПоПериодам.Период
	|			И ДатыСрезаПериодическихДанных.СтруктурнаяЕдиница = ТерриториальныеУсловияПоПериодам.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыСрезаПериодическихДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПраваНаСтрахованиеИнтервалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКлассыУсловийТрудаПоДолжностям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТерриториальныеУсловияПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеОПравахНаСтрахование";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначениеПериодическихПараметровСтажа.ГоловнаяОрганизация,
	|	ЗначениеПериодическихПараметровСтажа.ФизическоеЛицо,
	|	ЗначениеПериодическихПараметровСтажа.ТерриториальныеУсловияПФР,
	|	ЗначениеПериодическихПараметровСтажа.КлассУсловийТруда,
	|	ЗначениеПериодическихПараметровСтажа.ЗастрахованПФР,
	|	ЗначениеПериодическихПараметровСтажа.Период КАК ДатаНачалаПериода,
	|	ЗначениеПериодическихПараметровСтажа.СтруктурнаяЕдиница,
	|	ЗначениеПериодическихПараметровСтажа.Начало КАК НачалоИсходногоПериода,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЗначениеПериодическихПараметровСтажаСлед.Период ЕСТЬ NULL 
	|				ТОГДА ЗначениеПериодическихПараметровСтажа.Окончание
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(ЗначениеПериодическихПараметровСтажаСлед.Период, ДЕНЬ, -1)
	|		КОНЕЦ) КАК ДатаОкончанияПериода,
	|	ЗначениеПериодическихПараметровСтажа.Должность
	|ПОМЕСТИТЬ ВТПериодическиеПараметрыСтажаИнтервалы
	|ИЗ
	|	ВТЗначениеПериодическихПараметровСтажа КАК ЗначениеПериодическихПараметровСтажа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначениеПериодическихПараметровСтажа КАК ЗначениеПериодическихПараметровСтажаСлед
	|		ПО ЗначениеПериодическихПараметровСтажа.ГоловнаяОрганизация = ЗначениеПериодическихПараметровСтажаСлед.ГоловнаяОрганизация
	|			И ЗначениеПериодическихПараметровСтажа.ФизическоеЛицо = ЗначениеПериодическихПараметровСтажаСлед.ФизическоеЛицо
	|			И ЗначениеПериодическихПараметровСтажа.Начало = ЗначениеПериодическихПараметровСтажаСлед.Начало
	|			И ЗначениеПериодическихПараметровСтажа.Окончание = ЗначениеПериодическихПараметровСтажаСлед.Окончание
	|			И ЗначениеПериодическихПараметровСтажа.Период < ЗначениеПериодическихПараметровСтажаСлед.Период
	|ГДЕ
	|	ЗначениеПериодическихПараметровСтажа.ЗастрахованПФР
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначениеПериодическихПараметровСтажа.ГоловнаяОрганизация,
	|	ЗначениеПериодическихПараметровСтажа.ФизическоеЛицо,
	|	ЗначениеПериодическихПараметровСтажа.ТерриториальныеУсловияПФР,
	|	ЗначениеПериодическихПараметровСтажа.КлассУсловийТруда,
	|	ЗначениеПериодическихПараметровСтажа.ЗастрахованПФР,
	|	ЗначениеПериодическихПараметровСтажа.Период,
	|	ЗначениеПериодическихПараметровСтажа.СтруктурнаяЕдиница,
	|	ЗначениеПериодическихПараметровСтажа.Начало,
	|	ЗначениеПериодическихПараметровСтажа.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗначениеПериодическихПараметровСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтчетныеПериоды";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация,
	|	ИсходныеДанныеУчетаСтажа.Организация,
	|	ИсходныеДанныеУчетаСтажа.ОтчетныйПериод,
	|	ИсходныеДанныеУчетаСтажа.ФизическоеЛицо,
	|	ИсходныеДанныеУчетаСтажа.ТипДоговора,
	|	ПериодическиеПараметрыСтажаИнтервалы.ДатаНачалаПериода,
	|	ПериодическиеПараметрыСтажаИнтервалы.ДатаОкончанияПериода,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеОснованиеВыслугиЛет
	|				И ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии В (ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_11ВП), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_11ГР), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_12), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_14), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_15), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_СП), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.САМОЛЕТ))
	|				И ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)
	|	КОНЕЦ КАК ОснованиеВыслугиЛет,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеОсобыеУсловияТруда
	|				И ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда
	|		КОГДА ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый))
	|				И ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.Ст28_СЕВ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда В (ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.Ст27_3), ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.Ст27_4))
	|				И ИсходныеДанныеУчетаСтажа.ФизическоеЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|	КОНЕЦ КАК ОсобыеУсловияТруда,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии = ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка)
	|				И ИсходныеДанныеУчетаСтажа.ОсобыеУсловияТруда = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КодПозицииСписка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ПустаяСсылка)
	|	КОНЕЦ КАК КодПозицииСписка,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|				И ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеТерриториальныеУсловия
	|			ТОГДА ИсходныеДанныеУчетаСтажа.ТерриториальныеУсловия
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА ЕСТЬNULL(ПериодическиеПараметрыСтажаИнтервалы.ТерриториальныеУсловияПФР, ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка)
	|	КОНЕЦ КАК ТерриториальныеУсловия,
	|	ВЫБОР
	|		КОГДА ИсходныеДанныеУчетаСтажа.ЗарегистрированоЗначениеТерриториальныеУсловия
	|				И ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|				И ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|				И ИсходныеДанныеУчетаСтажа.ТерриториальныеУсловия В (ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКСР), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКСМ))
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КоличествоСтавок
	|		КОГДА НЕ ИсходныеДанныеУчетаСтажа.НеполныйРабочийДень
	|			ТОГДА 0
	|		КОГДА НЕ ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА 0
	|		КОГДА ПериодическиеПараметрыСтажаИнтервалы.ТерриториальныеУсловияПФР В (ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.МКСР), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.РКСМ))
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КоличествоСтавок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПараметрТерриториальныхУсловий,
	|	ВЫБОР
	|		КОГДА НЕ ИсходныеДанныеУчетаСтажа.ЕстьПравоНаЛьготныйСтаж
	|			ТОГДА 0
	|		КОГДА ИсходныеДанныеУчетаСтажа.ОснованиеДосрочногоНазначенияПенсии В (ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_ПД), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_ГДХР), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_СМ), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_СМХР), ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.Ст27_ГД))
	|			ТОГДА ИсходныеДанныеУчетаСтажа.КоличествоСтавок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТретийПараметрВыслугиЛет,
	|	ИсходныеДанныеУчетаСтажа.ТретийПараметрИсчисляемогоСтажа
	|ПОМЕСТИТЬ ВТДанныеУчетаСтажаПФРНеСгруппированные
	|ИЗ
	|	ВТИсходныеДанныеУчетаСтажа КАК ИсходныеДанныеУчетаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодическиеПараметрыСтажаИнтервалы КАК ПериодическиеПараметрыСтажаИнтервалы
	|		ПО ИсходныеДанныеУчетаСтажа.ГоловнаяОрганизация = ПериодическиеПараметрыСтажаИнтервалы.ГоловнаяОрганизация
	|			И ИсходныеДанныеУчетаСтажа.ФизическоеЛицо = ПериодическиеПараметрыСтажаИнтервалы.ФизическоеЛицо
	|			И ИсходныеДанныеУчетаСтажа.Начало = ПериодическиеПараметрыСтажаИнтервалы.НачалоИсходногоПериода
	|			И ИсходныеДанныеУчетаСтажа.СтруктурнаяЕдиница = ПериодическиеПараметрыСтажаИнтервалы.СтруктурнаяЕдиница
	|			И ИсходныеДанныеУчетаСтажа.Должность = ПериодическиеПараметрыСтажаИнтервалы.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачалоПериодовСтажа.ГоловнаяОрганизация,
	|	НачалоПериодовСтажа.Организация,
	|	НачалоПериодовСтажа.ОтчетныйПериод,
	|	НачалоПериодовСтажа.ФизическоеЛицо,
	|	НачалоПериодовСтажа.ТипДоговора,
	|	НачалоПериодовСтажа.ДатаНачалаПериода КАК ГраницаПериода,
	|	НачалоПериодовСтажа.ОснованиеВыслугиЛет,
	|	НачалоПериодовСтажа.ОсобыеУсловияТруда,
	|	НачалоПериодовСтажа.КодПозицииСписка,
	|	НачалоПериодовСтажа.ТерриториальныеУсловия,
	|	НачалоПериодовСтажа.ПараметрТерриториальныхУсловий,
	|	НачалоПериодовСтажа.ТретийПараметрВыслугиЛет,
	|	НачалоПериодовСтажа.ТретийПараметрИсчисляемогоСтажа,
	|	СУММА(НачалоПериодовСтажа.ПризнакГраницыПериодов) КАК ПризнакГраницыПериодов
	|ПОМЕСТИТЬ ВТГраницыПериодов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеУчетаСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		ДанныеУчетаСтажаПФР.Организация КАК Организация,
	|		ДанныеУчетаСтажаПФР.ОтчетныйПериод КАК ОтчетныйПериод,
	|		ДанныеУчетаСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДанныеУчетаСтажаПФР.ТипДоговора КАК ТипДоговора,
	|		ДанныеУчетаСтажаПФР.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|		ДанныеУчетаСтажаПФР.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|		ДанныеУчетаСтажаПФР.КодПозицииСписка КАК КодПозицииСписка,
	|		ДанныеУчетаСтажаПФР.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|		ДанныеУчетаСтажаПФР.ПараметрТерриториальныхУсловий КАК ПараметрТерриториальныхУсловий,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|		1 КАК ПризнакГраницыПериодов
	|	ИЗ
	|		ВТДанныеУчетаСтажаПФРНеСгруппированные КАК ДанныеУчетаСтажаПФР
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеУчетаСтажаПФР.ГоловнаяОрганизация,
	|		ДанныеУчетаСтажаПФР.Организация,
	|		ДанныеУчетаСтажаПФР.ОтчетныйПериод,
	|		ДанныеУчетаСтажаПФР.ФизическоеЛицо,
	|		ДанныеУчетаСтажаПФР.ТипДоговора,
	|		ДОБАВИТЬКДАТЕ(ДанныеУчетаСтажаПФР.ДатаОкончанияПериода, ДЕНЬ, 1),
	|		ДанныеУчетаСтажаПФР.ОснованиеВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ОсобыеУсловияТруда,
	|		ДанныеУчетаСтажаПФР.КодПозицииСписка,
	|		ДанныеУчетаСтажаПФР.ТерриториальныеУсловия,
	|		ДанныеУчетаСтажаПФР.ПараметрТерриториальныхУсловий,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрВыслугиЛет,
	|		ДанныеУчетаСтажаПФР.ТретийПараметрИсчисляемогоСтажа,
	|		-1
	|	ИЗ
	|		ВТДанныеУчетаСтажаПФРНеСгруппированные КАК ДанныеУчетаСтажаПФР) КАК НачалоПериодовСтажа
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалоПериодовСтажа.ГоловнаяОрганизация,
	|	НачалоПериодовСтажа.ОсобыеУсловияТруда,
	|	НачалоПериодовСтажа.КодПозицииСписка,
	|	НачалоПериодовСтажа.ТипДоговора,
	|	НачалоПериодовСтажа.ОснованиеВыслугиЛет,
	|	НачалоПериодовСтажа.Организация,
	|	НачалоПериодовСтажа.ОтчетныйПериод,
	|	НачалоПериодовСтажа.ФизическоеЛицо,
	|	НачалоПериодовСтажа.ДатаНачалаПериода,
	|	НачалоПериодовСтажа.ТерриториальныеУсловия,
	|	НачалоПериодовСтажа.ПараметрТерриториальныхУсловий,
	|	НачалоПериодовСтажа.ТретийПараметрВыслугиЛет,
	|	НачалоПериодовСтажа.ТретийПараметрИсчисляемогоСтажа
	|
	|ИМЕЮЩИЕ
	|	СУММА(НачалоПериодовСтажа.ПризнакГраницыПериодов) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачалоПериодов.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НачалоПериодов.Организация КАК Организация,
	|	НачалоПериодов.ОтчетныйПериод КАК ОтчетныйПериод,
	|	НачалоПериодов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачалоПериодов.ТипДоговора КАК ТипДоговора,
	|	НачалоПериодов.ГраницаПериода КАК ДатаНачалаПериода,
	|	НачалоПериодов.ОснованиеВыслугиЛет,
	|	НачалоПериодов.ОсобыеУсловияТруда,
	|	НачалоПериодов.КодПозицииСписка,
	|	НачалоПериодов.ТерриториальныеУсловия,
	|	НачалоПериодов.ПараметрТерриториальныхУсловий,
	|	НачалоПериодов.ТретийПараметрВыслугиЛет,
	|	МИНИМУМ(ДОБАВИТЬКДАТЕ(ОкончаниеПериодов.ГраницаПериода, ДЕНЬ, -1)) КАК ДатаОкончанияПериода,
	|	НачалоПериодов.ТретийПараметрИсчисляемогоСтажа,
	|	ЗНАЧЕНИЕ(Справочник.ОснованияИсчисляемогоСтраховогоСтажа.ПустаяСсылка) КАК ОснованиеИсчисляемогоСтажа,
	|	"""" КАК ПервыйПараметрИсчисляемогоСтажа,
	|	"""" КАК ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ПервыйПараметрВыслугиЛет,
	|	"""" КАК ВторойПараметрВыслугиЛет,
	|	ЛОЖЬ КАК ФиксСтаж,
	|	ИСТИНА КАК СложныйСтаж
	|ПОМЕСТИТЬ ВТДанныеУчетаСтажаПФР
	|ИЗ
	|	ВТГраницыПериодов КАК НачалоПериодов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТГраницыПериодов КАК ОкончаниеПериодов
	|		ПО НачалоПериодов.ГоловнаяОрганизация = ОкончаниеПериодов.ГоловнаяОрганизация
	|			И НачалоПериодов.Организация = ОкончаниеПериодов.Организация
	|			И НачалоПериодов.ОтчетныйПериод = ОкончаниеПериодов.ОтчетныйПериод
	|			И НачалоПериодов.ФизическоеЛицо = ОкончаниеПериодов.ФизическоеЛицо
	|			И НачалоПериодов.ТипДоговора = ОкончаниеПериодов.ТипДоговора
	|			И (НачалоПериодов.ПризнакГраницыПериодов = 1)
	|			И (ОкончаниеПериодов.ПризнакГраницыПериодов = -1)
	|			И НачалоПериодов.ГраницаПериода < ОкончаниеПериодов.ГраницаПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалоПериодов.Организация,
	|	НачалоПериодов.ТерриториальныеУсловия,
	|	НачалоПериодов.ФизическоеЛицо,
	|	НачалоПериодов.ГраницаПериода,
	|	НачалоПериодов.ГоловнаяОрганизация,
	|	НачалоПериодов.ОсобыеУсловияТруда,
	|	НачалоПериодов.ОтчетныйПериод,
	|	НачалоПериодов.КодПозицииСписка,
	|	НачалоПериодов.ОснованиеВыслугиЛет,
	|	НачалоПериодов.ТипДоговора,
	|	НачалоПериодов.ПараметрТерриториальныхУсловий,
	|	НачалоПериодов.ТретийПараметрВыслугиЛет,
	|	НачалоПериодов.ТретийПараметрИсчисляемогоСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИсходныеДанныеУчетаСтажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеУчетаСтажаПФРНеСгруппированные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТГраницыПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодическиеПараметрыСтажаИнтервалы";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДанныеУчетаСтажаПФР", ИмяВТРезультат);
	
	Запрос.Выполнить();
		
КонецПроцедуры

Процедура УстановитьТекстПоляЗапросаВТДанныеУчетаСтажаПФР(Запрос, ПсевдонимПоля, ТекстыДополнителныхПолейЗапроса)
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "NULL КАК " + ПсевдонимПоля, ТекстыДополнителныхПолейЗапроса[ПсевдонимПоля] + " КАК " + ПсевдонимПоля);		
КонецПроцедуры	

Функция ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР()
	Возврат УчетСтажаПФРВнутренний.ТекстДополнительныхПолейЗапросаВТДанныеУчетаСтажаПФР();	
КонецФункции	
		
Процедура СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(МенеджерВременныхТаблиц)
	УчетСтажаПФРВнутренний.СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2014(МенеджерВременныхТаблиц);	
КонецПроцедуры	

Процедура СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(МенеджерВременныхТаблиц)
	УчетСтажаПФРВнутренний.СоздатьВТСоответствиеВидовСтажаПараметрамИсчисления2013(МенеджерВременныхТаблиц);	
КонецПроцедуры	

Процедура СоздатьВТОтчетныеПериоды(МенеджерВременныхТаблиц, ДатаНачала, ДатаОкончания)
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("ОтчетныйПериод", Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ОкончаниеПериода", Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ИспользоватьПараметрыСтажа2014", Новый ОписаниеТипов("Булево"));
	ТаблицаПериодов.Колонки.Добавить("ИспользоватьПараметрыСтажа2013", Новый ОписаниеТипов("Булево"));
	
	ТекущийПериод = НачалоКвартала(ДатаОкончания);
	
	Пока ТекущийПериод >= ДатаНачала Цикл
		СтрокаТаблицы = ТаблицаПериодов.Добавить();
		СтрокаТаблицы.ОтчетныйПериод = ТекущийПериод;
		СтрокаТаблицы.ОкончаниеПериода = НачалоДня(ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ТекущийПериод));
		Если ТекущийПериод >= '20140101' Тогда
			СтрокаТаблицы.ИспользоватьПараметрыСтажа2014 = Истина;
		Иначе
			СтрокаТаблицы.ИспользоватьПараметрыСтажа2013 = Истина;	
		КонецЕсли;	
		ТекущийПериод = ПерсонифицированныйУчетКлиентСервер.ПредшествующийОтчетныйПериодПерсУчета(ТекущийПериод);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаПериодов", ТаблицаПериодов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПериодов.ОтчетныйПериод,
	|	ТаблицаПериодов.ОкончаниеПериода,
	|	ТаблицаПериодов.ИспользоватьПараметрыСтажа2014,
	|	ТаблицаПериодов.ИспользоватьПараметрыСтажа2013
	|ПОМЕСТИТЬ ВТОтчетныеПериоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов";
		
	Запрос.Выполнить();
	
КонецПроцедуры	
	
Функция ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2014()
	
	МассивПараметров = ПерсонифицированныйУчет.ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию();
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка());

	Возврат МассивПараметров
	
КонецФункции 

Функция ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию2013()

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ);
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД);
	МассивПараметров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка());

	Возврат МассивПараметров
	
КонецФункции 

// Первоначальное заполнение данных вторичного регистра.

Процедура ЗаполнитьПервоначальныеДанныеВторичногоРегистра() Экспорт 
	ПоследнееОбработанноеФизическоеЛицо = Неопределено;
	
	ПродолжатьОбновление = Истина;
	
	Пока ПродолжатьОбновление Цикл
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПоследнееФизическоеЛицоВыборки = СоздатьВТПорцияФизическихЛицДляОбновления(МенеджерВременныхТаблиц, ПоследнееОбработанноеФизическоеЛицо);
		
		ИзмеренияОтбора = Новый Массив;
		ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		
		ОбновитьДанныеВторичногоРегистра(МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);
		
		Если ПоследнееФизическоеЛицоВыборки = Неопределено Тогда
			ПродолжатьОбновление = Ложь;
		Иначе
			ПоследнееОбработанноеФизическоеЛицо = ПоследнееФизическоеЛицоВыборки;
		КонецЕсли;
	КонецЦикла;	
			
КонецПроцедуры	

Функция СоздатьВТПорцияФизическихЛицДляОбновления(МенеджерВременныхТаблиц, ПоследнееОбработанноеФизическоеЛицо = Неопределено)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстУсловияФизическоеЛицо = "ИСТИНА";
	Если ПоследнееОбработанноеФизическоеЛицо <> Неопределено Тогда
		Запрос.УстановитьПараметр("ПоследнееОбработанноеФизическоеЛицо", ПоследнееОбработанноеФизическоеЛицо);
		
		ТекстУсловияФизическоеЛицо = "ПараметрыПериодовСтажаПФР.ФизическоеЛицо > &ПоследнееОбработанноеФизическоеЛицо";
	КонецЕсли;	
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
	|ИЗ
	|	РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ПО ПараметрыПериодовСтажаПФР.ФизическоеЛицо = ПериодыСтажаПФР.ФизическоеЛицо
	|ГДЕ
	|	ПериодыСтажаПФР.ФизическоеЛицо ЕСТЬ NULL 
	|	И &УсловиеФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТКлючиИзменившихсяДанных КАК ФизическиеЛица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФизическоеЛицо;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции	

// Процедуры обновления ИБ

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.22.159";
	Обработчик.Процедура = "УчетСтажаПФР.ОбновитьДанныеУчетаПоУволеннымИВновьПринятым";
	
КонецПроцедуры

Процедура ОбновитьДанныеУчетаПоУволеннымИВновьПринятым() Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ГоловнаяОрганизация,
	|	ВложенныйЗапрос.Начало,
	|	ВложенныйЗапрос.ТипДоговора,
	|	ВложенныйЗапрос.ФизическоеЛицо,
	|	СУММА(ВложенныйЗапрос.Флаг) КАК Флаг
	|ПОМЕСТИТЬ ВТУволенныеИВновьПринятые
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		ПараметрыПериодовСтажаПФР.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПараметрыПериодовСтажаПФР.ТипДоговора КАК ТипДоговора,
	|		ПараметрыПериодовСтажаПФР.Начало КАК Начало,
	|		1 КАК Флаг
	|	ИЗ
	|		РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|	ГДЕ
	|		ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|		И НЕ ПараметрыПериодовСтажаПФР.Сторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПараметрыПериодовСтажаПФР.ГоловнаяОрганизация,
	|		ПараметрыПериодовСтажаПФР.ФизическоеЛицо,
	|		ПараметрыПериодовСтажаПФР.ТипДоговора,
	|		ПараметрыПериодовСтажаПФР.Начало,
	|		-1
	|	ИЗ
	|		РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|	ГДЕ
	|		ПараметрыПериодовСтажаПФР.Приоритет = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|		И НЕ ПараметрыПериодовСтажаПФР.Сторно) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ГоловнаяОрганизация,
	|	ВложенныйЗапрос.ТипДоговора,
	|	ВложенныйЗапрос.ФизическоеЛицо,
	|	ВложенныйЗапрос.Начало
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Флаг) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УволенныеИВновьПринятые.ГоловнаяОрганизация,
	|	УволенныеИВновьПринятые.ТипДоговора,
	|	УволенныеИВновьПринятые.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТКлючиИзменившихсяДанных
	|ИЗ
	|	ВТУволенныеИВновьПринятые КАК УволенныеИВновьПринятые
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыСтажаПФР КАК ПериодыСтажаПФР
	|		ПО УволенныеИВновьПринятые.ГоловнаяОрганизация = ПериодыСтажаПФР.ГоловнаяОрганизация
	|			И УволенныеИВновьПринятые.ФизическоеЛицо = ПериодыСтажаПФР.ФизическоеЛицо
	|			И УволенныеИВновьПринятые.ТипДоговора = ПериодыСтажаПФР.ТипДоговора
	|			И УволенныеИВновьПринятые.Начало = ПериодыСтажаПФР.Начало
	|			И (ПериодыСтажаПФР.ВидСтажаПФР = ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПФР2014.НеВключаетсяВСтраховойСтаж))";

	
	Запрос.Выполнить();
	
	ИзмеренияОтбора = Новый Массив;
	ИзмеренияОтбора.Добавить("ФизическоеЛицо");
	ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
	ИзмеренияОтбора.Добавить("ТипДоговора");
	
	ОбновитьДанныеВторичногоРегистра(Запрос.МенеджерВременныхТаблиц, ИзмеренияОтбора, Истина);

КонецПроцедуры	


#КонецОбласти

