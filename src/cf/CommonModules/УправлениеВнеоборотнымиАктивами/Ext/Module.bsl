
#Область ПрограммныйИнтерфейс

// Функция определяет фактический срок использования актива (в месяцах)
// исходя из даты принятия актива к учету и даты выбытия
//
// Параметры:
//   ДатаПринятияКУчету - дата принятия актива к учету
//   ДатаВыбытия - дата выбытия актива
//
// Возвращаемое значение:
//   Число месяцев.
//
Функция ОпределитьФактическийСрокИспользования(ДатаПринятияКУчету, ДатаВыбытия) Экспорт
	
	КоличествоЛет     = Год(ДатаВыбытия) - Год(ДатаПринятияКУчету);
	КоличествоМесяцев = Месяц(ДатаВыбытия) - Месяц(ДатаПринятияКУчету);
	
	Возврат КоличествоЛет * 12 + КоличествоМесяцев;
	
КонецФункции // ОпределитьФактическийСрокИспользования()

Функция ПолучитьДатуПереходаКЛинейномуМетоду(ДатаРасчета, Организация) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаРасчета));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Период
	|ПОМЕСТИТЬ НелинейныйМетод
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И МетодНачисленияАмортизацииНУ = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Нелинейный)) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизаций.Период
	|ПОМЕСТИТЬ ЛинейныйМетод
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|ГДЕ
	|	УчетнаяПолитикаОрганизаций.Организация = &Организация
	|	И УчетнаяПолитикаОрганизаций.МетодНачисленияАмортизацииНУ = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный)
	|	И УчетнаяПолитикаОрганизаций.Период МЕЖДУ ДАТАВРЕМЯ(2009, 1, 1) И &НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ЛинейныйМетод.Период), ДАТАВРЕМЯ(2009, 1, 1)) КАК ДатаПереходаКЛинейномуМетоду
	|ИЗ
	|	НелинейныйМетод КАК НелинейныйМетод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛинейныйМетод КАК ЛинейныйМетод
	|		ПО НелинейныйМетод.Период < ЛинейныйМетод.Период";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ДатаПереходаКЛинейномуМетоду;

КонецФункции // ПолучитьДатуПереходаКЛинейномуМетоду()

Функция ПолучитьНормуПоАмортизационнойГруппе(АмортизационнаяГруппа) Экспорт
	
	НормаАмортизации = Неопределено;
	
	Если АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПерваяГруппа Тогда
		НормаАмортизации         = 14.3;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВтораяГруппа Тогда
		НормаАмортизации    =  8.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ТретьяГруппа Тогда
		НормаАмортизации    =  5.6;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ЧетвертаяГруппа Тогда
		НормаАмортизации =  3.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПятаяГруппа Тогда
		НормаАмортизации     =  2.7;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ШестаяГруппа Тогда
		НормаАмортизации    =  1.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.СедьмаяГруппа Тогда
		НормаАмортизации   =  1.3;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа Тогда
		НормаАмортизации   =  1.0;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа Тогда
		НормаАмортизации   =  0.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа Тогда
		НормаАмортизации   =  0.7;
	КонецЕсли;
	
	Возврат НормаАмортизации;
	
КонецФункции

Процедура СформироватьДвиженияНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты);

	Если Параметры.ТаблицаЗатрат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете 		= 	УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18					=	УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ	=	УчетнаяПолитика.МетодНачисленияАмортизацииНУ(Реквизиты.Организация, Реквизиты.Период);

	Если ПустаяСтрока(Реквизиты.Содержание) Тогда
		Содержание = "Амортизация";
	Иначе
		Содержание = Реквизиты.Содержание;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаЗатрат Цикл

		Если СтрокаТаблицы.СуммаБУ = 0
			И СтрокаТаблицы.СуммаНУ = 0
			И СтрокаТаблицы.СуммаПР = 0
			И СтрокаТаблицы.СуммаВР = 0 Тогда

			Продолжить;
		КонецЕсли;

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Если СтрокаТаблицы.СчетАмортизации = ПланыСчетов.Хозрасчетный.РасходыНаНИОКР Тогда
			Проводка.Содержание = "Списание стоимости НИОКР";
		Иначе
			Проводка.Содержание = Содержание;
		КонецЕсли;

		Проводка.СчетДт = СтрокаТаблицы.СчетЗатрат;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТаблицы.Субконто1);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтрокаТаблицы.Субконто2);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СтрокаТаблицы.Субконто3);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеЗатрат;
		КонецЕсли;

		Проводка.СчетКт = СтрокаТаблицы.СчетАмортизации;

		Если ТипЗнч(СтрокаТаблицы.ОбъектУчета) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
				ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, СтрокаТаблицы.ОбъектУчета);
		ИначеЕсли ТипЗнч(СтрокаТаблицы.ОбъектУчета) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
				ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы, СтрокаТаблицы.ОбъектУчета);
		КонецЕсли;

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРДт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРКт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

		УчетОС.ОпределитьПостоянныеРазницыВРасходах(Проводка, ПоддержкаПБУ18);

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

	// Вызов переопределяемой процедуры для выполнения связанных движений в других подсистемах.
	УправлениеВнеоборотнымиАктивамиПереопределяемый.ВыполнитьДополнительныеДействияНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаЗатрат

	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета,"         // <СправочникСсылка.ОсновныеСредства>
	+ "ПодразделениеЗатрат," // <СправочникСсылка.ПодразделенияОрганизации> - подразделение организации, в которое
		// будут отнесены затраты от начисления амортизации
	+ "Подразделение,"       // <СправочникСсылка.ПодразделенияОрганизации> - подразделение организации, в котором
		// учитывается ОС
	+ "Субконто1,"           // <Характеристика.ВидыСубконтоХозрасчетные> - субконто затрат
	+ "Субконто2,"           // <Характеристика.ВидыСубконтоХозрасчетные> - субконто затрат
	+ "Субконто3,"           // <Характеристика.ВидыСубконтоХозрасчетные> - субконто затрат
	+ "СуммаБУ,"             // <Число, 15, 2> - сумма амортизации по данным бухгалтерского учета
	+ "СуммаНУ,"             // <Число, 15, 2> - сумма амортизации по данным налогового учета
	+ "СуммаПР,"             // <Число, 15, 2> - постоянные разницы в оценке амортизации (ПБУ 18/02)
	+ "СуммаВР,"             // <Число, 15, 2> - временные разницы в оценке амортизации (ПБУ 18/02)
	+ "СчетЗатрат,"          // <ПланСчетовСсылка.Хозрасчетный> - счет учета затрат по амортизации ОС
	+ "СчетАмортизации";     // <ПланСчетовСсылка.Хозрасчетный> - счет начисления амортизации ОС

	Параметры.Вставить("ТаблицаЗатрат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаЗатрат, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Содержание";  // <Строка, 150>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// Позволяет определить есть ли в табличной части документа строки с дублирующимеся
// значениями заданных реквизитов (всех одновременно).
// При нахождении дублей формирует сообщения пользователю.
//
// Параметры
//  Объект            - Объект ссылочного типа
//  ИмяТабличнойЧасти - Имя табличной части, в которой нужно искать дубли
//  ПоляПроверки      - Структура с перечнем реквизитов, по которым нужно искать дубли.
//                      Ключ структуры - имя реквизита, значение - признак необходимости
//                      поиска дублей в том числе по пустым значениям. Истина - искать
//                      дубли по пустым значениям реквизита, любое другое значение - 
//                      игнорировать строки, в которых реквизит не заполнен
//  Отказ             - Признак отказа от дальнейшей обработки. В случае нахождения дублей
//                      выставляется в Истина.
//
// Возвращаемое значение:
//   Булево - Истина - ошибок (дублей) не обнаружено, Ложь - в противном случае.
//
Функция ПроверитьОтсутствиеДублейВТабличнойЧасти(Объект, ИмяТабличнойЧасти, ПоляПроверки, Отказ) Экспорт
	
	СтруктураОтбора = Новый Структура;
	
	ПоляПроверкиСтрокой = "";
	Для Каждого КлючИЗначение Из ПоляПроверки Цикл
		ПоляПроверкиСтрокой = ПоляПроверкиСтрокой + ", " + КлючИЗначение.Ключ;
		СтруктураОтбора.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
	ПоляПроверкиСтрокой = Сред(ПоляПроверкиСтрокой, 3);
	
	НаборыЗначений = Объект[ИмяТабличнойЧасти].Выгрузить(, ПоляПроверкиСтрокой);
	НаборыЗначений.Колонки.Добавить("__КоличествоВхождений", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	НаборыЗначений.ЗаполнитьЗначения(1, "__КоличествоВхождений");
	НаборыЗначений.Свернуть(ПоляПроверкиСтрокой, "__КоличествоВхождений");
	
	НайденыДубли = Ложь;
	
	Если ПоляПроверки.Количество() > 1 Тогда
		ШаблонСообщенияОбОшибке = НСтр("ru = 'Значения %1 повторяются в строках %2.'");
	Иначе
		ШаблонСообщенияОбОшибке = НСтр("ru = 'Значение %1 повторяется в строках %2.'");
	КонецЕсли;
	ТекстСообщения = "";
	
	Если НаборыЗначений.Количество() <> Объект[ИмяТабличнойЧасти].Количество() Тогда
		// Есть дубли
		Для Каждого НаборЗначений Из НаборыЗначений Цикл
			Если НаборЗначений.__КоличествоВхождений = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначенияСтрокой = "";
			
			ПропуститьНаборЗначений = Ложь;
			Для Каждого КлючИЗначение Из ПоляПроверки Цикл
				Если КлючИЗначение.Значение <> Истина Тогда
					Если НЕ ЗначениеЗаполнено(НаборЗначений[КлючИЗначение.Ключ]) Тогда
						ПропуститьНаборЗначений = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
				ЗначенияСтрокой = ЗначенияСтрокой + ", """ + НаборЗначений[КлючИЗначение.Ключ] + """";
			КонецЦикла;
			Если ПропуститьНаборЗначений Тогда
				Продолжить;
			КонецЕсли;
			
			НайденыДубли = Истина;
			
			ЗначенияСтрокой = Сред(ЗначенияСтрокой, 3);
			
			НомераСтрок = "";
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, НаборЗначений);
			СтрокиДубли = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаДубль Из СтрокиДубли Цикл
				НомераСтрок = НомераСтрок + ", " + Формат(СтрокаДубль.НомерСтроки, "ЧГ=");
			КонецЦикла;
			НомераСтрок = Сред(НомераСтрок, 3);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщенияОбОшибке, ЗначенияСтрокой, НомераСтрок);
		КонецЦикла;
	КонецЕсли;
	
	Если НайденыДубли Тогда
		ПредставленияРеквизитов = "";
		МетаданныеТабличнойЧасти = Объект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти];
		Для Каждого КлючИЗначение Из ПоляПроверки Цикл
			ПредставленияРеквизитов = ПредставленияРеквизитов + ", """
				+ МетаданныеТабличнойЧасти.Реквизиты[КлючИЗначение.Ключ].Представление() + """";
		КонецЦикла;
		ПредставленияРеквизитов = Сред(ПредставленияРеквизитов, 3);
		
		Если ПоляПроверки.Количество() > 1 Тогда
			ШаблонСообщения = НСтр("ru = 'Значения в колонках %1 не должны повторяться.'");
		Иначе
			ШаблонСообщения = НСтр("ru = 'Значения в колонке %1 не должны повторяться.'");
		КонецЕсли;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПредставленияРеквизитов)
			+ ТекстСообщения;
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("СПИСОК", "КОРРЕКТНОСТЬ", , ,
			МетаданныеТабличнойЧасти.Представление(), ТекстСообщения);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ИмяТабличнойЧасти);
		
		Отказ = Истина;
	КонецЕсли;
	
	Возврат НЕ НайденыДубли;
	
КонецФункции // ПроверитьОтсутствиеДублейВТабличнойЧасти()

// Возвращает пустую таблицу значений с заранее созданными колонками
// Нужно для создания пустых таблиц значения для дальнейшей
//   обработки в функциях "ПодготовитьПараметры*"
//
Функция ПолучитьПустуюТаблицуЗначенийСКолонками(СтруктураКолонок) Экспорт

	Таблица = Новый ТаблицаЗначений;

	Для Каждого ТекущаяКолонка Из СтруктураКолонок Цикл
		Если ТипЗнч(ТекущаяКолонка.Значение) = Тип("Тип") Тогда
			НоваяКолонка = Таблица.Колонки.Добавить(ТекущаяКолонка.Ключ, ТекущаяКолонка.Значение);
		Иначе
			НоваяКолонка = Таблица.Колонки.Добавить(ТекущаяКолонка.Ключ);
		КонецЕсли;
	КонецЦикла;

	Возврат Таблица;

КонецФункции

// Функция возвращает фиксированную структуру содержащую все значения перечисления с
// с переданным именем.
//
// Параметры
//  ИмяПеречисления - Имя перечисления, для которого требуется получить структуру со значениями.
//
// Возвращаемое значение:
//   ФиксированнаяСтруктура - ФиксированнаяСтруктура содержащая значения перечисления. 
//   	Ключ - имя значения, Значение - значение перечисления (ссылка).
//
Функция ПолучитьСтруктуруСоЗначениямиПеречисления(Знач ИмяПеречисления) Экспорт
	
	Результат = Новый Структура;
	Для каждого МетаданныеЗначения Из Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления Цикл
		Результат.Вставить(МетаданныеЗначения.Имя, Перечисления[ИмяПеречисления][МетаданныеЗначения.Имя]);
	КонецЦикла;
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции // ПолучитьСтруктуруСоЗначениямиПеречисления()

// Функция возвращает фиксированное соответствие содержащее все значения перечисления с
// с переданным именем.
//
// Параметры
//  ИмяПеречисления - Имя перечисления, для которого требуется получить структуру со значениями.
//
// Возвращаемое значение:
//   ФиксированноеСоответствие - ФиксированноеСоответствие содержащее значения перечисления. 
//   	Ключ - значения перечисления, Значение - имя значение перечисления.
//
Функция ПолучитьСоответствиеЗначенийПеречисленияИменам(ИмяПеречисления) Экспорт
	
	Результат = Новый Соответствие;
	Для каждого МетаданныеЗначения Из Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления Цикл
		Результат.Вставить(Перечисления[ИмяПеречисления][МетаданныеЗначения.Имя], МетаданныеЗначения.Имя);
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(Результат);
	
КонецФункции // ПолучитьСоответствиеЗначенийПеречисленияИменам()

// Определяет коэффициент распределения выручки по видам деятельности 
// (ЕНВД / не ЕНВД) за период.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация;
//  НачДата     – Дата – начало периода расчета;
//	КонДата     - Дата - окончание периода расчета.
//
// Возвращаемое значение:
//  Число – коэффициент распределения расходов по видам деятельности.
//
Функция КоэффициентРаспределенияВыручкиПоВидамДеятельности(Организация, Знач НачДата, Знач КонДата) Экспорт
	
	// Массив счетов, по которым рассчитывается выручка организации.
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Выручка);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("НачДата",          НачДата);
	Запрос.УстановитьПараметр("КонДата",          КонДата);
	Запрос.УстановитьПараметр("СчетВыручкаЕНВД",  БухгалтерскийУчетВызовСервераПовтИсп.СчетаВыручкиЕНВД());
	Запрос.УстановитьПараметр("МассивСчетов",     МассивСчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_МассивСчетов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|					ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыручкаЕНВД,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НЕ ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|					ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыручкаНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_МассивСчетов.Счет
	|				ИЗ
	|					ВТ_МассивСчетов),
	|			,
	|			Организация = &Организация,
	|			НЕ КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж),
	|			) КАК ХозрасчетныйОбороты";
	РезультатЗапроса = Запрос.Выполнить();
	
	// Если результат запроса пустой, то считаем, что все
	// расходы относятся к деятельности, не облагаемой ЕНВД.
	Если РезультатЗапроса.Пустой() Тогда
		
		Коэффициент = 1;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ВыручкаЕНВД   = Макс(Выборка.ВыручкаЕНВД,   0);
		ВыручкаНеЕНВД = Макс(Выборка.ВыручкаНеЕНВД, 0);
		
		Если ВыручкаНеЕНВД + ВыручкаЕНВД = 0 Тогда // нет дохода ни по одному из видов деятельности
			Коэффициент = 1;
		Иначе
			Коэффициент = ВыручкаНеЕНВД / (ВыручкаНеЕНВД + ВыручкаЕНВД);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции // КоэффициентРаспределенияВыручкиПоВидамДеятельности()

#КонецОбласти

#Область ЗаполнениеРегламентированнойОтчетности

#Область Имущество

Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2011Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001000", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Ложь);

	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  =  ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(ПараметрыОтчета.Организация, КодНалоговогоОргана, КПП);
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		Возврат;
		
	КонецЕсли;
	
	Период  = НачалоМесяца(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Счетчик = 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Признак применения ЕНВД.
	ПрименениеЕНВД = УчетнаяПолитика.ПлательщикЕНВД(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	// Выборка коэффициентов распределения ЕНВД.
	Если ПрименениеЕНВД Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ОтношениеКЕНВД,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|	
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК СуммаКоэффициентов
		|ПОМЕСТИТЬ ВыборкаСуммыКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|	      	КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|	      		ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|		  	ИНАЧЕ 0
		|	      КОНЕЦ) КАК НеЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
		|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Распределение
		|
		|ПОМЕСТИТЬ
		|	КоэффициентыЕНВД
		|
		|ИЗ
		|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
		|	ПО ВыборкаСуммыКоэффициентов.Ссылка = ВыборкаКоэффициентов.Ссылка
		|ГДЕ
		|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаКоэффициентов.Ссылка
		|";
		Запрос.Выполнить();
	КонецЕсли;
	
	ГоловнаяОрганизация = ПараметрыОтчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыОтчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(Период));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)" + ДопУсловие + "
	|	И СостоянияОСОрганизаций.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|	И СостоянияОСОрганизаций.Период <= &КонецПериодаОтчета
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ТипОС = ЗНАЧЕНИЕ(Перечисление.ТипыОС.КапитальноеВложение)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, 1)) Цикл
		
		ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН( ПараметрыОтчета.Организация, КонецКвартала(Период));
		
		Если НЕ ПрименениеУСН Тогда
			
			Запрос.УстановитьПараметр("Период",          Период);
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период
			|";
			Запрос.Выполнить();
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				
				// Выборка объектов по основному налоговому органу организации (его нет в справочнике Регистрация в налоговом органе).
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ОС.Ссылка КАК ОсновноеСредство
				|ПОМЕСТИТЬ
				|	СписокРазрешенныхОС
				|ИЗ
				|	Справочник.ОсновныеСредства КАК ОС
				|ГДЕ
				|	(НЕ ОС.Ссылка В 
				|		(ВЫБРАТЬ
				|			СостоянияОСОрганизаций.ОсновноеСредство
				|		ИЗ
				|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
				|		ГДЕ
				|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
				|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
				|			И СостоянияОСОрганизаций.Организация = &Организация))
				|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
				|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
				|	И (НЕ ОС.Ссылка В
				|		(ВЫБРАТЬ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
				|		ИЗ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ГДЕ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
				|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
				|ИНДЕКСИРОВАТЬ ПО
				|	ОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
				|
				|ПОМЕСТИТЬ
				|	СписокОС
				|
				|ИЗ
				|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
				|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
				|ИНДЕКСИРОВАТЬ ПО
				|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				
			Иначе
				
				Если КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана Тогда
					
					// Выборка объектов по основному налоговому органу организации (он есть в справочнике Регистрация налоговом органе).
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (НЕ ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> &НалоговыйОрган)
					|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				Иначе
					
					// Выборка объектов по указанному пользователем налоговому органу.
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган = &НалоговыйОрган
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Запрос.Выполнить();
			
			// Выборка счетов учета ОС
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			|
			|ПОМЕСТИТЬ
			|	СчетаУчетаОС
			|
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
			|	NULL
			|";
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство1,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВидИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИНДЕКСИРОВАТЬ ПО
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.Субконто1,
			|	ПервоначальнаяСтоимостьОС.Счет
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетУчета ИЗ СчетаУчетаОС ГДЕ СчетУчета ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	ПервоначальнаяСтоимостьОС.Субконто1
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	АмортизацияОС.СуммаОстатокДт,
			|	АмортизацияОС.СуммаОстатокКт,
			|	АмортизацияОС.Субконто1,
			|	АмортизацияОС.Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетНачисленияАмортизации ИЗ СчетаУчетаОС ГДЕ СчетНачисленияАмортизации ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			|	АмортизацияОС.Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
			
			Если ПрименениеЕНВД Тогда
				
				// Получение коэффициента доли выручки от деятельности, облагаемой ЕНВД.
				ПериодПолученияКоэффициентаЕНВД = ?(Период = ПараметрыОтчета.мДатаНачалаПериодаОтчета, Период, ДобавитьМесяц(Период, -1));
				
				КоэффициентРаспределенияЕНВД = КоэффициентРаспределенияВыручкиПоВидамДеятельности(ПараметрыОтчета.Организация, НачалоКвартала(ПериодПолученияКоэффициентаЕНВД), КонецКвартала(ПериодПолученияКоэффициентаЕНВД));
				
				Запрос.УстановитьПараметр("КоэффициентРаспределенияЕНВД", КоэффициентРаспределенияЕНВД);
				
				Запрос.Текст = Запрос.Текст + 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВидИмущества, ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.ОсобенностиОтсутствуют)) КАК ВидИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ((ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.НеЕНВД
				|	       + (ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.Распределение * &КоэффициентРаспределенияЕНВД КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД
				|			ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
				|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			Иначе
				
				Запрос.Текст = Запрос.Текст + 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВидИмущества, ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.ОсобенностиОтсутствуют)) КАК ВидИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			КонецЕсли;
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ СчетаУчетаОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
										  |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
										  |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
										|ГДЕ
										|	ОстаточнаяСтоимость > 0
										|";
									
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		Период  = ?(Счетчик = 13, КонецМесяца(Период), ДобавитьМесяц(Период, 1));
		
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОбъединяющегоЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	Раздел2 = Контейнер.Раздел2;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ВложенныйЗАпрос.ВидИмущества КАК ВидИмущества,
	|	ВложенныйЗАпрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗАпрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗАпрос.КодПоОКАТО КАК КодПоОКАТО,
	|	ВложенныйЗАпрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗАпрос.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ВложенныйЗАпрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗАпрос.Период КАК Период,
	|	СУММА(ВложенныйЗАпрос.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	СУММА(ВложенныйЗАпрос.ОстаточнаяСтоимостьЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьЛьготируемогоИмущества
	|ИЗ
	|(ВЫБРАТЬ
	|	ЕСТЬNULL(ВидИмущества, Значение(Перечисление.ВидыИмущества.ОсобенностиОтсутствуют)) КАК ВидИмущества,
	|	ЕСТЬNULL(ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
	|	ЕСТЬNULL(ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	ЕСТЬNULL(НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период,
	|	ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫБОР КОГДА ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьЛьготируемогоИмущества
	|ИЗ
	|	НалоговаяБазаПоНалогуНаИмущество) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период 
	|
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимостьЛьготируемогоИмущества)
	|ПО
	|	ВидИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
			
			ВидИмущества =             Выборка.ВидИмущества;
			ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
			ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
			КодВидаИмущества = 3;
			
			Если ВидИмущества = Перечисления.ВидыИмущества.ВходитВСоставЕСГС Тогда
				КодВидаИмущества = 1;
			ИначеЕсли ВидИмущества = Перечисления.ВидыИмущества.НаходитсяНаТерриторииДругогоГосударства Тогда
				КодВидаИмущества = 4;
				ДоляСтоимостиЧислитель = 0;
				ДоляСтоимостиЗнаменатель = 0;
			Иначе
				Если ДоляСтоимостиЧислитель = 1 И ДоляСтоимостиЗнаменатель = 1 Тогда
					КодВидаИмущества = 3; 
				Иначе
					КодВидаИмущества = 2;
				КонецЕсли;
			КонецЕсли;
			                
			СтраницаРаздел2.П000020000100           = КодВидаИмущества; 
			СтраницаРаздел2.П000020001000           = Выборка.КодПоОКАТО;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020015003_Числ      = ДоляСтоимостиЧислитель;
			СтраницаРаздел2.П000020015003_Знам      = ДоляСтоимостиЗнаменатель;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.СнижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
			Если Выборка.Период = 1 Тогда
				
				СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020002004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 2 Тогда

				СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020003004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 3 Тогда

				СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020004004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 4 Тогда

				СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020005004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
			
			ИначеЕсли Выборка.Период = 5 Тогда
		
				СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020006004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 6 Тогда
				
				СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020007004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 7 Тогда
				
				СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020008004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 8 Тогда
		
				СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020009004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 9 Тогда

				СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020010004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 10 Тогда
				
				СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020011004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) 
			 ИЛИ (КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана) Тогда
			
				СуммаНалога = СтраницаРаздел2.П000020018003;
				
				СуммаЛьготы = СуммаНалога * (ПроцентУменьшенияСуммыНалога / 100);
				
				СтраницаРаздел2.П000020019003_КодЛьготы = ?(СуммаЛьготы = 0, "", "2012500");
				СтраницаРаздел2.П000020020003 = Мин(СуммаНалога, СуммаЛьготы);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки;
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	УплачиваютсяАвансы = РасчетИмущественныхНалогов.УплачиваютсяАвансыПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	
	Если Не УплачиваютсяАвансы Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не настроена уплата авансов по налогу на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;	
		
	КонецЕсли;

	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = Результат[0].Выгрузить()[0].ПроцентУменьшения;
	ИначеЕсли Результат[1].Пустой() Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	Из &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
			
			ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
			ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
			
			СтраницаРаздел2.П000020000101           = Выборка.КодВидаИмущества; 
			СтраницаРаздел2.П000020001001           = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020015003_Числ      = ДоляСтоимостиЧислитель;
			СтраницаРаздел2.П000020015003_Знам      = ДоляСтоимостиЗнаменатель;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
			
			СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020021003 = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020018003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020018003, "", ДополнительныеПараметры);
						
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда 
				
				СтраницаРаздел2.П000020019003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020020003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020020003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020020003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 3
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Количество()>1 Цикл
		Раздел3.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			Раздел3.Добавить().Данные = Новый СписокЗначений();
			Раздел3[Раздел3.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
			СтраницаРаздел3 =  Раздел3[Раздел3.Количество()-1].Данные[0].Значение;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
		СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030003003 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030003003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030003003, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030006003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030007003 = Выборка.НалоговаяСтавка;
		
		КоличествоМесяцевВПериоде = Месяц(мДатаКонцаПериодаОтчета);
		Если Выборка.КоличествоМесяцевВладения > 0 Тогда 
			СтраницаРаздел3.П000030008003_Числ = Выборка.КоличествоМесяцевВладения;
			СтраницаРаздел3.П000030008003_Знам = КоличествоМесяцевВПериоде;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030009003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030009003, "", ДополнительныеПараметры);
		
		Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
		     
			СтраницаРаздел3.П000030010003_КодЛьготы = "2012500";
			СтраницаРаздел3.П000030011003 = Выборка.СуммаУменьшенияСуммыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030011003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030011003, "", ДополнительныеПараметры);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2011Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер) Экспорт

	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		Возврат;
		
	КонецЕсли;

	Период  = НачалоМесяца(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Счетчик = 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Признак применения ЕНВД.
	ПрименениеЕНВД = УчетнаяПолитика.ПлательщикЕНВД(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);

	Если ПрименениеЕНВД Тогда 
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ОтношениеКЕНВД,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК СуммаКоэффициентов
		|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|	      	КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|	      		ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|		  	ИНАЧЕ 0
		|	      КОНЕЦ) КАК НеЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
		|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Распределение
		|
		|ПОМЕСТИТЬ
		|	КоэффициентыЕНВД
		|
		|ИЗ
		|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
		|		ПО ВыборкаСуммыКоэффициентов.Ссылка = ВыборкаКоэффициентов.Ссылка
		|ГДЕ
		|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаКоэффициентов.Ссылка
		|";
		Запрос.Выполнить();
	КонецЕсли;

	ГоловнаяОрганизация = ПараметрыОтчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыОтчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(Период));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)" + ДопУсловие + "
	|	И СостоянияОСОрганизаций.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|	И СостоянияОСОрганизаций.Период <= &КонецПериодаОтчета
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ТипОС = ЗНАЧЕНИЕ(Перечисление.ТипыОС.КапитальноеВложение)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, 1)) Цикл
		
		ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН(ПараметрыОтчета.Организация,
			?(Год(Период) = Год(мДатаКонцаПериодаОтчета), КонецКвартала(Период), мДатаКонцаПериодаОтчета));
		
		Если НЕ ПрименениеУСН Тогда
			//КоэффициентРаспределенияЕНВД = КоэффициентРаспределенияВыручкиПоВидамДеятельности(ПараметрыОтчета.Организация, НачалоКвартала(ПериодПолученияКоэффициентаЕНВД), КонецКвартала(ПериодПолученияКоэффициентаЕНВД));
			Запрос.УстановитьПараметр("Период",          Период);
			Запрос.УстановитьПараметр("ПериодБухИтогов", ?(Счетчик = 13, Новый Граница(Период), Период));
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
            |
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
            |
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период
			|";
			Запрос.Выполнить();
			
			
			Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
				
				// Выборка объектов по основному налоговому органу организации (его нет в справочнике Регистрация в налоговом органе).
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ОС.Ссылка КАК ОсновноеСредство
				|ПОМЕСТИТЬ
				|	СписокРазрешенныхОС
				|ИЗ
				|	Справочник.ОсновныеСредства КАК ОС
				|ГДЕ
				|	(НЕ ОС.Ссылка В 
				|		(ВЫБРАТЬ
				|			СостоянияОСОрганизаций.ОсновноеСредство
				|		ИЗ
				|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
				|		ГДЕ
				|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
				|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
				|			И СостоянияОСОрганизаций.Организация = &Организация))
				|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
				|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
				|	И (НЕ ОС.Ссылка В
				|		(ВЫБРАТЬ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
				|		ИЗ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ГДЕ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
				|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
				|ИНДЕКСИРОВАТЬ ПО
				|	ОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
				|
				|ПОМЕСТИТЬ
				|	СписокОС
				|
				|ИЗ
				|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
				|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
				|ИНДЕКСИРОВАТЬ ПО
				|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				
			Иначе
				
				Если КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана Тогда
					
					// Выборка объектов по основному налоговому органу организации (он есть в справочнике Регистрация налоговом органе).
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (НЕ ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> &НалоговыйОрган)
					|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				Иначе
					
					// Выборка объектов по указанному пользователем налоговому органу.
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган = &НалоговыйОрган
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Запрос.Выполнить();
			
			// Выборка счетов учета ОС
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			|
			|ПОМЕСТИТЬ
			|	СчетаУчетаОС
			|
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
			|	NULL
			|";
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство1,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВидИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИНДЕКСИРОВАТЬ ПО
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.Субконто1,
			|	ПервоначальнаяСтоимостьОС.Счет
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетУчета ИЗ СчетаУчетаОС ГДЕ СчетУчета ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	ПервоначальнаяСтоимостьОС.Субконто1
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	АмортизацияОС.СуммаОстатокДт,
			|	АмортизацияОС.СуммаОстатокКт,
			|	АмортизацияОС.Субконто1,
			|	АмортизацияОС.Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетНачисленияАмортизации ИЗ СчетаУчетаОС ГДЕ СчетНачисленияАмортизации ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			|	АмортизацияОС.Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
			
			Если ПрименениеЕНВД Тогда
				
				// Получение коэффициента доли выручки от деятельности, облагаемой ЕНВД.
				ПериодПолученияКоэффициентаЕНВД = ?(Период = ПараметрыОтчета.мДатаНачалаПериодаОтчета, Период, ДобавитьМесяц(Период, -1));
				КоэффициентРаспределенияЕНВД = КоэффициентРаспределенияВыручкиПоВидамДеятельности(ПараметрыОтчета.Организация, НачалоКвартала(ПериодПолученияКоэффициентаЕНВД), КонецКвартала(ПериодПолученияКоэффициентаЕНВД));
				Запрос.УстановитьПараметр("КоэффициентРаспределенияЕНВД", КоэффициентРаспределенияЕНВД);
				
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СписокОС.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации))
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоНедвижимость,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВидИмущества, ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.ОсобенностиОтсутствуют)) КАК ВидИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ((ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.НеЕНВД
				|		+ (ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.Распределение * &КоэффициентРаспределенияЕНВД КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД
				|			ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
				|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			Иначе
				
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СписокОС.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации))
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоНедвижимость,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ВидИмущества, ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.ОсобенностиОтсутствуют)) КАК ВидИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			КонецЕсли;
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ СчетаУчетаОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			                              |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
			                              |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
			                            |ГДЕ
			                            |	ОстаточнаяСтоимость > 0
										|";
			
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		Период  = ДобавитьМесяц(Период, 1);
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОбъединяющегоЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗАпрос.ВидИмущества КАК ВидИмущества,
	|	ВложенныйЗАпрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗАпрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗАпрос.КодПоОКАТО КАК КодПоОКАТО,
	|	ВложенныйЗАпрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗАпрос.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ВложенныйЗАпрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗАпрос.Период КАК Период,
	|	СУММА(ВложенныйЗАпрос.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	СУММА(ВложенныйЗАпрос.ОстаточнаяСтоимостьЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьЛьготируемогоИмущества,
	|	СУММА(ВложенныйЗАпрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗАпрос.ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества
	|ИЗ
	|(ВЫБРАТЬ
	|	ЕСТЬNULL(ВидИмущества, Значение(Перечисление.ВидыИмущества.ОсобенностиОтсутствуют)) КАК ВидИмущества,
	|	ЕСТЬNULL(ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
	|	ЕСТЬNULL(ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	ЕСТЬNULL(НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период,
	|	ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫБОР КОГДА ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьЛьготируемогоИмущества,
	|	ВЫБОР КОГДА ЭтоНедвижимость = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимости,
	|	ВЫБОР КОГДА ЭтоНедвижимость = ИСТИНА И ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества
    |ИЗ
	|	НалоговаяБазаПоНалогуНаИмущество ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимостьЛьготируемогоИмущества),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества)
	|ПО
	|	ВидИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел2 =  Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
            ВидИмущества =             Выборка.ВидИмущества;
            ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
            ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
            КодВидаИмущества = 3;
            
            Если ВидИмущества = Перечисления.ВидыИмущества.ВходитВСоставЕСГС Тогда
                КодВидаИмущества = 1;
            ИначеЕсли ВидИмущества = Перечисления.ВидыИмущества.НаходитсяНаТерриторииДругогоГосударства Тогда
                КодВидаИмущества = 4;
                ДоляСтоимостиЧислитель = 0;
                ДоляСтоимостиЗнаменатель = 0;
            ИначеЕсли ВидИмущества = Перечисления.ВидыИмущества.ИспользуетсяВОЭЗКалининградскойОбласти Тогда
                КодВидаИмущества = 5;
            Иначе
                Если ДоляСтоимостиЧислитель = 1 И ДоляСтоимостиЗнаменатель = 1 Тогда
                   КодВидаИмущества = 3; 
               Иначе
                   КодВидаИмущества = 2;
               КонецЕсли;
               
            КонецЕсли;
			
			СтраницаРаздел2.П000020000100 = КодВидаИмущества;
			СтраницаРаздел2.П000020001000 = Выборка.КодПоОКАТО;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.СнижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
			СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
			Если Выборка.Период = 1 Тогда
				
				СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020002004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 2 Тогда

				СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020003004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 3 Тогда

				СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020004004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 4 Тогда

				СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020005004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
			
			ИначеЕсли Выборка.Период = 5 Тогда
		
				СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020006004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 6 Тогда
				
				СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020007004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 7 Тогда
				
				СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020008004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 8 Тогда
		
				СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020009004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 9 Тогда

				СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020010004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 10 Тогда
				
				СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020011004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 11 Тогда
				
				СтраницаРаздел2.П000020012003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020012004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 12 Тогда
				
				СтраницаРаздел2.П000020013003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020013004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 13 Тогда
				
				СтраницаРаздел2.П000020014003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020014004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
				СтраницаРаздел2.П000020014103 = Выборка.ОстаточнаяСтоимостьНедвижимости;
				СтраницаРаздел2.П000020014104 = Выборка.ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества;

			КонецЕсли;
			
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) 
			 ИЛИ (КодНалоговогоОргана = ПараметрыОтчета.Организация.КодНалоговогоОргана) Тогда
			
				СуммаНалога = СтраницаРаздел2.П000020022003;
								
				СуммаЛьготы = СуммаНалога * (ПроцентУменьшенияСуммыНалога / 100);
							  
				СтраницаРаздел2.П000020024003_КодЛьготы = ?(СуммаЛьготы = 0, "", "2012500");
				СтраницаРаздел2.П000020025003 = Мин(СуммаНалога, СуммаЛьготы);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);

КонецПроцедуры

Процедура ЗаполнитьОтчетИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт

	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = Результат[0].Выгрузить()[0].ПроцентУменьшения;
	ИначеЕсли Результат[1].Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111 КАК ОстаточнаяСтоимостьНа0111,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112 КАК ОстаточнаяСтоимостьНа0112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112 КАК ОстаточнаяСтоимостьНа3112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНедвижимости КАК ОстаточнаяСтоимостьНедвижимости,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	Из &ТаблицаРасчетовПоНалогуНаИмущество как ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
	
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0111) КАК ОстаточнаяСтоимостьНа0111,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0112) КАК ОстаточнаяСтоимостьНа0112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	СУММА(ВложенныйЗапрос.СуммаАвансовыхПлатежей) КАК СуммаАвансовыхПлатежей,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьНа0111),
	|	СУММА(ОстаточнаяСтоимостьНа0112),
	|	СУММА(ОстаточнаяСтоимостьНа3112),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	СУММА(СуммаАвансовыхПлатежей),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел2 =  Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
            ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
            ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
            			
			СтраницаРаздел2.П000020000101 = Выборка.КодВидаИмущества;
			СтраницаРаздел2.П000020001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
			СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
					
			СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012003 = Выборка.ОстаточнаяСтоимостьНа0111;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0111, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013003 = Выборка.ОстаточнаяСтоимостьНа0112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020013003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020013004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014003 = Выборка.ОстаточнаяСтоимостьНа3112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа3112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014103 = Выборка.ОстаточнаяСтоимостьНедвижимости;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014104 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНедвижимости, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020023003 = Выборка.СуммаАвансовыхПлатежей;
						
			СтраницаРаздел2.П000020027003 = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020015003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020015003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020017003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020017003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020019003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020019003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020022003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020022003, "", ДополнительныеПараметры);
									
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
				СтраницаРаздел2.П000020024003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020025003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020025003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020025003, "", ДополнительныеПараметры);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 3
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Количество()>1 Цикл
		Раздел3.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел3 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел3.Добавить().Данные = Новый СписокЗначений();
				Раздел3[Раздел3.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел3 =  Раздел3[Раздел3.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
			
			ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);

			
			СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
			СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
			СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
			
			СтраницаРаздел3.П000030011003 = Выборка.СуммаАвансовыхПлатежей;
									
			СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел3.П000030007003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			
			СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
			СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
			
			СтраницаРаздел3.П000030008003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КоличествоМесяцевВладения > 0 Тогда
				СтраницаРаздел3.П000030009003_Числ = Выборка.КоличествоМесяцевВладения;
				СтраницаРаздел3.П000030009003_Знам = 12;
			КонецЕсли;
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030010003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030010003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030006003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030006003, "", ДополнительныеПараметры);
						                                   
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда        
			    
				СтраницаРаздел3.П000030012003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030013003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
				
			КонецЕсли;             
			
	КонецЦикла;
	
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ЗемельныйНалог

Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2011Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2011Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	СтрокаСведений = "КППЮЛ,КодНО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация,,СтрокаСведений);
	КПП = СведенияОбОрганизации.КППЮЛ;
	КодНО = СведенияОбОрганизации.КодНО;
	
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.КодНалоговогоОргана Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	
	// Выборка земельных участков и числа полных месяцев владения ими.
	// При этом если возникновение (прекращение) у налогоплательщика в течение налогового периода 
	// права собственности (постоянного (бессрочного) пользования, пожизненного наследуемого владения) 
	// на земельный участок (его долю) произошло до 15-го числа соответствующего месяца включительно, 
	// за полный месяц принимается месяц возникновения указанных прав. Если возникновение (прекращение)
	// указанных прав произошло после 15-го числа соответствующего месяца, за полный месяц принимается 
	// месяц прекращения указанных прав.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	Период = НачалоГода(мДатаНачалаПериодаОтчета);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(" + Формат(Период, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастковСрезПоследних.Период КАК ДатаРегистрацииЗемли,
		|	NULL КАК НалоговаяЛьготаПоНалоговойБазе,
		|	1 КАК КоличествоМесяцев,
		|	0 КАК КоличествоМесяцевПримененияЛьготы
		|ПОМЕСТИТЬ
		|	ВладениеЗемельнымиУчастками" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		РегистрацияЗемельныхУчастковСрезПоследних.Период КАК Период
		|	ИЗ
		|		РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
		|				ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14),
		|				Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|	ГДЕ
		|		РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу = ИСТИНА
		|		И НалоговыйОрган В (&НалоговыйОрган)
		|
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		РегистрацияЗемельныхУчастков.ОсновноеСредство,
		|		РегистрацияЗемельныхУчастков.Период
		|	ИЗ
		|		РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|	ГДЕ
		|		РегистрацияЗемельныхУчастков.Организация = &Организация
		|		И РегистрацияЗемельныхУчастков.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14)
		|		И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу = ИСТИНА
		|		И РегистрацияЗемельныхУчастков.НалоговыйОрган В (&НалоговыйОрган)
		|	) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(" + Формат(Период, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.Период КАК ДатаРегистрацииЗемли,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
		|	0 КАК КоличествоМесяцев,
		|	1 КАК КоличествоМесяцевПримененияЛьготы
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			РегистрацияЗемельныхУчастковСрезПоследних.Период КАК Период,
		|			РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ),
		|					Организация = &Организация
		|						И НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|		ГДЕ
		|			РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу = ИСТИНА
		|			И РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияЗемельныхУчастков.ОсновноеСредство,
		|			РегистрацияЗемельныхУчастков.Период,
		|			РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|		ГДЕ
		|			РегистрацияЗемельныхУчастков.Организация = &Организация
		|			И РегистрацияЗемельныхУчастков.НалоговыйОрган В (&НалоговыйОрган)
		|			И РегистрацияЗемельныхУчастков.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
		|			И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу = ИСТИНА
		|			И РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)
		|		) КАК РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ВладениеЗемельнымиУчастками
									  |",
									  "")
								  + "ИЗ ВладениеЗемельнымиУчастками" + Формат(Период, "ДФ=MM") + "
									|";
		
		Период = ДобавитьМесяц(Период, 1);
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Период", КонецГода(мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	МАКСИМУМ(НомерМесяца) КАК НомерМесяца, 
	|	ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_НомераПоследнихМесяцев
	|ИЗ 
	|	ВладениеЗемельнымиУчастками 
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL) 
	|СГРУППИРОВАТЬ ПО 
	|	ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновноеСредство,
	|	НомерМесяца,
	|	НалоговаяЛьготаПоНалоговойБазе
	|ПОМЕСТИТЬ ВТ_ВидыЛьгот
	|ИЗ 
	|	ВладениеЗемельнымиУчастками 
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцевПримененияЛьготы) КАК КоличествоМесяцевПримененияЛьготы
	|ПОМЕСТИТЬ ВТ_ПрименениеЛьготы
	|ИЗ
	|	ВладениеЗемельнымиУчастками
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство,
	|	ВладениеЗемельнымиУчастками.НалоговаяЛьготаПоНалоговойБазе
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрименениеЛьготы.ОсновноеСредство,
	|	ПрименениеЛьготы.КоличествоМесяцевПримененияЛьготы
	|ПОМЕСТИТЬ ВТ_Льготы
	|ИЗ
	|	ВТ_НомераПоследнихМесяцев КАК НомераПоследнихМесяцев
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыЛьгот КАК ВидыЛьгот
	|	ПО НомераПоследнихМесяцев.ОсновноеСредство = ВидыЛьгот.ОсновноеСредство
	|	И НомераПоследнихМесяцев.НомерМесяца = ВидыЛьгот.НомерМесяца
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПрименениеЛьготы КАК ПрименениеЛьготы
	|	ПО ВидыЛьгот.ОсновноеСредство = ПрименениеЛьготы.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ПрименениеЛьготы.ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ВладениеЗемельнымиУчастками.ДатаРегистрацииЗемли) КАК ДатаРегистрацииЗемли,
	|	СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцев) КАК КоличествоМесяцевВладения
	|ПОМЕСТИТЬ ВТ_ВладениеУчастками
	|ИЗ
	|	ВладениеЗемельнымиУчастками
	|СГРУППИРОВАТЬ ПО
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеУчастками.ОсновноеСредство,
	|	ВладениеУчастками.ДатаРегистрацииЗемли,
	|	ЕСТЬNULL(ВладениеУчастками.КоличествоМесяцевВладения, 0) КАК КоличествоМесяцевВладения,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодКатегорииЗемель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КадастровыйНомер,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КБК КАК КБК,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.КадастроваяСтоимость, 0) КАК КадастроваяСтоимость,
	|	ВЫБОР
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		  ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
	|		ТОГДА 
	|			РегистрацияЗемельныхУчастковСрезПоследних.КодПоОКАТО
	|		ИНАЧЕ 
	|			ЕстьNULL(РегистрацияЗемельныхУчастковСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ОбщаяСобственность, ЛОЖЬ) КАК ОбщаяСобственность,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЧислитель, 0) КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЗнаменатель, 0) КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ЖилищноеСтроительство, ЛОЖЬ) КАК ЖилищноеСтроительство,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДатаНачалаПроектирования, ДАТАВРЕМЯ(1,1,1)) КАК ДатаНачалаПроектирования,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДатаРегистрацииПравНаОбъектНедвижимости, ДАТАВРЕМЯ(1,1,1)) КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
	|	ЕСТЬNULL(Льготы.КоличествоМесяцевПримененияЛьготы, 0) КАК КоличествоМесяцевПримененияЛьготы,
	|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЧислитель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыПоСтатье391, ЛОЖЬ) КАК УменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыНаСумму, ЛОЖЬ) КАК УменьшениеНалоговойБазыНаСумму,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.НеОблагаемаяНалогомСумма, 0) КАК НеОблагаемаяНалогомСумма,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка, 0) КАК СниженнаяНалоговаяСтавка,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога, 0) КАК ПроцентУменьшенияСуммыНалога,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.СуммаУменьшенияСуммыНалога, 0) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ВладениеУчастками КАК ВладениеУчастками
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Льготы КАК Льготы
	|	ПО ВладениеУчастками.ОсновноеСредство = Льготы.ОсновноеСредство
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА) КАК РегистрацияЗемельныхУчастковСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА И НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)) КАК РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам
	|		ПО РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ОсновноеСредство = РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство
	|		 И РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговыйОрган В (&НалоговыйОрган)
	|	ПО РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство = ВладениеУчастками.ОсновноеСредство
	|	И РегистрацияЗемельныхУчастковСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
	|";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	ВыборкаЗемельныхУчастков = РезультатЗапроса.Выбрать();
	
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	ПериодОтчета = НачалоГода(мДатаНачалаПериодаОтчета);

	Количество = 0;
	Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
		
		Если НЕ (ВыборкаЗемельныхУчастков.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись) Тогда
			Продолжить;
		КонецЕсли;
		
		Количество = Количество + 1;
		Если Количество > 1 Тогда
			
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из Раздел2 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
			Контейнер.Раздел2[Количество-1].Данные.Добавить(СтруктураНовойТаблицы);
			Раздел2 = Контейнер.Раздел2[Количество-1].Данные[0].Значение;
				
		КонецЕсли;
		
		// Кадастровый номер.
		Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;

		// КБК.
		Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
		
		// Код по ОКАТО.
		Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКАТО;
		
		// Код категории земель.
		Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
		
		Если ВыборкаЗемельныхУчастков.ЖилищноеСтроительство Тогда
			
			Если ВыборкаЗемельныхУчастков.ДатаРегистрацииЗемли >= Дата(2008,1,1) Тогда
				
				Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
					ИЛИ ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости > ПериодОтчета Тогда
					
					ПериодПроектированияИСтроительства = ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаРегистрацииЗемли, ПериодОтчета) / 12;
					
					Если ПериодПроектированияИСтроительства > 3 Тогда
						// Период проектирования и строительства - свыше 3-х лет.
						Раздел2.П000020004003 = "2";
					Иначе
						// Период проектирования и строительства - 3 года.
						Раздел2.П000020004003 = "1";
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования <> Дата(1,1,1) Тогда 
				
				Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
				   ИЛИ (НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1))
						И НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости < ПериодОтчета)) Тогда
					
					ПериодПроектированияИСтроительства = ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования, ПериодОтчета) / 12;
					
					Если ПериодПроектированияИСтроительства > 3 Тогда
						// Период проектирования и строительства - свыше 3-х лет.
						Раздел2.П000020004003 = "2";
					Иначе
						// Период проектирования и строительства - 3 года.
						Раздел2.П000020004003 = "1";
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		// Кадастровая стоимость.
		Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
	
		// Доля в праве на земельный участок.
		Если ВыборкаЗемельныхУчастков.ОбщаяСобственность Тогда
			
			// Числитель.
			Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
			
			// Знаменатель.
			Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда

		
			Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
			
				// Код налоговой льготы - не облагаемая налогом сумма.
				Раздел2.П000020007003_КодЛьготы = "3022100";
				Раздел2П000020007003_Основание = "000000000000";
				
				// Не облагаемая налогом сумма.
				Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
				
			КонецЕсли;
			
			Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
			
				// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
				Раздел2П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
				
				// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
				Раздел2.П000020010003 = 10000;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
		
			// Код налоговой льготы - не облагаемая налогом площадь.
			Раздел2.П000020011003_КодЛьготы = "3022300";
			Раздел2.П000020011003_Основание = "000000000000";
			
			// Доля не облагаемой площади (простая дробь).
			
			// Числитель.
			Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель;
			
			// Знаменатель.
			Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель;
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
		
			// Код налоговой льготы - освобождение от налогообложения.
			Раздел2.П000020020003_КодЛьготы = "3022400";
			Раздел2.П000020020003_Основание = "000000000000";
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;

		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
			
			// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
			Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;
		
		// Налоговая ставка.
		НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
		
		Раздел2.П000020014003 = НалоговаяСтавка;
		
		// Количество полных месяцев владения земельным участком в течение налогового периода.
		Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
		
		
		КодНалоговойЛьготыВОтношенииСуммыНалога   = "";
		СуммаНалоговойЛьготыВОтношенииСуммыНалога = 0;
		
		ОсноваДляРасчетаНалоговойБазы = ВыборкаЗемельныхУчастков.КадастроваяСтоимость * 
			?(ВыборкаЗемельныхУчастков.ОбщаяСобственность, 
				ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель / ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель, 1);
		Строка080 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы И ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму,
						ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма, 0);
		Строка100 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы И ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391,
						10000, 0);
		Строка120 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь И ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель <> 0,
						ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель/ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0);
		Строка150 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
		Строка180 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
		ЧислоМесяцевВОтчетномПериоде = 12;
		Если Строка180 = 0 Тогда
			Строка190 = 1;
		Иначе
			ЧислоМесяцевИспользованияЛьготы = Строка150 - Строка180;
			Строка190 = Макс(ЧислоМесяцевИспользованияЛьготы / ЧислоМесяцевВОтчетномПериоде, 0);
			Строка190 = Окр(Строка190, 4);
		КонецЕсли;
		Если Строка080 <> 0 ИЛИ Строка100 <> 0 Тогда
			Строка130= Макс(ОсноваДляРасчетаНалоговойБазы - (Строка080 + Строка100), 0);
		ИначеЕсли Строка120 > 0 Тогда
			Строка130 = Макс((ОсноваДляРасчетаНалоговойБазы - (ОсноваДляРасчетаНалоговойБазы * Строка120 * (1 - Строка190))), 0);
		Иначе
			Строка130 = Макс(ОсноваДляРасчетаНалоговойБазы, 0);
		КонецЕсли;
		Строка140 = НалоговаяСтавка;
		Строка040 = Раздел2.П000020004003;
		Строка160 = Окр(Строка150 / ЧислоМесяцевВОтчетномПериоде, 4);
		ОсноваДляРасчетаСтроки170 = Окр(Строка130) * Строка140 * Строка160 / 100;
		Если Строка040 = "1" Тогда
			Строка170 = ОсноваДляРасчетаСтроки170 * 2;
		ИначеЕсли Строка040 = "2" Тогда
			Строка170 = ОсноваДляРасчетаСтроки170 * 4;
		Иначе
			Строка170 = ОсноваДляРасчетаСтроки170;
		КонецЕсли;
		Строка170 = Окр(Строка170, 2);
		
		КоэффициентК2 = Строка150 / ЧислоМесяцевВОтчетномПериоде;//160
		НалоговаяБаза = Строка130;//130
		СуммаНалога   = Строка170;//170

		Если ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка) Тогда
			
			// Код налоговой льготы в виде снижения налоговой ставки.
			Раздел2.П000020026003_КодЛьготы = "3022500";
			Раздел2.П000020026003_Основание = "000000000000";
			
			Раздел2.П000020027003 = СуммаНалога - НалоговаяБаза * КоэффициентК2 * (ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка / 100);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога) 
		 ИЛИ ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.СуммаУменьшенияСуммыНалога) Тогда
			
			// Код налоговой льготы в виде уменьшения суммы налога.
			Раздел2.П000020024003_КодЛьготы = "3022200";
			Раздел2.П000020024003_Основание = "000000000000";
			
			СуммаУменьшения = СуммаНалога * ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога / 100 // уменьшение в процентах.
			                + ВыборкаЗемельныхУчастков.СуммаУменьшенияСуммыНалога;                      // уменьшение на сумму.
			
			// Сумма налоговой льготы в виде уменьшения суммы налога и (или) снижения налоговой ставки.
			Раздел2.П000020025003 = СуммаУменьшения;
			
			
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	Из &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыНаСумму,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	           	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 2;
	КоличествоРаздел2 = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			//Авансовые платежи по разделу 1
			Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
				И НомерБлокаРаздела1 <> 0 Тогда
				
				Контейнер.Раздел1.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел1 = Контейнер.Раздел1.Количество()-1;
			
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицы);
				Раздел1 = Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные[0].Значение;

				НомерБлокаРаздела1 = 0;
				
			КонецЕсли;
			
			ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
			
			Раздел1["П000010001003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			
			Раздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
					
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
					Контейнер.Раздел2[КоличествоРаздел2-1].Данные.Добавить(СтруктураНовойТаблицы);
					Раздел2 = Контейнер.Раздел2[КоличествоРаздел2-1].Данные[0].Значение;
					
				КонецЕсли;
				
				// Кадастровый номер.
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				
				// КБК.
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				
				// Код по ОКТМО.
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				
				// Код категории земель.
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				
				// Кадастровая стоимость.
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				
				// Доля в праве на земельный участок.
				
				// Числитель.
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				
				// Знаменатель.
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда
					
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма.
						Раздел2.П000020007003_КодЛьготы = "3022100";
						Раздел2П000020007003_Основание = "000000000000";
						
						// Не облагаемая налогом сумма.
						Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
						
					КонецЕсли;
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
						Раздел2П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
						
						// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
						Раздел2.П000020010003 = 10000;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
					
					// Код налоговой льготы - не облагаемая налогом площадь.
					Раздел2.П000020011003_КодЛьготы = "3022300";
					Раздел2.П000020011003_Основание = "000000000000";
					
					// Доля не облагаемой площади (простая дробь).
					
					// Числитель.
					Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					
					// Знаменатель.
					Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
					
					// Код налоговой льготы - освобождение от налогообложения.
					Раздел2.П000020020003_КодЛьготы = "3022400";
					Раздел2.П000020020003_Основание = "000000000000";
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
					Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				// Налоговая ставка.
				НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Раздел2.П000020014003 = НалоговаяСтавка;
				
				// Количество полных месяцев владения земельным участком в течение налогового периода.
				Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Раздел2.П000020027003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки;
				
				Раздел2.П000020025003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	 	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2014Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Сумма", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2014Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	Из &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыНаСумму,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СниженнаяНалоговаяСтавка,
	|	ВложенныйЗапрос.ПроцентУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 2;
	КоличествоРаздел2        = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			//Авансовые платежи по разделу 1
			Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0
				И НомерБлокаРаздела1 <> 0 Тогда
				
				Контейнер.Раздел1.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел1 = Контейнер.Раздел1.Количество()-1;
			
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицы);
				Раздел1 = Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные[0].Значение;
				НомерБлокаРаздела1 = 0;
				
			КонецЕсли;
			
			ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
			
			Раздел1["П000010001003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			
			Раздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
					
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
					Контейнер.Раздел2[КоличествоРаздел2-1].Данные.Добавить(СтруктураНовойТаблицы);
					Раздел2 = Контейнер.Раздел2[КоличествоРаздел2-1].Данные[0].Значение;
					
				КонецЕсли;
				
				// Кадастровый номер.
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				
				// КБК.
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				
				// Код по ОКТМО.
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				
				// Код категории земель.
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				
				// Кадастровая стоимость.
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				
				// Доля в праве на земельный участок.
				
				// Числитель.
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				
				// Знаменатель.
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда
					
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма.
						Раздел2.П000020007003_КодЛьготы = "3022100";
						Раздел2.П000020007003_Основание = "000000000000";
						
						// Не облагаемая налогом сумма.
						Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
						
					КонецЕсли;
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
						Раздел2.П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
						
						// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
						Раздел2.П000020010003 = 10000;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
					
					// Код налоговой льготы - не облагаемая налогом площадь.
					Раздел2.П000020011003_КодЛьготы = "3022300";
					Раздел2.П000020011003_Основание = "000000000000";
					
					// Доля не облагаемой площади (простая дробь).
					
					// Числитель.
					Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					
					// Знаменатель.
					Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
					
					// Код налоговой льготы - освобождение от налогообложения.
					Раздел2.П000020020003_КодЛьготы = "3022400";
					Раздел2.П000020020003_Основание = "000000000000";
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
					Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				// Налоговая ставка.
				НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Раздел2.П000020014003 = НалоговаяСтавка;
				
				// Количество полных месяцев владения земельным участком в течение налогового периода.
				Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					
					Раздел2.П000020024003_КодЛьготы = "3022200";
					Раздел2.П000020024003_Основание = "000000000000";
					
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020024003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020024003_Сумма = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					
					Раздел2.П000020026003_КодЛьготы = "3022500";
					Раздел2.П000020026003_Основание = "000000000000";
					
					Раздел2.П000020026003_Ставка = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					
				КонецЕсли;
				
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	 	
КонецПроцедуры

#КонецОбласти

#Область ТранспортныйНалог

Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2007Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2007Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|                                                                                                          И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА ЕстьNULL(РегистрацияТранспортныхСредствСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	МАКСИМУМ(РегистрацияТранспортныхСредств.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.Удалить(1);
	КонецЦикла;
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	ДанныеФормыЭлементКоллекции = Раздел2[0].ДанныеДопСтрок[0].Значение[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
			
		Если Не ПерваяСтраница Тогда
			
			Раздел2.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницы = Раздел2.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
			СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Добавить();
			ИндексПоследнего = Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Количество()-1;
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Добавить(Контейнер.Раздел2_ХранилищеДанныхДопСтрок[ИндексПоследнего].Таблица);
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
			Раздел2Текущий.ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела";
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
	

		// Вставим код ОКАТО в раздел 2, для которого будем выводить всю информацию о ТС.
		СтраницаРаздел2.ОКАТОРаздел2 = ВыборкаОКАТО.КодПоОКАТО;

		// Отберем все объекты с необходимым кодом ОКАТО
		ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			
			Если ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО > 11 Тогда 
				Если Не ПерваяСтраница Тогда
					
					//Больше 11 строк на страницу не помещается
					Раздел2.Добавить().Данные = Новый СписокЗначений();
					НомерТекущейСтраницы = Раздел2.Количество()-1;
					
					СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
					Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
						Если Неопределено = Показатель.Значение Тогда 
							СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
						Иначе 
							СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
						КонецЕсли;
					КонецЦикла;
					
					Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
					Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
					СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
					
					Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
					Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
					Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Добавить();
					ИндексПоследнего = Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Количество()-1;
					Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Добавить(Контейнер.Раздел2_ХранилищеДанныхДопСтрок[ИндексПоследнего].Таблица);
					Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
					Раздел2Текущий.ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела";
					
					СтраницаРаздел2.ОКАТОРаздел2 = ВыборкаОКАТО.КодПоОКАТО;
					
				Иначе
					// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
					ПерваяСтраница = Ложь;
				КонецЕсли;
				
				ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = 1;
			КонецЕсли;

			Если ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО > 1 Тогда 
				
				Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
				
			КонецЕсли;
			
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002002 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;

			// Идентификационный номер ТС
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;

			// Марка ТС
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002004 = ВыборкаТранспортныхСредств.Марка;

			// Регистрационный знак
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002005 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;

			// Налоговая база
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002006 = ВыборкаТранспортныхСредств.НалоговаяБаза;

			// Ед. изм.
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002007 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			
			// Коэффициент
			Коэффициент = Окр(ВыборкаТранспортныхСредств.КоличествоМесяцев
							  / (Месяц(мДатаКонцаПериодаОтчета) - Месяц(мДатаНачалаПериодаОтчета) + 1), 2);	
							  
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002009 = Коэффициент;
			
			// Ставка
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002010 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			Если НЕ (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				
				// Код налоговой льготы
				Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002012 = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				
				Если ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка)
								- (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.ЛьготнаяСтавка);
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка)
								* ВыборкаТранспортныхСредств.ПроцентУменьшения / 100;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
					
				КонецЕсли;
				
				// Сумма налоговой льготы
				Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002013 = СуммаЛьготы;
				
			КонецЕсли;
			
			ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО + 1;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		ВЫБОР
		|			КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|					И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА ЕстьNULL(РегистрацияТранспортныхСредствСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЭкологическийКласс КАК ЭкологическийКласс,
		|	РегистрацияТранспортныхСредствСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	МАКСИМУМ(РегистрацияТранспортныхСредств.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			Если Не ПерваяСтраница Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницы = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДатаВыпуска = ВыборкаТранспортныхСредств.ОсновноеСредство.ДатаВыпуска;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКАТО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020010003 = ?(ЗначениеЗаполнено(ДатаВыпуска),Год(мДатаКонцаПериодаОтчета) - Год(ДатаВыпуска),"");
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцев;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			НалоговаяЛьгота = ВыборкаТранспортныхСредств.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда 
				СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцев;
			КонецЕсли;
			
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020022003 = 0;
						
			Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СуммаЛьготы = ВыборкаТранспортныхСредств.НалоговаяБаза * ВыборкаТранспортныхСредств.НалоговаяСтавка * 
									(ВыборкаТранспортныхСредств.КоличествоМесяцев/12) *
									(ВыборкаТранспортныхСредств.ПроцентУменьшения/100);
					СтраницаРаздел2.П000020020003 = СуммаЛьготы;
				КонецЕсли;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
				СтраницаРаздел2.П000020020003 = СуммаЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * (ВыборкаТранспортныхСредств.НалоговаяСтавка - ВыборкаТранспортныхСредств.ЛьготнаяСтавка)) *
									(ВыборкаТранспортныхСредств.КоличествоМесяцев/12);
					СтраницаРаздел2.П000020022003 = СуммаЛьготы;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Ставка", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		ВЫБОР
		|			КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|					И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА 
		|			ЕстьNULL(РегистрацияТранспортныхСредствСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ 
		|			РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЭкологическийКласс КАК ЭкологическийКласс
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс
	|ПОМЕСТИТЬ ВТ_РазличныеЗаписи
	|ИЗ
	|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_РазличныеЗаписи.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.КодПоОКАТО КАК КодПоОКАТО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.НалоговаяСтавка,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_РазличныеЗаписи.НалоговаяЛьгота <> ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЗаписейЛьгот
	|ПОМЕСТИТЬ ВТ_ЗаписиБезУчетаЛьгот
	|ИЗ
	|	ВТ_РазличныеЗаписи КАК ВТ_РазличныеЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.КодПоОКАТО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.НалоговаяСтавка,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцевЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев, 0) = 0
	|			ТОГДА СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев)
	|		ИНАЧЕ ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев
	|	КОНЕЦ КАК КоличествоМесяцевВладения,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0) КАК КоличествоЗаписейЛьгот
	|ИЗ
	|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаписиБезУчетаЛьгот КАК ВТ_ЗаписиБезУчетаЛьгот
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ВТ_ЗаписиБезУчетаЛьгот.ОсновноеСредство
	|			И РегистрацияТранспортныхСредств.РегистрационныйЗнак = ВТ_ЗаписиБезУчетаЛьгот.РегистрационныйЗнак
	|			И РегистрацияТранспортныхСредств.Марка = ВТ_ЗаписиБезУчетаЛьгот.Марка
	|			И РегистрацияТранспортныхСредств.ИдентификационныйНомер = ВТ_ЗаписиБезУчетаЛьгот.ИдентификационныйНомер
	|			И РегистрацияТранспортныхСредств.КодПоОКАТО = ВТ_ЗаписиБезУчетаЛьгот.КодПоОКАТО
	|			И РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства = ВТ_ЗаписиБезУчетаЛьгот.КодВидаТранспортногоСредства
	|			И РегистрацияТранспортныхСредств.НалоговаяБаза = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяБаза
	|			И РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы = ВТ_ЗаписиБезУчетаЛьгот.ЕдиницаИзмеренияНалоговойБазы
	|			И РегистрацияТранспортныхСредств.НалоговаяСтавка = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяСтавка
	|			И РегистрацияТранспортныхСредств.ЭкологическийКласс = ВТ_ЗаписиБезУчетаЛьгот.ЭкологическийКласс
	|			И (ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКАТО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если ВыборкаТранспортныхСредств.КоличествоЗаписейЛьгот = 1
				И (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				// В декларацию выводится та строка, в которой содержится информация о льготе.
				Продолжить;
			КонецЕсли;
		
			Если Не ПерваяСтраница Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницы = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКАТО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			НалоговаяЛьгота = ВыборкаТранспортныхСредств.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда 
				СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			КонецЕсли;
			
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020019003_Процент 	= 0;
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Ставка 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
						
			Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020019003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
				СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
				СтраницаРаздел2.П000020015003 = 0;
				ТекстСообщения = НСтр("ru = 'Для основного средства ""%1"" (регистрационный знак ""%2"") установлена 
					|налоговая льгота в виде уменьшения суммы налога на %3 руб., которая не применяется с 2012 года.
					|Проверьте и при необходимости измените параметры расчета налога %4.'");
					
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
					ВыборкаТранспортныхСредств.ОсновноеСредство, 
					ВыборкаТранспортныхСредств.РегистрационныйЗнак,
                    СуммаЛьготы,
                    ПутьКРегистру);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ВыборкаТранспортныхСредств.ОсновноеСредство);
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020021003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Ставка", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовТранспортногоНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовТранспортногоНалога
	|	Из &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 3;
	ПерваяСтраницаРаздел2	= Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		//Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
						
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
						
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020019003_Процент 	= 0;
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Ставка 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
						
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020021003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020019003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;	
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2014Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_Ставка", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовТранспортногоНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовТранспортногоНалога
	|	Из &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ТаблицаРасчетовТранспортногоНалога.ПовышающийКоэффициент
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 3;
	ПерваяСтраницаРаздел2	= Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		//Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
						
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020012003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020012003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
						
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Процент 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
			СтраницаРаздел2.П000020023003_КодЛьготы = "";
			СтраницаРаздел2.П000020023003_Основание = "";
			СтраницаРаздел2.П000020023003_Ставка 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
						
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020023003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020023003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020023003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020021003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;	
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана = Неопределено, КПП = Неопределено)
	
	НалоговыйОрган = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		КодыРегистрацииОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "КодНалоговогоОргана, КПП");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Код", ?(ЗначениеЗаполнено(КодНалоговогоОргана), КодНалоговогоОргана, КодыРегистрацииОрганизации.КодНалоговогоОргана));
		Запрос.УстановитьПараметр("КПП", ?(ЗначениеЗаполнено(КПП), КПП, КодыРегистрацииОрганизации.КПП));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА Организации.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
		|				И Организации.ОбособленноеПодразделение
		|			ТОГДА Организации.ГоловнаяОрганизация
		|		ИНАЧЕ Организации.Ссылка
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ ВТ_Организации
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацииВНалоговомОргане.Ссылка,
		|	РегистрацииВНалоговомОргане.Владелец
		|ПОМЕСТИТЬ ВТ_РегистрацииВНалоговомОргане
		|ИЗ
		|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|ГДЕ
		|	РегистрацииВНалоговомОргане.ПометкаУдаления = ЛОЖЬ
		|	И РегистрацииВНалоговомОргане.Код = &Код
		|	И РегистрацииВНалоговомОргане.КПП = &КПП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РегистрацииВНалоговомОргане.Ссылка
		|ИЗ
		|	ВТ_Организации КАК ВТ_Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииВНалоговомОргане КАК ВТ_РегистрацииВНалоговомОргане
		|		ПО ВТ_Организации.Организация = ВТ_РегистрацииВНалоговомОргане.Владелец";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
		
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			НалоговыйОрган = Выборка.Ссылка;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НалоговыйОрган;
	
КонецФункции // ПолучитьРегистрациюВНалоговомОрганеПоОрганизации()

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры);
КонецПроцедуры

Процедура ДобавитьЗначениеВОтбор(Отбор, ЛевоеЗначение, ВидСравнения, ПравоеЗначение)
		  
	ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение 	= ЛевоеЗначение;
	ЭлементОтбора.ВидСравнения 		= ВидСравнения;
	ЭлементОтбора.ПравоеЗначение 	= ПравоеЗначение;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
КонецПроцедуры 

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположен регистр сведений "Регистрация транспортных средств".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств()

	ИнтерфейсТакси = ПолучитьФункциональнуюОпцию("ИнтерфейсТакси");
	
	Если ИнтерфейсТакси Тогда
		Результат = НСтр("ru = '(меню ""Справочники"" - ""Транспортный налог"" - ""Регистрация транспортных средств"")'");
	Иначе
		Результат = НСтр("ru = '(меню ""Учет, налоги, отчетность"" - ""Транспортный налог"" - ""Регистрация транспортных средств"")'");
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ПолучитьОписаниеПутиКОбъектуВИнтерфейсе()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположена форма регистров сведений "Ставки налога на имущество" и "Ставки налога на имущество по отдельным основным средствам".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()

	ИнтерфейсТакси = ПолучитьФункциональнуюОпцию("ИнтерфейсТакси");
	
	Если ИнтерфейсТакси Тогда
		Результат = НСтр("ru = '(меню ""Справочники"" - ""Налог на имущество"")'");
	Иначе
		Результат = НСтр("ru='(меню ""Учет, налоги, отчетность"" - ""Налог на имущество"")'");
	КонецЕсли;

	Возврат Результат;

КонецФункции // ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположена регистр сведений "Порядок уплаты налогов на местах".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()
	
	ИнтерфейсТакси = ПолучитьФункциональнуюОпцию("ИнтерфейсТакси");
	
	Если ИнтерфейсТакси Тогда
		Результат = НСтр("ru = '(меню ""Справочники"" - ""Налог на имущество"" - "" - ""Порядок уплаты"")'");
	Иначе
		Результат = НСтр("ru='(меню ""Учет, налоги, отчетность"" - ""Налог на имущество"" - ""Порядок уплаты"")'");
	КонецЕсли;

	Возврат Результат;

КонецФункции // ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположен регистр сведений "Регистрация земельных участков".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков()

	ИнтерфейсТакси = ПолучитьФункциональнуюОпцию("ИнтерфейсТакси");
	
	Если ИнтерфейсТакси Тогда
		Результат = НСтр("ru = '(меню ""Справочники"" - ""Земельный налог"" - ""Регистрация земельных участков"")'");
	Иначе
		Результат = НСтр("ru = '(меню ""Учет, налоги, отчетность"" - ""Земельный налог"" - ""Регистрация земельных участков"")'");
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПолучитьОписаниеПутиКОбъектуВИнтерфейсе()

#КонецОбласти
