////////////////////////////////////////////////////////////////////////////////
// Открытие вспомогательных форм
//  
////////////////////////////////////////////////////////////////////////////////


#Область ПрограммныйИнтерфейс

// Включение проверки
Процедура ПредложитьВключитьПроверкуКонтрагентов(ФормаВладелец = Неопределено) Экспорт
	
	Если ПроверкаКонтрагентовВызовСервера.НужноПоказатьПредложениеВключитьПроверкаКонтрагентов() Тогда
		
		ОткрытьФорму("ОбщаяФорма.ВключениеПроверкиКонтрагентов", , ФормаВладелец);
		
	КонецЕсли;
	
КонецПроцедуры

// Инструкция
Процедура ОткрытьИнструкциюПоИспользованиюСервиса(СтандартнаяОбработка = Ложь) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.ИнструкцияПоИспользованиюПроверкиКонтрагента.Форма.ИнструкцияПоПроверкеКонтрагентов", , , "Инструкция");
	
КонецПроцедуры

// Настройки
Процедура ОткрытьНастройкиСервиса() Экспорт
	
	ОткрытьФорму("ОбщаяФорма.НастройкиПроверкиКонтрагентов");

КонецПроцедуры

// Интервал обработки результата фонового задания
Процедура ПересчитатьИнтервалПроверкиРезультата(ИнтервалПроверкиРезультата) Экспорт
	
	Если ИнтервалПроверкиРезультата < 5 Тогда
		ИнтервалПроверкиРезультата = ИнтервалПроверкиРезультата + 1;
	Иначе
		ИнтервалПроверкиРезультата = 5;
	КонецЕсли;

КонецПроцедуры

Процедура СброситьАктуальностьОтчета(Форма) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Форма.Элементы.Результат, "НеАктуальность");
	ПроверкаКонтрагентовКлиентСервер.СменитьВидПанелиПроверкиКонтрагента(Форма);

КонецПроцедуры

Процедура ТаблицаФормыВыбор(Форма, Элемент, Поле) Экспорт
	
	Если Форма.ИспользованиеПроверкиВозможно Тогда
	
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Если Поле.Имя = ПроверкаКонтрагентовКлиентСервер.ИмяПоляКартинки(Элемент) Тогда
				Если ПроверкаКонтрагентовКлиентСервер.ЭтоСостояниеНедействующегоКонтрагента(ТекущиеДанные.Состояние, Истина) Тогда
				
					Описание = Новый Структура;
					Описание.Вставить("ДокументПустой", 		Ложь);
					Описание.Вставить("КонтрагентЗаполнен", 	Истина);
					Описание.Вставить("СостояниеКонтрагента", 	ТекущиеДанные.Состояние);
					Описание.Вставить("КонтрагентовНесколько", 	Ложь);
					
					СостояниеПроверки = ПредопределенноеЗначение("Перечисление.СостоянияПроверкиКонтрагентов.ПроверкаВыполнена");
					
					ПодсказкаВДокументе = ПроверкаКонтрагентовКлиентСервер.ПодсказкаВДокументе(Описание, СостояниеПроверки);
					ПоказатьПредупреждение(,ПодсказкаВДокументе.Текст, , НСтр("ru = 'Проверка контрагентов'"));
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

Процедура СохранитьРезультатПроверкиКонтрагентовПриЗакрытии(Форма) Экспорт
	
	Если Форма.ИспользованиеПроверкиВозможно Тогда
		
		ДокументОбъект 	= Форма.Объект;
		ДокументСсылка 	= ДокументОбъект.Ссылка; 
		
		ЭтоДокументСКонтрагентомВШапке 			= ПроверкаКонтрагентовКлиентСервер.ЭтоДокументСКонтрагентомВШапке(Форма); 
		ЭтоДокументСКонтрагентомВТабличнойЧасти = ПроверкаКонтрагентовКлиентСервер.ЭтоДокументСКонтрагентомВТабличнойЧасти(Форма);
		ЭтоДокументСоСчетомФактуройВПодвале 	= ПроверкаКонтрагентовКлиентСервер.ЭтоДокументСоСчетомФактуройВПодвале(Форма);
		ЭтоСчетФактура							= ПроверкаКонтрагентовКлиентСервер.ЭтоСчетФактура(Форма);
		
		// Если выполняются условия, только тогда сохряняем в регистр
		Если НЕ Форма.Модифицированность И ЗначениеЗаполнено(ДокументСсылка)
			И ((ЭтоДокументСКонтрагентомВШапке ИЛИ ЭтоДокументСКонтрагентомВТабличнойЧасти) И Форма.ЭтоДокументСОшибкой <> Форма.ЭтоДокументСОшибкойПредыдущий
			ИЛИ (ЭтоДокументСоСчетомФактуройВПодвале ИЛИ ЭтоСчетФактура) И Форма.ЭтоСчетФактураСОшибкой <> Форма.ЭтоСчетФактураСОшибкойПредыдущий) Тогда
		
			ПроверкаКонтрагентовКлиентСервер.СохранитьРезультатПроверкиКонтрагентов(Форма);
			
			ОповеститьОбИзменении(ДокументСсылка);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыФоновогоЗадания(Параметр) Экспорт
	
	Результат = Неопределено;
	
	Если Параметр = Неопределено Тогда
		
		Результат = Неопределено;
		
	ИначеЕсли ТипЗнч(Параметр) = Тип("ТаблицаФормы") Тогда 
		
		ИмяТаблицы 		= Параметр.Имя;
		Идентификатор 	= Параметр.ТекущиеДанные.ПолучитьИдентификатор();
		
		Результат = Новый Структура();
		Результат.Вставить("ИмяТаблицы", 	ИмяТаблицы);
		Результат.Вставить("Идентификатор", Идентификатор);
		
	ИначеЕсли ТипЗнч(Параметр) = Тип("ПолеФормы") Тогда 
		
		Результат = Параметр.Имя;
		
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(Параметр) = Тип("Дата") Тогда
		
		Результат = Параметр;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СобытиеТребуетПроверкиКонтрагента(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	ТребуетсяПроверкаКонтрагентов = Ложь;
	
	ПроверкаКонтрагентовКлиентПереопределяемый.ОпределитьПоИмениСобытияНеобходимостьПроверкиКонтрагентов(
		Форма, ИмяСобытия, Параметр, Источник, ТребуетсяПроверкаКонтрагентов);
		
	Возврат ТребуетсяПроверкаКонтрагентов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
