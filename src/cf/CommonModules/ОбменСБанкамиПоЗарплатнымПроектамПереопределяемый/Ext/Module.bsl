////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обмен с банками по зарплатным проектам".
// Модуль предназначен для размещения переопределяемых процедур подсистемы.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РаботаСПлатежнымДокументом

// Позволяет определить метаданные платежного документа.
//
// Параметры:
//		МетаданныеДокумента - Метаданные платежного документа.
//
// Пример:
//		МетаданныеДокумента = Метаданные.Документы.ПлатежноеПоручение;
//
Процедура ЗаполнитьМетаданныеПлатежногоДокументаПеречисленияЗарплаты(МетаданныеДокумента) Экспорт
	
КонецПроцедуры

// Позволяет определить массив ведомостей платежного документа.
//
// Параметры:
//		ПлатежныйДокумент - Ссылка на платежный документ, ведомости, которого требуется получить.
//		МассивВедомостей - Массив - массив ссылок ведомостей платежного документа.
//		СтандартнаяОбработка - Требуется установить Ложь, если установлено переопределение массива ведомостей.
//
Процедура ВедомостиПлатежногоДокументаПеречисленияЗарплаты(ПлатежныйДокумент, МассивВедомостей, СтандартнаяОбработка = Истина) Экспорт
	
КонецПроцедуры

// Позволяет дополнить платежный документ массивом ведомостей.
//
// Параметры:
//		ПлатежныйДокумент - Ссылка на платежный документ, в который требуется добавить ведомости.
//		МассивВедомостей - Массив - Массив ссылок добавляемых ведомостей в банк.
//		СтандартнаяОбработка - Требуется установить Ложь, если установлено переопределение дополнения ведомостей.
//
Процедура ДополнитьПлатежныйДокумент(ПлатежныйДокумент, МассивВедомостей, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Позволяет переопределить действия для обработчика ПередЗаписью
//
// Параметры:
//		Источник - платежный документ-объект
//		Отказ - Булево - Признак отказа от записи. Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет.
//						Значение по умолчанию: Ложь
//		СтандартнаяОбработка - Требуется установить Ложь, если установлено переопределение действий.
//						Значение по умолчанию: Истина
//
Процедура ПередЗаписьюПлатежногоДокументаПеречисленияЗарплаты(Источник, Отказ, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Позволяет переопределить действия для обработчика ПриЗаписи
//
// Параметры:
//		Источник - платежный документ-объект
//		Отказ - Булево - Признак отказа от записи. Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет.
//						Значение по умолчанию: Ложь
//		СтандартнаяОбработка - Требуется установить Ложь, если установлено переопределение действий.
//						Значение по умолчанию: Истина
//
Процедура ПриЗаписиПлатежногоДокументаПеречисленияЗарплаты(Источник, Отказ, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеФайлаОбмена

// Позволяет переопределить адрес временного хранилища, в котором хранится передаваемый файл обмена с банками.
//
// Параметры:
//		АдресФайла - адрес временного хранилища записываемого файла.
//		ДанныеШапкиДокумента - коллекция полей шапки документа, по которому формируется файл.
//		ДанныеСтрокДокумента - коллекция строк документа, по которому формируется файл.
//		КорневыеСвойства - корневые свойства формируемого файла, описание см.
//		                   ОбменСБанкамиПоЗарплатнымПроектам.КорневыеСвойства.
//		СоответствиеПолей - соответствие между полями формата и полями выгружаемой коллекции, описание см.
//		                    ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПолейФайла.
//		ОбязательныеПоля - массив обязательных для заполнения полей файла, описание см.
//		                   ОбменСБанкамиПоЗарплатнымПроектам.ОбязательныеПоляФайла.
//		СоответствиеПреобразованияЗначений - соответствие значений для преобразования, описание см.
//		                                     ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПреобразованияЗначений.
//
// Описание:
//	- В данном методе необходимо сформировать собственный файл для передачи в банк и поместить его во временное
//	хранилище, при этом формирование файла по стандарту http://v8.1c.ru/edi/edi_stnd/109 не будет произведено.
//	- Если для обмена используется xml-файл, но с отличной от стандарта структурой, то в данной процедуре необходимо
//	переопределить: КорневыеСвойства, СоответствиеПолей, ОбязательныеПоля, СоответствиеПреобразованияЗначений.
//	- Если не хватает выбранных из документа данных, то необходимо переопределить коллекции: ДанныеСтрокДокумента,
//	ДанныеСтрокДокумента.
//
Процедура ОпределитьАдресФайлаОбменаСБанкамиПоЗарплатнымПроектам(АдресФайла, ДанныеШапкиДокумента, ДанныеСтрокДокумента, КорневыеСвойства,
		СоответствиеПолей, ОбязательныеПоля, СоответствиеПреобразованияЗначений) Экспорт
	
КонецПроцедуры

// Позволяет переопределить имя файла обмена с банком.
// 
// Параметры:
//		ИмяФайла - сформированное имя файла.
//		Ссылка - ссылка на документ, по которому создается файл обмена.
//
//	Описание:
//		Описание для формируемого по умолчанию имени файла см.
//		ОбменСБанкамиПоЗарплатнымПроектам.ИмяФайлаОбменаСБанкамиПоЗарплатнымПроектам.
//
Процедура ОпределитьИмяФайлаОбменаСБанкамиПоЗарплатнымПроектам(ИмяФайла, Ссылка) Экспорт
	
КонецПроцедуры

#Область ФормированиеСтруктурыФайла

// Позволяет переопределить корневые свойства XDTO-пакета формируемого файла.
//
//	Параметры:
//		КорневыеСвойства - Соответствие - корневые свойства XDTO-пакета, зависят от вида документов.
//			Ключ элемента соответствия идентифицирует название корневого свойства.
//			В значении элемента указывается массив свойств, которые будут выгружены.
//		ВидОперации - Вид операции обмена с банками, для которого получаются корневые свойства.
//
Процедура ОпределитьКорневыеСвойства(КорневыеСвойства, ВидОперации) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие между полями файла и полями выгружаемой коллекции.
//
// Параметры:
//		СоответствиеПолей - Соответствие полей документа и файла.
//			Ключ элемента соответствия идентифицирует название поля в файле.
//			Значение элемента соответствия идентифицирует название поля в коллекции.
//		ВидОперации - Вид операции обмена с банками, для которого получается соответствие полей.
//		ФорматФайла - Версия формата файла для обмена с банками, указанная в зарплатном проекте.
//
Процедура ОпределитьСоответствиеПолейФайла(СоответствиеПолей, ВидОперации, ФорматФайла = Неопределено) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие обязательных для заполнения полей файла.
//
// Параметры:
//		ОбязательныеПоля - Соответствие полей файла.
//			Ключ элемента соответствия идентифицирует название поля, обязательного для заполнения.
//			В значении указывается Истина,если поле обязательно для заполнения, иначе Ложь.
//			По умолчанию, если поле не включено в соответствие, используется значение Ложь.
//		ВидОперации - Вид операции обмена с банками, для которого получаются обязательные для заполнения поля файла.
//
// Описание:
//		Для группы используется соответствие обязательных полей, где также можно указать обязательность самой группы
//		добавив элемент "ЗначениеОбязательноДляЗаполнения".
//
// Пример:
//		Группа УдостоверениеЛичности обязательна для заполнения, она содержит поля:
//			ВидДокумента - обязательное,
//			Номер - обязательное,
//			Серия - не обязательное,
//			ДатаВыдачи - обязательное.
//			КемВыдан - обязательное.
//
//		СоответствиеУдостоверениеЛичности = Новый Соответствие;
//		СоответствиеУдостоверениеЛичности.Вставить("ВидДокумента", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("Номер", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("ДатаВыдачи", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("КемВыдан", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("ЗначениеОбязательноДляЗаполнения", Истина);
//		СоответствиеОткрытиеСчетов = Новый Соответствие;
//		СоответствиеОткрытиеСчетов.Вставить("УдостоверениеЛичности", СоответствиеУдостоверениеЛичности);
//		ОбязательныеПоля.Вставить("ОткрытиеСчетов", СоответствиеОткрытиеСчетов);
//
//
Процедура ОпределитьОбязательныеПоляФайла(ОбязательныеПоля, ВидОперации) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие значений для преобразования.
//
// Параметры:
//		СоответствиеПреобразованияЗначений - соответствие значений для преобразования.
//			Ключ элемента соответствия идентифицирует преобразуемое значение.
//			Значение элемента соответствия идентифицирует преобразованное значение.
//		ВидОперации - Вид операции обмена с банками, для которого получается соответствие полей.
//
// Пример:
//		В файле для определения пола физического лица используется строка "Женский" или "Мужской".
//		При выгрузке в файл следует указать преобразование пола физического лица, выбранных из документа:
//		СоответствиеПреобразованияЗначений.Вставить(Перечисления.ПолФизическогоЛица.Женский, "Женский");
//		СоответствиеПреобразованияЗначений.Вставить(Перечисления.ПолФизическогоЛица.Мужской, "Мужской");
//
//		В файле для определения статуса операции по зачислению зарплаты используется строка "Зачислено", "НеЗачислено".
//		При загрузке из файла следует указать преобразование статуса:
//		СоответствиеПреобразованияЗначений.Вставить(ВРег("Зачислено"), Перечисления.РезультатыЗачисленияЗарплаты.Зачислено);
//		СоответствиеПреобразованияЗначений.Вставить(ВРег("НеЗачислено"), Перечисления.РезультатыЗачисленияЗарплаты.НеЗачислено);
//
Процедура ОпределитьСоответствиеПреобразованияЗначений(СоответствиеПреобразованияЗначений, ВидОперации) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие типов между наименованиями полей файла и колонок коллекции.
//
// Параметры:
//		СоответствиеПолей - Соответствие типов полей документа.
//			Ключ элемента соответствия идентифицирует название поля в файле.
//			Значение элемента соответствия идентифицирует тип поля в коллекции.
//		ВидОперации - Вид операции обмена с банками, для которого получается соответствие типов.
//
Процедура ОпределитьСоответствиеТипов(СоответствиеТипов, ВидОперации) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеЗначенийПриФормированииФайла

// Позволяет переопределить значение поля, выгружаемое в файл.
//
// Параметры:
//		ЗначениеПоля - Значение поля, выгружаемое в файл.
//		СвойствоПриемника - Свойство ОбъектаXDTO, в которое будет записано значение поля.
//		ЗначениеКорректно - Булево - Истина, если значение корректно и должно быть выгружено в файл, иначе Ложь - значение
//		                             не будет выгружено в файл.
//		ОбъектXDTO - заполняемый ОбъектXDTO.
//		ДанныеШапкиДокумента - коллекция полей шапки документа, по которому формируется файл.
//		ДанныеСтрокДокумента - коллекция строк документа, по которому формируется файл.
//		СоответствиеПолей - соответствие между полями формата и полями выгружаемой коллекции, описание см.
//		                    ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПолейФайла.
//		ОбязательныеПоля - массив обязательных для заполнения полей файла, описание см.
//		                   ОбменСБанкамиПоЗарплатнымПроектам.ОбязательныеПоляФайла.
//		СоответствиеПреобразованияЗначений - соответствие значений для преобразования, описание см.
//		                                     ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПреобразованияЗначений.
//		Ошибки - Структура ошибок, которые будут показаны пользователю.
//				Добавляются с помощью метода "ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю".
//
Процедура ОпределитьЗначениеПоля(ЗначениеПоля, СвойствоПриемника, ЗначениеКорректно, ОбъектXDTO, ДанныеШапкиДокумента, ДанныеСтрокДокумента,
					СоответствиеПолей, ОбязательныеПоля, СоответствиеПреобразованияЗначений, Ошибки) Экспорт
	
КонецПроцедуры

// Преобразует значение коллекции, в соответствии с полем преобразования.
//
// Параметры:
//		ЗначениеДляПреобразования - значение для преобразования.
//		СоответствиеПреобразованияЗначений - соответствие для преобразования значений.
//
Процедура ПреобразоватьЗначениеПоСоответствию(ЗначениеДляПреобразования, СоответствиеПреобразованияЗначений) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПолучениеДанныхИзВыгружаемогоДокумента

// Позволяет переопределить данные документа для формирования файла обмена.
//
// Параметры:
//		ДанныеШапкиДокумента - строка таблицы значений, содержит данные шапки документа.
//		ДатаПолученияДанных - дата формирования файла.
//		Ссылка - ссылка на документ.
//
Процедура ОпределитьДанныеШапкиДокументаДляПолученияТекстаФайла(ДанныеШапкиДокумента, Ссылка, ДатаПолученияДанных) Экспорт
	
КонецПроцедуры

// Позволяет переопределить данные строк документа для формирования файла обмена.
//
// Параметры:
//		ДанныеСтрокДокументов - таблица значений, содержит данные строк документа.
//		ДатаПолученияДанных - дата формирования файла.
//
Процедура ОпределитьДанныеСтрокДокументовДляПолученияТекстаФайла(ДанныеСтрокДокументов, ДатаПолученияДанных) Экспорт
	
КонецПроцедуры

// Позволяет дополнить колонки получаемых данных из объекта.
//
// Параметры:
//		ДанныеСтрокДокументов - коллекция строк документа, по которому формируется файл.
//		
Процедура ДополнитьКолонкиДанныхСтрокДокументов(ДанныеСтрокДокументов) Экспорт
	
КонецПроцедуры

// Позволяет переопределить значения в данных строки документа.
//
// Параметры:
//		СтрокаДанныхДокумента - коллекция строки документа, по которому формируется файл.
//		
Процедура ЗаполнитьКолонкиДанныхСтрокДокумента(СтрокаДанныхДокумента) Экспорт
	
КонецПроцедуры

// Заполняет данные платежного поручения по ведомости.
//
// Параметры:
//		Объект - ведомость, по которой нужно узнать номер и дату платежного поручения.
//		НомерПлатежногоПоручения - номер платежного поручения, которое было создано по ведомости.
//		ДатаПлатежногоПоручения - дата платежного поручения, которое было создано по ведомости.
//		ПлатежныйДокумент - ссылка на платежный документ, передается, если выгружается файл по платежному документу.
//
Процедура ЗаполнитьДанныеОплатыВедомостей(Объект, НомерПлатежногоПоручения, ДатаПлатежногоПоручения, ПлатежныйДокумент = Неопределено) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияДанных

// Позволяет реализовать проверку заполнения реквизитов выгружаемого документа.
// Вызывается из обработки проверки заполнения документа.
//
// Параметры:
//		Документ - документ, в котором требуется проверить заполнение реквизитов.
//		Отказ - Булево
//		ПроверяемыеРеквизиты - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Документ, Отказ, ПроверяемыеРеквизиты) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеФайлаПодтверждения

// Обрабатывает загрузку пользовательского формата файла обмена.
//
// Параметры:
//		ПолноеИмяФайла - полный путь к файлу.
//		ЗагруженныйДокумент - Ссылка на загруженный документ.
//		СтандартнаяОбработка - флаг дальнейшей обработки загрузки файла обмена
//				Истина - будет продолжена стандартная обработка файла обмена
//				Ложь - обработка файла обмена будет завершена.
//
Процедура ОбработатьЗагрузку(ПолноеИмяФайла, ЗагруженныйДокумент, СтандартнаяОбработка, ДокументОбъектПодтверждение = Неопределено) Экспорт
	
КонецПроцедуры

// Позволяет переопределить структуру для заполнения подтверждения из банка.
//
// Параметры:
//		СтруктураДанныхДляЗаполненияДокумента - структура для заполнения подтверждения из банка.
//		ОбъектXDTO - заполненный ОбъектXDTO.
//		КорневыеСвойства - корневые свойства загружаемого файла.
//		СоответствиеПолей - соответствие между полями коллекции и полями файла.
//		СоответствиеПреобразованияЗначений - соответствие значений для преобразования.
//		СоответствиеТипов - соответствие типов между наименованиями полей файла и колонок коллекции.
//		ПервичныйДокумент - ссылка на первичный документ, по которому производится загрузка подтверждения.
//		Отказ - если установить в Истина - документ не будет создан.
//
Процедура ОпределитьСтруктуруДляЗаполненияДокументаПоПодтверждениюБанка(СтруктураДанныхДляЗаполненияДокумента, ОбъектXDTO, 
			КорневыеСвойства, СоответствиеПолей, СоответствиеПреобразованияЗначений, СоответствиеТипов, ПервичныйДокумент, Отказ) Экспорт 
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеЗаявкиНаОткрытиеЛицевыхСчетов

// Позволяет переопределить кадровые данные сотрудников по списку физических лиц.
//
// Параметры:
//		ДанныеСотрудников - таблица значений с кадровыми данными сотрудников.
//		СписокФизическихЛиц - список физических лиц, по которым нужно получить кадровые данные.
//		СписокФизическихЛиц - список сотрудников, полученных по списку физических лиц.
//		ДатаПолученияДанных - дата, на которую будут получены периодические значения.
//		Организация - Организация
//		ЗарплатныйПроект - зарплатный проект.
//
Процедура ОпределитьДанныеСотрудниковДляОткрытияЛицевыхСчетов(ДанныеСотрудников, СписокФизическихЛиц, СписокСотрудников,
														ДатаПолученияДанных, Организация, ЗарплатныйПроект) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеЗаявкиНаЗакрытиеЛицевыхСчетов

// Позволяет переопределить кадровые данные сотрудников на закрытие лицевых счетов.
//
// Параметры:
//		МенеджерВременныхТаблиц
//		ЗакрытиеЛицевыхСчетов - Выборка с данными сотрудников.
//
Процедура ОпределитьДанныеСотрудниковДляЗакрытияЛицевыхСчетов(МенеджерВременныхТаблиц, ЗакрытиеЛицевыхСчетов) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

// Получает соответствие между ведомостью и документом оплаты.
//
// Параметры:
//		МенеджерВременныхТаблиц - Менеджер временных таблиц, в который должна быть помещена таблица
//		                          ВТСоответствиеВедомостейДокументамОплаты.
//					ВедомостьВБанк - Ссылка на ведомость в банк.
//					ДокументОплаты - Ссылка на документ оплаты по ведомости в банк.
//					Дата - Дата документа оплаты.
//		ВременнаяТаблицаОпределена - Булево - Указывает определена или нет временная таблица в менеджере временных таблиц.
//					Если временная таблица не определена, то обработчик обновления выполнен не будет.
//
// Пример:
//
//		Запрос = Новый Запрос;
//		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
//
//		Запрос.Текст =
//		"ВЫБРАТЬ
//		|	СписаниеБезналичныхДенежныхСредств.Ведомость КАК ВедомостьВБанк,
//		|	СписаниеБезналичныхДенежныхСредств.Ссылка КАК ДокументОплаты,
//		|	СписаниеБезналичныхДенежныхСредств.Ссылка.Дата КАК Дата
//		|ПОМЕСТИТЬ ВТСоответствиеВедомостейДокументамОплаты
//		|ИЗ
//		|	Документ.СписаниеБезналичныхДенежныхСредств.ВедомостиНаВыплатуЗарплаты КАК СписаниеБезналичныхДенежныхСредств
//		|ГДЕ
//		|	СписаниеБезналичныхДенежныхСредств.Ссылка.Проведен";
//
//		Запрос.Выполнить();
//		ВременнаяТаблицаОпределена = Истина;
//
Процедура СформироватьДвиженияПоДокументамОплаты(МенеджерВременныхТаблиц, ВременнаяТаблицаОпределена) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
