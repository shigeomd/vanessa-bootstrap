
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Интернет-поддержка пользователей".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры и функции общего назначения

// Переопределяет возможность использования механизма Интернет-поддержки:
// монитор Интернет-поддержки, авторизация/регистрация в сервисе
// Интернет-поддержки, получение уникального идентификатора абонента
// электронного документооборота, вход в личный кабинет абонента электронного
// документооборота.
//
// Использование Интернет-поддержки запрещено при работе в модели сервиса.
// Процедура вызывается для дополнительной проверки разрешения при работе в
// локальном режиме.
//
// Для запрета использования функций Интернет-поддержки необходимо присвоить
// параметру Отказ значение Истина.
// 
// Параметры:
//	Отказ - Булево - Истина, использование интренет-поддержки запрещено;
//		Ложь - в противном случае;
//		Значение по умолчанию - Ложь;
//
// Пример:
//	Если <Выражение> Тогда
//		Отказ = Истина;
//	КонецЕсли;
//
Процедура ИспользоватьИнтернетПоддержку(Отказ) Экспорт
	
	Отказ = НЕ ПолучитьФункциональнуюОпцию("РаботаВЛокальномРежиме");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для обработки событий Интернет-поддержки пользователей

// Вызывается перед авторизацией пользователя в Интернет-поддержке
// пользователей для определения данных текущего пользователя, если
// логин и пароль не указаны.
// Процедура используется ТОЛЬКО, если необходимо переопределить логин и пароль
// неавторизованного пользователя, например, на основе логина и пароля
// пользователя сервера обновлений или каким-либо другим способом.
//
// Параметры:
// ДанныеПользователя - Структура - выходной параметр - структура, заполняемая
//		данными о пользователе Интернет-поддержки:
//	* Логин - Строка - логин пользователя;
//	* Пароль - Строка - пароль пользователя;
//
// Пример:
// получение логина и пароля пользователя Интернет-поддержки
// из настроек пользователя сервера обновлений для конфигураций со встроенной
// библиотекой "Библиотека стандартных подсистем" (БСП):
//
//	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
//		"ОбновлениеКонфигурации", 
//		"НастройкиОбновленияКонфигурации"
//	);
//
//	Если Настройки = Неопределено Тогда
//		Возврат;
//	Иначе
//		ДанныеПользователя.Вставить("Логин" , Настройки.КодПользователяСервераОбновлений);
//		ДанныеПользователя.Вставить("Пароль", Настройки.ПарольСервераОбновлений);
//	КонецЕсли;
//
Процедура ПриОпределенииДанныхПользователяИнтернетПоддержки(ДанныеПользователя) Экспорт
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеКонфигурации", 
		"НастройкиОбновленияКонфигурации"
		);

	Если Настройки = Неопределено Тогда
		Возврат;
	Иначе
		ДанныеПользователя.Вставить("Логин" , Настройки.КодПользователяСервераОбновлений);
		ДанныеПользователя.Вставить("Пароль", Настройки.ПарольСервераОбновлений);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при успешной авторизации пользователя в Интернет-поддержке
// пользователей после ввода пользователем правильного логина и пароля.
// При необходимости процедура может быть использована для сохранения логина и
// пароля пользователя в смежных механизмах.
// Заполнение процедуры требуется ТОЛЬКО при необходимости переопределения
// обработки входа пользователя в Интернет-поддержку.
//
// Параметры:
// ДанныеПользователя - Структура - структура с полями:
//	* Логин - Строка - логин пользователя;
//	* Пароль - Строка - пароль пользователя;
//
// Пример:
// Сохранение логина и пароля пользователя Интернет-поддержки
// в настройках пользователя сервера обновлений для конфигураций со встроенной
// библиотекой "Библиотека стандартных подсистем" (БСП):
//
//	НастройкиОбновленияКонфигурации = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
//		"ОбновлениеКонфигурации",
//		"НастройкиОбновленияКонфигурации"
//	);
//
//	Если НастройкиОбновленияКонфигурации = Неопределено Тогда
//		НастройкиОбновленияКонфигурации = ОбновлениеКонфигурацииКлиентСервер.НовыеНастройкиОбновленияКонфигурации();
//	Иначе
//		НастройкиОбновленияКонфигурации.Вставить("КодПользователяСервераОбновлений" , ДанныеПользователя.Логин);
//		НастройкиОбновленияКонфигурации.Вставить("ПарольСервераОбновлений"          , ДанныеПользователя.Пароль);
//	КонецЕсли;
//
//	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
//		"ОбновлениеКонфигурации", 
//		"НастройкиОбновленияКонфигурации",
//		НастройкиОбновленияКонфигурации);
//
Процедура ПриАвторизацииПользователяВИнтернетПоддержке(ДанныеПользователя) Экспорт
	
	НастройкиОбновленияКонфигурации = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеКонфигурации",
		"НастройкиОбновленияКонфигурации"
		);
	
	Если НастройкиОбновленияКонфигурации = Неопределено Тогда
		НастройкиОбновленияКонфигурации = ОбновлениеКонфигурацииКлиентСервер.НовыеНастройкиОбновленияКонфигурации();
	Иначе
		НастройкиОбновленияКонфигурации.Вставить("КодПользователяСервераОбновлений" , ДанныеПользователя.Логин);
		НастройкиОбновленияКонфигурации.Вставить("ПарольСервераОбновлений"          , ДанныеПользователя.Пароль);
	КонецЕсли;
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ОбновлениеКонфигурации", 
		"НастройкиОбновленияКонфигурации",
		НастройкиОбновленияКонфигурации);
	
КонецПроцедуры

// Вызывается при выходе пользователя из Интернет-поддержки
// (нажатие пользователем кнопки "Выход" на форме Интернет-поддержки).
//
// Заполнение процедуры требуется ТОЛЬКО при необходимости переопределить
// обработку выхода пользователя из Интернет-поддержки пользователей.
// При необходимости может быть использована для обновления данных пользователя
// в смежных механизмах.
//
// Пример:
// Очистка логина и пароля пользователя Интернет-поддержки
// в настройках пользователя сервера обновлений для конфигураций со встроенной
// библиотекой "Библиотека стандартных подсистем" (БСП):
//
//	НастройкиОбновленияКонфигурации = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
//		"ОбновлениеКонфигурации",
//		"НастройкиОбновленияКонфигурации"
//	);
//
//	Если НастройкиОбновленияКонфигурации <> Неопределено Тогда
//		НастройкиОбновленияКонфигурации.Вставить("КодПользователяСервераОбновлений" , "");
//		НастройкиОбновленияКонфигурации.Вставить("ПарольСервераОбновлений"          , "");
//		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
//			"ОбновлениеКонфигурации", 
//			"НастройкиОбновленияКонфигурации",
//			НастройкиОбновленияКонфигурации);
//	КонецЕсли;
//
Процедура ПриВыходеПользователяИзИнтернетПоддержки() Экспорт
	
	НастройкиОбновленияКонфигурации = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеКонфигурации",
		"НастройкиОбновленияКонфигурации"
	);
	
	Если НастройкиОбновленияКонфигурации <> Неопределено Тогда
		НастройкиОбновленияКонфигурации.Вставить("КодПользователяСервераОбновлений" , "");
		НастройкиОбновленияКонфигурации.Вставить("ПарольСервераОбновлений"          , "");
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ОбновлениеКонфигурации", 
			"НастройкиОбновленияКонфигурации",
			НастройкиОбновленияКонфигурации);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
