#Область ДокументыПоТребованиюФНС

//Формирует сведения о документах-источниках, которые будут использоваться для заполнения реквизитов сканированных документов, 
//представляемых по требованию ФНС. Требуется заполнить для всех объектов метаданных,
//указанных в определяемом типе ИсточникДокументаПоТребованиюФНСБРО, за исключением тех, 
//которые предназначены исключительно для формирования элетронных документов.
//
//Параметры:
//
//	СвойстваИсточников	- Соответствие, соответствие переданных ссылок на источники и массива структур
//		Ключ 		– ссылка на источник для заполнения реквизитов сканированных документов
//		Значение 	– Массив, массив структур (начальное значение: пустой массив)
//		(каждый элемент массива – реквизиты для заполнения одного сканированного документа)
//
//		В общем случае один источник может служить источником для заполнения реквизитов нескольких сканированных документов (например документы РеализацияТоваровУслуг, ОказаниеУслуг).
//		Если у источника стоит пометка на удаление, массив структур должен остаться пустым.
//		Состав полей структуры различен для различных видов документов.
//
//		Поля структуры:
//
//			(обязательный)		Организация				- СправочникСсылка.Организации
//			(обязательный)		ВидДокументаФНС 		- ПеречислениеСсылка.ВидыПредставляемыхДокументов
//			(необязательный)	НомерСтрокиИсточника	- Число, обязательно указывается, если данный источник может служить 
//														источником для заполнения реквизитов нескольких документов одного вида ФНС  
//														Для остальных документов-источников не указывается.
//			(необязательный)	Направление 			- Перечисление.НаправленияДокументаПоТребованиюФНС,
//														обязателен для следующих видов документов ФНС:
//															Счет-фактура
//															Корректировочный счет-фактура
//															Акт приемки-сдачи работ (услуг)
//															Товарная накладная (ТОРГ-12)
//															Товарно-транспортная накладная
//														Для остальных видов документов ФНС не указывается.			
// 
//			Состав следующих полей структуры различен для различных видов документов.
//
//			(необязательный)	Дата			- Дата
//			(необязательный)	Номер			- Строка
//			(необязательный)	СуммаВсего		- Число
//			(необязательный)	СуммаНалога		- Число
//			(необязательный)	НомерОснования	- Строка
//			(необязательный)	ДатаОснования	- Дата
//			(необязательный)	Предмет			- Строка
//			(необязательный)	НачалоПериода	- Дата
//			(необязательный)	КонецПериода	- Дата
//			(необязательный)	Участники		- Массив структур, 
//				поля структуры
//					(обязательный)		Роль				- ПеречислениеСсылка.РолиУчастниковСделкиДокументаПоТребованиюФНС
//					(обязательный)		ЯвляетсяЮрЛицом		- Булево
//					(необязательный)	ЮрЛицоНаименование	- Строка
//					(необязательный)	ЮрЛицоИНН			- Строка
//					(необязательный)	ЮрЛицоКПП			- Строка
//					(необязательный)	ФизЛицоИНН			- Строка
//					(необязательный)	ФизЛицоФамилия		- Строка
//					(необязательный)	ФизЛицоИмя			- Строка
//					(необязательный)	ФизЛицоОтчество		- Строка
//
//			Максимально возможный состав полей структуры для различных видов документов:
//				Счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Участники
//				Корректировочный счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					Участники
//				Акт приемки-сдачи работ (услуг)
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					НачалоПериода
//					КонецПериода
//					Участники
//				Товарная накладная (ТОРГ-12)
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					Участники
//				Товарно-транспортная накладная
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					Участники
//				Грузовая таможенная декларация
//					Номер
//					Участники
//				Добавочный лист к грузовой таможенной декларации
//					Номер
//					НомерОснования
//					Участники
//				Договор
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Предмет
//					Участники
//				Дополнение к договору
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Предмет
//					НомерОснования
//					ДатаОснования
//					Участники
//				Спецификация (калькуляция, расчет) цены (стоимости)
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Предмет
//					НомерОснования
//					ДатаОснования
//					Участники
//
//				Роли участников следует выбирать из возможных значений БРО перечисления РолиУчастниковСделкиДокументаПоТребованиюФНС.
//				Общий список возможных значений:
//					Агент
//					Акционер
//					Арендатор
//					Арендодатель
//					Векселедатель
//					Векселеполучатель
//					Генеральный подрядчик
//					Грузоотправитель
//					Грузополучатель
//					Декларант
//					Займодатель
//					Займополучатель (заемщик)
//					Заказчик
//					Импортер
//					Инвестор
//					Исполнитель
//					Лицо, составившее документ 
//					Отправитель
//					Перевозчик
//					Плательщик
//					Поверенный
//					Подрядчик
//					Покупатель
//					Получатель
//					Пользователь
//					Посредник
//					Поставщик
//					Продавец
//					Работник
//					Работодатель
//					Страхователь
//					Страховщик
//					Субподрядчик
//					Участник
//					Учредитель
//					Хранитель
//					Экспедитор
//					Экспортер
//					Эмитент
//
//				Вариант состава ролей участников для различных видов документов:
//					Счет-фактура
//						Агент
//						Грузоотправитель (если приобретаются/реализуются НЕ услуги)
//						Грузополучатель (если приобретаются/реализуются НЕ услуги)
//						Покупатель
//						Продавец
//					Корректировочный счет-фактура
//						Агент
//						Покупатель
//						Продавец
//					Акт приемки-сдачи работ (услуг)
//						Агент
//						Заказчик
//						Исполнитель
//					Товарная накладная (ТОРГ-12)
//						Грузоотправитель
//						Грузополучатель
//						Плательщик
//						Поставщик
//						Экспедитор
//					Товарно-транспортная накладная
//						Грузоотправитель
//						Грузополучатель
//						Заказчик
//						Перевозчик
//						Плательщик
//						Экспедитор
//					Грузовая таможенная декларация
//						Декларант
//						Импортер
//						Экспортер
//						Отправитель
//						Получатель
//					Добавочный лист к грузовой таможенной декларации
//						Декларант
//						Импортер
//						Экспортер
//						Отправитель
//						Получатель
//					Договор
//						Любые значения из общего списка
//					Дополнение к договору
//						Любые значения из общего списка
//					Спецификация (калькуляция, расчет) цены (стоимости)
//						Заказчик
//						Исполнитель
//
Процедура ОпределитьСвойстваИсточниковДляЗаполненияСканированныхДокументовПоТребованиюФНС(СвойстваИсточников) Экспорт
	
	ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников,                 Ложь);
	ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников,             Ложь);
	ЗаполнитьСведения_ПоступлениеТоваровУслуг(СвойстваИсточников,            Ложь);
	ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников,                Ложь);
	ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников,              Ложь);
	ЗаполнитьСведения_КорректировкаПоступления(СвойстваИсточников,           Ложь);
	ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников,            Ложь);
	ЗаполнитьСведения_ОказаниеУслуг(СвойстваИсточников,                      Ложь);
	ЗаполнитьСведения_ОтчетКомитентуОПродажах(СвойстваИсточников,            Ложь);
	ЗаполнитьСведения_ГТДИмпорт(СвойстваИсточников,                          Ложь);
	ЗаполнитьСведения_АктОбОказанииПроизводственныхУслуг(СвойстваИсточников, Ложь);
	ЗаполнитьСведения_РеализацияУслугПоПереработке(СвойстваИсточников,       Ложь);
	ЗаполнитьСведения_ПередачаТоваров(СвойстваИсточников,                    Ложь);
	ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников,           Ложь);
	ЗаполнитьСведения_ПоступлениеДопРасходов(СвойстваИсточников,             Ложь);
	
КонецПроцедуры

//Формирует сведения о документах-источниках, которые будут отражаться в едином списке документов, представляемых по требованию ФНС. 
//Требуется заполнить для всех объектов метаданных, указанных в определяемом типе ИсточникДокументаПоТребованиюФНСБРО..
//
//Параметры: 
//
//	СвойстваИсточников	- Соответствие, соответствие переданных ссылок на источники и массива структур 
//		Ключ 		– ссылка на источник
//		Значение 	– массив структур (начальное значение: пустой массив)
//		(каждый элемент массива – реквизиты для отображения свойств одного документа в журнале документов, 
//		представляемых по требованию ФНС)
//
//		В общем случае один источник может служить источником для отображения свойств нескольких документов.
//		Если у источника стоит пометка на удаление, массив структур должен остаться пустым массивом.
//		Состав полей структуры различен для различных видов документов-источников.
//
//			Поля структуры:
//				(обязательный)	Организация			- СправочникСсылка.Организации
//				(обязательный)	ВидДокументаФНС		- ПеречислениеСсылка.ВидыПредставляемыхДокументов
//				(необязательный)	Контрагент			- Ссылка на справочник контрагентов
//				(необязательный)	НомерСтрокиИсточника	- Число, обязательно указывается, 
//											если данный источник может служить 
//											источником для заполнения реквизитов 
//											нескольких документов одного вида ФНС 
//											(например Оказание услуг в БПКОРП3) 
//											Для остальных видов документов-источников не указывается.			
//				(необязательный)	Направление 			- Перечисление.
//												НаправленияДокументаПоТребованиюФНС,
//											обязателен для следующих видов документов ФНС:
//												Счет-фактура
//												Корректировочный счет-фактура
//												Акт приемки-сдачи работ (услуг)
//												Товарная накладная (ТОРГ-12)
//												Товарно-транспортная накладная
//												Для остальных видов документов ФНС не указывается.			
//
//			Состав следующих полей структуры различен для различных видов документов ФНС.
//
//				(необязательный)	Дата					- Дата
//				(необязательный)	Номер					- Строка
//				(необязательный)	СуммаВсего				- Число
//
//			Максимально возможный состав полей структуры для различных видов документов ФНС:
//				Счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//				Корректировочный счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//				Акт приемки-сдачи работ (услуг)
//					Дата
//					Номер
//					СуммаВсего
//				Товарная накладная (ТОРГ-12)
//					Дата
//					Номер
//					СуммаВсего
//				Товарно-транспортная накладная
//					Дата
//					Номер
//					СуммаВсего
//				Грузовая таможенная декларация
//					Номер
//				Добавочный лист к грузовой таможенной декларации
//					Номер
//				Договор
//					Дата
//					Номер
//					СуммаВсего
//				Дополнение к договору
//					Дата
//					Номер
//					СуммаВсего
//				Спецификация (калькуляция, расчет) цены (стоимости)
//					Дата
//					Номер
//					СуммаВсего
//
Процедура ОпределитьСвойстваИсточниковДляРегистраДокументыПоТребованиюФНС(СвойстваИсточников) Экспорт
	
	ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников,                 Истина);
	ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников,             Истина);
	ЗаполнитьСведения_ПоступлениеТоваровУслуг(СвойстваИсточников,            Истина);
	ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников,                Истина);
	ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников,              Истина);
	ЗаполнитьСведения_КорректировкаПоступления(СвойстваИсточников,           Истина);
	ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников,            Истина);
	ЗаполнитьСведения_ОказаниеУслуг(СвойстваИсточников,                      Истина);
	ЗаполнитьСведения_ОтчетКомитентуОПродажах(СвойстваИсточников,            Истина);
	ЗаполнитьСведения_ГТДИмпорт(СвойстваИсточников,                          Истина);
	ЗаполнитьСведения_АктОбОказанииПроизводственныхУслуг(СвойстваИсточников, Истина);
	ЗаполнитьСведения_РеализацияУслугПоПереработке(СвойстваИсточников,       Истина);
	ЗаполнитьСведения_ПередачаТоваров(СвойстваИсточников,                    Истина);
	ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников,           Истина);
	ЗаполнитьСведения_ПоступлениеДопРасходов(СвойстваИсточников,             Истина);
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников, ТолькоОсновныеСвойства) Экспорт
	
	Источники = МассивИсточников(СвойстваИсточников, "Справочник", "ДоговорыКонтрагентов");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Дата,
	|	ДоговорыКонтрагентов.Номер
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В(&Источники)
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Справочник = Новый Структура();
		Справочник.Вставить("Организация",     Выборка.Организация);
		Справочник.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.Договор);
		Справочник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Справочник.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Справочник.Участники, Выборка.Контрагент);
			ДобавитьУчастника(Справочник.Участники, Выборка.Организация);
		КонецЕсли;
		
		Справочник.Вставить("Дата",            Выборка.Дата);
		Справочник.Вставить("Номер",           Выборка.Номер);
		Справочник.Вставить("СуммаВсего",      0);
		
		СвойстваИсточников.Получить(Выборка.Договор).Добавить(Справочник);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "РеализацияТоваровУслуг");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Грузополучатель,
	|	РеализацияТоваровУслуг.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И РеализацияТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&Источники)
	|	И РеализацияТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	РеализацияТоваровУслугТовары.Сумма КАК ТоварыСумма,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК АгентскиеУслугиКоличество,
	|	0 КАК АгентскиеУслугиСумма,
	|	0 КАК АгентскиеУслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО Документы.Документ = РеализацияТоваровУслугТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	РеализацияТоваровУслугУслуги.Сумма,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|		ПО Документы.Документ = РеализацияТоваровУслугУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	РеализацияТоваровУслугАгентскиеУслуги.Сумма,
	|	РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
	|		ПО Документы.Документ = РеализацияТоваровУслугАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерДоговора,
	|	Документы.ДатаДоговора,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиКоличество), 0) КАК АгентскиеУслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСумма), 0) КАК АгентскиеУслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСуммаНДС), 0) КАК АгентскиеУслугиСуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерДоговора,
	|	Документы.ДатаДоговора,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Если Выборка.УслугиКоличество > 0
			ИЛИ Выборка.АгентскиеУслугиКоличество > 0 Тогда
			
			// Акт об оказании услуг
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма + Выборка.АгентскиеУслугиСумма,
				Выборка.УслугиСумма + Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСумма + Выборка.АгентскиеУслугиСуммаНДС);
			
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				Документ.Вставить("СуммаНалога",   Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСуммаНДС);
				Документ.Вставить("НачалоПериода", Выборка.Дата);
				Документ.Вставить("КонецПериода",  Выборка.Дата);
				Документ.Вставить("Участники",     Новый Массив);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
					Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
			
			// Товарная накладная (ТОРГ-12)
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
			// Товарно-транспортная накладная
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПоступлениеТоваровУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ПоступлениеТоваровУслуг");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	ПоступлениеТоваровУслуг.Организация,
	|	ПоступлениеТоваровУслуг.Контрагент,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Грузополучатель,
	|	ПоступлениеТоваровУслуг.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПоступлениеТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&Источники)
	|	И ПоступлениеТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	ПоступлениеТоваровУслугТовары.Сумма КАК ТоварыСумма,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК АгентскиеУслугиКоличество,
	|	0 КАК АгентскиеУслугиСумма,
	|	0 КАК АгентскиеУслугиСуммаНДС,
	|	0 КАК ОборудованиеКоличество,
	|	0 КАК ОборудованиеСумма,
	|	0 КАК ОборудованиеСуммаНДС,
	|	0 КАК ОбъектыСтроительстваКоличество,
	|	0 КАК ОбъектыСтроительстваСумма,
	|	0 КАК ОбъектыСтроительстваСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО Документы.Документ = ПоступлениеТоваровУслугТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПоступлениеТоваровУслугУслуги.Сумма,
	|	ПоступлениеТоваровУслугУслуги.СуммаНДС,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|		ПО Документы.Документ = ПоступлениеТоваровУслугУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Сумма,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
	|		ПО Документы.Документ = ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПоступлениеТоваровУслугОборудование.Сумма,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|		ПО Документы.Документ = ПоступлениеТоваровУслугОборудование.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПоступлениеТоваровУслугОбъектыСтроительства.Сумма,
	|	ПоступлениеТоваровУслугОбъектыСтроительства.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ПоступлениеТоваровУслугОбъектыСтроительства
	|		ПО Документы.Документ = ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерДоговора,
	|	Документы.ДатаДоговора,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиКоличество), 0) КАК АгентскиеУслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСумма), 0) КАК АгентскиеУслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСуммаНДС), 0) КАК АгентскиеУслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ОборудованиеКоличество), 0) КАК ОборудованиеКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ОборудованиеСумма), 0) КАК ОборудованиеСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ОборудованиеСуммаНДС), 0) КАК ОборудованиеСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ОбъектыСтроительстваКоличество), 0) КАК ОбъектыСтроительстваКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ОбъектыСтроительстваСумма), 0) КАК ОбъектыСтроительстваСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ОбъектыСтроительстваСуммаНДС), 0) КАК ОбъектыСтроительстваСуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерДоговора,
	|	Документы.ДатаДоговора,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Если Выборка.УслугиКоличество > 0
			ИЛИ Выборка.АгентскиеУслугиКоличество > 0 Тогда
			
			// Акт об оказании услуг
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма + Выборка.АгентскиеУслугиСумма,
				Выборка.УслугиСумма + Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСумма + Выборка.АгентскиеУслугиСуммаНДС);
			
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				Документ.Вставить("СуммаНалога",   Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСуммаНДС);
				Документ.Вставить("НачалоПериода", Выборка.Дата);
				Документ.Вставить("КонецПериода",  Выборка.Дата);
				Документ.Вставить("Участники",     Новый Массив);
				ДобавитьУчастника(Документ.Участники, Документ.Организация,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0
			ИЛИ Выборка.ОборудованиеСумма > 0
			ИЛИ Выборка.ОбъектыСтроительстваСумма > 0 Тогда
			
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма + Выборка.ОборудованиеСумма + Выборка.ОбъектыСтроительстваСумма,
					Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС + Выборка.ОборудованиеСумма + Выборка.ОборудованиеСуммаНДС + Выборка.ОбъектыСтроительстваСумма + Выборка.ОбъектыСтроительстваСуммаНДС);
			
			// Товарная накладная (ТОРГ-12)
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				СуммаНДС = Выборка.ТоварыСуммаНДС + Выборка.ОборудованиеСуммаНДС + Выборка.ОбъектыСтроительстваСуммаНДС;
				
				Документ.Вставить("СуммаНалога", СуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
			// Товарно-транспортная накладная
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", СуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "СчетФактураВыданный");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК Документ,
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Контрагент,
	|	СчетФактураВыданный.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(СчетФактураВыданный.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(СчетФактураВыданный.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СчетФактураВыданный.Продавец,
	|	СчетФактураВыданный.СуммаНДСДокумента,
	|	СчетФактураВыданный.СуммаДокумента,
	|	СчетФактураВыданный.ВидСчетаФактуры,
	|	СчетФактураВыданный.НомерИсходногоДокумента,
	|	СчетФактураВыданный.ДатаИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураВыданный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураВыданный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйДокументыОснования.Ссылка
	|ГДЕ
	|	СчетФактураВыданный.Ссылка В(&Источники)
	|	И СчетФактураВыданный.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка КАК ДокументОснование,
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель
	|ПОМЕСТИТЬ ДокументыОснования
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ПО СчетаФактуры.ДокументОснование = ВозвратТоваровПоставщику.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	КорректировкаРеализации.Грузоотправитель,
	|	КорректировкаРеализации.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО СчетаФактуры.ДокументОснование = КорректировкаРеализации.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеНачисленияНДС.Ссылка,
	|	ОтражениеНачисленияНДС.Грузоотправитель,
	|	ОтражениеНачисленияНДС.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтражениеНачисленияНДС КАК ОтражениеНачисленияНДС
	|		ПО СчетаФактуры.ДокументОснование = ОтражениеНачисленияНДС.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажах.Ссылка,
	|	ОтчетКомиссионераОПродажах.Грузоотправитель,
	|	ОтчетКомиссионераОПродажах.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|		ПО СчетаФактуры.ДокументОснование = ОтчетКомиссионераОПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаОС.Ссылка,
	|	ПередачаОС.Грузоотправитель,
	|	ПередачаОС.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОС КАК ПередачаОС
	|		ПО СчетаФактуры.ДокументОснование = ПередачаОС.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Грузоотправитель,
	|	РеализацияТоваровУслуг.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО СчетаФактуры.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Документ,
	|	СчетаФактуры.Организация,
	|	СчетаФактуры.Контрагент,
	|	СчетаФактуры.ДоговорКонтрагента,
	|	СчетаФактуры.Продавец,
	|	СчетаФактуры.НомерДоговора,
	|	СчетаФактуры.ДатаДоговора,
	|	СчетаФактуры.Номер,
	|	СчетаФактуры.Дата,
	|	СчетаФактуры.СуммаНДСДокумента,
	|	СчетаФактуры.СуммаДокумента,
	|	СчетаФактуры.ВидСчетаФактуры,
	|	СчетаФактуры.НомерИсходногоДокумента,
	|	СчетаФактуры.ДатаИсходногоДокумента,
	|	СчетаФактуры.ДокументОснование,
	|	МАКСИМУМ(ДокументыОснования.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(ДокументыОснования.Грузополучатель) КАК Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыОснования КАК ДокументыОснования
	|		ПО СчетаФактуры.ДокументОснование = ДокументыОснования.ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.ДокументОснование,
	|	СчетаФактуры.ДатаИсходногоДокумента,
	|	СчетаФактуры.НомерДоговора,
	|	СчетаФактуры.Документ,
	|	СчетаФактуры.Дата,
	|	СчетаФактуры.Контрагент,
	|	СчетаФактуры.ДатаДоговора,
	|	СчетаФактуры.Номер,
	|	СчетаФактуры.НомерИсходногоДокумента,
	|	СчетаФактуры.ДоговорКонтрагента,
	|	СчетаФактуры.Организация,
	|	СчетаФактуры.ВидСчетаФактуры,
	|	СчетаФактуры.СуммаНДСДокумента,
	|	СчетаФактуры.СуммаДокумента,
	|	СчетаФактуры.Продавец";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		
		Документ.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		
		Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура);
		Иначе
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерИсходногоДокумента);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаИсходногоДокумента);
			КонецЕсли;
			
			Документ.Вставить("СуммаНалога", Выборка.СуммаНДСДокумента);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Покупатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Продавец",   Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			
			Если НЕ Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
				
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Продавец) Тогда
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Агент", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Агент);
			КонецЕсли;
			
		КонецЕсли;
		
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "СчетФактураПолученный");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Документ,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Контрагент,
	|	СчетФактураПолученный.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(СчетФактураПолученный.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(СчетФактураПолученный.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СчетФактураПолученный.Продавец,
	|	СчетФактураПолученный.СуммаНДСДокумента,
	|	СчетФактураПолученный.СуммаДокумента,
	|	СчетФактураПолученный.ВидСчетаФактуры,
	|	СчетФактураПолученный.НомерИсходногоДокумента,
	|	СчетФактураПолученный.ДатаИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураПолученный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураПолученный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйДокументыОснования.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&Источники)
	|	И СчетФактураПолученный.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка КАК ДокументОснование,
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель
	|ПОМЕСТИТЬ ДокументыОснования
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ПО СчетаФактуры.ДокументОснование = ВозвратТоваровПоставщику.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаПоступления.Ссылка,
	|	КорректировкаПоступления.Грузоотправитель,
	|	КорректировкаПоступления.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ПО СчетаФактуры.ДокументОснование = КорректировкаПоступления.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажах.Ссылка,
	|	ОтчетКомиссионераОПродажах.Грузоотправитель,
	|	ОтчетКомиссионераОПродажах.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|		ПО СчетаФактуры.ДокументОснование = ОтчетКомиссионераОПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Грузоотправитель,
	|	ПоступлениеТоваровУслуг.Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО СчетаФактуры.ДокументОснование = ПоступлениеТоваровУслуг.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Документ,
	|	СчетаФактуры.Организация,
	|	СчетаФактуры.Контрагент,
	|	СчетаФактуры.ДоговорКонтрагента,
	|	СчетаФактуры.Продавец,
	|	СчетаФактуры.НомерДоговора,
	|	СчетаФактуры.ДатаДоговора,
	|	СчетаФактуры.Номер,
	|	СчетаФактуры.Дата,
	|	СчетаФактуры.СуммаНДСДокумента,
	|	СчетаФактуры.СуммаДокумента,
	|	СчетаФактуры.ВидСчетаФактуры,
	|	СчетаФактуры.НомерИсходногоДокумента,
	|	СчетаФактуры.ДатаИсходногоДокумента,
	|	СчетаФактуры.ДокументОснование,
	|	МАКСИМУМ(ДокументыОснования.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(ДокументыОснования.Грузополучатель) КАК Грузополучатель
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыОснования КАК ДокументыОснования
	|		ПО СчетаФактуры.ДокументОснование = ДокументыОснования.ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.ДокументОснование,
	|	СчетаФактуры.ДатаИсходногоДокумента,
	|	СчетаФактуры.НомерДоговора,
	|	СчетаФактуры.Документ,
	|	СчетаФактуры.Дата,
	|	СчетаФактуры.Контрагент,
	|	СчетаФактуры.ДатаДоговора,
	|	СчетаФактуры.Номер,
	|	СчетаФактуры.НомерИсходногоДокумента,
	|	СчетаФактуры.ДоговорКонтрагента,
	|	СчетаФактуры.Организация,
	|	СчетаФактуры.ВидСчетаФактуры,
	|	СчетаФактуры.СуммаНДСДокумента,
	|	СчетаФактуры.СуммаДокумента,
	|	СчетаФактуры.Продавец";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		
		Документ.Вставить("СуммаВсего",      Выборка.СуммаДокумента);
		
		Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура);
		Иначе
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерИсходногоДокумента);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаИсходногоДокумента);
			КонецЕсли;
			
			Документ.Вставить("СуммаНалога", Выборка.СуммаНДСДокумента);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Покупатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Продавец",   Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			
			Если НЕ Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
				
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Продавец) Тогда
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Агент", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Агент);
			КонецЕсли;
			
		КонецЕсли;
		
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_КорректировкаПоступления(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "КорректировкаПоступления");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаПоступления.Ссылка КАК Документ,
	|	КорректировкаПоступления.Организация,
	|	КорректировкаПоступления.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	КорректировкаПоступления.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаПоступления.ДокументПоступления,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	КорректировкаПоступления.Грузополучатель,
	|	КорректировкаПоступления.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаПоступления.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаПоступления.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовОснования
	|		ПО КорректировкаПоступления.ДокументПоступления = ДанныеПервичныхДокументовОснования.Документ
	|			И КорректировкаПоступления.Организация = ДанныеПервичныхДокументовОснования.Организация
	|ГДЕ
	|	КорректировкаПоступления.Ссылка В(&Источники)
	|	И КорректировкаПоступления.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	КорректировкаПоступленияТовары.Сумма КАК ТоварыСумма,
	|	КорректировкаПоступленияТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК АгентскиеУслугиКоличество,
	|	0 КАК АгентскиеУслугиСумма,
	|	0 КАК АгентскиеУслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|		ПО Документы.Документ = КорректировкаПоступленияТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаПоступленияУслуги.Сумма,
	|	КорректировкаПоступленияУслуги.СуммаНДС,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
	|		ПО Документы.Документ = КорректировкаПоступленияУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаПоступленияАгентскиеУслуги.Сумма,
	|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
	|		ПО Документы.Документ = КорректировкаПоступленияАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиКоличество), 0) КАК АгентскиеУслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСумма), 0) КАК АгентскиеУслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСуммаНДС), 0) КАК АгентскиеУслугиСуммаНДС,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументПоступления
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументПоступления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Если Выборка.УслугиКоличество > 0
			ИЛИ Выборка.АгентскиеУслугиКоличество > 0 Тогда
			
			// Акт об оказании услуг
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма + Выборка.АгентскиеУслугиСумма,
				Выборка.УслугиСумма + Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСумма + Выборка.АгентскиеУслугиСуммаНДС);
			
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДокументПоступления) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерОснования);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				Документ.Вставить("СуммаНалога",   Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСуммаНДС);
				Документ.Вставить("НачалоПериода", Выборка.Дата);
				Документ.Вставить("КонецПериода",  Выборка.Дата);
				Документ.Вставить("Участники",     Новый Массив);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
				Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
			
			// Товарная накладная (ТОРГ-12)
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДокументПоступления) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерОснования);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
			// Товарно-транспортная накладная
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДокументПоступления) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерОснования);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "КорректировкаРеализации");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	КорректировкаРеализации.Организация,
	|	КорректировкаРеализации.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаРеализации.ДокументРеализации,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	КорректировкаРеализации.Грузополучатель,
	|	КорректировкаРеализации.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаРеализации.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовОснования
	|		ПО КорректировкаРеализации.ДокументРеализации = ДанныеПервичныхДокументовОснования.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументовОснования.Организация
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&Источники)
	|	И КорректировкаРеализации.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	КорректировкаРеализацииТовары.Сумма КАК ТоварыСумма,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК АгентскиеУслугиКоличество,
	|	0 КАК АгентскиеУслугиСумма,
	|	0 КАК АгентскиеУслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО Документы.Документ = КорректировкаРеализацииТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаРеализацииУслуги.Сумма,
	|	КорректировкаРеализацииУслуги.СуммаНДС,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ПО Документы.Документ = КорректировкаРеализацииУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаРеализацииАгентскиеУслуги.Сумма,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	|		ПО Документы.Документ = КорректировкаРеализацииАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиКоличество), 0) КАК АгентскиеУслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСумма), 0) КАК АгентскиеУслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСуммаНДС), 0) КАК АгентскиеУслугиСуммаНДС,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументРеализации
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументРеализации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Если Выборка.УслугиКоличество > 0
			ИЛИ Выборка.АгентскиеУслугиКоличество > 0 Тогда
			
			// Акт об оказании услуг
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма + Выборка.АгентскиеУслугиСумма,
				Выборка.УслугиСумма + Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСумма + Выборка.АгентскиеУслугиСуммаНДС);
			
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДокументРеализации) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерОснования);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				Документ.Вставить("СуммаНалога",   Выборка.УслугиСуммаНДС + Выборка.АгентскиеУслугиСуммаНДС);
				Документ.Вставить("НачалоПериода", Выборка.Дата);
				Документ.Вставить("КонецПериода",  Выборка.Дата);
				Документ.Вставить("Участники",     Новый Массив);
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
				Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
			
			// Товарная накладная (ТОРГ-12)
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДокументРеализации) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерОснования);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
			// Товарно-транспортная накладная
			Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
			Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
			Документ.Вставить("СуммаВсего",      СуммаДокумента);
			
			Если ЗначениеЗаполнено(Выборка.ДокументРеализации) Тогда
				Документ.Вставить("НомерОснования", Выборка.НомерОснования);
				Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
			КонецЕсли;
			
			Если НЕ ТолькоОсновныеСвойства Тогда
				
				Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
				Документ.Вставить("Участники",   Новый Массив);
				
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
				Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
					ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ОказаниеУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ОказаниеУслуг");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОказаниеУслуг.Ссылка КАК Документ,
	|	ОказаниеУслуг.Организация,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ОказаниеУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ОказаниеУслугКонтрагенты.Сумма КАК КонтрагентыСумма,
	|	ОказаниеУслугКонтрагенты.СуммаНДС КАК КонтрагентыСуммаНДС,
	|	ОказаниеУслугКонтрагенты.Контрагент,
	|	ОказаниеУслугКонтрагенты.ДоговорКонтрагента,
	|	ЕСТЬNULL(ОказаниеУслугКонтрагенты.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ОказаниеУслугКонтрагенты.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ОказаниеУслугКонтрагенты.НомерСтроки
	|ИЗ
	|	Документ.ОказаниеУслуг КАК ОказаниеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОказаниеУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ОказаниеУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
	|		ПО ОказаниеУслуг.Ссылка = ОказаниеУслугКонтрагенты.Ссылка
	|ГДЕ
	|	ОказаниеУслуг.Ссылка В(&Источники)
	|	И ОказаниеУслуг.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		// Акт об оказании услуг
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.КонтрагентыСумма, Выборка.КонтрагентыСумма + Выборка.КонтрагентыСуммаНДС);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("НомерСтрокиИсточника", Выборка.НомерСтроки);
		Документ.Вставить("ВидДокументаФНС",      Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",           СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаНалога",   Выборка.КонтрагентыСуммаНДС);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ОтчетКомитентуОПродажах(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ОтчетКомитентуОПродажах");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Документ,
	|	ОтчетКомитентуОПродажах.Организация,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ОтчетКомитентуОПродажах.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ЕСТЬNULL(СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДСВознаграждения), 0) КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.Контрагент,
	|	ОтчетКомитентуОПродажах.ДоговорКонтрагента,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОтчетКомитентуОПродажах.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ОтчетКомитентуОПродажах.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|		ПО ОтчетКомитентуОПродажах.Ссылка = ОтчетКомитентуОПродажахТовары.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&Источники)
	|	И ОтчетКомитентуОПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОтчетКомитентуОПродажах.Ссылка,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОтчетКомитентуОПродажах.ДоговорКонтрагента,
	|	ОтчетКомитентуОПродажах.Контрагент,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаВключаетНДС,
	|	ОтчетКомитентуОПродажах.Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		// Акт об оказании услуг
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",      Выборка.СуммаВознаграждения);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаНалога",   Выборка.СуммаНДСВознаграждения);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ГТДИмпорт(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ГТДИмпорт");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка КАК Документ,
	|	ГТДИмпорт.Организация,
	|	ГТДИмпорт.НомерГТД КАК НомерГТД,
	|	ГТДИмпорт.Контрагент,
	|	ГТДИмпорт.ДоговорКонтрагента,
	|	ЕСТЬNULL(ГТДИмпорт.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ГТДИмпорт.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка В(&Источники)
	|	И ГТДИмпорт.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Номер",           Выборка.НомерГТД);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ГрузоваяТаможеннаяДекларация);
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Получатель",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Получатель);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Отправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Отправитель);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Декларант",   Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Декларант);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Импортер",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Импортер);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктОбОказанииПроизводственныхУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "АктОбОказанииПроизводственныхУслуг");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК Документ,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(СУММА(АктОбОказанииПроизводственныхУслугУслуги.Сумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО АктОбОказанииПроизводственныхУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И АктОбОказанииПроизводственныхУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
	|		ПО АктОбОказанииПроизводственныхУслуг.Ссылка = АктОбОказанииПроизводственныхУслугУслуги.Ссылка
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&Источники)
	|	И АктОбОказанииПроизводственныхУслуг.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОбОказанииПроизводственныхУслуг.Ссылка,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента,
	|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
			
		// Акт об оказании услуг
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма, Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаНалога",   Выборка.УслугиСуммаНДС);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_РеализацияУслугПоПереработке(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "РеализацияУслугПоПереработке");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияУслугПоПереработке.Ссылка КАК Документ,
	|	РеализацияУслугПоПереработке.Организация,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	РеализацияУслугПоПереработке.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(СУММА(РеализацияУслугПоПереработкеУслуги.Сумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(РеализацияУслугПоПереработкеУслуги.СуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документ.РеализацияУслугПоПереработке КАК РеализацияУслугПоПереработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияУслугПоПереработке.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И РеализацияУслугПоПереработке.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке.Услуги КАК РеализацияУслугПоПереработкеУслуги
	|		ПО РеализацияУслугПоПереработке.Ссылка = РеализацияУслугПоПереработкеУслуги.Ссылка
	|ГДЕ
	|	РеализацияУслугПоПереработке.Ссылка В(&Источники)
	|	И РеализацияУслугПоПереработке.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслугПоПереработке.Ссылка,
	|	РеализацияУслугПоПереработке.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.ДоговорКонтрагента,
	|	РеализацияУслугПоПереработке.СуммаВключаетНДС,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		// Акт об оказании услуг
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма, Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаНалога",   Выборка.УслугиСуммаНДС);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПередачаТоваров(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ПередачаТоваров");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Документ,
	|	ПередачаТоваров.Организация,
	|	ПередачаТоваров.Контрагент,
	|	ПередачаТоваров.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПередачаТоваров.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ПередачаТоваров.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПередачаТоваров.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПередачаТоваров.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&Источники)
	|	И ПередачаТоваров.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		СуммаДокумента = 0;
		
		// Товарная накладная (ТОРГ-12)
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			СуммаНДС = 0;
			
			Документ.Вставить("СуммаНалога", СуммаНДС);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
		// Товарно-транспортная накладная
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			
			Документ.Вставить("СуммаНалога", СуммаНДС);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ВозвратТоваровПоставщику");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка КАК Документ,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(СУММА(ВозвратТоваровПоставщикуТовары.Сумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(ВозвратТоваровПоставщикуТовары.СуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель,
	|	ВозвратТоваровПоставщику.СуммаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВозвратТоваровПоставщику.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ВозвратТоваровПоставщику.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ПО ВозвратТоваровПоставщику.Ссылка = ВозвратТоваровПоставщикуТовары.Ссылка
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&Источники)
	|	И ВозвратТоваровПоставщику.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма, Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
		
		// Товарная накладная (ТОРГ-12)
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			
			Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
		// Товарно-транспортная накладная
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			
			Документ.Вставить("СуммаНалога", Выборка.ТоварыСуммаНДС);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПоступлениеДопРасходов(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ПоступлениеДопРасходов");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка КАК Документ,
	|	ПоступлениеДопРасходов.Организация,
	|	ПоступлениеДопРасходов.Контрагент,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(СУММА(ПоступлениеДопРасходовТовары.Сумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(ПоступлениеДопРасходовТовары.СуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ПоступлениеДопРасходов.Сумма,
	|	ПоступлениеДопРасходов.СуммаНДС
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеДопРасходов.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПоступлениеДопРасходов.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ПО ПоступлениеДопРасходов.Ссылка = ПоступлениеДопРасходовТовары.Ссылка
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В(&Источники)
	|	И ПоступлениеДопРасходов.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходов.Ссылка,
	|	ПоступлениеДопРасходов.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	ПоступлениеДопРасходов.Контрагент,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		// Акт об оказании услуг
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.Сумма + Выборка.ТоварыСумма, 
			Выборка.Сумма + Выборка.СуммаНДС + Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",      СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			СуммаНДС = Выборка.СуммаНДС + Выборка.ТоварыСуммаНДС;
			
			Документ.Вставить("СуммаНалога",   СуммаНДС);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СтруктураОсновныхСвойств(ОписаниеИсточника)
	
	ОбъектИсточник = Новый Структура("Организация, Направление, Дата, Номер, Контрагент");
	ЗаполнитьЗначенияСвойств(ОбъектИсточник, ОписаниеИсточника);
	Возврат ОбъектИсточник;
	
КонецФункции

Функция МассивИсточников(СвойстваИсточников, ТипРегистрируемогоОбъекта, ИмяРегистрируемогоОбъекта)
	
	Источники = Новый Массив;
	
	Для Каждого СвойствоИсточника Из СвойстваИсточников Цикл
		
		Если ТипЗнч(СвойствоИсточника.Ключ) = Тип(ТипРегистрируемогоОбъекта + "Объект." + ИмяРегистрируемогоОбъекта) Тогда
			Источники.Добавить(СвойствоИсточника.Ключ.Ссылка);
		ИначеЕсли ТипЗнч(СвойствоИсточника.Ключ) = Тип(ТипРегистрируемогоОбъекта + "Ссылка." + ИмяРегистрируемогоОбъекта) Тогда
			Источники.Добавить(СвойствоИсточника.Ключ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Источники;
	
КонецФункции

Процедура ДобавитьУчастника(Участники, Контрагент, ВидКонтрагента = "", Роль = "")
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		СвойстваКонтрагента = Новый Структура();
		СвойстваКонтрагента.Вставить("Роль", Роль);
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ЮридическоеФизическоеЛицо, НаименованиеПолное, ИНН, КПП");
		
		СвойстваКонтрагента.Вставить("ЯвляетсяЮрЛицом", Реквизиты.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
		Если СвойстваКонтрагента.ЯвляетсяЮрЛицом Тогда
			СвойстваКонтрагента.Вставить("ЮрЛицоНаименование", Реквизиты.НаименованиеПолное);
			СвойстваКонтрагента.Вставить("ЮрЛицоИНН",          Реквизиты.ИНН);
			СвойстваКонтрагента.Вставить("ЮрЛицоКПП",          Реквизиты.КПП);
		Иначе
			ФИО = РегламентированнаяОтчетностьКлиентСервер.РазложитьФИО(Реквизиты.НаименованиеПолное);
			СвойстваКонтрагента.Вставить("ФизЛицоФамилия",     ФИО.Фамилия);
			СвойстваКонтрагента.Вставить("ФизЛицоИмя",         ФИО.Имя);
			СвойстваКонтрагента.Вставить("ФизЛицоОтчество",    ФИО.Отчество);
			СвойстваКонтрагента.Вставить("ФизЛицоИНН",         Реквизиты.ИНН);
		КонецЕсли;
		
		Если ТипЗнч(Контрагент) = Тип("СправочникОбъект.Контрагенты")
			ИЛИ ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			СвойстваКонтрагента.Вставить("Контрагент", Контрагент);
			
		КонецЕсли;
		
		Участники.Добавить(СвойстваКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти