////////////////////////////////////////////////////////////////////////////////
// Подсистема "Оценка производительности".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Метод завершающий замер времени на клиенте.
//
Процедура ЗакончитьЗамерВремениАвтоНеГлобальный() Экспорт
	
	ЗакончитьЗамерВремени();
	
КонецПроцедуры

// Произвести запись накопленных замеров времени выполнения ключевых операций на сервере.
//
// Параметры:
//  ПередЗавершением - Булево - Истина, если метод вызывается перед закрытием приложения.
//
Процедура ЗаписатьРезультатыАвтоНеГлобальный(ПередЗавершением = Ложь) Экспорт
	
	ОценкаПроизводительностиЗамерВремени = ПараметрыПриложения["СтандартныеПодсистемы.ОценкаПроизводительностиЗамерВремени"];
	
	Если ОценкаПроизводительностиЗамерВремени <> Неопределено Тогда
		Если ОценкаПроизводительностиЗамерВремени["Замеры"].Количество() = 0 Тогда
			НовыйПериодЗаписи = ОценкаПроизводительностиЗамерВремени["ПериодЗаписи"];
		Иначе
			Замеры = ОценкаПроизводительностиЗамерВремени["Замеры"];
			НовыйПериодЗаписи = ОценкаПроизводительностиВызовСервераПолныеПрава.ЗафиксироватьДлительностьКлючевыхОпераций(Замеры);
			ОценкаПроизводительностиЗамерВремени["ПериодЗаписи"] = НовыйПериодЗаписи;
			Если ПередЗавершением Тогда
				Возврат;
			КонецЕсли;
			
			Для Каждого КлючеваяОперацияДатаДанные Из Замеры Цикл
				Буфер = КлючеваяОперацияДатаДанные.Значение;
				НаУдаление = Новый Массив;
				Для Каждого ДатаДанные Из Буфер Цикл
					Дата = ДатаДанные.Ключ;
					Данные = ДатаДанные.Значение;
					Длительность = Данные.Получить("Длительность");
					// Это означает, что операция уже закончилась, удалять ее из буфера нужно.
					Если Длительность <> Неопределено Тогда
						НаУдаление.Добавить(Дата);
					КонецЕсли;
				КонецЦикла;
				Для Каждого Дата Из НаУдаление Цикл
					ОценкаПроизводительностиЗамерВремени["Замеры"][КлючеваяОперацияДатаДанные.Ключ].Удалить(Дата);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		ПодключитьОбработчикОжидания("ЗаписатьРезультатыАвто", НовыйПериодЗаписи, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура завершает замер времени на клиенте.
// Параметры:
//  АвтоЗамер - Булево, закончен ли замер по обработчику 
//  ожидания или же нет.
Процедура ЗакончитьЗамерВремени(АвтоЗамер = Истина)
	
	ДатаОкончания = ОценкаПроизводительностиКлиентСервер.ЗначениеТаймера(Ложь);
	ВремяОкончания = ОценкаПроизводительностиКлиентСервер.ЗначениеТаймера();
	
	Если АвтоЗамер И ТипЗнч(ВремяОкончания) = Тип("Число") Тогда
		ВремяОкончания = ВремяОкончания - 0.100;
	КонецЕсли;
	
	СмещениеДатыКлиента = ПараметрыПриложения["СтандартныеПодсистемы.ОценкаПроизводительностиЗамерВремени"]["СмещениеДатыКлиента"];
	ДатаОкончания = ДатаОкончания + СмещениеДатыКлиента;
	
	Замеры = ПараметрыПриложения["СтандартныеПодсистемы.ОценкаПроизводительностиЗамерВремени"]["Замеры"];
	Для Каждого КлючеваяОперацияБуферы Из Замеры Цикл
		Для Каждого ДатаДанные Из КлючеваяОперацияБуферы.Значение Цикл
			Буфер = ДатаДанные.Значение;
			ВремяНачала = Буфер["ВремяНачала"];
			Длительность = Буфер.Получить("Длительность");
			Если Длительность = Неопределено Тогда
				Буфер.Вставить("Длительность", ВремяОкончания - ВремяНачала);
				Буфер.Вставить("ВремяОкончания", ВремяОкончания);
				Буфер.Вставить("ДатаОкончания", ДатаОкончания);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистем БСП.

// Вызывается перед интерактивным завершением работы пользователя с областью данных.
// Соответствует событию ПередЗавершениемРаботыСистемы модулей приложения.
//
Процедура ПередЗавершениемРаботыСистемы(Параметры) Экспорт
	
	ЗаписатьРезультатыАвтоНеГлобальный(Истина);
	
КонецПроцедуры

#КонецОбласти
