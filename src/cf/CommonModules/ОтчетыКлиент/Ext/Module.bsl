////////////////////////////////////////////////////////////////////////////////
// Методы работы с СКД из формы отчета (клиент).
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура СписокКомпоновщикаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	
	ИдентификаторЭлемента = Прав(Элемент.Имя, 32);
	ПользовательскаяНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(Форма, ИдентификаторЭлемента);
	ДополнительныеНастройки = НайтиДополнительныеНастройкиЭлемента(Форма, ИдентификаторЭлемента);
	Если ДополнительныеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Форма", Форма);
	ПараметрыОбработчика.Вставить("ИдентификаторЭлемента", ИдентификаторЭлемента);
	Обработчик = Новый ОписаниеОповещения("СписокКомпоновщикаЗавершениеВыбора", ЭтотОбъект, ПараметрыОбработчика);
	
	Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
		Значение = ПользовательскаяНастройкаКД.ПравоеЗначение;
	Иначе
		Значение = ПользовательскаяНастройкаКД.Значение;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючУникальности", ИдентификаторЭлемента);
	ПараметрыФормы.Вставить("Отмеченные", ОтчетыКлиентСервер.ЗначенияСписком(Значение));
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыФормы, ДополнительныеНастройки, Истина);
	
	ПараметрыФормы.Вставить("ПараметрыВыбора", Новый Массив);
	
	// Добавление фиксированных параметров выбора.
	Для Каждого ПараметрВыбора Из Элемент.ПараметрыВыбора Цикл
		Если ПустаяСтрока(ПараметрВыбора.Имя) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрВыбора.Имя) Тогда
			ПараметрыФормы.ПараметрыВыбора.Добавить(ПараметрВыбора);
		КонецЕсли;
	КонецЦикла;
	
	// Добавление динамических параметров выбора (от ведущих). Для обратной совместимости.
	Для Каждого СвязьПараметраВыбора Из Элемент.СвязиПараметровВыбора Цикл
		Если ПустаяСтрока(СвязьПараметраВыбора.Имя) Тогда
			Продолжить;
		КонецЕсли;
		ВедущийЗначение = Форма[СвязьПараметраВыбора.ПутьКДанным];
		ПараметрыФормы.ПараметрыВыбора.Добавить(Новый ПараметрВыбора(СвязьПараметраВыбора.Имя, ВедущийЗначение));
	КонецЦикла;
	
	// Добавление динамических параметров выбора (от ведущих).
	Найденные = Форма.ОтключаемыеСвязи.НайтиСтроки(Новый Структура("ПодчиненныйИдентификаторВФорме", ИдентификаторЭлемента));
	Для Каждого Связь Из Найденные Цикл
		Если Не ЗначениеЗаполнено(Связь.ВедущийИдентификаторВФорме)
			Или Не ЗначениеЗаполнено(Связь.ПодчиненныйИмяПараметра) Тогда
			Продолжить;
		КонецЕсли;
		ВедущийНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(Форма, Связь.ВедущийИдентификаторВФорме);
		Если Не ВедущийНастройкаКД.Использование Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(ВедущийНастройкаКД) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ВедущийЗначение = ВедущийНастройкаКД.ПравоеЗначение;
		Иначе
			ВедущийЗначение = ВедущийНастройкаКД.Значение;
		КонецЕсли;
		Если Связь.ТипСвязи = "ПараметровВыбора" Тогда
			ПараметрыФормы.ПараметрыВыбора.Добавить(Новый ПараметрВыбора(Связь.ПодчиненныйИмяПараметра, ВедущийЗначение));
		ИначеЕсли Связь.ТипСвязи = "ПоТипу" Тогда
			ВедущийТип = ТипЗнч(ВедущийЗначение);
			Если ПараметрыФормы.ОписаниеТипов.СодержитТип(ВедущийТип) И ПараметрыФормы.ОписаниеТипов.Типы().Количество() > 1 Тогда
				МассивТипов = Новый Массив;
				МассивТипов.Добавить(ВедущийТип);
				ПараметрыФормы.ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Блокировать = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("ОбщаяФорма.ВводЗначенийСпискомСФлажками", ПараметрыФормы, ЭтотОбъект, , , , Обработчик, Блокировать);
КонецПроцедуры

Процедура СписокКомпоновщикаЗавершениеВыбора(РезультатВыбора, ПараметрыОбработчика) Экспорт
	Если ТипЗнч(РезультатВыбора) <> Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	Форма = ПараметрыОбработчика.Форма;
	
	ИдентификаторЭлемента = ПараметрыОбработчика.ИдентификаторЭлемента;
	
	ПользовательскаяНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(Форма, ИдентификаторЭлемента);
	ДополнительныеНастройки = НайтиДополнительныеНастройкиЭлемента(Форма, ИдентификаторЭлемента);
	
	// Загрузка выбранных значений в 2 списка.
	СписокЗначенийВСКД = Новый СписокЗначений;
	Если Не ДополнительныеНастройки.ОграничиватьВыборУказаннымиЗначениями Тогда
		ДополнительныеНастройки.ЗначенияДляВыбора = Новый СписокЗначений;
	КонецЕсли;
	Для Каждого ЭлементСпискаВФорме Из РезультатВыбора Цикл
		ЗначениеВФорме = ЭлементСпискаВФорме.Значение;
		Если Не ДополнительныеНастройки.ОграничиватьВыборУказаннымиЗначениями Тогда
			Если ДополнительныеНастройки.ЗначенияДляВыбора.НайтиПоЗначению(ЗначениеВФорме) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ДополнительныеНастройки.ЗначенияДляВыбора.Добавить(), ЭлементСпискаВФорме, "Значение, Представление");
		КонецЕсли;
		Если ЭлементСпискаВФорме.Пометка Тогда
			Если ТипЗнч(ЗначениеВФорме) = Тип("ОписаниеТипов") Тогда
				ЗначениеВСКД = ЗначениеВФорме.Типы()[0];
			Иначе
				ЗначениеВСКД = ЗначениеВФорме;
			КонецЕсли;
			ОтчетыКлиентСервер.ДобавитьУникальноеЗначениеВСписок(СписокЗначенийВСКД, ЗначениеВСКД, ЭлементСпискаВФорме.Представление, Истина);
		КонецЕсли;
	КонецЦикла;
	Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
		ПользовательскаяНастройкаКД.ПравоеЗначение = СписокЗначенийВСКД;
	Иначе
		ПользовательскаяНастройкаКД.Значение = СписокЗначенийВСКД;
	КонецЕсли;
	
	// Включение флажка Использование.
	ПользовательскаяНастройкаКД.Использование = Истина;
	
	Форма.ПользовательскиеНастройкиМодифицированы = Истина;
	#Если ВебКлиент Тогда
		Форма.ОбновитьОтображениеДанных();
	#КонецЕсли
КонецПроцедуры

Функция НайтиПользовательскуюНастройкуЭлемента(Форма, ИдентификаторЭлемента) Экспорт
	// Для пользовательских настроек хранятся идентификаторы компоновки данных,
	//  поскольку они не могут храниться по ссылке (происходит копирование значения).
	КомпоновщикНастроек = ОтчетыКлиентСервер.КомпоновщикНастроек(Форма);
	ИдентификаторКД = Форма.БыстрыйПоискПользовательскихНастроек.Получить(ИдентификаторЭлемента);
	Если ИдентификаторКД = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьОбъектПоИдентификатору(ИдентификаторКД);
	КонецЕсли;
КонецФункции

Функция НайтиДополнительныеНастройкиЭлемента(Форма, ИдентификаторЭлемента) Экспорт
	// Для пользовательских настроек хранятся идентификаторы компоновки данных,
	//  поскольку они не могут храниться по ссылке (происходит копирование значения).
	КомпоновщикНастроек = ОтчетыКлиентСервер.КомпоновщикНастроек(Форма);
	ВсеДополнительныеНастройки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства, "ЭлементыФормы");
	Если ВсеДополнительныеНастройки = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат ВсеДополнительныеНастройки[ИдентификаторЭлемента];
	КонецЕсли;
КонецФункции

#КонецОбласти