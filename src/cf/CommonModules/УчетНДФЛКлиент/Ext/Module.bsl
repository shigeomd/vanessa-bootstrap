
#Область СлужебныеПроцедурыИФункции

#Область ПанельПримененныеВычеты

Процедура НДФЛПриАктивизацииСтроки(Форма) Экспорт
	
	УчетНДФЛКлиентВнутренний.НДФЛПриАктивизацииСтроки(Форма);
	
КонецПроцедуры

Процедура НДФЛПередУдалением(Форма, НДФЛТекущиеДанные, Отказ) Экспорт
	
	УчетНДФЛКлиентВнутренний.НДФЛПередУдалением(Форма, НДФЛТекущиеДанные, Отказ);
	
КонецПроцедуры

Процедура НДФЛПриОкончанииРедактирования(Форма) Экспорт
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаКлиенте();
	ИмяГруппыФормыПанелиВычеты = ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты;
	
	НДФЛТекущиеДанные = УчетНДФЛКлиентСервер.НДФЛТекущиеДанные(Форма, ОписаниеПанелиВычеты);
	
	НДФЛТекущиеДанные["ПримененныйВычетЛичный"] 						= Форма[ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичный"];
	НДФЛТекущиеДанные["ПримененныйВычетЛичныйКодВычета"] 				= Форма[ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичныйКодВычета"];
	НДФЛТекущиеДанные["ПримененныйВычетЛичныйКЗачетуВозврату"] 			= Форма[ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичныйКЗачетуВозврату"];
	НДФЛТекущиеДанные["ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета"] = Форма[ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета"];
	
	УчетНДФЛКлиентСервер.ЗаполнитьПредставлениеВычетовЛичныхСтрокиНДФЛ(Форма, НДФЛТекущиеДанные, ОписаниеПанелиВычеты);
	Форма[ИмяГруппыФормыПанелиВычеты + "ПредставлениеВычетовЛичных"] = НДФЛТекущиеДанные.ПредставлениеВычетовЛичных;
	
	НДФЛПриАктивизацииСтроки(Форма);
	
КонецПроцедуры

Процедура НДФЛПриНачалеРедактирования(Форма, ТекущиеДанные, НоваяСтрока, Копирование) Экспорт
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаКлиенте();
	
	УчетНДФЛКлиентСервер.НазначитьИдентификаторСтрокеНДФЛ(ТекущиеДанные, Форма[ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты + "МаксимальныйИдентификаторСтрокиНДФЛ"], НоваяСтрока);
	
	Если Копирование ИЛИ НоваяСтрока Тогда
		НДФЛПриАктивизацииСтроки(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычетыПриНачалеРедактирования(СтрокаПримененныеВычетыНаДетейИИмущественные, НоваяСтрока, СтрокаИсточникЗаполнения) Экспорт
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаПримененныеВычетыНаДетейИИмущественные, СтрокаИсточникЗаполнения);
	
КонецПроцедуры

// Процедура реализует печать объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность.
// Параметры - (см. РегламентированнаяОтчетностьКлиентПереопределяемый.Печать) 
//	 
Процедура ПечатьДокументаОтчетности(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка) Экспорт
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган") Тогда
		СтандартнаяОбработка = Истина;
	КонецЕсли;		
КонецПроцедуры	

// Процедура реализует печать объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность.
// Параметры - (см. РегламентированнаяОтчетностьКлиентПереопределяемый.Выгрузить) 
//	 
Процедура ВыгрузитьДокументОтчетности(Ссылка) Экспорт
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган") Тогда
		ДанныеФайла = ЗарплатаКадрыВызовСервера.ПолучитьДанныеФайла(Ссылка);
		ПрисоединенныеФайлыКлиент.СохранитьФайлКак(ДанныеФайла);	
	КонецЕсли;	
	
КонецПроцедуры	

// Процедура реализует печать объектов, отображаемых на закладке Отчеты и Уведомления формы Отчетность.
// Параметры - (см. РегламентированнаяОтчетностьКлиентПереопределяемый.СоздатьНовыйОбъект) 
//	 
Процедура СоздатьНовыйДокументОтчетности(Организация, Тип, СтандартнаяОбработка) Экспорт
	Если Тип = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган") Тогда
		СтандартнаяОбработка = Истина;
	КонецЕсли;	
КонецПроцедуры	

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

Процедура УстановитьОтборыПримененныхВычетов(Форма, НДФЛТекущиеДанные) Экспорт
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаКлиенте();
	
	ГруппаФормыПанельВычеты = Форма.Элементы.Найти(ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты);
	
	Если ГруппаФормыПанельВычеты = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	НастраиваемыеПанели = ОписаниеПанелиВычеты.НастраиваемыеПанели;
	
	ВычетыНаДетейИИмущественные = НастраиваемыеПанели.Получить("ВычетыНаДетейИИмущественные");
	Если ВычетыНаДетейИИмущественные <> Неопределено Тогда
		
		СтруктураОтбораПримененныеВычетыНаДетейИИмущественные = Новый Структура("ИдентификаторСтрокиНДФЛ");
		Если НДФЛТекущиеДанные <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтруктураОтбораПримененныеВычетыНаДетейИИмущественные, НДФЛТекущиеДанные);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			ГруппаФормыПанельВычеты.Имя + "ВычетыНаДетейИИмущественные",
			"ОтборСтрок",
			Новый ФиксированнаяСтруктура(СтруктураОтбораПримененныеВычетыНаДетейИИмущественные));
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			ГруппаФормыПанельВычеты.Имя + "ВычетыНаДетейИИмущественные",
			"ТолькоПросмотр",
			(НДФЛТекущиеДанные = Неопределено));
		
	КонецЕсли;
	
	ВычетыКДоходам = НастраиваемыеПанели.Получить("ВычетыКДоходам");
	Если ВычетыКДоходам <> Неопределено Тогда
		
		СтруктураОтбораВычетыПримененныеКДоходам = Новый Структура("ФизическоеЛицо,Подразделение,ВычетПримененныйКДоходам");
		Если НДФЛТекущиеДанные <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтруктураОтбораВычетыПримененныеКДоходам, НДФЛТекущиеДанные);
			СтруктураОтбораВычетыПримененныеКДоходам.ВычетПримененныйКДоходам = Истина;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			ГруппаФормыПанельВычеты.Имя + "ВычетыКДоходам",
			"ОтборСтрок",
			Новый ФиксированнаяСтруктура(СтруктураОтбораВычетыПримененныеКДоходам));
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			ГруппаФормыПанельВычеты.Имя + "ВычетыКДоходам",
			"ТолькоПросмотр",
			(НДФЛТекущиеДанные = Неопределено));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПримененныеВычетыНаДетейИИмущественные(Форма) Экспорт
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаКлиенте();
	
	ВычетыНаДетейИИмущественные = ОписаниеПанелиВычеты.НастраиваемыеПанели["ВычетыНаДетейИИмущественные"];
	Если ВычетыНаДетейИИмущественные <> Неопределено Тогда
		СтруктураПоиска = Новый Структура("ИдентификаторСтрокиНДФЛ", Форма[ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты + "ИдентификаторУдаляемойСтрокиСтрокиНДФЛ"]);
		ДанныеВычетов = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ВычетыНаДетейИИмущественные);
		НайденныеСтроки = ДанныеВычетов.НайтиСтроки(СтруктураПоиска);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ДанныеВычетов.Удалить(НайденнаяСтрока);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СправкиНДФЛПриИзмененииФиксируемогоЗначения(Форма, ДанныеСправки, ПутькДанным) Экспорт
	ДанныеСправки["Фикс" + ПутькДанным] = Истина;
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьСвойстваЭлементовСФиксациейДанных(Форма, ДанныеСправки, Форма.ДокументПроведен);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьИнфонадписьИсправления(Форма.ИнфоНадписьИсправления, ДанныеСправки, Форма.ДокументПроведен);
КонецПроцедуры	

Процедура СправкиНДФЛПриИзмененииУдостоверенияЛичности(Форма, ДанныеСправки) Экспорт
	СправкиНДФЛПриИзмененииФиксируемогоЗначения(Форма, ДанныеСправки, "ВидДокумента");
	СправкиНДФЛПриИзмененииФиксируемогоЗначения(Форма, ДанныеСправки, "СерияДокумента");
	СправкиНДФЛПриИзмененииФиксируемогоЗначения(Форма, ДанныеСправки, "НомерДокумента");
КонецПроцедуры	

Процедура СправкиНДФЛГражданствоПриИзменении(Форма, ДанныеСправки) Экспорт
	СправкиНДФЛПриИзмененииФиксируемогоЗначения(Форма, ДанныеСправки, "Гражданство");
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьПризнакНаличияГражданства(Форма, ДанныеСправки);
КонецПроцедуры	

Процедура СправкиНДФЛЛицБезГражданстваПриИзменении(Форма, ДанныеСправки) Экспорт
	Если Форма.ЛицоБезГражданства = 1 Тогда
		ДанныеСправки.Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
		Форма.Элементы.Гражданство.Доступность = Ложь;
	Иначе
		Форма.Элементы.Гражданство.Доступность = Истина;	
	КонецЕсли;
	
	СправкиНДФЛПриИзмененииФиксируемогоЗначения(Форма, ДанныеСправки, "Гражданство");	
КонецПроцедуры	

Процедура СправкиНДФЛУстановитьСтарыеЗначенияКонтролируемыхПолей(РедактируемыеДанные, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, Раздел) Экспорт
	КонтролируемыеПоляРаздела = КонтролируемыеПоля[Раздел];
	
	Если РедактируемыеДанные = Неопределено Тогда
		СтарыеЗначенияКонтролируемыхПолейРаздела = Новый Соответствие;
		СтарыеЗначенияКонтролируемыхПолей.Вставить(Раздел, СтарыеЗначенияКонтролируемыхПолейРаздела);
		
		Для Каждого Поле Из КонтролируемыеПоляРаздела Цикл
			СтарыеЗначенияКонтролируемыхПолейРаздела.Вставить(Поле, Неопределено);		
		КонецЦикла;		
	Иначе			
		СтарыеЗначенияКонтролируемыхПолейРаздела = СтарыеЗначенияКонтролируемыхПолей.Получить(Раздел);
		Если СтарыеЗначенияКонтролируемыхПолейРаздела = Неопределено Тогда
			СтарыеЗначенияКонтролируемыхПолейРаздела = Новый Соответствие;
			СтарыеЗначенияКонтролируемыхПолей.Вставить(Раздел, СтарыеЗначенияКонтролируемыхПолейРаздела);
		КонецЕсли;
		
		Для Каждого Поле Из КонтролируемыеПоляРаздела Цикл
			СтарыеЗначенияКонтролируемыхПолейРаздела.Вставить(Поле, РедактируемыеДанные[Поле]);		
		КонецЦикла;		
	КонецЕсли;	
КонецПроцедуры	

Процедура СправкиНДФЛПриОкончанииРедактирования(Форма, ДанныеСправки, РедактируемыеДанные, СтарыеЗначенияКонтролируемыхПолей, КонтролируемыеПоля, Раздел) Экспорт
	Если РедактируемыеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	КонтролируемыеПоляРаздела = КонтролируемыеПоля[Раздел];	
	СтарыеЗначенияКонтролируемыхПолейРаздела = СтарыеЗначенияКонтролируемыхПолей[Раздел];
	
	Для Каждого Поле Из КонтролируемыеПоляРаздела Цикл
		Если РедактируемыеДанные[Поле] <> СтарыеЗначенияКонтролируемыхПолейРаздела[Поле] Тогда
			Если Раздел = "Уведомление" Тогда
				ДанныеСправки.ФиксУведомление = Истина	
			Иначе	
				ДанныеСправки.ФиксНалоги = Истина;
			КонецЕсли;	
		КонецЕсли;	
		СтарыеЗначенияКонтролируемыхПолейРаздела.Вставить(Поле, РедактируемыеДанные[Поле]);
	КонецЦикла;	
КонецПроцедуры	

Процедура СправкиНДФЛРегистрацияВНалоговомОрганеОткрытие(Форма, СтандартнаяОбработка) Экспорт
	Если ЗначениеЗаполнено(Форма.Объект.РегистрацияВНалоговомОргане) Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыОткрытия = Новый Структура("Ключ", Форма.Объект.РегистрацияВНалоговомОргане);
		
		ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаОбъекта", ПараметрыОткрытия);
	КонецЕсли;	
КонецПроцедуры	

Процедура КодДоходаПриИзменении(Форма, ГодНалоговогоПериода, ИмяТаблицы, КодДоходаИмяРеквизита, ИмяПоляКодВычета, КодВычетаИмяРеквизита, СуммаВычетаИмяРеквизита = "") Экспорт
	ДанныеТекущейСтроки = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	КодДохода = ДанныеТекущейСтроки[КодДоходаИмяРеквизита];
	
	ОписаниеКодаДохода = УчетНДФЛКлиентПовтИсп.ПолучитьОписаниеКодаДохода(КодДохода);		
	
	СоответствиеДоступныхВычетовДоходам = УчетНДФЛКлиентПовтИсп.ВычетыКДоходам(ГодНалоговогоПериода);
	
	МассивДоступныхВычетов = СоответствиеДоступныхВычетовДоходам.Получить(КодДохода);
	
	Если МассивДоступныхВычетов <> Неопределено Тогда 
		Форма.Элементы[ИмяПоляКодВычета].СписокВыбора.ЗагрузитьЗначения(МассивДоступныхВычетов);
	КонецЕсли;	
		
	ДанныеТекущейСтроки[КодВычетаИмяРеквизита] = ОписаниеКодаДохода.ВычетПоУмолчанию;
	
	Если СуммаВычетаИмяРеквизита <> "" Тогда 
		ДанныеТекущейСтроки[СуммаВычетаИмяРеквизита] = 0;		
	КонецЕсли;
КонецПроцедуры

Процедура КодДоходаАктивацииСтроки(Форма, ГодНалоговогоПериода, ИмяТаблицы, КодДоходаИмяРеквизита, ИмяПоляКодВычета) Экспорт
	ДанныеТекущейСтроки = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если ДанныеТекущейСтроки <> Неопределено Тогда 
		КодДохода = ДанныеТекущейСтроки[КодДоходаИмяРеквизита];
	
		СоответствиеДоступныхВычетовДоходам = УчетНДФЛКлиентПовтИсп.ВычетыКДоходам(ГодНалоговогоПериода);
		
		МассивДоступныхВычетов = СоответствиеДоступныхВычетовДоходам.Получить(КодДохода);

		Если МассивДоступныхВычетов <> Неопределено Тогда 
			Форма.Элементы[ИмяПоляКодВычета].СписокВыбора.ЗагрузитьЗначения(МассивДоступныхВычетов);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
