Функция ОпределитьВидСчетаФактурыВыданногоПоТипуОснования(ДокументОснование) Экспорт

	СписокТиповНаАванс			= ПолучитьСписокТиповПоВидуСчетаФактурыВыставленного(Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
	СписокТиповНалоговыйАгент	= ПолучитьСписокТиповПоВидуСчетаФактурыВыставленного(Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент);
	СписокТиповКорректировочный	= ПолучитьСписокТиповПоВидуСчетаФактурыВыставленного(Перечисления.ВидСчетаФактурыВыставленного.Корректировочный);
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		
		Возврат ДокументОснование.ВидСчетаФактуры;
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		
		Возврат Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента;
		
	ИначеЕсли СписокТиповНаАванс.Найти(ТипЗнч(ДокументОснование)) <> Неопределено 
		И ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		Возврат Перечисления.ВидСчетаФактурыВыставленного.НаАванс;
		
	ИначеЕсли СписокТиповНалоговыйАгент.Найти(ТипЗнч(ДокументОснование)) <> Неопределено Тогда
		
		Возврат Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент;
		
	ИначеЕсли СписокТиповКорректировочный.Найти(ТипЗнч(ДокументОснование)) <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		
		НомераТаблиц	= Новый Структура;
		Запрос.Текст	= 
		"ВЫБРАТЬ
		|	КорректировкаРеализации.Ссылка КАК ДокументОснование,
		|	КорректировкаРеализации.Дата,
		|	КорректировкаРеализации.Организация,
		|	КорректировкаРеализации.Контрагент,
		|	КорректировкаРеализации.ДоговорКонтрагента,
		|	КорректировкаРеализации.ВидОперации,
		|	КорректировкаРеализации.ДокументРеализации,
		|	КорректировкаРеализации.ИсправляемыйДокументРеализации,
		|	КорректировкаРеализации.ИсправляемыйДокументРеализации.ВидОперации КАК ИсправляемыйДокументРеализацииВидОперации
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|ГДЕ
		|	КорректировкаРеализации.Ссылка = &ДокументОснование";
		
		Результат	= Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию;;
		КонецЕсли;
		
		РеквизитыОснования	= Результат.Выбрать();
		РеквизитыОснования.Следующий();		
		
		Если ЗначениеЗаполнено(РеквизитыОснования.ИсправляемыйДокументРеализации)
			И (ТипЗнч(РеквизитыОснования.ИсправляемыйДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации")) 
			И РеквизитыОснования.ИсправляемыйДокументРеализацииВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
			И РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
			
			Возврат Перечисления.ВидСчетаФактурыВыставленного.Корректировочный;
			
		ИначеЕсли РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
			
			Возврат Перечисления.ВидСчетаФактурыВыставленного.Корректировочный;
			
		Иначе		
			
			ОснованиеДляВидаОперации	= ПолучитьИсправляемыйДокументРеализации(ДокументОснование);
			
			Если СписокТиповНалоговыйАгент.Найти(ТипЗнч(ОснованиеДляВидаОперации)) <> Неопределено Тогда
				
				Возврат	Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент;
				
			ИначеЕсли СписокТиповНаАванс.Найти(ТипЗнч(ОснованиеДляВидаОперации)) <> Неопределено Тогда			
				
				Если ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
					ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
					
					Возврат Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию;
				Иначе
					Возврат Перечисления.ВидСчетаФактурыВыставленного.НаАванс;
				КонецЕсли;
				
			ИначеЕсли СписокТиповКорректировочный.Найти(ТипЗнч(ОснованиеДляВидаОперации)) <> Неопределено Тогда
				
				Возврат Перечисления.ВидСчетаФактурыВыставленного.Корректировочный;	
				
			Иначе
				
				Возврат Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию;	
				
			КонецЕсли;
			
		КонецЕсли;
	
	Иначе
		
		Возврат Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию;
		
	КонецЕсли;

КонецФункции

Функция ПолучитьСписокТиповПоВидуСчетаФактурыВыставленного(ВидСчетаФактурыСписка, ЭтоИсправление = Ложь, НаАвансДляКомитентаНаЗакупку = Ложь) Экспорт
	
	СписокТипов = Новый Массив;
	
	Если ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный 
		ИЛИ ЭтоИсправление И ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда
		
		СписокТипов.Добавить(Тип("ДокументСсылка.КорректировкаРеализации"));
		
	ИначеЕсли ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент 
		ИЛИ НаАвансДляКомитентаНаЗакупку Тогда 
		
		СписокТипов.Добавить(Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом"));
		СписокТипов.Добавить(Тип("ДокументСсылка.СписаниеСРасчетногоСчета"));
		СписокТипов.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
		УчетОбособленныхПодразделений.ДобавитьТипДокументаОбособленныхПодразделений(СписокТипов, "АвизоРасчетыВходящее");
		
	Иначе
		
		СписокТипов.Добавить(Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом"));
		СписокТипов.Добавить(Тип("ДокументСсылка.КорректировкаДолга"));
		СписокТипов.Добавить(Тип("ДокументСсылка.ПоступлениеНаРасчетныйСчет"));
		СписокТипов.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
		СписокТипов.Добавить(Тип("ДокументСсылка.ОплатаПлатежнойКартой"));
				
		Если ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
			
			СписокТипов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
			
		ИначеЕсли ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу Тогда
			// Список типов не требует корректировки
		ИначеЕсли ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда 
			
			ВычитаемыеТипы = Новый Массив;
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.НачислениеНДСпоСМРхозспособом"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.СписаниеСРасчетногоСчета"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ОказаниеУслуг"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.КорректировкаРеализации"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ОтчетКомиссионераОПродажах"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.КорректировкаДолга"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ПоступлениеНаРасчетныйСчет"));
			ВычитаемыеТипы.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
			УчетОбособленныхПодразделений.ДобавитьТипДокументаОбособленныхПодразделений(ВычитаемыеТипы, "АвизоРасчетыВходящее");
			УчетОбособленныхПодразделений.ДобавитьТипДокументаОбособленныхПодразделений(ВычитаемыеТипы, "АвизоРасчетыИсходящее");
			
			СписокТипов = Новый ОписаниеТипов(Метаданные.Документы.СчетФактураВыданный.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип, , ВычитаемыеТипы);
			СписокТипов = СписокТипов.Типы();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СписокТипов;
	
КонецФункции

Функция ОпределитьВидСчетаФактурыПолученногоПоТипуОснования(ДокументОснование) Экспорт

	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета")
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") 
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет")
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		
		Возврат Перечисления.ВидСчетаФактурыПолученного.НаАванс;
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		
		НомераТаблиц	= Новый Структура;
		Запрос.Текст	= 
		"ВЫБРАТЬ
		|	КорректировкаПоступления.Ссылка КАК ДокументОснование,
		|	КорректировкаПоступления.Дата,
		|	КорректировкаПоступления.Организация,
		|	КорректировкаПоступления.Контрагент,
		|	КорректировкаПоступления.ДоговорКонтрагента,
		|	КорректировкаПоступления.ВидОперации,
		|	КорректировкаПоступления.ДокументПоступления,
		|	КорректировкаПоступления.ИсправляемыйДокументПоступления,
		|	КорректировкаПоступления.ИсправляемыйДокументПоступления.ВидОперации КАК ИсправляемыйДокументПоступленияВидОперации
		|ИЗ
		|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
		|ГДЕ
		|	КорректировкаПоступления.Ссылка = &ДокументОснование";
		
		Результат	= Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
		КонецЕсли;
		
		РеквизитыОснования	= Результат.Выбрать();
		РеквизитыОснования.Следующий();		
		
		Если ЗначениеЗаполнено(РеквизитыОснования.ИсправляемыйДокументПоступления)
			И (ТипЗнч(РеквизитыОснования.ИсправляемыйДокументПоступления) = Тип("ДокументСсылка.КорректировкаПоступления")) 
			И РеквизитыОснования.ИсправляемыйДокументПоступленияВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
			И РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
			
			Возврат Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
			
		ИначеЕсли РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
			
			Возврат Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
			
		Иначе		
			
			ОснованиеДляВидаОперации	= ПолучитьИсправляемыйДокументПоступления(ДокументОснование);
			
			Если ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета")
				ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") 
				ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.АвансовыйОтчет")
				ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
				
				Возврат Перечисления.ВидСчетаФактурыПолученного.НаАванс;
				
			ИначеЕсли ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
				
				Возврат Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
				
			Иначе
				
				Возврат Перечисления.ВидСчетаФактурыПолученного.НаПоступление;	
				
			КонецЕсли;
			
		КонецЕсли;

	ИначеЕсли  ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		Возврат Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
		
	КонецЕсли;

КонецФункции

//////////////////////////////////////////////////////////////////////////
// РАБОТА СО СЧЕТАМИ-ФАКТУРАМИ

// Документ - СчетФактураПолученный или основание для него
Функция РеквизитыДляНадписиОСчетеФактуреПолученном(Знач Документ, СтруктураОтбора = Неопределено) Экспорт

	Если ТипЗнч(Документ) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		СчетФактура = Документ;
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(Документ, , , СтруктураОтбора);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		
		РеквизитыСФ = Новый Структура(
			"Ссылка,Представление,Исправление,НомерИсправления,ДатаИсправления,НомерСчетаФактуры,ДатаСчетаФактуры,Дата,Корректировка",
			СчетФактура, "", Ложь, 0, '00010101');
			
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетФактура,
				"НомерВходящегоДокумента,ДатаВходящегоДокумента,Исправление,НомерИсправления,ДатаИсправления,
				|Представление,Дата,ВидСчетаФактуры");
			
		ЗаполнитьЗначенияСвойств(РеквизитыСФ, ЗначенияРеквизитов);
		РеквизитыСФ.НомерСчетаФактуры = ЗначенияРеквизитов.НомерВходящегоДокумента;
		РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.ДатаВходящегоДокумента;
		РеквизитыСФ.Корректировка	  = Ложь;
		Если ЗначенияРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
			 РеквизитыСФ.Корректировка  = Истина;
		КонецЕсли;
	Иначе
		РеквизитыСФ = Неопределено;
	КонецЕсли;
	
	Возврат РеквизитыСФ;
	
КонецФункции 

// Документ - СчетФактураВыданный или основание для него
Функция РеквизитыДляНадписиОСчетеФактуреВыданном(Знач Документ, СтруктураОтбора = Неопределено) Экспорт
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		СчетФактура = Документ;
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(Документ, , , СтруктураОтбора);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		РеквизитыСФ = Новый Структура(
			"Ссылка,Представление,НомерСчетаФактуры,ДатаСчетаФактуры,Исправление,НомерИсправления,ДатаИсправления,Корректировка",
			СчетФактура, "");
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетФактура,
			"Номер,Дата,ВидСчетаФактуры,Исправление,НомерИсправления,
			|НомерИсходногоДокумента,ДатаИсходногоДокумента,
			|НомерИсправляемогоКорректировочногоДокумента,ДатаИсправляемогоКорректировочногоДокумента,
			|Представление");
		РеквизитыСФ.Исправление      = ЗначенияРеквизитов.Исправление;
		РеквизитыСФ.НомерИсправления = ЗначенияРеквизитов.НомерИсправления;
		РеквизитыСФ.Представление 	 = ЗначенияРеквизитов.Представление;
		РеквизитыСФ.Корректировка	 = Ложь;
		
		Если ЗначенияРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
			РеквизитыСФ.Корректировка  = Истина;
		КонецЕсли;
		
		Если ЗначенияРеквизитов.Исправление Тогда
			РеквизитыСФ.ДатаИсправления = ЗначенияРеквизитов.Дата;
			Если ЗначенияРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
				РеквизитыСФ.НомерСчетаФактуры = ЗначенияРеквизитов.НомерИсправляемогоКорректировочногоДокумента;
				РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.ДатаИсправляемогоКорректировочногоДокумента;
			Иначе
				РеквизитыСФ.НомерСчетаФактуры = ЗначенияРеквизитов.НомерИсходногоДокумента;
				РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.ДатаИсходногоДокумента;
			КонецЕсли;
		Иначе
			РеквизитыСФ.НомерСчетаФактуры = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(
				ЗначенияРеквизитов.Номер, Истина, Ложь);
			РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.Дата;
		КонецЕсли;
	Иначе
		РеквизитыСФ = Неопределено;
	КонецЕсли;
	
	Возврат РеквизитыСФ;
	
КонецФункции 

// Функция возвращает структуру вариантов представления счета-фактуры для вывода на печать в книге покупок.
//
// Параметры:
//	ДокументОснование - ДокументСсылка.*, ссылка на документ, указываемый в качестве измерения
//						в регистрах НДС.
//	НомерСчетаФактуры - Строка, номер счета-фактуры полученный предварительно.
//	ДатаСчетаФактуры  - Дата, дата счета-фактуры, полученная предварительно.
//	ОбрабатыватьНомерДокумента - Булево, признак того, что необходимо исключить префиксы из номера
//									документа перед печатью.
//	СчетФактураДокумент - ДокументСсылка.СчетФактураПолученный/СчетФактураВыданный - ссылка на 
//							подчиненный документ "счет-фактура" (необязательный)
//
Функция ОпределитьДатуИНомерСчетаФактурыДляПечати(ДокументОснование, НомерСчетаФактуры, ДатаСчетаФактуры, ОбрабатыватьНомерДокумента = Ложь, СчетФактураДокумент = Неопределено) Экспорт

	ВариантыПредставленияСчетаФактуры = Новый Структура("ДатаНомер,НомерДата,Дата,Номер", "", "", "", "");
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат ВариантыПредставленияСчетаФактуры;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСчетаФактуры) И ЗначениеЗаполнено(НомерСчетаФактуры) Тогда
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			ДатаСФ	= Формат(ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") ;
			НомерСФ = ?(ЗначениеЗаполнено(ДатаСФ), "Заявление № ", "") + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерСчетаФактуры, Истина, Ложь);
				
		Иначе
			Если ОбрабатыватьНомерДокумента Тогда			
				ДатаСФ	= Формат(ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") ;
				НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерСчетаФактуры, Истина, Истина);
			Иначе
				ДатаСФ 	= Формат(ДатаСчетаФактуры, "ДФ=dd.MM.yyyy");
				НомерСФ = СокрЛП(НомерСчетаФактуры);
			КонецЕсли;
		КонецЕсли;

	Иначе
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ДатаСФ 	= Формат(ДокументОснование.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДокументОснование.Номер, Истина, Ложь);
		ИначеЕсли ТипЗнч(СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ДатаСФ 	= Формат(СчетФактураДокумент.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СчетФактураДокумент.Номер, Истина, Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	ВариантыПредставленияСчетаФактуры.ДатаНомер = "" + ДатаСФ + ?(ЗначениеЗаполнено(ДатаСФ), ";", "") + НомерСФ;
	ВариантыПредставленияСчетаФактуры.НомерДата = "" + НомерСФ + ?(ЗначениеЗаполнено(НомерСФ), ";", "") + ДатаСФ;
	
	ВариантыПредставленияСчетаФактуры.Номер = НомерСФ;
	ВариантыПредставленияСчетаФактуры.Дата = ДатаСФ;
		
	Возврат ВариантыПредставленияСчетаФактуры;

КонецФункции // ОпределитьДатуИНомерСчетаФактурыДляПечати()

// Функция производит поиск счета-фактуры полученного на поступление или корректировочного с указанным документом-основанием
//
// Параметры:
//  ДокументОснование	- ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ПометкаУдаления		- <Булево> - значение пометки счета-фактуры для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруПолученный(ДокументОснование, ИсключаемыйСФ = Неопределено, ПометкаУдаления = Ложь, СтруктураОтбора = Неопределено) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидыСчетовФактур = Новый Массив;
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление);
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыСчетовФактур",  ВидыСчетовФактур);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",     ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ПометкаУдаления",   ПометкаУдаления);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДокументыОснования.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	(ДокументыОснования.ДокументОснование = &ДокументОснование
	|			ИЛИ ДокументыОснования.Ссылка = &ДокументОснование)
	|	И ДокументыОснования.Ссылка.ПометкаУдаления = &ПометкаУдаления
	|	И ДокументыОснования.Ссылка.ВидСчетаФактуры В(&ВидыСчетовФактур)";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И ДокументыОснования.Ссылка <> &ИсключаемыйСФ"
	КонецЕсли;
	
	Если ТипЗнч(СтруктураОтбора) = Тип("Структура") Тогда
		ТекстУсловия = "";
		Для Каждого КлючЗначение Из СтруктураОтбора Цикл
			ТекстУсловия = ТекстУсловия + "
			| И ";
			
			Если ТипЗнч(КлючЗначение.Значение) = Тип("СписокЗначений") 
				ИЛИ ТипЗнч(КлючЗначение.Значение) = Тип("Массив") Тогда
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " В (&" + КлючЗначение.Ключ + ")";
			Иначе
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " = &" + КлючЗначение.Ключ;
			КонецЕсли;
			
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + ТекстУсловия;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Функция производит поиск счета-фактуры полученного на аванс с указанным документом-основанием
//
// Параметры:
//  ДокументСсылка  - ссылка на документ, для которого надо найти подчиненный документ,
//  Отбор 			- структура с именами и значениями реквизитов СФ для дополнительного отбора
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруПолученныйНаАванс(ДокументОснование, ИсключаемыйСФ = Неопределено, ДоговорКонтрагента = Неопределено, НомерИсправления = 0) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидыСчетовФактур = Новый Массив;
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАванс);
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыСчетовФактур",   ВидыСчетовФактур);
	Запрос.УстановитьПараметр("ДокументОснование",  ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",      ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("НомерИсправления",   НомерИсправления);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СчетФактура.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.ДокументОснование = &ДокументОснование
	|	И НЕ СчетФактура.ПометкаУдаления
	|	И СчетФактура.ВидСчетаФактуры В(&ВидыСчетовФактур)
	|	И СчетФактура.НомерИсправления = &НомерИсправления";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.Ссылка <> &ИсключаемыйСФ"
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.ДоговорКонтрагента = &ДоговорКонтрагента"
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Функция производит поиск счета-фактуры выданного на реализацию или корректировочного с указанным документом-основанием
//
// Параметры:
//  ДокументОснование	- ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ПометкаУдаления		- <Булево> - значение пометки счета-фактуры для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументОснование, ИсключаемыйСФ = Неопределено, ПометкаУдаления = Ложь, СтруктураОтбора = Неопределено) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидыСчетовФактур = Новый Массив;
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыВыставленного.Корректировочный);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыСчетовФактур",  ВидыСчетовФактур);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",     ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ПометкаУдаления",   ПометкаУдаления);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДокументыОснования.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.ДокументОснование = &ДокументОснование
	|	И ДокументыОснования.Ссылка.ПометкаУдаления = &ПометкаУдаления
	|	И ДокументыОснования.Ссылка.ВидСчетаФактуры В(&ВидыСчетовФактур)";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
			+ " И ДокументыОснования.Ссылка <> &ИсключаемыйСФ";
	КонецЕсли;

	Если ТипЗнч(СтруктураОтбора) = Тип("Структура") Тогда
		ТекстУсловия = "";
		Для Каждого КлючЗначение Из СтруктураОтбора Цикл
			ТекстУсловия = ТекстУсловия + "
			| И ";
			
			Если ТипЗнч(КлючЗначение.Значение) = Тип("СписокЗначений") 
				ИЛИ ТипЗнч(КлючЗначение.Значение) = Тип("Массив") Тогда
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " В (&" + КлючЗначение.Ключ + ")";
			Иначе
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " = &" + КлючЗначение.Ключ;
			КонецЕсли;
			
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + ТекстУсловия;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Функция производит поиск счета-фактуры выданного на аванс с указанным документом-основанием
//
// Параметры:
//  ДокументОснование	- ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ДоговорКонтрагента  - договор счета-фактуры для отбора при поиске
//  НомерИсправления    - номер исправления счета-фактуры  для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруВыданныйНаАванс(ДокументОснование, ИсключаемыйСФ = Неопределено, ДоговорКонтрагента = Неопределено, НомерИсправления = 0) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидыСчетовФактур = Новый Массив;
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыСчетовФактур",   ВидыСчетовФактур);
	Запрос.УстановитьПараметр("ДокументОснование",  ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",      ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("НомерИсправления",   НомерИсправления);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СчетФактура.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.ДокументОснование = &ДокументОснование
	|	И НЕ СчетФактура.ПометкаУдаления
	|	И СчетФактура.ВидСчетаФактуры В (&ВидыСчетовФактур)
	|	И СчетФактура.НомерИсправления = &НомерИсправления";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.Ссылка <> &ИсключаемыйСФ"
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.ДоговорКонтрагента = &ДоговорКонтрагента"
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Функция производит поиск счета-фактуры выданного налогового агента с указанным документом-основанием
//
// Параметры:
//  ДокументОснование	- ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ДоговорКонтрагента  - договор счета-фактуры для отбора при поиске
//  НомерИсправления    - номер исправления счета-фактуры для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруВыданныйНалоговыйАгент(ДокументОснование, ИсключаемыйСФ = Неопределено, ДоговорКонтрагента = Неопределено, НомерИсправления = 0) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидСчетаФактуры",    Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент);
	Запрос.УстановитьПараметр("ДокументОснование",  ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",      ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("НомерИсправления",   НомерИсправления);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СчетФактура.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.ДокументОснование = &ДокументОснование
	|	И СчетФактура.ВидСчетаФактуры = &ВидСчетаФактуры
	|	И НЕ СчетФактура.ПометкаУдаления
	|	И СчетФактура.НомерИсправления = &НомерИсправления";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.Ссылка <> &ИсключаемыйСФ"
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.ДоговорКонтрагента = &ДоговорКонтрагента"
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Функция производит поиск счета-фактуры выданного на суммовую разницу с указанным документом-основанием
// Параметры:
//  ДокументОснование   - ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ДоговорКонтрагента  - договор счета-фактуры для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруВыданныйНаСуммовуюРазницу(ДокументОснование, ИсключаемыйСФ = Неопределено, ДоговорКонтрагента = Неопределено) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидСчетаФактуры",    Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу);
	Запрос.УстановитьПараметр("ДокументОснование",  ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",      ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СчетФактура.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.ДокументОснование = &ДокументОснование
	|	И СчетФактура.ВидСчетаФактуры = &ВидСчетаФактуры
	|	И НЕ СчетФактура.ПометкаУдаления";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.Ссылка <> &ИсключаемыйСФ"
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И СчетФактура.ДоговорКонтрагента = &ДоговорКонтрагента"
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Функция производит поиск счета-фактуры полученного по заданному основанию, номеру и дате
// и дополняет его переданным документом-основанием
Функция ДобавитьОснованиеВСчетФактуруПолученный(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|	И СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Организация = &Организация
	|	И СчетФактураПолученный.НомерВходящегоДокумента = &НомерСчетаФактурыПолученного
	|	И СчетФактураПолученный.ДатаВходящегоДокумента = &ДатаСчетаФактурыПолученного
	|	И НЕ СчетФактураПолученный.Исправление";
	
	Запрос.УстановитьПараметр("Контрагент", Основание.Контрагент);
	Запрос.УстановитьПараметр("Организация", Основание.Организация);
	Запрос.УстановитьПараметр("НомерСчетаФактурыПолученного", НомерСчетаФактурыПолученного);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыПолученного", ДатаСчетаФактурыПолученного);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		
		СчетФактура = Выборка.СчетФактура.ПолучитьОбъект();
		НоваяСтрока = СчетФактура.ДокументыОснования.Добавить();
		НоваяСтрока.ДокументОснование = Основание;
		
		ПараметрыСчетаФактуры = ПолучитьПараметрыСчетаФактуры(СчетФактура);
		ЗаполнитьЗначенияСвойств(СчетФактура, ПараметрыСчетаФактуры);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Дата",						СчетФактура.Дата);
		СтруктураПараметров.Вставить("ВидСчетаФактуры",				СчетФактура.ВидСчетаФактуры);
		СтруктураПараметров.Вставить("Исправление",					СчетФактура.Исправление);
		СтруктураПараметров.Вставить("КодВидаОперацииОснования",	Неопределено);
		СтруктураПараметров.Вставить("ВидДоговора",					СчетФактура.ДоговорКонтрагента.ВидДоговора);
		СтруктураПараметров.Вставить("ДокументыОснования",			СчетФактура.ДокументыОснования.Выгрузить(,"ДокументОснование"));
		СтруктураПараметров.Вставить("СчетФактураБезНДС",			СчетФактура.СчетФактураБезНДС);
		СчетФактура.КодВидаОперации	= Документы.СчетФактураПолученный.ПолучитьКодВидаОперации(СтруктураПараметров);
		
		РежимЗаписи = ?(Основание.Проведен, 
			РежимЗаписиДокумента.Проведение, 
			РежимЗаписиДокумента.Запись);
		
		СчетФактура.Записать(РежимЗаписи);
		
		Возврат Выборка.СчетФактура;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Функция производит поиск исправленного и/или корректировочного счета-фактуры полученного по заданному основанию, номеру и дате
// и дополняет его переданным документом-основанием
Функция ДобавитьОснованиеВИсправленныйСчетФактуруПолученный(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного, Исправление, ВидСчетаФактуры) Экспорт
	
	СтруктураПараметровЗапроса = Новый Структура("НомерСчетаФактурыПолученного,ДатаСчетаФактурыПолученного,ВидСчетаФактуры,Исправление,ДатаИсправления,НомерИсправления");
	
	СтруктураПараметровЗапроса.Исправление = Исправление;
	СтруктураПараметровЗапроса.ВидСчетаФактуры = ?(ВидСчетаФактуры = Неопределено, Перечисления.ВидСчетаФактурыПолученного.НаПоступление, ВидСчетаФактуры);

	Если Исправление Тогда
	
		// Необходимо найти исходный счет-фактуру
		Если ТипЗнч(Основание.ДокументПоступления) <> Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			ИсходныйСчетФактура = УчетНДСПереопределяемый.НайтиПодчиненныйСчетФактуруПолученный(Основание.ДокументПоступления);
		Иначе
			ИсходныйСчетФактура = Основание.ДокументПоступления;
		КонецЕсли;
		
		Если ИсходныйСчетФактура <> Неопределено Тогда
			
			РеквизитыСчетаФактуры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ИсходныйСчетФактура, "НомерВходящегоДокумента, ДатаВходящегоДокумента");
			
			СтруктураПараметровЗапроса.НомерСчетаФактурыПолученного = РеквизитыСчетаФактуры.НомерВходящегоДокумента;
			СтруктураПараметровЗапроса.ДатаСчетаФактурыПолученного 	= РеквизитыСчетаФактуры.ДатаВходящегоДокумента;
			СтруктураПараметровЗапроса.ДатаИсправления 				= ДатаСчетаФактурыПолученного;
			СтруктураПараметровЗапроса.НомерИсправления 			= Число(НомерСчетаФактурыПолученного);
			
		Иначе
			Возврат Неопределено;
		КонецЕсли; 
		
	Иначе
			СтруктураПараметровЗапроса.НомерСчетаФактурыПолученного = НомерСчетаФактурыПолученного;
			СтруктураПараметровЗапроса.ДатаСчетаФактурыПолученного 	= ДатаСчетаФактурыПолученного;
			СтруктураПараметровЗапроса.ДатаИсправления 				= '00010101';
			СтруктураПараметровЗапроса.НомерИсправления 			= 0;
			
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.ВидСчетаФактуры = &ВидСчетаФактуры
	|	И СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Организация = &Организация
	|	И СчетФактураПолученный.НомерВходящегоДокумента = &НомерСчетаФактурыПолученного
	|	И СчетФактураПолученный.ДатаВходящегоДокумента = &ДатаСчетаФактурыПолученного
	|	И СчетФактураПолученный.Исправление = &Исправление
	|	И ВЫБОР
	|			КОГДА &Исправление
	|				ТОГДА СчетФактураПолученный.НомерИсправления = &НомерИсправления
	|						И СчетФактураПолученный.ДатаИсправления = &ДатаИсправления
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("Контрагент", Основание.Контрагент);
	Запрос.УстановитьПараметр("Организация", Основание.Организация);
	Запрос.УстановитьПараметр("НомерСчетаФактурыПолученного", 	СтруктураПараметровЗапроса.НомерСчетаФактурыПолученного);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыПолученного", 	СтруктураПараметровЗапроса.ДатаСчетаФактурыПолученного);
	Запрос.УстановитьПараметр("Исправление", 					СтруктураПараметровЗапроса.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления", 				СтруктураПараметровЗапроса.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления", 				СтруктураПараметровЗапроса.ДатаИсправления);
	Запрос.УстановитьПараметр("ВидСчетаФактуры", 				СтруктураПараметровЗапроса.ВидСчетаФактуры);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		
		Выборка.Следующий();
		
		СчетФактура = Выборка.СчетФактура.ПолучитьОбъект();
		НоваяСтрока = СчетФактура.ДокументыОснования.Добавить();
		НоваяСтрока.ДокументОснование = Основание;
		
		ПараметрыСчетаФактуры = ПолучитьПараметрыСчетаФактуры(СчетФактура);
		ЗаполнитьЗначенияСвойств(СчетФактура, ПараметрыСчетаФактуры);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Дата",						СчетФактура.Дата);
		СтруктураПараметров.Вставить("ВидСчетаФактуры",				СчетФактура.ВидСчетаФактуры);
		СтруктураПараметров.Вставить("Исправление",					СчетФактура.Исправление);
		СтруктураПараметров.Вставить("КодВидаОперацииОснования",	Неопределено);
		СтруктураПараметров.Вставить("ВидДоговора",					СчетФактура.ДоговорКонтрагента.ВидДоговора);
		СтруктураПараметров.Вставить("ДокументыОснования",			СчетФактура.ДокументыОснования.Выгрузить(,"ДокументОснование"));
		СтруктураПараметров.Вставить("СчетФактураБезНДС",			СчетФактура.СчетФактураБезНДС);
		
		СчетФактура.КодВидаОперации = Документы.СчетФактураПолученный.ПолучитьКодВидаОперации(СтруктураПараметров);
		
		РежимЗаписи = ?(Основание.Проведен, 
			РежимЗаписиДокумента.Проведение, 
			РежимЗаписиДокумента.Запись);
		
		СчетФактура.Записать(РежимЗаписи);
		
		Возврат Выборка.СчетФактура;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Функция определяет наличие счетов-фактур, полученных по документам,
// которые могут являться основаниями для ввода счетов-фактур полученных.
//
// Применяется для контроля за наличием в ИБ информации о наличии счетов-
// фактур.
//
// Параметры:
//  НачПериода       - Дата - Начальная дата выборки (включительно, с 00:00:00)
//  КонПериода       - Дата - Конечная дата выборки (включительно, по 23:59:59)
//  Организация      - Справочник.Ссылка - Организация, по которой
//                     осуществляется отбор. Необязательный параметр. Если не
//                     задан, отбор осуществляется по всем организациям.
//  Фильтр           - Документ.Ссылка, Массив - Документ или список документов,
//                     по которым осуществляется отбор. Необязательный параметр.
//                     Если не задан, отбор осуществляется по всем документам,
//                     которые могут являться основаниями для ввода счетов-фактур
//                     полученных.
//  ВсеКромеФильтра  - Булево - Признак отбора документов, не входящих в Фильтр.
//                     Необязательный параметр. Значение по умолчанию - Ложь.
//                     Если не задан, отбираются документы, заданные в Фильтре.
//  НаличиеСчетаФактуры - Булево - Признак отбора документов:
//                        Истина - Отбирать документы, по которым существуют
//                        счета-фактуры.
//                        Ложь - Отбирать документы, по которым счета-фактуры
//                        отсутствуют.
//                        Необязательный параметр. Если не задан, осуществляется
//                        отбор всех документов.
// СчетФактураПроведен - Булево - Признак отбора счетов-фактур:
//                        Истина - Отбирать проведенные счета-фактуры
//                        Ложь - Отбирать непроведенные счета-фактуры
//                        Необязательный параметр. Если не задан, осуществляется
//                        отбор всех счетов-фактур.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений - Состав колонок:
//                    Документ - Документ.Ссылка - Документ, по которому
//                               производился поиск счета-фактуры полученного
//                    СчетФактура - Документ.Ссылка - Ссылка на счет-
//                                  фактуру полученный, либо Неопределено
//
Функция ОпределитьНаличиеСчетовФактурПолученных(
		НачПериода = Неопределено,
		КонПериода = Неопределено,
		Организация,
		Фильтр = Неопределено,
		ВсеКромеФильтра = Ложь,
		НаличиеСчетаФактуры = Неопределено,
		СчетФактураПроведен = Неопределено,
		ДатаСФНеБолее = Неопределено,
		ЭтоОтчет = Ложь) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("НачПериода",  		НачПериода);
	Запрос.УстановитьПараметр("КонПериода",  		?(НЕ ЗначениеЗаполнено(КонПериода), '00010101', КонецДня(КонПериода)));
	Запрос.УстановитьПараметр("КонПериодаГраница", 	?(НЕ ЗначениеЗаполнено(КонПериода), 
															'00010101', Новый Граница(КонецДня(КонПериода), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("ДатаСФНеБолее",  	?(НЕ ЗначениеЗаполнено(ДатаСФНеБолее), Неопределено,КонецДня(ДатаСФНеБолее)));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Фильтр",      		Фильтр);
	Запрос.УстановитьПараметр("ЭтоОтчет", 			ЭтоОтчет);
	
	// Дополняем условие запроса отбором по организации
	Условие_Основание = ?(НЕ ЗначениеЗаполнено(Организация), "", "Организация = &Организация ");
	
	// Дополняем условие запроса отбором по документу-основанию или списку документов-оснований
	Условие_Основание = Условие_Основание
				   + ?(НЕ ЗначениеЗаполнено(Фильтр), "", ?(НЕ ЗначениеЗаполнено(Условие_Основание), "", " И ") + "СчетФактура " + ?(ВсеКромеФильтра, " НЕ ", "") + " В (&Фильтр) ");
	
	// Дополняем условие запроса отбором по периоду
	Если (ЗначениеЗаполнено(НачПериода)) И (ЗначениеЗаполнено(КонПериода)) Тогда
		УсловиеЗапроса = "ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) МЕЖДУ &НачПериода И &КонПериода
							|";
	ИначеЕсли (ЗначениеЗаполнено(НачПериода)) И (НЕ ЗначениеЗаполнено(КонПериода)) Тогда
		УсловиеЗапроса = "ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) >= &НачПериода
							|";
	ИначеЕсли (НЕ ЗначениеЗаполнено(НачПериода)) И (ЗначениеЗаполнено(КонПериода)) Тогда
		УсловиеЗапроса = "ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) <= &КонПериода
							|";
	Иначе
		УсловиеЗапроса = "";
	КонецЕсли;   
	
	// Дополняем условие запроса отбором по признаку наличия/отсутствия счета-фактуры
	УсловиеЗапроса = УсловиеЗапроса
				   + ?(НаличиеСчетаФактуры = Неопределено, "", ?(НЕ ЗначениеЗаполнено(УсловиеЗапроса), "", " И ") + ?(НаличиеСчетаФактуры, "НЕ (", "(") + "
					|	ВЫБОР
					|		КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
					|			ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
					|			ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
					|			ТОГДА НДСПредъявленныйОбороты.СчетФактура
					|		КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
					|			ТОГДА СчетФактураПолученный.Ссылка
					|		ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.Ссылка, СчетФактураВыданный.Ссылка)
					|	КОНЕЦ ЕСТЬ NULL) ");
	// Дополняем условие запроса отбором по признаку проведения счета-фактуры
	УсловиеЗапроса = УсловиеЗапроса
				   + ?(СчетФактураПроведен = Неопределено, "", ?(НЕ ЗначениеЗаполнено(УсловиеЗапроса), "", " И ") + "
					|	ВЫБОР
					|		КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
					|			ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
					|			ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
					|			ТОГДА НДСПредъявленныйОбороты.СчетФактураПроведен
					|		КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
					|			ТОГДА СчетФактураПолученный.СчетФактураПроведен
					|		ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.СчетФактураПроведен, СчетФактураВыданный.СчетФактураПроведен)
					|	КОНЕЦ = " + ?(СчетФактураПроведен, "ИСТИНА", "ЛОЖЬ") + " ");
				   
	// Дополняем условие запроса отбором по дате СФ	
	УсловиеЗапроса = УсловиеЗапроса
				   + ?(НЕ ЗначениеЗаполнено(ДатаСФНеБолее), "", ?(НЕ ЗначениеЗаполнено(УсловиеЗапроса), "", " И ") + "
					|	ВЫБОР
					|		КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
					|			ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
					|			ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
					|			ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1))
					|		КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
					|			ТОГДА СчетФактураПолученный.СчетФактураДата
					|		ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.СчетФактураДата, СчетФактураВыданный.СчетФактураДата)
					|	КОНЕЦ <= &ДатаСФНеБолее ");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК СчетФактура
	|ПОМЕСТИТЬ ИсключаемыеСчетаФактуры
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Организация = &Организация
	|	И ВозвратТоваровОтПокупателя.Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И &ЭтоОтчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДСПредъявленныйОбороты.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСПредъявленныйОбороты.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИСТИНА КАК СчетФактураПроведен
	|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			,
	|			Период,
	|			Организация = &Организация_
	|				И НЕ СчетФактура В
	|						(ВЫБРАТЬ
	|							ИсключаемыеСчетаФактуры.СчетФактура
	|						ИЗ
	|							ИсключаемыеСчетаФактуры)
	|				И ВЫБОР
	|					КОГДА &ЭтоОтчет
	|							И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК НДСПредъявленныйОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						И НДСПредъявленныйОбороты.ДоговорКонтрагента.УчетАгентскогоНДС
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыОплатВКнигеПокупок.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ОплаченныеЗаявленияОВвозе
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК ДатыОплатВКнигеПокупок
	|ГДЕ
	|	ДатыОплатВКнигеПокупок.Организация = &Организация
	|	И ДатыОплатВКнигеПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|	И ДатыОплатВКнигеПокупок.Период <= &ДатаСФНеБолее
	|	И ДатыОплатВКнигеПокупок.ДатаДокументаОплаты <= &ДатаСФНеБолее
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организация = &Организация_", Условие_Основание);
	
	Если ЗначениеЗаполнено(КонПериода) Тогда
		Если НЕ ЭтоОтчет Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДСПредъявленный.Обороты(
				|			,
				|			,
				|			Период", 
				"НДСПредъявленный.Остатки(&КонПериодаГраница");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,", Период", "&КонПериода, Период");
		КонецЕсли;	
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

	ТекстЗапроса = ТекстЗапроса + 	
	"ВЫБРАТЬ
	|	ВременнаяТаблицаОстатки.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ВременнаяТаблицаСчетФактуры
	|ИЗ
	|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОстатки.ИсправленныйСчетФактура
	|ИЗ
	|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура,
	|	СчетФактураПолученный.Ссылка КАК ССылка,
	|	СчетФактураПолученный.ДокументОснование КАК ДокументОснование,
	|	СчетФактураПолученный.Ссылка.Проведен КАК СчетФактураПроведен,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчет
	|			ТОГДА СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Ссылка.Дата
	|	КОНЕЦ КАК СчетФактураДата,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчет
	|			ТОГДА СчетФактураПолученный.Ссылка.НомерВходящегоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Ссылка.Номер
	|	КОНЕЦ КАК СчетФактураНомер
	|ПОМЕСТИТЬ ВременнаяТаблицаСчетФактураПолученный
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблицаСчетФактуры.СчетФактура
	|			ИЗ
	|				ВременнаяТаблицаСчетФактуры)
	|	И СчетФактураПолученный.Ссылка.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураПолученный.ДокументОснование,
	|	СчетФактураПолученный.Ссылка,
	|	СчетФактураПолученный.ДокументОснование,
	|	СчетФактураПолученный.Ссылка.Проведен,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчет
	|			ТОГДА СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Ссылка.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчет
	|			ТОГДА СчетФактураПолученный.Ссылка.НомерВходящегоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Ссылка.Номер
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ДокументОснование В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблицаСчетФактуры.СчетФактура
	|			ИЗ
	|				ВременнаяТаблицаСчетФактуры)
	|	И СчетФактураПолученный.Ссылка.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Проведен,
	|	ВозвратТоваровОтПокупателя.Дата,
	|	ВозвратТоваровОтПокупателя.Номер
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Организация = &Организация
	|	И ВозвратТоваровОтПокупателя.Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.Ссылка В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблицаСчетФактуры.СчетФактура
	|			ИЗ
	|				ВременнаяТаблицаСчетФактуры)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОВвозеТоваров.Ссылка,
	|	ЗаявлениеОВвозеТоваров.Ссылка,
	|	ЗаявлениеОВвозеТоваров.Ссылка,
	|	ЗаявлениеОВвозеТоваров.Проведен,
	|	ЗаявлениеОВвозеТоваров.Дата,
	|	ЗаявлениеОВвозеТоваров.Номер
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|ГДЕ
	|	ЗаявлениеОВвозеТоваров.Организация = &Организация
	|	И ЗаявлениеОВвозеТоваров.Ссылка В
	|			(ВЫБРАТЬ
	|				ОплаченныеЗаявленияОВвозе.СчетФактура
	|			ИЗ
	|				ОплаченныеЗаявленияОВвозе)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК СчетФактура,
	|	СчетФактураВыданный.Ссылка КАК Ссылка,
	|	СчетФактураВыданный.ДокументОснование КАК ДокументОснование,
	|	СчетФактураВыданный.Ссылка.ДокументОснование КАК СчетФактураДокументОснование,
	|	СчетФактураВыданный.Ссылка.Проведен КАК СчетФактураПроведен,
	|	СчетФактураВыданный.Ссылка.Дата КАК СчетФактураДата
	|ПОМЕСТИТЬ ВременнаяТаблицаСчетФактураВыданный
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Ссылка В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблицаСчетФактуры.СчетФактура
	|			ИЗ
	|				ВременнаяТаблицаСчетФактуры)
	|	И СчетФактураВыданный.Ссылка.Организация = &Организация
	|	И СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|	И (СчетФактураВыданный.Ссылка.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ СчетФактураВыданный.Ссылка.Продавец = СчетФактураВыданный.Ссылка.Контрагент)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.ДокументОснование,
	|	СчетФактураВыданный.Ссылка,
	|	СчетФактураВыданный.ДокументОснование,
	|	СчетФактураВыданный.Ссылка.ДокументОснование,
	|	СчетФактураВыданный.Ссылка.Проведен,
	|	СчетФактураВыданный.Ссылка.Дата
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблицаСчетФактуры.СчетФактура
	|			ИЗ
	|				ВременнаяТаблицаСчетФактуры)
	|	И СчетФактураВыданный.Ссылка.Организация = &Организация
	|	И СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|	И (СчетФактураВыданный.Ссылка.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ СчетФактураВыданный.Ссылка.Продавец = СчетФактураВыданный.Ссылка.Контрагент)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ТекстЗапроса = ТекстЗапроса + 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(НДСПредъявленныйОбороты.СчетФактура, НЕОПРЕДЕЛЕНО) КАК Документ,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				ТОГДА СчетФактураПолученный.ДокументОснование
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				ТОГДА СчетФактураВыданный.СчетФактураДокументОснование
	|			ИНАЧЕ НДСПредъявленныйОбороты.СчетФактура
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК ДокументОснование,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА НДСПредъявленныйОбороты.СчетФактура
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА СчетФактураПолученный.ССылка
	|			ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.ССылка, СчетФактураВыданный.ССылка)
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК СчетФактура,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА НДСПредъявленныйОбороты.СчетФактураПроведен
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА СчетФактураПолученный.СчетФактураПроведен
	|			ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.СчетФактураПроведен, СчетФактураВыданный.СчетФактураПроведен)
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК СчетФактураПроведен,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1))
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА СчетФактураПолученный.СчетФактураДата
	|			ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.СчетФактураДата, СчетФактураВыданный.СчетФактураДата)
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК СчетФактураДата,
	|	ЕСТЬNULL(СчетФактураПолученный.СчетФактураНомер, """") КАК СчетФактураНомер,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ЛОЖЬ
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СчетФактураПолученный.ССылка ЕСТЬ NULL 
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОНЕЦ, ЛОЖЬ) КАК ЭтоСчетФактураПолученный
	|ИЗ
	|	ВременнаяТаблицаОстатки КАК НДСПредъявленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО НДСПредъявленныйОбороты.СчетФактура = ДанныеПервичныхДокументов.Документ
	|			И (ДанныеПервичныхДокументов.Организация = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетФактураПолученный КАК СчетФактураПолученный
	|		ПО НДСПредъявленныйОбороты.СчетФактура = СчетФактураПолученный.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетФактураВыданный КАК СчетФактураВыданный
	|		ПО НДСПредъявленныйОбороты.СчетФактура = СчетФактураВыданный.СчетФактура
	|ГДЕ
	|	НДСПредъявленныйОбороты.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО
	|	И &УсловиеЗапроса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(НДСПредъявленныйОбороты.СчетФактура, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(НДСПредъявленныйОбороты.ИсправленныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА НДСПредъявленныйОбороты.СчетФактура
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА СчетФактураПолученный.ССылка
	|			ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.ССылка, СчетФактураВыданный.ССылка)
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА НДСПредъявленныйОбороты.СчетФактураПроведен
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА СчетФактураПолученный.СчетФактураПроведен
	|			ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.СчетФактураПроведен, СчетФактураВыданный.СчетФактураПроведен)
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1))
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА СчетФактураПолученный.СчетФактураДата
	|			ИНАЧЕ ЕСТЬNULL(СчетФактураПолученный.СчетФактураДата, СчетФактураВыданный.СчетФактураДата)
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(СчетФактураПолученный.СчетФактураНомер, """"),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ГТДИмпорт
	|					ИЛИ НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ЛОЖЬ
	|			КОГДА НДСПредъявленныйОбороты.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СчетФактураПолученный.ССылка ЕСТЬ NULL 
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОНЕЦ, ЛОЖЬ)
	|ИЗ
	|	ВременнаяТаблицаОстатки КАК НДСПредъявленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО НДСПредъявленныйОбороты.СчетФактура = ДанныеПервичныхДокументов.Документ
	|			И (ДанныеПервичныхДокументов.Организация = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетФактураПолученный КАК СчетФактураПолученный
	|		ПО НДСПредъявленныйОбороты.ИсправленныйСчетФактура = СчетФактураПолученный.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСчетФактураВыданный КАК СчетФактураВыданный
	|		ПО НДСПредъявленныйОбороты.СчетФактура = СчетФактураВыданный.СчетФактура
	|ГДЕ
	|	НДСПредъявленныйОбороты.ИсправленныйСчетФактура <> НЕОПРЕДЕЛЕНО
	|	И &УсловиеЗапроса";
	
	УсловиеЗапроса = ?(НЕ ЗначениеЗаполнено(УсловиеЗапроса), "ИСТИНА", УсловиеЗапроса);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеЗапроса", УсловиеЗапроса); 
									
	Запрос.Текст = ТекстЗапроса 
		+ "
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Документ";
		
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДокументов;
	
КонецФункции 

Функция ОпределитьНаличиеСчетовФактурПолученныхЭкспорт(КонецПериода, Организация, СписокСчетовФактур) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ГраницаПериода", КонецПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура,
	|	СчетФактураПолученный.Ссылка.Проведен КАК СчетФактураПроведен,
	|	СчетФактураПолученный.Ссылка.Дата КАК СчетФактураДата
	|ПОМЕСТИТЬ СчетаФактурыПолученные
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&СписокСчетовФактур)
	|	И СчетФактураПолученный.Ссылка.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураПолученный.ДокументОснование,
	|	СчетФактураПолученный.Ссылка.Проведен,
	|	СчетФактураПолученный.Ссылка.Дата
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ДокументОснование В(&СписокСчетовФактур)
	|	И СчетФактураПолученный.Ссылка.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Проведен,
	|	ВозвратТоваровОтПокупателя.Дата
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Организация = &Организация
	|	И ВозвратТоваровОтПокупателя.Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.Ссылка В(&СписокСчетовФактур)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.Проведен,
	|	ГТДИмпорт.Дата
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Организация = &Организация
	|	И ГТДИмпорт.Ссылка В(&СписокСчетовФактур)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаСчетФактураПолученный.СчетФактура КАК Документ
	|ИЗ
	|	СчетаФактурыПолученные КАК ВременнаяТаблицаСчетФактураПолученный
	|ГДЕ
	|	ВременнаяТаблицаСчетФактураПолученный.СчетФактураПроведен
	|	И ВременнаяТаблицаСчетФактураПолученный.СчетФактураДата <= &КонецПериода";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции
 
// Выполняет общие для всех документов действия связанные с пометкой на удаление
// счета-фактуры при удалении документа, являющегося основание данного счета-фактуры.
//
// Параметры:
//  ДокументОбъект  - объект документа,
//  ВидСчетаФактуры - строка, вид счета-фактуры, по умолчанию "СчетФактураВыданный"
//
Процедура СинхронизацияПометкиНаУдалениеУСчетаФактуры(ДокументОбъект, ВидСчетаФактуры = "СчетФактураВыданный", Отказ = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ПометкаУдаленияСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "ПометкаУдаления");

	Если ДокументОбъект.ПометкаУдаления <> ПометкаУдаленияСсылки Тогда

		// Произошло изменение пометки на удаление
		// Попытаемся найти счет-фактуру
		Если ВидСчетаФактуры = "СчетФактураВыданный" Тогда
			СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументОбъект.Ссылка, , НЕ ДокументОбъект.ПометкаУдаления);
		Иначе
			СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокументОбъект.Ссылка, , НЕ ДокументОбъект.ПометкаУдаления);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(СчетФактура) 
			И СчетФактура <> ДокументОбъект.Ссылка Тогда
			Попытка
				// Есть счет-фактура, нужно установить для него пометку удаления
				СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
				Если ДокументОбъект.ПометкаУдаления Тогда
					// Если в счете-фактуре несколько оснований, счет-фактура не помечается на удаление,
					// а очищается ссылка на текущее основание
					СтрокиТекОснования = СчетФактураОбъект.ДокументыОснования.НайтиСтроки(
						Новый Структура("ДокументОснование", ДокументОбъект.Ссылка));
					Если СчетФактураОбъект.ДокументыОснования.Количество() > СтрокиТекОснования.Количество() Тогда
						Для каждого СтрокаКУдалению Из СтрокиТекОснования Цикл
							СчетФактураОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
						КонецЦикла;
						СчетФактураОбъект.Записать(?(СчетФактураОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
						Возврат;
					КонецЕсли;
				КонецЕсли;

				СчетФактураОбъект.УстановитьПометкуУдаления(ДокументОбъект.ПометкаУдаления);
			Исключение
				ОписаниеОшибки = ИнформацияОбОшибке();
				ЗаписьЖурналаРегистрации(НСТр("ru = 'Операция не выполнена'"), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
				Отказ = Истина;
			КонецПопытки;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры 

// Выполняет общие для всех документов действия связанные с пометкой на удаление
// счета-фактуры при удалении документа, являющегося основание данного счета-фактуры.
//
// Параметры:
//  ДокументОбъект  - объект документа,
//  ВидСчетаФактуры - строка, вид счета-фактуры, по умолчанию "СчетФактураВыданный"
//
Процедура УстановкаПометкиНаУдалениеУСчетаФактуры(ДокументОбъект, ВидСчетаФактуры = "СчетФактураВыданный", ПометкаНаУдаление = Истина) Экспорт

	// Произошло изменение пометки на удаление.
	// Попытаемся найти счет-фактуру.

	СтруктураОтбора = Новый Структура("ПометкаУдаления",не ПометкаНаУдаление);
	Если ВидСчетаФактуры = "СчетФактураВыданный" Тогда
		СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументОбъект.Ссылка, , НЕ ПометкаНаУдаление);
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокументОбъект.Ссылка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) И Не СчетФактура = ДокументОбъект.Ссылка Тогда
		
		ПометкаУдаленияСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетФактура, "ПометкаУдаления");
		
		Если ПометкаНаУдаление <> ПометкаУдаленияСчетаФактуры Тогда
			// Есть счет-фактура, нужно установить для него пометку удаления
			СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
			// Если в счете-фактуре несколько оснований, счет-фактура не помечается на удаление,
			// а очищается ссылка на текущее основание
			СтрокиТекОснования = СчетФактураОбъект.ДокументыОснования.НайтиСтроки(
				Новый Структура("ДокументОснование", ДокументОбъект.Ссылка));
				
			Если ПометкаНаУдаление И СчетФактураОбъект.ДокументыОснования.Количество() > СтрокиТекОснования.Количество() Тогда
				Для каждого СтрокаКУдалению Из СтрокиТекОснования Цикл
					СчетФактураОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				КонецЦикла;
				СчетФактураОбъект.Записать(?(СчетФактураОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				
			Иначе
				СчетФактураОбъект.УстановитьПометкуУдаления(ПометкаНаУдаление);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Выполняет общие для всех документов действия связанные с пометкой на удаление
// счета-фактуры при удалении документа, являющегося основание данного счета-фактуры.
//
// Параметры:
//  ДокументОбъект  - объект документа,
//  ВидСчетаФактуры - строка, вид счета-фактуры, по умолчанию "СчетФактураВыставленный"
//
Процедура УстановкаПроведенияУСчетаФактуры(ДокументСсылка, ВидСчетаФактуры = "СчетФактураВыданный", Проведение = Ложь, Отказ = Ложь, ГрупповоеПерепроведение = Ложь, СтруктураОтбора = Неопределено) Экспорт

	Если ВидСчетаФактуры = "СчетФактураВыданный" Тогда
		СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументСсылка);
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокументСсылка, ДокументСсылка,,СтруктураОтбора);
	КонецЕсли;

	// Если нашли, то необходимо синхронизировать признак проведения у документа основания и счета-фактуры.
	Если ЗначениеЗаполнено(СчетФактура)
		И СчетФактура <> ДокументСсылка
		И (ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный")
		Или ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный")) Тогда

		Если Проведение Тогда
			Если НЕ СчетФактура.ПометкаУдаления Тогда
				Попытка
					
					СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
					СчетФактураОбъект.ДополнительныеСвойства.Вставить("ГрупповоеПерепроведение", ГрупповоеПерепроведение);
					
					Если ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
						 // Заполним данные о платежно-расчетном документе
						 Если СчетФактураОбъект.ПлатежноРасчетныеДокументы.Количество() = 0 Тогда  
							 СчетФактураОбъект.ПлатежноРасчетныеДокументы.Очистить();
							 ДатыНомераПРД = Документы.СчетФактураВыданный.ДатыНомераПлатежноРасчетныхДокументов(
							 СчетФактураОбъект.ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"));
							 Для каждого СтрокаТаблицы Из ДатыНомераПРД Цикл
								 НоваяСтрока = СчетФактураОбъект.ПлатежноРасчетныеДокументы.Добавить();
								 ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
							 КонецЦикла;
						 КонецЕсли;
					КонецЕсли;
					
					СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение);

				Исключение
					ТекстСообщения = НСтр("ru='Не удалось провести документ <%1>'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СчетФактураОбъект);

					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

					ОписаниеОшибки = ИнформацияОбОшибке();
					ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);

					Отказ = Истина;
				КонецПопытки;
			КонецЕсли;
		ИначеЕсли НЕ Проведение И СчетФактура.Проведен Тогда
			// Есть счет-фактура проведен, нужно отменить проведение
			Если НЕ СчетФактура.ПометкаУдаления Тогда
				Попытка
					
					СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
					СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);

				Исключение

					ТекстСообщения = НСтр("ru='Не удалось отменить проведение документа <%1>'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СчетФактураОбъект);

					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

					ОписаниеОшибки = ИнформацияОбОшибке();
					ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);

					Отказ = Истина;

				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // УстановкаПроведенияУСчетаФактуры()

// Процедура помечает на удаление подчиненный счет-фактуру. 
//
Процедура ПометитьНаУдалениеСчетФактуру(СчетФактура) Экспорт

	Если ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный")
		 ИЛИ ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		
		СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
		СчетФактураОбъект.ДокументОснование = Неопределено;
		СчетФактураОбъект.ПометкаУдаления = Истина;
		СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет ставку НДС документа
//
// Параметры: 
//  ДокументОбъект    - объект документа, для которого надо определить ставку НДС
//
Функция ОпределитьСтавкуБезНДС(ДокументОбъект) Экспорт

	СтавкаБезНДС = Истина;
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
		
	Для каждого ТЧОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл
		Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ТЧОбъекта.Имя) Тогда
			Для Каждого СтрокаДокумента ИЗ ДокументОбъект[ТЧОбъекта.Имя] Цикл
				Если СтрокаДокумента.СтавкаНДС <> Перечисления.СтавкиНДС.БезНДС Тогда
					СтавкаБезНДС = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СтавкаНДС", МетаданныеДокумента) Тогда
		Если ДокументОбъект.СтавкаНДС <> Перечисления.СтавкиНДС.БезНДС Тогда
			СтавкаБезНДС = Ложь;
		КонецЕсли;
	КонецЕсли;   	

	Возврат СтавкаБезНДС;
	
КонецФункции

// Функция возвращает курс ставку НДС
//
// Параметры:
//  Валюта - СправочникСсылка.Валюты, валюта, по которой необходимо получить курс
//  ДатаКурса - Дата, календарная дата, на которую необходимо получить курс валюты
//
// Возвращаемое значение:
//	Курс переданной валюты на переданную дату, 1 в случае отсутствия значения.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС, ПрименяютсяСтавки4и2 = Ложь) Экспорт

	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		Возврат 20;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		Ставка = ?(ПрименяютсяСтавки4и2, 2, 10);
		Возврат Ставка;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		Ставка = ?(ПрименяютсяСтавки4и2, 4, 18);
		Возврат Ставка;
	КонецЕсли;

	Возврат 0;

КонецФункции

// ЗАПОЛНЕНИЕ СЧЕТОВ-ФАКТУР

// Возвращает структуру с датой и номером переданного платежно-расчетного документа для подстановки в счет-фактуру
//
Функция ДатаНомерПлатежноРасчетногоДокумента(ДокументОснование) Экспорт

	ДатаНомер = Новый Структура("ДатаПлатежноРасчетногоДокумента, НомерПлатежноРасчетногоДокумента", '00010101', "");

	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат ДатаНомер;
	КонецЕсли;

	РеквизитыМетаданных = ДокументОснование.Метаданные().Реквизиты;
	ЕстьРеквизитыВходящегоДокумента = РеквизитыМетаданных.Найти("НомерВходящегоДокумента") <> Неопределено
		И РеквизитыМетаданных.Найти("ДатаВходящегоДокумента") <> Неопределено;

	Если ЕстьРеквизитыВходящегоДокумента Тогда
		ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование,
			"ДатаВходящегоДокумента,НомерВходящегоДокумента");
		ДатаНомер.ДатаПлатежноРасчетногоДокумента  = ДанныеДокумента.ДатаВходящегоДокумента;
		ДатаНомер.НомерПлатежноРасчетногоДокумента = ДанныеДокумента.НомерВходящегоДокумента;
	Иначе
		ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование,
			"Дата,Номер");
		ДатаНомер.ДатаПлатежноРасчетногоДокумента  = ДанныеДокумента.Дата;
		ДатаНомер.НомерПлатежноРасчетногоДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(
			ДанныеДокумента.Номер, Истина, Ложь);
	КонецЕсли;

	Возврат ДатаНомер;

КонецФункции

Функция ПолучитьПараметрыСчетаФактуры(СчетФактура) Экспорт

	Результат = Новый Структура("Организация, Контрагент, КППКонтрагента, Договор, Продавец,
		|СуммаДокумента, СуммаДокументаКомиссия, ВалютаДокумента, СуммаНДСДокумента, СуммаНДСДокументаКомиссия, СчетФактураБезНДС, НомерСчетаФактурыПродавца,
		|СуммаУвеличение, СуммаУвеличениеКомиссия, СуммаУменьшение, СуммаУменьшениеКомиссия, СуммаНДСУвеличение, 
		|СуммаНДСУвеличениеКомиссия, СуммаНДСУменьшение, СуммаНДСУменьшениеКомиссия, РеквизитыОснований");
	
	Результат.СуммаДокумента 		= 0;
	Результат.СуммаНДСДокумента		= 0;
	Результат.СуммаУвеличение 		= 0;
	Результат.СуммаНДСУвеличение 	= 0;
	Результат.СуммаУменьшение 		= 0;
	Результат.СуммаНДСУменьшение 	= 0;
	
	Результат.СуммаДокументаКомиссия 		= 0;
	Результат.СуммаНДСДокументаКомиссия 	= 0;
	Результат.СуммаУвеличениеКомиссия 		= 0;
	Результат.СуммаНДСУвеличениеКомиссия	= 0;
	Результат.СуммаУменьшениеКомиссия 		= 0;
	Результат.СуммаНДСУменьшениеКомиссия 	= 0;
	Результат.СчетФактураБезНДС = 0;
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	
	РеквизитыОснований = Новый ТаблицаЗначений;
	РеквизитыОснований.Колонки.Добавить("ДокументОснование");
	РеквизитыОснований.Колонки.Добавить("НомерИсходногоДокумента", 			  ОбщегоНазначения.ОписаниеТипаСтрока(50));
	РеквизитыОснований.Колонки.Добавить("ДатаИсходногоДокумента", 			  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РеквизитыОснований.Колонки.Добавить("НомерИсправленияИсходногоДокумента", ОбщегоНазначения.ОписаниеТипаЧисло(10, , ДопустимыйЗнак.Неотрицательный));
	РеквизитыОснований.Колонки.Добавить("ДатаИсправленияИсходногоДокумента",  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РеквизитыОснований.Колонки.Добавить("СуммаУвеличение", 					  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("СуммаУменьшение", 					  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("СуммаНДСУвеличение", 				  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("СуммаНДСУменьшение", 				  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("УчитыватьИсправлениеИсходногоДокумента", Новый ОписаниеТипов("Булево"));
	
	Результат.РеквизитыОснований = РеквизитыОснований;
	
	Если ТипЗнч(СчетФактура)= Тип("ДокументСсылка.СчетФактураПолученный")
		ИЛИ ТипЗнч(СчетФактура)= Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		Ссылка = СчетФактура;
	Иначе
		Ссылка = СчетФактура.Ссылка;
	КонецЕсли;
	
	ЭтоПолученныйСФ = Ложь;
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") тогда
		ЭтоПолученныйСФ = Истина;
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный") 
		И (СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
		ИЛИ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу) Тогда
		// Реквизиты заново не определяются, получаются из счета-фактуры
		Результат.Вставить("Организация"	, СчетФактура.Организация);
		Результат.Вставить("Контрагент"		, СчетФактура.Контрагент);
		Результат.Вставить("Договор"		, СчетФактура.ДоговорКонтрагента);
		Результат.Вставить("ВалютаДокумента", СчетФактура.ВалютаДокумента);
		Результат.Вставить("СуммаДокумента"	, СчетФактура.СуммаДокумента);
		Возврат Результат;
	КонецЕслИ;
	
	ДокументыОснования = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(СчетФактура.ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"), Истина);
	
	ТипыОснований = Новый Соответствие();
	Для каждого Основание Из ДокументыОснования Цикл
		Если не ЗначениеЗаполнено(Основание) Тогда
			Продолжить;
		КонецЕсли;

		МассивДокументов = ТипыОснований[ТипЗнч(Основание)];
		
		Если МассивДокументов = Неопределено Тогда
			МассивДокументов = новый Массив();
			ТипыОснований.Вставить(ТипЗнч(Основание),МассивДокументов);
		КонецЕсли; 
		
		МассивДокументов.Добавить(Основание);
	КонецЦикла; 
	
	Если ТипыОснований.Количество() = 0 Тогда
		// ТЧ оснований не заполнена, параметры определить нельзя
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Для каждого ТипОснования Из ТипыОснований Цикл
		ТипДокументаОснования	= ТипОснования.Ключ;
		ДокументыОснования		= ТипОснования.Значение;
		ТекстЗапроса = "";

		Если ТипДокументаОснования = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры
			Запрос.УстановитьПараметр("ДокументОснованиеАО", ДокументыОснования);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	АвансовыйОтчетПрочее.Ссылка.Организация КАК Организация,
			|	АвансовыйОтчетПрочее.Поставщик КАК Контрагент,
			|	НЕОПРЕДЕЛЕНО КАК Договор,
			|	СУММА(АвансовыйОтчетПрочее.Сумма + ВЫБОР
			|			КОГДА АвансовыйОтчетПрочее.Ссылка.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ АвансовыйОтчетПрочее.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	АвансовыйОтчетПрочее.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
			|	СУММА(АвансовыйОтчетПрочее.СуммаНДС) КАК СуммаНДСДокумента,
			|	СУММА(0) КАК СуммаДокументаКомиссия,
			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
			|	ВЫБОР
			|		КОГДА АвансовыйОтчетПрочее.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЕстьНДС
			|ИЗ
			|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
			|ГДЕ
			|	АвансовыйОтчетПрочее.Ссылка В(&ДокументОснованиеАО)
			|	И АвансовыйОтчетПрочее.ПредъявленСФ
			|	И АвансовыйОтчетПрочее.СчетФактура = &ТекущийДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	АвансовыйОтчетПрочее.Поставщик,
			|	АвансовыйОтчетПрочее.Ссылка.ВалютаДокумента,
			|	АвансовыйОтчетПрочее.Ссылка.Организация,
			|	ВЫБОР
			|		КОГДА АвансовыйОтчетПрочее.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	АвансовыйОтчетТовары.Ссылка.Организация,
			|	АвансовыйОтчетТовары.Поставщик,
			|	НЕОПРЕДЕЛЕНО,
			|	СУММА(АвансовыйОтчетТовары.Сумма + ВЫБОР
			|			КОГДА АвансовыйОтчетТовары.Ссылка.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ АвансовыйОтчетТовары.СуммаНДС
			|		КОНЕЦ),
			|	АвансовыйОтчетТовары.Ссылка.ВалютаДокумента,
			|	СУММА(АвансовыйОтчетТовары.СуммаНДС),
			|	0,
			|	0,
			|	ВЫБОР
			|		КОГДА АвансовыйОтчетТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ
			|ИЗ
			|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
			|ГДЕ
			|	АвансовыйОтчетТовары.Ссылка В(&ДокументОснованиеАО)
			|	И АвансовыйОтчетТовары.СчетФактура = &ТекущийДокумент
			|	И АвансовыйОтчетТовары.ПредъявленСФ
			|
			|СГРУППИРОВАТЬ ПО
			|	АвансовыйОтчетТовары.Поставщик,
			|	АвансовыйОтчетТовары.Ссылка.ВалютаДокумента,
			|	АвансовыйОтчетТовары.Ссылка.Организация,
			|	ВЫБОР
			|		КОГДА АвансовыйОтчетТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ";
			
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
			// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры
			Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ОказаниеУслуг.Ссылка.Организация КАК Организация,
			|	ОказаниеУслуг.Контрагент КАК Контрагент,
			|	ОказаниеУслуг.ДоговорКонтрагента КАК Договор,
			|	СУММА(ОказаниеУслуг.Сумма + ВЫБОР
			|			КОГДА ОказаниеУслуг.Ссылка.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ ОказаниеУслуг.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
			|	СУММА(ОказаниеУслуг.СуммаНДС) КАК СуммаНДСДокумента,
			|	СУММА(0) КАК СуммаДокументаКомиссия,
			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
			|	ВЫБОР
			|		КОГДА ОказаниеУслуг.Ссылка.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЕстьНДС
			|ИЗ
			|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслуг
			|ГДЕ
			|	ОказаниеУслуг.Ссылка В(&ДокументыОснования)
			|	И ОказаниеУслуг.ВыданСФ
			|	И ОказаниеУслуг.СчетФактура = &ТекущийДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОказаниеУслуг.Контрагент,
			|	ОказаниеУслуг.ДоговорКонтрагента,
			|	ОказаниеУслуг.Ссылка.Организация,
			|	ОказаниеУслуг.СуммаНДС,
			|	ВЫБОР
			|		КОГДА ОказаниеУслуг.Ссылка.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ";
			
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПодтверждениеНулевойСтавкиНДС") Тогда
			
			Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ПодтверждениеНулевойСтавки.Ссылка.Организация КАК Организация,
			|	ПодтверждениеНулевойСтавки.Покупатель КАК Контрагент,
			|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
			|	СУММА(ПодтверждениеНулевойСтавки.ПродажиСНДС0 + ПодтверждениеНулевойСтавки.СуммаНДС) КАК СуммаДокумента,
			|	СУММА(ПодтверждениеНулевойСтавки.СуммаНДС) КАК СуммаНДСДокумента,
			|	СУММА(0) КАК СуммаДокументаКомиссия,
			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
			|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
			|	ИСТИНА КАК ЕстьНДС
			|ИЗ
			|	Документ.ПодтверждениеНулевойСтавкиНДС.Состав КАК ПодтверждениеНулевойСтавки
			|ГДЕ
			|	ПодтверждениеНулевойСтавки.Ссылка В(&ДокументыОснования)
			|	И ПодтверждениеНулевойСтавки.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0)
			|	И ПодтверждениеНулевойСтавки.СчетФактураВыданный = &ТекущийДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ПодтверждениеНулевойСтавки.Ссылка.Организация,
			|	ПодтверждениеНулевойСтавки.Покупатель";
		
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
			И ТипЗнч(Ссылка) <> Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры
			Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтчетКомиссионераОПродажах.Ссылка КАК Ссылка,
			|	ОтчетКомиссионераОПродажах.Ссылка.Организация КАК Организация,
			|	ОтчетКомиссионераОПродажах.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
			|	ОтчетКомиссионераОПродажах.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
			|ПОМЕСТИТЬ ВТ_ОтчетКомиссионераОПродажах
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажах
			|ГДЕ
			|	ОтчетКомиссионераОПродажах.Ссылка В(&ДокументыОснования)
			|	И ОтчетКомиссионераОПродажах.ВыставленСФ
			|	И ОтчетКомиссионераОПродажах.СчетФактура = &ТекущийДокумент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.КлючСтроки КАК КлючСтроки,
			|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
			|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
			|	СУММА(ВложенныйЗапрос.ЕстьНДС) КАК ЕстьНДС,
			|	СУММА(ВложенныйЗапрос.СуммаКомиссия) КАК СуммаКомиссия,
			|	СУММА(ВложенныйЗапрос.СуммаНДСКомиссия) КАК СуммаНДСКомиссия
			|ПОМЕСТИТЬ ВТ_Суммы
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОтчетКомиссионераОПродажахТовары.КлючСтроки КАК КлючСтроки,
			|		ОтчетКомиссионераОПродажахТовары.Сумма КАК Сумма,
			|		ОтчетКомиссионераОПродажахТовары.СуммаНДС КАК СуммаНДС,
			|		ВЫБОР
			|			КОГДА ОтчетКомиссионераОПродажахТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|				ТОГДА 0
			|			ИНАЧЕ 1
			|		КОНЕЦ КАК ЕстьНДС,
			|		ВЫБОР
			|			КОГДА ОтчетКомиссионераОПродажахТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|				ТОГДА ОтчетКомиссионераОПродажахТовары.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК СуммаКомиссия,
			|		ВЫБОР
			|			КОГДА ОтчетКомиссионераОПродажахТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|				ТОГДА ОтчетКомиссионераОПродажахТовары.СуммаНДС
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК СуммаНДСКомиссия
			|	ИЗ
			|		ВТ_ОтчетКомиссионераОПродажах КАК ВТ_ОтчетКомиссионераОПродажах
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
			|			ПО ВТ_ОтчетКомиссионераОПродажах.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОтчетКомиссионераОПродажахУслуги.КлючСтроки,
			|		ОтчетКомиссионераОПродажахУслуги.Сумма,
			|		ОтчетКомиссионераОПродажахУслуги.СуммаНДС,
			|		ВЫБОР
			|			КОГДА ОтчетКомиссионераОПродажахУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|				ТОГДА 0
			|			ИНАЧЕ 1
			|		КОНЕЦ,
			|		0,
			|		0
			|	ИЗ
			|		ВТ_ОтчетКомиссионераОПродажах КАК ВТ_ОтчетКомиссионераОПродажах
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
			|			ПО ВТ_ОтчетКомиссионераОПродажах.Ссылка = ОтчетКомиссионераОПродажахУслуги.Ссылка) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.КлючСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ОтчетКомиссионераОПродажах.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
			|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
			|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
			|	КОНЕЦ КАК Контрагент,
			|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ КАК Дата,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель = ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
			|	КОНЕЦ КАК Договор,
			|	СУММА(ВТ_Суммы.Сумма + ВЫБОР
			|			КОГДА ВТ_ОтчетКомиссионераОПродажах.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ ВТ_Суммы.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	СУММА(ВТ_Суммы.СуммаНДС) КАК СуммаНДСДокумента,
			|	СУММА(ВТ_Суммы.ЕстьНДС) КАК ЕстьНДС,
			|	ВТ_ОтчетКомиссионераОПродажах.ВалютаДокумента КАК ВалютаДокумента,
			|	ВТ_Суммы.СуммаНДСКомиссия КАК СуммаНДСДокументаКомиссия,
			|	ВТ_Суммы.СуммаКомиссия + ВЫБОР
			|		КОГДА ВТ_ОтчетКомиссионераОПродажах.СуммаВключаетНДС
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Суммы.СуммаНДСКомиссия
			|	КОНЕЦ КАК СуммаДокументаКомиссия
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтчетКомиссионераОПродажах КАК ВТ_ОтчетКомиссионераОПродажах
			|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ВТ_ОтчетКомиссионераОПродажах.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
			|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ВТ_Суммы.КлючСтроки
			|ГДЕ
			|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &ТекущийДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ОтчетКомиссионераОПродажах.ВалютаДокумента,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
			|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
			|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
			|	КОНЕЦ,
			|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ,
			|	ВТ_ОтчетКомиссионераОПродажах.Организация,
			|	ВЫБОР
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
			|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель = ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
			|	КОНЕЦ,
			|	ВТ_Суммы.СуммаНДСКомиссия,
			|	ВТ_Суммы.СуммаКомиссия + ВЫБОР
			|		КОГДА ВТ_ОтчетКомиссионераОПродажах.СуммаВключаетНДС
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Суммы.СуммаНДСКомиссия
			|	КОНЕЦ";

				
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
			И НЕ ЭтоПолученныйСФ 
			И ЗначениеЗаполнено(Ссылка.Продавец) Тогда

			// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры, выставленного за продавца
			Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
			|	ОтчетКомитентуОПродажах.Ссылка.Организация КАК Организация,
			|	ОтчетКомитентуОПродажах.Ссылка.Контрагент КАК Контрагент,
			|	ОтчетКомитентуОПродажах.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
			|	ВЫБОР
			|		КОГДА ОтчетКомитентуОПродажах.Ссылка.ВыписыватьСчетаФактурыСводно
			|			ТОГДА ОтчетКомитентуОПродажах.Ссылка.Контрагент
			|		ИНАЧЕ ОтчетКомитентуОПродажах.Поставщик
			|	КОНЕЦ КАК Продавец,
			|	ОтчетКомитентуОПродажах.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
			|	ОтчетКомитентуОПродажах.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
			|	ОтчетКомитентуОПродажах.ДатаСФ КАК ДатаСФ,
			|	ОтчетКомитентуОПродажах.КлючСтроки КАК КлючСтроки,
			|	ОтчетКомитентуОПродажах.НомерСчетаФактуры КАК НомерСчетаФактурыПродавца
			|ПОМЕСТИТЬ ВТ_ОтчетКомитентуОПродажах
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажах
			|ГДЕ
			|	ОтчетКомитентуОПродажах.Ссылка В(&ДокументыОснования)
			|	И ОтчетКомитентуОПродажах.ПолученСФ
			|	И ОтчетКомитентуОПродажах.СчетФактура = &ТекущийДокумент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка,
			|	КлючСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка,
			|	ОтчетКомитентуОПродажахТовары.КлючСтроки КАК КлючСтроки,
			|	СУММА(ОтчетКомитентуОПродажахТовары.Сумма) КАК Сумма,
			|	СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДС) КАК СуммаНДС,
			|	СУММА(ВЫБОР
			|			КОГДА ОтчетКомитентуОПродажахТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|				ТОГДА 0
			|			ИНАЧЕ 1
			|		КОНЕЦ) КАК ЕстьНДС
			|ПОМЕСТИТЬ ВТ_Суммы
			|ИЗ
			|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
			|ГДЕ
			|	ОтчетКомитентуОПродажахТовары.Ссылка В(&ДокументыОснования)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтчетКомитентуОПродажахТовары.Ссылка,
			|	ОтчетКомитентуОПродажахТовары.КлючСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка,
			|	КлючСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ОтчетКомитентуОПродажах.Организация КАК Организация,
			|	ВТ_ОтчетКомитентуОПродажах.Контрагент КАК Контрагент,
			|	ВТ_ОтчетКомитентуОПродажах.ДатаСФ КАК Дата,
			|	ВТ_ОтчетКомитентуОПродажах.ДоговорКонтрагента КАК Договор,
			|	ВТ_ОтчетКомитентуОПродажах.Продавец КАК Продавец,
			|	СУММА(ВТ_Суммы.Сумма + ВЫБОР
			|			КОГДА ВТ_ОтчетКомитентуОПродажах.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ ВТ_Суммы.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	СУММА(ВТ_Суммы.СуммаНДС) КАК СуммаНДСДокумента,
			|	ВТ_ОтчетКомитентуОПродажах.ВалютаДокумента КАК ВалютаДокумента,
			|	СУММА(ВТ_Суммы.ЕстьНДС) КАК ЕстьНДС,
			|	ВТ_ОтчетКомитентуОПродажах.НомерСчетаФактурыПродавца,
			|	ВТ_Суммы.Сумма + ВЫБОР
			|		КОГДА ВТ_ОтчетКомитентуОПродажах.СуммаВключаетНДС
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Суммы.СуммаНДС
			|	КОНЕЦ КАК СуммаДокументаКомиссия,
			|	ВТ_Суммы.СуммаНДС КАК СуммаНДСДокументаКомиссия
			|ИЗ
			|	ВТ_ОтчетКомитентуОПродажах КАК ВТ_ОтчетКомитентуОПродажах
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
			|		ПО ВТ_ОтчетКомитентуОПродажах.Ссылка = ВТ_Суммы.Ссылка
			|			И ВТ_ОтчетКомитентуОПродажах.КлючСтроки = ВТ_Суммы.КлючСтроки
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ОтчетКомитентуОПродажах.Организация,
			|	ВТ_ОтчетКомитентуОПродажах.Контрагент,
			|	ВТ_ОтчетКомитентуОПродажах.ДатаСФ,
			|	ВТ_ОтчетКомитентуОПродажах.ДоговорКонтрагента,
			|	ВТ_ОтчетКомитентуОПродажах.Продавец,
			|	ВТ_ОтчетКомитентуОПродажах.ВалютаДокумента,
			|	ВТ_ОтчетКомитентуОПродажах.НомерСчетаФактурыПродавца,
			|	ВТ_Суммы.СуммаНДС,
			|	ВТ_Суммы.Сумма + ВЫБОР
			|		КОГДА ВТ_ОтчетКомитентуОПродажах.СуммаВключаетНДС
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Суммы.СуммаНДС
			|	КОНЕЦ";
				
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
				
			Запрос.УстановитьПараметр("ДокументОснование_КорректировкаПоступления", ДокументыОснования);
			Запрос.УстановитьПараметр("КорректировочныйСчетФактура", СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный);

			Если СчетФактура.Исправление И НЕ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
				
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
				|	КорректировкаПоступленияТовары.Ссылка.Контрагент КАК Контрагент,
				|	КорректировкаПоступленияТовары.Ссылка.ДоговорКонтрагента КАК Договор,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияТовары.Сумма
				|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
				|	КОНЕЦ КАК СуммаДокумента,
				|	КорректировкаПоступленияТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
				|	КорректировкаПоступленияТовары.СуммаНДС КАК СуммаНДСДокумента,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ КАК ЕстьНДС,
				|	КорректировкаПоступленияТовары.Ссылка КАК Документ,
				|	0 КАК СуммаУвеличение,
				|	0 КАК СуммаУменьшение,
				|	0 КАК СуммаНДСУвеличение,
				|	0 КАК СуммаНДСУменьшение,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
				|			ТОГДА ВЫБОР
				|					КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|						ТОГДА КорректировкаПоступленияТовары.Сумма
				|					ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
				|				КОНЕЦ
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СуммаДокументаКомиссия,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
				|			ТОГДА КорректировкаПоступленияТовары.СуммаНДС
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СуммаНДСДокументаКомиссия,
				|	0 КАК СуммаУвеличениеКомиссия,
				|	0 КАК СуммаУменьшениеКомиссия,
				|	0 КАК СуммаНДСУвеличениеКомиссия,
				|	0 КАК СуммаНДСУменьшениеКомиссия
				|ИЗ
				|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
				|ГДЕ
				|	КорректировкаПоступленияТовары.Ссылка В(&ДокументОснование_КорректировкаПоступления)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	КорректировкаПоступленияУслуги.Ссылка.Организация,
				|	КорректировкаПоступленияУслуги.Ссылка.Контрагент,
				|	КорректировкаПоступленияУслуги.Ссылка.ДоговорКонтрагента,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияУслуги.Сумма
				|		ИНАЧЕ КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС
				|	КОНЕЦ,
				|	КорректировкаПоступленияУслуги.Ссылка.ВалютаДокумента,
				|	КорректировкаПоступленияУслуги.СуммаНДС,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ,
				|	КорректировкаПоступленияУслуги.Ссылка,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0
				|ИЗ
				|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
				|ГДЕ
				|	КорректировкаПоступленияУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Организация,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Контрагент,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
				|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
				|	КОНЕЦ,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ВалютаДокумента,
				|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка,
				|	0,
				|	0,
				|	0,
				|	0,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
				|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
				|	КОНЕЦ,
				|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
				|	0,
				|	0,
				|	0,
				|	0
				|ИЗ
				|	Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
				|ГДЕ
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
				|ИТОГИ
				|	СУММА(СуммаДокумента),
				|	СУММА(СуммаНДСДокумента),
				|	СУММА(ЕстьНДС),
				|	СУММА(СуммаУвеличение),
				|	СУММА(СуммаУменьшение),
				|	СУММА(СуммаНДСУвеличение),
				|	СУММА(СуммаНДСУменьшение),
				|	СУММА(СуммаДокументаКомиссия),
				|	СУММА(СуммаНДСДокументаКомиссия),
				|	СУММА(СуммаУвеличениеКомиссия),
				|	СУММА(СуммаУменьшениеКомиссия),
				|	СУММА(СуммаНДСУвеличениеКомиссия),
				|	СУММА(СуммаНДСУменьшениеКомиссия)
				|ПО
				|	ОБЩИЕ,
				|	Документ";
				
			Иначе
				
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
				|	КорректировкаПоступленияТовары.Ссылка.Контрагент КАК Контрагент,
				|	КорректировкаПоступленияТовары.Ссылка.ДоговорКонтрагента КАК Договор,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения > 0
				|								ТОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) > 0
				|							ТОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаУвеличение,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения < 0
				|								ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) < 0
				|							ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаУменьшение,
				|	КорректировкаПоступленияТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения > 0
				|					ТОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаНДСУвеличение,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения < 0
				|					ТОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаНДСУменьшение,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияТовары.Сумма
				|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
				|	КОНЕЦ КАК СуммаДокумента,
				|	КорректировкаПоступленияТовары.СуммаНДС КАК СуммаНДСДокумента,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ КАК ЕстьНДС,
				|	КорректировкаПоступленияТовары.Ссылка КАК Документ,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
				|			ТОГДА КорректировкаПоступленияТовары.СуммаНДС
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СуммаНДСДокументаКомиссия,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
				|			ТОГДА ВЫБОР
				|					КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|						ТОГДА КорректировкаПоступленияТовары.Сумма
				|					ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
				|				КОНЕЦ
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СуммаДокументаКомиссия,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения > 0
				|								ТОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) > 0
				|							ТОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаУвеличениеКомиссия,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения < 0
				|								ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) < 0
				|							ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаУменьшениеКомиссия,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения > 0
				|					ТОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаНДСУвеличениеКомиссия,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
				|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения < 0
				|					ТОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ КАК СуммаНДСУменьшениеКомиссия
				|ИЗ
				|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
				|ГДЕ
				|	КорректировкаПоступленияТовары.Ссылка В(&ДокументОснование_КорректировкаПоступления)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	КорректировкаПоступленияУслуги.Ссылка.Организация,
				|	КорректировкаПоступленияУслуги.Ссылка.Контрагент,
				|	КорректировкаПоступленияУслуги.Ссылка.ДоговорКонтрагента,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаДоИзменения > 0
				|								ТОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаДоИзменения
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС - (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения) > 0
				|							ТОГДА КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС - (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаДоИзменения < 0
				|								ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС - (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения) < 0
				|							ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ,
				|	КорректировкаПоступленияУслуги.Ссылка.ВалютаДокумента,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияУслуги.СуммаНДС - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения > 0
				|					ТОГДА КорректировкаПоступленияУслуги.СуммаНДС - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияУслуги.СуммаНДС - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения < 0
				|					ТОГДА КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.СуммаНДС
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияУслуги.Сумма
				|		ИНАЧЕ КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС
				|	КОНЕЦ,
				|	КорректировкаПоступленияУслуги.СуммаНДС,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ,
				|	КорректировкаПоступленияУслуги.Ссылка,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0,
				|	0
				|ИЗ
				|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
				|ГДЕ
				|	КорректировкаПоступленияУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Организация,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Контрагент,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения > 0
				|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) > 0
				|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения < 0
				|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения - КорректировкаПоступленияАгентскиеУслуги.Сумма
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) < 0
				|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ВалютаДокумента,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения > 0
				|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения < 0
				|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
				|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
				|	КОНЕЦ,
				|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ,
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка,
				|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
				|	ВЫБОР
				|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
				|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения > 0
				|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) > 0
				|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
				|					ТОГДА ВЫБОР
				|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения < 0
				|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения - КорректировкаПоступленияАгентскиеУслуги.Сумма
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) < 0
				|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС)
				|						ИНАЧЕ 0
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения > 0
				|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &КорректировочныйСчетФактура
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения < 0
				|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
				|				ИНАЧЕ 0
				|			КОНЕЦ
				|	КОНЕЦ
				|ИЗ
				|	Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
				|ГДЕ
				|	КорректировкаПоступленияАгентскиеУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
				|ИТОГИ
				|	СУММА(СуммаУвеличение),
				|	СУММА(СуммаУменьшение),
				|	СУММА(СуммаНДСУвеличение),
				|	СУММА(СуммаНДСУменьшение),
				|	СУММА(СуммаДокумента),
				|	СУММА(СуммаНДСДокумента),
				|	СУММА(ЕстьНДС),
				|	СУММА(СуммаНДСДокументаКомиссия),
				|	СУММА(СуммаДокументаКомиссия),
				|	СУММА(СуммаУвеличениеКомиссия),
				|	СУММА(СуммаУменьшениеКомиссия),
				|	СУММА(СуммаНДСУвеличениеКомиссия),
				|	СУММА(СуммаНДСУменьшениеКомиссия)
				|ПО
				|	ОБЩИЕ,
				|	Документ";
			КонецЕсли;
			
			Если СчетФактура.Исправление Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДоИзменения", "ДоКорректировки");
			КонецЕсли;
				
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				
			Запрос.УстановитьПараметр("ДокументОснование_КорректировкаРеализации", ДокументыОснования);
			Запрос.УстановитьПараметр("КорректировочныйСчетФактура", СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	КорректировкаРеализацииТовары.Ссылка.Организация КАК Организация,
			|	КорректировкаРеализацииТовары.Ссылка.Контрагент КАК Контрагент,
			|	КорректировкаРеализацииТовары.Ссылка.ДоговорКонтрагента КАК Договор,
			|	КорректировкаРеализацииТовары.Ссылка.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
			|	КорректировкаРеализацииТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения > 0
			|								ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) > 0
			|							ТОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаУвеличение,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения < 0
			|								ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения - КорректировкаРеализацииТовары.Сумма
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) < 0
			|							ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения - (КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаУменьшение,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения > 0
			|					ТОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаНДСУвеличение,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения < 0
			|					ТОГДА КорректировкаРеализацииТовары.СуммаНДСДоИзменения - КорректировкаРеализацииТовары.СуммаНДС
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаНДСУменьшение,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
			|			ТОГДА КорректировкаРеализацииТовары.Сумма
			|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС
			|	КОНЕЦ КАК СуммаДокумента,
			|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДСДокумента,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЕстьНДС,
			|	КорректировкаРеализацииТовары.Ссылка КАК Документ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения > 0
			|								ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) > 0
			|							ТОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаУвеличениеКомиссия,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения < 0
			|								ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения - КорректировкаРеализацииТовары.Сумма
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) < 0
			|							ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения - (КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаУменьшениеКомиссия,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения > 0
			|					ТОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаНДСУвеличениеКомиссия,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения < 0
			|					ТОГДА КорректировкаРеализацииТовары.СуммаНДСДоИзменения - КорректировкаРеализацииТовары.СуммаНДС
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ КАК СуммаНДСУменьшениеКомиссия,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			|			ТОГДА ВЫБОР
			|					КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
			|						ТОГДА КорректировкаРеализацииТовары.Сумма
			|					ИНАЧЕ КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС
			|				КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДокументаКомиссия,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			|			ТОГДА КорректировкаРеализацииТовары.СуммаНДС
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаНДСДокументаКомиссия
			|ИЗ
			|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
			|ГДЕ
			|	КорректировкаРеализацииТовары.Ссылка В(&ДокументОснование_КорректировкаРеализации)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КорректировкаРеализацииУслуги.Ссылка.Организация,
			|	КорректировкаРеализацииУслуги.Ссылка.Контрагент,
			|	КорректировкаРеализацииУслуги.Ссылка.ДоговорКонтрагента,
			|	КорректировкаРеализацииУслуги.Ссылка.ДоговорКонтрагента.ВидДоговора,
			|	КорректировкаРеализацииУслуги.Ссылка.ВалютаДокумента,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения > 0
			|								ТОГДА КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС - (КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения) > 0
			|							ТОГДА КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС - (КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения < 0
			|								ТОГДА КорректировкаРеализацииУслуги.СуммаДоИзменения - КорректировкаРеализацииУслуги.Сумма
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС - (КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения) < 0
			|							ТОГДА КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения - (КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииУслуги.СуммаНДС - КорректировкаРеализацииУслуги.СуммаНДСДоИзменения > 0
			|					ТОГДА КорректировкаРеализацииУслуги.СуммаНДС - КорректировкаРеализацииУслуги.СуммаНДСДоИзменения
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииУслуги.СуммаНДС - КорректировкаРеализацииУслуги.СуммаНДСДоИзменения < 0
			|					ТОГДА КорректировкаРеализацииУслуги.СуммаНДСДоИзменения - КорректировкаРеализацииУслуги.СуммаНДС
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС
			|			ТОГДА КорректировкаРеализацииУслуги.Сумма
			|		ИНАЧЕ КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС
			|	КОНЕЦ,
			|	КорректировкаРеализацииУслуги.СуммаНДС,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ,
			|	КорректировкаРеализацииУслуги.Ссылка,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
			|ГДЕ
			|	КорректировкаРеализацииУслуги.Ссылка В(&ДокументОснование_КорректировкаРеализации)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.Организация,
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.Контрагент,
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.ДоговорКонтрагента.ВидДоговора,
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.ВалютаДокумента,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения > 0
			|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) > 0
			|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения < 0
			|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения - КорректировкаРеализацииАгентскиеУслуги.Сумма
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) < 0
			|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения > 0
			|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения < 0
			|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма
			|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
			|	КОНЕЦ,
			|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ,
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения > 0
			|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) > 0
			|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			|					ТОГДА ВЫБОР
			|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения < 0
			|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения - КорректировкаРеализацииАгентскиеУслуги.Сумма
			|							ИНАЧЕ 0
			|						КОНЕЦ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) < 0
			|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС)
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения > 0
			|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НЕ &КорректировочныйСчетФактура
			|			ТОГДА 0
			|		ИНАЧЕ ВЫБОР
			|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения < 0
			|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма
			|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
			|	КОНЕЦ,
			|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
			|ИЗ
			|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
			|ГДЕ
			|	КорректировкаРеализацииАгентскиеУслуги.Ссылка В(&ДокументОснование_КорректировкаРеализации)
			|ИТОГИ
			|	СУММА(СуммаУвеличение),
			|	СУММА(СуммаУменьшение),
			|	СУММА(СуммаНДСУвеличение),
			|	СУММА(СуммаНДСУменьшение),
			|	СУММА(СуммаДокумента),
			|	СУММА(СуммаНДСДокумента),
			|	СУММА(ЕстьНДС),
			|	СУММА(СуммаУвеличениеКомиссия),
			|	СУММА(СуммаУменьшениеКомиссия),
			|	СУММА(СуммаНДСУвеличениеКомиссия),
			|	СУММА(СуммаНДСУменьшениеКомиссия),
			|	СУММА(СуммаДокументаКомиссия),
			|	СУММА(СуммаНДСДокументаКомиссия)
			|ПО
			|	ОБЩИЕ,
			|	Документ";
			
			Если СчетФактура.Исправление Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДоИзменения", "ДоКорректировки");
			КонецЕсли;
	
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.НачислениеНДСпоСМРхозспособом") тогда 
				
			Запрос.УстановитьПараметр("ДокументОснование_НачислениеНДСпоСМРхозспособом", ДокументыОснования);
		
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	НачислениеНДСпоСМРхозспособом.Ссылка.Организация,
				|	НЕОПРЕДЕЛЕНО КАК Контрагент,
				|	НЕОПРЕДЕЛЕНО КАК Договор,
				|	СУММА(НачислениеНДСпоСМРхозспособом.СуммаБезНДС + НачислениеНДСпоСМРхозспособом.НДС) КАК СуммаДокумента,
				|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
				|	СУММА(НачислениеНДСпоСМРхозспособом.НДС) КАК СуммаНДСДокумента,
				|	СУММА(0) КАК СуммаДокументаКомиссия,
				|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
				|	1 КАК ЕстьНДС
				|ИЗ
				|	Документ.НачислениеНДСпоСМРхозспособом.СМРхозспособом КАК НачислениеНДСпоСМРхозспособом
				|ГДЕ
				|	НачислениеНДСпоСМРхозспособом.Ссылка В(&ДокументОснование_НачислениеНДСпоСМРхозспособом)
				|
				|СГРУППИРОВАТЬ ПО
				|	НачислениеНДСпоСМРхозспособом.Ссылка.Организация,
				|	НачислениеНДСпоСМРхозспособом.НДС";
				
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
				
			Запрос.УстановитьПараметр("ДокументОснование_ПринятиеКУчетуОС", ДокументыОснования);
		
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	НДСНачисленныйОбороты.Организация КАК Организация,
				|	НЕОПРЕДЕЛЕНО КАК Контрагент,
				|	НЕОПРЕДЕЛЕНО КАК Договор,
				|	НДСНачисленныйОбороты.СуммаБезНДСПриход + НДСНачисленныйОбороты.НДСПриход КАК СуммаДокумента,
				|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
				|	НДСНачисленныйОбороты.НДСПриход КАК СуммаНДСДокумента,
				|	0 КАК СуммаДокументаКомиссия,
				|	0 КАК СуммаНДСДокументаКомиссия,
				|	ВЫБОР
				|		КОГДА НДСНачисленныйОбороты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|			ТОГДА 0
				|		ИНАЧЕ 1
				|	КОНЕЦ КАК ЕстьНДС
				|ИЗ
				|	РегистрНакопления.НДСНачисленный.Обороты(
				|			,
				|			,
				|			Период,
				|			СчетФактура ССЫЛКА Документ.ПринятиеКУчетуОС
				|				И СчетФактура В (&ДокументОснование_ПринятиеКУчетуОС)) КАК НДСНачисленныйОбороты";

		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
			
			Запрос.УстановитьПараметр("ДокументОснование_РеализацияОтгруженныхТоваров", ДокументыОснования);
		
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	РеализацияОтгруженныхТоваров.Организация,
				|	РеализацияОтгруженныхТоваров.Контрагент,
				|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента КАК Договор,
				|	РеализацияОтгруженныхТоваров.СуммаДокумента КАК СуммаДокумента,
				|	РеализацияОтгруженныхТоваров.ДокументОтгрузки.ВалютаДокумента КАК ВалютаДокумента,
				|	РеализацияОтгруженныхТоваров.ДокументОтгрузки КАК ДокументОтгрузки
				|ПОМЕСТИТЬ ВТ_РеализацияОтгруженныхТоваров
				|ИЗ
				|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
				|ГДЕ
				|	РеализацияОтгруженныхТоваров.Ссылка В(&ДокументОснование_РеализацияОтгруженныхТоваров)
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ДокументОтгрузки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
				|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДСДокумента,
				|	СУММА(ВЫБОР
				|			КОГДА РеализацияТоваровУслугТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|				ТОГДА 0
				|			ИНАЧЕ 1
				|		КОНЕЦ) КАК ЕстьНДС
				|ПОМЕСТИТЬ ВТ_ТаблицыНДС
				|ИЗ
				|	ВТ_РеализацияОтгруженныхТоваров КАК ВТ_РеализацияОтгруженныхТоваров
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
				|		ПО ВТ_РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	РеализацияТоваровУслугТовары.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПередачаОСОС.Ссылка,
				|	СУММА(ПередачаОСОС.СуммаНДС),
				|	СУММА(ВЫБОР
				|			КОГДА ПередачаОСОС.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|				ТОГДА 0
				|			ИНАЧЕ 1
				|		КОНЕЦ)
				|ИЗ
				|	ВТ_РеализацияОтгруженныхТоваров КАК ВТ_РеализацияОтгруженныхТоваров
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОС.ОС КАК ПередачаОСОС
				|		ПО ВТ_РеализацияОтгруженныхТоваров.ДокументОтгрузки = ПередачаОСОС.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ПередачаОСОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_РеализацияОтгруженныхТоваров.Организация КАК Организация,
				|	ВТ_РеализацияОтгруженныхТоваров.Контрагент КАК Контрагент,
				|	ВТ_РеализацияОтгруженныхТоваров.Договор КАК Договор,
				|	ВТ_РеализацияОтгруженныхТоваров.ВалютаДокумента КАК ВалютаДокумента,
				|	СУММА(ВТ_РеализацияОтгруженныхТоваров.СуммаДокумента) КАК СуммаДокумента,
				|	СУММА(ВТ_ТаблицыНДС.СуммаНДСДокумента) КАК СуммаНДСДокумента,
				|	СУММА(0) КАК СуммаДокументаКомиссия,
				|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
				|	СУММА(ВТ_ТаблицыНДС.ЕстьНДС) КАК ЕстьНДС
				|ИЗ
				|	ВТ_РеализацияОтгруженныхТоваров КАК ВТ_РеализацияОтгруженныхТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицыНДС КАК ВТ_ТаблицыНДС
				|		ПО ВТ_РеализацияОтгруженныхТоваров.ДокументОтгрузки = ВТ_ТаблицыНДС.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_РеализацияОтгруженныхТоваров.Организация,
				|	ВТ_РеализацияОтгруженныхТоваров.Контрагент,
				|	ВТ_РеализацияОтгруженныхТоваров.Договор,
				|	ВТ_РеализацияОтгруженныхТоваров.ВалютаДокумента";
				
		ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
			
			Запрос.УстановитьПараметр("ДокументОснование_ПоступлениеДопРасходов", ДокументыОснования);
				
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	Таблица.Ссылка.Организация КАК Организация,
				|	Таблица.Ссылка.Контрагент КАК Контрагент,
				|	Таблица.Ссылка.ДоговорКонтрагента КАК Договор,
				|	СУММА(Таблица.Сумма + ВЫБОР
				|			КОГДА Таблица.Ссылка.СуммаВключаетНДС
				|				ТОГДА 0
				|			ИНАЧЕ Таблица.СуммаНДС
				|		КОНЕЦ) КАК СуммаДокумента,
				|	Таблица.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
				|	СУММА(Таблица.СуммаНДС) КАК СуммаНДСДокумента,
				|	СУММА(0) КАК СуммаДокументаКомиссия,
				|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
				|	СУММА(ВЫБОР
				|			КОГДА Таблица.Ссылка.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|				ТОГДА 0
				|			ИНАЧЕ 1
				|		КОНЕЦ) КАК ЕстьНДС
				|ИЗ
				|	Документ.ПоступлениеДопРасходов.Товары КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка В(&ДокументОснование_ПоступлениеДопРасходов)
				|
				|СГРУППИРОВАТЬ ПО
				|	Таблица.Ссылка,
				|	Таблица.Ссылка.Организация,
				|	Таблица.Ссылка.Контрагент,
				|	Таблица.Ссылка.ДоговорКонтрагента,
				|	Таблица.Ссылка.ВалютаДокумента
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПоступлениеДопРасходов.Организация,
				|	ПоступлениеДопРасходов.Контрагент,
				|	ПоступлениеДопРасходов.ДоговорКонтрагента,
				|	СУММА(ПоступлениеДопРасходов.Сумма + ВЫБОР
				|			КОГДА ПоступлениеДопРасходов.СуммаВключаетНДС
				|				ТОГДА 0
				|			ИНАЧЕ ПоступлениеДопРасходов.СуммаНДС
				|		КОНЕЦ),
				|	ПоступлениеДопРасходов.ВалютаДокумента,
				|	СУММА(ПоступлениеДопРасходов.СуммаНДС),
				|	СУММА(0),
				|	СУММА(0),
				|	СУММА(ВЫБОР
				|			КОГДА ПоступлениеДопРасходов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|				ТОГДА 0
				|			ИНАЧЕ 1
				|		КОНЕЦ)
				|ИЗ
				|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
				|ГДЕ
				|	ПоступлениеДопРасходов.Ссылка В(&ДокументОснование_ПоступлениеДопРасходов)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПоступлениеДопРасходов.Организация,
				|	ПоступлениеДопРасходов.Контрагент,
				|	ПоступлениеДопРасходов.ДоговорКонтрагента,
				|	ПоступлениеДопРасходов.ВалютаДокумента";
				
		ИначеЕсли ЭтоПолученныйСФ 
			И Ссылка.ВозвратЧерезКомиссионера Тогда 
			
			Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтчетКомиссионераОПродажахВозвраты.Ссылка КАК Ссылка,
			|	ОтчетКомиссионераОПродажахВозвраты.Ссылка.Организация КАК Организация,
			|	ОтчетКомиссионераОПродажахВозвраты.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
			|	ОтчетКомиссионераОПродажахВозвраты.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
			|ПОМЕСТИТЬ ВТ_ОтчетКомиссионераОПродажахВозвраты
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахВозвраты
			|ГДЕ
			|	ОтчетКомиссионераОПродажахВозвраты.Ссылка В(&ДокументыОснования)
			|	И ОтчетКомиссионераОПродажахВозвраты.ВыставленСФ
			|	И ОтчетКомиссионераОПродажахВозвраты.СчетФактура = &ТекущийДокумент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.КлючСтроки КАК КлючСтроки,
			|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
			|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
			|	СУММА(ВложенныйЗапрос.ЕстьНДС) КАК ЕстьНДС
			|ПОМЕСТИТЬ ВТ_Суммы
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОтчетКомиссионераОПродажахТоварыВозвращенные.КлючСтроки КАК КлючСтроки,
			|		ОтчетКомиссионераОПродажахТоварыВозвращенные.Сумма КАК Сумма,
			|		ОтчетКомиссионераОПродажахТоварыВозвращенные.СуммаНДС КАК СуммаНДС,
			|		ВЫБОР
			|			КОГДА ОтчетКомиссионераОПродажахТоварыВозвращенные.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|				ТОГДА 0
			|			ИНАЧЕ 1
			|		КОНЕЦ КАК ЕстьНДС
			|	ИЗ
			|		ВТ_ОтчетКомиссионераОПродажахВозвраты КАК ВТ_ОтчетКомиссионераОПродажахВозвраты
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
			|			ПО ВТ_ОтчетКомиссионераОПродажахВозвраты.Ссылка = ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.КлючСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ОтчетКомиссионераОПродажахВозвраты.Организация КАК Организация,
			|	ОтчетКомиссионераОПродажахПокупатели.Покупатель КАК Продавец,
			|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ КАК Дата,
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.ДоговорКонтрагента КАК Договор,
			|	СУММА(ВТ_Суммы.Сумма + ВЫБОР
			|			КОГДА ВТ_ОтчетКомиссионераОПродажахВозвраты.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ ВТ_Суммы.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	СУММА(ВТ_Суммы.СуммаНДС) КАК СуммаНДСДокумента,
			|	СУММА(0) КАК СуммаДокументаКомиссия,
			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
			|	СУММА(ВТ_Суммы.ЕстьНДС) КАК ЕстьНДС,
			|	ВТ_ОтчетКомиссионераОПродажахВозвраты.ВалютаДокумента КАК ВалютаДокумента,
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
			|ИЗ
			|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахПокупатели
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтчетКомиссионераОПродажахВозвраты КАК ВТ_ОтчетКомиссионераОПродажахВозвраты
			|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ВТ_ОтчетКомиссионераОПродажахВозвраты.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
			|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ВТ_Суммы.КлючСтроки
			|ГДЕ
			|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &ТекущийДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ОтчетКомиссионераОПродажахВозвраты.ВалютаДокумента,
			|	ОтчетКомиссионераОПродажахПокупатели.Покупатель,
			|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ,
			|	ВТ_ОтчетКомиссионераОПродажахВозвраты.Организация,
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.ДоговорКонтрагента,
			|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент";

		ИначеЕсли ЭтоПолученныйСФ 
			И ТипДокументаОснования = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом") Тогда
			
			Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
			Запрос.УстановитьПараметр("Дата", 				СчетФактура.Дата);
			Запрос.УстановитьПараметр("Организация", 		СчетФактура.Организация);
			Запрос.УстановитьПараметр("Контрагент", 		СчетФактура.Контрагент);
			Запрос.УстановитьПараметр("ВалютаДокумента", 	СчетФактура.ВалютаДокумента);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	НДСПредъявленныйОстатки.Организация,
			|	НДСПредъявленныйОстатки.Поставщик КАК Контрагент,
			|	ВЫБОР
			|		КОГДА НДСПредъявленныйОстатки.СчетФактура ССЫЛКА Документ.ДокументРасчетовСКонтрагентом
			|			ТОГДА ВЫРАЗИТЬ(НДСПредъявленныйОстатки.СчетФактура КАК Документ.ДокументРасчетовСКонтрагентом).ДоговорКонтрагента
			|	КОНЕЦ КАК Договор,
			|	&ВалютаДокумента КАК ВалютаДокумента,
			|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаДокумента,
			|	НДСПредъявленныйОстатки.НДСОстаток КАК СуммаНДСДокумента,
			|	0 КАК СуммаДокументаКомиссия,
			|	0 КАК СуммаНДСДокументаКомиссия,
			|	1 КАК ЕстьНДС
			|ИЗ
			|	РегистрНакопления.НДСПредъявленный.Остатки(
			|			&Дата,
			|			Организация = &Организация
			|				И СчетФактура В (&ДокументыОснования)) КАК НДСПредъявленныйОстатки";
			
		Иначе					
			ТекстЗапроса = ПолучитьТекстЗапросаОпределенияПараметровСФ(ДокументыОснования, ЭтоПолученныйСФ, Запрос.Параметры);								
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
				Запрос.Текст = Запрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат Результат;
	Иначе
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Возврат Результат;
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		РазныеОрганизации = Ложь;
		РазныеКонтрагенты = Ложь;
		РазныеДоговоры = Ложь;
		РазныеВалюты = Ложь;
		РазныеПродавцы = Ложь;
		ЕстьКолонкаПродавец = РезультатЗапроса.Колонки.Найти("Продавец") <> Неопределено;
		Корректировка = Ложь;
		ЭтоКорректировочный = Ложь;
				
		Если ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаРеализации") 
			ИЛИ ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			
			Корректировка = Истина;
						
		КонецЕсли;
		
		Если Корректировка Тогда
			
			Если ЭтоПолученныйСФ Тогда
				ЭтоКорректировочный = СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
			Иначе
				ЭтоКорректировочный = СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный;
			КонецЕсли;

			ВыборкаОбщиеИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВыборкаОбщиеИтоги.Следующий();
			
			Результат.СуммаУвеличение		= ВыборкаОбщиеИтоги.СуммаУвеличение;
			Результат.СуммаУменьшение		= ВыборкаОбщиеИтоги.СуммаУменьшение;
			Результат.СуммаНДСУвеличение	= ВыборкаОбщиеИтоги.СуммаНДСУвеличение;
			Результат.СуммаНДСУменьшение	= ВыборкаОбщиеИтоги.СуммаНДСУменьшение;
			Результат.СуммаДокумента 		= ВыборкаОбщиеИтоги.СуммаДокумента;
			Результат.СуммаНДСДокумента 	= ВыборкаОбщиеИтоги.СуммаНДСДокумента;
			
			Результат.СуммаУвеличениеКомиссия		= ВыборкаОбщиеИтоги.СуммаУвеличениеКомиссия;
			Результат.СуммаУменьшениеКомиссия		= ВыборкаОбщиеИтоги.СуммаУменьшениеКомиссия;
			Результат.СуммаНДСУвеличениеКомиссия	= ВыборкаОбщиеИтоги.СуммаНДСУвеличениеКомиссия;
			Результат.СуммаНДСУменьшениеКомиссия	= ВыборкаОбщиеИтоги.СуммаНДСУменьшениеКомиссия;
			Результат.СуммаДокументаКомиссия 		= ВыборкаОбщиеИтоги.СуммаДокументаКомиссия;
			Результат.СуммаНДСДокументаКомиссия 	= ВыборкаОбщиеИтоги.СуммаНДСДокументаКомиссия;
			
			ВыборкаДокументы = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				
				Если ПерваяСтрока Тогда
					СтрокаРеквизитов = "Организация,Контрагент,ВалютаДокумента,Договор" + ?(ЕстьКолонкаПродавец, ",Продавец", "");
					ЗаполнитьЗначенияСвойств(Результат, ВыборкаДокументы, СтрокаРеквизитов);
					Результат.СчетФактураБезНДС = ВыборкаДокументы.ЕстьНДС = 0;
					ПерваяСтрока = Ложь;
					Если НЕ ЭтоПолученныйСФ Тогда
						Результат.Продавец = УчетНДСБП.ПолучитьПродавцаИзСчетаФактурыОснованияКорректировкиРеализации(ДокументыОснования);
					КонецЕсли; 
				КонецЕсли;
				
				РазныеОрганизации	= РазныеОрганизации ИЛИ Результат.Организация <> ВыборкаДокументы.Организация;
				РазныеКонтрагенты	= РазныеКонтрагенты ИЛИ Результат.Контрагент <> ВыборкаДокументы.Контрагент;
				РазныеВалюты		= РазныеВалюты ИЛИ Результат.ВалютаДокумента <> ВыборкаДокументы.ВалютаДокумента;
				
				РазныеДоговоры		= ?(ЭтоПолученныйСФ, Ложь, РазныеДоговоры ИЛИ Результат.Договор <> ВыборкаДокументы.Договор);
				РазныеПродавцы		= ?(ЕстьКолонкаПродавец, РазныеПродавцы ИЛИ Результат.Продавец <> ВыборкаДокументы.Продавец, Ложь);
				
				Если Результат.СчетФактураБезНДС Тогда
					Результат.СчетФактураБезНДС = ВыборкаДокументы.ЕстьНДС = 0;
				КонецЕсли;
				
				Если ЭтоКорректировочный Тогда
					
					СтрокаСРеквизитами = РеквизитыОснований.Добавить();
					
					СтрокаСРеквизитами.ДокументОснование 	= ВыборкаДокументы.Документ;
					СтрокаСРеквизитами.СуммаУвеличение 		= ВыборкаДокументы.СуммаУвеличение;
					СтрокаСРеквизитами.СуммаУменьшение 		= ВыборкаДокументы.СуммаУменьшение;
					СтрокаСРеквизитами.СуммаНДСУвеличение	= ВыборкаДокументы.СуммаНДСУвеличение;
					СтрокаСРеквизитами.СуммаНДСУменьшение 	= ВыборкаДокументы.СуммаНДСУменьшение;
					
					Если ЭтоПолученныйСФ Тогда
						
						РеквизитыИсходногоСчетаФактуры = Документы.СчетФактураПолученный.ПолучитьРеквизитыИсходногоСчетаФактурыДляКорректировки(ВыборкаДокументы.Документ, СчетФактура);
						
						Если РеквизитыИсходногоСчетаФактуры <> Неопределено Тогда 
							
							СтрокаСРеквизитами.НомерИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.НомерСчетаФактуры;
							СтрокаСРеквизитами.ДатаИсходногоДокумента  = РеквизитыИсходногоСчетаФактуры.ДатаСчетаФактуры;
							СтрокаСРеквизитами.УчитыватьИсправлениеИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.Исправление;
							СтрокаСРеквизитами.НомерИсправленияИсходногоДокумента     = РеквизитыИсходногоСчетаФактуры.НомерИсправления;
							СтрокаСРеквизитами.ДатаИсправленияИсходногоДокумента      = РеквизитыИсходногоСчетаФактуры.ДатаИсправления;
						
						КонецЕсли;
					
					Иначе
					
						РеквизитыИсходногоСчетаФактуры = Документы.СчетФактураВыданный.ПолучитьРеквизитыИсходногоСчетаФактурыДляКорректировки(ВыборкаДокументы.Документ, СчетФактура);
						
						Если РеквизитыИсходногоСчетаФактуры <> Неопределено Тогда 
							
							СтрокаСРеквизитами.НомерИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.НомерСчетаФактуры;
							СтрокаСРеквизитами.ДатаИсходногоДокумента  = РеквизитыИсходногоСчетаФактуры.ДатаСчетаФактуры;
							СтрокаСРеквизитами.УчитыватьИсправлениеИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.Исправление;
							СтрокаСРеквизитами.НомерИсправленияИсходногоДокумента     = РеквизитыИсходногоСчетаФактуры.НомерИсправления;
							СтрокаСРеквизитами.ДатаИсправленияИсходногоДокумента      = РеквизитыИсходногоСчетаФактуры.ДатаИсправления;
						
						КонецЕсли;
					
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ПерваяСтрока Тогда
					ПерваяСтрока = Ложь;
					ЗаполнитьЗначенияСвойств(Результат, Выборка);
					Результат.СчетФактураБезНДС = Выборка.ЕстьНДС = 0;
					Если ТипЗнч(ДокументыОснования[0]) <> Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
						Результат.КППКонтрагента	= УчетНДСБП.ПолучитьКПППодразделенияКонтрагента(ДокументыОснования[0], "Грузоотправитель");
					КонецЕсли;
				Иначе
					РазныеОрганизации	= РазныеОрганизации ИЛИ Результат.Организация <> Выборка.Организация;
					РазныеКонтрагенты	= РазныеКонтрагенты ИЛИ Результат.Контрагент <> Выборка.Контрагент;
					РазныеВалюты		= РазныеВалюты ИЛИ Результат.ВалютаДокумента <> Выборка.ВалютаДокумента;
					РазныеДоговоры		= ?(ЭтоПолученныйСФ, Ложь, РазныеДоговоры ИЛИ Результат.Договор <> Выборка.Договор);
					РазныеПродавцы		= ?(ЕстьКолонкаПродавец, РазныеПродавцы ИЛИ Результат.Продавец <> Выборка.Продавец, Ложь);
					
					Результат.СуммаДокумента = 	Результат.СуммаДокумента + Выборка.СуммаДокумента;
					Результат.СуммаНДСДокумента = Результат.СуммаНДСДокумента + Выборка.СуммаНДСДокумента;
					
					Результат.СуммаДокументаКомиссия 	= Результат.СуммаДокументаКомиссия + Выборка.СуммаДокументаКомиссия;
					Результат.СуммаНДСДокументаКомиссия = Результат.СуммаНДСДокументаКомиссия + Выборка.СуммаНДСДокументаКомиссия;
										
					Если Результат.СчетФактураБезНДС Тогда
						Результат.СчетФактураБезНДС = Выборка.ЕстьНДС = 0;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		Если РазныеОрганизации ИЛИ РазныеКонтрагенты ИЛИ РазныеДоговоры ИЛИ РазныеВалюты ИЛИ РазныеПродавцы Тогда
			
			ТекстСообщения = НСтр("ru='Реквизиты документов, на основании которых зарегистрирован счет-фактура, не совпадают:'")
				+ ?(РазныеОрганизации, Символы.ПС + НСтр("ru=' - не совпадает организация'"), "")
				+ ?(РазныеКонтрагенты, Символы.ПС + НСтр("ru=' - не совпадает контрагент'"), "")
				+ ?(РазныеДоговоры, Символы.ПС + НСтр("ru=' - не совпадает договор'"), "")
				+ ?(РазныеВалюты, Символы.ПС + НСтр("ru=' - не совпадает валюта документа'"), "")
				+ ?(РазныеПродавцы, Символы.ПС + НСтр("ru=' - не совпадает продавец, от имени которого выписан счета-фактура'"), "") + Символы.ПС 
				+ НСтр("ru='Необходимо изменить параметры документов-оснований или зарегистрировать по документам с расхождениями отдельные счета-фактуры.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
			
			Если РазныеОрганизации Тогда
				Результат.Организация = Неопределено;
			КонецЕсли; 				
			Если РазныеКонтрагенты Тогда
				Результат.Контрагент = Неопределено;
			КонецЕсли; 				
			Если РазныеВалюты Тогда
				Результат.ВалютаДокумента = Неопределено;
			КонецЕсли; 				
			Если РазныеДоговоры Тогда
				Результат.Договор = Неопределено;
			КонецЕсли;
			Если РазныеПродавцы Тогда
				Результат.Продавец = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ПолучитьТекстЗапросаОпределенияПараметровСФ(ДокументыОснования, ЭтоПолученныйСФ, ПараметрыЗапроса, ИмяВременнойТаблицы = "") Экспорт

	ИгнорироватьТЧ = Новый Массив;
	ИгнорироватьТЧ.Добавить("ВозвратнаяТара");
	ИгнорироватьТЧ.Добавить("ВыданныеАвансы");
	ИгнорироватьТЧ.Добавить("ДенежныеСредства");
	ИгнорироватьТЧ.Добавить("ТоварыВозвращенные");

	МетаданныеДокумента = ДокументыОснования[0].Метаданные();
	ТипДокументаОснования = ТипЗнч(ДокументыОснования[0]);

	ИмяОбъекта = МетаданныеДокумента.Имя;
	ПараметрыЗапроса.Вставить("ДокументОснование_" + ИмяОбъекта, ДокументыОснования);

	ПостфиксСумм = "";
	ТекстЗапросаКомиссияПустой	= "0 КАК СуммаДокументаКомиссия, 0 КАК СуммаНДСДокументаКомиссия,";
	ТекстЗапросаКомиссияПоСчету = "0 КАК СуммаДокументаКомиссия, 0 КАК СуммаНДСДокументаКомиссия,";
	ТекстЗапросаКомиссия		= "0 КАК СуммаДокументаКомиссия, 0 КАК СуммаНДСДокументаКомиссия,";
	Множитель = 1;
	ИмяРеквизитаСтавкаНДС = "СтавкаНДС";
		
	Если ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
		ИЛИ ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ЭтоПолученныйСФ Тогда

		ПостфиксСумм = "Вознаграждения";
		ИмяРеквизитаСтавкаНДС = "Ссылка.СтавкаНДСВознаграждения";
	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") И НЕ ЭтоПолученныйСФ
		ИЛИ ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И ЭтоПолученныйСФ Тогда

		Множитель = - 1;
	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ТекстЗапросаКомиссияПоСчету = 
		" СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) 
		|					ТОГДА Таблица.Сумма + ВЫБОР
		|						КОГДА Таблица.Ссылка.СуммаВключаетНДС
		|					ТОГДА 0
		|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ
		|				ИНАЧЕ 0 КОНЕЦ) КАК СуммаДокументаКомиссия,
		| СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) 
		|					ТОГДА Таблица.СуммаНДС ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДСДокументаКомиссия,";
		
		ТекстЗапросаКомиссия = 
		" СУММА(Таблица.Сумма + ВЫБОР
		|					КОГДА Таблица.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ) КАК СуммаДокументаКомиссия,
		| СУММА(Таблица.СуммаНДС) КАК СуммаНДСДокументаКомиссия,";
				
	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ТекстЗапросаКомиссияПоСчету = 
		" СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
		|						ИЛИ Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
		|					ТОГДА Таблица.Сумма + ВЫБОР
		|						КОГДА Таблица.Ссылка.СуммаВключаетНДС
		|					ТОГДА 0
		|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ
		|				ИНАЧЕ 0 КОНЕЦ) КАК СуммаДокументаКомиссия,
		| СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
		|						ИЛИ Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию) 
		|					ТОГДА Таблица.СуммаНДС  ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДСДокументаКомиссия,";
		
		ТекстЗапросаКомиссия = 
		" СУММА(Таблица.Сумма + ВЫБОР
		|					КОГДА Таблица.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ) КАК СуммаДокументаКомиссия,
		| СУММА(Таблица.СуммаНДС) КАК СуммаНДСДокументаКомиссия,";

	КонецЕсли;

	ПараметрыЗапроса.Вставить("Множитель_" + ИмяОбъекта, Множитель);

	ТекстЗапроса = "";

	ТекстСекцииПоместить = "";

	Для каждого МетаданныеТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		Если ИгнорироватьТЧ.Найти(МетаданныеТЧ.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если МетаданныеТЧ.Реквизиты.Найти("Сумма") = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если МетаданныеТЧ.Реквизиты.Найти("СчетУчета") <> Неопределено Тогда
			ТекстСуммыКомиссии = ТекстЗапросаКомиссияПоСчету;
		ИначеЕсли МетаданныеТЧ.Имя = "АгентскиеУслуги" Тогда
			ТекстСуммыКомиссии = ТекстЗапросаКомиссия;
		Иначе 
			ТекстСуммыКомиссии = ТекстЗапросаКомиссияПустой;	
		КонецЕсли;
		
		Если ПустаяСтрока(ТекстЗапроса) Тогда
			Если НЕ ПустаяСтрока(ИмяВременнойТаблицы) Тогда
				ТекстСекцииПоместить = "
				|ПОМЕСТИТЬ
				|	" + ИмяВременнойТаблицы + "
				|";
			КонецЕсли;
		Иначе
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
			ТекстСекцииПоместить = "";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	Таблица.Ссылка.Организация КАК Организация,
		|	Таблица.Ссылка.Контрагент КАК Контрагент,
		|	Таблица.Ссылка.ДоговорКонтрагента КАК Договор,
		|	СУММА(Таблица.Сумма" + ПостфиксСумм + " + ВЫБОР
		|			КОГДА Таблица.Ссылка.СуммаВключаетНДС
		|				ТОГДА 0
		|			ИНАЧЕ Таблица.СуммаНДС" + ПостфиксСумм + "
		|		КОНЕЦ) * &Множитель_" + ИмяОбъекта + " КАК СуммаДокумента,
		|	Таблица.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	СУММА(Таблица.СуммаНДС" + ПостфиксСумм + ") * &Множитель_" + ИмяОбъекта + " КАК СуммаНДСДокумента,
		| " + ТекстСуммыКомиссии + "
		|	СУММА(ВЫБОР
		|			КОГДА Таблица." + ИмяРеквизитаСтавкаНДС + " = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ЕстьНДС
		| " + ТекстСекцииПоместить + "
		|ИЗ
		|	Документ." + МетаданныеДокумента.Имя + "." + МетаданныеТЧ.Имя + " КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&ДокументОснование_" + ИмяОбъекта + ") 
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.Ссылка.Организация,
		|	Таблица.Ссылка.Контрагент,
		|	Таблица.Ссылка.ДоговорКонтрагента,
		|	Таблица.Ссылка.ВалютаДокумента";
	КонецЦикла;

	Если НЕ ЗначениеЗаполнено(ТекстЗапроса) Тогда // в документе не оказалось табличных частей

		Если МетаданныеДокумента.Реквизиты.Найти("СуммаНДС") <> Неопределено Тогда

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокОснование.Организация КАК Организация,
			|	ДокОснование.Контрагент КАК Контрагент,
			|	ДокОснование.ДоговорКонтрагента КАК Договор,
			|	СУММА(ДокОснование.Сумма + ВЫБОР
			|			КОГДА ДокОснование.Ссылка.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ ДокОснование.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
			|	ДокОснование.СуммаНДС КАК СуммаНДСДокумента,
			|   0 КАК СуммаДокументаКомиссия, 
			|   0 КАК СуммаНДСДокументаКомиссия, 
			|	ВЫБОР
			|		КОГДА ДокОснование.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЕстьНДС
			|ИЗ
			|	Документ." + МетаданныеДокумента.Имя + " КАК ДокОснование
			|ГДЕ
			|	ДокОснование.Ссылка В (&ДокументОснование_" + МетаданныеДокумента.Имя + ")
			|
			|СГРУППИРОВАТЬ ПО
			|	ДокОснование.Ссылка,
			|	ДокОснование.ДоговорКонтрагента,
			|	ДокОснование.СуммаНДС,
			|	ДокОснование.Организация,
			|	ДокОснование.Контрагент,
			|	ВЫБОР
			|		КОГДА ДокОснование.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ";


		Иначе

			Если (ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах"))
				или ((ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")) И ЭтоПолученныйСФ) Тогда
				ИдРеквСумма = "СуммаВознаграждения";
			ИначеЕсли (ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") И не ЭтоПолученныйСФ) тогда
				ИдРеквСумма = "СуммаДокумента*(-1)";
			ИначеЕсли (ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И ЭтоПолученныйСФ) тогда
				ИдРеквСумма = "СуммаДокумента*(-1)";
			Иначе
				ИдРеквСумма = "СуммаДокумента";
			КонецЕсли;

			ИмяОбъекта = МетаданныеДокумента.Имя;

			ТекстЗапроса =
			"ВЫБРАТЬ "
			+ ИмяОбъекта + ".Организация,"
			+ ?(МетаданныеДокумента.Реквизиты.Найти("Контрагент") <> Неопределено,
					ИмяОбъекта + ".Контрагент,",
					"НЕОПРЕДЕЛЕНО КАК Контрагент,")
			+ ?(МетаданныеДокумента.Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено,
					ИмяОбъекта + ".ДоговорКонтрагента КАК Договор,",
					"НЕОПРЕДЕЛЕНО КАК Договор,")
			+ ?(МетаданныеДокумента.Реквизиты.Найти(ИдРеквСумма) <> Неопределено,
					ИмяОбъекта + "." + ИдРеквСумма + " Как СуммаДокумента,",
					"0 Как СуммаДокумента,")
			+ ?(МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено,
					ИмяОбъекта + ".ВалютаДокумента Как ВалютаДокумента,",
					"НЕОПРЕДЕЛЕНО КАК ВалютаДокумента,")
			+ "0 Как СуммаДокументаКомиссия,"
			+ "0 Как СуммаНДСДокументаКомиссия,"
			+ "0 Как СуммаНДСДокумента,"
			+ "1 Как ЕстьНДС
			|ИЗ
			|	Документ." + ИмяОбъекта + " КАК " + ИмяОбъекта + "
			|ГДЕ
			|	" + ИмяОбъекта + ".Ссылка В (&ДокументОснование_" + ИмяОбъекта + ")";

		КонецЕсли;

	КонецЕсли;

	Если МетаданныеДокумента.Реквизиты.Найти("ПодразделениеОрганизации") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Таблица.Ссылка.ПодразделениеОрганизации", "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументОснование.ПодразделениеОрганизации", "Неопределено");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Процедура проверяет соответствие реквизитов счета-фактуры полученного и документа-основания.
// В случае несоответствия выдается сообщение пользователю.
//
// Параметры:
//		- ДокОбъект - документ-основание
//
// Возврат:
//		- Истина, если различий не найдено, Ложь в противном случае
//
Процедура СинхронизироватьРеквизитыСчетаФактурыПолученного(ДокОбъект) Экспорт

	СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокОбъект.Ссылка);
	Если СчетФактура = Неопределено ИЛИ СчетФактура = ДокОбъект.Ссылка Тогда
		Возврат;
	КонецЕсли;

	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	Попытка
		СчетФактураОбъект.Заблокировать();
		СчетФактураОбъект.Записать();
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Реквизиты документа ""%1"" автоматически не перезаполнены и могут быть неактуальными'"),
				СчетФактура);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СчетФактура);
	КонецПопытки;
	
КонецПроцедуры

Функция ПроверитьСоответствиеРеквизитовСчетаФактурыВыданного(ДокОбъект, Сообщать = Истина, СтруктураОтбора = Неопределено) Экспорт

	СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокОбъект.Ссылка, , , СтруктураОтбора);
	Если СчетФактура = Неопределено ИЛИ СчетФактура = ДокОбъект.Ссылка Тогда
		Возврат Истина;
	КонецЕсли;
	
	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	Попытка
		СчетФактураОбъект.Заблокировать();
		СчетФактураОбъект.Записать();
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Реквизиты документа ""%1"" автоматически не перезаполнены и могут быть неактуальными'"),
				СчетФактура);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СчетФактура);
	КонецПопытки;
	
	Возврат Истина;

КонецФункции

// КОРРЕКТИРОВОЧНЫЕ И ИСПРАВИТЕЛЬНЫЕ СЧЕТА-ФАКТУРЫ

// Функция находит и возвращает документ, являющийся отправной точкой исправлений (либо ПТУ либо корректировку ПТУ)
// либо первоначальный документ ПТУ при передаче истины в параметр Исходный
Функция ПолучитьИсправляемыйДокументПоступления(ДокПоступления, Исходный = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(ДокПоступления) 
		И ТипЗнч(ДокПоступления) = Тип("ДокументСсылка.КорректировкаПоступления")
		И (ДокПоступления.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки ИЛИ Исходный) 
		И ДокПоступления.ДокументПоступления <> ДокПоступления Тогда
		
		Возврат ПолучитьИсправляемыйДокументПоступления(ДокПоступления.ДокументПоступления, Исходный);
		
	Иначе
		Возврат ДокПоступления;
	КонецЕсли;	
	
КонецФункции

// Функция находит и возвращает документ, являющийся отправной точкой исправлений (либо РТУ либо корректировку РТУ)
// либо первоначальный документ РТУ при передаче истины в параметр Исходный
Функция ПолучитьИсправляемыйДокументРеализации(ДокРеализации, Исходный = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(ДокРеализации) 
		И ТипЗнч(ДокРеализации) = Тип("ДокументСсылка.КорректировкаРеализации")
		И (ДокРеализации.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки ИЛИ Исходный) Тогда
		
		Возврат ПолучитьИсправляемыйДокументРеализации(ДокРеализации.ДокументРеализации, Исходный);
		
	Иначе
		Возврат ДокРеализации;
	КонецЕсли;	
	
КонецФункции	

// Функция возвращает массив пустых ссылок на документы, являющиеся типами для ИсправленногоСчетаФактуры
//
Функция ПолучитьМассивПустыхИсправленныхСчетовФактур() Экспорт

	МассивДокументовИсправлений = Новый Массив;
	
	МассивТипов = Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок.Измерения.ИсправленныйСчетФактура.Тип.Типы();
	Для Каждого ТипДокумента Из МассивТипов Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
		Если МетаданныеДокумента <> Неопределено Тогда
			ИмяДокумента = МетаданныеДокумента.Имя;
			МассивДокументовИсправлений.Добавить(Документы[ИмяДокумента].ПустаяСсылка());
		КонецЕсли;
	КонецЦикла;
	
	МассивДокументовИсправлений.Добавить(Неопределено);

	Возврат МассивДокументовИсправлений;

КонецФункции // ПолучитьМассивПустыхИсправленныхСчетовФактур()

//////////////////////////////////////////////////////////////////////////
// ПОЛУЧЕНИЕ ДАННЫХ ПО ДОКУМЕНТАМ

// Параметр ДляКнигиПродаж устанавливается в случае, когда для документа могут быть получены данные как
// для книги покупок, так и для книги продаж
Функция ПолучитьТаблицуДокументаНДС(ДокументСсылка, Ошибка = Ложь, ДляКнигиПродаж = Ложь) Экспорт

	Возврат УчетНДСБП.ПолучитьТаблицуДокументаНДС(ДокументСсылка, Ошибка, ДляКнигиПродаж);

КонецФункции

// Рассчитываем сумму документа со всеми налогами
//
// Параметры:
//  ДокументОбъект    - объект документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//  НеУчитыватьТару   - булево, если Истина и ИмяТабличнойЧасти неопределено, то в расчете сумм тару не учитываем
//
// Возвращаемое значение:
//  Сумма документа со всеми налогами.
//
Функция ПолучитьСуммуДокументаСНДС(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, НеУчитыватьТару = Истина) Экспорт

	МетаданныеДокумента = ДокументОбъект.Ссылка.Метаданные();

	СуммаДокумента = 0;
	Если ИмяТабличнойЧасти <> Неопределено Тогда
		СуммаДокумента = СуммаДокумента + ДокументОбъект[ИмяТабличнойЧасти].Итог("Сумма");
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
		   И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти)
		   И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
			СуммаДокумента = СуммаДокумента + ДокументОбъект[ИмяТабличнойЧасти].Итог("СуммаНДС");
		КонецЕсли;
	Иначе
		Для каждого ТЧОбъекта Из ДокументОбъект.Ссылка.Метаданные().ТабличныеЧасти Цикл
			Если НеУчитыватьТару и ТЧОбъекта.Имя = "ВозвратнаяТара" Тогда
				Продолжить;
			КонецЕсли;
			Если ТЧОбъекта.Имя = "ВыданныеАвансы" Тогда
				Продолжить;
			КонецЕсли;
			Если ТЧОбъекта.Имя = "ДенежныеСредства" Тогда
				Продолжить;
			КонецЕсли;
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ТЧОбъекта.Имя) Тогда
				СуммаДокумента = СуммаДокумента + ДокументОбъект[ТЧОбъекта.Имя].Итог("Сумма");
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
					И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ТЧОбъекта.Имя)
					И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
					СуммаДокумента = СуммаДокумента + ДокументОбъект[ТЧОбъекта.Имя].Итог("СуммаНДС");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Сумма", МетаданныеДокумента) Тогда
			СуммаДокумента = СуммаДокумента + ДокументОбъект.Сумма;
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
				И ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаНДС", МетаданныеДокумента)
				И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
				СуммаДокумента = СуммаДокумента + ДокументОбъект.СуммаНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат СуммаДокумента;

КонецФункции // ПолучитьСуммуДокументаСНДС()

// Рассчитываем сумму документа со всеми налогами в разрезе ставок НДС
//
// Параметры:
//  ДокументОбъект    - ссылка документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//  НеУчитыватьТару   - булево, если Истина и ИмяТабличнойЧасти неопределено, то в расчете сумм тару не учитываем
//
// Возвращаемое значение:
//  ТаблицаЗначений
//		Колонки:
//			Сумма		- Сумма документа со всеми налогами
//			СтавкаНДС	- ПеречислениеСсылка.СтавкиНДС
//			СуммаНДС	- Сумма НДС по ставке
//
Функция ПолучитьСуммуДокументаСНДСВРазрезеСтавокНДС(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, НеУчитыватьТару = Истина) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	СуммаДокументаПоСтавкам = Новый ТаблицаЗначений();
	СуммаДокументаПоСтавкам.Колонки.Добавить("Сумма",     ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	СуммаДокументаПоСтавкам.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	СуммаДокументаПоСтавкам.Колонки.Добавить("СуммаНДС",  ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	СуммаДокументаПоСтавкам.Индексы.Добавить("СтавкаНДС");

	Если НЕ (ИмяТабличнойЧасти = Неопределено) Тогда

		Для каждого СтрокаДокумента Из ДокументОбъект[ИмяТабличнойЧасти] Цикл

			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
				СуммаДокумента = СтрокаДокумента.Сумма;
			Иначе
				СуммаДокумента = 0;
			КонецЕсли;

			СуммаНДС  = 0;
			СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();

			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
				СуммаНДС = СтрокаДокумента.СуммаНДС;
			КонецЕсли;

			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
				СтавкаНДС = СтрокаДокумента.СтавкаНДС;
			КонецЕсли;

			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
			   И Не ДокументОбъект.СуммаВключаетНДС Тогда

				СуммаДокумента = СуммаДокумента + СуммаНДС;

			КонецЕслИ;

			СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Найти(СтавкаНДС,"СтавкаНДС");

			Если СтрокаТаблицыИтогов = Неопределено тогда
				СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Добавить();
				СтрокаТаблицыИтогов.СтавкаНДС = СтавкаНДС;
			КонецЕсли;

			СтрокаТаблицыИтогов.Сумма    = СтрокаТаблицыИтогов.Сумма    + СуммаДокумента;
			СтрокаТаблицыИтогов.СуммаНДС = СтрокаТаблицыИтогов.СуммаНДС + СуммаНДС;

		КонецЦикла;

	Иначе

		Для каждого ТЧОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл

			Если НеУчитыватьТару и ТЧОбъекта.Имя = "ВозвратнаяТара" Тогда
				Продолжить;
			ИначеЕсли (МетаданныеДокумента.Имя = "ОтчетКомиссионераОПродажах" или МетаданныеДокумента.Имя = "ОтчетКомитентуОПродажах") и ТЧОбъекта.Имя = "ДенежныеСредства" Тогда
				Продолжить;
			КонецЕсли;

			ИмяТабличнойЧасти = ТЧОбъекта.Имя;

			Для каждого СтрокаДокумента  Из ДокументОбъект[ИмяТабличнойЧасти] Цикл

				Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
					СуммаДокумента = СтрокаДокумента.Сумма;
				Иначе
					СуммаДокумента = 0;
				КонецЕсли;

				СуммаНДС  = 0;
				СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();

				Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
					СуммаНДС = СтрокаДокумента.СуммаНДС;
				КонецЕсли;

				Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
					СтавкаНДС = СтрокаДокумента.СтавкаНДС;
				КонецЕсли;

				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
				   И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
					СуммаДокумента = СуммаДокумента+СуммаНДС;
				КонецЕслИ;

				СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Найти(СтавкаНДС,"СтавкаНДС");

				Если СтрокаТаблицыИтогов = Неопределено тогда
					СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Добавить();
					СтрокаТаблицыИтогов.СтавкаНДС = СтавкаНДС;
				КонецЕсли;

				СтрокаТаблицыИтогов.Сумма    = СтрокаТаблицыИтогов.Сумма    + СуммаДокумента;
				СтрокаТаблицыИтогов.СуммаНДС = СтрокаТаблицыИтогов.СуммаНДС + СуммаНДС;

			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

	СтрокиКУдалению = Новый Массив;

	Для каждого СтрокаТаблицы Из СуммаДокументаПоСтавкам Цикл
	    Если СтрокаТаблицы.Сумма = 0 и СтрокаТаблицы.СуммаНДС = 0  Тогда
			СтрокиКУдалению.Добавить( СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;

	Для НомерСтроки = 1 По СтрокиКУдалению.Количество() Цикл
		СуммаДокументаПоСтавкам.Удалить(СтрокиКУдалению[НомерСтроки-1]);
	КонецЦикла;

	Возврат СуммаДокументаПоСтавкам;

КонецФункции // ПолучитьСуммуДокументаСНДС()

// Рассчитываем сумму НДС документа
//
// Параметры:
//  ДокументОбъект    - объект документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//
// Возвращаемое значение:
//  НДС документа
//
Функция ПолучитьНДСДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	СуммаНДС = 0;

	Если ИмяТабличнойЧасти <> Неопределено Тогда
		СуммаНДС = СуммаНДС + ДокументОбъект[ИмяТабличнойЧасти].Итог("СуммаНДС");
	Иначе
		Для каждого ТЧОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ТЧОбъекта.Имя) Тогда
				СуммаНДС = СуммаНДС + ДокументОбъект[ТЧОбъекта.Имя].Итог("СуммаНДС");
			КонецЕсли;
		КонецЦикла;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаНДС", МетаданныеДокумента) Тогда
			СуммаНДС = СуммаНДС + ДокументОбъект.СуммаНДС;
		КонецЕсли;
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции // ПолучитьСуммуДокументаСНДС()

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ, ВЫПОЛНЯЮЩИЕ ДВИЖЕНИЯ ПО РЕГИСТРАМ

// РЕАЛИЗАЦИЯ ТОВАРОВ И УСЛУГ

Процедура СформироватьДвиженияОтгрузкаТоваров(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	УчетНДСБП.СформироватьДвиженияОтгрузкаТоваров(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияВыбытиеТоваров(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ) Экспорт

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если РаздельныйУчетНДСНаСчете19 Тогда
		
		УчетНДСРаздельный.СформироватьДвиженияВыбытиеТоваров(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		
	Иначе
	
		УчетНДСБП.СформироватьДвиженияВыбытиеТоваров(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		
	КонецЕсли;

КонецПроцедуры

// ПЕРЕМЕЩЕНИЕ ТОВАРОВ

Процедура СформироватьДвиженияСписаниеТоваровПрочее(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияСписаниеТоваровПрочее(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПолучитьТаблицуСписанныеПартииНДС(Товары, СписанныеТоварыБухУчет, Реквизиты, Отказ) Экспорт

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если РаздельныйУчетНДСНаСчете19 Тогда
		
		Возврат УчетНДСРаздельный.ПолучитьТаблицуСписанныеПартииНДС(Товары, СписанныеТоварыБухУчет, Реквизиты, Отказ);

	Иначе
	
		Возврат УчетНДСБП.ПолучитьТаблицуСписанныеПартииНДС(Товары, СписанныеТоварыБухУчет, Реквизиты, Отказ);

	КонецЕсли;

КонецФункции 

// ПРИНЯТИЕ К УЧЕТУ НМА

Процедура СформироватьДвиженияПринятиеНаУчетНМА(ТаблицаРеквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияПринятиеНаУчетНМА(ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

// НАЛОГОВЫЙ АГЕНТ КУРСОВЫЕ РАЗНИЦЫ

// Функция вызывается Из процедуры УчетНДС.КорректировкаРегистровНДСПоСуммовымРазницам.
// Цель работы процедуры - сформировать дерево остатков по регистрам НДС (приобретение), содержащее
// суммы зарегистрированных событий, для последующей их корректировки
//
Функция ПолучитьДанныеПоКорректируемымСчетамФактурам(ТаблицаРеквизиты, ТаблицаСуммовыхРазниц) Экспорт

	Реквизиты = ТаблицаРеквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",           Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаСуммовыхРазниц", ТаблицаСуммовыхРазниц);
	Запрос.УстановитьПараметр("КонецПериода",          Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор));
	Запрос.УстановитьПараметр("Предположение0",        Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСуммовыхРазниц.ДокументРасчетов КАК СчетФактура
	|ПОМЕСТИТЬ СписокСчетовФактур
	|ИЗ
	|	&ТаблицаСуммовыхРазниц КАК ТаблицаСуммовыхРазниц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаСуммовыхРазниц.ДокументРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСРеализация0Обороты.СчетФактура КАК СчетФактура,
	|	НДСРеализация0Обороты.ВидЦенности КАК ВидЦенности,
	|	НДСРеализация0Обороты.Покупатель КАК Покупатель,
	|	НДСРеализация0Обороты.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА НДСРеализация0Обороты.Состояние = &Предположение0
	|				ТОГДА ЕСТЬNULL(НДСРеализация0Обороты.СуммаБезНДСОборот, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСРеализация0Обороты.СуммаБезНДСПриход, 0)
	|		КОНЕЦ) КАК Реализация0_БезНДС,
	|	СУММА(ВЫБОР
	|			КОГДА НДСРеализация0Обороты.Состояние = &Предположение0
	|				ТОГДА ЕСТЬNULL(НДСРеализация0Обороты.НДСОборот, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСРеализация0Обороты.НДСПриход, 0)
	|		КОНЕЦ) КАК Реализация0_НДС
	|ПОМЕСТИТЬ ВТНДСРеализация0
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)) КАК НДСРеализация0Обороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРеализация0Обороты.СчетФактура,
	|	НДСРеализация0Обороты.ВидЦенности,
	|	НДСРеализация0Обороты.Покупатель,
	|	НДСРеализация0Обороты.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСРеализация0Обороты.СчетФактура,
	|	НДСРеализация0Обороты.ВидЦенности,
	|	НДСРеализация0Обороты.Покупатель,
	|	НДСРеализация0Обороты.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНачисленныйОбороты.Организация,
	|	НДСНачисленныйОбороты.СчетФактура КАК СчетФактура,
	|	НДСНачисленныйОбороты.ВидЦенности,
	|	НДСНачисленныйОбороты.СтавкаНДС,
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОбороты.СуммаБезНДСПриход, 0) + ЕСТЬNULL(НДСНачисленныйОбороты.НДСПриход, 0)) КАК Базис_СНДС,
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОбороты.СуммаБезНДСПриход, 0)) КАК Базис_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСНачисленныйОбороты.НДСПриход, 0)) КАК Базис_НДС,
	|	СУММА(НДСРеализация0.Реализация0_БезНДС) КАК Реализация0_БезНДС,
	|	СУММА(НДСРеализация0.Реализация0_НДС) КАК Реализация0_НДС,
	|	НДСНачисленныйОбороты.Покупатель,
	|	НДСНачисленныйОбороты.ВидНачисления,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСРеализация0.СчетФактура ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьРеализация0
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)) КАК НДСНачисленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСРеализация0 КАК НДСРеализация0
	|		ПО НДСНачисленныйОбороты.СчетФактура = НДСРеализация0.СчетФактура
	|			И НДСНачисленныйОбороты.ВидЦенности = НДСРеализация0.ВидЦенности
	|			И НДСНачисленныйОбороты.Покупатель = НДСРеализация0.Покупатель
	|			И НДСНачисленныйОбороты.СтавкаНДС = НДСРеализация0.СтавкаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОбороты.Организация,
	|	НДСНачисленныйОбороты.СчетФактура,
	|	НДСНачисленныйОбороты.ВидЦенности,
	|	НДСНачисленныйОбороты.СтавкаНДС,
	|	НДСНачисленныйОбороты.Покупатель,
	|	НДСНачисленныйОбороты.ВидНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.СуммаБезНДСПриход, 0) + ЕСТЬNULL(НДСПредъявленныйОбороты.НДСПриход, 0)),
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.СуммаБезНДСПриход, 0)),
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.НДСПриход, 0)),
	|	0,
	|	0,
	|	НДСПредъявленныйОбороты.Поставщик,
	|	NULL,
	|	0
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)) КАК НДСПредъявленныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.Поставщик";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПолучитьДанныеПоКорректируемымСчетамФактурамНалоговыйАгент(Реквизиты, ТаблицаВзаиморасчетовНалоговыйАгент) Экспорт

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Организация", 		   Реквизиты.Организация);
	Запрос.УстановитьПараметр("КонецПериода",          Новый Граница(Реквизиты.Период, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Предположение0",        Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);
	Запрос.УстановитьПараметр("ТаблицаСуммовыхРазниц", ТаблицаВзаиморасчетовНалоговыйАгент);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСуммовыхРазниц.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ СписокСчетовФактур
	|ИЗ
	|	&ТаблицаСуммовыхРазниц КАК ТаблицаСуммовыхРазниц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.Поставщик,
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.СчетУчетаНДС,
	|	НДСПредъявленныйОбороты.СуммаБезНДСПриход,
	|	НДСПредъявленныйОбороты.НДСПриход
	|ПОМЕСТИТЬ ВТНДСПредъявленныйОбороты
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)) КАК НДСПредъявленныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПоПриобретеннымЦенностямОстатки.СчетФактура,
	|	НДСПоПриобретеннымЦенностямОстатки.ВидЦенности,
	|	НДСПоПриобретеннымЦенностямОстатки.СтавкаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетУчетаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СтоимостьОстаток,
	|	НДСПоПриобретеннымЦенностямОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПоПриобретеннымЦенностямОстатки
	|ИЗ
	|	РегистрНакопления.НДСПоПриобретеннымЦенностям.Остатки(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)) КАК НДСПоПриобретеннымЦенностямОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПоПриобретеннымЦенностямОстатки.СчетФактура,
	|	НДСПоПриобретеннымЦенностямОстатки.ВидЦенности,
	|	НДСПоПриобретеннымЦенностямОстатки.СтавкаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Обороты.СчетФактура,
	|	НДСПредъявленныйРеализация0Обороты.ВидЦенности,
	|	НДСПредъявленныйРеализация0Обороты.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход,
	|	НДСПредъявленныйРеализация0Обороты.НДСПриход
	|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0Обороты
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)
	|				И Состояние = &Предположение0) КАК НДСПредъявленныйРеализация0Обороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленныйРеализация0Обороты.СчетФактура,
	|	НДСПредъявленныйРеализация0Обороты.ВидЦенности,
	|	НДСПредъявленныйРеализация0Обороты.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСКосвенныеРасходыОстатки.СчетФактура,
	|	НДСКосвенныеРасходыОстатки.ВидЦенности,
	|	НДСКосвенныеРасходыОстатки.СтавкаНДС,
	|	НДСКосвенныеРасходыОстатки.СчетУчетаНДС,
	|	НДСКосвенныеРасходыОстатки.СуммаБезНДСОстаток,
	|	НДСКосвенныеРасходыОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСКосвенныеРасходыОстатки
	|ИЗ
	|	РегистрНакопления.НДСКосвенныеРасходы.Остатки(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						СписокСчетовФактур.СчетФактура
	|					ИЗ
	|						СписокСчетовФактур)) КАК НДСКосвенныеРасходыОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСКосвенныеРасходыОстатки.СчетФактура,
	|	НДСКосвенныеРасходыОстатки.ВидЦенности,
	|	НДСКосвенныеРасходыОстатки.СтавкаНДС,
	|	НДСКосвенныеРасходыОстатки.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.СчетУчетаНДС,
	|	НДСПредъявленныйОбороты.Поставщик,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.СуммаБезНДСПриход, 0) + ЕСТЬNULL(НДСПредъявленныйОбороты.НДСПриход, 0)) КАК Базис_СНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.СуммаБезНДСПриход, 0)) КАК Базис_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОбороты.НДСПриход, 0)) КАК Базис_НДС,
	|	СУММА(ЕСТЬNULL(НДСКосвенныеРасходыОстатки.СуммаБезНДСОстаток, 0)) КАК Косвенные_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСКосвенныеРасходыОстатки.НДСОстаток, 0)) КАК Косвенные_НДС,
	|	СУММА(ЕСТЬNULL(НДСПоПриобретеннымЦенностямОстатки.СтоимостьОстаток, 0)) КАК Партии_СНДС,
	|	СУММА(ЕСТЬNULL(НДСПоПриобретеннымЦенностямОстатки.НДСОстаток, 0)) КАК Партии_НДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход, 0)) КАК Реализация0_БезНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Обороты.НДСПриход, 0)) КАК Реализация0_НДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСПредъявленныйРеализация0Обороты.СчетФактура ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход = 0
	|							И НДСПредъявленныйРеализация0Обороты.НДСПриход = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьРеализация0,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСКосвенныеРасходыОстатки.СчетФактура ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСКосвенныеРасходыОстатки.СуммаБезНДСОстаток = 0
	|							И НДСКосвенныеРасходыОстатки.НДСОстаток = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьКосвенныеРасходы,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДСПоПриобретеннымЦенностямОстатки.СчетФактура ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НДСПоПриобретеннымЦенностямОстатки.СтоимостьОстаток = 0
	|							И НДСПоПриобретеннымЦенностямОстатки.НДСОстаток = 0
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК ЕстьОстаткиПоПартиям,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКонтрагента
	|ИЗ
	|	ВТНДСПредъявленныйОбороты КАК НДСПредъявленныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПоПриобретеннымЦенностямОстатки КАК НДСПоПриобретеннымЦенностямОстатки
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСПоПриобретеннымЦенностямОстатки.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСПоПриобретеннымЦенностямОстатки.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСПоПриобретеннымЦенностямОстатки.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСПоПриобретеннымЦенностямОстатки.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйРеализация0Обороты КАК НДСПредъявленныйРеализация0Обороты
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСПредъявленныйРеализация0Обороты.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСПредъявленныйРеализация0Обороты.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСПредъявленныйРеализация0Обороты.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСКосвенныеРасходыОстатки КАК НДСКосвенныеРасходыОстатки
	|		ПО НДСПредъявленныйОбороты.СчетФактура = НДСКосвенныеРасходыОстатки.СчетФактура
	|			И НДСПредъявленныйОбороты.ВидЦенности = НДСКосвенныеРасходыОстатки.ВидЦенности
	|			И НДСПредъявленныйОбороты.СтавкаНДС = НДСКосвенныеРасходыОстатки.СтавкаНДС
	|			И НДСПредъявленныйОбороты.СчетУчетаНДС = НДСКосвенныеРасходыОстатки.СчетУчетаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОбороты.Организация,
	|	НДСПредъявленныйОбороты.СчетФактура,
	|	НДСПредъявленныйОбороты.ВидЦенности,
	|	НДСПредъявленныйОбороты.СтавкаНДС,
	|	НДСПредъявленныйОбороты.СчетУчетаНДС,
	|	НДСПредъявленныйОбороты.Поставщик";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПодготовитьТаблицыПоВидамРегистровНДС(РеестрСчетовФактур, Реквизиты) Экспорт

	Запрос = Новый Запрос;

	СостоянияПредъявленный = Новый СписокЗначений;
	СостоянияПредъявленный.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);
	СостоянияПредъявленный.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);

	Запрос.УстановитьПараметр("РеестрСчетовФактур", 	РеестрСчетовФактур);
    Запрос.УстановитьПараметр("Организация",        	Реквизиты.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур",		ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(РеестрСчетовФактур.ВыгрузитьКолонку("СчетФактура"), Истина));
	Запрос.УстановитьПараметр("СписокВидыЦенностей",	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(РеестрСчетовФактур.ВыгрузитьКолонку("ВидЦенности"), Истина));
	Запрос.УстановитьПараметр("СписокСтавкиНДС",		ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(РеестрСчетовФактур.ВыгрузитьКолонку("СтавкаНДС"), Истина));
	Запрос.УстановитьПараметр("СписокСчетаУчетаНДС",	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(РеестрСчетовФактур.ВыгрузитьКолонку("СчетУчетаНДС"), Истина));
	Запрос.УстановитьПараметр("СостоянияПредъявленный", СостоянияПредъявленный);
	Запрос.УстановитьПараметр("СостоянияОжидание", 		Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);
	Запрос.УстановитьПараметр("НачалоПериода",      	НачалоКвартала(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецПериода",       	Новый Граница(Реквизиты.Период, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("КонецПериодаДата",   	Реквизиты.Период);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеестрСчетовФактур.СчетФактура,
	|	РеестрСчетовФактур.СчетУчетаНДС,
	|	РеестрСчетовФактур.СтавкаНДС,
	|	РеестрСчетовФактур.СуммоваяРазница,
	|	РеестрСчетовФактур.ВидЦенности,
	|	РеестрСчетовФактур.ДоговорКонтрагента,
	|	РеестрСчетовФактур.Базис_БезНДС КАК БазисБезНДС,
	|	РеестрСчетовФактур.Базис_СНДС КАК БазисСНДС,
	|	РеестрСчетовФактур.Базис_НДС КАК БазисНДС,
	|	РеестрСчетовФактур.ЕстьКосвенныеРасходы,
	|	РеестрСчетовФактур.ЕстьОстаткиПоПартиям,
	|	РеестрСчетовФактур.ЕстьРеализация0,
	|	РеестрСчетовФактур.Косвенные_БезНДС,
	|	РеестрСчетовФактур.Косвенные_НДС,
	|	РеестрСчетовФактур.Партии_НДС,
	|	РеестрСчетовФактур.Партии_СНДС,
	|	РеестрСчетовФактур.Реализация0_БезНДС,
	|	РеестрСчетовФактур.Реализация0_НДС,
	|	РеестрСчетовФактур.СуммаБезНДС,
	|	РеестрСчетовФактур.НДС
	|ПОМЕСТИТЬ ВТРеестрСчетовФактур
	|ИЗ
	|	&РеестрСчетовФактур КАК РеестрСчетовФактур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТРеестрСчетовФактур.Косвенные_БезНДС * ВТРеестрСчетовФактур.СуммаБезНДС / ВТРеестрСчетовФактур.БазисБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВТРеестрСчетовФактур.Косвенные_НДС * ВТРеестрСчетовФактур.НДС / ВТРеестрСчетовФактур.БазисНДС) КАК НДС,
	|	ВТРеестрСчетовФактур.СчетФактура,
	|	ВТРеестрСчетовФактур.ВидЦенности,
	|	ВТРеестрСчетовФактур.СтавкаНДС,
	|	ВТРеестрСчетовФактур.СчетУчетаНДС
	|ИЗ
	|	ВТРеестрСчетовФактур КАК ВТРеестрСчетовФактур
	|ГДЕ
	|	ВТРеестрСчетовФактур.ЕстьКосвенныеРасходы = 1
	|	И ВТРеестрСчетовФактур.Косвенные_БезНДС * ВТРеестрСчетовФактур.СуммаБезНДС / ВТРеестрСчетовФактур.БазисБезНДС <> 0
	|	И ВТРеестрСчетовФактур.Косвенные_НДС * ВТРеестрСчетовФактур.НДС / ВТРеестрСчетовФактур.БазисНДС <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТРеестрСчетовФактур.СчетФактура,
	|	ВТРеестрСчетовФактур.ВидЦенности,
	|	ВТРеестрСчетовФактур.СтавкаНДС,
	|	ВТРеестрСчетовФактур.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТРеестрСчетовФактур.Партии_СНДС * ВТРеестрСчетовФактур.СуммоваяРазница / ВТРеестрСчетовФактур.БазисСНДС) КАК СуммаБезНДС,
	|	СУММА(ВТРеестрСчетовФактур.Партии_НДС * ВТРеестрСчетовФактур.НДС / ВТРеестрСчетовФактур.БазисНДС) КАК НДС,
	|	ВТРеестрСчетовФактур.СчетФактура,
	|	ВТРеестрСчетовФактур.ВидЦенности,
	|	ВТРеестрСчетовФактур.СтавкаНДС,
	|	ВТРеестрСчетовФактур.СчетУчетаНДС
	|ИЗ
	|	ВТРеестрСчетовФактур КАК ВТРеестрСчетовФактур
	|ГДЕ
	|	ВТРеестрСчетовФактур.ЕстьОстаткиПоПартиям = 1
	|	И ВТРеестрСчетовФактур.Партии_СНДС * ВТРеестрСчетовФактур.СуммоваяРазница / ВТРеестрСчетовФактур.БазисСНДС <> 0
	|	И ВТРеестрСчетовФактур.Партии_НДС * ВТРеестрСчетовФактур.НДС / ВТРеестрСчетовФактур.БазисНДС <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТРеестрСчетовФактур.СчетФактура,
	|	ВТРеестрСчетовФактур.ВидЦенности,
	|	ВТРеестрСчетовФактур.СтавкаНДС,
	|	ВТРеестрСчетовФактур.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТРеестрСчетовФактур.Реализация0_БезНДС * ВТРеестрСчетовФактур.СуммаБезНДС / ВТРеестрСчетовФактур.БазисБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВТРеестрСчетовФактур.Реализация0_НДС * ВТРеестрСчетовФактур.НДС / ВТРеестрСчетовФактур.БазисНДС) КАК НДС,
	|	ВТРеестрСчетовФактур.СчетФактура,
	|	ВТРеестрСчетовФактур.ВидЦенности,
	|	ВТРеестрСчетовФактур.СтавкаНДС,
	|	ВТРеестрСчетовФактур.СчетУчетаНДС
	|ИЗ
	|	ВТРеестрСчетовФактур КАК ВТРеестрСчетовФактур
	|ГДЕ
	|	ВТРеестрСчетовФактур.ЕстьРеализация0 = 1
	|	И ВТРеестрСчетовФактур.Реализация0_БезНДС * ВТРеестрСчетовФактур.СуммаБезНДС / ВТРеестрСчетовФактур.БазисБезНДС <> 0
	|	И ВТРеестрСчетовФактур.Реализация0_НДС * ВТРеестрСчетовФактур.НДС / ВТРеестрСчетовФактур.БазисНДС <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТРеестрСчетовФактур.СчетФактура,
	|	ВТРеестрСчетовФактур.ВидЦенности,
	|	ВТРеестрСчетовФактур.СтавкаНДС,
	|	ВТРеестрСчетовФактур.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&КонецПериодаДата КАК Период,
	|	НДСКосвенныеРасходыОбороты.Организация КАК Организация,
	|	НДСКосвенныеРасходыОбороты.СчетФактура КАК СчетФактура,
	|	НДСКосвенныеРасходыОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСКосвенныеРасходыОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСКосвенныеРасходыОбороты.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	НДСКосвенныеРасходыОбороты.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	НДСКосвенныеРасходыОбороты.НДСОборот КАК НДС
	|ПОМЕСТИТЬ ВТНДСКосвенныеРасходыОбороты
	|ИЗ
	|	РегистрНакопления.НДСКосвенныеРасходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И СтавкаНДС В (&СписокСтавкиНДС)
	|				И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСКосвенныеРасходыОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС,
	|	НДСВключенВСтоимость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&КонецПериодаДата КАК Период,
	|	&КонецПериодаДата КАК ДатаСобытия,
	|	НДСКосвенныеРасходыОбороты.Организация,
	|	НДСКосвенныеРасходыОбороты.СчетФактура,
	|	НДСКосвенныеРасходыОбороты.ВидЦенности,
	|	НДСКосвенныеРасходыОбороты.СтавкаНДС,
	|	НДСКосвенныеРасходыОбороты.СчетУчетаНДС,
	|	НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость,
	|	НДСКосвенныеРасходы.СуммаБезНДС,
	|	НДСКосвенныеРасходы.НДС,
	|	НДСКосвенныеРасходы.СтатьяЗатрат,
	|	НДСКосвенныеРасходы.СчетЗатрат,
	|	НДСКосвенныеРасходы.Субконто1,
	|	НДСКосвенныеРасходы.Субконто2,
	|	НДСКосвенныеРасходы.Субконто3
	|ИЗ
	|	ВТНДСКосвенныеРасходыОбороты КАК НДСКосвенныеРасходыОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСКосвенныеРасходы КАК НДСКосвенныеРасходы
	|		ПО НДСКосвенныеРасходыОбороты.Организация = НДСКосвенныеРасходы.Организация
	|			И НДСКосвенныеРасходыОбороты.СчетФактура = НДСКосвенныеРасходы.СчетФактура
	|			И НДСКосвенныеРасходыОбороты.ВидЦенности = НДСКосвенныеРасходы.ВидЦенности
	|			И НДСКосвенныеРасходыОбороты.СтавкаНДС = НДСКосвенныеРасходы.СтавкаНДС
	|			И НДСКосвенныеРасходыОбороты.СчетУчетаНДС = НДСКосвенныеРасходы.СчетУчетаНДС
	|			И НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость = НДСКосвенныеРасходы.НДСВключенВСтоимость
	|			И (НДСКосвенныеРасходы.Период >= &НачалоПериода)
	|			И (НДСКосвенныеРасходы.Период <= &КонецПериодаДата)
	|			И НДСКосвенныеРасходыОбороты.НДСВключенВСтоимость = НДСКосвенныеРасходы.НДСВключенВСтоимость
	|ГДЕ
	|	(НЕ(ЕСТЬNULL(НДСКосвенныеРасходыОбороты.СуммаБезНДС, 0) = 0
	|				И ЕСТЬNULL(НДСКосвенныеРасходыОбороты.НДС, 0) = 0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&КонецПериодаДата КАК Период,
	|	&КонецПериодаДата КАК ДатаСобытия,
	|	НДСПоПриобретеннымЦенностямОстатки.Организация,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетУчета,
	|	НДСПоПриобретеннымЦенностямОстатки.Номенклатура,
	|	НДСПоПриобретеннымЦенностямОстатки.Партия,
	|	НДСПоПриобретеннымЦенностямОстатки.Склад,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетФактура,
	|	НДСПоПриобретеннымЦенностямОстатки.НДСВключенВСтоимость,
	|	НДСПоПриобретеннымЦенностямОстатки.ВидЦенности,
	|	НДСПоПриобретеннымЦенностямОстатки.СчетУчетаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СтавкаНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.СтоимостьОстаток КАК СуммаБезНДС,
	|	НДСПоПриобретеннымЦенностямОстатки.НДСОстаток КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПоПриобретеннымЦенностям.Остатки(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И СтавкаНДС В (&СписокСтавкиНДС)
	|				И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСПоПриобретеннымЦенностямОстатки
	|ГДЕ
	|	(НЕ(ЕСТЬNULL(НДСПоПриобретеннымЦенностямОстатки.СтоимостьОстаток, 0) = 0
	|				И ЕСТЬNULL(НДСПоПриобретеннымЦенностямОстатки.НДСОстаток, 0) = 0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&КонецПериодаДата КАК Период,
	|	&КонецПериодаДата КАК ДатаСобытия,
	|	НДСПредъявленныйРеализация0Обороты.Организация,
	|	НДСПредъявленныйРеализация0Обороты.СчетФактура,
	|	НДСПредъявленныйРеализация0Обороты.Состояние,
	|	НДСПредъявленныйРеализация0Обороты.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Обороты.ВидЦенности,
	|	НДСПредъявленныйРеализация0Обороты.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС,
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход)
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход - НДСПредъявленныйРеализация0Обороты.СуммаБезНДСРасход)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.НДСПриход)
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.НДСПриход - НДСПредъявленныйРеализация0Обороты.НДСРасход)
	|	КОНЕЦ КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Обороты(
	|			,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И СтавкаНДС В (&СписокСтавкиНДС)
	|				И СчетУчетаНДС В (&СписокСчетаУчетаНДС)) КАК НДСПредъявленныйРеализация0Обороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйРеализация0Обороты.Организация,
	|	НДСПредъявленныйРеализация0Обороты.СчетФактура,
	|	НДСПредъявленныйРеализация0Обороты.Состояние,
	|	НДСПредъявленныйРеализация0Обороты.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Обороты.ВидЦенности,
	|	НДСПредъявленныйРеализация0Обороты.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Обороты.СчетУчетаНДС
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход)
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.СуммаБезНДСПриход - НДСПредъявленныйРеализация0Обороты.СуммаБезНДСРасход)
	|	КОНЕЦ <> 0 И
	|	ВЫБОР
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние В (&СостоянияПредъявленный)
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.НДСПриход)
	|		КОГДА НДСПредъявленныйРеализация0Обороты.Состояние = &СостоянияОжидание
	|			ТОГДА СУММА(НДСПредъявленныйРеализация0Обороты.НДСПриход - НДСПредъявленныйРеализация0Обороты.НДСРасход)
	|	КОНЕЦ <> 0";


	Результат = Запрос.ВыполнитьПакет();

	СтруктураТаблиц = Новый Структура;

	СтруктураТаблиц.Вставить("КосвенныеРасходы", 			Результат[1].Выгрузить());
	СтруктураТаблиц.Вставить("Партии",						Результат[2].Выгрузить());
	СтруктураТаблиц.Вставить("Реализация0",         		Результат[3].Выгрузить());
	СтруктураТаблиц.Вставить("КосвенныеРасходыОбороты",     Результат[5].Выгрузить());
	СтруктураТаблиц.Вставить("ПартииОбороты",			    Результат[6].Выгрузить());
	СтруктураТаблиц.Вставить("НДСПредъявленныйРеализация0", Результат[7].Выгрузить());

	СтруктураСкорректированныхТаблиц = Новый Структура();

	ТаблицаДанныхПартии = РаспределитьПоБазису(СтруктураТаблиц.Партии, СтруктураТаблиц.ПартииОбороты);
	ТаблицаДанныхПартии.Колонки.СуммаБезНДС.Имя = "Стоимость";

	СтруктураСкорректированныхТаблиц.Вставить("Партии", ТаблицаДанныхПартии);
	СтруктураСкорректированныхТаблиц.Вставить("КосвенныеРасходы", РаспределитьПоБазису(СтруктураТаблиц.КосвенныеРасходы, СтруктураТаблиц.КосвенныеРасходыОбороты));
	СтруктураСкорректированныхТаблиц.Вставить("НДСПредъявленныйРеализация0", РаспределитьПоБазису(СтруктураТаблиц.Реализация0, СтруктураТаблиц.НДСПредъявленныйРеализация0));

	Возврат СтруктураСкорректированныхТаблиц;

КонецФункции

Функция РаспределитьПоБазису(Источник, Базис) Экспорт

	Распределение = Новый Структура("СуммаБезНДС, НДС");
	Отбор         = Новый Структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");

	ТаблицаДанных = УчетНДС.СформироватьКорректирующиеЗаписи(Источник, Базис, Распределение, Отбор);

	СтрокиКУдалению = Новый Массив();

	Для каждого СтрокаДанных Из ТаблицаДанных Цикл
		Если СтрокаДанных.СуммаБезНДС = 0 И СтрокаДанных.НДС = 0 Тогда
			СтрокиКУдалению.Добавить(СтрокаДанных);
			Продолжить;
		КонецЕсли;
	КонецЦикла;

	Если СтрокиКУдалению.Количество() > 0 Тогда
		Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			ТаблицаДанных.Удалить(СтрокаКУдалению);
		КонецЦикла;
	КонецЕсли;

	Возврат ТаблицаДанных;

КонецФункции

//	ДВИЖЕНИЯ РЕГИСТРА "НДС НАЧИСЛЕННЫЙ"

Процедура СформироватьДвиженияНДСНачисленныйРеализацияТоваровУслуг(ТоварыУслуги, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйРеализацияТоваровУслуг(ТоварыУслуги, Реквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйОказаниеУслуг(ТоварыУслуги, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйОказаниеУслуг(ТоварыУслуги, Реквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйВозвратТоваровОтПокупателя(ДанныеДвижений, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйВозвратТоваровОтПокупателя(ДанныеДвижений, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйПолученныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйПолученныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйПолученныйАвансРасход(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйПолученныйАвансРасход(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйСуммовыеРазницы(ТаблицаСуммовыеРазницы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйСуммовыеРазницы(ТаблицаСуммовыеРазницы, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйРозничнаяПродажа(ТаблицаЦенности, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйРозничнаяПродажа(ТаблицаЦенности, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйНачисленНДСНалоговымАгентом(Реквизиты, ТаблицаАвансы, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйНачисленНДСНалоговымАгентом(Реквизиты, ТаблицаАвансы, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйНачислениеНДСПоРеализации(Реквизиты, ТаблицаПоРеализации, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйНачислениеНДСПоРеализации(Реквизиты, ТаблицаПоРеализации, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйСтавка0НеПодтверждена(Реквизиты, ТаблицаНДСНачисленный, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйСтавка0НеПодтверждена(Реквизиты, ТаблицаНДСНачисленный, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйСтавка0КурсоваяРазница(Реквизиты, ТаблицаДвижений, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйСтавка0КурсоваяРазница(Реквизиты, ТаблицаДвижений, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйНачислениеНДСпоСМРХозспособом(Реквизиты, СМРХозспособом, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСНачисленныйНачислениеНДСпоСМРХозспособом(Реквизиты, СМРХозспособом, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСНачисленныйРеализацияТоваровУслугКомитентаНерезидента(Реквизиты, ТаблицаДвижений, Движения, Отказ) Экспорт
	
	УчетНДСБП.СформироватьДвиженияНДСНачисленныйРеализацияТоваровУслугКомитентаНерезидента(Реквизиты, ТаблицаДвижений, Движения, Отказ);
	
КонецПроцедуры	

//	ДВИЖЕНИЯ РЕГИСТРА "НДС ПРЕДЪЯВЛЕННЫЙ, РЕАЛИЗАЦИЯ 0%"

Процедура СформироватьДвиженияНДСПредъявленныйРеализация0ВычетПоРеализации(ТаблицаДвижений, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСПредъявленныйРеализация0ВычетПоРеализации(ТаблицаДвижений, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСПредъявленныйРеализация0СнятиеБлокировкиВычета(Реквизиты, ТаблицаСнятиеБлокировкиВычета, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСПредъявленныйРеализация0СнятиеБлокировкиВычета(Реквизиты, ТаблицаСнятиеБлокировкиВычета, Движения, Отказ);

КонецПроцедуры

//	ДВИЖЕНИЯ РЕГИСТРА "НДС ПО ПРИОБРЕТЕННЫМ ЦЕННОСТЯМ"

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностямВозвратТоваровПокупателем(ТаблицаВозвращаемыеТовары, Реквизиты, Движения, Отказ) Экспорт
	
	УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямВозвратТоваровПокупателем(ТаблицаВозвращаемыеТовары, Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеТоваров(Товары, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеТоваров(Товары, Реквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностям(ТаблицаДвижений, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностям(ТаблицаДвижений, Движения, Отказ);

КонецПроцедуры

//	ДВИЖЕНИЯ РЕГИСТРА "НДС ПО КОСВЕННЫМ РАСХОДАМ"

Процедура СформироватьДвиженияНДСКосвенныеРасходыПоступлениеУслуг(РаспределеляемыеРасходы, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСКосвенныеРасходыПоступлениеУслуг(РаспределеляемыеРасходы, Реквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСКосвенныеРасходы(ТаблицаДвижений, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСКосвенныеРасходы(ТаблицаДвижений, Движения, Отказ);

КонецПроцедуры

//	ДВИЖЕНИЯ РЕГИСТРА "НДС С АВАНСОВ"

Процедура СформироватьДвиженияНДССАвансовВыданныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДССАвансовВыданныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДССАвансовВосстановлениеНДСВыданныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДССАвансовВосстановлениеНДСВыданныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСсАвансовПолученныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСсАвансовПолученныйАванс(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьДвиженияНДСсАвансовЗачетПолученногоАванса(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСсАвансовЗачетПолученногоАванса(ТаблицаРеквизиты, ТаблицаАвансов, Движения, Отказ);

КонецПроцедуры

//	ДВИЖЕНИЯ РЕГИСТРА БУХГАЛТЕРИИ

Процедура СформироватьПроводкиПоступлениеГТД(НомераГТД, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьПроводкиПоступлениеГТД(НомераГТД, Реквизиты, Движения, Отказ);

КонецПроцедуры

Процедура СформироватьПроводкиСписаниеГТД(Товары, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьПроводкиСписаниеГТД(Товары, Реквизиты, Движения, Отказ);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	ДВИЖЕНИЯ НДС ДОКУМЕНТА КОРРЕКТИРОВКА ПОСТУПЛЕНИЯ

Процедура СформироватьДвиженияКорректировкаНДСПоПартиямЗапасов(РеквизитыДокумента, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияКорректировкаНДСПоПартиямЗапасов(РеквизитыДокумента, Движения, Отказ);

КонецПроцедуры         

Процедура СформироватьДвиженияКорректировкаНДСКосвенныхРасходов(РеквизитыДокумента, ТаблицаКорректировкаНДСКосвенныхРасходов, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияКорректировкаНДСКосвенныхРасходов(РеквизитыДокумента, ТаблицаКорректировкаНДСКосвенныхРасходов, Движения, Отказ);
	
КонецПроцедуры	

Функция ПодготовитьТаблицуКоэффициентовКорректировкиПоступления(Реквизиты) Экспорт

	Возврат УчетНДСБП.ПодготовитьТаблицуКоэффициентовКорректировкиПоступления(Реквизиты);

КонецФункции

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ОпределитьРаспределеляемыеРасходы(ТаблицаРасходов) Экспорт

	Возврат УчетНДСБП.ОпределитьРаспределеляемыеРасходы(ТаблицаРасходов);

КонецФункции

// Функция возвращает ссылку на документ, который требуется записывать в измерение 
// СчетФактура регистров НДС.
//
Функция ПолучитьСчетФактуруДляЗаписиВРегистрыНДС(ИсходныйДокумент) Экспорт

	СчетФактура = Неопределено;

	Если ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.ОтражениеНДСКВычету") Тогда

		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, "РасчетныйДокумент, ИспользоватьДокументРасчетовКакСчетФактуру");
		
		Если РеквизитыИсходногоДокумента.ИспользоватьДокументРасчетовКакСчетФактуру Тогда
			
			Если ТипЗнч(РеквизитыИсходногоДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.СчетФактураВыданный")
				 ИЛИ ТипЗнч(РеквизитыИсходногоДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
				 ИЛИ ТипЗнч(РеквизитыИсходногоДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			
				СчетФактура = ПолучитьСчетФактуруДляЗаписиВРегистрыНДС(РеквизитыИсходногоДокумента.РасчетныйДокумент);
			
			Иначе
				
				СчетФактура = РеквизитыИсходногоДокумента.РасчетныйДокумент;
				
			КонецЕсли;
			
		Иначе // т.е. НЕ ИспользоватьДокументРасчетовКакСчетФактуру
		
			СчетФактура = ИсходныйДокумент;
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.ОтражениеНачисленияНДС") Тогда
	
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, 
			"РасчетныйДокумент, ИспользоватьДокументРасчетовКакСчетФактуру");
		Если РеквизитыИсходногоДокумента.ИспользоватьДокументРасчетовКакСчетФактуру Тогда
			СчетФактура = РеквизитыИсходногоДокумента.РасчетныйДокумент;
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, 
			"ДокументОснование, ВидСчетаФактуры");
		Если РеквизитыИсходногоДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс Тогда
			СчетФактура = РеквизитыИсходногоДокумента.ДокументОснование;
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
	
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, 
			"ДокументОснование, ВидСчетаФактуры");
		Если РеквизитыИсходногоДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс
			ИЛИ РеквизитыИсходногоДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда
			
			СчетФактура = РеквизитыИсходногоДокумента.ДокументОснование;
			
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
				
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент,
			"ПокупателемВыставляетсяСчетФактураНаВозврат, Сделка");
		Если РеквизитыИсходногоДокумента.ПокупателемВыставляетсяСчетФактураНаВозврат Тогда
			СчетФактура = РеквизитыИсходногоДокумента.Сделка;
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
		
	Иначе
	
		СчетФактура = ИсходныйДокумент;
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда
		СчетФактура = ИсходныйДокумент;
	КонецЕсли;

	Возврат СчетФактура;

КонецФункции

// Функция возращает Истина, если для переданных СчетаФактуры и ВидаЦенности
// необходимо указание контрагента при записи в регистры НДС.
//
Функция НеобходимоУказаниеКонтрагентаДляСчетаФактуры(СчетФактура, ВидЦенности) Экспорт

	ТипСФ = ТипЗнч(СчетФактура);
	Если ВидЦенности = Перечисления.ВидыЦенностей.ВнутреннееПотребление
		ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.СМРСобственнымиСилами
		ИЛИ ТипСФ = Тип("ДокументСсылка.ОтчетОРозничныхПродажах")
		ИЛИ (ТипСФ = Тип("ДокументСсылка.ПриходныйКассовыйОрдер")
		И НЕ (ВидЦенности = Перечисления.ВидыЦенностей.АвансыПолученные 
		ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.АвансыПолученные0
		ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.ВозвратАвансовПолученных
		ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате))	Тогда
		
		Возврат Ложь;
		
	Иначе
		Возврат Истина;
	КонецЕсли; 

КонецФункции // НеобходимоУказаниеКонтрагентаДляСчетаФактуры()

// Функция возвращает признак ведения учета по постановлению Правительства РФ № 1137 от 26.12.2011
//
Функция ИспользуетсяПостановлениеНДС1137(Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ИспользуетсяПостановлениеНДС1137", 
		Новый Структура("Период", НачалоДня(Период)));

	Возврат Результат;

КонецФункции

// Возвращает версию постановления Правительства РФ от 26.12.2011 г. № 1137
//
// Параметры
// 	Период  - 	тип дата, в данном параметре передается
//            	дата на которую необходимо определить версию постановления
// Возвращаемое значение:
//  Число   - 	версия постановления, 
//				1 - исходная версия постановления Правительства РФ от 26.12.2011 г. № 1137
//              2 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 952
//              3 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 735
//
Функция ВерсияПостановленияНДС1137(Период) Экспорт
	
	Если Период >= '20141001' Тогда 		// Постановление № 735 вступает в силу с 1 октября 2014 года.
		Возврат 3;
	ИначеЕсли Период >= '20131106' Тогда 	// Постановление № 952 вступает в силу с 6 ноября 2013 года.
		Возврат 2;
	Иначе
		Возврат 1;                          // Исходная версия Постановления Правительства РФ от 26.12.2011 г. № 1137.
	КонецЕсли;
	
КонецФункции

// Определяет наличие соглашения с контрагентом, на электронный обмен документами
//
Функция НаличиеСоглашенияОбменаЭД(СсылкаНаВладельца) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭД")
		ИЛИ НЕ ЗначениеЗаполнено(СсылкаНаВладельца) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПараметрыЭД = Новый Структура("ВидЭд,НаправлениеЭД,Организация,Контрагент");
	
	ЗаполнитьЗначенияСвойств(ПараметрыЭД, СсылкаНаВладельца);
	
	ПараметрыЭД.ВидЭД         = Перечисления.ВидыЭД.СчетФактура;
	ПараметрыЭД.НаправлениеЭД = Перечисления.НаправленияЭД.Исходящий;

	Результат = ЭлектронныеДокументыСлужебный.ОпределитьНастройкиОбменаЭД(ПараметрыЭД);
	
	Возврат ЗначениеЗаполнено(Результат);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	ОТПРАВКА ДОКУМЕНТОВ НДС В НАЛОГОВЫЕ ОРГАНЫ

Функция СформироватьЭлектронныеДокументы(ВыгружаемыеДокументы, УникальныйИдентификатор = Неопределено) Экспорт
	
	Если УникальныйИдентификатор = Неопределено Тогда
		УникальныйИдентификатор = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Результат = Новый Соответствие;
	
	Для Каждого ВыгружаемыйДокумент Из ВыгружаемыеДокументы Цикл
		
		ЭтоДокументРегистраУчетаНДС = (ВыгружаемыйДокумент.Метаданные().Имя = "КнигаПокупокДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "КнигаПродажДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "ДопЛистКнигиПокупокДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "ДопЛистКнигиПродажДляПередачиВЭлектронномВиде"
		                           ИЛИ ВыгружаемыйДокумент.Метаданные().Имя = "ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
		Если ЭтоДокументРегистраУчетаНДС Тогда
			ОбъектВыгрузки = ВыгружаемыйДокумент.ПолучитьОбъект();
			ФайлыВыгрузки = ОбъектВыгрузки.ВыгрузитьДокумент(УникальныйИдентификатор);
			
			МассивВыгрузки = Новый Массив;
			Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
				
				ЭлементВыгрузки = Новый Структура;
				ЭлементВыгрузки.Вставить("ТипФайла", "ФайлВыгрузки");
				ЭлементВыгрузки.Вставить("ИмяФайла", ФайлВыгрузки.ИмяФайлаВыгрузки);
				ЭлементВыгрузки.Вставить("АдресВременногоХранилища", ФайлВыгрузки.АдресФайлаВыгрузки);
				
				МассивВыгрузки.Добавить(ЭлементВыгрузки);
			КонецЦикла;
			
			Результат.Вставить(ВыгружаемыйДокумент, МассивВыгрузки);
			
		Иначе
			Результат.Вставить(ВыгружаемыйДокумент, Неопределено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////
// РАБОТА СО СЧЕТАМИ-ФАКТУРАМИ

Функция СоздатьСчетФактуруВыданныйНаОсновании(Основание) Экспорт
	
	Возврат Документы.СчетФактураВыданный.СоздатьДокументНаОсновании(Основание);
	
КонецФункции

Функция СоздатьСчетФактуруПолученныйНаОсновании(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного, Продавец = Неопределено) Экспорт
	
	Возврат Документы.СчетФактураПолученный.СоздатьДокументНаОсновании(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного, Продавец);
	
КонецФункции

Функция СоздатьСчетФактуруНаОснованииИсправления(Основание, НомерИсправления, ДатаИсправления) Экспорт

	Возврат Документы.СчетФактураПолученный.СоздатьДокументНаОснованииИсправления(Основание, НомерИсправления, ДатаИсправления);

КонецФункции // СоздатьСчетФактуруНаОснованииИсправления()
 

// Функция производит поиск счета-фактуры полученного по реквизитам
// Параметры:
//  РеквизитыСчетаФактуры - структура с реквизитами счета-фактуры полученного,
//                          структура должна обязательно содержать поля Организация, Контрагент, НомерСчетаФактуры, ДатаСчетаФактуры
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиСчетФактуруПолученный(РеквизитыСчетаФактуры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Организация", РеквизитыСчетаФактуры.Организация);
	Запрос.Параметры.Вставить("Контрагент",  РеквизитыСчетаФактуры.Контрагент);
	Запрос.Параметры.Вставить("НомерСчетаФактурыПолученного", РеквизитыСчетаФактуры.НомерСчетаФактурыПолученного);
	Запрос.Параметры.Вставить("ДатаСчетаФактурыПолученного", РеквизитыСчетаФактуры.ДатаСчетаФактурыПолученного);
	
	Продавец = ?(РеквизитыСчетаФактуры.Свойство("Продавец"), РеквизитыСчетаФактуры.Продавец, Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Параметры.Вставить("Продавец", Продавец);
	Запрос.Параметры.Вставить("БланкСтрогойОтчетности", ?(РеквизитыСчетаФактуры.Свойство("БланкСтрогойОтчетности"), РеквизитыСчетаФактуры.БланкСтрогойОтчетности, Ложь));
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ВидСчетаФактуры В (ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление), ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный))
	|	И СчетФактураПолученный.Организация = &Организация
	|	И СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Продавец = &Продавец
	|	И СчетФактураПолученный.НомерВходящегоДокумента = &НомерСчетаФактурыПолученного
	|	И СчетФактураПолученный.ДатаВходящегоДокумента = &ДатаСчетаФактурыПолученного
	|	И СчетФактураПолученный.БланкСтрогойОтчетности = &БланкСтрогойОтчетности";
	
	
	Если РеквизитыСчетаФактуры.Свойство("ДоговорКонтрагента") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И СчетФактураПолученный.ДоговорКонтрагента = &ДоговорКонтрагента";
		Запрос.Параметры.Вставить("ДоговорКонтрагента", РеквизитыСчетаФактуры.ДоговорКонтрагента);
	КонецЕсли;
	
	Если РеквизитыСчетаФактуры.Свойство("Исправление") 
		И РеквизитыСчетаФактуры.Исправление = Истина Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И СчетФактураПолученный.Исправление = ИСТИНА
		|	И СчетФактураПолученный.НомерИсправления = &НомерИсправления
		|	И СчетФактураПолученный.ДатаИсправления = &ДатаИсправления";
		Запрос.Параметры.Вставить("Исправление", Истина);
		Запрос.Параметры.Вставить("НомерИсправления", РеквизитыСчетаФактуры.НомерИсправления);
		Запрос.Параметры.Вставить("ДатаИсправления", РеквизитыСчетаФактуры.ДатаИсправления);
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	И СчетФактураПолученный.Исправление = ЛОЖЬ";
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


//////////////////////////////////////////////////////////////////////////
// ПОМОЩНИК ПО УЧЕТУ НДС

// Функция возвращает ИСТИНА, если из отчетов НДС необходимо открывать помощник.
//
// Параметры:
//    Организация - СправочникСсылка.Организации, организация по которой строится отчет
//    Период - Дата налогового периода, за который строится отчет
//
// Возвращаемое значение:
//    Булево
//
Функция ОткрыватьПомощникИзМакета(Организация, Период) Экспорт
	
	ВыполненыРегламентныеОперацииПоНДС = РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.ВсеРегламентныеОперацииНДСВыполнены(Организация, Период);
	ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Организация, Период);
	
	Возврат ПлательщикНДС И НЕ ВыполненыРегламентныеОперацииПоНДС;
	
КонецФункции

// Функция возвращает макет для помощника по НДС.
//
// Параметры:
//    Организация - СправочникСсылка.Организации, организация по которой строится отчет
//    Период - Дата налогового периода, за который строится отчет
//
// Возвращаемое значение:
//    Табличный документ с макетом
//
Функция ПолучитьМакетОткрытияПомощника(Организация, Период) Экспорт
	
	Возврат Обработки.ПомощникПоУчетуНДС.ПолучитьМакетОткрытияПомощника(Организация, Период);
	
КонецФункции

Функция ПолучитьСписокТиповПоВидуСчетаФактурыПолученного(ВидСчетаФактурыСписка, ЭтоИсправление = Ложь, НаАвансДляКомитентаНаЗакупку = Ложь) Экспорт
	
	СписокТипов = Новый Массив;
	
	Если ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыПолученного.НаПоступление Тогда 
		
		Если ЭтоИсправление Тогда
			СписокТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
		Иначе
			СписокТипов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионераОПродажах"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ОтчетКомитентуОПродажах"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ПоступлениеИзПереработки"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ПоступлениеДопРасходов"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ПоступлениеНМА"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
			СписокТипов.Добавить(Тип("ДокументСсылка.ОтражениеНДСКВычету"));
		КонецЕсли;
  
	ИначеЕсли ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыПолученного.НаАванс 
		ИЛИ ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда 
		
		СписокТипов.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
		СписокТипов.Добавить(Тип("ДокументСсылка.СписаниеСРасчетногоСчета"));
		СписокТипов.Добавить(Тип("ДокументСсылка.КорректировкаДолга"));
		СписокТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
		СписокТипов.Добавить(Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом"));
		СписокТипов.Добавить(Тип("ДокументСсылка.ОтчетКомитентуОПродажах"));
		СписокТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
		
	ИначеЕсли ВидСчетаФактурыСписка = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда 
		
		СписокТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
				
	КонецЕсли;
	
	Возврат СписокТипов;
	
КонецФункции

// Функция находит и возвращает последнее испраление счета-фактуры выданного
// либо исходный документ, если счет-фактура не исправлялся
Функция ПолучитьПоследнееИсправлениеСчетаФактурыВыданного(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсправляемыйДокумент", ДокументСсылка);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ИсправляемыйСчетФактура = &ИсправляемыйДокумент
	|	И СчетФактураВыданный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураВыданный.Исправление = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураВыданный.НомерИсправления УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ДокументСсылка;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.СчетФактура;
	КонецЕсли;
		
КонецФункции

// Функция находит и возвращает последнее испраление счета-фактуры полученного
// либо исходный документ, если счет-фактура не исправлялся
Функция ПолучитьПоследнееИсправлениеСчетаФактурыПолученного(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсправляемыйДокумент", ДокументСсылка);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ИсправляемыйСчетФактура = &ИсправляемыйДокумент
	|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.Исправление = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураПолученный.НомерИсправления УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ДокументСсылка;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.СчетФактура;
	КонецЕсли;
		
КонецФункции

//////////////////////////////////////////////////////////////////////////
// РАБОТА С КНИГАМИ ПОКУПОК И ПРОДАЖ

Процедура ПодготовитьПараметрыКнигиПокупок(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Если УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(ПараметрыОтчета.КонецПериода) Тогда  
		Отчеты.КнигаПокупок.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);	
	Иначе
		УчетНДСБП.СформироватьОтчетКнигаПокупок914(ПараметрыОтчета, АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьПараметрыКнигиПродаж(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Если УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(ПараметрыОтчета.КонецПериода) Тогда  
		Отчеты.КнигаПродаж.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	Иначе
		УчетНДСБП.СформироватьОтчетКнигаПродаж914(ПараметрыОтчета, АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// РАБОТА С ЖУРНАЛОМ УЧЕТА СЧЕТОВ-ФАКТУР

Процедура ПодготовитьПараметрыЖурналаУчетаСчетовФактур (ПараметрыОтчета, АдресХранилища) Экспорт
	
	Если УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(ПараметрыОтчета.НалоговыйПериод) Тогда  
		Отчеты.ЖурналУчетаСчетовФактур.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	Иначе
		УчетНДСБП.СформироватьОтчетЖурналУчетаСчетовФактур914(ПараметрыОтчета, АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

// ПОСТУПЛЕНИЕ ТОВАРОВ И УСЛУГ

Процедура СформироватьДвиженияОприходованиеТоваров(ТаблицаТовары, Реквизиты, Движения, Отказ) Экспорт
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если РаздельныйУчетНДСНаСчете19 Тогда
		
		УчетНДСРаздельный.СформироватьДвиженияНДСРаздельныйУчетОприходованиеТоваров(ТаблицаТовары, Реквизиты, Движения, Отказ);
		
	Иначе
		
		УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямОприходованиеТоваров(ТаблицаТовары, Реквизиты, Движения, Отказ);
		
	КонецЕсли;

	
КонецПроцедуры

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеИзНТТ(Товары, Реквизиты, Движения, Отказ) Экспорт
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);	
	
	Если РаздельныйУчетНДСНаСчете19 Тогда
		
		УчетНДСРаздельный.СформироватьДвиженияНДСРаздельныйУчетПоступлениеИзНТТ(Товары, Реквизиты, Движения, Отказ);

	Иначе
	
		УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеИзНТТ(Товары, Реквизиты, Движения, Отказ);

	КонецЕсли;
	
	
КонецПроцедуры

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеНаДругойСклад(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ) Экспорт

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		
		УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеНаДругойСклад(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияКомплектацияТоваров(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, Реквизиты, Движения, Отказ) Экспорт
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		
		СписанныеПартииНДС = УчетНДСБП.ПолучитьТаблицуСписанныеПартииНДС(
			ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, Реквизиты, Отказ);
		УчетНДСБП.СформироватьДвиженияВыбытиеТоваров(
			СписанныеПартииНДС, ТаблицаСписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеКомплекта(
			СписанныеПартииНДС, Реквизиты, Движения, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияРазукомплектацияТоваров(ТаблицаКомплектующие, ТаблицаКомплектующиеБухУчет, ТаблицаСписанныеТоварыБухУчет, Реквизиты, Движения, Отказ) Экспорт
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		
		ТаблицаКомплекта = ТаблицаКомплектующие.СкопироватьКолонки();
		НоваяСтрока = ТаблицаКомплекта.Добавить();
		НоваяСтрока.ИмяСписка    = "Комплектующие";
		НоваяСтрока.Номенклатура = Реквизиты.Комплект;
		НоваяСтрока.Количество   = Реквизиты.КоличествоКомплектов;
		НоваяСтрока.СчетУчета    = Реквизиты.СчетУчетаКомплектов;
		НоваяСтрока.НомерСтрокиДокумента = 1;
		
		СписанныеПартииНДС = УчетНДСБП.ПолучитьТаблицуСписанныеПартииНДС(
			ТаблицаКомплекта, ТаблицаКомплектующиеБухУчет, Реквизиты, Отказ);
			
		СписанныеПартииНДС.Свернуть("ВидЦенности, ДатаСобытия, Номенклатура, Организация, Партия, Период, СтавкаНДС, 
			| СтавкаНДСДокумента, СчетУчета, СчетУчетаНДС, СчетФактура, НДСБылВключенВСтоимость, НДСВключенВСтоимость, 
			| ИмяСписка, НомерСтрокиДокумента, Склад", 
			"Количество, НДС, Стоимость, СтоимостьСписанияНаРасходы, НДССписанияНаРасходы, 
			|СтрокаКУменьшениюВычетаПриВключенииВСтоимость, СтрокаКВосстановлениюПриВключенииВСтоимость");
			
		УчетНДСБП.СформироватьДвиженияВыбытиеТоваров(
			СписанныеПартииНДС, ТаблицаСписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеКомплектующих(
			ТаблицаКомплектующие, СписанныеПартииНДС, Реквизиты, Движения, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

// ВОЗВРАТ ТОВАРОВ ОТ ПОКУПАТЕЛЯ

Процедура СформироватьДвиженияВозвратТоваровОтПокупателя(ТаблицаВозвращаемыеТовары, Реквизиты, Движения, Отказ) Экспорт
	
	УчетНДСРаздельный.СформироватьДвиженияВозвратТоваровОтПокупателя(ТаблицаВозвращаемыеТовары, Реквизиты, Движения, Отказ);	
	
КонецПроцедуры

// ВОЗВРАТ ТОВАРОВ КОМИССИОНЕРУ

Процедура СформироватьДвиженияВозвратТоваровКомиссионеру(ТаблицаВозвращаемыеТовары, Реквизиты, Движения, Отказ) Экспорт
	
	УчетНДСРаздельный.СформироватьДвиженияВозвратТоваровКомиссионеру(ТаблицаВозвращаемыеТовары, Реквизиты, Движения, Отказ);	
	
КонецПроцедуры


// РАСПРЕДЕЛЕНИЕ НДС

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеОтгруженныхТоваров(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ) Экспорт

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		
		УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямПоступлениеОтгруженныхТоваров(СписанныеПартииНДС, СписанныеТоварыБухУчет, Движения, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияНДСКосвенныеРасходыСписаниеТоваровНаРасходы(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ) Экспорт
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
	
		УчетНДСБП.СформироватьДвиженияНДСКосвенныеРасходыСписаниеТоваровНаРасходы(СписанныеПартииНДС, СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияНДСКосвенныеРасходыПередачаМатериаловВЭксплуатацию(СписанныеПартииНДС, ТаблицаМатериалы, Реквизиты, Движения, Отказ) Экспорт
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		
		ТаблицаОтражениеРасходов = УчетНДСБП.ПодготовитьТаблицуОтражениеРасходовПередачаМатериаловВЭксплуатацию(ТаблицаМатериалы);
		УчетНДСБП.СформироватьДвиженияНДСКосвенныеРасходыПередачаМатериаловВЭксплуатацию(
			СписанныеПартииНДС, ТаблицаОтражениеРасходов, Реквизиты, Движения, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

//	ДВИЖЕНИЯ РЕГИСТРА "НДС РАЗДЕЛЬНЫЙ УЧЕТ"

Процедура СформироватьПроводкиВычетНДСПоТоварамРеализованнымПоСтавке0(ДанныеДвижений, Движения, Отказ) Экспорт
	
	УчетНДСРаздельный.СформироватьПроводкиВычетНДСПоТоварамРеализованнымПоСтавке0(ДанныеДвижений, Движения, Отказ);
	
КонецПроцедуры

// Процедура обрабатывает записи учетоной политики 
// Для элементов регистра сведений "Учетная политика организации", у которых ресурс "СложныйУчетНДС" имеет значение "Истина",
// а ресурс "РаздельныйУчетНДСДо2014Года" имеет значение "Ложь" ресурс "РаздельныйУчетНДСДо2014Года" устанавливается в значение "Истина"
Процедура ОбработатьУчетнуюПолитикуРаздельныйУчетНДСДо2014Года() Экспорт

	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УчетнаяПолитикаОрганизаций.СложныйУчетНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|ГДЕ
	|	УчетнаяПолитикаОрганизаций.СложныйУчетНДС
	|	И НЕ УчетнаяПолитикаОрганизаций.РаздельныйУчетНДСДо2014Года";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		НаборЗаписей = РегистрыСведений.УчетнаяПолитикаОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		
		Для каждого СтрокаЗаписи Из НаборЗаписей Цикл
		
			Если СтрокаЗаписи.СложныйУчетНДС И НЕ СтрокаЗаписи.РаздельныйУчетНДСДо2014Года Тогда
				СтрокаЗаписи.РаздельныйУчетНДСДо2014Года = Истина;
			КонецЕсли; 
		
		КонецЦикла; 
		
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьДвиженияНДСПоПриобретеннымЦенностямВвозТоваровИзТаможенногоСоюза(Товары, Реквизиты, Движения, Отказ) Экспорт

	УчетНДСБП.СформироватьДвиженияНДСПоПриобретеннымЦенностямВвозТоваровИзТаможенногоСоюза(Товары, Реквизиты, Движения, Отказ);

КонецПроцедуры
