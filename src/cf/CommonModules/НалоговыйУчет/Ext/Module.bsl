////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ИспользуютсяСпециальныеНалоговыеРежимы() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД") 
		Или ПолучитьФункциональнуюОпцию("ИспользуетсяУСНПатент");
		
КонецФункции

// ПРОВОДКИ

// Процедура устанавливает в проводке суммы НУ,ПР,ВР в зависимости от признака ведения налогового учета на счете
//
Процедура ЗаполнитьНалоговыеСуммыПроводки(СуммаНУДт = 0, СуммаНУКт = 0,
			СуммаПРДт = 0, СуммаПРКт = 0, СуммаВРДт = 0, СуммаВРКт = 0, Проводка, ЕстьРазницы = Истина) Экспорт
	
	Если Проводка.СчетДт.НалоговыйУчет Тогда
		Проводка.СуммаНУДт = СуммаНУДт;
		
		Если ЕстьРазницы Тогда
			Проводка.СуммаПРДт = СуммаПРДт;
			Проводка.СуммаВРДт = СуммаВРДт;
		КонецЕсли;
		
	Иначе
		Проводка.СуммаНУДт = 0;	
		Проводка.СуммаПРДт = 0;
		Проводка.СуммаВРДт = 0;	
	КонецЕсли;
	
	Если Проводка.СчетКт.НалоговыйУчет Тогда
		Проводка.СуммаНУКт = СуммаНУКт;
		
		Если ЕстьРазницы Тогда
			Проводка.СуммаПРКт = СуммаПРКт;
			Проводка.СуммаВРКт = СуммаВРКт;
		КонецЕсли;
		
	Иначе
		Проводка.СуммаНУКт = 0;	
		Проводка.СуммаПРКт = 0;
		Проводка.СуммаВРКт = 0;	
	КонецЕсли;
	
КонецПроцедуры

// Формирует проводки, отражающие списание косвенных расходов
// (включение косвенных расходов в уменьшение налогооблагаемой прибыли)
Процедура ПроводкиПоКосвеннымРасходам(Проводки, Выборка, Сумма, СчетДт,
			СтруктураШапкиДокумента, СтруктураДопПараметров, АналитикаПоНомГруппам = Ложь) Экспорт
	
	ПоддержкаПБУ18				= УчетнаяПолитика.ПоддержкаПБУ18(СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.КонДата);
	ПлательщикНалогаНаПрибыль	= УчетнаяПолитика.ПлательщикНалогаНаПрибыль(СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.КонДата);
	
	Если Не ПлательщикНалогаНаПрибыль Тогда
		Сумма.СуммаНУ = 0;
		Сумма.СуммаПР = 0;
		Сумма.СуммаВР = 0;
	КонецЕсли;
	
	Если Не ПоддержкаПБУ18 Тогда
		Сумма.СуммаПР = 0;
		Сумма.СуммаВР = 0;
	КонецЕсли;
	
	Если Сумма.СуммаБУ = 0 И Сумма.СуммаНУ = 0 И Сумма.СуммаПР = 0 И Сумма.СуммаВР = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Проводка = Проводки.Добавить();
	
	Проводка.Период       = СтруктураШапкиДокумента.Дата;
	Проводка.Организация  = СтруктураШапкиДокумента.Организация;
	
	Проводка.СчетДт       = СчетДт; 
	Если АналитикаПоНомГруппам Тогда
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НоменклатурныеГруппы", Выборка.НоменклатурнаяГруппа);
	КонецЕсли;
	
	Проводка.СчетКт       = Выборка.Счет;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтатьиЗатрат", Выборка.СтатьяЗатрат);
	Если АналитикаПоНомГруппам Тогда
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НоменклатурныеГруппы", Выборка.НоменклатурнаяГруппа);
	КонецЕсли;
	
	БухгалтерскийУчет.УстановитьПодразделенияПроводки(
		Проводка, Выборка.Подразделение, Выборка.Подразделение);
	
	Проводка.Содержание = НСтр("ru = 'Закрытие счетов косвенных расходов'");
	
	Проводка.Сумма = Сумма.СуммаБУ;
	СуммаНУ        = Сумма.СуммаНУ;
	СуммаПР        = Сумма.СуммаПР;
	СуммаВР        = Сумма.СуммаВР;
	
	ЗаполнитьНалоговыеСуммыПроводки(СуммаНУ, СуммаНУ, СуммаПР, СуммаПР, СуммаВР, СуммаВР, Проводка, ПоддержкаПБУ18); 
	
КонецПроцедуры

Функция ЭтоПроводкаПоНачислениюНДС(Проводка) Экспорт
	
	// Рассматриваем только проводки вида Дт 91 Кт 68,
	// потому что на счете 90 есть отдельный субсчет, на котором не ведется налоговый учет.
	
	СчетДт = Проводка.СчетДт;
	СчетКт = Проводка.СчетКт;
	
	Если Не (СчетКт = ПланыСчетов.Хозрасчетный.НДСНачисленныйПоОтгрузке
		Или БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СчетКт, ПланыСчетов.Хозрасчетный.НДС)) Тогда
		// Это заведомо не начисление НДС
		Возврат Ложь;
	КонецЕсли;
		
	Если Не БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СчетДт, ПланыСчетов.Хозрасчетный.ПрочиеРасходы) Тогда
		// Рассматриваем только проводки вида Дт 91 Кт 68,
		// потому что на счете 90 есть отдельный субсчет, на котором не ведется налоговый учет.
		Возврат Ложь;
	КонецЕсли;
	
	// Как правило, проводка Дт 91 Кт 68 начисляет НДС,
	// но есть исключения:
	Для Каждого Субконто Из Проводка.СубконтоДт Цикл
		Если ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы")
			И (Субконто.Значение.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ Или
			  Субконто.Значение.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд)Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Это не исключение
	Возврат Истина;
	
КонецФункции

Функция ЭтоПроводкаДоходыНеУчитываемыеДляНалогаНаПрибыль(СчетКт, СубконтоКт) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетКт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ СчетКт.НалоговыйУчет Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СубконтоКт.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СчетКт, ПланыСчетов.Хозрасчетный.ПрочиеДоходы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Субконто Из СубконтоКт Цикл
		
		Если Субконто.Ключ = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы Тогда 

			Если НЕ НалоговыйУчетПовтИсп.ВидДоходовРасходовУчитывается(Субконто.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоПроводкаРасходыНеУчитываемыеДляНалогаНаПрибыль(СчетДт, СубконтоДт) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетДт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ СчетДт.НалоговыйУчет Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СубконтоДт.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СчетДт, ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Субконто Из СубконтоДт Цикл
		
		Если Субконто.Ключ = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы Тогда 
			
			Если Не НалоговыйУчетПовтИсп.ВидДоходовРасходовУчитывается(Субконто.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		ИначеЕсли Субконто.Ключ = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда 
			
			Если Не НалоговыйУчетПовтИсп.СтатьяЗатратУчитывается(Субконто.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ЭтоНепринимаемыйРасходНУ(СубконтоНУ1, СубконтоНУ2, СубконтоНУ3) Экспорт
	
	СтатьяЗатрат1 = СубконтоНУ1;
	СтатьяЗатрат2 = СубконтоНУ2;
	СтатьяЗатрат3 = СубконтоНУ3;
	
	НеПринимаемыйРасход = Ложь;
	
	Если ТипЗнч(СтатьяЗатрат1) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		НеПринимаемыйРасход = НЕ СтатьяЗатрат1.ЭтоГруппа
			И СтатьяЗатрат1.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения
			И СтатьяЗатрат1.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
	ИначеЕсли ТипЗнч(СтатьяЗатрат2) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		НеПринимаемыйРасход = НЕ СтатьяЗатрат2.ЭтоГруппа
			И СтатьяЗатрат2.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения
			И СтатьяЗатрат2.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
	ИначеЕсли ТипЗнч(СтатьяЗатрат3) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		НеПринимаемыйРасход = НЕ СтатьяЗатрат3.ЭтоГруппа
			И СтатьяЗатрат3.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения
			И СтатьяЗатрат3.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
	ИначеЕсли ТипЗнч(СтатьяЗатрат1) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		НеПринимаемыйРасход = НЕ СтатьяЗатрат1.ЭтоГруппа
			И СтатьяЗатрат1.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения
			И НЕ СтатьяЗатрат1.ПринятиеКналоговомуУчету;
	ИначеЕсли ТипЗнч(СтатьяЗатрат2) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		НеПринимаемыйРасход = НЕ СтатьяЗатрат2.ЭтоГруппа
			И СтатьяЗатрат2.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения
			И НЕ СтатьяЗатрат2.ПринятиеКналоговомуУчету;
	ИначеЕсли ТипЗнч(СтатьяЗатрат3) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		НеПринимаемыйРасход = НЕ СтатьяЗатрат3.ЭтоГруппа
			И СтатьяЗатрат3.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения
			И НЕ СтатьяЗатрат3.ПринятиеКналоговомуУчету;
	КонецЕсли;
	
	Возврат НеПринимаемыйРасход;
	
КонецФункции

Функция ЭтоРасходНаАмортизацию(СубконтоНУ1, СубконтоНУ2, СубконтоНУ3) Экспорт
	
	РасходНаАмортизацию = Ложь;
	
	Если ТипЗнч(СубконтоНУ1) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		РасходНаАмортизацию = НЕ СубконтоНУ1.ЭтоГруппа
			И СубконтоНУ1.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.Амортизация;
	ИначеЕсли ТипЗнч(СубконтоНУ2) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		РасходНаАмортизацию = НЕ СубконтоНУ2.ЭтоГруппа
			И СубконтоНУ2.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.Амортизация;
	ИначеЕсли ТипЗнч(СубконтоНУ3) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		РасходНаАмортизацию = НЕ СубконтоНУ3.ЭтоГруппа
			И СубконтоНУ3.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.Амортизация;
	КонецЕсли;
		
	Возврат РасходНаАмортизацию;	
			
КонецФункции

// Функция анализирует аналитику затрат по кредиту проводки.
// Если статья затрат не принимаемая к НУ, то возвращаемое значение "истина"
//
Функция ОпределитьНеПринимаемыеДоходы(Проводка) Экспорт
	
	Если Проводка.СчетКт <> ПланыСчетов.Хозрасчетный.ПустаяСсылка() 
		И БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Проводка.СчетКт, ПланыСчетов.Хозрасчетный.ПрочиеДоходы) Тогда
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			Если ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				РеквизитыСубконто = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Субконто.Значение, "ЭтоГруппа,ПринятиеКналоговомуУчету");
				Если Не РеквизитыСубконто.ЭтоГруппа
					И Субконто.Значение <> Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка() 
					И НЕ РеквизитыСубконто.ПринятиеКналоговомуУчету Тогда
					Возврат  Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Функция анализирует аналитику затрат по дебету проводки.
// Если статья затрат не принимаемая к НУ, то возвращаемое значение "истина"
//
Функция ОпределитьНеПринимаемыеРасходы(Проводка) Экспорт
	
	// Расходы на строительство объектов основных средств, не относятся к расходам по производству и реализации
	Если БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Проводка.СчетДт, ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Субконто1 = Неопределено;
	Субконто2 = Неопределено;
	Субконто3 = Неопределено;
	
	Для каждого Субконто Из Проводка.СубконтоДт Цикл
		
		Если Субконто1 = Неопределено Тогда
			Субконто1 = Субконто.Значение;
		ИначеЕсли Субконто2 = Неопределено Тогда
			Субконто2 = Субконто.Значение;
		ИначеЕсли Субконто3 = Неопределено Тогда
			Субконто3 = Субконто.Значение;
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат ЭтоНепринимаемыйРасходНУ(Субконто1, Субконто2, Субконто3);
		
КонецФункции

Функция ОпределитьНеПринимаемыеДоходыРасходы(Проводка) Экспорт
	
	Если Проводка.СчетКт <> ПланыСчетов.Хозрасчетный.ПустаяСсылка()
		И БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Проводка.СчетКт, ПланыСчетов.Хозрасчетный.ПрочиеДоходы) Тогда
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			Если ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") И Не Субконто.Значение.ЭтоГруппа Тогда
				
				Если НЕ Субконто.Значение = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка() И НЕ Субконто.Значение.ПринятиеКналоговомуУчету Тогда
					Возврат  Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Субконто Из Проводка.СубконтоДт Цикл
		
		Если ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.СтатьиЗатрат") И Не Субконто.Значение.ЭтоГруппа Тогда
			
			Если Субконто.Значение.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения Тогда
				
				// Расходы на строительство объектов основных средств, не относятся к расходам по производству и реализации
				Если БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Проводка.СчетДт, ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств) Тогда
					Возврат Ложь;
				КонецЕсли;
				
				ОтнесениеКЕНВД = Субконто.Значение.ВидДеятельностиДляНалоговогоУчетаЗатрат;
				
				Если ОтнесениеКЕНВД = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения Тогда
					ТекстСообщения = "" + Субконто.Значение + " - неправильно указана: для непринимаемых расходов (" + ОтнесениеКЕНВД + ").
					                 |Расходы, не учитываемые для целей налогообложения, не следует относить к распределяемым
									 |- это не имеет смысла для расчета налоговой базы и не поддерживается программой.";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Ложь;
				КонецЕсли;
				
				Если ОтнесениеКЕНВД = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты Тогда
					ТекстСообщения = "" + Субконто.Значение + " - неправильно указана: для непринимаемых расходов (" + ОтнесениеКЕНВД + ").
									|Расходы, не учитываемые для целей налогообложения, не следует относить к распределяемым
									|- это не имеет смысла для расчета налоговой базы и не поддерживается программой.";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Ложь;
				КонецЕсли;
				
				Возврат Истина;
				Прервать;
			КонецЕсли; 
			
		ИначеЕсли ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") И Не Субконто.Значение.ЭтоГруппа Тогда
			
			Если НЕ Субконто.Значение = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка() И НЕ Субконто.Значение.ПринятиеКналоговомуУчету Тогда
								
				ОтнесениеКЕНВД = Субконто.Значение.ВидДеятельностиДляНалоговогоУчетаЗатрат;
				
				Если ОтнесениеКЕНВД = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения Тогда
					ТекстСообщения = "Проводка " + Проводка.Содержание + ": неправильно указана статья затрат для непринимаемых расходов (" + ОтнесениеКЕНВД + ").
									|Расходы, не учитываемые для целей налогообложения, не следует относить к деятельности, облагаемой ЕНВД,
									|- это не имеет смысла для расчета налоговой базы и не поддерживается программой.";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Ложь;
				КонецЕсли;
				
				Если ОтнесениеКЕНВД = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты Тогда
					ТекстСообщения = "Проводка " + Проводка.Содержание + ": неправильно указана статья затрат для непринимаемых расходов (" + ОтнесениеКЕНВД + ").
									|Расходы, не учитываемые для целей налогообложения, не следует относить к распределяемым
									|- это не имеет смысла для расчета налоговой базы и не поддерживается программой.";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Ложь;
				КонецЕсли;
				
				Возврат Истина;
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Функция ОпределитьВнереализационныеДоходыРасходы(Проводка) Экспорт
	
	Если Проводка.СчетКт <> ПланыСчетов.Хозрасчетный.ПустаяСсылка() 
		И БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Проводка.СчетКт, ПланыСчетов.Хозрасчетный.ПрочиеДоходы) Тогда
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			Если ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				РеквизитыСубконто = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Субконто.Значение, "ЭтоГруппа,ВидПрочихДоходовИРасходов");
				Если Не РеквизитыСубконто.ЭтоГруппа				
					И Субконто.Значение <> Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка() 
					И РеквизитыСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы Тогда
					Возврат  Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
			  	
	Для Каждого Субконто Из Проводка.СубконтоДт Цикл
		
		Если ТипЗнч(Субконто.Значение) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
			РеквизитыСубконто = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Субконто.Значение, "ЭтоГруппа,ВидПрочихДоходовИРасходов");
			Если Не РеквизитыСубконто.ЭтоГруппа				
				И Субконто.Значение <> Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка() 
				И РеквизитыСубконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы Тогда
				Возврат Истина;
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьМассивСчетовУчетаРасходов() Экспорт
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
	
	Возврат СчетаЗатрат;
	
КонецФункции

Функция ПолучитьМассивСчетовЕНВД() Экспорт
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД);
	
	Возврат СчетаЗатрат;
	
КонецФункции

Функция ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапкиДокумента, ИФНС = Неопределено, СтавкаФБ = 0, СтавкаРФ = 0, СтавкаМестный = 0) Экспорт   

	СтавкиНалога = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ПолучитьПоследнее(СтруктураШапкиДокумента.Дата);
	                            
	СтавкаФБ     = ?(ТипЗнч(СтавкиНалога.СтавкаФБ)        = Тип("Число"), СтавкиНалога.СтавкаФБ / 100,        0);
	СтавкаРФ     = ?(ТипЗнч(СтавкиНалога.СтавкаСубъектРФ) = Тип("Число"), СтавкиНалога.СтавкаСубъектРФ / 100, 0);
	
	Если ПолучитьФункциональнуюОпцию("ПрименяютсяРазныеСтавкиНалогаНаПрибыль") Тогда
		
		Отбор    = Новый Структура("Организация", СтруктураШапкиДокумента.Организация);
		Ставки   = РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.ПолучитьПоследнее(СтруктураШапкиДокумента.Дата, Отбор);
		СтавкаРФ = ?(Ставки = Неопределено, 0, Ставки.СтавкаСубъектРФ / 100);
		
		Если ИФНС = Неопределено Тогда
			СтавкаНалогаПоИФНС = 0;
		Иначе
			СтавкаНалогаПоИФНС = НалоговыйУчетОбособленныхПодразделений.НалоговаяСтавка(СтруктураШапкиДокумента.Организация, ИФНС, СтруктураШапкиДокумента.Дата); 
			
		КонецЕсли;
		СтавкаРФ = ?(СтавкаНалогаПоИФНС = 0, СтавкаРФ, СтавкаНалогаПоИФНС);
		
	КонецЕсли;
	
	СтавкаНалога = СтавкаФБ + СтавкаРФ;
	
	Возврат СтавкаНалога;

КонецФункции // ПолучитьСтавкуНалогаНаПрибыль()

// Формируется таблица строк в которой задано соответствие видов активов
// (обязательства) и счетов налогового учета, на которых отражаются разницы
// по этим видам активов.
//
// Возвращаемое значение:
//   ТаблицаЗначений - таблица соответствия.
//
Функция ПолучитьТаблицуВидовАктивовИОбязательств() Экспорт
	
	Если  ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто.Количество() = 1 ТОгда
		ЕстьСкладскойУчет = Ложь;
	ИНачеЕсли  ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто.Количество() = 2 ТОгда
		ЕстьСкладскойУчет = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто[1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады
	Иначе
		ЕстьСкладскойУчет = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто[2].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады
	КонецЕсли;
	
	ТаблицаВидовАктивовИОбязательств = Новый ТаблицаЗначений;
	ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("ВидАктивовОбязательств", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательств, Строка"));
	ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("Счета",      Новый ОписаниеТипов("Массив"));
	ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("Субконто",   Новый ОписаниеТипов("Массив"));
	
	//Основные средства
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_01);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	//ДоходныеВложенияВ_МЦ
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходныеВложенияВ_МЦ;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_03);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	//Нематериальные активы
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НематериальныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	// Оборудование 
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Оборудование;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Внеоборотные активы   08.01
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	// Внеоборотные активы   08.02
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	// Внеоборотные активы   08.03
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	// Внеоборотные активы 08.04
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Внеоборотные активы 08.05
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	// Внеоборотные активы 08.08
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ВыполнениеНИОКР);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыНаНИОКР);
	
	// Внеоборотные активы 08.11 и 08.12
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.МатериальныеПоисковыеАктивы);
	
	// Материалы
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;
	СчетаУчетаМатериалов = ПланыСчетов.Хозрасчетный.ВыбратьИерархически(ПланыСчетов.Хозрасчетный.Материалы);
	Пока СчетаУчетаМатериалов.Следующий() Цикл
		СчетУчетаМатериалов = СчетаУчетаМатериалов.Ссылка;
		КодСчета = СчетУчетаМатериалов.Код;
		Если Лев(КодСчета, 5) = "10.МЦ"
			Или Лев(КодСчета, 5) = "10.11" 
			Или Лев(КодСчета, 5) = "10.07" Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока.Счета.Добавить(СчетУчетаМатериалов);
	КонецЦикла;
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Материалы  в переработке
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку.Ссылка);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	
	// Материалы  в эксплуатации
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации.Ссылка);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации.Ссылка);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	
	// Незавершенное производство
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.БракВПроизводстве);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КосвенныеПроизводственныеРасходы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Готовая продукция
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ГотоваяПродукция;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Полуфабрикаты
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Полуфабрикаты;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Расходы будущих периодов
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РасходыБудущихПериодов;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	
	// Товары
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Товары;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.Товары);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Товары отгруженные
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ТоварыОтгруженные;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ТоварыОтгруженные);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Основые средства отгруженные
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ТоварыОтгруженные;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		
	// Издержки обращения
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ИздержкиОбращения;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	
	// Финансовые вложения (счета 58.01.1)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.Паи);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	
	// Финансовые вложения (счета 58.01.2 и Н58.02)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.Акции);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ДолговыеЦенныеБумаги);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЦенныеБумаги);
	
	// Финансовые вложения (счета 58.03, 58.04, 58.05)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПредоставленныеЗаймы);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ВкладыПоДоговоруПростогоТоварищества);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретенныеПрава);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Доходы будущих периодов
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходыБудущихПериодов;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ДоходыБудущихПериодов);	
	
	// Дебиторская задолженность
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДебиторскаяЗадолженность;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДебиторскаяЗадолженность;
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПлатежиПоДобровольномуСтрахованиюРаботников);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПлатежиПоПрочимВидамСтрахования);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	
	// Кредиторская задолженность
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КредиторскаяЗадолженность;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ВекселяВыданные);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИмущественномуИЛичномуСтрахованию);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиям);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПричитающимсяДивидендам);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Курсовые разницы при оплате в рублях (пассивные счета)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВУЕ;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Курсовые разницы при оплате в рублях (активные счета)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВУЕ;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиямУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчикамиУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчикамиУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Курсовые разницы при оплате в валюте (пассивные счета)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВВалюте;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Курсовые разницы при оплате в валюте (активные счета)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВВалюте;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИмущественномуИЛичномуСтрахованиюВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиямВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчикамиВал);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Убытки текущего периода
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.УбытокТекущегоПериода;
	
	// Недостачи и потери от порчи ценностей
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НедостачиПотери;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.НедостачиИПотериОтПорчиЦенностей);
	
	// Оценочные обязательства
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОценочныеОбязательства;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	
	// Резервы по сомнительным долгам
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РезервыСомнительныхДолгов;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РезервыПоСомнительнымДолгам);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Возврат ТаблицаВидовАктивовИОбязательств;
	
КонецФункции // ПолучитьТаблицуВидовАктивовИОбязательств()

Функция ДобавитьТекстЗапросаСчетаЕНВД(Запрос) Экспорт
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД);
	
	Запрос.УстановитьПараметр("СчетаЕН", СчетаЗатрат);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЕН
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетаЕН)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
	+ Запрос.Текст;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ДобавитьТекстЗапросаСчетаЕНВД()

// ОНА и ОНО

// Определяются суммы временных разницы, которые отражены на плане счетов
// по конкретному виду ОНА (ОНО) и распределяются на вычитаемые и налогооблагаемые разницы,
// числящиеся на остатках текущего периода.
//
// Параметры:
//		СтрокаВидАктиваОбязательства - строка таблицы в которой задано соответствие
//			вида актива (обязательства) и счетов налогового учета, на которых
//			отражаются разницы по этому виду активов.
//
Функция ОстаткиВременныхРазницПоВидуАктивовОбязательств(СтрокаВидАктиваОбязательства,
														Организация, НачалоГода, КонецГода) Экспорт
	
	КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();
	
	Если Не КоличествоОбъектовАналитики = 0 Тогда
		МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;
		ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, 1, 0);
		ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы, 1, ФлагОС_НМА);
		ФлагОбъектовСтроительства = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства, 1, 0);
		ФлагНЗП    = ?(СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство, 1, 0);
	Иначе
		ФлагОС_НМА = Ложь;
		ФлагОбъектовСтроительства = Ложь;
		ФлагНЗП = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("НачалоГода",             НачалоГода);
	Запрос.УстановитьПараметр("КонецГода",              Новый Граница(КонецГода,ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организации",            Организация);
	Запрос.УстановитьПараметр("МассивСчетов",           СтрокаВидАктиваОбязательства.Счета);
	Запрос.УстановитьПараметр("ВидСубконто",            МассивСубконто);
	Запрос.УстановитьПараметр("Счет09",                 ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы);
	Запрос.УстановитьПараметр("Счет77",                 ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеОбязательства);
	Запрос.УстановитьПараметр("ВидАктивовОбязательств", СтрокаВидАктиваОбязательства.ВидАктивовОбязательств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиОтПересчетаОНА_ОНО))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВР.Счет КАК Счет,
	|	ОстаткиВР.Субконто1 КАК Субконто1,
	|	ОстаткиВР.Субконто2 КАК Субконто2,
	|	ОстаткиВР.Субконто3 КАК Субконто3,
	|	ОстаткиВР.СуммаВРОстатокДт КАК СуммаВРОстатокДт,
	|	ОстаткиВР.СуммаВРОстатокКт КАК СуммаВРОстатокКт,
	|	ОстаткиВР.СуммаВРОстаток КАК СуммаВРОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиВР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецГода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета.Счет
	|				ИЗ
	|					ВТ_Счета),
	|			&ВидСубконто,
	|			Организация В (&Организации)) КАК ОстаткиВР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОстатки09
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецГода,
	|			Счет = &Счет09,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОстатки77
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецГода,
	|			Счет = &Счет77,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборот
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОбороты77
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонецГода,
	|			Период,
	|			Счет = &Счет77,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета84.Счет
	|				ИЗ
	|					ВТ_Счета84),
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборот
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОбороты09
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонецГода,
	|			Период,
	|			Счет = &Счет09,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета84.Счет
	|				ИЗ
	|					ВТ_Счета84),
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВР.Счет КАК Счет,
	|	ОстаткиВР.Субконто1 КАК Субконто1,
	|	ОстаткиВР.Субконто2 КАК Субконто2,
	|	ОстаткиВР.Субконто3 КАК Субконто3,
	|	&Счет09 КАК СчетОНАОНО,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОбороты.СуммаОборот) КАК СтараяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВР.СуммаВРОстатокДт < 0
	|					ИЛИ ОстаткиВР.СуммаВРОстатокКт > 0
	|				ТОГДА -ОстаткиВР.СуммаВРОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма
	|ИЗ
	|	ВТ_ОстаткиВР КАК ОстаткиВР,
	|	ВТ_ХозрасчетныйОстатки09 КАК ХозрасчетныйОстатки,
	|	ВТ_ХозрасчетныйОбороты09 КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВР.Счет,
	|	ОстаткиВР.Субконто1,
	|	ОстаткиВР.Субконто2,
	|	ОстаткиВР.Субконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиВР.Счет,
	|	ОстаткиВР.Субконто1,
	|	ОстаткиВР.Субконто2,
	|	ОстаткиВР.Субконто3,
	|	&Счет77,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт + ХозрасчетныйОбороты.СуммаОборот),
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВР.СуммаВРОстатокДт > 0
	|					ИЛИ ОстаткиВР.СуммаВРОстатокКт < 0
	|				ТОГДА ОстаткиВР.СуммаВРОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|ИЗ
	|	ВТ_ОстаткиВР КАК ОстаткиВР,
	|	ВТ_ХозрасчетныйОстатки77 КАК ХозрасчетныйОстатки,
	|	ВТ_ХозрасчетныйОбороты77 КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВР.Счет,
	|	ОстаткиВР.Субконто1,
	|	ОстаткиВР.Субконто2,
	|	ОстаткиВР.Субконто3";
	
	Если ФлагОС_НМА = 1 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиВР.Счет КАК Счет,", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиВР.Счет,", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 3 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто3 КАК Субконто3", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто3", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 2 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто2 КАК Субконто2", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто2", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто1 КАК Субконто1", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто1", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	ТаблицаРезультатов = Результат.Выгрузить();
	ТаблицаРезультатов.Свернуть("СчетОНАОНО, СтараяСумма,"
		+ ?(ФлагОС_НМА = 1, "", "Счет,")
		+ ?(КоличествоОбъектовАналитики = 0, "", "Субконто1")
		+ ?(ФлагОбъектовСтроительства = 1, "", ?(КоличествоОбъектовАналитики = 2, ", Субконто2", ""))
		+ ?(ФлагНЗП = 1, "", ?(КоличествоОбъектовАналитики = 3, ", Субконто3", "")), "Сумма");
	
	Возврат  ТаблицаРезультатов;
	
КонецФункции // ОстаткиВременныхРазницПоВидуАктивовОбязательств()


// НОРМИРОВАНИЕ РАСХОДОВ В НУ

// Определяет коэффициент распределения расходов по видам деятельности с разным порядком налогообложения.
//
// Параметры
//  Организации - СправочникСсылка.Организации или массив со значениями этого типа
//  НачалоПериода, 
//  КонецПериода - Дата - характеризует период, за который рассчитывается коэффициент. Период всегда кратен месяцу.
//
// Возвращаемое значение:
//   Число – коэффициент распределения расходов по видам деятельности.
//
Функция КоэффициентРаспределенияРасходовПоВидамДеятельности(Организации, Знач НачалоПериода, Знач КонецПериода = Неопределено) Экспорт
	
	// Период
	Если КонецПериода = Неопределено Тогда
		КонецПериода = НачалоПериода;
	КонецЕсли;
	НачалоПериода = НачалоМесяца(НачалоПериода);
	КонецПериода  = КонецМесяца(КонецПериода);
	
	// База распределения
	ВключатьПрочиеДоходы = Ложь;
	
	Если ТипЗнч(Организации) = Тип("СправочникСсылка.Организации") Тогда
		Организация = Организации;
	Иначе
		Если Организации.Количество() > 0 Тогда
			Организация = Организации[0];
		Иначе
			// Неверные параметры
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Если УчетнаяПолитика.Существует(Организация, НачалоПериода, Истина) Тогда
		
		Если УчетнаяПолитика.ПрименяетсяОсобыйПорядокНалогообложения(Организация, НачалоПериода) Тогда
			Возврат 1;
		КонецЕсли;
		
		ВключатьПрочиеДоходы = 
			УчетнаяПолитика.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности(Организация, НачалоПериода) = 
				Перечисления.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализацииИВнереализационные;
				
		// В качестве базы распределения используются суммы без НДС.
		// И данных бухгалтерского учета по прочим доходам сложно исключить суммы НДС, 
		// так как нет специального дебетового субсчета для сумм НДС.
		// Если организация уплачивает налог на прибыль, то прочие доходы без НДС 
		// можно определить по данным налогового учета - см. ЭтоПроводкаПоНачислениюНДС()
		ПрочиеДоходыПоДаннымНУ = ВключатьПрочиеДоходы 
			И УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, НачалоПериода)
			И УчетнаяПолитика.ПлательщикНДС(Организация, НачалоПериода);
			
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// Массив счетов, по которым рассчитывается выручка
	СчетаВыручки = Новый Массив;
	СчетаВыручки.Добавить(ПланыСчетов.Хозрасчетный.Выручка);
	СчетаВыручки.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);
	СчетаВыручки.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);
	СчетаВыручки.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
	
	Запрос.УстановитьПараметр("НачалоПериода",          НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",           КонецПериода);
	Запрос.УстановитьПараметр("Организации",            Организации);
	Запрос.УстановитьПараметр("СчетаВыручки",           СчетаВыручки);
	Запрос.УстановитьПараметр("ВключатьПрочиеДоходы",   ВключатьПрочиеДоходы);
	Запрос.УстановитьПараметр("ПрочиеДоходыПоДаннымНУ", ПрочиеДоходыПоДаннымНУ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаВыручки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаВыручки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаПрочиеДоходы
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	-ХозрасчетныйОбороты.СуммаОборот КАК Сумма
	|ПОМЕСТИТЬ Выручка
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаВыручки.Счет
	|				ИЗ
	|					СчетаВыручки),
	|			,
	|			Организация В (&Организации),
	|			НЕ КорСчет В
	|						(ВЫБРАТЬ
	|							СчетаВыручки.Счет
	|						ИЗ
	|							СчетаВыручки)
	|				И КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж),
	|			) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы) КАК ПрочиеДоходыИРасходы,
	|	ВЫБОР
	|		КОГДА &ПрочиеДоходыПоДаннымНУ
	|			ТОГДА -ХозрасчетныйОбороты.СуммаНУОборот
	|		ИНАЧЕ -ХозрасчетныйОбороты.СуммаОборот
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ПрочиеДоходы
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаПрочиеДоходы.Счет
	|				ИЗ
	|					СчетаПрочиеДоходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			&ВключатьПрочиеДоходы
	|				И Организация В (&Организации),
	|			НЕ КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаПрочиеДоходы.Счет
	|					ИЗ
	|						СчетаПрочиеДоходы),
	|			) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПрочиеДоходыИРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Выручка.Всего), 0) КАК Всего,
	|	ЕСТЬNULL(СУММА(Выручка.ОсобыйПорядок), 0) КАК ОсобыйПорядок
	|ИЗ
	|	(ВЫБРАТЬ
	|		Выручка.Сумма КАК Всего,
	|		ВЫБОР
	|			КОГДА ЕНВД.Счет ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ Выручка.Сумма
	|		КОНЕЦ КАК ОсобыйПорядок
	|	ИЗ
	|		Выручка КАК Выручка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаДоходовИРасходовЕНВД КАК ЕНВД
	|			ПО Выручка.Счет = ЕНВД.Счет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрочиеДоходы.Сумма,
	|		ВЫБОР
	|			КОГДА ПрочиеДоходы.ПрочиеДоходыИРасходы.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ПрочиеДоходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ПрочиеДоходы КАК ПрочиеДоходы) КАК Выручка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий(); // В выборке всегда ровно один элемент
	
	Если Выборка.Всего = 0 ИЛИ Выборка.ОсобыйПорядок = 0 Тогда
		// Если нет определенности, то считаем, что все расходы относятся к деятельности на основной системе обложения
		Возврат 0;
	Иначе
		Возврат Выборка.ОсобыйПорядок / Выборка.Всего;
	КонецЕсли;
	
КонецФункции // КоэффициентРаспределенияРасходовПоВидамДеятельности()

// РЕГЛАМЕНТНАЯ ОПЕРАЦИЯ "РАСЧЕТ ДОЛЕЙ"

Функция ДолиСписанияРасходов(Период, Организация, ПротоколНормируемыеРасходы) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ДоляЕНВД",                                                 0);
	Результат.Вставить("ДоляТранспортныхРасходов",                                 0);
	Результат.Вставить("ДоляРасходовНаРекламу",                                    0);
	Результат.Вставить("ДоляРасходовНаДобровольноеМедицинскоеСтрахование",         0);
	Результат.Вставить("ДоляРасходовНаДобровольноеСтрахованиеЖизни",               0);
	Результат.Вставить("ДоляРасходовНаДобровольноеСтрахованиеОтНесчастныхСлучаев", 0);
	Результат.Вставить("ДоляПредставительскихРасходов",                            0);
	Результат.Вставить("ДоляРасходовНаВозмещениеПроцентовРаботникам",              0);
	Результат.Вставить("ДоляРезервовПоСомнительнымДолгамНУ",                       0);
	
	// Распределение расходов по видам деятельности
	Организации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация);
	ДоляСпециальныхРежимов = КоэффициентРаспределенияРасходовПоВидамДеятельности(Организации, Период); // За месяц
	Результат.ДоляЕНВД     = ДоляСпециальныхРежимов;
	
	// Транспортные расходы могут быть отнесены к остаткам нереализованных товаров - ст. 320 НК РФ
	Результат.ДоляТранспортныхРасходов = ДоляТранспортныхРасходовТекущегоМесяца(Период, Организация);
	
	// РАСХОДЫ, ПО КОТОРЫМ ЕСТЬ ОГРАНИЧЕНИЯ
	Ограничения  = ДолиСписанияНормируемыхРасходов(Период, Организация, ДоляСпециальныхРежимов, ПротоколНормируемыеРасходы);
	
	Для Каждого ОписаниеПоля Из РегистрыСведений.ДолиСписанияКосвенныхРасходов.ИменаВидовНормируемыхРасходов() Цикл
		Результат[ОписаниеПоля.Ключ] = Ограничения[Перечисления.ВидыРасходовНУ[ОписаниеПоля.Значение]];
	КонецЦикла;
	
	// Расходы по сомнительным долгам еще не начислены.
	// Лимит таких расходов рассчитывается особо.
	// п. 4, ст. 266 НК РФ
	// Сумма создаваемого резерва по сомнительным долгам 
	// не может превышать 10 процентов от выручки
	СуммаРезерва = УчетДоходовРасходов.СуммаРезерваПоСомнительнымДолгамНУ(Период, Организация);
	Если СуммаРезерва <> 0 Тогда
		База  = ВыручкаОтРеализации(Период, Организация);
		Норма = 0.10;
		Лимит = ЛимитРасходов(База, Норма);
		Результат.ДоляРезервовПоСомнительнымДолгамНУ = Мин(СуммаРезерва, Лимит) / СуммаРезерва;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

// РАСХОДЫ, ПО КОТОРЫМ ЕСТЬ ОГРАНИЧЕНИЯ

Функция ДолиСписанияНормируемыхРасходов(Период, Организация, ДоляСпециальныхРежимов, Протокол = Неопределено)
	
	// Речь идет о тех расходах, которые уже отражены на счетах затрат (20, 25, 44 и т.п.)
	
	Результат = Новый Соответствие;
	
	ОграниченияРасходов      = ОграниченияРасходов(Период, Организация, ДоляСпециальныхРежимов);
	ВидыНормируемыхРасходов  = ОграниченияРасходов.ВыгрузитьКолонку("ВидРасходов");
	СуммыНормируемыхРасходов = СуммыНормируемыхРасходов(Период, Организация, ВидыНормируемыхРасходов);
	
	// Применим ограничения к суммам
	Для Каждого ОписаниеРасхода Из СуммыНормируемыхРасходов Цикл
		
		Ограничение = ОграниченияРасходов.Найти(ОписаниеРасхода.ВидРасходов, "ВидРасходов");
		
		Если Ограничение = Неопределено Тогда
			// Это маловероятно, потому что для создания СуммыНормируемыхРасходов используются только те виды расходов,
			// что есть в ОграниченияРасходов
			Продолжить;
		КонецЕсли;
		
		// Расчет похож на справку-расчет, но иногда задом наперед
		ЗатратыЗаПериод                  = Макс(0, ОписаниеРасхода.ЗаПериод); // гр. 2 - за год, с начала года
		Расходы                          = Мин(Ограничение.Лимит, ЗатратыЗаПериод); // гр. 4 - уменьшают базу налога
		
		ЗатратыКРаспределению            = ОписаниеРасхода.НаНачалоМесяца + ОписаниеРасхода.ЗаМесяц; // то же, что гр.2 - гр.5
		ВключеноВРасходыНаНачалоМесяца   = ЗатратыЗаПериод - ЗатратыКРаспределению; // гр. 5
		РасходыТекущегоМесяца            = Расходы - ВключеноВРасходыНаНачалоМесяца; // гр. 6
		Доля                             = ?(ЗатратыКРаспределению = 0, 1, РасходыТекущегоМесяца / ЗатратыКРаспределению); // гр. 7
		Результат.Вставить(Ограничение.ВидРасходов, Доля);
		
		// Заполним протокол (для справки-расчета)
		Если Протокол <> Неопределено Тогда
			
			Запись = Протокол.Добавить();
			Запись.ВидОперации    = Ограничение.ВидРасходов;
			
			Если ОписаниеРасхода.ВидРасходов = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности Тогда
				Запись.СуммаБазы      = Ограничение.Лимит; // Унаследованная с прошлых версий особенность справки-расчета
			Иначе
				Запись.СуммаБазы      = Ограничение.База;
			КонецЕсли;
			
			Запись.ЗатратыГод     = ЗатратыЗаПериод;       // гр. 2
			Запись.РасходыГод     = Расходы;               // гр. 4
			Запись.РасходыМесяц   = РасходыТекущегоМесяца; // гр. 6
			
			// гр. 8 - затраты сверх лимита
			Запись.РазницыГод     = ЗатратыЗаПериод - Расходы;
			
			// гр. 10 - изменение затрат сверх лимита
			Запись.РазницыМесяц   = Запись.РазницыГод - ОписаниеРасхода.НаНачалоМесяца;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОграниченияРасходов(Период, Организация, ДоляСпециальныхРежимов)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ВидРасходов",     Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРасходовНУ, ПеречислениеСсылка.ВидыРегламентныхОпераций")); // Для уже учтенных расходов - вид расходов, для не учтенных - вид операции
	Результат.Колонки.Добавить("База",            ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	Результат.Колонки.Добавить("Норма",           Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("Лимит",           ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	Результат.Индексы.Добавить("ВидРасходов");
	
	// Расходы могут быть ограничены:
	// - расходами на оплату труда
	//  -- либо суммой только оплаты труда
	//  -- либо суммой всех выплат в пользу сотрудников, включая страховки
	// - суммой выручки
	// - количеством застрахованных
	
	// Большинство ограничений связано с расходами на оплату труда или выручкой от реализации
	РасходыНаОплатуТруда = РасходыНаОплатуТруда(Период, Организация, ДоляСпециальныхРежимов);
	ВыручкаОтРеализации  = ВыручкаОтРеализации(Период, Организация);
	
	// п. 16, ст. 255 НК РФ 
	// Совокупная сумма взносов работодателей, уплачиваемых ... на накопительную часть трудовой пенсии,
	// по договорам долгосрочного страхования жизни работников, 
	// добровольного пенсионного страхования и (или) негосударственного пенсионного обеспечения работников, 
	// учитывается в целях налогообложения в размере, 
	// не превышающем 12 процентов от суммы расходов на оплату труда.
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников;
	Ограничение.База           = РасходыНаОплатуТруда.ОплатаТруда;
	Ограничение.Норма          = 0.12;
	
	// п. 16, ст. 255 НК РФ
	// Добровольное личное страхование
	// Взносы по договорам добровольного личного страхования, предусматривающим оплату страховщиками медицинских расходов 
	// застрахованных работников ... включаются в состав расходов в размере, 
	// не превышающем 6 процентов от суммы расходов на оплату труда.
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование;
	Ограничение.База           = РасходыНаОплатуТруда.ОплатаТруда;
	Ограничение.Норма          = 0.06;
	
	// п. 24.1, ст. 255 НК РФ
	// Расходы на возмещение затрат работников по уплате процентов по займам
	// расходы на возмещение затрат работников по уплате процентов по займам (кредитам) 
	// на приобретение и (или) строительство жилого помещения ... признаются в размере, 
	// не превышающем 3 процентов суммы расходов на оплату труда
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов;
	Ограничение.База           = РасходыНаОплатуТруда.ОплатаТруда;
	Ограничение.Норма          = 0.03;
	
	// п. 2, ст. 264 НК РФ
	// Представительские расходы ... включаются в состав прочих расходов в размере, 
	// не превышающем 4 процента от расходов налогоплательщика на оплату труда.
	// Есть разъяснение, что в сумму этих расходов входит не только оплата труда, 
	// но и другие вознаграждения сотрудникам (страхование)
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы;
	Ограничение.База           = РасходыНаОплатуТруда.Вознаграждение;
	Ограничение.Норма          = 0.04;
	
	// п. 4, ст. 264 НК РФ
	// Расходы на отдельные виды рекламы признаются в размере, не превышающем 1 процента выручки от реализации
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые;
	Ограничение.База           = ВыручкаОтРеализации;
	Ограничение.Норма          = 0.01;
	
	// п. 16, ст. 255 НК РФ
	// Взносы по договорам добровольного личного страхования, 
	// предусматривающим выплаты исключительно в случаях смерти и (или) причинения вреда здоровью застрахованного лица, 
	// включаются в состав расходов в размере, не превышающем 15 000 рублей в год, 
	// рассчитанном как отношение общей суммы взносов, 
	// уплачиваемых по указанным договорам, к количеству застрахованных работников.
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности;
	Ограничение.База           = КоличествоЗастрахованныхОтУтратыРаботоспособности(Период, Организация);
	Ограничение.Норма          = 15000;
	
	// Рассчитаем суммы лимитов
	Для Каждого Ограничение Из Результат Цикл
		Ограничение.Лимит = ЛимитРасходов(Ограничение.База, Ограничение.Норма);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЛимитРасходов(База, Норма)
	
	Возврат Макс(0, Окр(База * Норма, 2, 1));
	
КонецФункции

Функция РасходыНаОплатуТруда(Период, Организация, ДоляСпециальныхРежимов)
	
	Результат = Новый Структура;
	Результат.Вставить("Вознаграждение", 0); // Вся сумма вознаграждений, включая оплату труда и страхование
	Результат.Вставить("ОплатаТруда",    0); // Только оплата труда
	
	// Сумма распределяемых расходов рассчитывается так:
	// 1. За период с начала года до начала текущего месяца уже есть информация о расходах, отнесенных к основной системе налогообложения
	//    (оборот Дт 90.08 Кт 20, 23, 25..., потому что все распределяемые расходы - косвенные).
	// 2. За текущий месяц рассчитываем сумму расходов, учитываемых для исчисления налога на прибыль,
	//    исходя из оборота по Дт 20 и коэффициента распределения.
	// Сумму не распределяемых расходов определяем по оборотам Дт счетов затрат.
	// Во всех случаях исключаем "внутренние" обороты по распределению затрат (Дт счетов затрат Кт счетов затрат).
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода",              НачалоГода(Период));
	Запрос.УстановитьПараметр("НачалоМесяца",            НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",            КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("СчетаРасходов",           ПолучитьМассивСчетовУчетаРасходов());
	Запрос.УстановитьПараметр("ДоляУчитываемыхРасходов", 1 - ДоляСпециальныхРежимов); // Применяется для распределяемых расходов
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.ГоловнаяОрганизация = &Организация
	|			ИЛИ Организации.Ссылка = &Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаРезультата
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ОплатаТруда) КАК ВидРасходов,
	|	ИСТИНА КАК ОплатаТруда
	|ПОМЕСТИТЬ ВидыРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование),
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности),
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников),
	|	ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыРасходов.ОплатаТруда,
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Распределяемая
	|ПОМЕСТИТЬ СтатьиЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыРасходов КАК ВидыРасходов
	|		ПО СтатьиЗатрат.ВидРасходовНУ = ВидыРасходов.ВидРасходов
	|ГДЕ
	|	СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вознаграждение.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СУММА(Вознаграждение.СуммаПринимаемые + Вознаграждение.СуммаРаспределяемые * &ДоляУчитываемыхРасходов) КАК Сумма
	|ПОМЕСТИТЬ Вознаграждение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОблагаетсяНалогомНаПрибыль.Субконто1 КАК СтатьяЗатрат,
	|		ОблагаетсяНалогомНаПрибыль.СуммаНУОборотДт КАК СуммаПринимаемые,
	|		0 КАК СуммаРаспределяемые
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоГода,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат
	|						ГДЕ
	|							НЕ СтатьиЗатрат.Распределяемая),
	|				,
	|				) КАК ОблагаетсяНалогомНаПрибыль
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОблагаетсяНалогомНаПрибыльЛишнее.Субконто1,
	|		-ОблагаетсяНалогомНаПрибыльЛишнее.СуммаНУОборотДт,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоГода,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации КАК Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат
	|						ГДЕ
	|							НЕ СтатьиЗатрат.Распределяемая),
	|				КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				) КАК ОблагаетсяНалогомНаПрибыльЛишнее
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаспределяемыеТекущийМесяц.Субконто1,
	|		0,
	|		РаспределяемыеТекущийМесяц.СуммаНУОборотДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат
	|						ГДЕ
	|							СтатьиЗатрат.Распределяемая),
	|				,
	|				) КАК РаспределяемыеТекущийМесяц
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаспределяемыеТекущийМесяцЛишнее.Субконто1,
	|		0,
	|		-РаспределяемыеТекущийМесяцЛишнее.СуммаНУОборотДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации КАК Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат
	|						ГДЕ
	|							СтатьиЗатрат.Распределяемая),
	|				КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				) КАК РаспределяемыеТекущийМесяцЛишнее
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаспределенныеПредыдущиеМесяцы.Субконто1,
	|		РаспределенныеПредыдущиеМесяцы.СуммаНУОборотКт,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоГода,
	|				ДОБАВИТЬКДАТЕ(&НачалоМесяца, СЕКУНДА, -1),
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат
	|						ГДЕ
	|							СтатьиЗатрат.Распределяемая),
	|				КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаРезультата.Счет
	|					ИЗ
	|						СчетаРезультата),
	|				) КАК РаспределенныеПредыдущиеМесяцы) КАК Вознаграждение
	|
	|СГРУППИРОВАТЬ ПО
	|	Вознаграждение.СтатьяЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Вознаграждение.Сумма), 0) КАК Вознаграждение,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НЕ СтатьиЗатрат.ОплатаТруда
	|					ТОГДА 0
	|				ИНАЧЕ Вознаграждение.Сумма
	|			КОНЕЦ), 0) КАК ОплатаТруда
	|ИЗ
	|	Вознаграждение КАК Вознаграждение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатьиЗатрат КАК СтатьиЗатрат
	|		ПО Вознаграждение.СтатьяЗатрат = СтатьиЗатрат.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(); // В выборке всегда 1 запись
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

Функция ВыручкаОтРеализации(Период, Организация)
	
	// Включаем в выручку часть расходов на счете 91
	ВидыПрочихДоходов = Новый Массив;
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоГода(Период));
	Запрос.УстановитьПараметр("КонецПериода",      КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("ВидыПрочихДоходов", ВидыПрочихДоходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.ГоловнаяОрганизация = &Организация
	|			ИЛИ Организации.Ссылка = &Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаВыручки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаНеЕНВД))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаПрочихДоходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка
	|ПОМЕСТИТЬ ВидыПрочихДоходов
	|ИЗ
	|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
	|ГДЕ
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов В(&ВидыПрочихДоходов)
	|	И ПрочиеДоходыИРасходы.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Выручка.Сумма), 0) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		Выручка.СуммаНУОборотКт КАК Сумма
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаВыручки.Счет
	|					ИЗ
	|						СчетаВыручки),
	|				,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						Организации),
	|				,
	|				) КАК Выручка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрочиеДоходы.СуммаНУОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаПрочихДоходов.Счет
	|					ИЗ
	|						СчетаПрочихДоходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							ВидыПрочихДоходов.Ссылка
	|						ИЗ
	|							ВидыПрочихДоходов),
	|				,
	|				) КАК ПрочиеДоходы) КАК Выручка";
	
	Выборка = Запрос.Выполнить().Выбрать(); // В выборке всегда 1 запись
	Выборка.Следующий();
	Возврат Выборка.Сумма;
	
КонецФункции

Функция КоличествоЗастрахованныхОтУтратыРаботоспособности(Период, Организация)
	
	// Речь о страховании на случай смерти или утраты работоспособности
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(Период));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("СчетаРасходов", ПолучитьМассивСчетовУчетаРасходов());
	
	ВидыКорСубконто = Новый Массив;
	ВидыКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	ВидыКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидыКорСубконто", ВидыКорСубконто);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.ГоловнаяОрганизация = &Организация
	|			ИЛИ Организации.Ссылка = &Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаСтраховыхПлатежей
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыБудущихПериодов), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПлатежиПоДобровольномуСтрахованиюРаботников))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СтатьиЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|	И СтатьиЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДоговорыТекущегоПериода
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|ГДЕ
	|	РасходыБудущихПериодов.ДатаНачалаСписания >= &НачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХозрасчетныйОбороты.КорСубконто1), 0) КАК КоличествоЗастрахованных
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаРасходов.Счет
	|				ИЗ
	|					СчетаРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						Организации)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СтатьиЗатрат.Ссылка
	|					ИЗ
	|						СтатьиЗатрат)
	|				И КорСубконто1 <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				И КорСубконто2 В
	|					(ВЫБРАТЬ
	|						ДоговорыТекущегоПериода.Ссылка
	|					ИЗ
	|						ДоговорыТекущегоПериода),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					СчетаСтраховыхПлатежей.Счет
	|				ИЗ
	|					СчетаСтраховыхПлатежей),
	|			&ВидыКорСубконто) КАК ХозрасчетныйОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать(); // Всегда 1 запись
	Выборка.Следующий();
	Возврат Выборка.КоличествоЗастрахованных;
	
КонецФункции

Функция СуммыНормируемыхРасходов(Период, Организация, ВидыНормируемыхРасходов)
	
	// По статьям затрат, у которых указаны нормируемые виды расходов, не следует отражать расходы по деятельности,
	// для обложения налогами которой применяются специальные налоговые режимы
	
	// ЗаПериод
	// ЗаМесяц
	// НаНачалоМесяца
	
	// Формируем запрос по виду затрат
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода",              НачалоГода(Период));
	Запрос.УстановитьПараметр("НачалоМесяца",            НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",            КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("СчетаРасходов",           ПолучитьМассивСчетовУчетаРасходов());
	Запрос.УстановитьПараметр("ВидыНормируемыхРасходов", ВидыНормируемыхРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.ГоловнаяОрганизация = &Организация
	|			ИЛИ Организации.Ссылка = &Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходовНУ КАК ВидРасходов
	|ПОМЕСТИТЬ СтатьиЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.ВидРасходовНУ В(&ВидыНормируемыхРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расходы.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Расходы.Счет,
	|	СУММА(Расходы.НаНачалоМесяца) КАК НаНачалоМесяца,
	|	СУММА(Расходы.ЗаПериод) КАК ЗаПериод,
	|	СУММА(Расходы.ЗаМесяц) КАК ЗаМесяц
	|ПОМЕСТИТЬ Расходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПредыдущиеМесяцы.Счет КАК Счет,
	|		ПредыдущиеМесяцы.Субконто1 КАК СтатьяЗатрат,
	|		ПредыдущиеМесяцы.СуммаНУОборот КАК НаНачалоМесяца,
	|		ПредыдущиеМесяцы.СуммаНУОборотДт КАК ЗаПериод,
	|		0 КАК ЗаМесяц
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоГода,
	|				ДОБАВИТЬКДАТЕ(&НачалоМесяца, СЕКУНДА, -1),
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат),
	|				,
	|				) КАК ПредыдущиеМесяцы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПредыдущиеМесяцыЛишнее.Счет,
	|		ПредыдущиеМесяцыЛишнее.Субконто1,
	|		0,
	|		-ПредыдущиеМесяцыЛишнее.СуммаНУОборотДт,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоГода,
	|				ДОБАВИТЬКДАТЕ(&НачалоМесяца, СЕКУНДА, -1),
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации КАК Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат КАК СтатьиЗатрат),
	|				КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				) КАК ПредыдущиеМесяцыЛишнее
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТекущийМесяц.Счет,
	|		ТекущийМесяц.Субконто1,
	|		0,
	|		ТекущийМесяц.СуммаНУОборотДт,
	|		ТекущийМесяц.СуммаНУОборотДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат),
	|				,
	|				) КАК ТекущийМесяц
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТекущийМесяцЛишнее.Счет,
	|		ТекущийМесяцЛишнее.Субконто1,
	|		0,
	|		-ТекущийМесяцЛишнее.СуммаНУОборотДт,
	|		-ТекущийМесяцЛишнее.СуммаНУОборотДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации КАК Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиЗатрат.Ссылка
	|						ИЗ
	|							СтатьиЗатрат КАК СтатьиЗатрат),
	|				КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				) КАК ТекущийМесяцЛишнее) КАК Расходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Расходы.СтатьяЗатрат,
	|	Расходы.Счет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиЗатрат.ВидРасходов КАК ВидРасходов,
	|	СУММА(Расходы.НаНачалоМесяца) КАК НаНачалоМесяца,
	|	СУММА(Расходы.ЗаПериод) КАК ЗаПериод,
	|	СУММА(Расходы.ЗаМесяц) КАК ЗаМесяц
	|ИЗ
	|	Расходы КАК Расходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатьиЗатрат КАК СтатьиЗатрат
	|		ПО Расходы.СтатьяЗатрат = СтатьиЗатрат.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиЗатрат.ВидРасходов";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
Конецфункции

// РАСЧЕТ ТРАНСПОРТНЫХ РАСХОДОВ ТЕКУЩЕГО МЕСЯЦА

Функция ДоляТранспортныхРасходовТекущегоМесяца(Период, Организация)
	
	// Исходные данные для расчета:
	// - СуммаРасходов (транспортных)
	// - РеализацияТоваров
	// - СальдоТоваровКонечное
	
	// Получим их.
	
	// Для расчета коэффициента используем данные НУ (по налогу на прибыль).
	// Потому, что организация 
	// - должна их использовать для НУ (ст. 320 НК)
	// - может их использовать для БУ
	ИспользоватьДанныеНалоговогоУчета = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ИспользоватьДанныеНалоговогоУчета", ИспользоватьДанныеНалоговогоУчета);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация
	|ПОМЕСТИТЬ Организации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаРасходовНаПродажу
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаПродажу))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат
	|ПОМЕСТИТЬ СтатьиТранспортныхРасходов
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаТоваров
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТорговаяНаценка))
	|	И НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТараПодТоваромИПорожняя))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаСебестоимостиПродаж
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродаж))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ИсходныеДанные.СуммаРасходов) КАК СуммаРасходов,
	|	СУММА(ИсходныеДанные.РеализацияТоваров) КАК РеализацияТоваров,
	|	СУММА(ИсходныеДанные.СальдоТоваровКонечное) КАК СальдоТоваровКонечное
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА
	|				ТОГДА ХозрасчетныйОстатки.СуммаНУОстаток
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток
	|		КОНЕЦ КАК СуммаРасходов,
	|		0 КАК РеализацияТоваров,
	|		0 КАК СальдоТоваровКонечное
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&НачалоПериода,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходовНаПродажу.Счет
	|					ИЗ
	|						СчетаРасходовНаПродажу),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиТранспортныхРасходов.СтатьяЗатрат
	|						ИЗ
	|							СтатьиТранспортныхРасходов)) КАК ХозрасчетныйОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА
	|				ТОГДА ХозрасчетныйОбороты.СуммаНУОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	|		КОНЕЦ,
	|		0,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходовНаПродажу.Счет
	|					ИЗ
	|						СчетаРасходовНаПродажу),
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиТранспортныхРасходов.СтатьяЗатрат
	|						ИЗ
	|							СтатьиТранспортныхРасходов),
	|				,
	|				) КАК ХозрасчетныйОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		ВЫБОР
	|			КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА
	|				ТОГДА ХозрасчетныйОбороты.СуммаНУОборот
	|			ИНАЧЕ ХозрасчетныйОбороты.СуммаОборот
	|		КОНЕЦ,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаСебестоимостиПродаж.Счет
	|					ИЗ
	|						СчетаСебестоимостиПродаж),
	|				,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						Организации),
	|				КорСчет В
	|					(ВЫБРАТЬ
	|						СчетаТоваров.Счет
	|					ИЗ
	|						СчетаТоваров),
	|				) КАК ХозрасчетныйОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА
	|				ТОГДА ХозрасчетныйОстатки.СуммаНУОстаток
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток
	|		КОНЕЦ
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1),
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаТоваров.Счет
	|					ИЗ
	|						СчетаТоваров),
	|				,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Организация
	|					ИЗ
	|						Организации)) КАК ХозрасчетныйОстатки) КАК ИсходныеДанные";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
		
	// Требования статьи 320 следующие:
	// Сумма прямых расходов в части транспортных расходов, 
	// относящаяся к остаткам нереализованных товаров, 
	// определяется по среднему проценту за текущий месяц 
	// с учетом переходящего остатка на начало месяца в следующем порядке:
	// 1) определяется сумма прямых расходов, 
	//    приходящихся на остаток нереализованных товаров на начало месяца и осуществленных в текущем месяце;
	
	СуммаРасходов = Выборка.СуммаРасходов;
	Если СуммаРасходов = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	// 2) определяется стоимость приобретения товаров, реализованных в текущем месяце,
	//    и стоимость приобретения остатка нереализованных товаров на конец месяца;
	
	РеализацияТоваров     = Выборка.РеализацияТоваров;
	СальдоТоваровКонечное = Выборка.СальдоТоваровКонечное;
	СтоимостьТоваров      = РеализацияТоваров + СальдоТоваровКонечное;
	
	Если РеализацияТоваров = 0 Или СтоимостьТоваров = 0 Тогда
		// В текущем месяце транспортные расходы принять нельзя - все расходы приходятся на остаток товаров
		Возврат 0;
	КонецЕсли;
	
	// 3) рассчитывается средний процент как отношение суммы прямых расходов (пункт 1 настоящей части)
	//    к стоимости товаров (пункт 2 настоящей части);
	
	ПроцентРасходов = Окр(СуммаРасходов / СтоимостьТоваров, 8);
	
	// 4) определяется сумма прямых расходов, относящаяся к остатку нереализованных товаров, 
	//    как произведение среднего процента и стоимости остатка товаров на конец месяца.
	СальдоРасходовКонечное = Окр(ПроцентРасходов * СальдоТоваровКонечное, 2);
	
	// <конец цитаты ст.320>
	// Функция должна вернуть не сальдо расходов, а долю расходов текущего месяца
	РасходыТекущегоПериода      = СуммаРасходов - СальдоРасходовКонечное;
	Возврат РасходыТекущегоПериода / СуммаРасходов;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ ДЕКЛАРАЦИИ ПО ПРИБЫЛИ
//

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2010Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010503", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020001003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005903", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030203", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030019003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040015003", Истина, Истина);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010603", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010703", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020001003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005903", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030203", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030019003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040015003", Истина, Истина);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	// Приложение 1 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010603", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010703", Истина, Истина);
	
	// Приложение 2 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013503", Истина, Истина);
	
	// Приложение 4 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040015003", Истина, Истина);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2015Кв1(ПоказателиОтчета) Экспорт
	
	// В основном, код этой процедуры скопирован из ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2013Кв4.
	// Такой код отличается номерами ячеек.
	// Кроме того, заполнение отдельных строк выполняется только в налоговых периодах до 2015 года.
	// Остальные изменения следует вносить одновременно в ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2013Кв4() 
	// и ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2015Кв1()
	
	// Приложение 1 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010603", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010703", Истина, Истина);
	
	// Приложение 2 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013503", Истина, Истина);
	
	// Приложение 4 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240015003", Истина, Истина);
	
КонецПроцедуры

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры);
КонецПроцедуры

Функция ПолучитьМассивВнереализационныхРасходов()
	
	Массив = Новый Массив;
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВИностранныхОрганизациях);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВРоссийскихОрганизациях);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделок);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделокОР);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СдачаИмуществаВАрендуИлиСубаренду);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОтчисленияВОценочныеРезервы);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПремияПокупателю);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагам);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РасходыНаУслугиБанков);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РасходыОтСниженияСтоимостиАктивов);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам);
	
	Возврат Массив;
	
КонецФункции

Функция БухИтогиНайти(Колонка, Счет, ТаблицаПоиска)
	
	Строка = ТаблицаПоиска.Найти(Счет, "Счет");
	Если Строка = Неопределено Тогда
		Возврат 0;
	Иначе
		Значение = Строка[Колонка];
		Если Значение = Неопределено Или Значение = NULL Тогда
			Возврат 0;
		Иначе
			ВОзврат Значение;
		КонецЕсли;
	КонецЕсли;
КонецФункции

// Функция рассчитывает прибыли убытки по указанном виду доходов и расходов
//
// Параметры:
//   Счет учета доходов   91.01
//   Счет учета расхоов   91.02
//   Вид доходов и расходов из перечисления ВидыПрочихДоходовИРасходов
//   Флаг выдаваемого результата. "Убыток" - выдать сумму убытка, иначе - выдать сумму прибыли.
//
//
Функция ПрибылиИУбытки(Запрос, Счет911, Счет912, ВидРасходов, Флаг) Экспорт
	 
	Запрос.УстановитьПараметр("Счет911",      Счет911);
	Запрос.УстановитьПараметр("Счет912",      Счет912);
	// Для хозрасчетного плана счетов надо исключать перенос убытков от реализации амотризируемого имущества - проводки Дт 91.02 Кт 97.21 
	Запрос.УстановитьПараметр("КорСчет",      ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидРасходов",  ВидРасходов);
	
	Массив = Новый Массив;
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы);
	Запрос.УстановитьПараметр("ВидыСубконто",  Массив);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборот) КАК Результат,
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет = &Счет911, &ВидыСубконто, Организация В (&СписокОрганизаций), КорСчет <> &КорСчет, ) КАК ХозрасчетныйОбороты
	|";
	
	Если ЗначениеЗаполнено(ВидРасходов) Тогда
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1.ВидПрочихДоходовИРасходов = &ВидРасходов
		|";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборот),
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет = &Счет912, &ВидыСубконто, Организация В (&СписокОрганизаций), КорСчет <> &КорСчет, ) КАК ХозрасчетныйОбороты
	|";
	
	Если ЗначениеЗаполнено(ВидРасходов) Тогда
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1.ВидПрочихДоходовИРасходов = &ВидРасходов
		|";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2";
	
	
	БухИтогиРезультат = Запрос.Выполнить().Выгрузить();
	БухИтогиРезультат.Свернуть("Субконто2", "Результат");
	Результат = 0;
	Для Каждого Строка Из БухИтогиРезультат Цикл
		Если Флаг = "Убыток" Тогда
			РезультатТек = ?(Строка.Результат > 0, Строка.Результат, 0);
		Иначе
			РезультатТек = ?(Строка.Результат < 0, - Строка.Результат, 0);
		КонецЕсли;
		
		Результат = Результат + РезультатТек;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДополнительныеПараметрыСубконто(ВидСубконто1 = Неопределено, Субконто1 = Неопределено, ВидСубконто2 = Неопределено, Субконто2 = Неопределено, ВидСубконто3 = Неопределено, Субконто3 = Неопределено)
	ДополнительныеПараметры = Новый Структура;
	Если ВидСубконто1 <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("Субконто1", Новый Структура("ВидСубконто, ЗначениеСубконто",ВидСубконто1, Субконто1));
	КонецЕсли;
	Если ВидСубконто2 <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("Субконто2", Новый Структура("ВидСубконто, ЗначениеСубконто",ВидСубконто2, Субконто2));
	КонецЕсли;
	Если ВидСубконто3 <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("Субконто3", Новый Структура("ВидСубконто, ЗначениеСубконто",ВидСубконто3, Субконто3));
	КонецЕсли;
	Возврат ДополнительныеПараметры;
КонецФункции

Процедура ВставитьРасшифровкуКосвенныхРасходов(НазваниеРасшифровки, ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, ИмяПоказателя, ВидРасходовНУ = Неопределено)
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	СчетаКосвенныхЗатрат = Новый Массив;
	СчетаКосвенныхЗатрат.Добавить(ПС.ОсновноеПроизводство);
	СчетаКосвенныхЗатрат.Добавить(ПС.ВспомогательныеПроизводства);
	СчетаКосвенныхЗатрат.Добавить(ПС.ОбщепроизводственныеРасходы);
	СчетаКосвенныхЗатрат.Добавить(ПС.ОбщехозяйственныеРасходы);
	СчетаКосвенныхЗатрат.Добавить(ПС.ОбслуживающиеПроизводства);
	СчетаКосвенныхЗатрат.Добавить(ПС.БракВПроизводстве);
	СчетаКосвенныхЗатрат.Добавить(ПС.РасходыНаПродажу);
	
	КорСчета = Новый Массив;
	КорСчета.Добавить(ПС.Продажи_РасходыНаПродажуНеЕНВД);
	КорСчета.Добавить(ПС.Продажи_УправленческиеРасходыНеЕНВД);
	
	ЗапросКосвЗатрат = Новый Запрос;
	ЗапросКосвЗатрат.УстановитьПараметр("ДатаНач", 				Запрос.Параметры.ДатаНач);	 
	ЗапросКосвЗатрат.УстановитьПараметр("ДатаКон", 				Запрос.Параметры.ДатаКон);
	ЗапросКосвЗатрат.УстановитьПараметр("СписокОрганизаций", 	Запрос.Параметры.СписокОрганизаций);
	ЗапросКосвЗатрат.УстановитьПараметр("Счет",         		СчетаКосвенныхЗатрат);
	ЗапросКосвЗатрат.УстановитьПараметр("КорСчет",      		КорСчета);
	ЗапросКосвЗатрат.УстановитьПараметр("ВидСубконто",			ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	ЗапросКосвЗатрат.УстановитьПараметр("ТранспортныеРасходы", 	Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	ЗапросКосвЗатрат.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаКосвенныхЗатрат
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_КорСчетаКосвенныхЗатрат
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Счет.Код КАК СчетКод,
	|	ХозрасчетныйОбороты.Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаКосвенныхЗатрат.Счет
	|				ИЗ
	|					ВТ_СчетаКосвенныхЗатрат),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_КорСчетаКосвенныхЗатрат.Счет
	|				ИЗ
	|					ВТ_КорСчетаКосвенныхЗатрат),
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ <> &ТранспортныеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Счет.Код,
	|	ХозрасчетныйОбороты.Субконто1";  	
	
	Если  ВидРасходовНУ <> Неопределено Тогда
		ЗапросКосвЗатрат.УстановитьПараметр("ВидРасходовНУ", ВидРасходовНУ);
		ЗапросКосвЗатрат.Текст = СтрЗаменить(ЗапросКосвЗатрат.Текст, 
			"ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ <> &ТранспортныеРасходы",
			"ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ = &ВидРасходовНУ"); 
	КонецЕсли;
	
	ВыборкаКосвЗатрат = ЗапросКосвЗатрат.Выполнить().Выгрузить();
	
	Для Каждого Выборка Из ВыборкаКосвЗатрат Цикл
			ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат, Выборка.Субконто1);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, НазваниеРасшифровки, "+", "!КО"+Выборка.СчетКод, Выборка.КО, "Лист02_Прил2", ДополнительныеПараметры);
	КонецЦикла;

КонецПроцедуры

Процедура ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, ИмяПоказателя, ВидСуммы, СписокПрочихДоходовИРасходов)
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос.УстановитьПараметр("Счет",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрочиеДоходыИРасходы));
	Запрос.УстановитьПараметр("ВидСубконто",  	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов", 	ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые",	Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("ЕНВД",          	Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК ВидРасхода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счет),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&ВидРасходов)
	|				И Не ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЕНВД
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,Месяц) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	Если ВидСуммы = "КО" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СуммаНУОборотДт", "СуммаНУОборотКт");
		Счет = ПС.ПрочиеДОходы.Код;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "(&ВидРасходов)", "(&ВидРасходов) И НЕ Субконто1.ВидПрочихДоходовИРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет),ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности),ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам))");
		Счет = ПС.ПрочиеРасходы.Код;
	КонецЕсли;
	
	ВидСубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Выборка Из Результат Цикл
		ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоПрочиеДоходыРасходы, БухИтогиНайти("СписокЗатрат", Выборка.ВидРасхода, СписокПрочихДоходовИРасходов));
		Если ВидСуммы = "КО" Тогда
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, "Строка 100 ""Внереализационные доходы - всего""", "+", "!" + ВидСуммы+Счет, Выборка.Сумма, "Лист02_Прил1", ДополнительныеПараметры);
		Иначе
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, "Строка 200 ""Внереализационные расходы - всего""", "+", "!" + ВидСуммы+Счет, Выборка.Сумма, "Лист02_Прил2", ДополнительныеПараметры);
		КонецЕсли;
	
	КонецЦикла;
		
КонецПроцедуры

Функция ТекстЗапросаСоздатьВременнуюТаблицуДолиСпециальныеРежимы() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДолиСписанияКосвенныхРасходов.ПериодРасчета, МЕСЯЦ) КАК Месяц,
	|	МИНИМУМ(ДолиСписанияКосвенныхРасходов.ДоляЕНВД) КАК Доля
	|ПОМЕСТИТЬ ДолиСпециальныеРежимы
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиСписанияКосвенныхРасходов
	|ГДЕ
	|	ДолиСписанияКосвенныхРасходов.Организация В(&Организации)
	|	И ДолиСписанияКосвенныхРасходов.Активность
	|	И ДолиСписанияКосвенныхРасходов.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДолиСписанияКосвенныхРасходов.ПериодРасчета, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	
КонецФункции

Процедура СоздатьДолиЕНВД(МенеджерВременныхТаблиц, НачалоПериода, КонецПериода, Организации) Экспорт
	
	// Оставлена для совместимости: следует использовать только в том коде, в котором еще не удалось избавиться от внутреннего соединения.
	// См. также ТекстЗапросаСоздатьВременнуюТаблицуДолиСпециальныеРежимы()
	
	Месяцы = Новый ТаблицаЗначений;
	Месяцы.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Дата"));
	ТекущийМесяц = НачалоМесяца(НачалоПериода);
	Пока ТекущийМесяц <= КонецПериода Цикл
		Месяцы.Добавить().Месяц = ТекущийМесяц;
		ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, 1);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организации",   Организации);
	Запрос.УстановитьПараметр("Месяцы",        Месяцы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Месяцы.Месяц КАК Месяц
	|ПОМЕСТИТЬ ВТ_Месяцы
	|ИЗ
	|	&Месяцы КАК Месяцы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДолиЕНВД.ДоляЕНВД КАК Доля,
	|	НАЧАЛОПЕРИОДА(ДолиЕНВД.ПериодРасчета, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТ_ДолиСписанияКосвенныхРасходов
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|ГДЕ
	|	ДолиЕНВД.Организация В(&Организации)
	|	И ДолиЕНВД.Активность
	|	И ДолиЕНВД.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДолиЕНВД.Доля КАК ДоляЕНВД,
	|	ДолиЕНВД.Месяц КАК МесяцЕНВД
	|ПОМЕСТИТЬ ДолиЕНВД
	|ИЗ
	|	ВТ_ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	Месяцы.Месяц
	|ИЗ
	|	ВТ_Месяцы КАК Месяцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|		ПО Месяцы.Месяц = ДолиЕНВД.Месяц
	|ГДЕ
	|	ДолиЕНВД.Месяц ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Месяцы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ДолиСписанияКосвенныхРасходов";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция УбытокОтРеализацииПраваТребованияВключаетсяЕдиновременно(НалоговыйПериод) Экспорт
	
	// Закон №81-ФЗ от 20 апреля 2014 года внес изменения в п. 2 ст. 279 НК РФ - отменил двухэтапный порядок 
	// включения в расходы убытка от реализации права требования.
	// Это изменение действует с 2015 года. 
	// До этой даты двухэтапный порядок применялся для реализации прав требования после наступления срока платежа.
	// Поэтому в декларации требовалось заполнять детальные сведения о таких убытках.
	ДатаНачалаЕдиновременногоВключенияУбыткаОтРеализацииПраваТребования = '2015-01-01';
	
	Возврат НалоговыйПериод >= ДатаНачалаЕдиновременногоВключенияУбыткаОтРеализацииПраваТребования;
	
КонецФункции	

Процедура ЗаполнитьОтчетПрибыльФормаОтчета2010Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке. Инициализируется в процедуре добавления записи
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	СоздатьДолиЕНВД(
		Запрос.МенеджерВременныхТаблиц, 
		Запрос.Параметры.ДатаНач, 
		Запрос.Параметры.ДатаКон, 
		Запрос.Параметры.СписокОрганизаций);
	
	Запрос.УстановитьПараметр("СчетаПрочиеДоходыИРасходы",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрочиеДоходыИРасходы));
	
	МассивНеЕНВД = Новый Массив;
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("МассивНеЕНВД",  МассивНеЕНВД);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДебетовыйОборот,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КредитовыйОборот
	|ПОМЕСТИТЬ ТаблицаПрочиеДоходыРасходыНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	Запрос.Выполнить();	
	
	// таблица итогов по всем счетам без анлитики
	Запрос.УстановитьПараметр("Счет41",  ПС.Товары);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК ДО,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК КО,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , , , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ИТОГИ
	|	СУММА(ДО),
	|	СУММА(КО)
	|ПО
	|	Счет ИЕРАРХИЯ";	
	
	БухИтоги = Запрос.Выполнить().Выгрузить();
	
	// таблица итогов по всем счетам косвенных затрат с рабивкой по виду затрат
	Запрос.УстановитьПараметр("Счет",  ПолучитьМассивСчетовУчетаРасходов());
	КорСчета = Новый Массив;
	КорСчета.Добавить(ПС.Продажи_РасходыНаПродажуНеЕНВД);
	КорСчета.Добавить(ПС.Продажи_УправленческиеРасходыНеЕНВД);
	Запрос.УстановитьПараметр("КорСчет",        КорСчета);
	Запрос.УстановитьПараметр("ВидСубконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ТранспортныеРасходы", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_КорСчетаУчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаРасходов.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаРасходов),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И НЕ ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ = &ТранспортныеРасходы,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_КорСчетаУчетаРасходов.Счет
	|				ИЗ
	|					ВТ_КорСчетаУчетаРасходов),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ";
	
	БухИтогиКосвЗатрат = Запрос.Выполнить().Выгрузить();
	
	// прочие доходы и расходы
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.ДебетовыйОборот) КАК ДО,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.КредитовыйОборот) КАК КО
	|ИЗ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД КАК ТаблицаПрочиеДоходыРасходыНеЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов";
	
	БухИтоги91 = Запрос.Выполнить().Выгрузить();
	
	// из расходов по реализации амортизируемого имущества вычитаем перенос на расходы убытков от реализации
	РеализацияАмортизируемогоИмущества = Новый Массив;
	РеализацияАмортизируемогоИмущества.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	РеализацияАмортизируемогоИмущества.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("РеализацияАмортизируемогоИмущества", РеализацияАмортизируемогоИмущества);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&РеализацияАмортизируемогоИмущества),
	|			Корсчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов),
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	БухИтогиПереносУбытковПоОСиНМА =Запрос.Выполнить().Выгрузить();
	
	// внереализационные доходы и расходы
	Запрос.УстановитьПараметр("ВидСубконто",  	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  	ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&ВидРасходов),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	БухИтоги917 = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Счет",  ПС.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	
	МассивЗапасовНУ = Новый Массив;
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.ОСвОрганизации);
	МассивЗапасовНУ.Добавить(ПС.ДоходныеВложенияВ_МЦ);
	МассивЗапасовНУ.Добавить(ПС.НематериальныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияОсновныхСредств);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияНематериальныхАктивов);
	МассивЗапасовНУ.Добавить(ПС.ОборудованиеКУстановке);
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.Материалы);
	МассивЗапасовНУ.Добавить(ПС.Полуфабрикаты);
	МассивЗапасовНУ.Добавить(ПС.Товары);
	МассивЗапасовНУ.Добавить(ПС.ТоварыОтгруженные);
	МассивЗапасовНУ.Добавить(ПС.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("КорСчет",  МассивЗапасовНУ);
	Запрос.УстановитьПараметр("ВидРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЗапасовНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт), 0) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидПрочихДоходовИРасходов = &ВидРасходов,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаЗапасовНУ.Счет
	|				ИЗ
	|					ВТ_СчетаЗапасовНУ),
	|			) КАК ХозрасчетныйОбороты";   	
	
	БухИтоги911_Излишки = Запрос.Выполнить().Выгрузить().Итог("КО");
	
	// Состав справочников "Статьи затрат" и "Прочие доходы и расходы" по видам затрат для расшифровки 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходовНУ КАК ВидЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ИТОГИ ПО
	|	ВидЗатрат,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокСтатейЗатрат = Новый ТаблицаЗначений;
	СписокСтатейЗатрат.Колонки.Добавить("Счет");
	СписокСтатейЗатрат.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидЗатрат");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокСтатейЗатрат = СписокСтатейЗатрат.Добавить();
		СтрокаСписокСтатейЗатрат.Счет = ВыборкаВидовЗатрат.ВидЗатрат;
		СтрокаСписокСтатейЗатрат.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокСтатейЗатрат.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов
	|ИЗ
	|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
	|ИТОГИ ПО
	|	ВидПрочихДоходовИРасходов,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокПрочихДоходовИРасходов = Новый ТаблицаЗначений;
	СписокПрочихДоходовИРасходов.Колонки.Добавить("Счет");
	СписокПрочихДоходовИРасходов.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПрочихДоходовИРасходов");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокПрочихДоходовИРасходов = СписокПрочихДоходовИРасходов.Добавить();
		СтрокаСписокПрочихДоходовИРасходов.Счет = ВыборкаВидовЗатрат.ВидПрочихДоходовИРасходов;
		СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка,
	|	РасходыБудущихПериодов.ВидРБП КАК Вид
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|ИТОГИ ПО
	|	Вид,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокРБП = Новый ТаблицаЗначений;
	СписокРБП.Колонки.Добавить("Счет");
	СписокРБП.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокРБП = СписокРБП.Добавить();
		СтрокаСписокРБП.Счет = ВыборкаВидовЗатрат.Вид;
		СтрокаСписокРБП.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокРБП.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 1
	
	СтраницаЛист02_Прил1 = Контейнер.Лист02_Прил1[0].Данные[0].Значение;
	
	Счет9101 = ПС.ПрочиеДоходы;
	Счет9102 = ПС.ПрочиеРасходы;

	Запрос.УстановитьПараметр("Счета9001", БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ВыручкаНеЕНВД));
	Запрос.УстановитьПараметр("НоменклутурныеГруппы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|ПОМЕСТИТЬ НоменклатурныеГруппыПродукции
	|ИЗ
	|	РегистрСведений.НоменклатурныеГруппыРеализацииПродукцииУслуг КАК НоменклатурныеГруппыПродукции
	|ГДЕ
	|	НоменклатурныеГруппыПродукции.Организация В(&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотКт, 0) КАК СуммаДохода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета9001),
	|			&НоменклутурныеГруппы,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа
	|					ИЗ
	|						НоменклатурныеГруппыПродукции),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	ТаблицаДоходПродукция = Запрос.Выполнить().Выгрузить();
	
	// Строка 011 - выручка от реализации товаров (работ, услуг) собственного производства
	СтраницаЛист02_Прил1.П002010001103 =  ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 012 - выручка от реализации покупных товаров
	СтраницаЛист02_Прил1.П002010001203 = БухИтогиНайти("КО", ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД, БухИтоги) - ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 013 - выручка от реализации имущественных прав, за исключением доходов от реализации права требования
	СтраницаЛист02_Прил1.П002010001303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	
	// Строка 014 - выручка от реализации прочего имущества
	СтраницаЛист02_Прил1.П002010001403 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	
	// Строка 020 - выручка от реализации ценных бумаг профессиональных участников рынка
	СтраницаЛист02_Прил1.П002010002003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	
	// Строка 100 - Внереализационные доходы всего
	СтраницаЛист02_Прил1.П002010010003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("КО"));
	ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, "П002010010003", "КО", СписокПрочихДоходовИРасходов);
	
	// Строка 101 - В виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде
	П002010010103 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_Прил1.П002010010103 = П002010010103;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002010010103", "Строка 101 ""Доходы в виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде""", "+", "!КО"+ПС.ПрочиеДоходы.Код, П002010010103, "Лист02_Прил1", ДополнительныеПараметры);
	
	// Строка 102 - доходы от ликвидации основных средств
	П002010010203 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_Прил1.П002010010203 = П002010010203;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002010010203", "Строка 102 ""Доходы от ликвидации основных средств""", "+", "!КО"+ПС.ПрочиеДоходы.Код, П002010010203, "Лист02_Прил1", ДополнительныеПараметры);
	
	// Строка 103 - в виде безвозмездно полученного имущества (работ, услуг) или имущественных прав (кроме указанных в статье 251 НК)
	П002010010303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, БухИтоги917);
	СтраницаЛист02_Прил1.П002010010303 = П002010010303;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002010010303", "Строка 103 ""Доходы от безвозмездного получения имущества""", "+", "!КО"+ПС.ПрочиеДоходы.Код, П002010010303, "Лист02_Прил1", ДополнительныеПараметры);
	
	// Строка 104 - в виде излишков
	П002010010403 = БухИтоги911_Излишки;
	СтраницаЛист02_Прил1.П002010010403 = П002010010403;
	
	// Строка 105 - в виде востановления аморт.премии
	П002010010503 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, БухИтоги917);
	СтраницаЛист02_Прил1.П002010010503 = П002010010503;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002010010503", "Строка 103 ""сумма восстановленных расходов на капитальные вложения в соответствии с абзацем четвертым пункта 9 статьи 258 НК""", "+", "!КО"+ПС.ПрочиеДоходы.Код, П002010010503, "Лист02_Прил1", ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 2
	
	СтраницаЛист02_Прил2 = Контейнер.Лист02_Прил2[0].Данные[0].Значение;
	
	// Строка 010 - Прямые расходы, относящиеся к реализованным товарам,
	//              работам, услугам
	Запрос.УстановитьПараметр("СчетаСебестоимостьПродажНеЕНВД", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.СебестоимостьПродажНеЕНВД));

	Товары = Новый Массив;
	Товары.Добавить(ПС.Товары);
	Товары.Добавить(ПС.ТорговаяНаценка);
	Запрос.УстановитьПараметр("Товары", Товары);
	
	ПокупныеТовары = Новый Массив;
	ПокупныеТовары.Добавить(ПС.Товары);
	ПокупныеТовары.Добавить(ПС.ТорговаяНаценка);
	ПокупныеТовары.Добавить(ПС.ПокупныеТоварыОтгруженные);
	Запрос.УстановитьПараметр("ПокупныеТовары", ПокупныеТовары);
	
	Запрос.УстановитьПараметр("ПокупныеТоварыОтгруженные", ПС.ПокупныеТоварыОтгруженные);
	Массив = Новый Массив;
	Массив.Добавить(ПС.РасчетыСПоставщикамиИПодрядчиками);
	Массив.Добавить(ПС.РасчетыСПокупателямиИЗаказчиками);
	Массив.Добавить(ПС.РасчетыСРазнымиДебиторамиИКредиторами);
	Запрос.УстановитьПараметр("ПоступлениеИВыбытиеИмуществаРаботУслугПрав", Массив);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаТовары
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Товары)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаПокупныеТоварыОтгруженные
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ПокупныеТоварыОтгруженные)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ПоступлениеИВыбытиеИмуществаРаботУслугПрав)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт) КАК СебестоимостьПродаж,
	|	0 КАК Товары,
	|	0 КАК ПокупныеТоварыОтгруженные,
	|	0 КАК ПоступлениеИВыбытиеИмуществаРаботУслугПрав
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В (&СчетаСебестоимостьПродажНеЕНВД), , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт),
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаТовары.Счет
	|				ИЗ
	|					ВТ_СчетаТовары),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт),
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПокупныеТоварыОтгруженные.Счет
	|				ИЗ
	|					ВТ_СчетаПокупныеТоварыОтгруженные),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав.Счет
	|				ИЗ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав),
	|			) КАК ХозрасчетныйОбороты";
	БухИтоги902 = Запрос.Выполнить().Выгрузить();
	
	СебестоимостьПродаж                        = БухИтоги902.Итог("СебестоимостьПродаж");
	Товары                                     = БухИтоги902.Итог("Товары");
	ПокупныеТоварыОтгруженные                  = БухИтоги902.Итог("ПокупныеТоварыОтгруженные");
	ПоступлениеИВыбытиеИмуществаРаботУслугПрав = БухИтоги902.Итог("ПоступлениеИВыбытиеИмуществаРаботУслугПрав");
	ПокупныеТовары                             = Товары + ПокупныеТоварыОтгруженные + ПоступлениеИВыбытиеИмуществаРаботУслугПрав;
	П002020001003 = СебестоимостьПродаж - ПокупныеТовары;
	СтраницаЛист02_Прил2.П002020001003 = П002020001003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы, СписокСтатейЗатрат));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020001003", "Строка 010 ""Прямые расходы, относящиеся к реализованным товарам, работам, услугам""", "+", "!ДО"+ПС.СебестоимостьПродаж.Код, СебестоимостьПродаж, "Лист02_Прил2", ДополнительныеПараметры);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020001003", "", "-", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код, - Товары, "Лист02_Прил2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020001003", "", "-", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные.Код, - ПокупныеТоварыОтгруженные, "Лист02_Прил2");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт) КАК Сумма,
	|	ХозрасчетныйОбороты.КорСчет КАК КоррСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код КАК КоррСчетКод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав.Счет
	|				ИЗ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код";
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка ИЗ Результат Цикл
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020001003", "", "-", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+Строка.КоррСчетКод, - Строка.Сумма, "Лист02_Прил2");
	КонецЦикла;
	
	// Строка 020 - Прямые расходы налогоплательщиков, осуществляющих оптовую,
	//              мелкооптовую и розничную  торговлю в текущем  отчетном
	//              (налоговом) периоде
	Запрос.УстановитьПараметр("Счета44",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыНаПродажу));
	Запрос.УстановитьПараметр("Счет90",       ПС.Продажи_РасходыНаПродажуНеЕНВД);	
	Запрос.УстановитьПараметр("ВидЗатрат",    Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета44),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД),
	|			КорСчет = &Счет90,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &ВидЗатрат";
	БухИтоги44 = Запрос.Выполнить().Выгрузить();
	П002020002003 = БухИтоги44.Итог("СуммаОборотКт") + ПокупныеТовары;
	СтраницаЛист02_Прил2.П002020002003 = П002020002003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы, СписокСтатейЗатрат));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020002003", "Строка 020 ""Прямые расходы налогоплательщиков, осуществляющих оптовую, мелкооптовую и розничную  торговлю в текущем  отчетном (налоговом) периоде""", "+", "!ОБ"+ПС.РасходыНаПродажу+" "+ПС.РасходыНаПродажу, БухИтоги44.Итог("СуммаОборотКт"), "Лист02_Прил2", ДополнительныеПараметры);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020002003", "", "+", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код, Товары, "Лист02_Прил2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020002003", "", "+", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные, ПокупныеТоварыОтгруженные, "Лист02_Прил2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020002003", "", "+", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.РасчетыСПокупателямиИЗаказчиками.Код, ПоступлениеИВыбытиеИмуществаРаботУслугПрав, "Лист02_Прил2");
	
	// Строка 030 - Стоимость реализованных покупных товаров
	П002020003003 = ПокупныеТовары;
	СтраницаЛист02_Прил2.П002020003003 = П002020003003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020003003", "Строка 030 ""Стоимость реализованных покупных товаров""", "+", "!ОБ"+ ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код, Товары, "Лист02_Прил2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020003003", "", "+", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные.Код, ПокупныеТоварыОтгруженные, "Лист02_Прил2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020003003", "", "+", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.РасчетыСПокупателямиИЗаказчиками.Код, ПоступлениеИВыбытиеИмуществаРаботУслугПрав, "Лист02_Прил2");
	
	// Строка 040 - Косвенные расходы
	КосвенныеРасходы = БухИтогиКосвЗатрат.Итог("КО");
	НалогиИСборыПрочие =  БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы, БухИтоги91);
	ПрочиеКосвенныеРасходы = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы, БухИтоги91) + БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы, БухИтоги91);
	П002020004003 = КосвенныеРасходы + ПрочиеКосвенныеРасходы + НалогиИСборыПрочие;
	
	СтраницаЛист02_Прил2.П002020004003 = П002020004003;
	ВставитьРасшифровкуКосвенныхРасходов("Строка 040 ""Косвенные расходы""", ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020004003");
	
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020004003", "", "+", "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код, ПрочиеКосвенныеРасходы, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020004003", "", "+", "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код, НалогиИСборыПрочие, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 041 - Суммы налогов и сборов, начисленные в порядке, установленном законодательством Российской
	//              Федерации о налогах и сборах, за исключением ЕСН, а также налогов, перечисленных в статье 270 НК																	
	
	НалогиИСборы =  БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НалогиИСборы, БухИтогиКосвЗатрат);
	СтраницаЛист02_Прил2.П002020004103 = НалогиИСборы + НалогиИСборыПрочие;
	ВставитьРасшифровкуКосвенныхРасходов("Строка 041 ""Суммы налогов и сборов""", ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020004103", Перечисления.ВидыРасходовНУ.НалогиИСборы);
	
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020004103", "", "+", "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код, НалогиИСборыПрочие, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 042 - Расходы на капитальные вложения размере не более 10%  
	П002020004203 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.АмортизационнаяПремия, БухИтогиКосвЗатрат);	
	СтраницаЛист02_Прил2.П002020004203 = П002020004203;
	
	// Строка 050 - Стоимость имущественных прав
	ОказаниеФинансовыхУслуг      = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	ПослеНаступленияСрокаПлатежа = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	ДоНаступленияСрокаПлатежа    = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	СтоимостьИмущественныхПравОбслПроизвдств = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91);
	СтоимостьВсехИмущественныхПрав = ОказаниеФинансовыхУслуг + ПослеНаступленияСрокаПлатежа + ДоНаступленияСрокаПлатежа + СтоимостьИмущественныхПравОбслПроизвдств;
	
	П002020005003 = СтоимостьВсехИмущественныхПрав 
				  - ОказаниеФинансовыхУслуг
				  - ДоНаступленияСрокаПлатежа
				  - ПослеНаступленияСрокаПлатежа
				  - СтоимостьИмущественныхПравОбслПроизвдств;
	СтраницаЛист02_Прил2.П002020005003 = П002020005003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005003", "Строка 050 ""Стоимость имущественных прав""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, СтоимостьВсехИмущественныхПрав, "Лист02_Прил2");
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005003", "", "-", "!ДО"+ПС.ПрочиеРасходы.Код, -ОказаниеФинансовыхУслуг, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005003", "", "-", "!ДО"+ПС.ПрочиеРасходы.Код, -ДоНаступленияСрокаПлатежа, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005003", "", "-", "!ДО"+ПС.ПрочиеРасходы.Код, -ПослеНаступленияСрокаПлатежа, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 054 - Расходы на НИОКР по перечню правительства
	П002020005403 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ, БухИтогиКосвЗатрат);
	СтраницаЛист02_Прил2.П002020005403 = П002020005403;
	
	// Строка 052 - Расходы на НИОКР 
	П002020005203 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НИОКР, БухИтогиКосвЗатрат) + П002020005403;
	СтраницаЛист02_Прил2.П002020005203 = П002020005203;
	
	ВставитьРасшифровкуКосвенныхРасходов("Строка 052 ""Расходы на НИОКР""",ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020005203", Перечисления.ВидыРасходовНУ.НИОКР);
	ВставитьРасшифровкуКосвенныхРасходов("Строка 052 ""Расходы на НИОКР""",ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020005203", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ);
	
	ВставитьРасшифровкуКосвенныхРасходов("Строка 054 ""Расходы на НИОКР по перечню Правительства РФ""", ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020005403", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ);
	
	// Строка 059 - Стоимость имущественных прав
	П002020005903 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	СтраницаЛист02_Прил2.П002020005903 = П002020005903;
	
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005903", "Строка 059 ""Стоимость имущественных прав""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002020005903, "Лист02_Прил2", ДополнительныеПараметры);
		
	// Строка 060 - Цена приобретения реализованного прочего имущества и расходы,           
	//              связанные с его реализацией
	ПрочееИмущество = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	ОбъектыСтроит = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	П002020006003 = ПрочееИмущество + ОбъектыСтроит;
	СтраницаЛист02_Прил2.П002020006003 = П002020006003;
	
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020006003", "Строка 060 ""Цена приобретения реализованного прочего имущества""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, ПрочееИмущество, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020006003", "", "+", "!ДО"+ПС.ПрочиеРасходы.Код, ОбъектыСтроит, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 070 - Расходы, связанные с приобретением и реализацией (выбытием, в т.ч. погашением)
	//              ценных бумаг профессиональными участниками рынка ценных бумаг
	П002020007003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	СтраницаЛист02_Прил2.П002020007003 = П002020007003;
	
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020007003", "Строка 070 ""Расходы, связанные с приобретением и реализацией (выбытием, в т.ч. погашением) ценных бумаг профессиональными участниками рынка ценных бумаг""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002020007003, "Лист02_Прил2", ДополнительныеПараметры);
	
	Запрос.УстановитьПараметр("Счета97", БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В (&Счета97), &ВидСубконто, Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП";
	БухИтоги97 = Запрос.Выполнить().Выгрузить();
	БухИтоги97.Свернуть("Счет","КО");	
	
	// Строка 090 - Суммы убытков прошлых лет по объектам обслуживающих производств и хозяйств, включая объекты жилищно - коммунальной и социально - культурной сферы, учитываемые в уменьшение прибыли текущего отчетного (налогового) периода, полученной по указанным видам деятельности
	П002020009003 = БухИтогиНайти("КО", Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств, БухИтоги97);
	СтраницаЛист02_Прил2.П002020009003 = П002020009003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств, СписокРБП));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020009003", "Строка 090 ""Суммы убытков прошлых лет по объектам обслуживающих производств и хозяйств""", "+", "!КО"+ ПС.РасходыБудущихПериодов.Код, П002020009003, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 100 - часть убытка от реализации амортизируемого имущества,
	//              относящаяся к расходам текущего отчетного (налогового) периода
	П002020010003 = БухИтогиНайти("КО",Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества, БухИтоги97);
	СтраницаЛист02_Прил2.П002020010003 = П002020010003;
	
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества, СписокРБП));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020010003", "Строка 100 ""часть убытка от реализации амортизируемого имущества, относящаяся к расходам текущего отчетного (налогового) периода""", "+", "!КО"+ПС.РасходыБудущихПериодов.Код, П002020010003, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
	Запрос.УстановитьПараметр("Счета02", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияОсновныхСредств));
	Запрос.УстановитьПараметр("Счета05", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияНематериальныхАктивов));
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК АмортизацияОсновныхСредств,
	|	0 КАК АмортизацияНематериальныхАктивов
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И НЕ ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения),
	|			,
	|			&ВидСубконто) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И НЕ ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения),
	|			,
	|			&ВидСубконто) КАК ХозрасчетныйОбороты";
	БухИтогиАмортизация = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОсновныхСредств       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств");
	АмортизацияНематериальныхАктивов = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов");	
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СпособАмортизации = ?(МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный, "2","1");
	Если СпособАмортизации = "1" Тогда
		
		// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_Прил2.П002020013103 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020013103", "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""", "+", "!КО"+ПС.АмортизацияОсновныхСредств.Код, АмортизацияОсновныхСредств, "Лист02_Прил2");
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020013103", "", "+", "!КО"+ПС.АмортизацияНематериальныхАктивов.Код, АмортизацияНематериальныхАктивов, "Лист02_Прил2");
		
		// Строка 132 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_Прил2.П002020013203 = АмортизацияНематериальныхАктивов;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020013203", "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""", "+", "!КО"+ПС.АмортизацияНематериальныхАктивов.Код, АмортизацияОсновныхСредств, "Лист02_Прил2");
	Иначе
		// Строка 133 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_Прил2.П002020013303 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020013303", "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""", "+", "!КО"+ПС.АмортизацияОсновныхСредств.Код, АмортизацияОсновныхСредств, "Лист02_Прил2");
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020013303", "", "+", "!КО"+ПС.АмортизацияОсновныхСредств.Код, АмортизацияНематериальныхАктивов, "Лист02_Прил2");
		// Строка 134 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_Прил2.П002020013403 = АмортизацияНематериальныхАктивов;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020013403", "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""", "+", "!КО"+ПС.АмортизацияОсновныхСредств.Код, АмортизацияНематериальныхАктивов, "Лист02_Прил2");
	КонецЕсли;
	
	// Строка 135 - Способ амортизации
	СтраницаЛист02_Прил2.П002020013503 = СпособАмортизации;
	
	// Строка 201 - Расходы ввиде процентов по долговым обязательствам
	П002020020103_1 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате, БухИтоги917);
	П002020020103_2 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269, БухИтоги917);
	СтраницаЛист02_Прил2.П002020020103 = П002020020103_1 + П002020020103_2;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020020103", "Строка 201 ""Расходы ввиде процентов по долговым обязательствам""", "+", "!КО"+Счет9102.Код, П002020020103_1, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020020103", "", "+", "!КО"+Счет9102.Код, П002020020103_2, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 301 - Убытки прошлых налоговых периодов, выявленные в текущем отчетном (налоговом) периоде
	П002020030103 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_Прил2.П002020030103 = П002020030103;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030103", "Строка 301 ""Убытки прошлых налоговых периодов, выявленные в текущем отчетном (налоговом) периоде""", "+", "!ДО"+Счет9102.Код, П002020030103, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 302 - Суммы безнадежных долгов, а в случае, если налогоплательщик
	//              принял решение о создании резерва по сомнительным долгам,
	//              суммы безнадежных долгов, не покрытые за счет средств резерва
	П002020030203 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности, БухИтоги917);
	СтраницаЛист02_Прил2.П002020030203 = П002020030203;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030203", "Строка 302 ""Суммы безнадежных долгов""", "+", "!ДО"+Счет9102.Код, П002020030203, "Лист02_Прил2", ДополнительныеПараметры);
	
   // Строка 300 - Убытки, приравненные к внереализационным расходам всего
    ПрочиеУбытки = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам, БухИтоги917); 
	П002020030003 = ПрочиеУбытки + П002020030103 + П002020030203;
	СтраницаЛист02_Прил2.П002020030003 = П002020030003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030003", "Строка 300 ""Убытки, приравненные к внереализационным расходам - всего""", "+", "!ДО"+Счет9102.Код, П002020030103, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030003", "", "+", "!ДО"+Счет9102.Код, П002020030203, "Лист02_Прил2", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030003", "", "+", "!ДО"+Счет9102.Код, ПрочиеУбытки, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 200 - Внереализационные расходы
	П002020020003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("ДО")) - П002020030103 - П002020030203 - ПрочиеУбытки;
	СтраницаЛист02_Прил2.П002020020003 = П002020020003;
	ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, "П002020020003", "ДО", СписокПрочихДоходовИРасходов);
	
	// Строка 204 - Расходы на ликвидацию ОС
	П002020020403 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_Прил2.П002020020403 = П002020020403;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020020403", "Строка 204 ""Расходы на ликвидацию выводимых из эксплуатации основных средств, объектов незавершенного строительства и иного имущества""", "+", "!ДО"+Счет9102.Код, П002020020403, "Лист02_Прил2", ДополнительныеПараметры);
	
	// Строка 205 - штрафы, пени и иные санкции за нарушение договорных или долговых обязательств
	П002020020503 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате, БухИтоги917);
	СтраницаЛист02_Прил2.П002020020503 = П002020020503;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020020503", "Строка 205 ""штрафы, пени и иные санкции за нарушение договорных или долговых обязательств""", "+", "!ДО"+Счет9102.Код, П002020020503, "Лист02_Прил2", ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 3
	
	СтраницаЛист02_Прил3 = Контейнер.Лист02_Прил3[0].Данные[0].Значение;
	
	// Строка 030 - выручка от реализации амортизируемого имущества
	ВыручкаОтРеализацииОС  = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтоги91);
	ВыручкаОтРеализацииНМА = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтоги91);
	П002030003003 = ВыручкаОтРеализацииОС + ВыручкаОтРеализацииНМА;
	СтраницаЛист02_Прил3.П002030003003 = П002030003003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030003003", "Строка 030 ""Выручка от реализации амортизируемого имущества""", "+", "!КО"+Счет9101.Код, ВыручкаОтРеализацииОС, "Лист02_Прил3", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030003003", "", "+", "!КО"+Счет9101.Код, ВыручкаОтРеализацииНМА, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 040 - Остаточная стоимость реализованного амортизируемого имущества
	//              и расходы, связанные с его реализацией
	РасходыПоОС  = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтоги91);  
	РасходыПоНМА = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтоги91);
	ПереносУбытковПоОС  = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтогиПереносУбытковПоОСиНМА);  
	ПереносУбытковПоНМА = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтогиПереносУбытковПоОСиНМА);
	П002030004003 = РасходыПоОС - ПереносУбытковПоОС + РасходыПОНМА - ПереносУбытковПоНМА;
	СтраницаЛист02_Прил3.П002030004003 = П002030004003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "Строка 040 ""Остаточная стоимость реализованного амортизируемого имущества и расходы, связанные с его реализацией""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, РасходыПоОС, "Лист02_Прил3", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "", "-", "!КО"+ПС.ПрочиеРасходы.Код, -ПереносУбытковПоОС, "Лист02_Прил3", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "", "+", "!КО"+ПС.ПрочиеРасходы.Код, РасходыПОНМА, "Лист02_Прил3", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "", "-", "!КО"+ПС.ПрочиеРасходы.Код, -ПереносУбытковПоНМА, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 050 - Прибыль от реализации амортизируемого имущества (без учета сделок, по которым получены убытки)
	ПрибыльПоАмортИмуществу = ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, "Прибыль") + ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, "Прибыль");
	СтраницаЛист02_Прил3.П002030005003 = ПрибыльПоАмортИмуществу;
	
	// Строка 060 - Убытки от реализации амортизируемого имущества (без учета сделок, по которым получена прибыль)
	УбыткиПоАмортИмуществу = ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, "Убыток") + ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, "Убыток");
	СтраницаЛист02_Прил3.П002030006003 = УбыткиПоАмортИмуществу;
	
	ДоходыОказаниеФинансовыхУслуг      = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	ДоходыПослеНаступленияСрокаПлатежа = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	ДоходыДоНаступленияСрокаПлатежа    = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	
	// Строка 070 - выручка от реализации права требования как реализации финансовых услуг
	П002030007003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_Прил3.П002030007003 = П002030007003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030007003", "Строка 070 ""Выручка от реализации права требования как реализации финансовых услуг""", "+", "!КО"+ПС.ПрочиеРасходы.Код, П002030007003, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 080 - Стоимость реализованного права требования при  его реализации как финансовой услуги
	П002030008003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_Прил3.П002030008003 = П002030008003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030008003", "Строка 080 ""Стоимость реализованного права требования при  его реализации как финансовой услуги""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002030008003, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 100 - Выручка от реализации права требования до наступления срока платежа (п.1 ст. 279 НК)
	П002030010003 = ДоходыДоНаступленияСрокаПлатежа;
	СтраницаЛист02_Прил3.П002030010003 = П002030010003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030010003", "Строка 100 ""Выручка от реализации права требования до наступления срока платежа (п.1 ст. 279 НК)""", "+", "!КО"+ПС.ПрочиеДоходы.Код, П002030010003, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 110 - Выручка от реализации права требования после наступления срока платежа (п.1 ст. 279 НК)
	П002030011003 = ДоходыПослеНаступленияСрокаПлатежа;
	СтраницаЛист02_Прил3.П002030011003 = П002030011003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030011003", "Строка 110 ""Выручка от реализации права требования после наступления срока платежа (п.1 ст. 279 НК)""", "+", "!КО"+ПС.ПрочиеДоходы.Код, П002030011003, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 120 - Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)
	П002030012003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	СтраницаЛист02_Прил3.П002030012003 = П002030012003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030012003", "Строка 120 ""Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002030012003, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 130 - Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)
	П002030013003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	СтраницаЛист02_Прил3.П002030013003 = П002030013003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030013003", "Строка 130 ""Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002030013003, "Лист02_Прил3", ДополнительныеПараметры);
	
	Запрос.УстановитьПараметр("Счет",         ПС.ПрочиеРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("КорСчет",      ПС.ПрочиеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И Субконто1.ВидПрочихДоходовИРасходов В (&ВидРасходов),
	|			КорСчет = &КорСчет,
	|			) КАК ХозрасчетныйОбороты";
	БухИтоги170 = Запрос.Выполнить().Выгрузить();
	
	// Строка 180 - Выручка от реализации товаров (работ, услуг), имущественных прав по			
	//              объектам обслуживающих производств и хозяйств, включая объекты жилищно-коммунальной и социально-культурной сферы			
	П002030018003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91); 
	СтраницаЛист02_Прил3.П002030018003 = П002030018003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030018003", "Строка 180 ""Выручка от реализации товаров (работ, услуг), имущественных прав по объектам обслуживающих производств и хозяйств""", "+", "!КО"+ПС.ПрочиеРасходы.Код, П002030018003, "Лист02_Прил3", ДополнительныеПараметры);
	
	// Строка 190 - Расходы, понесенные обслуживающими производствами и хозяйствами при реализации ими товаров (работ, услуг), имущественных прав в текущем отчетном (налоговом) периоде
	П002030019003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91); 
	СтраницаЛист02_Прил3.П002030019003 = П002030019003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030019003", "Строка 190 ""Расходы, понесенные обслуживающими производствами и хозяйствами""", "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002030019003, "Лист02_Прил3", ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 4
	
	СтраницаЛист02_Прил4 = Контейнер.Лист02_Прил4[0].Данные[0].Значение;
	
	Если Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 3 Или Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 12 Тогда
		Запрос.УстановитьПараметр("СчетаРасходыБудущихПериодов", 
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
		Запрос.УстановитьПараметр("СчетаПрибылиИУбыткиНеЕНВД", 
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрибылиИУбыткиНеЕНВД));
		Запрос.УстановитьПараметр("ВидРБП",       Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
		Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаНУОборотКт,
		|	ХозрасчетныйОбороты.Субконто1
		|ПОМЕСТИТЬ ОборотыКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП,
		|			КорСчет В (&СчетаПрибылиИУбыткиНеЕНВД),
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОборотыКт.СуммаНУОборотКт) КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП) КАК ХозрасчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКт КАК ОборотыКт
		|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = ОборотыКт.Субконто1
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Субконто1";
		УбыткиПрошлыхЛет = Запрос.Выполнить().Выгрузить();
		
		П1997 = 0;
		П1998 = 0;
		П1999 = 0;
		П2000 = 0;
		П2001 = 0;
		П2002 = 0;
		П2003 = 0;
		П2004 = 0;
		П2005 = 0;
		П2006 = 0;
		П2007 = 0;
		П2008 = 0;
		П2009 = 0;
		П2010 = 0;
		П2011 = 0;
		
		О1997 = 0;
		О1998 = 0;
		О1999 = 0;
		О2000 = 0;
		О2001 = 0;
		О2002 = 0;
		О2003 = 0;
		О2004 = 0;
		О2005 = 0;
		О2006 = 0;
		О2007 = 0;
		О2008 = 0;
		О2009 = 0;
		О2010 = 0;
		О2011 = 0;
		
		Для Каждого УбытокПрошлыхЛет Из УбыткиПрошлыхЛет Цикл
			
			ГодУбытка = Год(УбытокПрошлыхЛет.Субконто1.ДатаНачалаСписания) - 1;
			СуммаСписанногоУбытка   = УбытокПрошлыхЛет.СуммаНачальныйОстатокДт;
			СуммаНеСписанногоУбытка = УбытокПрошлыхЛет.СуммаКонечныйОстатокДт;
			Если ГодУбытка = 1997 Тогда
				П1997 = СуммаСписанногоУбытка; РБП1997 = УбытокПрошлыхЛет.Субконто1;
				О1997 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 1998 Тогда
				П1998 = СуммаСписанногоУбытка; РБП1998 = УбытокПрошлыхЛет.Субконто1;
				О1998 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 1999 Тогда
				П1999 = СуммаСписанногоУбытка; РБП1999 = УбытокПрошлыхЛет.Субконто1;
				О1999 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2000 Тогда
				П2000 = СуммаСписанногоУбытка; РБП2000 = УбытокПрошлыхЛет.Субконто1;
				О2000 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2001 Тогда
				П2001 = СуммаСписанногоУбытка; РБП2001 = УбытокПрошлыхЛет.Субконто1;
				О2001 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2002 Тогда
				П2002 = СуммаСписанногоУбытка; РБП2002 = УбытокПрошлыхЛет.Субконто1;
				О2002 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2003 Тогда
				П2003 = СуммаСписанногоУбытка; РБП2003 = УбытокПрошлыхЛет.Субконто1;
				О2003 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2004 Тогда
				П2004 = СуммаСписанногоУбытка; РБП2004 = УбытокПрошлыхЛет.Субконто1;
				О2004 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2005 Тогда
				П2005 = СуммаСписанногоУбытка; РБП2005 = УбытокПрошлыхЛет.Субконто1;
				О2005 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2006 Тогда
				П2006 = СуммаСписанногоУбытка; РБП2006 = УбытокПрошлыхЛет.Субконто1;
				О2006 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2007 Тогда
				П2007 = СуммаСписанногоУбытка; РБП2007 = УбытокПрошлыхЛет.Субконто1;
				О2007 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2008 Тогда
				П2008 = СуммаСписанногоУбытка; РБП2008 = УбытокПрошлыхЛет.Субконто1;
				О2008 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2009 Тогда
				П2009 = СуммаСписанногоУбытка; РБП2009 = УбытокПрошлыхЛет.Субконто1;
				О2009 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2010 Тогда
				П2010 = СуммаСписанногоУбытка; РБП2010 = УбытокПрошлыхЛет.Субконто1;
				О2010 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2011 Тогда
				П2011 = СуммаСписанногоУбытка; РБП2011 = УбытокПрошлыхЛет.Субконто1;
				О2011 = СуммаНеСписанногоУбытка;
			КонецЕсли;
		КонецЦикла;
		
		// Строка 020 -     убытка, полученного до 1 января 2002 года
		СтраницаЛист02_Прил4.П002040002003 = П1997+П1998 + П1999 + П2000 + П2001;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040002003", "Сумма убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1997 году - сальдо начальное по дебету счета 97", П1997, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП1997));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040002003", "Сумма убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1998 году - сальдо начальное по дебету счета 97", П1998, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП1998));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040002003", "Сумма убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1999 году - сальдо начальное по дебету счета 97", П1999, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП1999));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040002003", "Сумма убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 2000 году - сальдо начальное по дебету счета 97", П2000, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2000));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040002003", "Сумма убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 2001 году - сальдо начальное по дебету счета 97", П2001, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2001));
		
		Если П2002 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040004001 = "2002";
			СтраницаЛист02_Прил4.П002040004003 = П2002;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040004003", "Сумма убытка, полученного в 2002 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2002, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2002));
		КонецЕсли;
		
		Если П2003 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040005001 = "2003";
			СтраницаЛист02_Прил4.П002040005003 = П2003;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040005003", "Сумма убытка, полученного в 2003 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2003, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2003));
		КонецЕсли;
		
		Если П2004 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040006001 = "2004";
			СтраницаЛист02_Прил4.П002040006003 = П2004;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040006003", "Сумма убытка, полученного в 2004 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2004, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2004));
		КонецЕсли;
		
		Если П2005 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040007001 = "2005";
			СтраницаЛист02_Прил4.П002040007003 = П2005;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040007003", "Сумма убытка, полученного в 2005 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2005, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2005));
		КонецЕсли;
		
		Если П2006 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040008001 = "2006";
			СтраницаЛист02_Прил4.П002040008003 = П2006;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040008003", "Сумма убытка, полученного в 2006 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2006, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2006));
		КонецЕсли;
		
		Если П2007 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040009001 = "2007";
			СтраницаЛист02_Прил4.П002040009003 = П2007;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040009003", "Сумма убытка, полученного в 2007 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2007, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2007));
		КонецЕсли;
		
		Если П2008 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040010001 = "2008";
			СтраницаЛист02_Прил4.П002040010003 = П2008;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040010003", "Сумма убытка, полученного в 2008 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2008, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2008));
		КонецЕсли;
		
		Если П2009 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040011001 = "2009";
			СтраницаЛист02_Прил4.П002040011003 = П2009;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040011003", "Сумма убытка, полученного в 2009 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2009, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2009));
		КонецЕсли;
		
		Если П2010 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040012001 = "2010";
			СтраницаЛист02_Прил4.П002040012003 = П2010;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040012003", "Сумма убытка, полученного в 2010 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2010, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2010));
		КонецЕсли;
		
		Если П2011 <> 0 Тогда
			СтраницаЛист02_Прил4.П002040013001 = "2011";
			СтраницаЛист02_Прил4.П002040013003 = П2011;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040013003", "Сумма убытка, полученного в 2011 году", "+", "!СНД"+ПС.РасходыБудущихПериодов.Код, П2011, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2011));
		КонецЕсли;
		
		// Строка 150 - Сумма убытка или части убытка, уменьшающего   
		//              налоговую базу за отчетный  (налоговый)  период
		СуммаПоСтроке050Листа02 = 0;
		СуммаПоСтроке140Листа02 = 0;
		СуммаПоСтроке120Листа05 = 0;
		СуммаПоСтроке120Листа06 = 0;
		СуммаПоСтроке230Листа07 = 0;
		СуммаПоСтроке110Листа08 = 0;
		СуммаПоСтроке590Листа09 = 0;
		
		П002040015003 =  УбыткиПрошлыхЛет.Итог("КО");
		СтраницаЛист02_Прил4.П002040015003 = П002040015003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040015003", "Сумма убытка или части убытка, уменьшающего налоговую базу за отчетный (налоговый) период", "+", "!КО"+ПС.РасходыБудущихПериодов.Код, П002040015003, "Лист02_Прил4");
		
		// Строка 160 -    сумма неперенесенного убытка	
		П002040016003 = УбыткиПрошлыхЛет.Итог("СуммаКонечныйОстатокДт");
		СтраницаЛист02_Прил4.П002040016003 = П002040016003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040016003", "неперенесенного убытка", "+", "!СКД"+ПС.РасходыБудущихПериодов.Код, П002040016003, "Лист02_Прил4");
		
		// Строка 170 -    сумма неперенесенного убытка, полученного до 1 января 2002 года	
		П002040017003 = О1997 + О1998 + О1999 + О2000 + О2001;
		СтраницаЛист02_Прил4.П002040017003 = П002040017003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040017003", "неперенесенного убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1997 году", О1997, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП1997));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040017003", "неперенесенного убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1997 году", О1998, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП1998));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040017003", "неперенесенного убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1997 году", О1999, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП1999));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040017003", "неперенесенного убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1997 году", О2000, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2000));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002040017003", "неперенесенного убытка, полученного до 1 января 2002 года", "+", "Сумма убытка, полученного в 1997 году", О2001, "Лист02_Прил4", ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, РБП2001));
		
		// Строка 180 -    сумма неперенесенного убытка, полученного после 1 января 2002 года	
		П002040018003 = П002040016003 - П002040017003;
		СтраницаЛист02_Прил4.П002040018003 = П002040018003;
	КонецЕсли;

	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	НалоговыйУчетОбособленныхПодразделений.ЗаполнитьЛист2Приложение5ДекларацииПоПрибыли(Контейнер, ПараметрыОтчета, СписокОрганизаций, Контейнер.Лист02_Прил5);
	
	// Сохраняем таблицу расшифровок во временном хранилище в привязке к уникальному идентификатору формы
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетПрибыльФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке. Инициализируется в процедуре добавления записи
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	СоздатьДолиЕНВД(
		Запрос.МенеджерВременныхТаблиц, 
		Запрос.Параметры.ДатаНач, 
		Запрос.Параметры.ДатаКон, 
		Запрос.Параметры.СписокОрганизаций);
	
	Запрос.УстановитьПараметр("СчетаПрочиеДоходыИРасходы",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрочиеДоходыИРасходы));
	
	МассивНеЕНВД = Новый Массив;
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("МассивНеЕНВД",  МассивНеЕНВД);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДебетовыйОборот,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КредитовыйОборот
	|ПОМЕСТИТЬ ТаблицаПрочиеДоходыРасходыНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	Запрос.Выполнить();	
	
	// таблица итогов по всем счетам без анлитики
	Запрос.УстановитьПараметр("Счет41",  ПС.Товары);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК ДО,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК КО,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , , , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ИТОГИ
	|	СУММА(ДО),
	|	СУММА(КО)
	|ПО
	|	Счет ИЕРАРХИЯ";	
	
	БухИтоги = Запрос.Выполнить().Выгрузить();
	
	// таблица итогов по всем счетам косвенных затрат с рабивкой по виду затрат
	Запрос.УстановитьПараметр("Счет",  ПолучитьМассивСчетовУчетаРасходов());
	КорСчета = Новый Массив;
	КорСчета.Добавить(ПС.Продажи_РасходыНаПродажуНеЕНВД);
	КорСчета.Добавить(ПС.Продажи_УправленческиеРасходыНеЕНВД);
	Запрос.УстановитьПараметр("КорСчет",        КорСчета);
	Запрос.УстановитьПараметр("ВидСубконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ТранспортныеРасходы", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_КорСчетаУчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаРасходов.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаРасходов),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И НЕ ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ = &ТранспортныеРасходы,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_КорСчетаУчетаРасходов.Счет
	|				ИЗ
	|					ВТ_КорСчетаУчетаРасходов),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ";
	
	БухИтогиКосвЗатрат = Запрос.Выполнить().Выгрузить();
	
	// прочие доходы и расходы
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.ДебетовыйОборот) КАК ДО,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.КредитовыйОборот) КАК КО
	|ИЗ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД КАК ТаблицаПрочиеДоходыРасходыНеЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов";
	
	БухИтоги91 = Запрос.Выполнить().Выгрузить();
	
	// из расходов по реализации амортизируемого имущества вычитаем перенос на расходы убытков от реализации
	РеализацияАмортизируемогоИмущества = Новый Массив;
	РеализацияАмортизируемогоИмущества.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	РеализацияАмортизируемогоИмущества.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("РеализацияАмортизируемогоИмущества", РеализацияАмортизируемогоИмущества);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&РеализацияАмортизируемогоИмущества),
	|			Корсчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов),
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,Месяц) = ДолиЕНВД.МесяцЕНВД)
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	БухИтогиПереносУбытковПоОСиНМА =Запрос.Выполнить().Выгрузить();
	
	// внереализационные доходы и расходы
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&ВидРасходов),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,Месяц) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	БухИтоги917 = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Счет",  ПС.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	
	МассивЗапасовНУ = Новый Массив;
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.ОСвОрганизации);
	МассивЗапасовНУ.Добавить(ПС.ДоходныеВложенияВ_МЦ);
	МассивЗапасовНУ.Добавить(ПС.НематериальныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияОсновныхСредств);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияНематериальныхАктивов);
	МассивЗапасовНУ.Добавить(ПС.ОборудованиеКУстановке);
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.Материалы);
	МассивЗапасовНУ.Добавить(ПС.Полуфабрикаты);
	МассивЗапасовНУ.Добавить(ПС.Товары);
	МассивЗапасовНУ.Добавить(ПС.ТоварыОтгруженные);
	МассивЗапасовНУ.Добавить(ПС.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("КорСчет",  МассивЗапасовНУ);
	Запрос.УстановитьПараметр("ВидРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЗапасовНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт), 0) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидПрочихДоходовИРасходов = &ВидРасходов,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаЗапасовНУ.Счет
	|				ИЗ
	|					ВТ_СчетаЗапасовНУ),
	|			) КАК ХозрасчетныйОбороты";
	
	БухИтоги911_Излишки = Запрос.Выполнить().Выгрузить().Итог("КО");
	
	// Состав справочников "Статьи затрат" и "Прочие доходы и расходы" по видам затрат для расшифровки 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходовНУ КАК ВидЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ИТОГИ ПО
	|	ВидЗатрат,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокСтатейЗатрат = Новый ТаблицаЗначений;
	СписокСтатейЗатрат.Колонки.Добавить("Счет");
	СписокСтатейЗатрат.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидЗатрат");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокСтатейЗатрат = СписокСтатейЗатрат.Добавить();
		СтрокаСписокСтатейЗатрат.Счет = ВыборкаВидовЗатрат.ВидЗатрат;
		СтрокаСписокСтатейЗатрат.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокСтатейЗатрат.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов
	|ИЗ
	|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
	|ИТОГИ ПО
	|	ВидПрочихДоходовИРасходов,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокПрочихДоходовИРасходов = Новый ТаблицаЗначений;
	СписокПрочихДоходовИРасходов.Колонки.Добавить("Счет");
	СписокПрочихДоходовИРасходов.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПрочихДоходовИРасходов");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокПрочихДоходовИРасходов = СписокПрочихДоходовИРасходов.Добавить();
		СтрокаСписокПрочихДоходовИРасходов.Счет = ВыборкаВидовЗатрат.ВидПрочихДоходовИРасходов;
		СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка,
	|	РасходыБудущихПериодов.ВидРБП КАК Вид
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|ИТОГИ ПО
	|	Вид,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокРБП = Новый ТаблицаЗначений;
	СписокРБП.Колонки.Добавить("Счет");
	СписокРБП.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокРБП = СписокРБП.Добавить();
		СтрокаСписокРБП.Счет = ВыборкаВидовЗатрат.Вид;
		СтрокаСписокРБП.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокРБП.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 1
	
	СтраницаЛист02_1 = Контейнер.Лист02_1[0].Данные[0].Значение;
	
	Счет9101 = ПС.ПрочиеДоходы;
	Счет9102 = ПС.ПрочиеРасходы;

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("СчетаВыручкаНеЕНВД", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ВыручкаНеЕНВД));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|ПОМЕСТИТЬ НоменклатурныеГруппыПродукции
	|ИЗ
	|	РегистрСведений.НоменклатурныеГруппыРеализацииПродукцииУслуг КАК НоменклатурныеГруппыПродукции
	|ГДЕ
	|	НоменклатурныеГруппыПродукции.Организация В(&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотКт, 0) КАК СуммаДохода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаВыручкаНеЕНВД),
	|			&ВидыСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И (Субконто1 В
	|						(ВЫБРАТЬ
	|							НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа
	|						ИЗ
	|							НоменклатурныеГруппыПродукции)
	|					ИЛИ ВЫРАЗИТЬ(Субконто2 КАК Справочник.Номенклатура).Услуга),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	ТаблицаДоходПродукция = Запрос.Выполнить().Выгрузить();
	
	// Строка 011 - выручка от реализации товаров (работ, услуг) собственного производства
	СтраницаЛист02_1.П002010001103 =  ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 012 - выручка от реализации покупных товаров
	СтраницаЛист02_1.П002010001203 = БухИтогиНайти("КО", ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД, БухИтоги) - ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 013 - выручка от реализации имущественных прав, за исключением доходов от реализации права требования
	П002010001303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030007003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_1.П002010001303 = П002010001303 + П002030007003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, 
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010001303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат", 
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002030007003,
							  "Лист02_1",
							  ДополнительныеПараметры);

	// Строка 014 - выручка от реализации прочего имущества
	Доходы_ПрочееИмущество = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	Доходы_ОбъектыСтроит = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	СтраницаЛист02_1.П002010001403 = Доходы_ПрочееИмущество + Доходы_ОбъектыСтроит;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001403",
							  "Строка 014 ""Выручка от реализации прочего имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ПрочееИмущество,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001403",
							  "",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ОбъектыСтроит,
							  "Лист02_1",
							  ДополнительныеПараметры);
								   
	// Строка 020 - выручка от реализации ценных бумаг профессиональных участников рынка
	СтраницаЛист02_1.П002010002003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	
	// Строка 100 - Внереализационные доходы всего
	СтраницаЛист02_1.П002010010003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("КО"));
	ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, "П002010010003", "КО", СписокПрочихДоходовИРасходов);
	
	// Строка 101 - В виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде
	П002010010103 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_1.П002010010103 = П002010010103;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
											Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет,
											СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010103",
							  "Строка 101 ""Доходы в виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010103,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 102 - доходы от ликвидации основных средств
	П002010010203 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_1.П002010010203 = П002010010203;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010203",
							  "Строка 102 ""Доходы от ликвидации основных средств""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010203,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 103 - в виде безвозмездно полученного имущества (работ, услуг) или имущественных прав (кроме указанных в статье 251 НК)
	П002010010303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, БухИтоги917);
	СтраницаЛист02_1.П002010010303 = П002010010303;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010303",
							  "Строка 103 ""Доходы от безвозмездного получения имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 104 - в виде излишков
	П002010010403 = БухИтоги911_Излишки;
	СтраницаЛист02_1.П002010010403 = П002010010403;
	
	// Строка 105 - в виде востановления аморт.премии
	П002010010503 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, БухИтоги917);
	СтраницаЛист02_1.П002010010503 = П002010010503;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010503",
							  "Строка 103 ""сумма восстановленных расходов на капитальные вложения в соответствии с абзацем четвертым пункта 9 статьи 258 НК""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010503,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 107 - в сумм корректировки прибыли до рыночных цен
	П002010010703 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен, БухИтоги917);
	СтраницаЛист02_1.П002010010703 = П002010010703;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010703",
							  "Строка 107 ""сумма корректировки прибыли до рыночных цен""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010703,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 2
	
	СтраницаЛист02_2 = Контейнер.Лист02_2[0].Данные[0].Значение;
	
	// Строка 010 - Прямые расходы, относящиеся к реализованным товарам,
	//              работам, услугам
	Запрос.УстановитьПараметр("СчетаСебестоимостьПродажНеЕНВД", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.СебестоимостьПродажНеЕНВД));
	
	Товары = Новый Массив;
	Товары.Добавить(ПС.Товары);
	Товары.Добавить(ПС.ТорговаяНаценка);
	Запрос.УстановитьПараметр("Товары", Товары);
	
	ПокупныеТовары = Новый Массив;
	ПокупныеТовары.Добавить(ПС.Товары);
	ПокупныеТовары.Добавить(ПС.ТорговаяНаценка);
	ПокупныеТовары.Добавить(ПС.ПокупныеТоварыОтгруженные);
	Запрос.УстановитьПараметр("ПокупныеТовары", ПокупныеТовары);
	
	Запрос.УстановитьПараметр("ПокупныеТоварыОтгруженные", ПС.ПокупныеТоварыОтгруженные);
	Массив = Новый Массив;
	Массив.Добавить(ПС.РасчетыСПоставщикамиИПодрядчиками);
	Массив.Добавить(ПС.РасчетыСПокупателямиИЗаказчиками);
	Массив.Добавить(ПС.РасчетыСРазнымиДебиторамиИКредиторами);
	Запрос.УстановитьПараметр("ПоступлениеИВыбытиеИмуществаРаботУслугПрав", Массив);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаТовары
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Товары)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаПокупныеТоварыОтгруженные
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ПокупныеТоварыОтгруженные)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ПоступлениеИВыбытиеИмуществаРаботУслугПрав)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт) КАК СебестоимостьПродаж,
	|	0 КАК Товары,
	|	0 КАК ПокупныеТоварыОтгруженные,
	|	0 КАК ПоступлениеИВыбытиеИмуществаРаботУслугПрав
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В (&СчетаСебестоимостьПродажНеЕНВД), , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт),
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаТовары.Счет
	|				ИЗ
	|					ВТ_СчетаТовары),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт),
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПокупныеТоварыОтгруженные.Счет
	|				ИЗ
	|					ВТ_СчетаПокупныеТоварыОтгруженные),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав.Счет
	|				ИЗ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав),
	|			) КАК ХозрасчетныйОбороты";
	БухИтоги902 = Запрос.Выполнить().Выгрузить();
	
	СебестоимостьПродаж                        = БухИтоги902.Итог("СебестоимостьПродаж");
	Товары                                     = БухИтоги902.Итог("Товары");
	ПокупныеТоварыОтгруженные                  = БухИтоги902.Итог("ПокупныеТоварыОтгруженные");
	ПоступлениеИВыбытиеИмуществаРаботУслугПрав = БухИтоги902.Итог("ПоступлениеИВыбытиеИмуществаРаботУслугПрав");
	ПокупныеТовары                             = Товары + ПокупныеТоварыОтгруженные + ПоступлениеИВыбытиеИмуществаРаботУслугПрав;
	П002020001003 = СебестоимостьПродаж - ПокупныеТовары;
	СтраницаЛист02_2.П002020001003 = П002020001003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020001003",
							  "Строка 010 ""Прямые расходы, относящиеся к реализованным товарам, работам, услугам""",
							  "+",
							  "!ДО"+ПС.СебестоимостьПродаж.Код,
							  СебестоимостьПродаж,
							  "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020001003",
							  "",
							  "-",
							  "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код,
							  - Товары,
							  "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020001003",
							  "",
							  "-",
							  "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные.Код,
							  - ПокупныеТоварыОтгруженные,
							  "Лист02_2");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт) КАК Сумма,
	|	ХозрасчетныйОбороты.КорСчет КАК КоррСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код КАК КоррСчетКод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаСебестоимостьПродажНеЕНВД),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав.Счет
	|				ИЗ
	|					ВТ_СчетаПоступлениеИВыбытиеИмуществаРаботУслугПрав),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код";
	ТаблицаПоступлениеИВыбытиеИмуществаРаботУслугПрав = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из ТаблицаПоступлениеИВыбытиеИмуществаРаботУслугПрав Цикл
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, 
			"П002020001003", 
			"", 
			"-", 
			"!ОБ"+ПС.СебестоимостьПродаж.Код+" "+Строка.КоррСчетКод, 
			- Строка.Сумма, 
			"Лист02_2");
	КонецЦикла;
	
	// Строка 020 - Прямые расходы налогоплательщиков, осуществляющих оптовую,
	//              мелкооптовую и розничную  торговлю в текущем  отчетном
	//              (налоговом) периоде
	Запрос.УстановитьПараметр("Счета44",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыНаПродажу));
	Запрос.УстановитьПараметр("Счет90",       ПС.Продажи_РасходыНаПродажуНеЕНВД);	
	Запрос.УстановитьПараметр("ВидЗатрат",    Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета44),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД),
	|			КорСчет = &Счет90,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ = &ВидЗатрат";
	
	БухИтоги44 = Запрос.Выполнить().Выгрузить();
	П002020002003 = БухИтоги44.Итог("СуммаОборотКт") + ПокупныеТовары;
	СтраницаЛист02_2.П002020002003 = П002020002003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,
		БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы, СписокСтатейЗатрат));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020002003",
							  "Строка 020 ""Прямые расходы налогоплательщиков, осуществляющих оптовую, мелкооптовую и розничную  торговлю в текущем  отчетном (налоговом) периоде""",
							  "+",
							  "!ОБ"+ПС.Продажи_РасходыНаПродажуНеЕНВД+" "+ПС.РасходыНаПродажу,
							  БухИтоги44.Итог("СуммаОборотКт"),
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020002003",
							  "",
							  "+",
							  "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код,
							  Товары,
							  "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020002003",
							  "",
							  "+",
							  "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные,
							  ПокупныеТоварыОтгруженные,
							  "Лист02_2");
	Для Каждого Строка Из ТаблицаПоступлениеИВыбытиеИмуществаРаботУслугПрав Цикл
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, 
			"П002020002003", 
			"", 
			"+", 
			"!ОБ"+ПС.СебестоимостьПродаж.Код+" "+Строка.КоррСчетКод, 
			Строка.Сумма, 
			"Лист02_2");
	КонецЦикла;
	
	// Строка 030 - Стоимость реализованных покупных товаров
	П002020003003 = ПокупныеТовары;
	СтраницаЛист02_2.П002020003003 = П002020003003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020003003",
							  "Строка 030 ""Стоимость реализованных покупных товаров""",
							  "+",
							  "!ОБ"+ ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код,
							  Товары,
							  "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020003003",
							  "",
							  "+",
							  "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные.Код,
							  ПокупныеТоварыОтгруженные, 
							  "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020003003",
							  "",
							  "+",
							  "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.РасчетыСПокупателямиИЗаказчиками.Код,
							  ПоступлениеИВыбытиеИмуществаРаботУслугПрав,
							  "Лист02_2");
	
	// Строка 040 - Косвенные расходы
	КосвенныеРасходы =       БухИтогиКосвЗатрат.Итог("КО");
	НалогиИСборыПрочие =     БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы, БухИтоги91);
	ПрочиеКосвенныеРасходы = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы, БухИтоги91)
						   + БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы, БухИтоги91);
	П002020004003 = КосвенныеРасходы + ПрочиеКосвенныеРасходы + НалогиИСборыПрочие;
	
	СтраницаЛист02_2.П002020004003 = П002020004003;
	ВставитьРасшифровкуКосвенныхРасходов("Строка 040 ""Косвенные расходы""", ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020004003");
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020004003",
							  "",
							  "+",
							  "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код,
							  ПрочиеКосвенныеРасходы,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020004003",
							  "",
							  "+",
							  "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код,
							  НалогиИСборыПрочие,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 041 - Суммы налогов и сборов, начисленные в порядке, установленном законодательством Российской
	//              Федерации о налогах и сборах, за исключением ЕСН, а также налогов, перечисленных в статье 270 НК																	
	
	НалогиИСборы =  БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НалогиИСборы, БухИтогиКосвЗатрат);
	СтраницаЛист02_2.П002020004103 = НалогиИСборы + НалогиИСборыПрочие;
	ВставитьРасшифровкуКосвенныхРасходов("Строка 041 ""Суммы налогов и сборов""",
										 ТаблицаРасшифровки,
										 Запрос,
										 СписокСтатейЗатрат,
										 "П002020004103",
										 Перечисления.ВидыРасходовНУ.НалогиИСборы);
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020004103",
							  "",
							  "+",
							  "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код,
							  НалогиИСборыПрочие,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 042 - Расходы на капитальные вложения размере не более 10%  
	П002020004203 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.АмортизационнаяПремия, БухИтогиКосвЗатрат);	
	СтраницаЛист02_2.П002020004203 = П002020004203;
	
	// Строка 050 - Стоимость имущественных прав
	ОказаниеФинансовыхУслуг      = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	ПослеНаступленияСрокаПлатежа = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	ДоНаступленияСрокаПлатежа    = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	СтоимостьИмущественныхПравОбслПроизвдств = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91);
	СтоимостьВсехИмущественныхПрав = ОказаниеФинансовыхУслуг + ПослеНаступленияСрокаПлатежа + ДоНаступленияСрокаПлатежа + СтоимостьИмущественныхПравОбслПроизвдств;
	
	П002020005003 = СтоимостьВсехИмущественныхПрав 
				  - ОказаниеФинансовыхУслуг
				  - ДоНаступленияСрокаПлатежа
				  - ПослеНаступленияСрокаПлатежа
				  - СтоимостьИмущественныхПравОбслПроизвдств;
	СтраницаЛист02_2.П002020005003 = П002020005003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020005003", 
							  "Строка 050 ""Стоимость имущественных прав""", "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  СтоимостьВсехИмущественныхПрав,
							  "Лист02_2");
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020005003",
							  "",
							  "-",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  -ОказаниеФинансовыхУслуг,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020005003",
							  "",
							  "-",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  -ДоНаступленияСрокаПлатежа,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020005003",
							  "",
							  "-",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  -ПослеНаступленияСрокаПлатежа,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 054 - Расходы на НИОКР по перечню правительства
	П002020005403 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ, БухИтогиКосвЗатрат);
	СтраницаЛист02_2.П002020005403 = П002020005403;
	
	// Строка 052 - Расходы на НИОКР 
	П002020005203 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НИОКР, БухИтогиКосвЗатрат) + П002020005403;
	СтраницаЛист02_2.П002020005203 = П002020005203;
	
	ВставитьРасшифровкуКосвенныхРасходов("Строка 052 ""Расходы на НИОКР""",
										 ТаблицаРасшифровки,
										 Запрос,
										 СписокСтатейЗатрат,
										 "П002020005203",
										 Перечисления.ВидыРасходовНУ.НИОКР);
	ВставитьРасшифровкуКосвенныхРасходов("Строка 052 ""Расходы на НИОКР""",
									     ТаблицаРасшифровки,
										 Запрос,
										 СписокСтатейЗатрат,
										 "П002020005203",
										 Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ);
	
	ВставитьРасшифровкуКосвенныхРасходов("Строка 054 ""Расходы на НИОКР по перечню Правительства РФ""",
										 ТаблицаРасшифровки,
										 Запрос,
										 СписокСтатейЗатрат,
										 "П002020005403",
										 Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ);
	
	// Строка 059 - Стоимость имущественных прав
	П002020005903 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030008003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_2.П002020005903 = П002020005903 + П002030008003;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020005903",
							  "Строка 059 ""Стоимость имущественных прав""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  П002020005903,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020005903",
							  "Строка 059 ""Стоимость имущественных прав""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  П002030008003,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	
	// Строка 060 - Цена приобретения реализованного прочего имущества и расходы,           
	//              связанные с его реализацией
	ПрочееИмущество = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	ОбъектыСтроит = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	П002020006003 = ПрочееИмущество + ОбъектыСтроит;
	СтраницаЛист02_2.П002020006003 = П002020006003;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020006003",
							  "Строка 060 ""Цена приобретения реализованного прочего имущества""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  ПрочееИмущество,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020006003",
							  "",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  ОбъектыСтроит,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 070 - Расходы, связанные с приобретением и реализацией (выбытием, в т.ч. погашением)
	//              ценных бумаг профессиональными участниками рынка ценных бумаг
	П002020007003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	СтраницаЛист02_2.П002020007003 = П002020007003;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, 
							  "П002020007003",
							  "Строка 070 ""Расходы, связанные с приобретением и реализацией (выбытием, в т.ч. погашением) ценных бумаг профессиональными участниками рынка ценных бумаг""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  П002020007003,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	Запрос.УстановитьПараметр("Счета97",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В (&Счета97), &ВидСубконто, Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП";
	БухИтоги97 = Запрос.Выполнить().Выгрузить();
	БухИтоги97.Свернуть("Счет","КО");	
	
	// Строка 090 - Суммы убытков прошлых лет по объектам обслуживающих производств и хозяйств, включая объекты жилищно - коммунальной и социально - культурной сферы, учитываемые в уменьшение прибыли текущего отчетного (налогового) периода, полученной по указанным видам деятельности
	П002020009003 = БухИтогиНайти("КО", Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств, БухИтоги97);
	СтраницаЛист02_2.П002020009003 = П002020009003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств,
														  СписокРБП));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020009003",
							  "Строка 090 ""Суммы убытков прошлых лет по объектам обслуживающих производств и хозяйств""",
							  "+",
							  "!КО"+ ПС.РасходыБудущихПериодов.Код,
							  П002020009003,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 100 - часть убытка от реализации амортизируемого имущества,
	//              относящаяся к расходам текущего отчетного (налогового) периода
	П002020010003 = БухИтогиНайти("КО",Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества, БухИтоги97);
	СтраницаЛист02_2.П002020010003 = П002020010003;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества,
														  СписокРБП));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020010003",
							  "Строка 100 ""часть убытка от реализации амортизируемого имущества, относящаяся к расходам текущего отчетного (налогового) периода""",
							  "+",
							  "!КО"+ПС.РасходыБудущихПериодов.Код,
							  П002020010003,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	
	// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
	Запрос.УстановитьПараметр("Счета02",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияОсновныхСредств));
	Запрос.УстановитьПараметр("Счета05",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияНематериальныхАктивов));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК АмортизацияОсновныхСредств,
	|	0 КАК АмортизацияНематериальныхАктивов,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * (1 - ДолиЕНВД.ДоляЕНВД)),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * (1 - ДолиЕНВД.ДоляЕНВД)),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Амортизация.АмортизацияОсновныхСредств) КАК АмортизацияОсновныхСредств,
	|	СУММА(Амортизация.АмортизацияНематериальныхАктивов) КАК АмортизацияНематериальныхАктивов,
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|				ТОГДА Амортизация.АмортизацияОсновныхСредств
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияОсновныхСредств8_10,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|				ТОГДА Амортизация.АмортизацияНематериальныхАктивов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияНематериальныхАктивов8_10,
	|	Амортизация.АмортизационнаяГруппа
	|ИЗ
	|	Амортизация КАК Амортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	Амортизация.АмортизационнаяГруппа";
	
	БухИтогиАмортизация = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОсновныхСредств       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств");
	АмортизацияНематериальныхАктивов = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов");
	АмортизацияОсновныхСредств8_10       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств8_10");
	АмортизацияНематериальныхАктивов8_10 = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов8_10");
	
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СпособАмортизации = ?(МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный, "2","1");
	
	Если СпособАмортизации = "1" Тогда
		
		// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П002020013103 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		
		// Строка 132 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П002020013203 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П002020013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										 "Лист02_2",
										 ДополнительныеПараметры);
			КонецЕсли;
			
		КонецЦикла;
		СтраницаЛист02_2.П002020013303 = 0;
		СтраницаЛист02_2.П002020013403 = 0;
	Иначе
		СтраницаЛист02_2.П002020013103 = АмортизацияОсновныхСредств8_10;
		СтраницаЛист02_2.П002020013203 = АмортизацияНематериальныхАктивов8_10;
		// Строка 133 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П002020013303 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов
										-АмортизацияОсновныхСредств8_10 - АмортизацияНематериальныхАктивов8_10;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013303",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013303",
										  "",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов - СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2");
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		// Строка 134 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П002020013403 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013403",
										  "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
				Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда						  
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П002020013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										 "Лист02_2",
										 ДополнительныеПараметры);
				 КонецЕсли;
			 КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Строка 135 - Способ амортизации
	СтраницаЛист02_2.П002020013503 = СпособАмортизации;
	
	// Строка 201 - Расходы ввиде процентов по долговым обязательствам
	П002020020103_1 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате, БухИтоги917);
	П002020020103_2 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269, БухИтоги917);
	СтраницаЛист02_2.П002020020103 = П002020020103_1 + П002020020103_2;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							 "П002020020103",
							 "Строка 201 ""Расходы ввиде процентов по долговым обязательствам""",
							 "+",
							 "!КО"+Счет9102.Код,
							 П002020020103_1,
							 "Лист02_2",
							 ДополнительныеПараметры);
	ДополнительныеПараметры =
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020020103",
							  "",
							  "+",
							  "!КО"+Счет9102.Код,
							  П002020020103_2,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 301 - Убытки прошлых налоговых периодов, выявленные в текущем отчетном (налоговом) периоде
	П002020030103 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_2.П002020030103 = П002020030103;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
						      "П002020030103",
							  "Строка 301 ""Убытки прошлых налоговых периодов, выявленные в текущем отчетном (налоговом) периоде""",
							  "+",
							  "!ДО"+Счет9102.Код,
							  П002020030103,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 302 - Суммы безнадежных долгов, а в случае, если налогоплательщик
	//              принял решение о создании резерва по сомнительным долгам,
	//              суммы безнадежных долгов, не покрытые за счет средств резерва
	П002020030203 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности, БухИтоги917);
	СтраницаЛист02_2.П002020030203 = П002020030203;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020030203",
							  "Строка 302 ""Суммы безнадежных долгов""",
							  "+",
							  "!ДО"+Счет9102.Код,
							  П002020030203,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
   // Строка 300 - Убытки, приравненные к внереализационным расходам всего
    ПрочиеУбытки = БухИтогиНайти("ДО",
	                             Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам,
								 БухИтоги917); 
	П002020030003 = ПрочиеУбытки + П002020030103 + П002020030203;
	СтраницаЛист02_2.П002020030003 = П002020030003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
						      "П002020030003",
							  "Строка 300 ""Убытки, приравненные к внереализационным расходам - всего""",
							  "+",
							  "!ДО"+Счет9102.Код,
							  П002020030103,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020030003",
							  "",
							  "+",
							  "!ДО"+Счет9102.Код,
							  П002020030203,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат", 
														  Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030003", "", "+", "!ДО"+Счет9102.Код, ПрочиеУбытки, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 200 - Внереализационные расходы
	П002020020003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("ДО")) - П002020030103 - П002020030203 - ПрочиеУбытки;
	СтраницаЛист02_2.П002020020003 = П002020020003;
	ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, "П002020020003", "ДО", СписокПрочихДоходовИРасходов);
	
	// Строка 204 - Расходы на ликвидацию ОС
	П002020020403 = БухИтогиНайти("ДО",
	                              Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств,
								  БухИтоги917);
	СтраницаЛист02_2.П002020020403 = П002020020403;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
						      "П002020020403",
							  "Строка 204 ""Расходы на ликвидацию выводимых из эксплуатации основных средств, объектов незавершенного строительства и иного имущества""",
							  "+",
							  "!ДО"+Счет9102.Код,
							  П002020020403,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	// Строка 205 - штрафы, пени и иные санкции за нарушение договорных или долговых обязательств
	П002020020503_1 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате, БухИтоги917);
	П002020020503_2 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате, БухИтоги917);
	СтраницаЛист02_2.П002020020503 = П002020020503_1 + П002020020503_2;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
						      "П002020020503",
							  "Строка 205 ""штрафы, пени и иные санкции за нарушение договорных или долговых обязательств""",
							  "+",
							  "!ДО"+Счет9102.Код, П002020020503_1,
							  "Лист02_2",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002020020503",
							  "",
							  "+",
							  "!ДО"+Счет9102.Код,
							  П002020020503_2,
							  "Лист02_2",
							  ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 3
	
	СтраницаЛист02_3 = Контейнер.Лист02_3[0].Данные[0].Значение;
	
	// Строка 030 - выручка от реализации амортизируемого имущества
	ВыручкаОтРеализацииОС  = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтоги91);
	ВыручкаОтРеализацииНМА = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтоги91);
	П002030003003 = ВыручкаОтРеализацииОС + ВыручкаОтРеализацииНМА;
	СтраницаЛист02_3.П002030003003 = П002030003003;
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030003003", "Строка 030 ""Выручка от реализации амортизируемого имущества""", "+", "!КО"+Счет9101.Код, ВыручкаОтРеализацииОС, "Лист02_3", ДополнительныеПараметры);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, БухИтогиНайти("СписокЗатрат", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030003003", "", "+", "!КО"+Счет9101.Код, ВыручкаОтРеализацииНМА, "Лист02_3", ДополнительныеПараметры);
	
	// Строка 040 - Остаточная стоимость реализованного амортизируемого имущества
	//              и расходы, связанные с его реализацией
	РасходыПоОС  = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтоги91);  
	РасходыПоНМА = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтоги91);
	ПереносУбытковПоОС  = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтогиПереносУбытковПоОСиНМА);  
	ПереносУбытковПоНМА = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтогиПереносУбытковПоОСиНМА);
	П002030004003 = РасходыПоОС - ПереносУбытковПоОС + РасходыПОНМА - ПереносУбытковПоНМА;
	СтраницаЛист02_3.П002030004003 = П002030004003;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030004003",
							  "Строка 040 ""Остаточная стоимость реализованного амортизируемого имущества и расходы, связанные с его реализацией""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код, РасходыПоОС,
							  "Лист02_3",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030004003",
							  "",
							  "-",
							  "!КО"+ПС.ПрочиеРасходы.Код,
							  -ПереносУбытковПоОС,
							  "Лист02_3",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							 "П002030004003",
							 "",
							 "+",
							 "!КО"+ПС.ПрочиеРасходы.Код,
							 РасходыПОНМА,
							 "Лист02_3",
							 ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030004003",
							  "",
							  "-",
							  "!КО"+ПС.ПрочиеРасходы.Код,
							  -ПереносУбытковПоНМА,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	// Строка 050 - Прибыль от реализации амортизируемого имущества (без учета сделок, по которым получены убытки)
	ПрибыльПоАмортИмуществу = 
	ПрибылиИУбытки(Запрос,
				   ПС.ПрочиеДоходы,
				   ПС.ПрочиеРасходы,
				   Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств,
				   "Прибыль") + 
	ПрибылиИУбытки(Запрос,
				   ПС.ПрочиеДоходы,
				   ПС.ПрочиеРасходы,
				   Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов,
				   "Прибыль");
	СтраницаЛист02_3.П002030005003 = ПрибыльПоАмортИмуществу;
	
	// Строка 060 - Убытки от реализации амортизируемого имущества (без учета сделок, по которым получена прибыль)
	УбыткиПоАмортИмуществу = 
	ПрибылиИУбытки(Запрос,
				   ПС.ПрочиеДоходы,
				   ПС.ПрочиеРасходы, 
				   Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств,
				   "Убыток") + 
	ПрибылиИУбытки(Запрос,
				   ПС.ПрочиеДоходы,
				   ПС.ПрочиеРасходы,
				   Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов,
				   "Убыток");
	СтраницаЛист02_3.П002030006003 = УбыткиПоАмортИмуществу;
	
	ДоходыОказаниеФинансовыхУслуг      = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	ДоходыПослеНаступленияСрокаПлатежа = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	ДоходыДоНаступленияСрокаПлатежа    = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	
	// Строка 100 - Выручка от реализации права требования до наступления срока платежа (п.1 ст. 279 НК)
	П002030010003 = ДоходыДоНаступленияСрокаПлатежа;
	СтраницаЛист02_3.П002030010003 = П002030010003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030010003",
							  "Строка 100 ""Выручка от реализации права требования до наступления срока платежа (п.1 ст. 279 НК)""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002030010003,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	// Строка 110 - Выручка от реализации права требования после наступления срока платежа (п.1 ст. 279 НК)
	П002030011003 = ДоходыПослеНаступленияСрокаПлатежа;
	СтраницаЛист02_3.П002030011003 = П002030011003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														   Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа,
														   СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030011003",
							  "Строка 110 ""Выручка от реализации права требования после наступления срока платежа (п.1 ст. 279 НК)""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002030011003,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	// Строка 120 - Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)
	П002030012003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	СтраницаЛист02_3.П002030012003 = П002030012003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030012003",
							  "Строка 120 ""Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  П002030012003,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	// Строка 130 - Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)
	П002030013003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	СтраницаЛист02_3.П002030013003 = П002030013003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, 
											БухИтогиНайти("СписокЗатрат", 
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030013003",
							  "Строка 130 ""Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  П002030013003,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	Запрос.УстановитьПараметр("Счет",         ПС.ПрочиеРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("КорСчет",      ПС.ПрочиеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И Субконто1.ВидПрочихДоходовИРасходов В (&ВидРасходов),
	|			КорСчет = &КорСчет,
	|			) КАК ХозрасчетныйОбороты";
	БухИтоги170 = Запрос.Выполнить().Выгрузить();
	
	// Строка 170 - убыток от реализации права требования, относящийся к внереализационным расходам текущего отчетного (налогового) периода (включается в строку 200 Приложения № 2 к Листу 02)			
	П002030017003 = БухИтоги170.Итог("СуммаОборотДт");
	СтраницаЛист02_3.П002030017003 = П002030017003; 
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030017003",
							  "Строка 170 ""Убыток от реализации права требования, относящийся к внереализационным расходам текущего отчетного (налогового) периода""",
							  "+",
							  "!ОБ"+ПС.ПрочиеРасходы.Код+" "+ПС.ПрочиеРасходы.Код,
							  П002030017003,
							  "Лист02_3");
		
	// Строка 180 - Выручка от реализации товаров (работ, услуг), имущественных прав по			
	//              объектам обслуживающих производств и хозяйств, включая объекты жилищно-коммунальной и социально-культурной сферы			
	П002030018003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91); 
	СтраницаЛист02_3.П002030018003 = П002030018003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
						      "П002030018003",
							  "Строка 180 ""Выручка от реализации товаров (работ, услуг), имущественных прав по объектам обслуживающих производств и хозяйств""",
							  "+",
							  "!КО"+ПС.ПрочиеРасходы.Код, П002030018003,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	// Строка 190 - Расходы, понесенные обслуживающими производствами и хозяйствами при реализации ими товаров (работ, услуг), имущественных прав в текущем отчетном (налоговом) периоде
	П002030019003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91); 
	СтраницаЛист02_3.П002030019003 = П002030019003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002030019003",
							  "Строка 190 ""Расходы, понесенные обслуживающими производствами и хозяйствами""",
							  "+",
							  "!ДО"+ПС.ПрочиеРасходы.Код,
							  П002030019003,
							  "Лист02_3",
							  ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 4
	
	СтраницаЛист02_4 = Контейнер.Лист02_4[0].Данные[0].Значение;
	
	Если Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 3 Или Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 12 Тогда
		Запрос.УстановитьПараметр("СчетаРасходыБудущихПериодов",         	
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
		Запрос.УстановитьПараметр("СчетаПрибылиИУбыткиНеЕНВД",         	
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрибылиИУбыткиНеЕНВД));
		Запрос.УстановитьПараметр("ВидРБП",       Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
		Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаНУОборотКт,
		|	ХозрасчетныйОбороты.Субконто1
		|ПОМЕСТИТЬ ОборотыКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП,
		|			КорСчет В (&СчетаПрибылиИУбыткиНеЕНВД),
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОборотыКт.СуммаНУОборотКт) КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП) КАК ХозрасчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКт КАК ОборотыКт
		|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = ОборотыКт.Субконто1
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Субконто1";
		УбыткиПрошлыхЛет = Запрос.Выполнить().Выгрузить();
		
		ТаблицаУбытков = Новый ТаблицаЗначений;
		ТаблицаУбытков.Колонки.Добавить("ГодУбыткаПредставление", Новый ОписаниеТипов("Строка"));
		ТаблицаУбытков.Колонки.Добавить("ГодУбытка", Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Сумма",     Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Остаток",   Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("РБП",       Новый ОписаниеТипов("СправочникСсылка.РасходыБудущихПериодов"));
		
		ПоследнийГод = Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета) - 1;
		СчетчикГодов = ПоследнийГод;
		
		Пока СчетчикГодов > ПоследнийГод - 10 Цикл
			СтрокаТаблицаУбытков = ТаблицаУбытков.Добавить();
			СтрокаТаблицаУбытков.ГодУбытка = СчетчикГодов;
			СчетчикГодов = СчетчикГодов - 1;
		КонецЦикла;
		
		Для Каждого УбытокПрошлыхЛет Из УбыткиПрошлыхЛет Цикл
			
			ГодУбытка = Год(УбытокПрошлыхЛет.Субконто1.ДатаНачалаСписания) - 1;

			СтрокаТаблицаУбытков = ТаблицаУбытков.Найти(ГодУбытка, "ГодУбытка");
			
			Если СтрокаТаблицаУбытков = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицаУбытков.ГодУбыткаПредставление = СтрЗаменить(Строка(СтрокаТаблицаУбытков.ГодУбытка)," ", "");
			СтрокаТаблицаУбытков.Сумма   = УбытокПрошлыхЛет.СуммаНачальныйОстатокДт;
			СтрокаТаблицаУбытков.Остаток = УбытокПрошлыхЛет.СуммаКонечныйОстатокДт;
			СтрокаТаблицаУбытков.РБП     = УбытокПрошлыхЛет.Субконто1;
		
		КонецЦикла;
		
		ТаблицаУбытков.Сортировать("ГодУбытка Возр");
		НомерПоказателя = 4;
		
		Для Каждого СтрокаТаблицаУбытков Из ТаблицаУбытков Цикл
            ПредставлениеПоказателя = Формат(НомерПоказателя, "ЧЦ=2; ЧВН=");
			СтраницаЛист02_4["П0020400" + ПредставлениеПоказателя + "001"] = СтрокаТаблицаУбытков.ГодУбыткаПредставление;
			СтраницаЛист02_4["П0020400" + ПредставлениеПоказателя + "003"] = СтрокаТаблицаУбытков.Сумма;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П0020400" + ПредставлениеПоказателя + "003", "Сумма убытка, полученного в " + СтрокаТаблицаУбытков.ГодУбыткаПредставление + " году",
				"+", "!СНД"+ПС.РасходыБудущихПериодов.Код, СтрокаТаблицаУбытков.Сумма, "Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, СтрокаТаблицаУбытков.РБП));
	        НомерПоказателя = НомерПоказателя + 1;
		КонецЦикла;
		
		// Строка 150 - Сумма убытка или части убытка, уменьшающего   
		//              налоговую базу за отчетный  (налоговый)  период
		СуммаПоСтроке050Листа02 = 0;
		СуммаПоСтроке140Листа02 = 0;
		СуммаПоСтроке120Листа05 = 0;
		СуммаПоСтроке120Листа06 = 0;
		СуммаПоСтроке230Листа07 = 0;
		СуммаПоСтроке110Листа08 = 0;
		СуммаПоСтроке590Листа09 = 0;
		
		П002040015003 =  УбыткиПрошлыхЛет.Итог("КО");
		СтраницаЛист02_4.П002040015003 = П002040015003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П002040015003",
								  "Сумма убытка или части убытка, уменьшающего налоговую базу за отчетный (налоговый) период",
								  "+",
								  "!КО"+ПС.РасходыБудущихПериодов.Код,
								  П002040015003,
								  "Лист02_4");
		
		// Строка 160 -    сумма неперенесенного убытка	
		П002040016003 = УбыткиПрошлыхЛет.Итог("СуммаКонечныйОстатокДт");
		СтраницаЛист02_4.П002040016003 = П002040016003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П002040016003",
								  "неперенесенного убытка", "+", "!СКД"+ПС.РасходыБудущихПериодов.Код,
								  П002040016003,
								  "Лист02_4");
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	
	НалоговыйУчетОбособленныхПодразделений.ЗаполнитьЛист2Приложение5ДекларацииПоПрибыли(Контейнер, ПараметрыОтчета, СписокОрганизаций, Контейнер.Лист02_5);

	// Сохраняем таблицу расшифровок во временном хранилище в привязке к уникальному идентификатору формы
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = 
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетПрибыльФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер, ТаблицаРасшифровки) Экспорт
	
	// Приложения 2 и 3 к Листу 02 заполняются в модуле НалогНаПрибыльДекларация
	
	// См. также ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1()
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	СоздатьДолиЕНВД(
		Запрос.МенеджерВременныхТаблиц, 
		Запрос.Параметры.ДатаНач, 
		Запрос.Параметры.ДатаКон, 
		Запрос.Параметры.СписокОрганизаций);
	
	Запрос.УстановитьПараметр("СчетаПрочиеДоходыИРасходы",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрочиеДоходыИРасходы));
	
	МассивНеЕНВД = Новый Массив;
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("МассивНеЕНВД",  МассивНеЕНВД);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДебетовыйОборот,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КредитовыйОборот
	|ПОМЕСТИТЬ ТаблицаПрочиеДоходыРасходыНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	Запрос.Выполнить();	
	
	// таблица итогов по всем счетам без анлитики
	Запрос.УстановитьПараметр("Счет41",  ПС.Товары);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК ДО,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК КО,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , , , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ИТОГИ
	|	СУММА(ДО),
	|	СУММА(КО)
	|ПО
	|	Счет ИЕРАРХИЯ";	
	
	БухИтоги = Запрос.Выполнить().Выгрузить();
	
	// прочие доходы и расходы
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.ДебетовыйОборот) КАК ДО,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.КредитовыйОборот) КАК КО
	|ИЗ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД КАК ТаблицаПрочиеДоходыРасходыНеЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов";
	
	БухИтоги91 = Запрос.Выполнить().Выгрузить();
	
	// внереализационные доходы и расходы
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&ВидРасходов),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,Месяц) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	БухИтоги917 = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Счет",  ПС.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	
	МассивЗапасовНУ = Новый Массив;
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.ОСвОрганизации);
	МассивЗапасовНУ.Добавить(ПС.ДоходныеВложенияВ_МЦ);
	МассивЗапасовНУ.Добавить(ПС.НематериальныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияОсновныхСредств);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияНематериальныхАктивов);
	МассивЗапасовНУ.Добавить(ПС.ОборудованиеКУстановке);
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.Материалы);
	МассивЗапасовНУ.Добавить(ПС.Полуфабрикаты);
	МассивЗапасовНУ.Добавить(ПС.Товары);
	МассивЗапасовНУ.Добавить(ПС.ТоварыОтгруженные);
	МассивЗапасовНУ.Добавить(ПС.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("КорСчет",  МассивЗапасовНУ);
	Запрос.УстановитьПараметр("ВидРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЗапасовНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт), 0) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидПрочихДоходовИРасходов = &ВидРасходов,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаЗапасовНУ.Счет
	|				ИЗ
	|					ВТ_СчетаЗапасовНУ),
	|			) КАК ХозрасчетныйОбороты";
	
	БухИтоги911_Излишки = Запрос.Выполнить().Выгрузить().Итог("КО");
	
	// Состав справочников "Статьи затрат" и "Прочие доходы и расходы" по видам затрат для расшифровки 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходовНУ КАК ВидЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ИТОГИ ПО
	|	ВидЗатрат,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокСтатейЗатрат = Новый ТаблицаЗначений;
	СписокСтатейЗатрат.Колонки.Добавить("Счет");
	СписокСтатейЗатрат.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидЗатрат");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокСтатейЗатрат = СписокСтатейЗатрат.Добавить();
		СтрокаСписокСтатейЗатрат.Счет = ВыборкаВидовЗатрат.ВидЗатрат;
		СтрокаСписокСтатейЗатрат.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокСтатейЗатрат.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов
	|ИЗ
	|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
	|ИТОГИ ПО
	|	ВидПрочихДоходовИРасходов,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокПрочихДоходовИРасходов = Новый ТаблицаЗначений;
	СписокПрочихДоходовИРасходов.Колонки.Добавить("Счет");
	СписокПрочихДоходовИРасходов.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПрочихДоходовИРасходов");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокПрочихДоходовИРасходов = СписокПрочихДоходовИРасходов.Добавить();
		СтрокаСписокПрочихДоходовИРасходов.Счет = ВыборкаВидовЗатрат.ВидПрочихДоходовИРасходов;
		СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка,
	|	РасходыБудущихПериодов.ВидРБП КАК Вид
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|ИТОГИ ПО
	|	Вид,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокРБП = Новый ТаблицаЗначений;
	СписокРБП.Колонки.Добавить("Счет");
	СписокРБП.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокРБП = СписокРБП.Добавить();
		СтрокаСписокРБП.Счет = ВыборкаВидовЗатрат.Вид;
		СтрокаСписокРБП.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокРБП.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 1
	
	СтраницаЛист02_1 = Контейнер.Лист02_1[0].Данные[0].Значение;
	
	Счет9101 = ПС.ПрочиеДоходы;
	Счет9102 = ПС.ПрочиеРасходы;

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("СчетаВыручкаНеЕНВД", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ВыручкаНеЕНВД));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|ПОМЕСТИТЬ НоменклатурныеГруппыПродукции
	|ИЗ
	|	РегистрСведений.НоменклатурныеГруппыРеализацииПродукцииУслуг КАК НоменклатурныеГруппыПродукции
	|ГДЕ
	|	НоменклатурныеГруппыПродукции.Организация В(&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотКт, 0) КАК СуммаДохода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаВыручкаНеЕНВД),
	|			&ВидыСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И (Субконто1 В
	|						(ВЫБРАТЬ
	|							НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа
	|						ИЗ
	|							НоменклатурныеГруппыПродукции)
	|					ИЛИ ВЫРАЗИТЬ(Субконто2 КАК Справочник.Номенклатура).Услуга),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	ТаблицаДоходПродукция = Запрос.Выполнить().Выгрузить();
	
	// Строка 011 - выручка от реализации товаров (работ, услуг) собственного производства
	СтраницаЛист02_1.П002010001103 =  ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 012 - выручка от реализации покупных товаров
	СтраницаЛист02_1.П002010001203 = БухИтогиНайти("КО", ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД, БухИтоги) - ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 013 - выручка от реализации имущественных прав, за исключением доходов от реализации права требования
	П002010001303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030007003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_1.П002010001303 = П002010001303 + П002030007003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, 
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010001303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат", 
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002030007003,
							  "Лист02_1",
							  ДополнительныеПараметры);

	// Строка 014 - выручка от реализации прочего имущества
	Доходы_ПрочееИмущество = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	Доходы_ОбъектыСтроит = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	СтраницаЛист02_1.П002010001403 = Доходы_ПрочееИмущество + Доходы_ОбъектыСтроит;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001403",
							  "Строка 014 ""Выручка от реализации прочего имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ПрочееИмущество,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010001403",
							  "",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ОбъектыСтроит,
							  "Лист02_1",
							  ДополнительныеПараметры);
								   
	// Строка 020 - выручка от реализации ценных бумаг профессиональных участников рынка
	СтраницаЛист02_1.П002010002003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	
	// Строка 100 - Внереализационные доходы всего
	СтраницаЛист02_1.П002010010003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("КО"));
	ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, "П002010010003", "КО", СписокПрочихДоходовИРасходов);
	
	// Строка 101 - В виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде
	П002010010103 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_1.П002010010103 = П002010010103;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
											Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет,
											СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010103",
							  "Строка 101 ""Доходы в виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010103,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 102 - доходы от ликвидации основных средств
	П002010010203 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_1.П002010010203 = П002010010203;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010203",
							  "Строка 102 ""Доходы от ликвидации основных средств""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010203,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 103 - в виде безвозмездно полученного имущества (работ, услуг) или имущественных прав (кроме указанных в статье 251 НК)
	П002010010303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, БухИтоги917);
	СтраницаЛист02_1.П002010010303 = П002010010303;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010303",
							  "Строка 103 ""Доходы от безвозмездного получения имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 104 - в виде излишков
	П002010010403 = БухИтоги911_Излишки;
	СтраницаЛист02_1.П002010010403 = П002010010403;
	
	// Строка 105 - в виде востановления аморт.премии
	П002010010503 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, БухИтоги917);
	СтраницаЛист02_1.П002010010503 = П002010010503;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010503",
							  "Строка 103 ""сумма восстановленных расходов на капитальные вложения в соответствии с абзацем четвертым пункта 9 статьи 258 НК""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010503,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 107 - в сумм корректировки прибыли до рыночных цен
	П002010010703 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен, БухИтоги917);
	СтраницаЛист02_1.П002010010703 = П002010010703;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П002010010703",
							  "Строка 107 ""сумма корректировки прибыли до рыночных цен""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010703,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 2
	
	СтраницаЛист02_2 = Контейнер.Лист02_2[0].Данные[0].Значение;
	
	// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
	Запрос.УстановитьПараметр("Счета02",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияОсновныхСредств));
	Запрос.УстановитьПараметр("Счета05",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияНематериальныхАктивов));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК АмортизацияОсновныхСредств,
	|	0 КАК АмортизацияНематериальныхАктивов,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * (1 - ДолиЕНВД.ДоляЕНВД)),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * (1 - ДолиЕНВД.ДоляЕНВД)),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Амортизация.АмортизацияОсновныхСредств) КАК АмортизацияОсновныхСредств,
	|	СУММА(Амортизация.АмортизацияНематериальныхАктивов) КАК АмортизацияНематериальныхАктивов,
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|				ТОГДА Амортизация.АмортизацияОсновныхСредств
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияОсновныхСредств8_10,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|				ТОГДА Амортизация.АмортизацияНематериальныхАктивов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияНематериальныхАктивов8_10,
	|	Амортизация.АмортизационнаяГруппа
	|ИЗ
	|	Амортизация КАК Амортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	Амортизация.АмортизационнаяГруппа";
	
	БухИтогиАмортизация = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОсновныхСредств       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств");
	АмортизацияНематериальныхАктивов = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов");
	АмортизацияОсновныхСредств8_10       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств8_10");
	АмортизацияНематериальныхАктивов8_10 = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов8_10");
	
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СпособАмортизации = ?(МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный, "2","1");
	
	Если СпособАмортизации = "1" Тогда
		
		// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П002020013103 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		
		// Строка 132 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П002020013203 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П002020013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										 "Лист02_2",
										 ДополнительныеПараметры);
			КонецЕсли;
			
		КонецЦикла;
		СтраницаЛист02_2.П002020013303 = 0;
		СтраницаЛист02_2.П002020013403 = 0;
	Иначе
		СтраницаЛист02_2.П002020013103 = АмортизацияОсновныхСредств8_10;
		СтраницаЛист02_2.П002020013203 = АмортизацияНематериальныхАктивов8_10;
		// Строка 133 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П002020013303 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов
										-АмортизацияОсновныхСредств8_10 - АмортизацияНематериальныхАктивов8_10;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013303",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013303",
										  "",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов - СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2");
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		// Строка 134 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П002020013403 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013403",
										  "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
				Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда						  
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П002020013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										 "Лист02_2",
										 ДополнительныеПараметры);
				 КонецЕсли;
			 КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Строка 135 - Способ амортизации
	СтраницаЛист02_2.П002020013503 = СпособАмортизации;
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 4
	
	СтраницаЛист02_4 = Контейнер.Лист02_4[0].Данные[0].Значение;
	
	Если Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 3 Или Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 12 Тогда
		Запрос.УстановитьПараметр("СчетаРасходыБудущихПериодов",         	
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
		Запрос.УстановитьПараметр("СчетаПрибылиИУбыткиНеЕНВД",         	
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрибылиИУбыткиНеЕНВД));
		Запрос.УстановитьПараметр("ВидРБП",       Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
		Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаНУОборотКт,
		|	ХозрасчетныйОбороты.Субконто1
		|ПОМЕСТИТЬ ОборотыКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП,
		|			КорСчет В (&СчетаПрибылиИУбыткиНеЕНВД),
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОборотыКт.СуммаНУОборотКт) КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП) КАК ХозрасчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКт КАК ОборотыКт
		|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = ОборотыКт.Субконто1
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Субконто1";
		УбыткиПрошлыхЛет = Запрос.Выполнить().Выгрузить();
		
		ТаблицаУбытков = Новый ТаблицаЗначений;
		ТаблицаУбытков.Колонки.Добавить("ГодУбыткаПредставление", Новый ОписаниеТипов("Строка"));
		ТаблицаУбытков.Колонки.Добавить("ГодУбытка", Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Сумма",     Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Остаток",   Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("РБП",       Новый ОписаниеТипов("СправочникСсылка.РасходыБудущихПериодов"));
		
		ПоследнийГод = Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета) - 1;
		СчетчикГодов = ПоследнийГод;
		
		Пока СчетчикГодов > ПоследнийГод - 10 Цикл
			СтрокаТаблицаУбытков = ТаблицаУбытков.Добавить();
			СтрокаТаблицаУбытков.ГодУбытка = СчетчикГодов;
			СчетчикГодов = СчетчикГодов - 1;
		КонецЦикла;
		
		Для Каждого УбытокПрошлыхЛет Из УбыткиПрошлыхЛет Цикл
			
			ГодУбытка = Год(УбытокПрошлыхЛет.Субконто1.ДатаНачалаСписания) - 1;

			СтрокаТаблицаУбытков = ТаблицаУбытков.Найти(ГодУбытка, "ГодУбытка");
			
			Если СтрокаТаблицаУбытков = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицаУбытков.ГодУбыткаПредставление = СтрЗаменить(Строка(СтрокаТаблицаУбытков.ГодУбытка)," ", "");
			СтрокаТаблицаУбытков.Сумма   = УбытокПрошлыхЛет.СуммаНачальныйОстатокДт;
			СтрокаТаблицаУбытков.Остаток = УбытокПрошлыхЛет.СуммаКонечныйОстатокДт;
			СтрокаТаблицаУбытков.РБП     = УбытокПрошлыхЛет.Субконто1;
		
		КонецЦикла;
		
		ТаблицаУбытков.Сортировать("ГодУбытка Возр");
		НомерПоказателя = 4;
		
		Для Каждого СтрокаТаблицаУбытков Из ТаблицаУбытков Цикл
            ПредставлениеПоказателя = Формат(НомерПоказателя, "ЧЦ=2; ЧВН=");
			СтраницаЛист02_4["П0020400" + ПредставлениеПоказателя + "001"] = СтрокаТаблицаУбытков.ГодУбыткаПредставление;
			СтраницаЛист02_4["П0020400" + ПредставлениеПоказателя + "003"] = СтрокаТаблицаУбытков.Сумма;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П0020400" + ПредставлениеПоказателя + "003", "Сумма убытка, полученного в " + СтрокаТаблицаУбытков.ГодУбыткаПредставление + " году",
				"+", "!СНД"+ПС.РасходыБудущихПериодов.Код, СтрокаТаблицаУбытков.Сумма, "Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, СтрокаТаблицаУбытков.РБП));
	        НомерПоказателя = НомерПоказателя + 1;
		КонецЦикла;
		
		// Строка 150 - Сумма убытка или части убытка, уменьшающего   
		//              налоговую базу за отчетный  (налоговый)  период
		СуммаПоСтроке050Листа02 = 0;
		СуммаПоСтроке140Листа02 = 0;
		СуммаПоСтроке120Листа05 = 0;
		СуммаПоСтроке120Листа06 = 0;
		СуммаПоСтроке230Листа07 = 0;
		СуммаПоСтроке110Листа08 = 0;
		СуммаПоСтроке590Листа09 = 0;
		
		П002040015003 =  УбыткиПрошлыхЛет.Итог("КО");
		СтраницаЛист02_4.П002040015003 = П002040015003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П002040015003",
								  "Сумма убытка или части убытка, уменьшающего налоговую базу за отчетный (налоговый) период",
								  "+",
								  "!КО"+ПС.РасходыБудущихПериодов.Код,
								  П002040015003,
								  "Лист02_4");
		
		// Строка 160 -    сумма неперенесенного убытка	
		П002040016003 = УбыткиПрошлыхЛет.Итог("СуммаКонечныйОстатокДт");
		СтраницаЛист02_4.П002040016003 = П002040016003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П002040016003",
								  "неперенесенного убытка", "+", "!СКД"+ПС.РасходыБудущихПериодов.Код,
								  П002040016003,
								  "Лист02_4");
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	
	НалоговыйУчетОбособленныхПодразделений.ЗаполнитьЛист2Приложение5ДекларацииПоПрибыли(Контейнер, ПараметрыОтчета, СписокОрганизаций, Контейнер.Лист02_5);

КонецПроцедуры

Процедура ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер, ТаблицаРасшифровки) Экспорт
	
	// В основном, код этой процедуры скопирован из ЗаполнитьОтчетПрибыльФормаОтчета2013Кв4.
	// Такой код отличается номерами ячеек.
	// Кроме того, заполнение отдельных строк выполняется только в налоговых периодах до 2015 года.
	// Остальные изменения следует вносить одновременно в ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1() и ЗаполнитьОтчетПрибыльФормаОтчета2013Кв4()
	
	// Приложения 2 и 3 к Листу 02 заполняются в модуле НалогНаПрибыльДекларация
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	СоздатьДолиЕНВД(
		Запрос.МенеджерВременныхТаблиц, 
		Запрос.Параметры.ДатаНач, 
		Запрос.Параметры.ДатаКон, 
		Запрос.Параметры.СписокОрганизаций);
	
	Запрос.УстановитьПараметр("СчетаПрочиеДоходыИРасходы",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрочиеДоходыИРасходы));
	
	МассивНеЕНВД = Новый Массив;
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("МассивНеЕНВД",  МассивНеЕНВД);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДебетовыйОборот,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КредитовыйОборот
	|ПОМЕСТИТЬ ТаблицаПрочиеДоходыРасходыНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	Запрос.Выполнить();	
	
	// таблица итогов по всем счетам без анлитики
	Запрос.УстановитьПараметр("Счет41",  ПС.Товары);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК ДО,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК КО,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , , , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ИТОГИ
	|	СУММА(ДО),
	|	СУММА(КО)
	|ПО
	|	Счет ИЕРАРХИЯ";	
	
	БухИтоги = Запрос.Выполнить().Выгрузить();
	
	// прочие доходы и расходы
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.ДебетовыйОборот) КАК ДО,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.КредитовыйОборот) КАК КО
	|ИЗ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД КАК ТаблицаПрочиеДоходыРасходыНеЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов";
	
	БухИтоги91 = Запрос.Выполнить().Выгрузить();
	
	// внереализационные доходы и расходы
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов В (&ВидРасходов),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,Месяц) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов";
	
	БухИтоги917 = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Счет",  ПС.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	
	МассивЗапасовНУ = Новый Массив;
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.ОСвОрганизации);
	МассивЗапасовНУ.Добавить(ПС.ДоходныеВложенияВ_МЦ);
	МассивЗапасовНУ.Добавить(ПС.НематериальныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияОсновныхСредств);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияНематериальныхАктивов);
	МассивЗапасовНУ.Добавить(ПС.ОборудованиеКУстановке);
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.Материалы);
	МассивЗапасовНУ.Добавить(ПС.Полуфабрикаты);
	МассивЗапасовНУ.Добавить(ПС.Товары);
	МассивЗапасовНУ.Добавить(ПС.ТоварыОтгруженные);
	МассивЗапасовНУ.Добавить(ПС.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("КорСчет",  МассивЗапасовНУ);
	Запрос.УстановитьПараметр("ВидРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЗапасовНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт), 0) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1.ВидПрочихДоходовИРасходов = &ВидРасходов,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаЗапасовНУ.Счет
	|				ИЗ
	|					ВТ_СчетаЗапасовНУ),
	|			) КАК ХозрасчетныйОбороты";
	
	БухИтоги911_Излишки = Запрос.Выполнить().Выгрузить().Итог("КО");
	
	// Состав справочников "Статьи затрат" и "Прочие доходы и расходы" по видам затрат для расшифровки 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходовНУ КАК ВидЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ИТОГИ ПО
	|	ВидЗатрат,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокСтатейЗатрат = Новый ТаблицаЗначений;
	СписокСтатейЗатрат.Колонки.Добавить("Счет");
	СписокСтатейЗатрат.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидЗатрат");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокСтатейЗатрат = СписокСтатейЗатрат.Добавить();
		СтрокаСписокСтатейЗатрат.Счет = ВыборкаВидовЗатрат.ВидЗатрат;
		СтрокаСписокСтатейЗатрат.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокСтатейЗатрат.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов КАК ВидПрочихДоходовИРасходов
	|ИЗ
	|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
	|ИТОГИ ПО
	|	ВидПрочихДоходовИРасходов,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокПрочихДоходовИРасходов = Новый ТаблицаЗначений;
	СписокПрочихДоходовИРасходов.Колонки.Добавить("Счет");
	СписокПрочихДоходовИРасходов.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПрочихДоходовИРасходов");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокПрочихДоходовИРасходов = СписокПрочихДоходовИРасходов.Добавить();
		СтрокаСписокПрочихДоходовИРасходов.Счет = ВыборкаВидовЗатрат.ВидПрочихДоходовИРасходов;
		СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка,
	|	РасходыБудущихПериодов.ВидРБП КАК Вид
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|ИТОГИ ПО
	|	Вид,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокРБП = Новый ТаблицаЗначений;
	СписокРБП.Колонки.Добавить("Счет");
	СписокРБП.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокРБП = СписокРБП.Добавить();
		СтрокаСписокРБП.Счет = ВыборкаВидовЗатрат.Вид;
		СтрокаСписокРБП.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокРБП.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 1
	
	СтраницаЛист02_1 = Контейнер.Лист02_1[0].Данные[0].Значение;
	
	Счет9101 = ПС.ПрочиеДоходы;
	Счет9102 = ПС.ПрочиеРасходы;

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("СчетаВыручкаНеЕНВД", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ВыручкаНеЕНВД));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|ПОМЕСТИТЬ НоменклатурныеГруппыПродукции
	|ИЗ
	|	РегистрСведений.НоменклатурныеГруппыРеализацииПродукцииУслуг КАК НоменклатурныеГруппыПродукции
	|ГДЕ
	|	НоменклатурныеГруппыПродукции.Организация В(&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотКт, 0) КАК СуммаДохода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&СчетаВыручкаНеЕНВД),
	|			&ВидыСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И (Субконто1 В
	|						(ВЫБРАТЬ
	|							НоменклатурныеГруппыПродукции.НоменклатурнаяГруппа
	|						ИЗ
	|							НоменклатурныеГруппыПродукции)
	|					ИЛИ ВЫРАЗИТЬ(Субконто2 КАК Справочник.Номенклатура).Услуга),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	ТаблицаДоходПродукция = Запрос.Выполнить().Выгрузить();
	
	// Строка 011 - выручка от реализации товаров (работ, услуг) собственного производства
	СтраницаЛист02_1.П000210001103 =  ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 012 - выручка от реализации покупных товаров
	СтраницаЛист02_1.П000210001203 = БухИтогиНайти("КО", ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД, БухИтоги) - ТаблицаДоходПродукция.Итог("СуммаДохода");
	
	// Строка 013 - выручка от реализации имущественных прав, за исключением доходов от реализации права требования
	П002010001303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030007003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_1.П000210001303 = П002010001303 + П002030007003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, 
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010001303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат", 
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002030007003,
							  "Лист02_1",
							  ДополнительныеПараметры);

	// Строка 014 - выручка от реализации прочего имущества
	Доходы_ПрочееИмущество = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	Доходы_ОбъектыСтроит = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	СтраницаЛист02_1.П000210001403 = Доходы_ПрочееИмущество + Доходы_ОбъектыСтроит;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001403",
							  "Строка 014 ""Выручка от реализации прочего имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ПрочееИмущество,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001403",
							  "",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ОбъектыСтроит,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 020 - выручка от реализации ценных бумаг профессиональных участников рынка
	СтраницаЛист02_1.П000210002003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	
	// Строка 100 - Внереализационные доходы всего
	СтраницаЛист02_1.П000210010003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("КО"));
	ВставитьРасшифровкуВнереализационных(ТаблицаРасшифровки, Запрос, "П000210010003", "КО", СписокПрочихДоходовИРасходов);
	
	// Строка 101 - В виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде
	П002010010103 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_1.П000210010103 = П002010010103;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
											Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет,
											СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010103",
							  "Строка 101 ""Доходы в виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010103,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 102 - доходы от ликвидации основных средств
	П002010010203 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_1.П000210010203 = П002010010203;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010203",
							  "Строка 102 ""Доходы от ликвидации основных средств""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010203,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 103 - в виде безвозмездно полученного имущества (работ, услуг) или имущественных прав (кроме указанных в статье 251 НК)
	П002010010303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, БухИтоги917);
	СтраницаЛист02_1.П000210010303 = П002010010303;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010303",
							  "Строка 103 ""Доходы от безвозмездного получения имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 104 - в виде излишков
	П002010010403 = БухИтоги911_Излишки;
	СтраницаЛист02_1.П000210010403 = П002010010403;
	
	// Строка 105 - в виде востановления аморт.премии
	П002010010503 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, БухИтоги917);
	СтраницаЛист02_1.П000210010503 = П002010010503;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010503",
							  "Строка 103 ""сумма восстановленных расходов на капитальные вложения в соответствии с абзацем четвертым пункта 9 статьи 258 НК""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010503,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 107 - в сумм корректировки прибыли до рыночных цен
	П002010010703 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен, БухИтоги917);
	СтраницаЛист02_1.П000210010703 = П002010010703;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010703",
							  "Строка 107 ""сумма корректировки прибыли до рыночных цен""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010703,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 2
	
	СтраницаЛист02_2 = Контейнер.Лист02_2[0].Данные[0].Значение;
	
	// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
	Запрос.УстановитьПараметр("Счета02",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияОсновныхСредств));
	Запрос.УстановитьПараметр("Счета05",         	
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.АмортизацияНематериальныхАктивов));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК АмортизацияОсновныхСредств,
	|	0 КАК АмортизацияНематериальныхАктивов,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * (1 - ДолиЕНВД.ДоляЕНВД)),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОсновныеСредства).АмортизационнаяГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * (1 - ДолиЕНВД.ДоляЕНВД)),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Амортизация.АмортизацияОсновныхСредств) КАК АмортизацияОсновныхСредств,
	|	СУММА(Амортизация.АмортизацияНематериальныхАктивов) КАК АмортизацияНематериальныхАктивов,
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|				ТОГДА Амортизация.АмортизацияОсновныхСредств
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияОсновныхСредств8_10,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|				ТОГДА Амортизация.АмортизацияНематериальныхАктивов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияНематериальныхАктивов8_10,
	|	Амортизация.АмортизационнаяГруппа
	|ИЗ
	|	Амортизация КАК Амортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	Амортизация.АмортизационнаяГруппа";
	
	БухИтогиАмортизация = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОсновныхСредств       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств");
	АмортизацияНематериальныхАктивов = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов");
	АмортизацияОсновныхСредств8_10       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств8_10");
	АмортизацияНематериальныхАктивов8_10 = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов8_10");
	
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СпособАмортизации = ?(МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный, "2","1");
	
	Если СпособАмортизации = "1" Тогда
		
		// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П000220013103 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П000220013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		
		// Строка 132 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П000220013203 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П000220013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										 "Лист02_2",
										 ДополнительныеПараметры);
			КонецЕсли;
			
		КонецЦикла;
		СтраницаЛист02_2.П000220013303 = 0;
		СтраницаЛист02_2.П000220013403 = 0;
	Иначе
		СтраницаЛист02_2.П000220013103 = АмортизацияОсновныхСредств8_10;
		СтраницаЛист02_2.П000220013203 = АмортизацияНематериальныхАктивов8_10;
		// Строка 133 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П000220013303 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов
										-АмортизацияОсновныхСредств8_10 - АмортизацияНематериальныхАктивов8_10;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013303",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П000220013303",
										  "",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов - СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2");
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П000220013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		// Строка 134 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П000220013403 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013403",
										  "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
				Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда						  
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П000220013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										 "Лист02_2",
										 ДополнительныеПараметры);
				 КонецЕсли;
			 КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Строка 135 - Способ амортизации
	СтраницаЛист02_2.П000220013503 = СпособАмортизации;
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 4
	
	СтраницаЛист02_4 = Контейнер.Лист02_4[0].Данные[0].Значение;
	
	Если Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 3 Или Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 12 Тогда
		Запрос.УстановитьПараметр("СчетаРасходыБудущихПериодов",         	
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
		Запрос.УстановитьПараметр("СчетаПрибылиИУбыткиНеЕНВД",         	
			БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПС.ПрибылиИУбыткиНеЕНВД));
		Запрос.УстановитьПараметр("ВидРБП",       Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
		Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаНУОборотКт,
		|	ХозрасчетныйОбороты.Субконто1
		|ПОМЕСТИТЬ ОборотыКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП,
		|			КорСчет В (&СчетаПрибылиИУбыткиНеЕНВД),
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОборотыКт.СуммаНУОборотКт) КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП) КАК ХозрасчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКт КАК ОборотыКт
		|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = ОборотыКт.Субконто1
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Субконто1";
		УбыткиПрошлыхЛет = Запрос.Выполнить().Выгрузить();
		
		ТаблицаУбытков = Новый ТаблицаЗначений;
		ТаблицаУбытков.Колонки.Добавить("ГодУбыткаПредставление", Новый ОписаниеТипов("Строка"));
		ТаблицаУбытков.Колонки.Добавить("ГодУбытка", Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Сумма",     Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Остаток",   Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("РБП",       Новый ОписаниеТипов("СправочникСсылка.РасходыБудущихПериодов"));
		
		ПоследнийГод = Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета) - 1;
		СчетчикГодов = ПоследнийГод;
		
		Пока СчетчикГодов > ПоследнийГод - 10 Цикл
			СтрокаТаблицаУбытков = ТаблицаУбытков.Добавить();
			СтрокаТаблицаУбытков.ГодУбытка = СчетчикГодов;
			СчетчикГодов = СчетчикГодов - 1;
		КонецЦикла;
		
		Для Каждого УбытокПрошлыхЛет Из УбыткиПрошлыхЛет Цикл
			
			ГодУбытка = Год(УбытокПрошлыхЛет.Субконто1.ДатаНачалаСписания) - 1;

			СтрокаТаблицаУбытков = ТаблицаУбытков.Найти(ГодУбытка, "ГодУбытка");
			
			Если СтрокаТаблицаУбытков = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицаУбытков.ГодУбыткаПредставление = СтрЗаменить(Строка(СтрокаТаблицаУбытков.ГодУбытка)," ", "");
			СтрокаТаблицаУбытков.Сумма   = УбытокПрошлыхЛет.СуммаНачальныйОстатокДт;
			СтрокаТаблицаУбытков.Остаток = УбытокПрошлыхЛет.СуммаКонечныйОстатокДт;
			СтрокаТаблицаУбытков.РБП     = УбытокПрошлыхЛет.Субконто1;
		
		КонецЦикла;
		
		ТаблицаУбытков.Сортировать("ГодУбытка Возр");
		НомерПоказателя = 4;
		
		Для Каждого СтрокаТаблицаУбытков Из ТаблицаУбытков Цикл
            ПредставлениеПоказателя = Формат(НомерПоказателя, "ЧЦ=2; ЧВН=");
			СтраницаЛист02_4["П0002400" + ПредставлениеПоказателя + "001"] = СтрокаТаблицаУбытков.ГодУбыткаПредставление;
			СтраницаЛист02_4["П0002400" + ПредставлениеПоказателя + "003"] = СтрокаТаблицаУбытков.Сумма;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П0002400" + ПредставлениеПоказателя + "003", "Сумма убытка, полученного в " + СтрокаТаблицаУбытков.ГодУбыткаПредставление + " году",
				"+", "!СНД"+ПС.РасходыБудущихПериодов.Код, СтрокаТаблицаУбытков.Сумма, "Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, СтрокаТаблицаУбытков.РБП));
	        НомерПоказателя = НомерПоказателя + 1;
		КонецЦикла;
		
		// Строка 150 - Сумма убытка или части убытка, уменьшающего   
		//              налоговую базу за отчетный  (налоговый)  период
		СуммаПоСтроке050Листа02 = 0;
		СуммаПоСтроке140Листа02 = 0;
		СуммаПоСтроке120Листа05 = 0;
		СуммаПоСтроке120Листа06 = 0;
		СуммаПоСтроке230Листа07 = 0;
		СуммаПоСтроке110Листа08 = 0;
		СуммаПоСтроке590Листа09 = 0;
		
		П002040015003 =  УбыткиПрошлыхЛет.Итог("КО");
		СтраницаЛист02_4.П000240015003 = П002040015003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П000240015003",
								  "Сумма убытка или части убытка, уменьшающего налоговую базу за отчетный (налоговый) период",
								  "+",
								  "!КО"+ПС.РасходыБудущихПериодов.Код,
								  П002040015003,
								  "Лист02_4");
		
		// Строка 160 -    сумма неперенесенного убытка	
		П002040016003 = УбыткиПрошлыхЛет.Итог("СуммаКонечныйОстатокДт");
		СтраницаЛист02_4.П000240016003 = П002040016003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П000240016003",
								  "неперенесенного убытка", "+", "!СКД"+ПС.РасходыБудущихПериодов.Код,
								  П002040016003,
								  "Лист02_4");
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	
	НалоговыйУчетОбособленныхПодразделений.ЗаполнитьЛист2Приложение5ДекларацииПоПрибылиФормаОтчета2015Кв1(Контейнер, ПараметрыОтчета, СписокОрганизаций, Контейнер.Лист02_5);

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С ВАРИАНТАМИ ОТЧЕТОВ

// Определяет разделы, в которых доступна панель отчетов.
//
// Параметры:
//   Разделы (Массив) из (ОбъектМетаданных)
//
// Описание:
//   В Разделы необходимо добавить метаданные подсистем тех разделов,
//   в которых размещены команды вызова панелей отчетов.
//
// Например:
//	Разделы.Добавить(Метаданные.Подсистемы.ИмяПодсистемы);
//
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	
	Разделы.Добавить(Метаданные.Подсистемы.Руководителю, НСтр("ru = 'Отчеты для руководителя'"));
	Разделы.Добавить(Метаданные.Подсистемы.Отчеты.Подсистемы.РегистрыБУСубъектовМалогоПредпринимательства, НСтр("ru = 'Регистры бухгалтерского учета субъектов малого предпринимательства'"));
	Разделы.Добавить(Метаданные.Подсистемы.Отчеты.Подсистемы.НалогНаПрибыль, НСтр("ru = 'Регистры налогового учета'"));
	Разделы.Добавить(Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты, НСтр("ru = 'Справки-расчеты'"));
	Разделы.Добавить(Метаданные.Подсистемы.Руководителю82, НСтр("ru = 'Отчеты для руководителя'"));
	Разделы.Добавить(Метаданные.Подсистемы.УчетНалогиОтчетность82.Подсистемы.РегистрыБУСубъектовМалогоПредпринимательства, НСтр("ru = 'Регистры бухгалтерского учета субъектов малого предпринимательства'"));
	Разделы.Добавить(Метаданные.Подсистемы.УчетНалогиОтчетность82.Подсистемы.НалогНаПрибыль, НСтр("ru = 'Регистры налогового учета'"));
	Разделы.Добавить(Метаданные.Подсистемы.УчетНалогиОтчетность82.Подсистемы.ЗакрытиеПериода.Подсистемы.СправкиРасчеты, НСтр("ru = 'Справки-расчеты'"));
	Разделы.Добавить(Метаданные.Подсистемы.Интерфейс77НалоговыйУчет, НСтр("ru = 'Регистры налогового учета'"));
	
КонецПроцедуры

// Процедура заполняет список значений с ключами отчетов, которые поддерживаются подсистемой
//
Процедура СписокОтчетовПоддерживаемыхПодсистемой(СписокОтчетов) Экспорт
	
	СписокОтчетов.Добавить("Отчет.РегистрыНалоговогоУчета");
	СписокОтчетов.Добавить("Отчет.РегистрИнформацииОбОбъектеОС");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетАмортизации");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетТранспортныхРасходов");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетСписаниеРБП");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетУбытковПрошлыхЛет");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетНормированияРасходов");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетСписанияКосвенныхРасходов");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетКалькуляцияСебестоимости");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетНалогаНаПрибыль");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетСебестоимостиПродукции");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетРаспределенияКосвенныхРасходов");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетРезервыПоСомнительнымДолгам");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетАмортизационнойПремии");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетПереоценкаВалютныхСредств");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетПостоянныхИВременныхРазниц");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетПересчетСтоимостиОтложенныхНалоговыхАктивовИОбязательств");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетТорговойНаценки");
	СписокОтчетов.Добавить("Отчет.РегистрНалоговогоУчетаФинРезультатовОтРеализацииАмортизируемогоИмущества");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетНалогаУСН");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетНалогаНаИмущество");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетТранспортногоНалога");
	СписокОтчетов.Добавить("Отчет.СправкаРасчетЗемельногоНалога");
	
КонецПроцедуры

//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Расчетные ставки налога на прибыль
//

Функция ПодготовитьТаблицуРасчетСтавокНалогаНаПрибыль(Отказ) Экспорт   
	ЗаписьСтавокНалогаНаПрибыль = ПолучитьЗаписьСтавокНалогаНаПрибыль();
	Возврат  ЗаписьСтавокНалогаНаПрибыль;
	
КонецФункции

Функция ПолучитьЗаписьСтавокНалогаНаПрибыль()
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ЗаписьСтавкиНалогаНаПрибыль = Новый ТаблицаЗначений;
	ЗаписьСтавкиНалогаНаПрибыль.Колонки.Добавить("Ставка",      ОбщегоНазначения.ОписаниеТипаЧисло(8, 6));
	ЗаписьСтавкиНалогаНаПрибыль.Колонки.Добавить("СуммаНалога", ОписаниеТипаЧисла15_2);
	ЗаписьСтавкиНалогаНаПрибыль.Колонки.Добавить("СуммаБазы",   ОписаниеТипаЧисла15_2);
	
	Возврат ЗаписьСтавкиНалогаНаПрибыль;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБНОВЛЕНИЯ ИНФОРМАЦИОННОЙ БАЗЫ

Процедура ОтключитьПрименениеРазличныхСтавокПоНалогуНаПрибыльПРОФ() Экспорт
	
	Если НЕ Константы.ВестиУчетПоПодразделениям.Получить()
	   И НЕ Константы.ИспользоватьНесколькоОрганизаций.Получить() Тогда
		
		Если Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Получить() Тогда
			Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Установить(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
