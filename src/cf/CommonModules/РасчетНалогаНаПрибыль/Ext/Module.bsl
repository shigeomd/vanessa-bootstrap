////////////////////////////////////////////////////////////////////////////////
// ПЕРЕДАЧА ПАРАМЕТРОВ

Функция ПодготовитьПараметры(РасчетНалога, ЗаписьДолиБазыНалогаНаПрибыль, ТаблицаРеквизиты) Экспорт
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаРасчетНалога
	
	СписокОбязательныхКолонок = ""
	+ "СуммаНалога,"       // <Число, 15, 2>
	+ "СуммаЕНВД,"         // <Число, 15, 2>
	+ "КоррСчет,"          // <ПланСчетовСсылка.Хозрасчетный>
	+ "Субконто,"
	+ "Субконто68_4,"
	+ "Субконто68_4_2,"
	+ "ПоДебету,"          // <Строка, 1>
	+ "СодержаниеПроводки" // <Строка, 150>
	;
	
	Параметры.Вставить("ТаблицаРасчетНалога", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(РасчетНалога, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.ЗаписьДолиБазыНалогаНаПрибыль
	
	СписокОбязательныхКолонок = ""
	+ "РегистрацияВНалоговомОргане,"       // <СправочникСсылка.РегистрацииВНалоговомОргане>
	+ "СтоимостьАмортизируемогоИмущества," // <Число, 15, 2>
	+ "СтоимостьОСПрошлыхМесяцев," // <Число, 15, 2>           
	+ "СтоимостьОССледующегоМесяца," // <Число, 15, 2>        
	+ "РасходыПоОплатеТруда,"              // <Число, 15, 2>
	+ "ДоляНалоговойБазы"                  // <Число, 15, 2>
	;
	
	Параметры.Вставить("ЗаписьДолиБазыНалогаНаПрибыль",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ЗаписьДолиБазыНалогаНаПрибыль, СписокОбязательныхКолонок));
	

	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Дата,"                        // <Дата>
	+ "Период,"                      // <Дата>
	+ "НачалоГода,"                  // <Дата>
	+ "НачДата,"                     // <Дата>
	+ "КонДата,"                     // <Дата>
	+ "Организация,"                 // <СправочникСсылка.Организации>
	+ "РегистрацияВНалоговомОргане," // <СправочникСсылка.РегистрацииВНалоговомОргане>
	+ "Регистратор,"                 // <ДокументСсылка.*>
	+ "КоэффициентЕНВД,"             // <Число, 15, 2>
	+ "СтавкаНалогаНаПрибыль,"       // <Число, 15, 2>
	+ "Содержание"                   // <Строка, 150>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции // ПодготовитьПараметры()

////////////////////////////////////////////////////////////////////////////////
// НАЧИСЛЕНИЕ НАЛОГА

// Рассчитывает налоговую базу по налогу на прибыль
Функция НалоговаяБаза(НачалоПериода, КонецПериода, Организация) Экспорт
	
	СоставБазы = Новый Массив;
	СоставБазы.Добавить(Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);
	СоставБазы.Добавить(Перечисления.ПрибылиИУбытки.СальдоПрочихДоходовИРасходов);
	СоставБазы.Добавить(Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("СоставБазы",    СоставБазы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаПрибылиУбытки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт - ХозрасчетныйОбороты.СуммаНУОборотДт) КАК НалоговаяБазаЗаМесяц
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаПрибылиУбытки.Счет
	|				ИЗ
	|					СчетаПрибылиУбытки),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки),
	|			Организация = &Организация
	|				И Субконто1 В (&СоставБазы),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НалоговаяБазаЗаМесяц;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

// Начисляет налог на прибыль - формирует проводки.
//
// Возвращаемое значение:
//  Число - общая сумма (до)начисленного налога
Функция НачислитьНалогНаПрибыль(Движения, Знач Реквизиты, Знач РаспределениеНалогаНаПрибыль) Экспорт
	
	Параметры                    = ПодготовитьПараметры(Неопределено, РаспределениеНалогаНаПрибыль, Реквизиты);
	Реквизиты                    = Параметры.Реквизиты[0];
	// В РаспределениеНалогаНаПрибыль могло прийти Неопределено, поэтому важно его "обернуть" в таблицу
	РаспределениеНалогаНаПрибыль = Параметры.ЗаписьДолиБазыНалогаНаПрибыль; 
	Параметры                    = Неопределено; // Далее не используется
	
	ПоддержкаПБУ18               = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	
	// Рассчитаем базу налога на прибыль
	БазаНалогаЗаГод  = НалоговаяБаза(НачалоГода(Реквизиты.Период), КонецМесяца(Реквизиты.Период), Реквизиты.Организация);
	
	// Ситуация, когда БазаНалогаЗаГод = 0 также рассматривается, т.к. в этом случае надо делать сторнирующие проводки
	
	// Налог начисляем в разрезе бюджетов, 
	// в том числе в разрезе налоговых органов регионов, в которых зарегистрированы филиалы организации (только в КОРП)
	ЕстьРегистрацияВНалоговомОргане = НалоговыйУчетОбособленныхПодразделений.УчетВРазрезеНалоговыхОрганов();
	
	// Рассчитаем сумму начисленных ранее авансовых платежей.
	// Начислить нужно разницу между суммами налога и авансового платежа.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода",             НачалоГода(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", НачалоМесяца(Реквизиты.Период) - 1);
	Запрос.УстановитьПараметр("Организация",   Реквизиты.Организация);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);      // Субконто1
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);              // Субконто2
	Запрос.УстановитьПараметр("ВидыСубконто",  ВидыСубконто); // Может быть "переустановлен"
	
	Если ЕстьРегистрацияВНалоговомОргане И РаспределениеНалогаНаПрибыль.Количество() <> 0 Тогда
		
		НалоговыйУчетОбособленныхПодразделений.ДобавитьВидСубконтоРегистрацияВНалоговомОргане(ВидыСубконто); // Субконто3
		Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто2 КАК УровниБюджетов,
		|	ХозрасчетныйОбороты.Субконто3 КАК РегистрацияВНалоговомОргане,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Налог
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоГода,
		|			&КонецПредыдущегоМесяца,
		|			,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСБюджетом),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог),
		|			КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетНалогаНаПрибыль),
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто2,
		|	ХозрасчетныйОбороты.Субконто3";
		
	Иначе // нет рапределения по РегистрацииВНалоговомОргане
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто2 КАК УровниБюджетов,
		|	НЕОПРЕДЕЛЕНО КАК РегистрацияВНалоговомОргане,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Налог
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоГода,
		|			&КонецПредыдущегоМесяца,
		|			,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСБюджетом),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог),
		|			КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетНалогаНаПрибыль),
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто2";
		
	КонецЕсли;
	
	Если НЕ ПоддержкаПБУ18 Тогда
		// Счет 68.04.2 не используется, проводки по начислению налога - в корр. с 99, 
		// причем на счете 99 кор.субконто должно быть НалогНаПрибыль.
		// Поэтому в параметрах временной таблицы также устанавливаем и вид субконто ПрибылиИУбытки
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст, 
			"КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетНалогаНаПрибыль),",
			"КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки)");
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст, 
			"Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог),",
			"Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) И КорСубконто1 = ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.НалогНаПрибыль),");
	КонецЕсли;
	
	Получатели = Запрос.Выполнить().Выгрузить();
	
	ОбщаяСуммаНалога = 0; // Общая сумма за месяц - во все бюджеты и все налог.органы
	
	СтавкаФБ = 0;
	СтавкаРФ = 0; // Бюджет субъекта федерации
	ТочностьРасчета = ?(Реквизиты.Период < Дата(2014,01,01), 2, 0); // после 01.01.2014 налог на прибыль округляется до полных рублей
	НалоговыйУчет.ПолучитьСтавкуНалогаНаПрибыль(Реквизиты, Неопределено, СтавкаФБ, СтавкаРФ); // Без регистраций в налоговом органе
	
	ПараметрыНачисления = Новый Структура;
	ПараметрыНачисления.Вставить("ПоддержкаПБУ18",  ПоддержкаПБУ18);
	ПараметрыНачисления.Вставить("ТочностьРасчета", ТочностьРасчета);
	ПараметрыНачисления.Вставить("БазаНалогаЗаГод", БазаНалогаЗаГод);
	
	// 1. Проводка по федеральному бюджету
	
	ПараметрыНачисления.Вставить("Бюджет", Перечисления.УровниБюджетов.ФедеральныйБюджет);
	ПараметрыНачисления.Вставить("СтавкаНалога", СтавкаФБ);
	
	ОбщаяСуммаНалога = ОбщаяСуммаНалога
		+ ДобавитьПроводкуНачислениеНалогаНаПрибыль(Движения, Реквизиты, ПараметрыНачисления, Получатели, Неопределено, 1);
	
	// 2. Проводка по региональному бюджету
	
	Если НЕ ЕстьРегистрацияВНалоговомОргане ИЛИ РаспределениеНалогаНаПрибыль.Количество() = 0 Тогда
		
		// Не надо делить по нал.органам - нет субконто РегистрацияВНалоговомОргане или один налоговый орган
		
		ПараметрыНачисления.Вставить("Бюджет", Перечисления.УровниБюджетов.РегиональныйБюджет);
		ПараметрыНачисления.Вставить("СтавкаНалога", СтавкаРФ);
		
		ОбщаяСуммаНалога = ОбщаяСуммаНалога
			+ ДобавитьПроводкуНачислениеНалогаНаПрибыль(Движения, Реквизиты, ПараметрыНачисления, Получатели, Неопределено, 1);
		
	Иначе // Надо делить по нал.органам
	
		Для Каждого Строка Из РаспределениеНалогаНаПрибыль Цикл
			
			Если Строка.ДоляНалоговойБазы = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ПараметрыНачисления.Вставить("Бюджет", Перечисления.УровниБюджетов.РегиональныйБюджет);
			ПараметрыНачисления.Вставить("СтавкаНалога", 0); // В каждом налоговом органе может быть своя
			НалоговыйУчет.ПолучитьСтавкуНалогаНаПрибыль(Реквизиты, Строка.РегистрацияВНалоговомОргане, , ПараметрыНачисления.СтавкаНалога);
			
			ОбщаяСуммаНалога = ОбщаяСуммаНалога
				+ ДобавитьПроводкуНачислениеНалогаНаПрибыль(Движения, Реквизиты, ПараметрыНачисления, Получатели,
					Строка.РегистрацияВНалоговомОргане, Строка.ДоляНалоговойБазы);
			
		КонецЦикла;
			
	КонецЕсли;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
	Возврат ОбщаяСуммаНалога;
	
КонецФункции

Функция ДобавитьПроводкуНачислениеНалогаНаПрибыль(Движения, Реквизиты, ПараметрыНачисления,
		Получатели, РегистрацияВНалоговомОргане, ДоляНалоговойБазы)
	
	Получатель = Новый Структура();
	Получатель.Вставить("УровниБюджетов", ПараметрыНачисления.Бюджет);
	Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		Получатель.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	РанееНачисленныйНалог = Получатели.НайтиСтроки(Получатель);
	Если РанееНачисленныйНалог.Количество() = 1 Тогда
		СуммаНалогаПрошлогоМесяца = РанееНачисленныйНалог[0].Налог;
	Иначе
		// Не может быть больше одной строки
		СуммаНалогаПрошлогоМесяца = 0;
	КонецЕсли;
	
	Если ПараметрыНачисления.БазаНалогаЗаГод < 0 Тогда
		СуммаНалога = -СуммаНалогаПрошлогоМесяца;
		СуммаРасчетногоНалога = 0; 
	Иначе 
		СуммаНалога = Окр(ДоляНалоговойБазы * ПараметрыНачисления.БазаНалогаЗаГод * ПараметрыНачисления.СтавкаНалога, ПараметрыНачисления.ТочностьРасчета) - СуммаНалогаПрошлогоМесяца;
		СуммаРасчетногоНалога = СуммаНалога;
	КонецЕсли;

	Если СуммаНалога = 0  Тогда
		Возврат СуммаРасчетногоНалога;
	КонецЕсли;
	
	Проводка = Движения.Хозрасчетный.Добавить();
	Проводка.Период      = Реквизиты.Период;
	Проводка.Организация = Реквизиты.Организация;
	Проводка.Сумма       = СуммаНалога;
	Проводка.Содержание  = Реквизиты.Содержание;
	Проводка.СчетДт      = ?(ПараметрыНачисления.ПоддержкаПБУ18, ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль, ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД);
	
	Если НЕ ПараметрыНачисления.ПоддержкаПБУ18 Тогда
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
	КонецЕсли;

	Проводка.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСБюджетом;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, ПараметрыНачисления.Бюджет);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3,
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Реквизиты.РегистрацияВНалоговомОргане));
	
	Возврат СуммаРасчетногоНалога;
	
КонецФункции

Процедура ДобавитьПроводкуСписанияОтклоненийПриОкругленииНалогаНаПрибыль(
			ТаблицаРасчетПостоянныхРазниц, 
			ТаблицаРасчетВременныхРазниц,
			ТаблицаРасчетНалогаНаПрибыль,
			ТаблицаРеквизиты,
			СуммаНалогаНУ,
			Движения, 
			Отказ) Экспорт
	
	// Часть параметров не используется, они оставлены для совместимости - на случай, если потребуется изменить алгоритм:
	// - ТаблицаРасчетПостоянныхРазниц
	// - ТаблицаРасчетВременныхРазниц
	// - ТаблицаРасчетНалогаНаПрибыль
	// - СуммаНалогаНУ
	// - Отказ
	
	Реквизиты = ТаблицаРеквизиты[0];
	Если Реквизиты.Дата < Дата(2014,01,01) Тогда 
		Возврат;
	КонецЕсли;
	
	// Исходим из предположения, что проводки по счету 68.04.2 выполняются 
	// только в ходе этой регламентной операции и записываются разом - т.е. не вызывается Движения.Записать()
	ОстатокОкругления = 0; // Его будем дебетовать. Если до "округления" сальдо на счете дебетовое, то остаток должен получиться отрицательным.
	СчетРасчетНалогаНаПрибыль = ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль;
	Для Каждого Проводка Из Движения.Хозрасчетный Цикл
		Если Проводка.СчетКт = СчетРасчетНалогаНаПрибыль Тогда
			ОстатокОкругления = ОстатокОкругления + Проводка.Сумма;
		КонецЕсли;
		Если Проводка.СчетДт = СчетРасчетНалогаНаПрибыль Тогда
			ОстатокОкругления = ОстатокОкругления - Проводка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Если ОстатокОкругления = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Проводка = Движения.Хозрасчетный.Добавить();
	Проводка.Период      = Реквизиты.Период;
	Проводка.Организация = Реквизиты.Организация;
	Проводка.Содержание  = НСтр("ru = 'Перенос сальдо счета 68.04.2'");
	
	Если ОстатокОкругления > 0 Тогда
		Проводка.Сумма       = ОстатокОкругления;
		Проводка.СчетДт      = ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль;  // 68.04.2
		Проводка.СчетКт      = ПланыСчетов.Хозрасчетный.ПрочиеПрибылиИУбытки;   // 99.09
	Иначе
		Проводка.Сумма       = -ОстатокОкругления;
		Проводка.СчетКт      = ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль;   // 68.04.2
		Проводка.СчетДт      = ПланыСчетов.Хозрасчетный.ПрочиеПрибылиИУбытки;    // 99.09
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// НАЧИСЛЕНИЕ УСЛОВНОГО ДОХОДА (РАСХОДА) ПО НАЛОГУ НА ПРИБЫЛЬ

Функция ПодготовитьТаблицуРасчетНалогаНаПрибыль(ТаблицаРеквизиты, СписокОрганизаций, Отказ) Экспорт
	
	// Условный расход (условный доход) по налогу на прибыль
	// рассчитывается следующим образом: определяется сумма
	// бухгалтерской прибыли (убытка) и умножается на ставку
	// налога на прибыль.
	
	РасчетНалога = ПолучитьТаблицаРасчетНалога();
	Параметры    = ПодготовитьПараметры(РасчетНалога, Неопределено, ТаблицаРеквизиты);
	Реквизиты    = Параметры.Реквизиты[0];
	ТаблицаНалогаНаПрибыль = Параметры.ТаблицаРасчетНалога;
	
	// Виды прибылей и убытков, которые учитываются при расчете
	// условного расхода (условного дохода) по налогу на прибыль.
	ПрибылиИУбытки = Новый Массив;
	ПрибылиИУбытки.Добавить(Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);
	ПрибылиИУбытки.Добавить(Перечисления.ПрибылиИУбытки.СальдоПрочихДоходовИРасходов);
	ПрибылиИУбытки.Добавить(Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачДата",        Реквизиты.НачДата);
	Запрос.УстановитьПараметр("КонДата",        Реквизиты.КонДата);
	Запрос.УстановитьПараметр("Организации",    СписокОрганизаций);
	Запрос.УстановитьПараметр("ПрибылиИУбытки", ПрибылиИУбытки);
	Запрос.УстановитьПараметр("СтавкаНалога",   Реквизиты.СтавкаНалогаНаПрибыль);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА((ХозрасчетныйОбороты.СуммаОборотКт - ХозрасчетныйОбороты.СуммаОборотДт) * &СтавкаНалога) КАК СуммаУсловногоНалога
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки),
	|			Организация В (&Организации)
	|				И ВЫРАЗИТЬ(Субконто1 КАК Перечисление.ПрибылиИУбытки) В (&ПрибылиИУбытки),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.СуммаУсловногоНалога > 0 Тогда
			Запись = ТаблицаНалогаНаПрибыль.Добавить();
			Запись.СуммаНалога        = Выборка.СуммаУсловногоНалога;
			Запись.СуммаЕНВД          = 0;
			Запись.КоррСчет           = ПланыСчетов.Хозрасчетный.УсловныйРасходПоНалогуНаПрибыль; // 99.02.1
			Запись.ПоДебету           = "Д";
			Запись.СодержаниеПроводки = НСтр("ru = 'Условный расход по налогу на прибыль'");
		Иначе
			Запись = ТаблицаНалогаНаПрибыль.Добавить();
			Запись.СуммаНалога        = -Выборка.СуммаУсловногоНалога;
			Запись.СуммаЕНВД          = 0;
			Запись.КоррСчет           = ПланыСчетов.Хозрасчетный.УсловныйДоходПоНалогуНаПрибыль; // 99.02.2
			Запись.ПоДебету           = "К";
			Запись.СодержаниеПроводки = НСтр("ru = 'Условный доход по налогу на прибыль'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицаНалогаНаПрибыль;
	
КонецФункции // ПодготовитьТаблицуРасчетНалогаНаПрибыль


////////////////////////////////////////////////////////////////////////////////
// РАСЧЕТ ПОСТОЯННЫХ И ОТЛОЖЕННЫХ НАЛОГОВЫХ АКТИВОВ И ОБЯЗАТЕЛЬСТВ

Процедура ОбработатьОтрицательныеАктивыИОбязательства(Строка, ОтридцательныеПНО, ОтридцательныеПНА)
	
	Активы = Строка.СуммаПНА;
	Обязательства = Строка.СуммаПНО;
	
	// отрицательные обязательства преобразуются в активы
	Если ОтридцательныеПНО Тогда
		Строка.СуммаПНО = Строка.СуммаПНО - Обязательства;
		Строка.СуммаПНА = Строка.СуммаПНА - Обязательства;
	КонецЕсли;
	
	// отрицательные активы преобразуются в обязательства
	Если ОтридцательныеПНА Тогда
		Строка.СуммаПНО = Строка.СуммаПНО - Активы;
		Строка.СуммаПНА = Строка.СуммаПНА - Активы;
	КонецЕсли;
	
	// приводим к одному знаку суммы, повлиявшие на доходы,расходы, и активы-обязательства
	
	Если (Строка.ПовлиялиНаРазницывОценкеРасходовННП + Строка.ПовлиялиНаРазницывОценкеРасходовНеННП) * (Строка.СуммаПНА + Строка.СуммаПНО) < 0 Тогда
		Строка.ПовлиялиНаРазницывОценкеРасходовННП = - Строка.ПовлиялиНаРазницывОценкеРасходовННП;
		Строка.ПовлиялиНаРазницывОценкеРасходовНеННП = - Строка.ПовлиялиНаРазницывОценкеРасходовНеННП;
		Строка.Признаны = Строка.ПовлиялиНаРазницывОценкеРасходовННП + Строка.ПовлиялиНаРазницывОценкеРасходовНеННП + Строка.ПеренесеныНаДругиеОбъекты - (Строка.НачОстатокДт - Строка.НачОстатокКт);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРазницВОценкеАктивов(Реквизиты,ТаблицаВидовАктивовИОбязательствДляРаспределения,МассивТаблицРезультатов,ВидРазницы, ОтридцательныеПНО = Ложь, ОтридцательныеПНА = Ложь)
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);

	ТаблицаРазниц = Новый ТаблицаЗначений;
	ТаблицаРазниц.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаРазниц.Колонки.Добавить("ВидРазницыПБУ18", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРазницПБУ18"));
	ТаблицаРазниц.Колонки.Добавить("ВидАктивовИОбязательств", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательств"));
	ТаблицаРазниц.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТаблицаРазниц.Колонки.Добавить("Субконто1");
	ТаблицаРазниц.Колонки.Добавить("Субконто2");
	ТаблицаРазниц.Колонки.Добавить("Субконто3");
	ТаблицаРазниц.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаРазниц.Колонки.Добавить("НачальныйОстаток", ОписаниеТипаЧисла15_2);
	ТаблицаРазниц.Колонки.Добавить("КонечныйОстаток", ОписаниеТипаЧисла15_2);
	ТаблицаРазниц.Колонки.Добавить("Признаны", ОписаниеТипаЧисла15_2);
	ТаблицаРазниц.Колонки.Добавить("ПеренесеныНаДругиеОбъекты", ОписаниеТипаЧисла15_2);
	ТаблицаРазниц.Колонки.Добавить("ПовлиялиНаРазницывОценкеРасходовННП", ОписаниеТипаЧисла15_2);
	ТаблицаРазниц.Колонки.Добавить("ПовлиялиНаРазницывОценкеРасходовНеННП", ОписаниеТипаЧисла15_2);
	
	
	НачДата 	= Реквизиты.НачДата;
	Инд = 0;
	ПР =  Перечисления.ВидыРазницПБУ18.ПР;
	
	ТаблицаОборотов = Новый ТаблицаЗначений;
	ТаблицаОборотов.Колонки.Добавить("СуммаНалога", ОписаниеТипаЧисла15_2);
	ТаблицаОборотов.Колонки.Добавить("Субконто", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательств"));
	ТаблицаОборотов.Колонки.Добавить("ПоДебету", ОбщегоНазначения.ОписаниеТипаСтрока(1));
	ТаблицаОборотов.Колонки.Добавить("КоррСчет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаОборотов.Колонки.Добавить("СуммаЕНВД", ОписаниеТипаЧисла15_2);
	ТаблицаОборотов.Колонки.Добавить("СодержаниеПроводки", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	ТаблицаОборотов.Колонки.Добавить("Субконто1");
	ТаблицаОборотов.Колонки.Добавить("Субконто2");
	ТаблицаОборотов.Колонки.Добавить("Субконто3");
	ТаблицаОборотов.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаОборотов.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));

	
	Для каждого Таблица Из МассивТаблицРезультатов Цикл	
		ВидАктивовИОбязательств = ТаблицаВидовАктивовИОбязательствДляРаспределения[Инд].ВидАктивовОбязательств;
		Счет = ТаблицаВидовАктивовИОбязательствДляРаспределения[Инд].Счета[0];
		ВедетсяУчетПоПодразделениям = Счет.УчетПоПодразделениям;		
		
		ФлагОС_НМА = ВидАктивовИОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства
			ИЛИ ВидАктивовИОбязательств = Перечисления.ВидыАктивовИОбязательств.НематериальныеАктивы
			ИЛИ ВидАктивовИОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходныеВложенияВ_МЦ;
		
		Для Каждого СтрокаТаблицы Из Таблица Цикл
			
			Запись 							= ТаблицаРазниц.Добавить();
			Если ВедетсяУчетПоПодразделениям И НЕ ФлагОС_НМА Тогда
				Запись.Подразделение        = СтрокаТаблицы.Подразделение;
			КонецЕсли;
			Запись.Период            		= НачДата;
			Запись.ВидРазницыПБУ18 			= ВидРазницы;
			Запись.ВидАктивовИОбязательств 	= ВидАктивовИОбязательств;
			ЗаполнитьЗначенияСвойств(Запись,СтрокаТаблицы);
			
			Если ВидРазницы <> ПР Тогда
				Запись.НачальныйОстаток 	= (СтрокаТаблицы.НачОстатокДт - СтрокаТаблицы.НачОстатокКт);
				Запись.КонечныйОстаток 		= (СтрокаТаблицы.КонОстатокДт - СтрокаТаблицы.КонОстатокКт);
			КонецЕсли;
			
			Если ВидРазницы = ПР Тогда
				
				Если ОтридцательныеПНО ИЛИ ОтридцательныеПНА Тогда
					
					ОбработатьОтрицательныеАктивыИОбязательства(СтрокаТаблицы, ОтридцательныеПНО, ОтридцательныеПНА);
					
				КонецЕсли;
			
				Если СтрокаТаблицы.СуммаПНО <> 0 Тогда
					СтрокаПР = ТаблицаОборотов.Добавить();
					СтрокаПР.Субконто = ВидАктивовИОбязательств;
					СтрокаПР.СуммаНалога = СтрокаТаблицы.СуммаПНО;
					СтрокаПР.ПоДебету = "Д";
					ЗаполнитьЗначенияСвойств(СтрокаПР,СтрокаТаблицы);
				Конецесли;
				Если СтрокаТаблицы.СуммаПНА <> 0 Тогда
					СтрокаПР = ТаблицаОборотов.Добавить();
					СтрокаПР.Субконто = ВидАктивовИОбязательств;
					СтрокаПР.СуммаНалога = СтрокаТаблицы.СуммаПНА;
					СтрокаПР.ПоДебету = "К";
					ЗаполнитьЗначенияСвойств(СтрокаПР,СтрокаТаблицы);
				Конецесли;
				
			Иначе
				СтрокаТаблицы.СуммаДт09 = Окр(СтрокаТаблицы.СуммаДт09 * Реквизиты.СтавкаНалогаНаПрибыль, 2);
				СтрокаТаблицы.СуммаДт77 = Окр(СтрокаТаблицы.СуммаДт77 * Реквизиты.СтавкаНалогаНаПрибыль, 2);
				СтрокаТаблицы.СуммаКт09 = Окр(СтрокаТаблицы.СуммаКт09 * Реквизиты.СтавкаНалогаНаПрибыль, 2);
				СтрокаТаблицы.СуммаКт77 = Окр(СтрокаТаблицы.СуммаКт77 * Реквизиты.СтавкаНалогаНаПрибыль, 2);
				СтрокаТаблицы.СуммаЕНВД = Окр(СтрокаТаблицы.СуммаЕНВД * Реквизиты.СтавкаНалогаНаПрибыль, 2);
				
				ОтражениеОНАиОНО(ТаблицаОборотов,
				ВидАктивовИОбязательств, 
				СтрокаТаблицы);
			КонецЕсли;	
			
			
			
		КонецЦикла;
		
		Инд = Инд + 1;	
	КонецЦикла;
	
	ТаблицаОборотов.Свернуть("Субконто, ПоДебету, Счет, КоррСчет, Подразделение, Субконто1, Субконто2, Субконто3","СуммаНалога, СуммаЕНВД");
	ТаблицаРазниц.Свернуть("Подразделение, ВидРазницыПБУ18, ВидАктивовИОбязательств, Период, Субконто1, Субконто2, Субконто3, Счет", 
							"НачальныйОстаток, КонечныйОстаток, Признаны, ПеренесеныНаДругиеОбъекты, ПовлиялиНаРазницывОценкеРасходовННП, ПовлиялиНаРазницывОценкеРасходовНеННП");
	
	ТаблицаСтоимости = ПодготовитьТаблицуСтоимостиНалоговыхАктивовИОбязательств(Реквизиты,ТаблицаОборотов,ВидРазницы);
	Возврат Новый Структура("ТаблицаРазницВОценкеАктивовИОбязательств,ТаблицаСтоимостиНалоговыхАктивовИОбязательств",ТаблицаРазниц,ТаблицаСтоимости);
	
КонецФункции	

Функция ПодготовитьТаблицуСтоимостиНалоговыхАктивовИОбязательств(Реквизиты,ТаблицаОборотовРазниц,ВидРазницы)
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);

	ТаблицаСтоимости = Новый ТаблицаЗначений;
	ТаблицаСтоимости.Колонки.Добавить("ВидАктивовИОбязательствПБУ18",Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательствПБУ18"));
	ТаблицаСтоимости.Колонки.Добавить("ВидАктивовИОбязательств",Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательств"));
	ТаблицаСтоимости.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТаблицаСтоимости.Колонки.Добавить("Признаны",ОписаниеТипаЧисла15_2);
	ТаблицаСтоимости.Колонки.Добавить("Списаны",ОписаниеТипаЧисла15_2);
	ТаблицаСтоимости.Колонки.Добавить("ПризнаныСписаныНеННП",ОписаниеТипаЧисла15_2);
	ТаблицаСтоимости.Колонки.Добавить("Субконто1");
	ТаблицаСтоимости.Колонки.Добавить("Субконто2");
	ТаблицаСтоимости.Колонки.Добавить("Субконто3");
	ТаблицаСтоимости.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаСтоимости.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	НачДата 	= Реквизиты.НачДата;
	Счет09    	= ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы;
	Счет77    	= ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеОбязательства;
	ОНА 		= Перечисления.ВидыАктивовИОбязательствПБУ18.ОНА;
	ОНО 		= Перечисления.ВидыАктивовИОбязательствПБУ18.ОНО;
	ПНА 		= Перечисления.ВидыАктивовИОбязательствПБУ18.ПНА;
	ПНО 		= Перечисления.ВидыАктивовИОбязательствПБУ18.ПНО;
	
	Для Каждого Строка из ТаблицаОборотовРазниц Цикл
		Если ВидРазницы = Перечисления.ВидыРазницПБУ18.ВР Тогда
			// Образование отложенного налогового актива
			Если (Строка.КоррСчет = Счет09) И (Строка.ПоДебету = "Д") Тогда
				Запись 										= ТаблицаСтоимости.Добавить();
				Запись.Признаны        						= Строка.СуммаНалога;
				Запись.ПризнаныСписаныНеННП					= Строка.СуммаЕНВД;
				Запись.ВидАктивовИОбязательств  			= Строка.Субконто;
				Запись.ВидАктивовИОбязательствПБУ18 		= ОНА;				
				Запись.Период 								= НачДата;
				ЗаполнитьЗначенияСвойств(Запись,Строка);
			КонецЕсли;
			
			// Погашение отложенного налогового актива
			Если (Строка.КоррСчет = Счет09) И (Строка.ПоДебету = "К") Тогда
				Запись 										= ТаблицаСтоимости.Добавить();
				Запись.Списаны        						= Строка.СуммаНалога;
				Запись.ПризнаныСписаныНеННП					= -Строка.СуммаЕНВД;
				Запись.ВидАктивовИОбязательств 	 			= Строка.Субконто;
				Запись.ВидАктивовИОбязательствПБУ18 		= ОНА;
				Запись.Период 								= НачДата;
				ЗаполнитьЗначенияСвойств(Запись,Строка);
			КонецЕсли;
			
			// Образование отложенного налогового обязательства
			Если (Строка.КоррСчет = Счет77) И (Строка.ПоДебету = "К") Тогда
				Запись 										= ТаблицаСтоимости.Добавить();
				Запись.Признаны        						= Строка.СуммаНалога;
				Запись.ПризнаныСписаныНеННП					= Строка.СуммаЕНВД;
				Запись.ВидАктивовИОбязательств  			= Строка.Субконто;
				Запись.ВидАктивовИОбязательствПБУ18 		= ОНО;
				Запись.Период 								= НачДата;
				ЗаполнитьЗначенияСвойств(Запись,Строка);
			КонецЕсли;
			
			// Погашение отложенного налогового обязательства
			Если (Строка.КоррСчет = Счет77) И (Строка.ПоДебету = "Д") Тогда
				Запись 										= ТаблицаСтоимости.Добавить();
				Запись.Списаны        						= Строка.СуммаНалога;
				Запись.ПризнаныСписаныНеННП					= -Строка.СуммаЕНВД;
				Запись.ВидАктивовИОбязательств  			= Строка.Субконто;
				Запись.ВидАктивовИОбязательствПБУ18 		= ОНО;
				Запись.Период 								= НачДата;
				ЗаполнитьЗначенияСвойств(Запись,Строка);
			КонецЕсли;
		Иначе
			
			//Постоянное налоговое обязательство
			Если Строка.ПоДебету = "Д" Тогда
				Запись 										= ТаблицаСтоимости.Добавить();
				Запись.Признаны        						= Строка.СуммаНалога;
				Запись.ВидАктивовИОбязательств  			= Строка.Субконто;
				Запись.ВидАктивовИОбязательствПБУ18 		= ПНО;
				Запись.Период 								= НачДата;
				ЗаполнитьЗначенияСвойств(Запись,Строка);
			//Постоянный налоговый актив
			ИначеЕсли Строка.ПоДебету = "К" Тогда
				Запись 										= ТаблицаСтоимости.Добавить();
				Запись.Признаны        						= Строка.СуммаНалога;
				Запись.ВидАктивовИОбязательств  			= Строка.Субконто;
				Запись.ВидАктивовИОбязательствПБУ18 		= ПНА;
				Запись.Период 								= НачДата;
				ЗаполнитьЗначенияСвойств(Запись,Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаСтоимости.Свернуть("ВидАктивовИОбязательствПБУ18,ВидАктивовИОбязательств,Период","Признаны,Списаны,ПризнаныСписаныНеННП");
	
	Возврат ТаблицаСтоимости;
	
КонецФункции	

Функция ПодготовитьТаблицыРазницИСтоимостиПНО_ПНА(Реквизиты,СписокОрганизаций, ОтридцательныеПНО, ОтридцательныеПНА)
	
	ТаблицаВидовАктивовИОбязательств = НалоговыйУчет.ПолучитьТаблицуВидовАктивовИОбязательств();
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ПрочиеДоходы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ПрочиеРасходы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
		
	ТаблицаВидовАктивовИОбязательствДляРаспределения = ТаблицаВидовАктивовИОбязательств.СкопироватьКолонки();
	
	инд                 = 5; // начинаем не с нуля, чтобы учесть ВТ по счету ЕН и По счетам 90, 91
	ПакетПНО_ПНА        = Новый Запрос;                   
	ТекстЗапросаПНО_ПНА = "";
	СоответствиеСтрокДляСвертки                     = Новый Соответствие;
	СоответствиеДляТаблицыВидовАктивовИОбязательств = Новый Соответствие;
	
	ПакетПНО_ПНА.УстановитьПараметр("НачДата",     Новый Граница(НачалоДня(Реквизиты.НачДата), ВидГраницы.Включая));
	ПакетПНО_ПНА.УстановитьПараметр("КонДата",     Новый Граница(КонецДня(Реквизиты.КонДата), ВидГраницы.Включая));
	ПакетПНО_ПНА.УстановитьПараметр("Организации", СписокОрганизаций);
	ПакетПНО_ПНА.УстановитьПараметр("СтавкаНалога", Реквизиты.СтавкаНалогаНаПрибыль);
	
	ПакетПНО_ПНА.УстановитьПараметр("Счет90", ПланыСчетов.Хозрасчетный.Продажи);
	ПакетПНО_ПНА.УстановитьПараметр("Счет9101", ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	ПакетПНО_ПНА.УстановитьПараметр("Счет9102", ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	СчетаУчетаАктивовИОбязательств = Новый Массив;
	
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД);
	
	ПакетПНО_ПНА.УстановитьПараметр("СчетаЕН", СчетаЗатрат);
	
	ПакетПНО_ПНА.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета91И90
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет90) 
	| ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет9101)
	| ИЛИ Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет9102)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета90
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет90)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета9101
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет9101)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета9102
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет9102)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	
	// Рассчитываем постоянные налоговые обязательства и активы и отражаем их.
	Для каждого СтрокаВидАктиваОбязательства Из ТаблицаВидовАктивовИОбязательств Цикл
		
		Если Не СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.УбытокТекущегоПериода Тогда
			
			ТекстЗапросаПНО_ПНА = ОборотыПостоянныхРазницПоВидуАктивовОбязательствСформироватьПакет(
			СтрокаВидАктиваОбязательства, инд, СоответствиеСтрокДляСвертки);
			
			ТекИндекс           = инд - 1;
			ПакетПНО_ПНА.Текст  = ПакетПНО_ПНА.Текст + ?(ТекИндекс = 5, "", ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()) + ТекстЗапросаПНО_ПНА;
			
			Если ТекИндекс = 5 Тогда
				ПакетПНО_ПНА.Текст = НалоговыйУчет.ДобавитьТекстЗапросаСчетаЕНВД(ПакетПНО_ПНА);
			КонецЕсли;
			
			ПакетПНО_ПНА.УстановитьПараметр("МассивСчетов" + ТекИндекс, СтрокаВидАктиваОбязательства.Счета);
			ПакетПНО_ПНА.УстановитьПараметр("ВидСубконто"  + ТекИндекс, СтрокаВидАктиваОбязательства.Субконто);
			Для Каждого СчетУчета Из СтрокаВидАктиваОбязательства.Счета Цикл
				СчетаУчетаАктивовИОбязательств.Добавить(СчетУчета);
			КонецЦикла;
			СоответствиеДляТаблицыВидовАктивовИОбязательств.Вставить(инд, ТаблицаВидовАктивовИОбязательств.Индекс(СтрокаВидАктиваОбязательства));
			инд = инд + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПустаяСтруктура = Новый Структура("ТаблицаРазницВОценкеАктивовИОбязательств,ТаблицаСтоимостиНалоговыхАктивовИОбязательств",Новый ТаблицаЗначений,Новый ТаблицаЗначений);
	
	Если ПакетПНО_ПНА.Текст = "" Тогда
		Возврат ПустаяСтруктура;
	КонецЕсли;
	
	ПакетПНО_ПНА.УстановитьПараметр("СчетаУчетаАктивовИОбязательств",СчетаУчетаАктивовИОбязательств);
	
	МассивТаблицРезультатов = Новый Массив;
	Результат = ПакетПНО_ПНА.ВыполнитьПакет();
	Если ТипЗнч(Результат) = Тип("Массив") и Результат.ВГраница() >= 0 Тогда
		Для инд = 0 По Результат.ВГраница() Цикл
			Если СоответствиеСтрокДляСвертки.Получить(инд) = Неопределено Тогда // если нет в Соответствии - значит, это временная таблица
				Продолжить;
			КонецЕсли;
			
			ТаблицаРезультатов = Новый ТаблицаЗначений;
			ТаблицаРезультатов = Результат[инд].Выгрузить();
			
			Если ТаблицаРезультатов.Количество() > 0 Тогда
				
				ТаблицаРезультатов.Свернуть(СоответствиеСтрокДляСвертки[инд],
					"НачОстатокКт, КонОстатокКт, НачОстатокДт, КонОстатокДт, ОборотДт, ОборотКт, ОборотЕН, Признаны, ПеренесеныНаДругиеОбъекты, ПовлиялиНаРазницывОценкеРасходовННП, ПовлиялиНаРазницывОценкеРасходовНеННП,СуммаПНА,СуммаПНО");
					
					Если (ТаблицаРезультатов.Итог("Признаны") + ТаблицаРезультатов.Итог("ПеренесеныНаДругиеОбъекты") + ТаблицаРезультатов.Итог("ПовлиялиНаРазницывОценкеРасходовННП")
						+ ТаблицаРезультатов.Итог("ПовлиялиНаРазницывОценкеРасходовНеННП") + ТаблицаРезультатов.Итог("СуммаПНА") + ТаблицаРезультатов.Итог("СуммаПНО")) = 0 Тогда 
						Продолжить;
					КонецЕсли;
					
					МассивТаблицРезультатов.Добавить(ТаблицаРезультатов);
				
				СтрокаТаблицы = ТаблицаВидовАктивовИОбязательствДляРаспределения.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ТаблицаВидовАктивовИОбязательств[СоответствиеДляТаблицыВидовАктивовИОбязательств.Получить(инд)]);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Возврат ПустаяСтруктура;
	КонецЕсли;
	
	Возврат ПодготовитьТаблицуРазницВОценкеАктивов(Реквизиты,ТаблицаВидовАктивовИОбязательствДляРаспределения,МассивТаблицРезультатов,Перечисления.ВидыРазницПБУ18.ПР, ОтридцательныеПНО, ОтридцательныеПНА);

КонецФункции

Функция ОборотыВременныхРазницПоВидуАктивовОбязательствРасчет(Реквизиты, ТаблицаРезультатов, ТаблицаРаспределяемыхРасходов, КоличествоОбъектовАналитики)
	
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		
		ТаблицаРезультатов.Колонки.Добавить("СуммаДт09");
		ТаблицаРезультатов.Колонки.Добавить("СуммаКт09");
		ТаблицаРезультатов.Колонки.Добавить("СуммаДт77");
		ТаблицаРезультатов.Колонки.Добавить("СуммаКт77");
		ТаблицаРезультатов.Колонки.Добавить("СуммаЕНВД");
		
		Для Каждого Строка Из ТаблицаРезультатов Цикл
			СводноеСальдоКон = ?(Строка.КонОстатокДт = NULL, 0, Строка.КонОстатокДт) - ?(Строка.КонОстатокКт = NULL, 0, Строка.КонОстатокКт);
			СводноеСальдоНач = ?(Строка.НачОстатокДт = NULL, 0, Строка.НачОстатокДт) - ?(Строка.НачОстатокКт = NULL, 0, Строка.НачОстатокКт);
			Разница          = ?(Строка.ОборотДт = NULL, 0, Строка.ОборотДт) - ?(Строка.ОборотКт = NULL, 0, Строка.ОборотКт);
			
			// Определим сумму временных разниц, приходящуюся на деятельность, облагаемую ЕНВД,
			// для распределяемых затрат, связанных с амортизацией и списанием РБП.
			СуммаРаспределяемогоРасхода  = 0;
			СуммаЕНВДРасхода             = 0;
			СтрокаРаспределяемогоРасхода = ?(КоличествоОбъектовАналитики = 0, Неопределено, ТаблицаРаспределяемыхРасходов.Найти(Строка.Субконто1, "КорСубконто1"));
			
			Если СтрокаРаспределяемогоРасхода = Неопределено Тогда
				Строка.СуммаЕНВД = Строка.ОборотЕН;
			Иначе
				СуммаРаспределяемогоРасхода = СтрокаРаспределяемогоРасхода.СуммаЗатрат;
				СуммаЕНВДРасхода = СтрокаРаспределяемогоРасхода.СуммаЗатратЕНВД;
				Строка.СуммаЕНВД = СуммаРаспределяемогоРасхода * Реквизиты.КоэффициентЕНВД + СуммаЕНВДРасхода;
			КонецЕсли;
			
			Если СводноеСальдоНач > 0 Тогда
				Если  СводноеСальдоКон - СводноеСальдоНач > 0 Тогда
					Строка.СуммаКт77 = Разница;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = 0;
				ИначеЕсли  СводноеСальдоКон - СводноеСальдоНач = 0 Тогда
					Строка.СуммаКт77 = 0;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = 0;
					Иначе  Если (СводноеСальдоКон < 0) И (СводноеСальдоНач >= 0) Тогда
						Строка.СуммаДт09 = - СводноеСальдоКон;
						Строка.СуммаДт77 = СводноеСальдоНач;
						Строка.СуммаКт09 = 0;
						Строка.СуммаКт77 = 0;
					Иначе
						Строка.СуммаКт77 = 0;
						Строка.СуммаДт77 = -Разница;
						Строка.СуммаКт09 = 0;
						Строка.СуммаДт09 = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если  СводноеСальдоКон - СводноеСальдоНач < 0 Тогда
					Строка.СуммаКт77 = 0;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = - СводноеСальдоКон + СводноеСальдоНач;
				ИначеЕсли  СводноеСальдоКон - СводноеСальдоНач = 0 Тогда
					Строка.СуммаКт77 = 0;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = 0;
					Иначе  Если (СводноеСальдоКон > 0) И (СводноеСальдоНач <= 0) Тогда
						Строка.СуммаКт77 = СводноеСальдоКон;
						Строка.СуммаДт77 = 0;
						Строка.СуммаКт09 = -СводноеСальдоНач;
						Строка.СуммаДт09 = 0;
					Иначе
						Строка.СуммаКт77 = 0;
						Строка.СуммаДт77 = 0;
						Строка.СуммаКт09 = Разница;
						Строка.СуммаДт09 = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат  ТаблицаРезультатов;
	
КонецФункции // ОборотыВременныхРазницПоВидуАктивовОбязательствРасчет()

Функция ОборотыВременныхРазницПоВидуАктивовОбязательствСформироватьПакет(СтрокаВидАктиваОбязательства, ТекИндекс = 0, СоответствиеСтрокДляСвертки = "")
	
	КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();
	ВедетсяУчетПоПодразделениям = СтрокаВидАктиваОбязательства.Счета[0].УчетПоПодразделениям;
	
	МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;
	Если НЕ КоличествоОбъектовАналитики = 0 Тогда
		ФлагОС_НМА = СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства
			ИЛИ СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НематериальныеАктивы
			ИЛИ СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходныеВложенияВ_МЦ;
		ФлагОбъектовСтроительства = МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства;
		ФлагНЗП    = СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство;
	Иначе
		ФлагОС_НМА = Ложь;
		ФлагОбъектовСтроительства = Ложь;
		ФлагНЗП    = Ложь;
	КонецЕсли;
	
	ТекстЗапросаШаблон =
					"ВЫБРАТЬ
					|	Хозрасчетный.Ссылка КАК Счет
					|ПОМЕСТИТЬ ВТСчета
					|ИЗ
					|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
					|ГДЕ
					|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Счет
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
					|	ХозрасчетныйОстаткиИОбороты.Подразделение КАК Подразделение,
					|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
					|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2,
					|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК Субконто3,
					|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаВРНачальныйОстатокДт) КАК НачОстатокДт,
					|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстатокДт) КАК КонОстатокДт,
					|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаВРНачальныйОстатокКт) КАК НачОстатокКт,
					|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстатокКт) КАК КонОстатокКт,
					|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаВРОборотДт) КАК ОборотДт,
					|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаВРОборотКт) КАК ОборотКт,
					|	СУММА(0) КАК ОборотЕН,
					|	СУММА(0) КАК Признаны,
					|	СУММА(0) КАК ПеренесеныНаДругиеОбъекты,
					|	СУММА(0) КАК ПовлиялиНаРазницывОценкеРасходовННП,
					|	СУММА(0) КАК ПовлиялиНаРазницывОценкеРасходовНеННП
					|ИЗ
					|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
					|			&НачДата,
					|			&КонДата,
					|			,
					|			ДвиженияИГраницыПериода,
					|			Счет В
					|				(ВЫБРАТЬ
					|					ВТСчета.Счет
					|				ИЗ
					|					ВТСчета),
					|			&ВидСубконто,
					|			Организация В (&Организации)) КАК ХозрасчетныйОстаткиИОбороты
					|
					|СГРУППИРОВАТЬ ПО
					|	ХозрасчетныйОстаткиИОбороты.Счет,
					|	ХозрасчетныйОстаткиИОбороты.Субконто1,
					|	ХозрасчетныйОстаткиИОбороты.Субконто2,
					|	ХозрасчетныйОстаткиИОбороты.Субконто3,
					|	ХозрасчетныйОстаткиИОбороты.Подразделение
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ХозрасчетныйОбороты.Счет,
					|	ХозрасчетныйОбороты.Подразделение,
					|	ХозрасчетныйОбороты.Субконто1,
					|	ХозрасчетныйОбороты.Субконто2,
					|	ХозрасчетныйОбороты.Субконто3,
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(ХозрасчетныйОбороты.СуммаВРОборотКт),
					|	СУММА(0),
					|	0,
					|	СУММА(0),
					|	СУММА(ВЫБОР
					|			КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
					|				ТОГДА ХозрасчетныйОбороты.СуммаВРОборотДт - ХозрасчетныйОбороты.СуммаВРОборотКт
					|			ИНАЧЕ ХозрасчетныйОбороты.СуммаВРОборотКт - ХозрасчетныйОбороты.СуммаВРОборотДт
					|		КОНЕЦ)
					|ИЗ
					|	РегистрБухгалтерии.Хозрасчетный.Обороты(
					|			&НачДата,
					|			&КонДата,
					|			,
					|			Счет В
					|				(ВЫБРАТЬ
					|					ВТСчета.Счет
					|				ИЗ
					|					ВТСчета),
					|			&ВидСубконто,
					|			Организация В (&Организации),
					|			КорСчет В
					|				(ВЫБРАТЬ
					|					ВТ_СчетаЕН.Счет
					|				ИЗ
					|					ВТ_СчетаЕН),
					|			) КАК ХозрасчетныйОбороты
					|
					|СГРУППИРОВАТЬ ПО
					|	ХозрасчетныйОбороты.Счет,
					|	ХозрасчетныйОбороты.Субконто1,
					|	ХозрасчетныйОбороты.Субконто2,
					|	ХозрасчетныйОбороты.Субконто3,
					|	ХозрасчетныйОбороты.Подразделение
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ХозрасчетныйОбороты.Счет,
					|	ХозрасчетныйОбороты.Подразделение,
					|	ХозрасчетныйОбороты.Субконто1,
					|	ХозрасчетныйОбороты.Субконто2,
					|	ХозрасчетныйОбороты.Субконто3,
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(ВЫБОР
					|			КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
					|				ТОГДА ХозрасчетныйОбороты.СуммаВРОборотДт - ХозрасчетныйОбороты.СуммаВРОборотКт
					|			ИНАЧЕ ХозрасчетныйОбороты.СуммаВРОборотКт - ХозрасчетныйОбороты.СуммаВРОборотДт
					|		КОНЕЦ),
					|	СУММА(0)
					|ИЗ
					|	РегистрБухгалтерии.Хозрасчетный.Обороты(
					|			&НачДата,
					|			&КонДата,
					|			,
					|			Счет В
					|				(ВЫБРАТЬ
					|					ВТСчета.Счет
					|				ИЗ
					|					ВТСчета),
					|			&ВидСубконто,
					|			Организация В (&Организации),
					|			КорСчет В (ВЫБРАТЬ
					|							ВТ_Счета90БезЕН.Счет
					|						ИЗ
					|							ВТ_Счета90БезЕН),
					|			) КАК ХозрасчетныйОбороты
					|
					|СГРУППИРОВАТЬ ПО
					|	ХозрасчетныйОбороты.Счет,
					|	ХозрасчетныйОбороты.Субконто1,
					|	ХозрасчетныйОбороты.Субконто2,
					|	ХозрасчетныйОбороты.Субконто3,
					|	ХозрасчетныйОбороты.Подразделение
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ХозрасчетныйОбороты.Счет,
					|	ХозрасчетныйОбороты.Подразделение,
					|	ХозрасчетныйОбороты.Субконто1,
					|	ХозрасчетныйОбороты.Субконто2,
					|	ХозрасчетныйОбороты.Субконто3,
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(0),
					|	СУММА(ВЫБОР
					|			КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
					|				ТОГДА -ХозрасчетныйОбороты.СуммаВРОборотКт + ХозрасчетныйОбороты.СуммаВРОборотДт
					|			ИНАЧЕ ХозрасчетныйОбороты.СуммаВРОборотДт - ВЫБОР
					|					КОГДА ХозрасчетныйОбороты.СуммаВРОборотКт < 0
					|						ТОГДА ХозрасчетныйОбороты.СуммаВРОборотКт
					|					ИНАЧЕ 0
					|				КОНЕЦ
					|		КОНЕЦ),
					|	СУММА(ВЫБОР
					|			КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
					|				ТОГДА ВЫБОР
					|						КОГДА ХозрасчетныйОбороты.СуммаВРОборотДт > 0
					|							ТОГДА ХозрасчетныйОбороты.СуммаВРОборотДт
					|						ИНАЧЕ 0
					|					КОНЕЦ
					|			ИНАЧЕ ВЫБОР
					|					КОГДА ХозрасчетныйОбороты.СуммаВРОборотКт > 0
					|						ТОГДА ХозрасчетныйОбороты.СуммаВРОборотКт
					|					ИНАЧЕ 0
					|				КОНЕЦ
					|		КОНЕЦ),
					|	СУММА(0),
					|	СУММА(0)
					|ИЗ
					|	РегистрБухгалтерии.Хозрасчетный.Обороты(
					|			&НачДата,
					|			&КонДата,
					|			,
					|			Счет В
					|				(ВЫБРАТЬ
					|					ВТСчета.Счет
					|				ИЗ
					|					ВТСчета),
					|			&ВидСубконто,
					|			Организация В (&Организации),
					|			НЕ КорСчет В
					|						(ВЫБРАТЬ
					|							ВТ_Счета90ИЕН.Счет
					|						ИЗ
					|							ВТ_Счета90ИЕН),
					|			) КАК ХозрасчетныйОбороты
					|
					|СГРУППИРОВАТЬ ПО
					|	ХозрасчетныйОбороты.Счет,
					|	ХозрасчетныйОбороты.Субконто1,
					|	ХозрасчетныйОбороты.Субконто2,
					|	ХозрасчетныйОбороты.Субконто3,
					|	ХозрасчетныйОбороты.Подразделение";
	
	Если ФлагОС_НМА Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.Счет,", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОбороты.Счет,", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 3 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК Субконто3", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто3", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОбороты.Субконто3", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 2 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто2", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОбороты.Субконто2", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 1 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто1", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОбороты.Субконто1", "");
	КонецЕсли;
		
	Если СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РасходыБудущихПериодов Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.СуммаВРОборотДт",
			"ВЫБОР КОГДА ВЫРАЗИТЬ(Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП = ЗНАЧЕНИЕ(Перечисление.ВидыРБП.УбыткиПрошлыхЛет) ТОГДА 0 ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаВРОборотДт КОНЕЦ");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстатокДт",
			"ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстатокДт - ВЫБОР КОГДА ВЫРАЗИТЬ(Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП = ЗНАЧЕНИЕ(Перечисление.ВидыРБП.УбыткиПрошлыхЛет) ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаВРОборотДт ИНАЧЕ 0 КОНЕЦ");
	КонецЕсли;
	
	ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&МассивСчетов", "&МассивСчетов" + ТекИндекс);
	ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ВТСчета",       "ВТСчета"       + ТекИндекс);
	ТекстЗапроса       = СтрЗаменить(ТекстЗапросаШаблон, "&ВидСубконто",  "&ВидСубконто"  + ТекИндекс);
	
	СтрокаДляСверткиИзмерения = "" + ?(ФлагОС_НМА, "", "Счет" + ?(ВедетсяУчетПоПодразделениям, ", Подразделение", ""))
		+ ?(КоличествоОбъектовАналитики = 0, "", ", Субконто1") + ?(ФлагОбъектовСтроительства, "", ?(КоличествоОбъектовАналитики >= 2, ", Субконто2",""))
		+ ?(ФлагНЗП, "", ?(КоличествоОбъектовАналитики = 3, ", Субконто3",""));
	ТекИндекс = ТекИндекс + 1; 
	СоответствиеСтрокДляСвертки.Вставить(ТекИндекс, СтрокаДляСверткиИзмерения);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ОборотыВременныхРазницПоВидуАктивовОбязательствСформироватьПакет()

Функция ОборотыПостоянныхРазницПоВидуАктивовОбязательствСформироватьПакет(СтрокаВидАктиваОбязательства, ТекИндекс = 0, СоответствиеСтрокДляСвертки = "")
	
	КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();
	ВедетсяУчетПоПодразделениям = СтрокаВидАктиваОбязательства.Счета[0].УчетПоПодразделениям;
	
	МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;
	Если НЕ КоличествоОбъектовАналитики = 0 Тогда
		ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, 1, 0);
		ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы, 1, ФлагОС_НМА);
		ФлагОбъектовСтроительства = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства, 1, 0);
		ФлагНЗП    = ?(СтрокаВидАктиваОбязательства.ВидАктивовОбязательств =
			Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство, 1, 0);
	Иначе
		ФлагОС_НМА = Ложь;
		ФлагОбъектовСтроительства = Ложь;
		ФлагНЗП    = Ложь;
	КонецЕсли;
	
	ТекстЗапросаШаблон = "ВЫБРАТЬ
	                     |	Хозрасчетный.Ссылка КАК Счет
	                     |ПОМЕСТИТЬ ВТСчета
	                     |ИЗ
	                     |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	                     |ГДЕ
	                     |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
	                     |
	                     |ИНДЕКСИРОВАТЬ ПО
	                     |	Счет
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОстаткиИОбороты.Счет,
	                     |	ХозрасчетныйОстаткиИОбороты.Субконто1,
	                     |	ХозрасчетныйОстаткиИОбороты.Субконто2,
	                     |	ХозрасчетныйОстаткиИОбороты.Субконто3,
	                     |	ХозрасчетныйОстаткиИОбороты.Подразделение,
	                     |	ХозрасчетныйОстаткиИОбороты.СуммаПРНачальныйОстатокДт КАК НачОстатокДт,
	                     |	ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокДт КАК КонОстатокДт,
	                     |	ХозрасчетныйОстаткиИОбороты.СуммаПРНачальныйОстатокКт КАК НачОстатокКт,
	                     |	ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокКт КАК КонОстатокКт,
	                     |	ХозрасчетныйОстаткиИОбороты.СуммаПРОборотДт КАК ОборотДт,
	                     |	ХозрасчетныйОстаткиИОбороты.СуммаПРОборотКт КАК ОборотКт,
	                     |	0 КАК ОборотЕН,
	                     |	0 КАК Признаны,
	                     |	0 КАК ПеренесеныНаДругиеОбъекты,
	                     |	0 КАК ПовлиялиНаРазницывОценкеРасходовННП,
	                     |	0 КАК СуммаПНО,
	                     |	0 КАК СуммаПНА,
	                     |	0 КАК ПовлиялиНаРазницывОценкеРасходовНеННП
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			,
	                     |			ДвиженияИГраницыПериода,
	                     |			Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
						 |
						 | 			И НЕ Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90),
	                     |			&ВидСубконто,
	                     |			Организация В (&Организации)) КАК ХозрасчетныйОстаткиИОбороты
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОбороты.Счет,
	                     |	ХозрасчетныйОбороты.Субконто1,
	                     |	ХозрасчетныйОбороты.Субконто2,
	                     |	ХозрасчетныйОбороты.Субконто3,
	                     |	ХозрасчетныйОбороты.Подразделение,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ВЫБОР
	                     |		КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	                     |			ТОГДА ХозрасчетныйОбороты.СуммаПРОборотКт - ХозрасчетныйОбороты.СуммаПРОборотДт
	                     |		ИНАЧЕ ХозрасчетныйОбороты.СуммаПРОборотДт - ХозрасчетныйОбороты.СуммаПРОборотКт
	                     |	КОНЕЦ,
	                     |	ВЫБОР
	                     |		КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	                     |			ТОГДА ХозрасчетныйОбороты.СуммаПРОборотДт
	                     |		ИНАЧЕ ХозрасчетныйОбороты.СуммаПРОборотКт
	                     |	КОНЕЦ,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Период,
	                     |			Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
						 | 			И НЕ Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90),
	                     |			&ВидСубконто,
	                     |			Организация В (&Организации),
						 | 			НЕ КорСчет В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90)
	                     |				И НЕ КорСчет В
	                     |						(ВЫБРАТЬ
	                     |							ВТ_СчетаЕН.Счет
	                     |						ИЗ
	                     |							ВТ_СчетаЕН),
	                     |			) КАК ХозрасчетныйОбороты
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОборотыДтКт.СчетДт,";
						 
						 Если КоличествоОбъектовАналитики > 0 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоДт1,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 1 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
	                    	 |	ХозрасчетныйОборотыДтКт.СубконтоДт2,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 2 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоДт3,";
						 КонецЕсли;
						 
						 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
	                     |	ХозрасчетныйОборотыДтКт.ПодразделениеДт,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт * &СтавкаНалога,
	                     |	0
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Запись,
	                     |			СчетДт В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
						 | 			И НЕ СчетДт В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90),
	                     |			&ВидСубконто,
	                     |			СчетКт В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета9101.Счет
	                     |					ИЗ
	                     |						ВТ_Счета9101)
	                     |				И НЕ СчетКт В
	                     |						(ВЫБРАТЬ
	                     |							ВТ_СчетаЕН.Счет
	                     |						ИЗ
	                     |							ВТ_СчетаЕН),
	                     |			,
	                     |			Организация В (&Организации)) КАК ХозрасчетныйОборотыДтКт
	                     |ГДЕ
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт <> 0
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОбороты.Счет,
	                     |	ХозрасчетныйОбороты.Субконто1,
	                     |	ХозрасчетныйОбороты.Субконто2,
	                     |	ХозрасчетныйОбороты.Субконто3,
	                     |	ХозрасчетныйОбороты.Подразделение,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ВЫБОР
	                     |		КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	                     |			ТОГДА ХозрасчетныйОбороты.СуммаПРОборотКт
	                     |		ИНАЧЕ ХозрасчетныйОбороты.СуммаПРОборотДт
	                     |	КОНЕЦ,
	                     |	ВЫБОР
	                     |		КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	                     |			ТОГДА ХозрасчетныйОбороты.СуммаПРОборотКт - ХозрасчетныйОбороты.СуммаПРОборотДт
	                     |		ИНАЧЕ ХозрасчетныйОбороты.СуммаПРОборотДт - ХозрасчетныйОбороты.СуммаПРОборотКт
	                     |	КОНЕЦ,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ВЫБОР
	                     |		КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	                     |			ТОГДА ХозрасчетныйОбороты.СуммаПРОборотДт
	                     |		ИНАЧЕ ХозрасчетныйОбороты.СуммаПРОборотКт
	                     |	КОНЕЦ
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Период,
	                     |			Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
						 | 			И НЕ Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90),
	                     |			&ВидСубконто,
	                     |			Организация В (&Организации),
	                     |			КорСчет В
	                     |				(ВЫБРАТЬ
	                     |					ВТ_СчетаЕН.Счет
	                     |				ИЗ
	                     |					ВТ_СчетаЕН),
	                     |			) КАК ХозрасчетныйОбороты
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОборотыДтКт.СчетКт,";
						 
						 
						 Если КоличествоОбъектовАналитики > 0 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоКт1,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 1 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоКт2,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 2 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоКт3,";
						 КонецЕсли;
						 
						ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
	                     |	ХозрасчетныйОборотыДтКт.ПодразделениеКт,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт * &СтавкаНалога,
	                     |	0
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Запись,
	                     |			,
	                     |			,
	                     |			СчетКт В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
	                     |				И СчетКт В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета9101.Счет
	                     |					ИЗ
	                     |						ВТ_Счета9101),
	                     |			&ВидСубконто,
	                     |			Организация В (&Организации)) КАК ХозрасчетныйОборотыДтКт
	                     |ГДЕ
	                     |	ЕстьNull(ХозрасчетныйОборотыДтКт.СуммаПРОборотДт,0) = 0
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОбороты.Счет,
	                     |	ХозрасчетныйОбороты.Субконто1,
	                     |	ХозрасчетныйОбороты.Субконто2,
	                     |	ХозрасчетныйОбороты.Субконто3,
	                     |	ХозрасчетныйОбороты.Подразделение,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ВЫБОР
	                     |		КОГДА ХозрасчетныйОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	                     |			ТОГДА ХозрасчетныйОбороты.СуммаПРКорОборотКт - ХозрасчетныйОбороты.СуммаПРКорОборотДт
	                     |		ИНАЧЕ ХозрасчетныйОбороты.СуммаПРКорОборотДт - ХозрасчетныйОбороты.СуммаПРКорОборотКт
	                     |	КОНЕЦ,
	                     |	ВЫБОР
						 |		КОГДА ХозрасчетныйОбороты.КорСчет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
						 |			ТОГДА 0
						 |		ИНАЧЕ (ХозрасчетныйОбороты.СуммаПРКорОборотКт - ХозрасчетныйОбороты.СуммаПРКорОборотДт) * &СтавкаНалога
						 |	КОНЕЦ,
						 |	ВЫБОР
						 |		КОГДА ХозрасчетныйОбороты.КорСчет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
						 |			ТОГДА (ХозрасчетныйОбороты.СуммаПРКорОборотДт - ХозрасчетныйОбороты.СуммаПРКорОборотКт) * &СтавкаНалога
						 |		ИНАЧЕ 0
						 |	КОНЕЦ,
						 |	0
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Период,
	                     |			Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
						 | 			И НЕ Счет В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90),
	                     |			&ВидСубконто,
	                     |			Организация В (&Организации),
	                     |			КорСчет В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета90)
	                     |				И НЕ КорСчет В
	                     |						(ВЫБРАТЬ
	                     |							ВТ_СчетаЕН.Счет
	                     |						ИЗ
	                     |							ВТ_СчетаЕН),
	                     |			) КАК ХозрасчетныйОбороты
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОборотыДтКт.СчетДт,";
						 
						 Если КоличествоОбъектовАналитики > 0 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоДт1,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 1 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоДт2,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 2 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоДт3,";
						 КонецЕсли;
						 
						ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
	                     |	ХозрасчетныйОборотыДтКт.ПодразделениеКт,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт * &СтавкаНалога, 
	                     |	0,	
						 |	0
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Период,
	                     |			СчетДт В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
	                     |				И СчетДт В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета9102.Счет
	                     |					ИЗ
	                     |						ВТ_Счета9102),
	                     |			&ВидСубконто,
	                     |			,
	                     |			,
	                     |			Организация В (&Организации)) КАК ХозрасчетныйОборотыДтКт
	                     |ГДЕ
	                     |	ЕстьNull(ХозрасчетныйОборотыДтКт.СуммаПРОборотКт,0) = 0
	                     |
	                     |ОБЪЕДИНИТЬ ВСЕ
	                     |
	                     |ВЫБРАТЬ
	                     |	ХозрасчетныйОборотыДтКт.СчетКт,";
						 
						 
						 Если КоличествоОбъектовАналитики > 0 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоКт1,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 1 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоКт2,";
						 КонецЕсли;
						 Если КоличествоОбъектовАналитики > 2 Тогда
							 ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
							 |	ХозрасчетныйОборотыДтКт.СубконтоКт3,";
						 КонецЕсли;
						 
						ТекстЗапросаШаблон = ТекстЗапросаШаблон + "
	                     |	ХозрасчетныйОборотыДтКт.ПодразделениеКт,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт,
	                     |	0,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт,
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотДт * &СтавкаНалога,
	                     |	0,
	                     |	0
	                     |ИЗ
	                     |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	                     |			&НачДата,
	                     |			&КонДата,
	                     |			Запись,
	                     |			СчетДт В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета9102.Счет
	                     |					ИЗ
	                     |						ВТ_Счета9102)
	                     |				И НЕ СчетДт В
	                     |						(ВЫБРАТЬ
	                     |							ВТ_СчетаЕН.Счет
	                     |						ИЗ
	                     |							ВТ_СчетаЕН),
	                     |			,
	                     |			СчетКт В
	                     |					(ВЫБРАТЬ
	                     |						ВТСчета.Счет
	                     |					ИЗ
	                     |						ВТСчета)
						 | 			И НЕ СчетКт В
	                     |					(ВЫБРАТЬ
	                     |						ВТ_Счета91И90.Счет
	                     |					ИЗ
	                     |						ВТ_Счета91И90),
	                     |			&ВидСубконто,
	                     |			Организация В (&Организации)) КАК ХозрасчетныйОборотыДтКт
	                     |ГДЕ
	                     |	ХозрасчетныйОборотыДтКт.СуммаПРОборотКт <> 0";

	Если ФлагОС_НМА = 1 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.Счет,", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОбороты.Счет,", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОборотыДтКт.СчетДт,", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОборотыДтКт.СчетКт,", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 3 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК Субконто3", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто3", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОбороты.Субконто3", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 2 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто2", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОбороты.Субконто2", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 1 Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОстаткиИОбороты.Субконто1", "");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, ",
			|	ХозрасчетныйОбороты.Субконто1", "");
	КонецЕсли;
		
	Если СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РасходыБудущихПериодов Тогда
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.СуммаВРОборотДт",
			"ВЫБОР КОГДА ВЫРАЗИТЬ(Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП = ЗНАЧЕНИЕ(Перечисление.ВидыРБП.УбыткиПрошлыхЛет) ТОГДА 0 ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаПРОборотДт КОНЕЦ");
		ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокДт",
			"ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокДт - ВЫБОР КОГДА ВЫРАЗИТЬ(Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидРБП = ЗНАЧЕНИЕ(Перечисление.ВидыРБП.УбыткиПрошлыхЛет) ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаПРОборотДт ИНАЧЕ 0 КОНЕЦ");
		КонецЕсли;
	
	ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "&МассивСчетов", "&МассивСчетов" + ТекИндекс);
	ТекстЗапросаШаблон = СтрЗаменить(ТекстЗапросаШаблон, "ВТСчета",       "ВТСчета"       + ТекИндекс);
	ТекстЗапроса       = СтрЗаменить(ТекстЗапросаШаблон, "&ВидСубконто",  "&ВидСубконто"  + ТекИндекс);
	
	СтрокаДляСверткиИзмерения = "" + ?(ФлагОС_НМА = 1, "", "Счет") + ?(ВедетсяУчетПоПодразделениям, ", Подразделение", "")
		+ ?(КоличествоОбъектовАналитики = 0, "", ", Субконто1") + ?(ФлагОбъектовСтроительства = 1, "", ?(КоличествоОбъектовАналитики >= 2, ", Субконто2",""))
		+ ?(ФлагНЗП = 1, "", ?(КоличествоОбъектовАналитики = 3, ", Субконто3",""));
	ТекИндекс = ТекИндекс + 1; 
	СоответствиеСтрокДляСвертки.Вставить(ТекИндекс, СтрокаДляСверткиИзмерения);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ОборотыПостоянныхРазницПоВидуАктивовОбязательствСформироватьПакет()

// Рассчитываются постоянные налоговые обязательства (активы)
//
// Параметры:
//		ТаблицаРеквизиты  - ТаблицаЗначений - значения реквизитов необходимых для расчета
//		СписокОрганизаций - СписокЗначений  - с Организациями, по которых необходимо произвести расчет
//		Отказ             - Булево          - признак, что при расчетах возникло исключение
//
Функция ПодготовитьТаблицуРасчетПостоянныхРазниц(ТаблицаРеквизиты, СписокОрганизаций, Отказ) Экспорт
	
	// Отложенный налоговый актив (обязательство) рассчитывается следующим образом:
	// Определяется сумма постоянных разниц, отраженных на счете 99.01.1, и
	// умножается на ставку налога на прибыль.
	
	РасчетНалога = ПолучитьТаблицаРасчетНалога();
	Параметры    = ПодготовитьПараметры(РасчетНалога, Неопределено, ТаблицаРеквизиты);
	Реквизиты    = Параметры.Реквизиты[0];
	ТаблицаРасчетПостоянныхРазниц = Параметры.ТаблицаРасчетНалога;
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачДата",      Реквизиты.НачДата);
	Запрос.УстановитьПараметр("КонДата",      Реквизиты.КонДата);
	Запрос.УстановитьПараметр("Организации",  СписокОрганизаций);
	Запрос.УстановитьПараметр("Счет",         МассивСчетов);
	Запрос.УстановитьПараметр("СтавкаНалога", Реквизиты.СтавкаНалогаНаПрибыль);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_КорСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПостоянноеНалоговоеОбязательство) КАК КоррСчет,
	|	СУММА(ХозрасчетныйОбороты.СуммаПРОборотДт * &СтавкаНалога) КАК СуммаДт,
	|	СУММА(ХозрасчетныйОбороты.СуммаПРОборотКт * &СтавкаНалога) КАК СуммаКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета.Счет
	|				ИЗ
	|					ВТ_Счета),
	|			,
	|			Организация В (&Организации),
	|			(НЕ КорСчет В
	|					(ВЫБРАТЬ
	|						ВТ_КорСчета.Счет
	|					ИЗ
	|						ВТ_КорСчета)),
	|			) КАК ХозрасчетныйОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.СуммаДт > 0 Тогда
			Запись = ТаблицаРасчетПостоянныхРазниц.Добавить();
			Запись.СуммаНалога        = Выборка.СуммаДт;
			Запись.СуммаЕНВД          = 0;
			Запись.КоррСчет           = Выборка.КоррСчет;
			Запись.ПоДебету           = "Д";
			Запись.СодержаниеПроводки = НСтр("ru = 'Постоянное налоговое обязательство'");
			ЕстьПНО = Истина;
		КонецЕсли;
		
		Если Выборка.СуммаДт < 0 Тогда
			Запись = ТаблицаРасчетПостоянныхРазниц.Добавить();
			Запись.СуммаНалога        = -Выборка.СуммаДт;
			Запись.СуммаЕНВД          = 0;
			Запись.КоррСчет           = Выборка.КоррСчет;
			Запись.ПоДебету           = "К";
			Запись.СодержаниеПроводки = НСтр("ru = 'Постоянный налоговый актив'");
		КонецЕсли;
		
		Если Выборка.СуммаКт > 0 Тогда
			Запись = ТаблицаРасчетПостоянныхРазниц.Добавить();
			Запись.СуммаНалога        = Выборка.СуммаКт;
			Запись.СуммаЕНВД          = 0;
			Запись.КоррСчет           = Выборка.КоррСчет;
			Запись.ПоДебету           = "К";
			Запись.СодержаниеПроводки = НСтр("ru = 'Постоянный налоговый актив'");
		КонецЕсли;
		
		Если Выборка.СуммаКт < 0 Тогда
			Запись = ТаблицаРасчетПостоянныхРазниц.Добавить();
			Запись.СуммаНалога        = -Выборка.СуммаКт;
			Запись.СуммаЕНВД          = 0;
			Запись.КоррСчет           = Выборка.КоррСчет;
			Запись.ПоДебету           = "Д";
			Запись.СодержаниеПроводки = НСтр("ru = 'Постоянное налоговое обязательство'");
		КонецЕсли;
		
	КонецЕсли;
	
	ОтридцательныеПНО = Выборка.СуммаДт < 0;
	ОтридцательныеПНА = Выборка.СуммаКт < 0;
	
	ТаблицыДопРегистров = ПодготовитьТаблицыРазницИСтоимостиПНО_ПНА(Реквизиты, СписокОрганизаций, ОтридцательныеПНО, ОтридцательныеПНА);
	
	Возврат Новый Структура("ТаблицаРасчетПостоянныхРазниц, ТаблицаРазницВОценкеАктивовИОбязательств, ТаблицаСтоимостиНалоговыхАктивовИОбязательств",
							ТаблицаРасчетПостоянныхРазниц,
							ТаблицыДопРегистров.ТаблицаРазницВОценкеАктивовИОбязательств,
							ТаблицыДопРегистров.ТаблицаСтоимостиНалоговыхАктивовИОбязательств);
	
КонецФункции // ПодготовитьТаблицуРасчетПостоянныхРазниц

// Рассчитываются отложенные налоговые обязательства и отложенные налоговые активы
//
// Параметры:
//		ТаблицаРеквизиты  - ТаблицаЗначений - значения реквизитов необходимых для расчета
//		СписокОрганизаций - СписокЗначений  - с Организациями, по которых необходимо произвести расчет
//		Отказ             - Булево          - признак, что при расчетах возникло исключение
//
Функция РассчитатьВременныеРазницы(ТаблицаРеквизиты, СписокОрганизаций, Отказ) Экспорт
	
	РасчетНалога = ПолучитьТаблицаРасчетНалога();
	Параметры    = ПодготовитьПараметры(РасчетНалога, Неопределено, ТаблицаРеквизиты);
	Реквизиты    = Параметры.Реквизиты[0];
	ТаблицаРасчетВременныхРазниц = Параметры.ТаблицаРасчетНалога;
	
	ДанныеРасчета = Новый Структура();// Эти данные вернем. Данные таблиц ниже могут быть заменены на другие, но состав структуры не изменится.
	ДанныеРасчета.Вставить("ТаблицаРасчетВременныхРазниц",                  ТаблицаРасчетВременныхРазниц);
	ДанныеРасчета.Вставить("ТаблицаРазницВОценкеАктивовИОбязательств",      Новый ТаблицаЗначений);
	ДанныеРасчета.Вставить("ТаблицаСтоимостиНалоговыхАктивовИОбязательств", Новый ТаблицаЗначений);
	
	// Формируется таблица в которой задано соответствие видов 
	// активов (обязательств) счетам налогового учета.
	ТаблицаВидовАктивовИОбязательств = НалоговыйУчет.ПолучитьТаблицуВидовАктивовИОбязательств();
	
	// 1. Рассчитываем отложенные налоговые обязательства и активы и отражаем их.
	
	инд                 = 3; // начинаем не с нуля, чтобы учесть ВТ по счету ЕН
	ПакетОНО_ОНА        = Новый Запрос;
	ТекстЗапросаОНО_ОНА = "";
	СоответствиеСтрокДляСвертки                     = Новый Соответствие;
	СоответствиеДляТаблицыВидовАктивовИОбязательств = Новый Соответствие;
	СуммаПересчетаУбытков = 0;
	
	ПакетОНО_ОНА.УстановитьПараметр("НачДата",     Реквизиты.НачДата);
	ПакетОНО_ОНА.УстановитьПараметр("КонДата",     Реквизиты.КонДата);
	ПакетОНО_ОНА.УстановитьПараметр("Организации", СписокОрганизаций);
	ПакетОНО_ОНА.УстановитьПараметр("СтавкаНалога", 0);
	ПакетОНО_ОНА.УстановитьПараметр("СчетаУчетаАктивовИОбязательств",  Новый Массив);
	
	МассивСчетовПродажи = Новый Массив;
	МассивСчетовПродажи.Добавить(ПланыСчетов.Хозрасчетный.Продажи);
	МассивСчетовПродажи.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	
	МассивСчетов90_91   = Новый Массив;
	МассивСчетов90_91.Добавить(ПланыСчетов.Хозрасчетный.Продажи);
	МассивСчетов90_91.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
	
	ПакетОНО_ОНА.УстановитьПараметр("Счет90", ПланыСчетов.Хозрасчетный.Продажи);
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД);
	
	ПакетОНО_ОНА.УстановитьПараметр("СчетаЕН", СчетаЗатрат);
	
	ПакетОНО_ОНА.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета90БезЕН
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет90) И
	| НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетаЕН)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета90ИЕН
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет90) ИЛИ
	| 	Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетаЕН)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Для каждого СтрокаВидАктиваОбязательства Из ТаблицаВидовАктивовИОбязательств Цикл
		
		Если СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.УбытокТекущегоПериода Тогда
			
			РассчитатьОНАПоУбыткамТекущегоПериода(
				ТаблицаРасчетВременныхРазниц, 
				СтрокаВидАктиваОбязательства, 
				Реквизиты, 
				СписокОрганизаций,
				СуммаПересчетаУбытков);
		Иначе
			ТекстЗапросаОНО_ОНА = ОборотыВременныхРазницПоВидуАктивовОбязательствСформироватьПакет(
				СтрокаВидАктиваОбязательства, 
				инд, 
				СоответствиеСтрокДляСвертки);
			
			ТекИндекс           = инд - 1;
			ПакетОНО_ОНА.Текст  = ПакетОНО_ОНА.Текст + ?(ТекИндекс = 3, "", ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()) + ТекстЗапросаОНО_ОНА;
			
			Если ТекИндекс = 3 Тогда
				ПакетОНО_ОНА.Текст = НалоговыйУчет.ДобавитьТекстЗапросаСчетаЕНВД(ПакетОНО_ОНА);
			КонецЕсли;
			
			ПакетОНО_ОНА.УстановитьПараметр("МассивСчетов" + ТекИндекс, СтрокаВидАктиваОбязательства.Счета);
			ПакетОНО_ОНА.УстановитьПараметр("ВидСубконто"  + ТекИндекс, СтрокаВидАктиваОбязательства.Субконто);
			
			СоответствиеДляТаблицыВидовАктивовИОбязательств.Вставить(инд, ТаблицаВидовАктивовИОбязательств.Индекс(СтрокаВидАктиваОбязательства));
			инд = инд + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	ДанныеРасчета.Вставить("ТаблицаРасчетВременныхРазниц", ТаблицаРасчетВременныхРазниц); // Может измениться в РассчитатьОНАПоУбыткамТекущегоПериода()
	ДанныеРасчета.Вставить("СуммаПересчетаУбытков",       СуммаПересчетаУбытков);	
	
	Если ПакетОНО_ОНА.Текст = "" Тогда
		Возврат ДанныеРасчета;
	КонецЕсли;
	
	// 2. Определяем данные распределяемых расходов
	
	ТаблицаВидовАктивовИОбязательствДляРаспределения = ТаблицаВидовАктивовИОбязательств.СкопироватьКолонки();
	
	МассивТаблицРезультатов = Новый Массив;
	Результат = ПакетОНО_ОНА.ВыполнитьПакет();
	Если ТипЗнч(Результат) <> Тип("Массив") Или Результат.Количество() = 0 Тогда
		Возврат ДанныеРасчета;
	Иначе
		Для инд = 0 По Результат.ВГраница() Цикл
			Если СоответствиеСтрокДляСвертки.Получить(инд) = Неопределено Тогда // если нет в Соответствии - значит, это временная таблица
				Продолжить;
			КонецЕсли;
			
			ТаблицаРезультатов = Новый ТаблицаЗначений;
			ТаблицаРезультатов = Результат[инд].Выгрузить();
			
			Если ТаблицаРезультатов.Количество() > 0 Тогда
				ТаблицаРезультатов.Свернуть(СоответствиеСтрокДляСвертки[инд],
					"НачОстатокКт, КонОстатокКт, НачОстатокДт, КонОстатокДт, ОборотДт, ОборотКт, ОборотЕН,
					|Признаны, ПеренесеныНаДругиеОбъекты, ПовлиялиНаРазницывОценкеРасходовННП, ПовлиялиНаРазницывОценкеРасходовНеННП");
					
					МассивТаблицРезультатов.Добавить(ТаблицаРезультатов);
				
				СтрокаТаблицы = ТаблицаВидовАктивовИОбязательствДляРаспределения.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ТаблицаВидовАктивовИОбязательств[СоответствиеДляТаблицыВидовАктивовИОбязательств.Получить(инд)]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗапросРаспределяемыхРасходовПакет = ПолучитьТаблицуРаспределяемыхРасходов(
		Реквизиты, 
		СписокОрганизаций, 
		ТаблицаВидовАктивовИОбязательствДляРаспределения);
	
	Если ЗапросРаспределяемыхРасходовПакет.Текст = "" Тогда
		Возврат ДанныеРасчета;
	КонецЕсли;
	
	инд = 2; // учтем ВТ по счетам
	РезультатДляРаспределения = ЗапросРаспределяемыхРасходовПакет.ВыполнитьПакет();
	
	Для каждого СтрокаВидАктиваОбязательства Из ТаблицаВидовАктивовИОбязательствДляРаспределения Цикл
		
		ТаблицаРаспределяемыхРасходов = РезультатДляРаспределения[инд].Выгрузить();
		
		ОборотыВременныхРазниц = ОборотыВременныхРазницПоВидуАктивовОбязательствРасчет(
			Реквизиты,
			МассивТаблицРезультатов[ТаблицаВидовАктивовИОбязательствДляРаспределения.Индекс(СтрокаВидАктиваОбязательства)], // т.к. таблица и массив заполнялись параллельно
			ТаблицаРаспределяемыхРасходов, СтрокаВидАктиваОбязательства.Субконто.Количество());
		
		РассчитатьОНО_ОНА(
			ТаблицаРасчетВременныхРазниц, 
			СтрокаВидАктиваОбязательства, 
			Реквизиты, 
			ОборотыВременныхРазниц);
		
		инд = инд + 2; // учтем ВТ по счетам
		
	КонецЦикла;
	
	ДанныеРасчета.Вставить("ТаблицаРасчетВременныхРазниц", ТаблицаРасчетВременныхРазниц); // Может измениться в РассчитатьОНО_ОНА()
	
	ТаблицыДопРегистров = ПодготовитьТаблицуРазницВОценкеАктивов(
		Реквизиты,
		ТаблицаВидовАктивовИОбязательствДляРаспределения,
		МассивТаблицРезультатов,
		Перечисления.ВидыРазницПБУ18.ВР);
	ДанныеРасчета.Вставить("ТаблицаРазницВОценкеАктивовИОбязательств", ТаблицыДопРегистров.ТаблицаРазницВОценкеАктивовИОбязательств);
	
	ТаблицаСтоимостиНалоговыхАктивовИОбязательств = ПодготовитьТаблицуСтоимостиНалоговыхАктивовИОбязательств(
		Реквизиты,
		ТаблицаРасчетВременныхРазниц,
		Перечисления.ВидыРазницПБУ18.ВР);
	ДанныеРасчета.Вставить("ТаблицаСтоимостиНалоговыхАктивовИОбязательств", ТаблицаСтоимостиНалоговыхАктивовИОбязательств);
	
	Возврат ДанныеРасчета;
	
КонецФункции // РассчитатьВременныеРазницы

Функция ПолучитьТаблицуРаспределяемыхРасходов(Реквизиты, СписокОрганизаций, ТаблицаВидовАктивовИОбязательств)
	
	ЗапросР = Новый Запрос;                                           
	ЗапросР.УстановитьПараметр("НачДата",               Реквизиты.НачДата);
	ЗапросР.УстановитьПараметр("КонДата",               Реквизиты.КонДата);
	ЗапросР.УстановитьПараметр("Организации",           СписокОрганизаций);
	
	ТекстЗапросаСчетаПрочихРасходов =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаПрочихРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";
	
	ТекстЗапросаШаблон =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_КорСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА ЕСТЬNULL(ХозрасчетныйОбороты.СуммаВРОборотДт, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЗатрат,
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ЕСТЬNULL(ХозрасчетныйОбороты.СуммаВРОборотДт, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЗатратЕНВД,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			,
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			Организация В (&Организации),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_КорСчета.Счет
	|				ИЗ
	|					ВТ_КорСчета),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСубконто1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА ЕСТЬNULL(ХозрасчетныйОбороты.СуммаВРОборотДт, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ЕСТЬNULL(ХозрасчетныйОбороты.СуммаВРОборотДт, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	ХозрасчетныйОбороты.КорСубконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаПрочихРасходов.Счет
	|				ИЗ
	|					ВТ_СчетаПрочихРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&Организации),
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_КорСчета.Счет
	|				ИЗ
	|					ВТ_КорСчета),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСубконто1";
	
	инд         = 0;
	ТекстПакета = "";
	Разделитель = "";
	Для каждого СтрокаВидАктиваОбязательства Из ТаблицаВидовАктивовИОбязательств Цикл
		ЗапросР.УстановитьПараметр("КорСчет" + инд, СтрокаВидАктиваОбязательства.Счета);
		ТекстЗапроса  = СтрЗаменить(ТекстЗапросаШаблон, "(&КорСчет",   "(&КорСчет"   + инд);
		ТекстЗапроса  = СтрЗаменить(ТекстЗапроса,       "ВТ_КорСчета", "ВТ_КорСчета" + инд);
		ТекстПакета   = ТекстПакета + Разделитель + ТекстЗапроса;
		
		Разделитель   = ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		инд           = инд + 1;
	КонецЦикла;
	
	Если инд > 0 Тогда
		ЗапросР.Текст = ТекстЗапросаСчетаПрочихРасходов + Разделитель + ТекстПакета;
	КонецЕсли;
	
	Возврат ЗапросР;
	
КонецФункции // ПолучитьТаблицуРаспределяемыхРасходов()

// Рассчитываются отложенные налоговые обязательства и
// отложенные налоговые активы по конкретному виду активов
// (обязательств).
//
// Параметры:
//		СтрокаВидАктиваОбязательства - строка таблицы, в которой задано соответствие
//			вида актива (обязательства) и счетов налогового учета, на которых
//			отражаются разницы по этому виду активов.
//
Процедура РассчитатьОНО_ОНА(ТаблицаРасчетВременныхРазниц, СтрокаВидАктиваОбязательства, Реквизиты, ОборотыВременныхРазниц)
	
	// Порядок расчета:
	// 1. Определяется остаток налогооблагаемых и вычитаемых разниц по виду активов в целом.
	// 2. Исходя из остатка разниц рассчитывается остаток отложенных налоговых активов
	//    и обязательств, который должен быть отражен на счетах 09 и 77 на конец месяца.
	// 3. Определяется сумма отложенных налоговых активов и обязательств, которая отражена
	//    на счетах 09 и 77 на конец месяца.
	// 4. Счета 09 и 77 корректируются на сумму разниц того что отражено на счете и того,
	//    что должно быть по результатам расчета.
	
	// Получить временные разницы, отраженные на плане счетов
	// по данному виду ОНА (ОНО), распределив их на вычитаемые и налогооблагаемые разницы.
	
	Если  ОборотыВременныхРазниц.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДт09 = Окр(ОборотыВременныхРазниц.Итог("СуммаДт09") * Реквизиты.СтавкаНалогаНаПрибыль, 2);
	СуммаКт09 = Окр(ОборотыВременныхРазниц.ИТог("СуммаКт09") * Реквизиты.СтавкаНалогаНаПрибыль, 2);
	СуммаДт77 = Окр(ОборотыВременныхРазниц.Итог("СуммаДт77") * Реквизиты.СтавкаНалогаНаПрибыль, 2);
	СуммаКт77 = Окр(ОборотыВременныхРазниц.ИТог("СуммаКт77") * Реквизиты.СтавкаНалогаНаПрибыль, 2);
	СуммаЕНВД = Окр(ОборотыВременныхРазниц.ИТог("СуммаЕНВД") * Реквизиты.СтавкаНалогаНаПрибыль, 2);
	
	ОтражениеОНАиОНО(ТаблицаРасчетВременныхРазниц,
		СтрокаВидАктиваОбязательства.ВидАктивовОбязательств, 
		Новый Структура("СуммаДт09, СуммаКт09, СуммаДт77, СуммаКт77, СуммаЕНВД",
			СуммаДт09, СуммаКт09, СуммаДт77, СуммаКт77, СуммаЕНВД));
	
КонецПроцедуры

// Рассчитывается отложенные налоговый актив по убыткам текущего
// периода и отражается на счете 09.
//
Процедура РассчитатьОНАПоУбыткамТекущегоПериода(ТаблицаРасчетВременныхРазниц, СтрокаВидАктиваОбязательства, Реквизиты, СписокОрганизаций, СуммаПересчетаУбытков)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачДата",      Реквизиты.НачДата);
	Запрос.УстановитьПараметр("НачалоГода",   Реквизиты.НачалоГода);
	Запрос.УстановитьПараметр("КонДата",      Реквизиты.КонДата);
	Запрос.УстановитьПараметр("КонДатаПред",  ?(Месяц(Реквизиты.НачДата) = 1, Реквизиты.КонДата, НачалоМесяца(Реквизиты.НачДата)-1));
	Запрос.УстановитьПараметр("КонГраница",   Новый Граница(Реквизиты.КонДата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организации",  СписокОрганизаций);
	Запрос.УстановитьПараметр("СтавкаНалога", Реквизиты.СтавкаНалогаНаПрибыль);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.СуммаНУОборот > 0
	|			ТОГДА ХозрасчетныйОбороты.СуммаНУОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УбытокНУ,
	|	0 КАК СуммаОстаток09,
	|	0 КАК УбытокНУПрошлый
	|ПОМЕСТИТЬ ВТ_Убытки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонГраница,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки),
	|			Организация В (&Организации)
	|				И Субконто1 В (ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.ПрибыльУбытокОтПродаж), ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.СальдоПрочихДоходовИРасходов)),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ХозрасчетныйОстатки.СуммаОстатокДт,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонГраница,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы),
	|			,
	|			Организация В (&Организации)
	|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовИОбязательств.УбытокТекущегоПериода)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачДата,
	|			&КонДата,
	|			Месяц,
	|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы),
	|			,
	|			СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы),
	|			,
	|			Организация В (&Организации)
	|				И СубконтоДт1 = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовИОбязательств.РасходыБудущихПериодов)
	|				И СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовИОбязательств.УбытокТекущегоПериода)) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.СуммаНУОборот > 0
	|			ТОГДА ХозрасчетныйОбороты.СуммаНУОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонДатаПред,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки),
	|			Организация В (&Организации)
	|				И Субконто1 В (ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.ПрибыльУбытокОтПродаж), ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.СальдоПрочихДоходовИРасходов)),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_Убытки.УбытокНУ * &СтавкаНалога - ВТ_Убытки.СуммаОстаток09) КАК Сумма,
	|	СУММА(ВТ_Убытки.УбытокНУПрошлый * &СтавкаНалога - ВТ_Убытки.СуммаОстаток09) КАК СуммаПересчетаУбытков
	|ИЗ
	|	ВТ_Убытки КАК ВТ_Убытки";
	
	Выборка   = Запрос.Выполнить().Выбрать();
	
	СуммаДт77 = 0;
	СуммаКт77 = 0;
	СуммаДт09 = 0;
	СуммаКт09 = 0;
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Сумма > 0 Тогда
			СуммаДт09 = Выборка.Сумма;
		Иначе
			СуммаКт09 = -Выборка.Сумма + Выборка.СуммаПересчетаУбытков;
			СуммаПересчетаУбытков = Выборка.СуммаПересчетаУбытков;
		КонецЕсли;
		
		Если Выборка.Сумма <> 0 Тогда
			ОтражениеОНАиОНО(ТаблицаРасчетВременныхРазниц,
				СтрокаВидАктиваОбязательства.ВидАктивовОбязательств, 
				Новый Структура("СуммаДт09, СуммаКт09, СуммаДт77, СуммаКт77, СуммаЕНВД",
					СуммаДт09, СуммаКт09, СуммаДт77, СуммаКт77, 0));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // РассчитатьОНАПоУбыткамТекущегоПериода

// Упорядочиваются данный для передачи их в процедуру,
// которая формирует записи по счету 68.4.
//
Процедура ОтражениеОНАиОНО(ТаблицаРасчетВременныхРазниц, ВидАктивовОбязательств, ВременныеРазницы)
	
	Счет09    = ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы;
	Счет77    = ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеОбязательства;
	СуммаДт09 = ВременныеРазницы.СуммаДт09;
	СуммаКт09 = ВременныеРазницы.СуммаКт09;
	СуммаДт77 = ВременныеРазницы.СуммаДт77;
	СуммаКт77 = ВременныеРазницы.СуммаКт77;
	СуммаЕНВД = ВременныеРазницы.СуммаЕНВД;
	
	// Образование отложенного налогового обязательства
	Если СуммаДт09 <> 0 Тогда
		Запись = ТаблицаРасчетВременныхРазниц.Добавить();
		Запись.КоррСчет           = Счет09;
		Запись.СуммаНалога        = СуммаДт09;
		Запись.СуммаЕНВД          = СуммаЕНВД;
		Запись.Субконто           = ВидАктивовОбязательств;
		Запись.СодержаниеПроводки = НСтр("ru = 'Признание отложенного налогового актива'");
		Запись.ПоДебету           = "Д";
	КонецЕсли;
	
	// Погашение отложенного налогового обязательства
	Если СуммаКт09 <> 0 Тогда
		Запись = ТаблицаРасчетВременныхРазниц.Добавить();
		Запись.КоррСчет           = Счет09;
		Запись.СуммаНалога        = СуммаКт09;
		Запись.СуммаЕНВД          = СуммаЕНВД;
		Запись.Субконто           = ВидАктивовОбязательств;
		Запись.ПоДебету           = "К";
		Запись.СодержаниеПроводки = НСтр("ru = 'Погашение отложенного налогового актива'");
	КонецЕсли;
	
	// Образование отложенного налогового обязательства
	Если СуммаКт77 <> 0 Тогда
		Запись = ТаблицаРасчетВременныхРазниц.Добавить();
		Запись.КоррСчет           = Счет77;
		Запись.СуммаНалога        = СуммаКт77;
		Запись.СуммаЕНВД          = СуммаЕНВД;
		Запись.Субконто           = ВидАктивовОбязательств;
		Запись.ПоДебету           = "К";
		Запись.СодержаниеПроводки = НСтр("ru = 'Признание отложенного налогового обязательства'");
	КонецЕсли;
	
	// Погашение отложенного налогового обязательства
	Если СуммаДт77 <> 0 Тогда
		Запись = ТаблицаРасчетВременныхРазниц.Добавить();
		Запись.КоррСчет           = Счет77;
		Запись.СуммаНалога        = СуммаДт77;
		Запись.СуммаЕНВД          = СуммаЕНВД;
		Запись.Субконто           = ВидАктивовОбязательств;
		Запись.ПоДебету           = "Д";
		Запись.СодержаниеПроводки = НСтр("ru = 'Погашение отложенного налогового обязательства'");
	КонецЕсли;
	
КонецПроцедуры // ОтражениеОНАиОНО

Функция ПолучитьТаблицаРасчетНалога()
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ТаблицаРасчетНалога = Новый ТаблицаЗначений;
	ТаблицаРасчетНалога.Колонки.Добавить("СуммаНалога",        ОписаниеТипаЧисла15_2);
	ТаблицаРасчетНалога.Колонки.Добавить("СуммаЕНВД",          ОписаниеТипаЧисла15_2);
	ТаблицаРасчетНалога.Колонки.Добавить("КоррСчет",           Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаРасчетНалога.Колонки.Добавить("Субконто");
	ТаблицаРасчетНалога.Колонки.Добавить("Субконто68_4");
	ТаблицаРасчетНалога.Колонки.Добавить("Субконто68_4_2");
	ТаблицаРасчетНалога.Колонки.Добавить("ПоДебету",           ОбщегоНазначения.ОписаниеТипаСтрока(1));
	ТаблицаРасчетНалога.Колонки.Добавить("СодержаниеПроводки", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	Возврат ТаблицаРасчетНалога;
	
КонецФункции

// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

Процедура СформироватьДвиженияРасчетНалогаНаПрибыль(ТаблицаРасчетНалога, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметры(ТаблицаРасчетНалога, Неопределено, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Счет99 = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиЕНВД;
	
	Для каждого Запись Из Параметры.ТаблицаРасчетНалога Цикл
		
		Если Запись.Субконто68_4 <> Неопределено Тогда
			Счет68_04   = ПланыСчетов.Хозрасчетный.РасчетыСБюджетом;
		Иначе
			Счет68_04   = ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль;
		КонецЕсли;
		
		Счет68_04Дебет  = Счет68_04;
		Счет68_04Кредит = Счет68_04;
		
		СуммаНалога     = Запись.СуммаНалога;
		СуммаЕНВД       = Запись.СуммаЕНВД;
		
		Если СуммаЕНВД <> 0 Тогда
			Если ОдногоЗнака(СуммаНалога, СуммаЕНВД) Тогда
				Если БольшеПоМодулюИлиРавно(СуммаНалога, СуммаЕНВД) Тогда
					СуммаНалога = СуммаНалога - СуммаЕНВД;
					Сумма99     = СуммаЕНВД;
					СуммаЕНВД   = 0;
				Иначе
					Сумма99     = СуммаНалога;
					СуммаНалога = 0;
					СуммаЕНВД   = СуммаЕНВД - Сумма99;
				КонецЕсли;
			Иначе
				Если БольшеПоМодулюИлиРавно(СуммаНалога, СуммаЕНВД) Тогда
					СуммаНалога = СуммаНалога + СуммаЕНВД;
					Сумма99     = -СуммаЕНВД;
					СуммаЕНВД   = 0;
				Иначе
					Сумма99     = -СуммаНалога;
					СуммаНалога = 0;
					СуммаЕНВД   = СуммаЕНВД + Сумма99;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Сумма99 = 0;
		КонецЕсли;
		
		Если СуммаНалога <> 0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Сумма       = СуммаНалога;
			Проводка.Содержание  = Запись.СодержаниеПроводки;
			
			Если Запись.ПоДебету = "Д" Тогда
				Проводка.СчетДт  = Запись.КоррСчет;
				Проводка.СчетКт  = Счет68_04Кредит;
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетДт, Проводка.СубконтоДт, 1, Запись.Субконто);
				
				Если Запись.Субконто68_4 <> Неопределено Тогда
					БухгалтерскийУчет.УстановитьСубконто(
						Проводка.СчетКт, Проводка.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог);
					БухгалтерскийУчет.УстановитьСубконто(
						Проводка.СчетКт, Проводка.СубконтоКт, 2, Запись.Субконто68_4);
					БухгалтерскийУчет.УстановитьСубконто(
						Проводка.СчетКт, Проводка.СубконтоКт, 3, Запись.Субконто68_4_2);
				КонецЕсли;
			Иначе
				Проводка.СчетДт = Счет68_04Дебет;
				Проводка.СчетКт = Запись.КоррСчет;
				
				Если Запись.Субконто68_4 <> Неопределено Тогда
					БухгалтерскийУчет.УстановитьСубконто(
						Проводка.СчетКт, Проводка.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог);
					БухгалтерскийУчет.УстановитьСубконто(
						Проводка.Счетдт, Проводка.СубконтоДт, 2, Запись.Субконто68_4);
					БухгалтерскийУчет.УстановитьСубконто(
						Проводка.СчетДт, Проводка.СубконтоДт, 3, Запись.Субконто68_4_2);
				КонецЕсли;
				
				БухгалтерскийУчет.УстановитьСубконто(
				Проводка.СчетКт, Проводка.СубконтоКт, 1, Запись.Субконто);
			КонецЕсли
		КонецЕсли;
		
		Если Сумма99 <> 0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Сумма       = Сумма99;
			Проводка.Содержание  = Запись.СодержаниеПроводки;
			
			Если Запись.ПоДебету = "Д" Тогда
				Проводка.СчетДт  = Запись.КоррСчет;
				Проводка.СчетКт  = Счет99;
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетДт, Проводка.СубконтоДт, 1, Запись.Субконто);
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетДт, Проводка.СубконтоДт, 3, Запись.Субконто68_4_2);
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетКт, Проводка.СубконтоКт, 1, Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);
			Иначе
				Проводка.СчетДт = Счет99;
				Проводка.СчетКт = Запись.КоррСчет;
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетКт, Проводка.СубконтоКт, 1, Запись.Субконто);
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетДт, Проводка.СубконтоДт, 1, Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);
				БухгалтерскийУчет.УстановитьСубконто(
					Проводка.СчетКт, Проводка.СубконтоКт, 3, Запись.Субконто68_4_2);
			КонецЕсли
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры // СформироватьДвиженияРасчетНалогаНаПрибыль

Функция ОдногоЗнака(Число1, Число2)
	
	Возврат (Число1 * Число2 >= 0);
	
КонецФункции

Функция БольшеПоМодулюИлиРавно(Число1, Число2)
	
	МодульЧисло1 = ?(Число1 > 0, Число1, -Число1);
	МодульЧисло2 = ?(Число2 > 0, Число2, -Число2);
	
	Возврат (МодульЧисло1 - МодульЧисло2 >= 0);
	
КонецФункции
