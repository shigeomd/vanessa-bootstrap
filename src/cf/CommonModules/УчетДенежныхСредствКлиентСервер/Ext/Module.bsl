// Возвращает признак расчетов с контрагентами
//
Функция ЕстьРасчетыСКонтрагентами(ВидОперации = Неопределено) Экспорт
	
	ЕстьРасчеты =
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ОплатаПоставщику")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратПокупателю")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ВозвратОтПоставщика")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПриобретениеИностраннойВалюты")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажиИностраннойВалюты");
	
	Возврат ЕстьРасчеты;
	
КонецФункции

// Возвращает признак расчетов с контрагентами
//
Функция ЕстьРасчетыПоКредитам(ВидОперации = Неопределено) Экспорт
	
	ЕстьРасчеты =
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.РасчетыПоКредитамИЗаймам")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.РасчетыПоКредитамИЗаймам")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймам")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам");
	
	Возврат ЕстьРасчеты;
	
КонецФункции

// Возвращает признак расчетов с контрагентами
//
Функция ЕстьРасчетыПоПлатежнымКартам(ВидОперации = Неопределено) Экспорт
	
	ЕстьРасчеты = ВидОперации
		= ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажПоПлатежнымКартамИБанковскимКредитам");
	
	Возврат ЕстьРасчеты;
	
КонецФункции

// Возвращает вид договора с контрагентом по виду операции
//
Функция ОпределитьВидДоговораСКонтрагентом(ВидОперации = Неопределено) Экспорт
	
	СПоставщиком = Новый Массив;
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку"));
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку"));
	
	СПокупателем = Новый Массив;
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку"));
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку"));
	
	Прочее = Новый Массив;
	Прочее.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"));
	
	Если ЗначениеЗаполнено(ВидОперации) тогда
		
		//Определение вида операции
		
		ВидДоговораПоВидуОпераций = Новый Соответствие();
		
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ОплатаПоставщику"), СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.РасчетыПоКредитамИЗаймам"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратПокупателю"), СПокупателем);
		
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя"), СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.РасчетыПоКредитамИЗаймам"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ВозвратОтПоставщика"), СПоставщиком);
		
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику"), СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймам"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю"), СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами"), Прочее);
		
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя"), СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика"), СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПриобретениеИностраннойВалюты"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажиИностраннойВалюты"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажПоПлатежнымКартамИБанковскимКредитам"), Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами"), Прочее);
		
		ВидДоговора = ВидДоговораПоВидуОпераций[ВидОперации];
		
		Если НЕ ВидДоговора = Неопределено Тогда
			Возврат ВидДоговора;
		Иначе
			Возврат Новый Массив;
			
		КонецЕсли;
		
	Иначе
		
		Возврат Новый Массив;
		
	Конецесли;
	
КонецФункции

// Заполняет в переданном объекте реквизиты платежа в бюджет по умолчанию,
// в соответствии с выбранным пользователем видом перечисления в бюджет.
// Оставлена для совместимости: для тех случаев, где ВидПеречисления задается пользователем явно.
//
// Параметры:
//  Объект - ДокументОбъект.ПлатежноеПоручение, произвольная коллекция - объект, который должен быть заполнен.
//           О составе свойств Объекта см. функцию ПлатежиВБюджетКлиентСерверПереопределяемый.РеквизитыДокумента_ПлатежноеПоручение
//  Контекст - Структура - см. ПлатежиВБюджетКлиентСервер.НовыйКонтекст
//
Процедура ЗаполнитьРеквизитыПлатежаВБюджетПоВидуПеречисления(Объект, Контекст) Экспорт
	
	РеквизитыДокумента = ПлатежиВБюджетКлиентСерверПереопределяемый.РеквизитыДокумента_ПлатежноеПоручение();
	
	ЗначенияРеквизитовОбъекта = Новый Структура;
	Для каждого РеквизитДокумента Из РеквизитыДокумента Цикл
		ЗначенияРеквизитовОбъекта.Вставить(РеквизитДокумента.Значение);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовОбъекта, Объект); // Нет уверенности, что в объекте будут все нужные реквизиты
	
	РеквизитыПлатежаВБюджет = ПлатежиВБюджетКлиентСервер.НовыйРеквизитыПлатежаВБюджет();
	Для каждого РеквизитДокумента Из РеквизитыДокумента Цикл
		РеквизитыПлатежаВБюджет[РеквизитДокумента.Ключ] = ЗначенияРеквизитовОбъекта[РеквизитДокумента.Значение];
	КонецЦикла;
	
	Изменения = ПлатежиВБюджетКлиентСервер.ИсправитьЗначенияРеквизитов(
		"ВидПеречисления",
		РеквизитыПлатежаВБюджет,
		Контекст,
		Истина);
	
	ЗначенияЗаполнения = Новый Структура;
	Для Каждого Изменение Из Изменения Цикл
		ИмяРеквизитаДокумента = РеквизитыДокумента[Изменение.Ключ];
		ЗначенияЗаполнения.Вставить(ИмяРеквизитаДокумента, Изменение.Значение);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияЗаполнения);
	
КонецПроцедуры

Функция ВидОперацииДокументаПеречисленияВБюджет(КБК) Экспорт
	
	Если ПлатежиВБюджетКлиентСервер.ЭтоНалоговыеДоходы(КБК) Тогда
		Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога");
	Иначе
		Возврат ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами");
	КонецЕсли;
	
КонецФункции

Функция ПеречислениеВБюджет(ВидОперации, Контрагент) Экспорт
	
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога") Тогда
		Возврат Истина;
	Иначе
		Если РасчетыСФизическимиЛицами(ВидОперации)
			ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю")
			ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет")
			ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП") Тогда
			
			Возврат Ложь;
			
		ИначеЕсли ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Контрагент) Тогда
			Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
				Возврат Ложь;
			КонецЕсли;
			
			РеквизитыКонтрагента = ОбщегоНазначенияБПВызовСервера.ЗначенияРеквизитовОбъекта(Контрагент,
				"ГосударственныйОрган, ВидГосударственногоОргана");
			
			Возврат РеквизитыКонтрагента.ГосударственныйОрган
				И РеквизитыКонтрагента.ВидГосударственногоОргана <> ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.Прочий");
			
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция РасчетыСФизическимиЛицами(ВидОперации) Экспорт
	
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВыдачаЗаймаРаботнику")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеДепонентов")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗаработнойПлатыРаботнику")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеПодотчетномуЛицу") 
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ЛичныеСредстваПредпринимателя") Тогда
		
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция БалансовыйСчет(НомерСчета) Экспорт
	
	Возврат Лев(НомерСчета, 5);
	
КонецФункции

Функция ПолучитьСписокОчередностьПлатежа(Дата) Экспорт
	
	Список = Новый СписокЗначений;
	
	Если Дата < УчетДенежныхСредствКлиентСервер.НачалоДействияНовыхПравилОчередностиПлатежа() Тогда
		Список.Добавить(1, НСтр("ru = '1 - Платежи по исполнительным документам: алименты и др.'"));
		Список.Добавить(2, НСтр("ru = '2 - Платежи по исполнительным документам: оплата труда и др.'"));
		Список.Добавить(3, НСтр("ru = '3 - Оплата труда и взносы в ПФР, ФОМС, ФСС'"));
		Список.Добавить(4, НСтр("ru = '4 - Налоги и взносы прочие'"));
		Список.Добавить(5, НСтр("ru = '5 - Платежи по исполнительным документам прочие'"));
		Список.Добавить(6, НСтр("ru = '6 - Прочие платежи'"));
	Иначе
		Список.Добавить(1, НСтр("ru = '1 - Платежи по исполнительным документам: алименты и др.'"));
		Список.Добавить(2, НСтр("ru = '2 - Платежи по исполнительным документам: оплата труда и др.'"));
		Список.Добавить(3, НСтр("ru = '3 - Оплата труда, платежи по поручениям контролирующих органов'"));
		Список.Добавить(4, НСтр("ru = '4 - Платежи по исполнительным документам прочие'"));
		Список.Добавить(5, НСтр("ru = '5 - Прочие платежи (в т.ч. налоги и взносы)'"));
	КонецЕсли;
	
	Возврат Список;
	
КонецФункции

Функция НачалоДействияНовыхПравилОчередностиПлатежа() Экспорт
	
	// 345-ФЗ от 02.12.2013
	
	Возврат '20131214';
	
КонецФункции

Функция ОчередностьПлатежаПоУмолчаниюДо345ФЗ() Экспорт
	
	Возврат 6;
	
КонецФункции

Функция ОчередностьПлатежаПоУмолчанию() Экспорт
	
	Возврат 5;
	
КонецФункции

Функция ОчередностьПлатежаНалогиВзносы() Экспорт
	
	Возврат 5;
	
КонецФункции

Функция ОчередностьПлатежаПоИсполнительномуЛисту() Экспорт
	
	Возврат 4;
	
КонецФункции

Функция ОчередностьПлатежаОплатаТруда() Экспорт
	
	Возврат 3;
	
КонецФункции
