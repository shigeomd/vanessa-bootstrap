
Функция ПолучитьДатуПротокола(СвойстваПротокола)
	
	Если СвойстваПротокола = Неопределено Тогда
		Возврат '00010101';
	КонецЕсли;
	
	Если СвойстваПротокола.Дата = Неопределено Тогда
		Возврат '00010101';
	КонецЕсли;
	
	Возврат СвойстваПротокола.Дата;
	
КонецФункции

Процедура ОткрытьПротоколОтправки(Форма, КонтролирующийОрган) Экспорт
	
	Если КонтролирующийОрган = "ФСС" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиФССЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиФСРАРЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколОтправкиРПНЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	Иначе
		
		СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		
		СвойстваПротоколаСервисСОС = СдачаОтчетностиЧерезСервисСпецоператораВызовСервера.ПолучитьСвойстваАктуальногоПротокола(СсылкаНаОтчет);
		СвойстваПротоколаЭДО = ДокументооборотСКОВызовСервера.ПолучитьСвойстваАктуальногоПротокола(СсылкаНаОтчет);
		
		ДатаПротоколаСервисСОС = ПолучитьДатуПротокола(СвойстваПротоколаСервисСОС);
		ДатаПротоколаЭДО = ПолучитьДатуПротокола(СвойстваПротоколаЭДО);
		
		Если ДатаПротоколаСервисСОС = '00010101' И ДатаПротоколаЭДО = '00010101' Тогда
			ПоказатьПредупреждение(, "Протокол не найден.");
			Возврат;
		ИначеЕсли ДатаПротоколаЭДО > ДатаПротоколаСервисСОС Тогда
			ПоказатьЗначение(, СвойстваПротоколаЭДО.Протокол);
		Иначе
			СдачаОтчетностиЧерезСервисСпецоператораКлиент.ПоказатьПротокол(Форма)
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиФССЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиФСС(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиФСРАРЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиФСРАР(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьПротоколОтправкиРПНЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ОткрытьПротоколОтправкиРПН(ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(Форма, КонтролирующийОрган, КодРегионаВФорме = Неопределено, 
	Знач ЭтоОтправкаИзФормыОтчетность = Ложь, Знач СсылкаНаОтчет = Неопределено, Знач ОрганизацияОтчета = Неопределено) Экспорт
	
	Если КонтролирующийОрган = "ФСС" Тогда
		ДополнительныеПараметры = Новый Структура("Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета", Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФССЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		ДополнительныеПараметры = Новый Структура("Форма, КодРегионаВФорме, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета", Форма, КодРегионаВФорме, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФСРАРЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		ДополнительныеПараметры = Новый Структура("Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета", Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганРПНЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	Иначе
		ДокументооборотСКОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(Форма, КонтролирующийОрган, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	КонецЕсли;

КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФССЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	ЭтоОтправкаИзФормыОтчетность = ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета = ДополнительныеПараметры.ОрганизацияОтчета;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляФСС(Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганФСРАРЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	КодРегионаВФорме = ДополнительныеПараметры.КодРегионаВФорме;
	ЭтоОтправкаИзФормыОтчетность = ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета = ДополнительныеПараметры.ОрганизацияОтчета;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляФСРАР(Форма, КодРегионаВФорме, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганРПНЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	ЭтоОтправкаИзФормыОтчетность = ДополнительныеПараметры.ЭтоОтправкаИзФормыОтчетность;
	СсылкаНаОтчет = ДополнительныеПараметры.СсылкаНаОтчет; 
	ОрганизацияОтчета = ДополнительныеПараметры.ОрганизацияОтчета;
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	КонтекстЭДОКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрганДляРПН(Форма, ЭтоОтправкаИзФормыОтчетность, СсылкаНаОтчет, ОрганизацияОтчета);
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПоСсылке(Ссылка, КонтролирующийОрган = "ФНС") Экспорт
	
	ДокументооборотСКОКлиент.ПроверитьВИнтернетеПоСсылке(Ссылка, КонтролирующийОрган);
	
КонецПроцедуры

Процедура ПроверитьВИнтернете(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	ДокументооборотСКОКлиент.ПроверитьВИнтернете(Форма, КонтролирующийОрган);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ФОРМОЙ ПО 1С-ОТЧЕТНОСТИ 
Процедура ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение(Организация = Неопределено) Экспорт
	
	ПарметрыОткрытия = Новый Структура();
	ПарметрыОткрытия.Вставить("Организация", Организация);
	
	ОткрытьФорму("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ПредложениеОформитьЗаявлениеНаПодключение", ПарметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ОткрытьФормуМастераЗаявленияНаПодключение(Организация, ВладелецОткрываемойФормы = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("Организация, ВладелецОткрываемойФормы", Организация, ВладелецОткрываемойФормы);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуМастераЗаявленияНаПодключениеПослеПолученияКонтекстаЭДО", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьФормуМастераЗаявленияНаПодключениеПослеПолученияКонтекстаЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Подключение к электронному документообороту невозможно: недостаточно прав.'"));
		
	Иначе
		
		Организация = ДополнительныеПараметры.Организация;
		ВладелецОткрываемойФормы = ДополнительныеПараметры.ВладелецОткрываемойФормы;
		
		// Если учетная запись настроена, то открываем не первичное, а вторичное заявление
		УжеНастроенаУчетнаяЗаписьДокументооборота = ЗначениеЗаполнено(КонтекстЭДОКлиент.УчетнаяЗаписьОрганизации(Организация));
		ПоддерживаетсяВторичноеЗаявление = КонтекстЭДОКлиент.ПоддерживаетсяВторичноеЗаявление(Организация);
		
		Если УжеНастроенаУчетнаяЗаписьДокументооборота И ПоддерживаетсяВторичноеЗаявление Тогда
			
			РеквизитыУчетнойЗаписи = ЭлектроннаяПодписьВМоделиСервисаВызовСервера.РеквизитыУчетнойЗаписи(Организация);
			ЭтоЭлектроннаяПодписьВМоделиСервиса = РеквизитыУчетнойЗаписи.ЭлектроннаяПодписьВМоделиСервиса;
			
			ПараметрыФормы = Новый Структура("Организация", Организация);
			ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаИзменениеПараметровПодключения", ПараметрыФормы);
		Иначе

			// Открытие первичного мастера
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("Организация", Организация);
			ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаПодключение", ПараметрыФормы, ВладелецОткрываемойФормы);

		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаЗаявленийНаПодключение(Организация = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("Организация", Организация);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуСпискаЗаявленийНаПодключениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаЗаявленийНаПодключениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Организация = ДополнительныеПараметры.Организация;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Подключение к электронному документообороту невозможно: недостаточно прав.'"));
		
	Иначе
		
		КонтекстЭДОКлиент.ОткрытьФормуСпискаЗаявленийНаПодключение(Организация);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПараметрыПодключенияК1СОтчетности(Параметр, ФормаВладельца) Экспорт
	
	ТребуетсяПроверкаПараметров = Ложь;
	
	Если ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипФизЛица() Тогда
		
		// Изменилось физ лицо
		ТребуетсяПроверкаПараметров = Истина;
		
	ИначеЕсли ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипОрганизации() Тогда
		
		// Изменилась организация
		УчетнаяЗаписьОрганизации = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.УчетнаяЗаписьОрганизации(Параметр);
		Если ЗначениеЗаполнено(УчетнаяЗаписьОрганизации) Тогда
			
			ТребуетсяПроверкаПараметров = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТребуетсяПроверкаПараметров Тогда
		
		// Проверка прав
		ДополнительныеПараметры = Новый Структура("Параметр, ФормаВладельца", Параметр, ФормаВладельца);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьПараметрыПодключенияК1СОтчетностиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПараметрыПодключенияК1СОтчетностиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент 	= Результат.КонтекстЭДО;
	Параметр 			= ДополнительныеПараметры.Параметр;
	ФормаВладельца 		= ДополнительныеПараметры.ФормаВладельца;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипФизЛица() Тогда
		
		// Изменилось физ лицо
		Организации = КонтекстЭДОКлиент.ОрганизацияФизЛицаИзДокументаЗаявления(Параметр);
		Для каждого Организация Из Организации Цикл
			КонтекстЭДОКлиент.ПоказатьФормуПредупрежденияОбИзменившихсяНастройкахПодключения(Организация, ФормаВладельца);
		КонецЦикла; 
		
	ИначеЕсли ТипЗнч(Параметр) = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ТипОрганизации() Тогда
		
		// Изменилась организация
		Организация = Параметр;
		КонтекстЭДОКлиент.ПоказатьФормуПредупрежденияОбИзменившихсяНастройкахПодключения(Организация, ФормаВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

// РАБОТА С ФОРМОЙ ПО 1С-ОТЧЕТНОСТИ 
////////////////////////////////////////////////////////////////////////////////

Процедура ОбновитьОтправкуИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьОтправкуИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОбновитьОтправкуИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// По форме получаем ссылку и организацию
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка 		= ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация = ДокументооборотСФССКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка 		= ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСФСРАРКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка 		= ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСРПНКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	Иначе
		Ссылка 		= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСКОКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		// Получаем организацию из регистра сведений
		Сведения = КонтекстЭДОКлиент.СведенияПоОтправляемымОбъектам(Ссылка);
		Организация = Сведения.Организация;
	КонецЕсли;
	
	// Отправка извещений
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган, Ссылка, Организация", Форма, КонтролирующийОрган, Ссылка, Организация);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьПанельСостоянияОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	КонтекстЭДОКлиент.ОсуществитьОбменПоОрганизации(Форма, Организация, ОписаниеОповещения, КонтролирующийОрган, Ссылка);
	
КонецПроцедуры

Процедура ОбновитьПанельСостоянияОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма 				= ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	Организация 		= ДополнительныеПараметры.Организация;
	Ссылка 				= ДополнительныеПараметры.Ссылка;
	
	РегламентированнаяОтчетностьКлиент.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(Форма, КонтролирующийОрган);
	
	// Оповещаем о завершении отправки
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Организация", Организация);
	ПараметрыОповещения.Вставить("Ссылка", Ссылка);
	Оповестить("Завершение отправки", ПараметрыОповещения, Ссылка);
	
КонецПроцедуры

Процедура ОткрытьПротоколИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПротоколИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьПротоколИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;

	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// По форме получаем ссылку
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка = ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка = ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка = ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	Иначе
		Ссылка = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	КонтекстЭДОКлиент.ОткрытьПротокол(Ссылка, КонтролирующийОрган);
	
КонецПроцедуры

Процедура ОткрытьКритическиеОшибкиИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// По форме получаем ссылку
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка = ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка = ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка = ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	Иначе
		Ссылка = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Ссылка", Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьКритическиеОшибкиИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьКритическиеОшибкиИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Ссылка = ДополнительныеПараметры.Ссылка;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// Открываем критические ошибки
	КонтекстЭДОКлиент.ПоказатьКритическиеОшибкиПоСсылке(Ссылка);
	
КонецПроцедуры

Процедура ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// Получаем КонтекстЭДОКлиент
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// По форме получаем ссылку и организацию
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка 		= ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация = ДокументооборотСФССКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка 		= ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСФСРАРКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка 		= ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСРПНКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	Иначе
		Ссылка 		= ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
		Организация	= ДокументооборотСКОКлиентСервер.ПолучитьОрганизациюПоФорме(Форма);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		// Получаем организацию из регистра сведений
		Сведения = КонтекстЭДОКлиент.СведенияПоОтправляемымОбъектам(Ссылка);
		Организация = Сведения.Организация;
	КонецЕсли;
	
	// Отправка извещений
	ДополнительныеПараметры = Новый Структура("Форма, КонтролирующийОрган", Форма, КонтролирующийОрган);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиПослеОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	КонтекстЭДОКлиент.ОтправитьНеотправленныеИзвещенияОПриеме(Ссылка, Организация, КонтролирующийОрган, ОписаниеОповещения);
	
	
КонецПроцедуры

Процедура ОтправитьНеотправленноеИзвещениеИзПанелиОтправкиПослеОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	КонтролирующийОрган = ДополнительныеПараметры.КонтролирующийОрган;
	РегламентированнаяОтчетностьКлиент.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(Форма, КонтролирующийОрган);
	
КонецПроцедуры

Процедура ОткрытьСостояниеОтправкиИзПанелиОтправки(Форма, КонтролирующийОрган = "ФНС") Экспорт
	
	// По форме получаем ссылку
	Если КонтролирующийОрган = "ФСС" Тогда
		Ссылка = ДокументооборотСФССКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "ФСРАР" Тогда
		Ссылка = ДокументооборотСФСРАРКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ИначеЕсли КонтролирующийОрган = "РПН" Тогда
		Ссылка = ДокументооборотСРПНКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	Иначе
		Ссылка = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	КонецЕсли;
	
	// Получаем КонтекстЭДОКлиент
	
	ДополнительныеПараметры = Новый Структура("Ссылка", Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСостояниеОтправкиИзПанелиОтправкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОткрытьСостояниеОтправкиИзПанелиОтправкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Ссылка = ДополнительныеПараметры.Ссылка;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	// Отображение формы статуса
	КонтекстЭДОКлиент.ПоказатьФормуСтатусовОтправки(Ссылка);
	
КонецПроцедуры

Процедура ПроверитьОтветыНаЗаявленияНаПодключениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Если КонтекстЭДОКлиент <> Неопределено Тогда
		КонтекстЭДОКлиент.ПроверитьОтветыНаЗаявленияНаПодключениеЛокальная();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьСостояниеОтправкиОтчетаПереопределяемый(Ссылка, СтандартнаяОбработка) Экспорт

	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ПоказатьСостояниеОтправкиОтчета(Ссылка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОтправитьВКонтролирующийОрганПереопределяемый(Ссылка, ВидКонтролирующегоОргана, КодКонтролирующегоОргана, СтандартнаяОбработка) Экспорт
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ОтправитьВКонтролирующийОрган(Ссылка, ВидКонтролирующегоОргана, КодКонтролирующегоОргана, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПроверитьВИнтернетеПереопределяемый(Ссылка, СтандартнаяОбработка) Экспорт

	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентПереопределяемый.ПроверитьВИнтернете(Ссылка, СтандартнаяОбработка);
	
КонецПроцедуры