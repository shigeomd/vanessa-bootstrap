
#Область ПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ПеречисленныйНалог - таблица значений с колонками.
//				МесяцНалоговогоПериода - должно быть непустым значением типа Дата.
//				Сумма
//				ПлатежноеПоручениеНомер - тип Строка (необязательно).
//				ПлатежноеПоручениеДата - тип Дата (необязательно).
//      ФизическиеЛица - массив физических лиц (необязательно), если не задан, перечисленная 
//						сумма будет распределена по всем физлицам организации.
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет использоваться регистрация для организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПеречисленныйНалог(Ссылка, Движения, Отказ, Организация, ДатаОперации, ПеречисленныйНалог, ФизическиеЛица = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если ПеречисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Колонки = ПеречисленныйНалог.Колонки;
	ЕстьДанныеПлатежногоПоручения = Колонки.Найти("ПлатежноеПоручениеНомер") <> Неопределено И Колонки.Найти("ПлатежноеПоручениеДата") <> Неопределено;
	
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;  
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ПеречисленныйНалог Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаУплатыНалоговогоАгента(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных);
		Если ЕстьДанныеПлатежногоПоручения Тогда
			НоваяСтрока.РеквизитыПлатежногоПоручения = РеквизитыПлатежногоПорученияПоДатеНомеру(СтрокаДанных.ПлатежноеПоручениеДата, СтрокаДанных.ПлатежноеПоручениеНомер);
		КонецЕсли;
		НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
		НоваяСтрока.ДатаПлатежа = ДатаОперации;
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записать();
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записывать = Ложь;
	КонецЕсли;
	
	Если Движения.Найти("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ") <> Неопределено Тогда
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Очистить();
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
	КонецЕсли;
	
	СформироватьПеречисленныйНалогПоФизическимЛицам(Ссылка, Движения, Отказ, Организация, ДатаОперации, ФизическиеЛица, РегистрацияВНалоговомОргане, Записывать);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		РеквизитыПлатежа - таблица значений с колонками.
//				Организация - СправочникСсылка.Организации - должно быть непустым значением.
//				МесяцНалоговогоПериода - дата - должно быть непустым значением.
//				ДатаПлатежа - дата - должно быть непустым значением.
//				ПлатежноеПоручениеНомер - строка (необязательно).
//				ПлатежноеПоручениеДата - дата (необязательно).
//              РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане  (необязательно)
//              ГлавныйБухгалтер - СправочникСсылка.ФизическиеЛица (необязательно)
//              Бухгалтер - СправочникСсылка.ФизическиеЛица (необязательно)
//
//  Возвращаемое значение: табличный документ.
//
Функция РеестрПеречисленныхСуммНалога(РеквизитыПлатежа) Экспорт 

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрПеречисленныхСумм";
	
	Если РеквизитыПлатежа.Количество() = 0 Тогда
		Возврат ТабличныйДокумент
	КонецЕсли;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_РеестрПеречисленныхСуммНДФЛ");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка работника
	ОбластьОстаткаАванса = Макет.ПолучитьОбласть("СтрокаОстаткаАванса");
	
	Колонки = РеквизитыПлатежа.Колонки;
	Если Колонки.Найти("РеквизитыПлатежногоПоручения") = Неопределено Тогда
		Колонки.Добавить("РеквизитыПлатежногоПоручения", Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(50)));
	КонецЕсли;
	Если Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	КонецЕсли;
	
	ОтветственныеЛицаВДанныхДокументов = Истина;
	Если Колонки.Найти("ГлавныйБухгалтер") = Неопределено Тогда
		Колонки.Добавить("ГлавныйБухгалтер", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Если Колонки.Найти("Бухгалтер") = Неопределено Тогда
			Колонки.Добавить("Бухгалтер", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		КонецЕсли;
		ОтветственныеЛицаВДанныхДокументов = Ложь;
	КонецЕсли;
	
	ЕстьДанныеПлатежногоПоручения = Колонки.Найти("ПлатежноеПоручениеНомер") <> Неопределено И Колонки.Найти("ПлатежноеПоручениеДата") <> Неопределено;
	Если ЕстьДанныеПлатежногоПоручения Тогда
		Для каждого СтрокаТЗ Из РеквизитыПлатежа Цикл
			СтрокаТЗ.РеквизитыПлатежногоПоручения = РеквизитыПлатежногоПорученияПоДатеНомеру(СтрокаТЗ.ПлатежноеПоручениеДата, СтрокаТЗ.ПлатежноеПоручениеНомер);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеквизитыПлатежа.Организация,
	|	РеквизитыПлатежа.МесяцНалоговогоПериода,
	|	РеквизитыПлатежа.РегистрацияВНалоговомОргане,
	|	РеквизитыПлатежа.ДатаПлатежа,
	|	РеквизитыПлатежа.РеквизитыПлатежногоПоручения,
	|	РеквизитыПлатежа.ГлавныйБухгалтер,
	|	РеквизитыПлатежа.Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	&РеквизитыПлатежа КАК РеквизитыПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДанныеДокументов.ДатаПлатежа) КАК НачалоПериода,
	|	МАКСИМУМ(ДанныеДокументов.ДатаПлатежа) КАК ОкончаниеПериода
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов";

	Запрос.УстановитьПараметр("РеквизитыПлатежа", РеквизитыПлатежа);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Выборка.НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Выборка.ОкончаниеПериода));
	ДатаАктуальности = ТекущаяДатаСеанса();
	Запрос.УстановитьПараметр("ТекущаяДата", ДатаАктуальности);
	Запрос.УстановитьПараметр("ДатаПереходаНаКодыОКТМО", ДатаПереходаНаКодыОКТМО());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.Организация,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.МесяцНалоговогоПериода,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.РегистрацияВНалоговомОргане,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.РеквизитыПлатежногоПоручения,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.ДатаПлатежа
	|ПОМЕСТИТЬ ВТРегистрацияАвансов
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			,
	|			(Организация, МесяцНалоговогоПериода, ДатаПлатежа, РеквизитыПлатежногоПоручения) В
	|				(ВЫБРАТЬ
	|					РеквизитыПлатежа.Организация,
	|					РеквизитыПлатежа.МесяцНалоговогоПериода,
	|					РеквизитыПлатежа.ДатаПлатежа,
	|					РеквизитыПлатежа.РеквизитыПлатежногоПоручения
	|				ИЗ
	|					ВТДанныеДокументов КАК РеквизитыПлатежа)) КАК УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты
	|ГДЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОбороты.СуммаПриход > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|			ТОГДА РегистрацияАвансов.РегистрацияВНалоговомОргане
	|		ИНАЧЕ ДанныеДокументов.РегистрацияВНалоговомОргане
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.ДатаПлатежа,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения,
	|	ДанныеДокументов.ГлавныйБухгалтер,
	|	ДанныеДокументов.Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеСРегистрациями
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрацияАвансов КАК РегистрацияАвансов
	|		ПО ДанныеДокументов.Организация = РегистрацияАвансов.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = РегистрацияАвансов.МесяцНалоговогоПериода
	|			И ДанныеДокументов.ДатаПлатежа = РегистрацияАвансов.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = РегистрацияАвансов.РеквизитыПлатежногоПоручения
	|			И (ДанныеДокументов.РегистрацияВНалоговомОргане = РегистрацияАвансов.РегистрацияВНалоговомОргане
	|				ИЛИ ДанныеДокументов.РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.МесяцНалоговогоПериода,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения,
	|	ДанныеДокументов.ДатаПлатежа,
	|	УплатаПоФизическимЛицам.ФизическоеЛицо,
	|	УплатаПоФизическимЛицам.Ставка,
	|	СУММА(УплатаПоФизическимЛицам.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТУплатаПоФизическимЛицам
	|ИЗ
	|	ВТДанныеСРегистрациями КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК УплатаПоФизическимЛицам
	|		ПО ДанныеДокументов.Организация = УплатаПоФизическимЛицам.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = УплатаПоФизическимЛицам.МесяцНалоговогоПериода
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане
	|ГДЕ
	|	УплатаПоФизическимЛицам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И УплатаПоФизическимЛицам.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.МесяцНалоговогоПериода,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане,
	|	УплатаПоФизическимЛицам.Ставка,
	|	УплатаПоФизическимЛицам.ФизическоеЛицо,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения,
	|	ДанныеДокументов.ДатаПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УплатаПоФизическимЛицам.ФизическоеЛицо
	|ИЗ
	|	ВТУплатаПоФизическимЛицам КАК УплатаПоФизическимЛицам";
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), "ФИОПолные", ДатаАктуальности);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.Организация,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.МесяцНалоговогоПериода,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.РегистрацияВНалоговомОргане,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.РеквизитыПлатежногоПоручения,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.ДатаПлатежа,
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.СуммаОстаток
	|ПОМЕСТИТЬ ВТОстаткиАвансов
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению.Остатки(
	|			&ТекущаяДата,
	|			(Организация, МесяцНалоговогоПериода, РегистрацияВНалоговомОргане, ДатаПлатежа, РеквизитыПлатежногоПоручения) В
	|				(ВЫБРАТЬ
	|					РеквизитыПлатежа.Организация,
	|					РеквизитыПлатежа.МесяцНалоговогоПериода,
	|					РеквизитыПлатежа.РегистрацияВНалоговомОргане,
	|					РеквизитыПлатежа.ДатаПлатежа,
	|					РеквизитыПлатежа.РеквизитыПлатежногоПоручения
	|				ИЗ
	|					ВТДанныеСРегистрациями КАК РеквизитыПлатежа)) КАК УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки
	|ГДЕ
	|	УплатаНДФЛНалоговымиАгентамиКРаспределениюОстатки.СуммаОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УплатаПоФизическимЛицам.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода,
	|	УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане,
	|	УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения,
	|	УплатаПоФизическимЛицам.ДатаПлатежа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УплатаПоФизическимЛицам.ФизическоеЛицо) КАК КоличествоФизическихЛиц,
	|	СУММА(УплатаПоФизическимЛицам.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТКоличествоСтрок
	|ИЗ
	|	ВТУплатаПоФизическимЛицам КАК УплатаПоФизическимЛицам
	|ГДЕ
	|	УплатаПоФизическимЛицам.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	УплатаПоФизическимЛицам.Организация,
	|	УплатаПоФизическимЛицам.МесяцНалоговогоПериода,
	|	УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане,
	|	УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения,
	|	УплатаПоФизическимЛицам.ДатаПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеДокументов.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеДокументов.ДатаПлатежа КАК ДатаПлатежа,
	|	ДанныеДокументов.РеквизитыПлатежногоПоручения КАК РеквизитыПлатежногоПоручения,
	|	ЕСТЬNULL(ОстаткиАвансов.СуммаОстаток, 0) КАК ОстатокАванса,
	|	УплатаПоФизическимЛицам.ФизическоеЛицо,
	|	КадровыеДанныеФизическихЛиц.ФИОПолные КАК Работник,
	|	УплатаПоФизическимЛицам.Ставка,
	|	УплатаПоФизическимЛицам.Сумма,
	|	Организации.НаименованиеПолное КАК НазваниеОрганизации,
	|	Организации.ИНН,
	|	РегистрацииВНалоговомОргане.КПП,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.ДатаПлатежа < &ДатаПереходаНаКодыОКТМО
	|			ТОГДА РегистрацииВНалоговомОргане.КодПоОКАТО
	|		ИНАЧЕ РегистрацииВНалоговомОргане.КодПоОКТМО
	|	КОНЕЦ КАК КодТерритории,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.ДатаПлатежа < &ДатаПереходаНаКодыОКТМО
	|			ТОГДА ""ОКАТО""
	|		ИНАЧЕ ""ОКТМО""
	|	КОНЕЦ КАК ИмяКода,
	|	ЕСТЬNULL(КоличествоСтрок.КоличествоФизическихЛиц, 0) КАК ВсегоСтрок,
	|	ЕСТЬNULL(КоличествоСтрок.Сумма, 0) + ЕСТЬNULL(ОстаткиАвансов.СуммаОстаток, 0) КАК СуммаУплатыВсего,
	|	ДанныеДокументов.ГлавныйБухгалтер,
	|	ДанныеДокументов.Бухгалтер
	|ИЗ
	|	ВТДанныеСРегистрациями КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУплатаПоФизическимЛицам КАК УплатаПоФизическимЛицам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|			ПО УплатаПоФизическимЛицам.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|		ПО ДанныеДокументов.Организация = УплатаПоФизическимЛицам.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = УплатаПоФизическимЛицам.МесяцНалоговогоПериода
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = УплатаПоФизическимЛицам.РегистрацияВНалоговомОргане
	|			И ДанныеДокументов.ДатаПлатежа = УплатаПоФизическимЛицам.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = УплатаПоФизическимЛицам.РеквизитыПлатежногоПоручения
	|			И (УплатаПоФизическимЛицам.Сумма <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиАвансов КАК ОстаткиАвансов
	|		ПО ДанныеДокументов.Организация = ОстаткиАвансов.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = ОстаткиАвансов.МесяцНалоговогоПериода
	|			И ДанныеДокументов.ДатаПлатежа = ОстаткиАвансов.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = ОстаткиАвансов.РеквизитыПлатежногоПоручения
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = ОстаткиАвансов.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСтрок КАК КоличествоСтрок
	|		ПО ДанныеДокументов.Организация = КоличествоСтрок.Организация
	|			И ДанныеДокументов.МесяцНалоговогоПериода = КоличествоСтрок.МесяцНалоговогоПериода
	|			И ДанныеДокументов.РегистрацияВНалоговомОргане = КоличествоСтрок.РегистрацияВНалоговомОргане
	|			И ДанныеДокументов.ДатаПлатежа = КоличествоСтрок.ДатаПлатежа
	|			И ДанныеДокументов.РеквизитыПлатежногоПоручения = КоличествоСтрок.РеквизитыПлатежногоПоручения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО ДанныеДокументов.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ДанныеДокументов.Организация = Организации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	РеквизитыПлатежногоПоручения,
	|	РегистрацияВНалоговомОргане,
	|	МесяцНалоговогоПериода,
	|	Работник";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("ДатаПлатежа") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("РеквизитыПлатежногоПоручения") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("РегистрацияВНалоговомОргане") Цикл
				Пока Выборка.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") Цикл
					
					Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ОбластьМакетаШапка.Параметры.Заполнить(Выборка);
					ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
					ТабличныйДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
					
					ОбластьОстаткаАванса.Параметры.Заполнить(Выборка);
					
					ОбластьМакетаПодвал.Параметры.Заполнить(Выборка);
					
					ФизическиеЛица = Новый Массив;
					Если ОтветственныеЛицаВДанныхДокументов Тогда
						
						Если ЗначениеЗаполнено(Выборка.ГлавныйБухгалтер) Тогда
							ФизическиеЛица.Добавить(Выборка.ГлавныйБухгалтер);
						КонецЕсли;
						
						Если ЗначениеЗаполнено(Выборка.Бухгалтер) Тогда
							ФизическиеЛица.Добавить(Выборка.Бухгалтер);
						КонецЕсли; 

					Иначе
						
						ЗапрашиваемыеЗначения = Новый Структура("Организация,ГлавныйБухгалтер");
						ЗапрашиваемыеЗначения.Организация = Выборка.Организация;
						ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗапрашиваемыеЗначения);
						
						Если ЗначениеЗаполнено(Выборка.ГлавныйБухгалтер) Тогда
							ФизическиеЛица.Добавить(ЗапрашиваемыеЗначения.ГлавныйБухгалтер);
						КонецЕсли;
						
					КонецЕсли;
					
					Если ФизическиеЛица.Количество() > 0 Тогда
						
						ТаблицаФИО = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ФизическиеЛица, "ИОФамилия");
						
						Если ЗначениеЗаполнено(Выборка.ГлавныйБухгалтер) Тогда
							ДанныеПодписанта = ТаблицаФИО.Найти(Выборка.ГлавныйБухгалтер, "ФизическоеЛицо");
							Если ДанныеПодписанта <> Неопределено Тогда
								ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтерРасшифровкаПодписи = ДанныеПодписанта.ИОФамилия;
							КонецЕсли; 
						КонецЕсли;
						
						Если ЗначениеЗаполнено(Выборка.Бухгалтер) Тогда
							ДанныеПодписанта = ТаблицаФИО.Найти(Выборка.Бухгалтер, "ФизическоеЛицо");
							Если ДанныеПодписанта <> Неопределено Тогда
								ОбластьМакетаПодвал.Параметры.БухгалтерРасшифровкаПодписи = ДанныеПодписанта.ИОФамилия;
							КонецЕсли; 
						КонецЕсли; 
						
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.ВсегоСтрок) Тогда
						
						// Массив для разбиения на страницы.
						ВыводимыеОбласти = Новый Массив();
						ВыводимыеОбласти.Добавить(ОбластьМакета);
						ВыведеноСтрок = 0;
						Пока Выборка.Следующий() Цикл
							
							// Данные по работнику.
							ОбластьМакета.Параметры.Заполнить(Выборка);
							// разбиение на страницы
							ВыведеноСтрок = ВыведеноСтрок + 1;
							
							// Проверим, уместится ли строка на странице или надо открывать новую страницу.
							ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
							Если Не ВывестиПодвалЛиста И ВыведеноСтрок = Выборка.ВсегоСтрок Тогда
								ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
								ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
							КонецЕсли;
							Если ВывестиПодвалЛиста Тогда
								ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ТабличныйДокумент.Вывести(ПовторятьПриПечатиСтроки);
							КонецЕсли;
							
							ОбластьМакета.Параметры.НомерСтроки = ВыведеноСтрок;
							ТабличныйДокумент.Вывести(ОбластьМакета);
							
						КонецЦикла;
						
					Иначе
						
						Для Сч = 1 По ОбластьМакета.Параметры.Количество() Цикл
							ОбластьМакета.Параметры.Установить(Сч - 1,""); 
						КонецЦикла;
						
						ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
						ТабличныйДокумент.Вывести(ОбластьМакета);
						
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Выборка.ОстатокАванса) Тогда
						ТабличныйДокумент.Вывести(ОбластьОстаткаАванса);
					КонецЕсли;
					
					// Выводим предварительно подготовленный Подвал документа.
					ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент
	
КонецФункции

// Процедура переопределяет свойства объекта, с которыми он будет отображен в форме Отчетность.
// Параметры:
//  СвойстваОбъектов  - ТаблицаЗначений - (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность)
Процедура ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов) Экспорт
	Документ2НДФЛ = Новый Массив;
	СоответствиеСсылокСвойствам = Новый Соответствие;
	Для Каждого ЗапрашиваемыеДанные Из СвойстваОбъектов Цикл
		Если ТипЗнч(ЗапрашиваемыеДанные.Ссылка) = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган") Тогда
			Документ2НДФЛ.Добавить(ЗапрашиваемыеДанные.Ссылка);
			СоответствиеСсылокСвойствам.Вставить(ЗапрашиваемыеДанные.Ссылка, ЗапрашиваемыеДанные);
		КонецЕсли;	
	КонецЦикла;		
	
	Если Документ2НДФЛ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ2НДФЛ", Документ2НДФЛ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Дата КАК ДатаСоздания,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Организация,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.РегистрацияВНалоговомОргане.Код КАК КодКонтролирующегоОргана,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.ПометкаУдаления,
	|	НАЧАЛОПЕРИОДА(СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериодДата, ГОД) КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериодДата, ГОД) КАК ДатаОкончания,
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Комментарий,
	|	""-"" КАК ВариантОтчета
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка В(&Документ2НДФЛ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗапрашиваемыеДанные = СоответствиеСсылокСвойствам[Выборка.Ссылка];
		
		ЗаполнитьЗначенияСвойств(ЗапрашиваемыеДанные, Выборка);	
	КонецЦикла;	
	
КонецПроцедуры

// Определяет свойства, касающиеся общих свойств объектов конфигураций-потребителей для отображения в форме Отчетность
// и возможности создания новый объектов из формы Отчетность.
//
// Параметры:
//  ТаблицаОписания  - ТаблицаЗначений -  (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности)
//	
Процедура ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания) Экспорт
	ОписаниеДокументаОтчетности = ТаблицаОписания.Добавить();
	
	ОписаниеДокументаОтчетности.ТипОбъекта = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган");
	ОписаниеДокументаОтчетности.ВидКонтролирующегоОргана = Перечисления.ТипыКонтролирующихОрганов.ФНС;
	ОписаниеДокументаОтчетности.ГруппаВДереве = НСтр("ru = 'Отчетность по физлицам'");
	ОписаниеДокументаОтчетности.ВидДокумента = Перечисления.СтраницыЖурналаОтчетность.Отчеты;
	ОписаниеДокументаОтчетности.НеОтправляетсяВКонтролирующийОрган = Ложь;
	ОписаниеДокументаОтчетности.ЯвляетсяАктуальным = Истина;
	ОписаниеДокументаОтчетности.ИмяОсновногоМакетаДляПечати = "Форма2НДФЛ";
	ОписаниеДокументаОтчетности.ВидЭлектронногоПредставления = Справочники.ВидыОтправляемыхДокументов.СправкаПоНДФЛВНалоговыйОрган;
	
КонецПроцедуры

// Предназначена для получения сумм перечисленного налога, зарегистрированных документом, в разрезе физических лиц.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор, для которого выполняется чтение движений.
//
//  Возвращаемое значение: 
//  	таблица значений с колонками
//			ФизическоеЛицо - СправочникСсылка.ФизическиеЛица -
//			Сумма - число -
//
Функция ПеречисленныйНалогРегистратораПоФизическимЛицам(Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	СУММА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор = &Регистратор
	|	И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - 
//		Организация -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Начисления - ТаблицаЗначений - таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка - должно быть непустым.
//			* Подразделение - ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации -
//  	    * ДатаПолученияДохода - дата - должно быть непустым.
//			* КодДохода -
//			* СуммаДохода -
//			* КодВычета - 
//  	    * СуммаВычета -
//			* Сотрудник - необязательная, может отсутствовать.
//  	    * Начисление - необязательная, может отсутствовать.
//  	    * ВключатьВДекларациюПоНалогуНаПрибыль - необязательная, может отсутствовать.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, Организация, ДатаОперации, Начисления, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если Начисления.Количество() = 0 Тогда // данных не оказалось
		Возврат	
	КонецЕсли;
	
	СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(Начисления.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	РегистрацияОрганизации = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Для Каждого СтрокаДанных Из Начисления Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, ДатаОперации, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияОрганизации);
		НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(НоваяСтрока.ДатаПолученияДохода);
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит вр. таблицу 
//			ВТНачисления с полями.
//				Сотрудник, тип СправочникСсылка.Сотрудники.
//				Начисление, тип ПланВидовРасчетаСсылка.Начисления
//				СуммаДохода
//				СуммаВычетаНДФЛ
//				КодВычетаНДФЛ.
//				Подразделение, тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьДоходыНДФЛПоНачислениям(Движения, Отказ, Организация, ДатаОперации, ДатаВыплаты, МенеджерВременныхТаблиц, МесяцНачисления = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(МесяцНачисления) Тогда
		МесяцНачисления = ДатаОперации
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаВыплаты", ДатаВыплаты);
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("КонецМесяцаНачисления", КонецМесяца(МесяцНачисления));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	&КонецМесяцаНачисления КАК Период
	|ПОМЕСТИТЬ ВТПериодыСотрудников
	|ИЗ
	|	ВТНачисления КАК Сотрудники";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТПериодыСотрудников");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, "ДатаУвольнения");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Начисление.КодДоходаНДФЛ КАК КодДохода,
	|	ВЫБОР
	|		КОГДА Начисления.Начисление.КодДоходаНДФЛ.СоответствуетОплатеТруда
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления) < &КонецМесяцаНачисления
	|							И КОНЕЦПЕРИОДА(ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления), МЕСЯЦ) = &КонецМесяцаНачисления
	|						ТОГДА ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления)
	|					ИНАЧЕ &КонецМесяцаНачисления
	|				КОНЕЦ
	|		ИНАЧЕ &ДатаВыплаты
	|	КОНЕЦ КАК ДатаПолученияДохода,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА Начисления.Начисление.КодДоходаНДФЛ.СоответствуетОплатеТруда
	|				ТОГДА &КонецМесяцаНачисления
	|			ИНАЧЕ &ДатаВыплаты
	|		КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	Начисления.СуммаДохода,
	|	Начисления.КодВычетаНДФЛ КАК КодВычета,
	|	Начисления.СуммаВычетаНДФЛ КАК СуммаВычета,
	|	Начисления.Подразделение,
	|	Начисления.ПодразделениеОрганизации КАК ПодразделениеСотрудника,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Начисления.Сотрудник,
	|	Начисления.Начисление
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО Начисления.Сотрудник = ДанныеОСотруднике.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|				&ДатаОперации,
	|				СтруктурнаяЕдиница В
	|					(ВЫБРАТЬ
	|						Начисления.Подразделение
	|					ИЗ
	|						ВТНачисления КАК Начисления)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО Начисления.Подразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	(Начисления.СуммаДохода <> 0
	|			ИЛИ Начисления.СуммаВычетаНДФЛ <> 0)
	|	И Начисления.Начисление.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)";
	Результат = Запрос.Выполнить();
	
	РегистрацияОрганизации = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, ДатаОперации, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияОрганизации);
	КонецЦикла;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТПериодыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников";
	Запрос.Выполнить();
	
	Если Записывать Тогда
		// Записываем сразу и не выставляем признак Записывать этому набору записей движений документа.
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		ИмущественныеВычеты
//			- таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//				КодВычета: должно быть непустым.
//          	Год: должно быть непустым.
//				Сумма
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПравоНаИмущественныеВычеты(Движения, Отказ, Организация, ДатаОперации, ИмущественныеВычеты, Записывать = Ложь) Экспорт
	
	Если ИмущественныеВычеты = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИмущественныеВычеты Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных)
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ИмущественныеВычетыНДФЛ.Записать();
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц
//			- МенеджерВременныхТаблиц содержит вр. таблицу ВТДанныеОбИмущественныхВычетах с полями
//				ФизическоеЛицо: должно быть непустым
//          	КодВычета: должно быть непустым
//          	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьПредоставленныеИмущественныеВычетыПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Вычеты.КодВычета,
	|	ГОД(Вычеты.МесяцНалоговогоПериода) КАК Год,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.Сумма,
	|	Вычеты.Подразделение,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОбИмущественныхВычетах КАК Вычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|				&ДатаОперации,
	|				СтруктурнаяЕдиница В
	|					(ВЫБРАТЬ
	|						Начисления.Подразделение
	|					ИЗ
	|						ВТДанныеОбИмущественныхВычетах КАК Начисления)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО Вычеты.Подразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	Вычеты.Сумма <> 0";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
	КонецЦикла;
	Если Записывать Тогда
		Движения.ИмущественныеВычетыНДФЛ.Записать();
		Движения.ИмущественныеВычетыНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ИмущественныеВычетыНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		ИмущественныеВычеты - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//				КодВычета: должно быть непустым.
//          	Год: должно быть непустым.
//				Сумма
//				Подразделение - ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации-
//      СоответствиеПодразделенийИРегистраций - необязательный параметр, содержит предварительно построенное
//                                              соответствие подразделений и их регистраций в налоговом органе.
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о вычетах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьПредоставленныеИмущественныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИмущественныеВычеты, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ИмущественныеВычеты = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если СоответствиеПодразделенийИРегистраций = Неопределено Тогда
		СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(ИмущественныеВычеты.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИмущественныеВычеты Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ИмущественныеВычетыНДФЛ.Записать();
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ИмущественныеВычетыНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТДанныеОСтандартныхВычетах с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	КодВычета: должно быть непустым
//      	   	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСтандартныеВычетыПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТДанныеОСтандартныхВычетах КАК Вычеты";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Вычеты.КодВычета,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.Сумма,
	|	Вычеты.Подразделение,
	|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОСтандартныхВычетах КАК Вычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|				&ДатаОперации,
	|				СтруктурнаяЕдиница В
	|					(ВЫБРАТЬ
	|						Начисления.Подразделение
	|					ИЗ
	|						ВТДанныеОСтандартныхВычетах КАК Начисления)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО Вычеты.Подразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	Вычеты.Сумма <> 0";
	Если Результат.Выгрузить().Колонки.Найти("ВключатьВДекларациюПоНалогуНаПрибыль") = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль", "Неопределено")
	Иначе 
		Запрос.Текст = ТекстЗапроса;
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСтандартныхВычетов(Движения, Организация, ДатаОперации, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
	КонецЦикла;
	Если Записывать Тогда
		Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записать();
		Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		СтандартныеВычеты
//			- таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//				КодВычета: должно быть непустым
//      	   	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//      СоответствиеПодразделенийИРегистраций - необязательный параметр, содержит предварительно построенное
//                                              соответствие подразделений и их регистраций в налоговом органе.
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о вычетах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, СтандартныеВычеты, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если СтандартныеВычеты = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если СоответствиеПодразделенийИРегистраций = Неопределено Тогда
		СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(СтандартныеВычеты.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из СтандартныеВычеты Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаСтандартныхВычетов(Движения, Организация, ДатаОперации, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записать();
			Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ИсчисленныйНалог
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТНДФЛИсчисленный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль (необязательное)
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИсчисленныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ИсчисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = ИсчисленныйНалог;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТНДФЛИсчисленный КАК Налоги";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.СтавкаНалогообложенияРезидента,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.Сумма,
	|	Налоги.КодДохода,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.Подразделение,
	|	Налоги.Подразделение.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТНДФЛИсчисленный КАК Налоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|				&ДатаОперации,
	|				СтруктурнаяЕдиница В
	|					(ВЫБРАТЬ
	|						Начисления.Подразделение
	|					ИЗ
	|						ВТНДФЛИсчисленный КАК Начисления)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО Налоги.Подразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	Налоги.Сумма <> 0";
	
	Если Результат.Выгрузить().Колонки.Найти("ВключатьВДекларациюПоНалогуНаПрибыль") = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Налоги.ВключатьВДекларациюПоНалогуНаПрибыль", "Неопределено")
	Иначе 
		Запрос.Текст = ТекстЗапроса;
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, Выборка, , ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
	КонецЦикла;
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ИсчисленныйНалог 
//			- таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//      СоответствиеПодразделенийИРегистраций - необязательный параметр, содержит предварительно построенное
//                                              соответствие подразделений и их регистраций в налоговом органе
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о налогах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ИсчисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если СоответствиеПодразделенийИРегистраций = Неопределено Тогда
		СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(ИсчисленныйНалог.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИсчисленныйНалог Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных, , ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		УдержанныйНалог - Таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//				КодДохода.
//				Сумма
//				РегистрацияВНалоговомОргане - необязательная колонка, если ее нет, то регистрация будет вычисляться.
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет вычисляться по подразделениям и организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьУдержанныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если УдержанныйНалог = Неопределено Или УдержанныйНалог.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	ВычислятьРегистрацию = УдержанныйНалог.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено;
	
	Если ВычислятьРегистрацию И РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
		СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(УдержанныйНалог.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из УдержанныйНалог Цикл
		
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьНовыеСтроки = Истина;
		НоваяСтрокаРасчетовНалогоплательщика = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.Удержано);
		Если РегистрацияВНалоговомОргане <> Неопределено Тогда 
			НоваяСтрокаРасчетовНалогоплательщика.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;	
		ИначеЕсли ВычислятьРегистрацию Тогда
			ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрокаРасчетовНалогоплательщика, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);	
		Иначе	
			НоваяСтрокаРасчетовНалогоплательщика.РегистрацияВНалоговомОргане = СтрокаДанных.РегистрацияВНалоговомОргане;
		КонецЕсли;	
		
		НоваяСтрокаРасчетовНалоговыхАгентов = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, НоваяСтрокаРасчетовНалогоплательщика, СтрокаДанных);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		Если Записывать Тогда
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		УдержанныйНалог - МенеджерВременныхТаблиц, который содержит вр. таблицу ВТНалогУдержанный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				ДокументОснование (необязательное)
//				ВключатьВДекларациюПоНалогуНаПрибыль (необязательное)
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет вычисляться по подразделениям и организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьУдержанныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если УдержанныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = УдержанныйНалог;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТНалогУдержанный КАК Налоги";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.СтавкаНалогообложенияРезидента,
	|	Налоги.Ставка,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.Сумма,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.ДокументОснование,
	|	Налоги.КодДохода,
	|	Налоги.Подразделение,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТНалогУдержанный КАК Налоги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|				&ДатаОперации,
	|				СтруктурнаяЕдиница В
	|					(ВЫБРАТЬ
	|						Начисления.Подразделение
	|					ИЗ
	|						ВТНалогУдержанный КАК Начисления)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО Налоги.Подразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	Налоги.Сумма <> 0";
	Если Результат.Выгрузить().Колонки.Найти("ВключатьВДекларациюПоНалогуНаПрибыль") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.ВключатьВДекларациюПоНалогуНаПрибыль", "Неопределено")
	КонецЕсли;
	Если Результат.Выгрузить().Колонки.Найти("ДокументОснование") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Налоги.ДокументОснование", "Неопределено")
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Если РегистрацияВНалоговомОргане = Неопределено Тогда 
		РегистрацияОрганизацииВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);	
	КонецЕсли;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаРасчетовНалогоплательщика = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, Перечисления.ВариантыУдержанияНДФЛ.Удержано);
		Если РегистрацияВНалоговомОргане = Неопределено Тогда
			ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрокаРасчетовНалогоплательщика, Выборка.РегистрацияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане);
		Иначе
			НоваяСтрокаРасчетовНалогоплательщика.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
		КонецЕсли;
		
		НоваяСтрокаРасчетовНалоговыхАгентов = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, НоваяСтрокаРасчетовНалогоплательщика, Выборка);
		
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	Если Записывать Тогда
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		НалогиПереданныеВНалоговыйОрган - таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, ДатаОперации, НалогиПереданныеВНалоговыйОрган, Записывать = Ложь) Экспорт
	
	Если НалогиПереданныеВНалоговыйОрган = Неопределено Тогда
		Возврат
	КонецЕсли;
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из НалогиПереданныеВНалоговыйОрган Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТУдержания с полями
//				ФизическоеЛицо: должно быть непустым.
//				Удержание - тип ПланВидовРасчетаСсылка.Удержания.
//				Сумма
//		Записывать - булево - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСоциальныеВычетыПоВременнойТаблице(Регистратор, Движения,  Отказ, Организация, ДатаОперации, МесяцНачисления, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт 

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", НачалоМесяца(МесяцНачисления));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Ссылка", Регистратор);
	Запрос.УстановитьПараметр("МесяцДатыОперации", НачалоМесяца(ДатаОперации));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо,
	|	СУММА(Удержания.Сумма) КАК Сумма,
	|	&МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА Удержания.Удержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код319)
	|	КОНЕЦ КАК КодВычета
	|ПОМЕСТИТЬ ВТИсходныеДанные
	|ИЗ
	|	ВТУдержания КАК Удержания
	|ГДЕ
	|	Удержания.Удержание.КатегорияУдержания В (ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ), ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДобровольныеВзносыВНПФ))
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Удержания.Удержание.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ДСВ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код319)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанные.ФизическоеЛицо
	|ИЗ
	|	ВТИсходныеДанные КАК ИсходныеДанные";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, Ложь, Результат.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), Организация, ДатаОперации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	&МесяцНалоговогоПериода КАК Период
	|ПОМЕСТИТЬ ВТПериодыСотрудников
	|ИЗ
	|	ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТПериодыСотрудников");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, "Подразделение");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеДанные.ФизическоеЛицо,
	|	ИсходныеДанные.Сумма,
	|	ИсходныеДанные.МесяцНалоговогоПериода,
	|	ИсходныеДанные.ГоловнаяОрганизация,
	|	ИсходныеДанные.КодВычета,
	|	ЕСТЬNULL(Вычет320.Сумма, 0) КАК СуммаВычета320
	|ПОМЕСТИТЬ ВТСуммыВычетов
	|ИЗ
	|	ВТИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанные КАК Вычет320
	|		ПО ИсходныеДанные.ФизическоеЛицо = Вычет320.ФизическоеЛицо
	|			И (Вычет320.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.ФизическоеЛицо,
	|	СУММА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Сумма) КАК ПримененныйВычет
	|ПОМЕСТИТЬ ВТЗарегистрированоРанееВычетов
	|ИЗ
	|	ВТИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК НДФЛПредоставленныеСтандартныеВычетыФизЛиц
	|		ПО ИсходныеДанные.ФизическоеЛицо = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо
	|			И ИсходныеДанные.ГоловнаяОрганизация = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ГоловнаяОрганизация
	|			И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Регистратор <> &Ссылка)
	|			И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(ИсходныеДанные.МесяцНалоговогоПериода, ГОД) И ИсходныеДанные.МесяцНалоговогоПериода)
	|			И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	|			И (НАЧАЛОПЕРИОДА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Период, МЕСЯЦ) <= &МесяцДатыОперации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ИсходныеДанные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320)
	|			ТОГДА ВЫБОР
	|					КОГДА ИсходныеДанные.Сумма + ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|						ТОГДА ИсходныеДанные.Сумма
	|					КОГДА ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|						ТОГДА 120000 - ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИсходныеДанные.Сумма + ИсходныеДанные.СуммаВычета320 + ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|					ТОГДА ИсходныеДанные.Сумма
	|				КОГДА ИсходныеДанные.СуммаВычета320 + ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) < 120000
	|					ТОГДА 120000 - ЕСТЬNULL(ЗарегистрированоРанееВычетов.ПримененныйВычет, 0) - ИсходныеДанные.СуммаВычета320
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ИсходныеДанные.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ИсходныеДанные.КодВычета,
	|	ЕСТЬNULL(ДанныеОСотруднике.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение
	|ИЗ
	|	ВТСуммыВычетов КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированоРанееВычетов КАК ЗарегистрированоРанееВычетов
	|		ПО ИсходныеДанные.ФизическоеЛицо = ЗарегистрированоРанееВычетов.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|			ПО Сотрудники.Сотрудник = ДанныеОСотруднике.Сотрудник
	|		ПО ИсходныеДанные.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеСотрудникиФизическихЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИсходныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗарегистрированоРанееВычетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСуммыВычетов";
	Результаты = Запрос.ВыполнитьПакет();
	
	СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, Результаты[2].Выгрузить(), , , Записывать, ОкончательныйРасчет);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления.
//		Удержания - таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым.
//				КатегорияУдержания - тип ПеречислениеСсылка.КатегорииУдержаний.
//				Удержание - тип ПланВидовРасчетаСсылка.Удержания.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСоциальныеВычетыПоУдержаниям(Регистратор, Движения, Отказ, Организация, ДатаОперации, МесяцНачисления, Удержания, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт 

	Если Удержания.Количество() = 0 Тогда // данных не оказалось
		Возврат	
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("КатегорияУдержания");
	СтруктураПоиска.КатегорияУдержания = Перечисления.КатегорииУдержаний.ДобровольныеВзносыВНПФ;
	Вычеты = Удержания.Скопировать(СтруктураПоиска);
	СтруктураПоиска.КатегорияУдержания = Перечисления.КатегорииУдержаний.ДСВ;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Удержания.Скопировать(СтруктураПоиска), Вычеты);

	Если Вычеты.Количество() = 0 Тогда
		Возврат	
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Удержания", Вычеты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Удержание КАК Удержание,
	|	Удержания.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержания
	|ИЗ
	|	&Удержания КАК Удержания
	|";
	Запрос.Выполнить();
	
	СформироватьСоциальныеВычетыПоВременнойТаблице(Регистратор, Движения, Отказ, Организация, ДатаОперации, МесяцНачисления, Запрос.МенеджерВременныхТаблиц, Записывать, ОкончательныйРасчет);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДанныеДокумента - Таблица значений с колонками
//			ФизическоеЛицо: должно быть непустым
//         	МесяцНалоговогоПериода: должно быть непустым.
//			Подразделение, тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//			необязательные колонки с суммами налогов и вычетов:
//          	НалогПоСтавке13, НалогПоСтавке09, НалогПоСтавке35
//              ПримененныйВычетЛичный
//              ПримененныйВычетНаДетей, ПримененныйВычетНаДетейДвойной, ПримененныйВычетНаДетейДвойнойВторой 
//              ПримененныйВычетНаВторогоРебенка, ПримененныйВычетНаВторогоРебенкаДвойной, ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//              ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//              ПримененныйВычетНаДетейИнвалидов, ПримененныйВычетНаДетейИнвалидовДвойной, ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//              ПримененныйВычетИмущественныйРасходы, ПримененныйВычетИмущественныйПроцентыПоКредитам, ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьНалогиВычеты(Движения, Отказ, Организация, ДатаОперации, ДанныеДокумента, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ДанныеДокумента = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(ДанныеДокумента.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации); 
	
	КолонкиДанных = ДанныеДокумента.Колонки;
	
	СтрокИсчисленногоНалога = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Количество();
	СтрокЗачтеноАвансовыхПлатежей = Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Количество();
	
	Если КолонкиДанных.Найти("НалогПоСтавке13") <> Неопределено Тогда
		СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеДокумента, "НалогПоСтавке13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("ЗачтеноАвансовыхПлатежейПоСтавке13") <> Неопределено Тогда
		СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеДокумента, "ЗачтеноАвансовыхПлатежейПоСтавке13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("НалогПоСтавке09") <> Неопределено Тогда
		СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеДокумента, "НалогПоСтавке09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("ЗачтеноАвансовыхПлатежейПоСтавке09") <> Неопределено Тогда
		СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеДокумента, "ЗачтеноАвансовыхПлатежейПоСтавке09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("НалогПоСтавке35") <> Неопределено Тогда
		СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеДокумента, "НалогПоСтавке35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("ЗачтеноАвансовыхПлатежейПоСтавке35") <> Неопределено Тогда
		СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, НалогиИзДанныхДокумента(ДанныеДокумента, "ЗачтеноАвансовыхПлатежейПоСтавке35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	Если КолонкиДанных.Найти("ПримененныйВычетЛичный") <> Неопределено Тогда
		СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ЛичныйВычетИзДанныхДокумента(ДанныеДокумента, "ПримененныйВычетЛичный", "ПримененныйВычетЛичныйКодВычета"), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Ложь, ОкончательныйРасчет);
	КонецЕсли;
	
	Если СтрокИсчисленногоНалога < Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Количество() Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрокЗачтеноАвансовыхПлатежей < Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Количество() Тогда
		Если Записывать Тогда
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = ВидыВычетовПоПолямТаблицы();
	
	// Вычеты на детей
	МассивВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыВычетовНаДетей());
	Для каждого ИмяРесурса Из МассивВычетов Цикл
		Если КолонкиДанных.Найти(ИмяРесурса) <> Неопределено Тогда
			СформироватьСтандартныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, СтандартныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяРесурса, ВидыВычетов[ИмяРесурса]), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Записывать, ОкончательныйРасчет);
		КонецЕсли;
	КонецЦикла;
	
	// Имущественные вычеты
	МассивВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыИмущественныхВычетов());
	Для каждого ИмяРесурса Из МассивВычетов Цикл
		Если КолонкиДанных.Найти(ИмяРесурса) <> Неопределено Тогда
			СформироватьПредоставленныеИмущественныеВычетыПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИмущественныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяРесурса, ВидыВычетов[ИмяРесурса]), СоответствиеПодразделенийИРегистраций, РегистрацияВНалоговомОргане, Записывать, ОкончательныйРасчет);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		ДанныеДокумента - Таблица значений с колонками
//			МесяцРегистрации
//			ФизическоеЛицо
//			ГоловнаяОрганизация
//			ИзменитьВычетыНаДетей
//			ВычетыНаДетей: таблица значений, соответствующая по структуре регистру СтандартныеВычетыНаДетейНДФЛ
//			ИзменитьЛичныйВычет
//			КодВычетаЛичный.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПрименениеСтандартныхВычетов(Движения, Отказ, ДанныеДокумента, Записывать = Ложь) Экспорт
	
	Если ДанныеДокумента = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ЗаписьОПримененииВычета						= Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Добавить();
	ЗаписьОПримененииВычета.Период				= ДанныеДокумента.МесяцРегистрации;
	ЗаписьОПримененииВычета.ФизическоеЛицо		= ДанныеДокумента.ФизическоеЛицо;
	ЗаписьОПримененииВычета.ГоловнаяОрганизация	= ДанныеДокумента.ГоловнаяОрганизация;
	Если Записывать Тогда
		Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Записать();
		Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ПрименениеСтандартныхВычетовПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	Если ДанныеДокумента.ИзменитьВычетыНаДетей Тогда
		Для Каждого ВычетНаДетей Из ДанныеДокумента.ВычетыНаДетей Цикл
			ЗаполнитьЗначенияСвойств(Движения.СтандартныеВычетыНаДетейНДФЛ.Добавить(), ВычетНаДетей);
		КонецЦикла;
		Если Записывать Тогда
			Движения.СтандартныеВычетыНаДетейНДФЛ.Записать();
			Движения.СтандартныеВычетыНаДетейНДФЛ.Записывать = Ложь;
		Иначе
			Движения.СтандартныеВычетыНаДетейНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеДокумента.ИзменитьЛичныйВычет Тогда
		ЗаписьОЛичномВычете					= Движения.СтандартныеВычетыФизическихЛицНДФЛ.Добавить();
		ЗаписьОЛичномВычете.Период			= ДанныеДокумента.МесяцРегистрации;
		ЗаписьОЛичномВычете.ФизическоеЛицо	= ДанныеДокумента.ФизическоеЛицо;
		ЗаписьОЛичномВычете.КодВычетаЛичный	= ДанныеДокумента.КодВычетаЛичный;
		Если Записывать Тогда
			Движения.СтандартныеВычетыФизическихЛицНДФЛ.Записать();
			Движения.СтандартныеВычетыФизическихЛицНДФЛ.Записывать = Ложь;
		Иначе
			Движения.СтандартныеВычетыФизическихЛицНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		АвансовыеПлатежи - ТаблицаЗначений - таблица с колонками:
//				ФизическоеЛицо: должно быть непустым
//          	Год: должно быть непустым.
//				Сумма
//		Записывать - булево  - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьАвансовыйПлатежИностранца(Движения, Отказ, Организация, ДатаОперации, АвансовыеПлатежи, Записывать = Ложь) Экспорт
	
	Если АвансовыеПлатежи = Неопределено Или ДатаОперации < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого АвансовыйПлатеж Из АвансовыеПлатежи Цикл
		Если АвансовыйПлатеж.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, АвансовыйПлатеж)
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу 
//			ВТДанныеОЗачтенныхПлатежах с полями
//				ФизическоеЛицо: должно быть непустым
//      	   	МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				СтавкаНалогообложенияРезидента
//				Подразделение
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИспользованныеАвансовыеПлатежиПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц = Неопределено Или ДатаОперации < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(Вычеты.МесяцНалоговогоПериода) КАК Год,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.Сумма,
	|	Вычеты.Подразделение,
	|	Вычеты.СтавкаНалогообложенияРезидента,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОЗачтенныхПлатежах КАК Вычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|				&ДатаОперации,
	|				СтруктурнаяЕдиница В
	|					(ВЫБРАТЬ
	|						Начисления.Подразделение
	|					ИЗ
	|						ВТДанныеОЗачтенныхПлатежах КАК Начисления)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	|		ПО Вычеты.Подразделение = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	Вычеты.Сумма <> 0";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане); 
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, Выборка, Перечисления.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, Выборка.РегистрацияВНалоговомОргане, РегистрацияВНалоговомОргане);
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
		Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		АвансовыеПлатежи - ТаблицаЗначений - с колонками:
//				ФизическоеЛицо: должно быть непустым
//				Год: должно быть непустым
//				Подразделение - ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				СтавкаНалогообложенияРезидента
//				МесяцНалоговогоПериода
//      СоответствиеПодразделенийИРегистраций - Соответствие - необязательный параметр, содержит предварительно построенное
//                                              соответствие подразделений и их регистраций в налоговом органе.
//      РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИспользованныеАвансовыеПлатежиПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, АвансовыеПлатежи, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если АвансовыеПлатежи = Неопределено Или ДатаОперации < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	Если СоответствиеПодразделенийИРегистраций = Неопределено Тогда
		СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(АвансовыеПлатежи.ВыгрузитьКолонку("Подразделение"), ДатаОперации);
	КонецЕсли;
	Если РегистрацияВНалоговомОргане = Неопределено Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из АвансовыеПлатежи Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		
		НоваяСтрока = СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, ОкончательныйРасчет);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
		
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей);
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(НоваяСтрока, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
		
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записать();
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует таблицу расчетной базы НДФЛ за указанный месяц.
// Параметры:
//		Организация
//		МесяцРасчета
//      ФизическиеЛицаМассив - содержит список людей по которым выполняется распределение НДФЛ.
//		РегистраторОграниченияБазы - документ, движениями которого ограничивается получаемая база для распределения.
//
//  Возвращаемое значение:
//  	таблица значений с колонками
//
Функция ПолучитьБазуРасчетаНДФЛ(Организация, МесяцРасчета, ФизическиеЛицаМассив, РегистраторОграниченияБазы = НеОпределено) Экспорт 

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(МесяцРасчета));
    Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛицаМассив);

	Запрос.Текст = 
    "ВЫБРАТЬ
    |	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
    |	СУММА(СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета) КАК Сумма,
    |	СведенияОДоходах.Сотрудник КАК Сотрудник,
    |	СведенияОДоходах.ПодразделениеСотрудника КАК Подразделение
    |ИЗ
    |	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
    |ГДЕ
    |	СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
    |	И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
    |	И НЕ СведенияОДоходах.ДоходМежрасчетногоПериода
    |	И СведенияОДоходах.Организация = &Организация
    |	И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
    |	И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
    |	И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)
    |
    |СГРУППИРОВАТЬ ПО
    |	СведенияОДоходах.ФизическоеЛицо,
    |	СведенияОДоходах.Сотрудник,
    |	СведенияОДоходах.ПодразделениеСотрудника";

	// Если базу расчета НДФЛ получаем в пределах движений регистратора (т.е. распределение НДФЛ межрасчетного документа).
	Если РегистраторОграниченияБазы <> НеОпределено Тогда
		Запрос.УстановитьПараметр("РегистраторОграниченияБазы", РегистраторОграниченияБазы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ СведенияОДоходах.ДоходМежрасчетногоПериода", "Регистратор = &РегистраторОграниченияБазы");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Предназначена для расчета НДФЛ по записанным в учете данным.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор для которого выполняется расчет НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета - дата -
//      МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу со списком людей, по которым выполняется 
//								расчет НДФЛ
//      	ВТФизическиеЛица 
//				ФизическоеЛицо
//		ПервыйМесяцНалоговогоПериода - дата -
//		ПоследнийМесяцНалоговогоПериода - дата -
//		ИсключатьДоходыРегистратора - булево - 
//		ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//		                               (соответствует значению Истина).
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по
//		                                         Регистратору.
//
//  Возвращаемое значение - таблица значений с колонками
//			ФизическоеЛицо
//			МесяцНалоговогоПериода.
//			Подразделение
//			КодВычетаЛичный
//			ПримененныйВычетЛичный
//			ПримененныйВычетНаДетей
//			ПримененныйВычетНаДетейДвойной
//			ПримененныйВычетНаДетейДвойнойВторой
//			ПримененныйВычетНаТретьегоРебенка
//			ПримененныйВычетНаТретьегоРебенкаДвойной
//			ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//			ПримененныйВычетНаВторогоРебенка
//			ПримененныйВычетНаВторогоРебенкаДвойной
//			ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//			ПримененныйВычетНаДетейИнвалидов
//			ПримененныйВычетНаДетейИнвалидовДвойной
//			ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//			НалогПоСтавке13
//			ЗачтеноАвансовыхПлатежейПоСтавке13
//			НалогПоСтавке13КЗачетуВозврату
//			ПримененныйВычетИмущественныйРасходы
//			ПримененныйВычетИмущественныйПроцентыПоКредитам
//			ПримененныйВычетИмущественныйПроцентыПриПерекредитовании.
//
Функция РассчитатьНалогПоОсновнойСтавке(Регистратор, Организация, МесяцРасчета, МенеджерВременныхТаблиц, Знач ПервыйМесяцНалоговогоПериода = Неопределено, Знач ПоследнийМесяцНалоговогоПериода = Неопределено, ИсключатьДоходыРегистратора = Истина, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяцаРасчета",НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("НачалоГодаРасчета",НачалоГода(МесяцРасчета));
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДоходыРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", ДатаЗакона285ФЗ());
	
	КодыВычетовРезидентов = Новый Массив;
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код403);
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);
	Запрос.УстановитьПараметр("КодыВычетовРезидентов", КодыВычетовРезидентов);
	
	ЭтоРасчетПоДоходамТекущегоМесяца = ПервыйМесяцНалоговогоПериода = Неопределено Или ПоследнийМесяцНалоговогоПериода = Неопределено;
	
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда

		// Получим ПервыйМесяцНалоговогоПериода и ПоследнийМесяцНалоговогоПериода.
		Если ОкончательныйРасчет Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МАКСИМУМ(СведенияОДоходах.МесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
			|	МИНИМУМ(СведенияОДоходах.МесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета
			|	И СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
			|	И СведенияОДоходах.ФизическоеЛицо В
			|			(ВЫБРАТЬ
			|				СписокСотрудников.ФизическоеЛицо
			|			ИЗ
			|				ВТФизическиеЛица КАК СписокСотрудников)";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
			|	МИНИМУМ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
			|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета
			|	И СведенияОДоходахНДФЛ.ФизическоеЛицо В
			|			(ВЫБРАТЬ
			|				СписокСотрудников.ФизическоеЛицо
			|			ИЗ
			|				ВТФизическиеЛица КАК СписокСотрудников)
			|	И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода";
		КонецЕсли;
		Выборка = Запрос.Выполнить().Выбрать();

		Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ПоследнийМесяцНалоговогоПериода) Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.ПоследнийМесяцНалоговогоПериода);
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.ПервыйМесяцНалоговогоПериода);
		Иначе
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(МесяцРасчета);
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериодаРасчета", КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("КонецГодаПериодаРасчета", КонецГода(ПоследнийМесяцНалоговогоПериода));
	
	// Таблица ВТДатыПоМесяцам: список дат налоговых периодов, в которых рассчитывается налог.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоМесяца(ПоследнийМесяцНалоговогоПериода),,,"ВТДатыПоМесяцам");
	
	// Таблица ВТПериодыПоГодам: список налоговых периодов (в виде даты начала года), в которых рассчитывается налог.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоГода(ПоследнийМесяцНалоговогоПериода), "ГОД", "НачалоНалоговогоПериода","ВТПериодыПоГодам");
	
	// Таблица ВТСтавкиНалогаЧислом: список значений перечисления НДФЛСтавки и соответствующие числовые значения в долях
	// единицы.
	СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
	
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Месяцы.Период КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода
		|ПОМЕСТИТЬ ВТПериодыНалогаНаДоходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|		МАКСИМУМ(НАЧАЛОПЕРИОДА(ПериодыДохода.Период, МЕСЯЦ)) КАК ПериодМакс,
		|		МИНИМУМ(ВЫБОР
		|				КОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.ПериодРегистрации, МЕСЯЦ) = &НачалоМесяцаРасчета
		|					ТОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.Период, ГОД)
		|				ИНАЧЕ &НачалоГодаРасчета
		|			КОНЕЦ) КАК ПериодМин
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Доходы.МесяцНалоговогоПериода КАК Период,
		|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|			Доходы.Период КАК ПериодРегистрации
		|		ИЗ
		|			РегистрНакопления.СведенияОДоходахНДФЛ КАК Доходы
		|		ГДЕ
		|			Доходы.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета
		|			И &ОкончательныйРасчетДоходы
		|			И Доходы.Регистратор <> &ИсключаемыйРегистратор
		|			И Доходы.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|			И Доходы.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|			И НЕ Доходы.КодДохода.НеОблагаетсяУНалоговогоАгента
		|			И Доходы.ФизическоеЛицо В
		|					(ВЫБРАТЬ
		|						СписокСотрудников.ФизическоеЛицо
		|					ИЗ
		|						ВТФизическиеЛица КАК СписокСотрудников)) КАК ПериодыДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПериодыДохода.ФизическоеЛицо) КАК ПериодыДохода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
		|		ПО (Месяцы.Период МЕЖДУ ПериодыДохода.ПериодМин И ПериодыДохода.ПериодМакс)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо";
		Если ОкончательныйРасчет Тогда
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
		Иначе
			Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы","(Доходы.ДоходМежрасчетногоПериода ИЛИ Доходы.Период < &НачалоМесяцаРасчета)");
		КонецЕсли;
	Иначе 
		// Расчет за конкретные месяцы налогового периода.
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Работники.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Месяцы.Период КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода
		|ПОМЕСТИТЬ ВТПериодыНалогаНаДоходы
		|ИЗ
		|	ВТФизическиеЛица КАК Работники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
		|		ПО (ИСТИНА)";
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыНалогаНаДоходы.ФизическоеЛицо,
	|	ПериодыНалогаНаДоходы.МесяцНалоговогоПериода КАК Период
	|ПОМЕСТИТЬ ВТПериодыСрезаВычетов
	|ИЗ
	|	ВТПериодыНалогаНаДоходы КАК ПериодыНалогаНаДоходы";
	Запрос.Выполнить();
	
	СоздатьВТСтандартныеВычетыПоНДФЛЗаПериод(Запрос.МенеджерВременныхТаблиц, Ложь, НачалоМесяца(МесяцРасчета), "ВТПериодыСрезаВычетов");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтандартныеВычетыПоНДФЛЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтандартныеВычетыПоНДФЛЗаПериод.Месяц КАК МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(СтандартныеВычетыПоНДФЛЗаПериод.Месяц, ГОД) КАК НачалоГодаНалоговогоПериода,
	|	СтандартныеВычетыПоНДФЛЗаПериод.КодВычета КАК КодВычета,
	|	СтандартныеВычетыПоНДФЛЗаПериод.Количество КАК КоличествоДетей
	|ПОМЕСТИТЬ ВТПраваНаВычетыНаДетей
	|ИЗ
	|	ВТСтандартныеВычетыПоНДФЛЗаПериод КАК СтандартныеВычетыПоНДФЛЗаПериод
	|ГДЕ
	|	НЕ СтандартныеВычетыПоНДФЛЗаПериод.ЛичныйВычет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтандартныеВычетыПоНДФЛЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтандартныеВычетыПоНДФЛЗаПериод.Месяц КАК МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(СтандартныеВычетыПоНДФЛЗаПериод.Месяц, ГОД) КАК НачалоГодаНалоговогоПериода,
	|	СтандартныеВычетыПоНДФЛЗаПериод.КодВычета КАК КодВычета
	|ПОМЕСТИТЬ ВТПраваНаЛичныеВычеты
	|ИЗ
	|	ВТСтандартныеВычетыПоНДФЛЗаПериод КАК СтандартныеВычетыПоНДФЛЗаПериод
	|ГДЕ
	|	СтандартныеВычетыПоНДФЛЗаПериод.ЛичныйВычет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыРегистра.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА ПериодыРегистра.МесяцНалоговогоПериода < &ДатаЗакона285ФЗ
	|				И НЕ ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы))
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РезидентРФ
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецГода
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		МАКСИМУМ(СтатусНалогоплательщика.Период) КАК Период
	|	ИЗ
	|		ВТПериодыНалогаНаДоходы КАК Физлица
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|			ПО Физлица.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	|				И (СтатусНалогоплательщика.Период <= ВЫБОР
	|					КОГДА Физлица.КонецГодаНалоговогоПериода > &КонецМесяцаРасчета
	|						ТОГДА &КонецМесяцаРасчета
	|					ИНАЧЕ Физлица.КонецГодаНалоговогоПериода
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Физлица.ФизическоеЛицо,
	|		Физлица.МесяцНалоговогоПериода) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|		ПО ПериодыРегистра.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	|			И ПериодыРегистра.Период = СтатусНалогоплательщика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыРегистра.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА ПериодыРегистра.МесяцНалоговогоПериода < &ДатаЗакона285ФЗ
	|				И НЕ ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы))
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РезидентРФ
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецМесяца
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		МАКСИМУМ(СтатусНалогоплательщика.Период) КАК Период
	|	ИЗ
	|		ВТПериодыНалогаНаДоходы КАК Физлица
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|			ПО Физлица.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	|				И (СтатусНалогоплательщика.Период <= ВЫБОР
	|					КОГДА Физлица.МесяцНалоговогоПериода > &КонецМесяцаРасчета
	|						ТОГДА &КонецМесяцаРасчета
	|					ИНАЧЕ Физлица.МесяцНалоговогоПериода
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Физлица.ФизическоеЛицо,
	|		Физлица.МесяцНалоговогоПериода) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|		ПО ПериодыРегистра.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	|			И ПериодыРегистра.Период = СтатусНалогоплательщика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.НачалоГодаНалоговогоПериода,
	|	Периоды.КонецГодаНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РезидентствоФизлицНаКонецГода.РезидентРФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ РезидентствоФизлицНаКонецМесяца.РезидентРФ
	|	КОНЕЦ КАК Резидент
	|ПОМЕСТИТЬ ВТПериодыФизлиц
	|ИЗ
	|	ВТПериодыНалогаНаДоходы КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецМесяца КАК РезидентствоФизлицНаКонецМесяца
	|		ПО Периоды.ФизическоеЛицо = РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = РезидентствоФизлицНаКонецМесяца.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецГода КАК РезидентствоФизлицНаКонецГода
	|		ПО Периоды.ФизическоеЛицо = РезидентствоФизлицНаКонецГода.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = РезидентствоФизлицНаКонецГода.МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРегистра.НачалоНалоговогоПериода КАК НачалоНалоговогоПериода,
	|	ДатыРегистра.КодВычета КАК КодВычета,
	|	ЕСТЬNULL(РазмерВычетов.Размер, 0) КАК Размер,
	|	ЕСТЬNULL(РазмерВычетов.ОграничениеПоДоходам, 0) КАК ОграничениеПоДоходам
	|ПОМЕСТИТЬ ВТРазмерыСтандартныхВычетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.НачалоНалоговогоПериода КАК НачалоНалоговогоПериода,
	|		ВидыВычетов.Ссылка КАК КодВычета,
	|		МАКСИМУМ(РазмерВычетов.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериодыПоГодам КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыВычетовНДФЛ КАК ВидыВычетов
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерВычетовНДФЛ КАК РазмерВычетов
	|			ПО (ВидыВычетов.Ссылка = РазмерВычетов.КодВычета)
	|				И Периоды.НачалоНалоговогоПериода >= РазмерВычетов.Период
	|	ГДЕ
	|		ВидыВычетов.ГруппаВычета В (ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Стандартные), ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.НачалоНалоговогоПериода,
	|		ВидыВычетов.Ссылка) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерВычетовНДФЛ КАК РазмерВычетов
	|		ПО ДатыРегистра.ПериодРегистра = РазмерВычетов.Период
	|			И ДатыРегистра.КодВычета = РазмерВычетов.КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДатыРегистра.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименятьВычеты
	|ПОМЕСТИТЬ ВТПрименениеСтандартныхВычетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПрименениеВычетов.Период) КАК ПериодСреза,
	|		Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|		Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода
	|	ИЗ
	|		ВТПериодыФизлиц КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛ КАК ПрименениеВычетов
	|			ПО Периоды.МесяцНалоговогоПериода >= ПрименениеВычетов.Период
	|				И Периоды.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизическоеЛицо,
	|		Периоды.МесяцНалоговогоПериода) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛ КАК ПрименениеВычетов
	|		ПО ДатыРегистра.ПериодСреза = ПрименениеВычетов.Период
	|			И ДатыРегистра.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.КодВычета,
	|	Вычеты.НалоговыйПериод,
	|	СУММА(Вычеты.Размер) КАК Размер
	|ПОМЕСТИТЬ ВТПравоНаИмущественныеВычеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(Обороты.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		Обороты.КодВычета КАК КодВычета,
	|		Обороты.Год КАК НалоговыйПериод,
	|		Обороты.СуммаПриход КАК Размер
	|	ИЗ
	|		РегистрНакопления.ИмущественныеВычетыНДФЛ.Обороты(
	|				&НачалоГодаПериодаРасчета,
	|				&КонецМесяцаРасчета,
	|				Месяц,
	|				ФизическоеЛицо В
	|						(ВЫБРАТЬ
	|							ФизЛица.ФизическоеЛицо
	|						ИЗ
	|							ВТФизическиеЛица КАК ФизЛица)
	|					И ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК Обороты
	|	ГДЕ
	|		Обороты.Год = ГОД(Обороты.Период)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРегистратора.ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(ДвиженияРегистратора.Период, МЕСЯЦ),
	|		ДвиженияРегистратора.КодВычета,
	|		ДвиженияРегистратора.Год,
	|		ВЫБОР
	|			КОГДА ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияРегистратора.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ДвиженияРегистратора
	|	ГДЕ
	|		ДвиженияРегистратора.Регистратор = &Регистратор
	|		И ДвиженияРегистратора.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					ФизЛица.ФизическоеЛицо
	|				ИЗ
	|					ВТФизическиеЛица КАК ФизЛица)
	|		И ДвиженияРегистратора.Год = ГОД(ДвиженияРегистратора.Период)) КАК Вычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Вычеты.ФизическоеЛицо,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.КодВычета,
	|	Вычеты.НалоговыйПериод
	|
	|ИМЕЮЩИЕ
	|	СУММА(Вычеты.Размер) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУчета.ФизическоеЛицо,
	|	ДанныеУчета.МесяцНалоговогоПериода,
	|	ДанныеУчета.СтавкаНалогообложения,
	|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ,
	|	ДанныеУчета.КодВычета,
	|	СУММА(ДанныеУчета.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|	СУММА(ДанныеУчета.СуммаВычетаОборот) КАК СуммаВычетаОборот
	|ПОМЕСТИТЬ ВТДоходыФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(Обороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		Обороты.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|		Обороты.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|		Обороты.КодВычета КАК КодВычета,
	|		Обороты.СуммаДохода КАК СуммаДоходаОборот,
	|		Обороты.СуммаВычета КАК СуммаВычетаОборот
	|	ИЗ
	|		РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|	ГДЕ
	|		Обороты.Период <= &КонецМесяцаРасчета
	|		И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И Обороты.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|		И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И Обороты.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					СписокСотрудников.ФизическоеЛицо
	|				ИЗ
	|					ВТФизическиеЛица КАК СписокСотрудников)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|		СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|		СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|		СведенияОДоходахНДФЛ.КодВычета,
	|		-СведенияОДоходахНДФЛ.СуммаДохода,
	|		-СведенияОДоходахНДФЛ.СуммаВычета
	|	ИЗ
	|		РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|	ГДЕ
	|		СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента
	|		И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И СведенияОДоходахНДФЛ.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					СписокСотрудников.ФизическоеЛицо
	|				ИЗ
	|					ВТФизическиеЛица КАК СписокСотрудников)
	|		И СведенияОДоходахНДФЛ.Регистратор = &ИсключаемыйРегистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|		СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|		СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|		СведенияОДоходахНДФЛ.КодВычета,
	|		-СведенияОДоходахНДФЛ.СуммаДохода,
	|		-СведенияОДоходахНДФЛ.СуммаВычета
	|	ИЗ
	|		РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|	ГДЕ
	|		НЕ &ОкончательныйРасчет
	|		И НЕ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|		И СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента
	|		И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор
	|		И СведенияОДоходахНДФЛ.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					СписокСотрудников.ФизическоеЛицо
	|				ИЗ
	|					ВТФизическиеЛица КАК СписокСотрудников)
	|		И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета) КАК ДанныеУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеУчета.ФизическоеЛицо,
	|	ДанныеУчета.МесяцНалоговогоПериода,
	|	ДанныеУчета.СтавкаНалогообложения,
	|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ,
	|	ДанныеУчета.КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычеты
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &КонецМесяцаРасчета
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				СписокСотрудников.ФизическоеЛицо
	|			ИЗ
	|				ВТФизическиеЛица КАК СписокСотрудников)
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор <> &Регистратор
	|	И &ОкончательныйРасчетВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияРегистратора.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ДвиженияРегистратора.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ДвиженияРегистратора.КодВычета,
	|	СУММА(ДвиженияРегистратора.Сумма) КАК Сумма,
	|	ДвиженияРегистратора.Подразделение
	|ПОМЕСТИТЬ ВТПредоставленоИмущественныхВычетов
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ДвиженияРегистратора
	|ГДЕ
	|	ДвиженияРегистратора.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ДвиженияРегистратора.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И ДвиженияРегистратора.Регистратор <> &Регистратор
	|	И ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДвиженияРегистратора.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ФизЛица.ФизическоеЛицо
	|			ИЗ
	|				ВТФизическиеЛица КАК ФизЛица)
	|	И &ОкончательныйРасчетВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияРегистратора.Подразделение,
	|	ДвиженияРегистратора.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ДвиженияРегистратора.Период, МЕСЯЦ),
	|	ДвиженияРегистратора.КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Резидент
	|				ТОГДА ЕСТЬNULL(ПредоставленныеВычетыФизЛиц.СуммаОборот, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТСоциальныеВычетыПомесячно
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК ПредоставленныеВычетыФизЛиц
	|		ПО Периоды.ФизическоеЛицо = ПредоставленныеВычетыФизЛиц.ФизическоеЛицо
	|			И (ПредоставленныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	|			И Периоды.МесяцНалоговогоПериода = ПредоставленныеВычетыФизЛиц.МесяцНалоговогоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.Резидент,
	|	ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		КОГДА Обороты.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|		ИНАЧЕ Обороты.СтавкаНалогообложения
	|	КОНЕЦ КАК СтавкаНалогообложенияНеРезидента,
	|	ЕСТЬNULL(Обороты.СуммаДоходаОборот, 0) - ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	|		КОГДА Обороты.КодВычета.НеПредоставляетсяНерезидентам
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	|	КОНЕЦ КАК ДоходыБезВычетов
	|ПОМЕСТИТЬ ВТДоходыСУчетомВычетовКДоходам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФизлиц КАК Обороты
	|		ПО Периоды.ФизическоеЛицо = Обороты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = Обороты.МесяцНалоговогоПериода
	|			И (Периоды.Резидент
	|				ИЛИ НЕ Обороты.ИсточникДоходаЗаПределамиРФ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0) КАК ОблагаемыйДоход
	|ПОМЕСТИТЬ ВТДоходыРезидентовПоМесяцам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (Периоды.Резидент)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0) КАК ОблагаемыйДоходЗаГод
	|ПОМЕСТИТЬ ВТДоходыРезидентовНарастающимЗаГод
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (Периоды.Резидент)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВычетыЛичные.КодВычета КАК КодВычетаЛичный,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ЕСТЬNULL(РазмерВычетовЛичный.ОграничениеПоДоходам, 0)
	|					ИЛИ ЕСТЬNULL(РазмерВычетовЛичный.ОграничениеПоДоходам, 0) = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовЛичный.Размер, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыЛичные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0) * ЕСТЬNULL(ВычетыНаДетей.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетские,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейДвойные.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейДвойныеВторые.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаТретьегоРебенка.Размер, 0) * ЕСТЬNULL(ВычетыНаТретьегоРебенка.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаТретьегоРебенкаДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаТретьегоРебенкаДвойные.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаТретьегоРебенкаДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаТретьегоРебенкаДвойныеВторые.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаВторогоРебенка.Размер, 0) * ЕСТЬNULL(ВычетыНаВторогоРебенка.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенка,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаВторогоРебенкаДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаВторогоРебенкаДвойные.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаВторогоРебенкаДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаВторогоРебенкаДвойныеВторые.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидов.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидов.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовДвойные.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.Резидент
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовДвойныеВторые.КоличествоДетей, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	РазмерВычетовЛичный.ОграничениеПоДоходам КАК ОграничениеПоДоходамЛичные,
	|	РазмерВычетовНаДетей.ОграничениеПоДоходам КАК ОграничениеПоДоходамНаДетей
	|ПОМЕСТИТЬ ВТПраваНаСтандартныеВычетыПоМесяцам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименениеСтандартныхВычетов КАК ПрименениеВычетов
	|		ПО Периоды.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПрименениеВычетов.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетей
	|		ПО (РазмерВычетовНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108))
	|			И Периоды.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетей.НачалоНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаЛичныеВычеты КАК ВычетыЛичные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовЛичный
	|			ПО ВычетыЛичные.КодВычета = РазмерВычетовЛичный.КодВычета
	|				И ВычетыЛичные.НачалоГодаНалоговогоПериода = РазмерВычетовЛичный.НачалоНалоговогоПериода
	|		ПО Периоды.МесяцНалоговогоПериода = ВычетыЛичные.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ВычетыЛичные.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетей
	|		ПО (ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108))
	|			И Периоды.ФизическоеЛицо = ВычетыНаДетей.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетей.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейДвойные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейДвойные
	|			ПО ВычетыНаДетейДвойные.КодВычета = РазмерВычетовНаДетейДвойные.КодВычета
	|				И ВычетыНаДетейДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейДвойные.НачалоНалоговогоПериода
	|		ПО (ВычетыНаДетейДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110))
	|			И Периоды.ФизическоеЛицо = ВычетыНаДетейДвойные.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейДвойные.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейДвойныеВторые
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейДвойныеВторые
	|			ПО ВычетыНаДетейДвойныеВторые.КодВычета = РазмерВычетовНаДетейДвойныеВторые.КодВычета
	|				И ВычетыНаДетейДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейДвойныеВторые.НачалоНалоговогоПериода
	|		ПО (ВычетыНаДетейДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111))
	|			И Периоды.ФизическоеЛицо = ВычетыНаДетейДвойныеВторые.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейДвойныеВторые.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаТретьегоРебенка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаТретьегоРебенка
	|			ПО ВычетыНаТретьегоРебенка.КодВычета = РазмерВычетовНаТретьегоРебенка.КодВычета
	|				И ВычетыНаТретьегоРебенка.НачалоГодаНалоговогоПериода = РазмерВычетовНаТретьегоРебенка.НачалоНалоговогоПериода
	|		ПО (ВычетыНаТретьегоРебенка.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116))
	|			И Периоды.ФизическоеЛицо = ВычетыНаТретьегоРебенка.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаТретьегоРебенка.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаТретьегоРебенкаДвойные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаТретьегоРебенкаДвойные
	|			ПО ВычетыНаТретьегоРебенкаДвойные.КодВычета = РазмерВычетовНаТретьегоРебенкаДвойные.КодВычета
	|				И ВычетыНаТретьегоРебенкаДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаТретьегоРебенкаДвойные.НачалоНалоговогоПериода
	|		ПО (ВычетыНаТретьегоРебенкаДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120))
	|			И Периоды.ФизическоеЛицо = ВычетыНаТретьегоРебенкаДвойные.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаТретьегоРебенкаДвойные.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаТретьегоРебенкаДвойныеВторые
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаТретьегоРебенкаДвойныеВторые
	|			ПО ВычетыНаТретьегоРебенкаДвойныеВторые.КодВычета = РазмерВычетовНаТретьегоРебенкаДвойныеВторые.КодВычета
	|				И ВычетыНаТретьегоРебенкаДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаТретьегоРебенкаДвойныеВторые.НачалоНалоговогоПериода
	|		ПО (ВычетыНаТретьегоРебенкаДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124))
	|			И Периоды.ФизическоеЛицо = ВычетыНаТретьегоРебенкаДвойныеВторые.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаТретьегоРебенкаДвойныеВторые.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаВторогоРебенка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаВторогоРебенка
	|			ПО ВычетыНаВторогоРебенка.КодВычета = РазмерВычетовНаВторогоРебенка.КодВычета
	|				И ВычетыНаВторогоРебенка.НачалоГодаНалоговогоПериода = РазмерВычетовНаВторогоРебенка.НачалоНалоговогоПериода
	|		ПО (ВычетыНаВторогоРебенка.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115))
	|			И Периоды.ФизическоеЛицо = ВычетыНаВторогоРебенка.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаВторогоРебенка.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаВторогоРебенкаДвойные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаВторогоРебенкаДвойные
	|			ПО ВычетыНаВторогоРебенкаДвойные.КодВычета = РазмерВычетовНаВторогоРебенкаДвойные.КодВычета
	|				И ВычетыНаВторогоРебенкаДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаВторогоРебенкаДвойные.НачалоНалоговогоПериода
	|		ПО (ВычетыНаВторогоРебенкаДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119))
	|			И Периоды.ФизическоеЛицо = ВычетыНаВторогоРебенкаДвойные.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаВторогоРебенкаДвойные.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаВторогоРебенкаДвойныеВторые
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаВторогоРебенкаДвойныеВторые
	|			ПО ВычетыНаВторогоРебенкаДвойныеВторые.КодВычета = РазмерВычетовНаВторогоРебенкаДвойныеВторые.КодВычета
	|				И ВычетыНаВторогоРебенкаДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаВторогоРебенкаДвойныеВторые.НачалоНалоговогоПериода
	|		ПО (ВычетыНаВторогоРебенкаДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123))
	|			И Периоды.ФизическоеЛицо = ВычетыНаВторогоРебенкаДвойныеВторые.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаВторогоРебенкаДвойныеВторые.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидов
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидов
	|			ПО ВычетыНаДетейИнвалидов.КодВычета = РазмерВычетовНаДетейИнвалидов.КодВычета
	|				И ВычетыНаДетейИнвалидов.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидов.НачалоНалоговогоПериода
	|		ПО (ВычетыНаДетейИнвалидов.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109))
	|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидов.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидов.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовДвойные
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовДвойные
	|			ПО ВычетыНаДетейИнвалидовДвойные.КодВычета = РазмерВычетовНаДетейИнвалидовДвойные.КодВычета
	|				И ВычетыНаДетейИнвалидовДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовДвойные.НачалоНалоговогоПериода
	|		ПО (ВычетыНаДетейИнвалидовДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112))
	|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовДвойные.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовДвойные.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовДвойныеВторые
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовДвойныеВторые
	|			ПО ВычетыНаДетейИнвалидовДвойныеВторые.КодВычета = РазмерВычетовНаДетейИнвалидовДвойныеВторые.КодВычета
	|				И ВычетыНаДетейИнвалидовДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовДвойныеВторые.НачалоНалоговогоПериода
	|		ПО (ВычетыНаДетейИнвалидовДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113))
	|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовДвойныеВторые.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовДвойныеВторые.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ КАК ДоходыСПредыдущегоМестаРаботы
	|		ПО Периоды.МесяцНалоговогоПериода = ДоходыСПредыдущегоМестаРаботы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ДоходыСПредыдущегоМестаРаботы.ФизическоеЛицо
	|			И (ДоходыСПредыдущегоМестаРаботы.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыНарастающимИтогом
	|		ПО Периоды.МесяцНалоговогоПериода = ДоходыНарастающимИтогом.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ДоходыНарастающимИтогом.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА Доходы.Резидент
	|					ТОГДА 0
	|				ИНАЧЕ Доходы.ДоходыБезВычетов
	|			КОНЕЦ * СтавкиНалогаВПроцентах.Размер КАК ЧИСЛО(13, 0))) КАК НалогНерезидента
	|ПОМЕСТИТЬ ВТНалогНерезидентов
	|ИЗ
	|	ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаВПроцентах
	|		ПО Доходы.СтавкаНалогообложенияНеРезидента = СтавкиНалогаВПроцентах.СтавкаНалогообложения
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.Резидент,
	|	ДоходыРезидентовПоМесяцам.ОблагаемыйДоход КАК ОблагаемыйДоходЗаМесяц,
	|	ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод КАК ОблагаемыйДоходНарастающимИтогом,
	|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	|	ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НалогНерезидентов.НалогНерезидента, 0)
	|	КОНЕЦ КАК НалогЗаМесяц,
	|	СтавкиНалогаВПроцентах.Размер КАК СтавкаДляРезидента,
	|	ПравоНаСтандартныеВычеты.КодВычетаЛичный,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ЕСТЬNULL(ПолитикаПримененияВычетов.ОсобенностиИсчисленияНДФЛ, ЗНАЧЕНИЕ(Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом)) КАК ОсобенностиУчетаВычетов,
	|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамЛичные,
	|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамНаДетей,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогНерезидентов КАК НалогНерезидентов
	|		ПО Периоды.ФизическоеЛицо = НалогНерезидентов.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = НалогНерезидентов.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК ПолитикаПримененияВычетов
	|		ПО (ПолитикаПримененияВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовПоМесяцам КАК ДоходыРезидентовПоМесяцам
	|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовПоМесяцам.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовПоМесяцам.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаВПроцентах
	|		ПО (СтавкиНалогаВПроцентах.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(ВЫБОР
	|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйРасходы,
	|	СУММА(ВЫБОР
	|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ВЫБОР
	|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПриПерекредитовании
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПравоНаИмущественныеВычеты КАК ПравоНаИмущественныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ПравоНаИмущественныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПравоНаИмущественныеВычеты.МесяцНалоговогоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода, 0) - ВЫБОР
	|			КОГДА ПериодыФизлиц.Резидент
	|				ТОГДА ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	|			КОГДА СведенияОДоходахНДФЛ.КодВычета В (&КодыВычетовРезидентов)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	|		КОНЕЦ КАК СуммаДохода
	|	ИЗ
	|		ВТПериодыФизлиц КАК ПериодыФизлиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|				И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|				И (СведенияОДоходахНДФЛ.Период <= &КонецМесяцаРасчета)
	|				И (ПериодыФизлиц.Резидент
	|					ИЛИ НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ)
	|				И (СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|				И (НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента)
	|				И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)
	|				И (&ОкончательныйРасчетДоходы)) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК НалогПоСтавке13
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период <= &КонецМесяцаРасчета
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				СписокСотрудников.ФизическоеЛицо
	|			ИЗ
	|				ВТФизическиеЛица КАК СписокСотрудников)
	|	И &ОкончательныйРасчетПоРасчетам
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение КАК Подразделение,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	|				ТОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		КОНЕЦ) КАК КодВычетаЛичный,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетЛичный,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетей,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК НДФЛПредоставленныеСтандартныеВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода,
	|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ИмущественныеВычеты.Подразделение КАК Подразделение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйРасходы,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленоИмущественныхВычетов КАК ИмущественныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ИмущественныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ИмущественныеВычеты.МесяцНалоговогоПериода
	|ГДЕ
	|	ИмущественныеВычеты.Подразделение ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ИмущественныеВычеты.Подразделение,
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение";
	
	Если Не ИсключатьДоходыРегистратора Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор", "");
	КонецЕсли;
	
	Если ОкончательныйРасчет Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", "Истина");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", "Истина");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ ВычетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", 
		"(СведенияОДоходахНДФЛ.Период < &НачалоМесяцаРасчета
		|					ИЛИ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
		|						И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ РасчетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат =	Запрос.ВыполнитьПакет();
	
	ВсегоРезультатов = Результат.Количество();
	ВыборкаРасчетов = Результат[ВсегоРезультатов - 6].Выбрать();
	ПравоНаИмущественныеВычеты = Результат[ВсегоРезультатов - 5].Выгрузить();
	РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 4].Выгрузить();
	ИсчисленоРанее = Результат[ВсегоРезультатов - 3].Выгрузить();
	СтандартныхВычетовРанее = Результат[ВсегоРезультатов - 2].Выгрузить();
	ИмущественныхВычетовРанее = Результат[ВсегоРезультатов - 1].Выгрузить();
	
	ТипНалог = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0));
	ТипВычет = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2));
	РезультатыРасчетов = СтандартныхВычетовРанее.СкопироватьКолонки();
	РезультатыРасчетов.Колонки.Добавить("НомерСтроки",ТипНалог);
	РезультатыРасчетов.Колонки.Добавить("НалогПоСтавке13",ТипНалог);
	РезультатыРасчетов.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке13",ТипНалог);
	РезультатыРасчетов.Колонки.Добавить("НалогПоСтавке13КЗачетуВозврату",ТипНалог);
	РезультатыРасчетов.Колонки.Добавить("ПримененныйВычетИмущественныйРасходы",ТипВычет);
	РезультатыРасчетов.Колонки.Добавить("ПримененныйВычетИмущественныйПроцентыПоКредитам",ТипВычет);
	РезультатыРасчетов.Колонки.Добавить("ПримененныйВычетИмущественныйПроцентыПриПерекредитовании",ТипВычет);
	
	ВспомогательнаяТаблицаМесяца = РезультатыРасчетов.СкопироватьКолонки();
	ВспомогательнаяТаблицаФизическогоЛица = РезультатыРасчетов.СкопироватьКолонки();
	
	ПоляПоиска = "ФизическоеЛицо, МесяцНалоговогоПериода";
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	РаспределениеДоходовПоПодразделениям.Индексы.Добавить(ПоляПоиска);
	ИсчисленоРанее.Индексы.Добавить(ПоляПоиска);
	СтандартныхВычетовРанее.Индексы.Добавить(ПоляПоиска);
	ИмущественныхВычетовРанее.Индексы.Добавить(ПоляПоиска);
	ПравоНаИмущественныеВычеты.Индексы.Добавить(ПоляПоиска);
	
	СтрокаРесурсов = РассчитываемыеРесурсыПоОсновнойСтавке();
	МассивРесурсов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРесурсов);
	
	Если Не ОкончательныйРасчет Тогда
		ТекущийПериод = НачалоМесяца(?(ЗначениеЗаполнено(ДатаУдержанияИсчисленногоНалога), ДатаУдержанияИсчисленногоНалога, МесяцРасчета));
		СтруктураПоискаТекущегоНДФЛ = Новый Структура("МесяцНалоговогоПериода", ТекущийПериод);
	КонецЕсли;
	
	ТекущийГод = Год(МесяцРасчета);
	Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		
		ВспомогательнаяТаблицаФизическогоЛица.Очистить();
		
		// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
		СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

		БазаРаспределения = 0;
		МесяцПоиска = НачалоМесяца(МесяцРасчета);
		Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
			СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
			ДоходыМесяцаРасчета = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
			БазаРаспределения = 0;
			Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
				БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
			КонецЦикла; 
			МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
		КонецЦикла;
		
		КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
		
		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
			
			ВычетЛичныйОстаток = 0;
			ВычетНаДетейОстаток = 0;
			ВычетНаДетейДвойнойОстаток = 0;
			ВычетНаДетейДвойнойВторойОстаток = 0;
			ВычетНаТретьегоРебенкаОстаток = 0;
			ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
			ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
			ВычетНаВторогоРебенкаОстаток = 0;
			ВычетНаВторогоРебенкаДвойнойОстаток = 0;
			ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
			ВычетНаДетейИнвалидовОстаток = 0;
			ВычетНаДетейИнвалидовДвойнойОстаток = 0;
			ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
			ВычетИмущественныйРасходыОстаток = 0;
			ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
			ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
			ВычетСоциальныйОстаток = 0;
			ОблагаемыйДоход = 0;
			ДоходЗаМесяцОстаток = 0;
			НалогИсчисленный = 0;
			
			Пока ВыборкаРасчетов.Следующий() Цикл
				
				ВспомогательнаяТаблицаМесяца.Очистить();
				ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				
				БазаРаспределения = 0;
				Для каждого СтрокаРаспределения Из Доходы Цикл
					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
				КонецЦикла; 
				Если БазаРаспределения = 0 Тогда
					// Если доходов за прошлый месяц нет - будем использовать текущее распределение.
					Доходы = ДоходыМесяцаРасчета;
					КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
				Иначе
					КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
				КонецЕсли;
				
				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоиска), "НалогПоСтавке13");
				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());
				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИмущественныхВычетовРанее.НайтиСтроки(СтруктураПоиска), РассчитываемыеРесурсыИмущественныхВычетов());
				
				Если ВыборкаРасчетов.Резидент Тогда
					
					// Расчет сумм примененных вычетов и налога.
					
					ВычетЛичныйЗаМесяц = 0;
					ВычетНаДетейЗаМесяц = 0;
					ВычетНаДетейЗаМесяц = 0;
					ВычетСоциальныйЗаМесяц = 0;
					ВычетНаДетейДвойнойЗаМесяц = 0;
					ВычетНаДетейДвойнойВторойЗаМесяц = 0;
					ВычетНаТретьегоРебенкаЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
					ВычетНаВторогоРебенкаЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
					ВычетНаДетейИнвалидовЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
					ВычетИмущественныйРасходыЗаМесяц = 0;
					ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
					ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
					
					ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;
					СтрокиПравНаИмущественныеВычеты = ПравоНаИмущественныеВычеты.НайтиСтроки(СтруктураПоиска);
					Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
						ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
						ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
						ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
					КонецЕсли;
					Если ВыборкаРасчетов.ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
						ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
						ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
					Иначе
						ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
						ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
						ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
						ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
						ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
						ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
						ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
						ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
						ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
						ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
					КонецЕсли;
					
					Если ДоходЗаМесяцОстаток > 0 Тогда
						
						ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток, ВычетСоциальныйОстаток);
						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
						
						Если ВыборкаРасчетов.КодВычетаЛичный = Справочники.ВидыВычетовНДФЛ.Код103 Тогда
							ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
							ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
						КонецЕсли;
						
						ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
						ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
						
						ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
						
						ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
						
						ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;

						ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;

						ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
							
						Если ВыборкаРасчетов.КодВычетаЛичный <> Справочники.ВидыВычетовНДФЛ.Код103 Тогда
							ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
							ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
						КонецЕсли;
						
						ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
								- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
								- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
								- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
								- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц);
						
						Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
							
							ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
							ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							
							ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
							ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							
							ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
							ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
							
						КонецЕсли;
						
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
                        ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
                        ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);	
					КонецЕсли;
					
					ОблагаемыйДоход = Макс(0, ОблагаемыйДоход + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - (ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
								+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
								+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
								+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
								+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц 
								+ ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц));
						
					НалогЗаМесяц = Окр(ОблагаемыйДоход * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
					НалогИсчисленный = НалогИсчисленный + НалогЗаМесяц;
					
				Иначе	
					
					НалогЗаМесяц = ВыборкаРасчетов.НалогЗаМесяц;
					
				КонецЕсли;
				
				ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, НалогЗаМесяц, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
				
				ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение", СтрокаРесурсов);
				Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
					ЕстьДанныеВСтроке = Ложь;
					Для каждого ИмяРесурса Из МассивРесурсов Цикл
						ЕстьДанныеВСтроке = СтрокаТЗ[ИмяРесурса] <> 0;
						Если ЕстьДанныеВСтроке Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если ЕстьДанныеВСтроке Тогда
						ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если Не ОкончательныйРасчет И ВспомогательнаяТаблицаФизическогоЛица.Количество() > 0 Тогда
			
			ТекущийНДФЛ = ВспомогательнаяТаблицаФизическогоЛица.Скопировать(ВспомогательнаяТаблицаФизическогоЛица.НайтиСтроки(СтруктураПоискаТекущегоНДФЛ));
			ТекущийНДФЛВсего = ТекущийНДФЛ.Итог("НалогПоСтавке13");
			Если ТекущийНДФЛВсего >= 0 Тогда 
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущийНДФЛ, РезультатыРасчетов);
				ВспомогательнаяТаблицаФизическогоЛица.Сортировать("МесяцНалоговогоПериода Убыв");
				// Налоги предыдущих периодов добавляем в пределах положительного налога текущего периода, не допуская возврата
				// налога.
				Для каждого СтрокаДанных Из ВспомогательнаяТаблицаФизическогоЛица Цикл
					Если СтрокаДанных.МесяцНалоговогоПериода = ТекущийПериод Тогда
						Продолжить;
					КонецЕсли;
					Если ТекущийНДФЛВсего + СтрокаДанных.НалогПоСтавке13 >= 0 Тогда
						ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
						ТекущийНДФЛВсего = ТекущийНДФЛВсего + СтрокаДанных.НалогПоСтавке13;
					ИначеЕсли ТекущийНДФЛВсего > 0 Тогда
						НоваяСтрока = РезультатыРасчетов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
						НоваяСтрока.НалогПоСтавке13 = - ТекущийНДФЛВсего;
						ТекущийНДФЛВсего = 0
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		Иначе 			
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаФизическогоЛица, РезультатыРасчетов)
			
		КонецЕсли;
		
	КонецЦикла;
	
	НомерСтроки = 0;
	Для каждого СтрокаТЗ Из РезультатыРасчетов Цикл
		НомерСтроки = НомерСтроки + 1;
	    СтрокаТЗ.НомерСтроки = НомерСтроки;
	КонецЦикла; 
	
	Запрос.УстановитьПараметр("РезультатыРасчетов",РезультатыРасчетов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Расчеты.МесяцНалоговогоПериода,
	|	Расчеты.ФизическоеЛицо,
	|	Расчеты.НомерСтроки
	|ПОМЕСТИТЬ ВТРезультатыРасчетов
	|ИЗ
	|	&РезультатыРасчетов КАК Расчеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатыРасчетов.НомерСтроки КАК НомерСтроки,
	|	РезультатыРасчетов.МесяцНалоговогоПериода,
	|	РезультатыРасчетов.ФизическоеЛицо,
	|	ЕСТЬNULL(ПравоНаЛичныеВычеты.КодВычета, ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)) КАК КодВычета
	|ИЗ
	|	ВТРезультатыРасчетов КАК РезультатыРасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаЛичныеВычеты КАК ПравоНаЛичныеВычеты
	|		ПО РезультатыРасчетов.ФизическоеЛицо = ПравоНаЛичныеВычеты.ФизическоеЛицо
	|			И РезультатыРасчетов.МесяцНалоговогоПериода = ПравоНаЛичныеВычеты.МесяцНалоговогоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	РезультатыРасчетов.ЗагрузитьКолонку(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КодВычета"),"КодВычетаЛичный");
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТДатыПоМесяцам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыПоГодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыНалогаНаДоходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыСрезаВычетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтандартныеВычетыПоНДФЛЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПраваНаВычетыНаДетей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПраваНаЛичныеВычеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРезидентствоФизлицНаКонецГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРезидентствоФизлицНаКонецМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыФизлиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРазмерыСтандартныхВычетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрименениеСтандартныхВычетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПравоНаИмущественныеВычеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДоходыФизлиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПредоставленоИмущественныхВычетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСоциальныеВычетыПомесячно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДоходыСУчетомВычетовКДоходам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДоходыРезидентовПоМесяцам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДоходыРезидентовНарастающимЗаГод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПраваНаСтандартныеВычетыПоМесяцам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНалогНерезидентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкиНалогаЧислом";
	Запрос.Выполнить();
	
	ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "НалогПоСтавке13", "ЗачтеноАвансовыхПлатежейПоСтавке13", ИсключатьДоходыРегистратора);
	ВписатьВРезультатНалогиКЗачетуВозврату(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "НалогПоСтавке13", "ЗачтеноАвансовыхПлатежейПоСтавке13", "НалогПоСтавке13КЗачетуВозврату", ИсключатьДоходыРегистратора, ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога);
	
	Возврат РезультатыРасчетов;
	
КонецФункции

// Предназначена для дополнения рассчитанных сумм НДФЛ информацией о суммах подлежащих зачету авансовых платежей.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор, для которого выполняется обработка исчисленного НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета
//		РезультатыРасчетов - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//              колонки сумм исчисленного налога и сумм авнсов к зачету, их имена передаются дополнительно
//				может содержать другие колонки
//		СтавкаНалога - ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		ИмяКолонкиНалогаИсчисленного - строка -
//		ИмяКолонкиАвансаЗачтенного - строка -
//		ИсключатьДвиженияРегистратора - булево - признак того, надо ли при расчете исключать движения.
//
Процедура ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, СтавкаНалога, ИмяКолонкиНалогаИсчисленного, ИмяКолонкиАвансаЗачтенного, ИсключатьДвиженияРегистратора = Истина) Экспорт 

	Если МесяцРасчета < ДатаИзмененияНалогообложенияДивидендов() Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДвиженияРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("Исчислено", РезультатыРасчетов);
	Запрос.УстановитьПараметр("СтавкаНалогообложенияРезидента",СтавкаНалога);
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",КонецМесяца(МесяцРасчета) + 1);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Исчислено.ФизическоеЛицо,
	|	Исчислено.МесяцНалоговогоПериода,
	|	Исчислено.НалогПоСтавке13 КАК НалогПоСтавке13
	|ПОМЕСТИТЬ ВТСуммыНалога
	|ИЗ
	|	&Исчислено КАК Исчислено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыНалога.ФизическоеЛицо,
	|	ГОД(СуммыНалога.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	СУММА(СуммыНалога.НалогПоСтавке13) КАК НалогПоСтавке13
	|ПОМЕСТИТЬ ВТВсегоИсчислено
	|ИЗ
	|	ВТСуммыНалога КАК СуммыНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыНалога.ФизическоеЛицо,
	|	ГОД(СуммыНалога.МесяцНалоговогоПериода)
	|
	|ИМЕЮЩИЕ
	|	СУММА(СуммыНалога.НалогПоСтавке13) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авансы.ФизическоеЛицо,
	|	Авансы.НалоговыйПериод,
	|	СУММА(Авансы.Остаток) КАК Остаток
	|ПОМЕСТИТЬ ВТАвансы
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.Год КАК НалоговыйПериод,
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.СуммаОстаток КАК Остаток
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ.Остатки(
	|				&КонецМесяцаРасчета,
	|				(ФизическоеЛицо, Год) В
	|						(ВЫБРАТЬ
	|							ФизЛица.ФизическоеЛицо,
	|							ФизЛица.НалоговыйПериод
	|						ИЗ
	|							ВТВсегоИсчислено КАК ФизЛица)
	|					И ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК АвансовыеПлатежиИностранцевПоНДФЛОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРегистратора.ФизическоеЛицо,
	|		ДвиженияРегистратора.Год,
	|		ВЫБОР
	|			КОГДА ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДвиженияРегистратора.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ КАК ДвиженияРегистратора
	|	ГДЕ
	|		ДвиженияРегистратора.Регистратор = &ИсключаемыйРегистратор) КАК Авансы
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ФизическоеЛицо,
	|	Авансы.НалоговыйПериод
	|
	|ИМЕЮЩИЕ
	|	СУММА(Авансы.Остаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоложительныйНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПоложительныйНДФЛ.НалоговыйПериод КАК НалоговыйПериод,
	|	ВЫБОР
	|		КОГДА ПоложительныйНДФЛ.НалогПоСтавке13 > ЕСТЬNULL(Незачтено.Остаток, 0)
	|			ТОГДА ЕСТЬNULL(Незачтено.Остаток, 0)
	|		ИНАЧЕ ПоложительныйНДФЛ.НалогПоСтавке13
	|	КОНЕЦ КАК КЗачету
	|ИЗ
	|	ВТВсегоИсчислено КАК ПоложительныйНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАвансы КАК Незачтено
	|		ПО ПоложительныйНДФЛ.ФизическоеЛицо = Незачтено.ФизическоеЛицо
	|			И ПоложительныйНДФЛ.НалоговыйПериод = Незачтено.НалоговыйПериод
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПоложительныйНДФЛ.НалогПоСтавке13 > ЕСТЬNULL(Незачтено.Остаток, 0)
	|				ТОГДА ЕСТЬNULL(Незачтено.Остаток, 0)
	|			ИНАЧЕ ПоложительныйНДФЛ.НалогПоСтавке13
	|		КОНЕЦ > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НалоговыйПериод";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса,"НалогПоСтавке13",ИмяКолонкиНалогаИсчисленного);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		КЗачету = Результат.Выгрузить();
		КЗачету.Индексы.Добавить("ФизическоеЛицо, НалоговыйПериод");
		РезультатыРасчетов.Сортировать("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение");
		
		СуммаКЗачету = 0;
		НалоговыйПериод = 0; ФизическоеЛицо = Неопределено;
		ПараметрыОтбора = Новый Структура("ФизическоеЛицо, НалоговыйПериод");
		Для каждого СтрокаТЗ Из РезультатыРасчетов Цикл
			
			Если ФизическоеЛицо <> СтрокаТЗ.ФизическоеЛицо Или НалоговыйПериод <> Год(СтрокаТЗ.МесяцНалоговогоПериода) Тогда
				ФизическоеЛицо = СтрокаТЗ.ФизическоеЛицо;
				НалоговыйПериод = Год(СтрокаТЗ.МесяцНалоговогоПериода);
				
				ПараметрыОтбора.ФизическоеЛицо = ФизическоеЛицо;
				ПараметрыОтбора.НалоговыйПериод = НалоговыйПериод;
				СтрокиКЗачету = КЗачету.НайтиСтроки(ПараметрыОтбора);
				Если СтрокиКЗачету.Количество() = 0 Тогда
					СуммаКЗачету = 0
				Иначе
					СуммаКЗачету = СтрокиКЗачету[0].КЗачету
				КонецЕсли;
			КонецЕсли;
			
			Если СуммаКЗачету = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаТЗ[ИмяКолонкиНалогаИсчисленного] * СуммаКЗачету > 0 Тогда
				Если СуммаКЗачету > 0 Тогда
					СтрокаТЗ[ИмяКолонкиАвансаЗачтенного] = Мин(СтрокаТЗ[ИмяКолонкиНалогаИсчисленного],СуммаКЗачету);
				Иначе
					СтрокаТЗ[ИмяКолонкиАвансаЗачтенного] = Макс(СтрокаТЗ[ИмяКолонкиНалогаИсчисленного],СуммаКЗачету);
				КонецЕсли;
				СуммаКЗачету = СуммаКЗачету - СтрокаТЗ[ИмяКолонкиАвансаЗачтенного];
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Предназначена для дополнения рассчитанных сумм НДФЛ информацией о суммах, подлежащих зачету в счет будущих платежей.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор, для которого выполняется обработка исчисленного НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета
//		РезультатыРасчетов - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//              колонки сумм исчисленного налога и сумм налога к зачету/возврату, их имена передаются дополнительно
//				может содержать другие колонки
//		СтавкаНалога - ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		ИмяКолонкиНалогаИсчисленного - строка -
//		ИмяКолонкиАвансаЗачтенного - строка -
//		ИмяКолонкиНалогаКЗачетуВозврату - строка -
//		ИсключатьДвиженияРегистратора - булево - признак того, надо ли при расчете исключать движения.
//		ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//		                               (соответствует значению Истина).
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по
//		                                         Регистратору.
//
Процедура ВписатьВРезультатНалогиКЗачетуВозврату(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, СтавкаНалога, ИмяКолонкиНалогаИсчисленного, ИмяКолонкиАвансаЗачтенного, ИмяКолонкиНалогаКЗачетуВозврату, ИсключатьДвиженияРегистратора = Истина, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДвиженияРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("Исчислено", РезультатыРасчетов);
	Запрос.УстановитьПараметр("СтавкаНалогообложенияРезидента",СтавкаНалога);
	Запрос.УстановитьПараметр("НачалоМесяцаРасчета",НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",?(ЗначениеЗаполнено(ДатаУдержанияИсчисленногоНалога), НачалоДня(ДатаУдержанияИсчисленногоНалога), КонецМесяца(МесяцРасчета) + 1));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Исчислено.ФизическоеЛицо,
	|	Исчислено.МесяцНалоговогоПериода,
	|	Исчислено.НалогПоСтавке13 - Исчислено.ЗачтеноАвансовыхПлатежейПоСтавке13 КАК НалогПоСтавке13
	|ПОМЕСТИТЬ ВТСуммыНалога
	|ИЗ
	|	&Исчислено КАК Исчислено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыНалога.ФизическоеЛицо,
	|	ГОД(СуммыНалога.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	СУММА(СуммыНалога.НалогПоСтавке13) КАК НалогПоСтавке13
	|ПОМЕСТИТЬ ВТВсегоИсчислено
	|ИЗ
	|	ВТСуммыНалога КАК СуммыНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыНалога.ФизическоеЛицо,
	|	ГОД(СуммыНалога.МесяцНалоговогоПериода)
	|
	|ИМЕЮЩИЕ
	|	СУММА(СуммыНалога.НалогПоСтавке13) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсегоИсчислено.ФизическоеЛицо,
	|	-ВсегоИсчислено.НалогПоСтавке13 КАК НалогПоСтавке13,
	|	ВсегоИсчислено.НалоговыйПериод
	|ПОМЕСТИТЬ ВТОтрицательныйНДФЛ
	|ИЗ
	|	ВТВсегоИсчислено КАК ВсегоИсчислено
	|ГДЕ
	|	ВсегоИсчислено.НалогПоСтавке13 < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсегоИсчислено.ФизическоеЛицо,
	|	ВсегоИсчислено.НалогПоСтавке13,
	|	ВсегоИсчислено.НалоговыйПериод
	|ПОМЕСТИТЬ ВТПоложительныйНДФЛ
	|ИЗ
	|	ВТВсегоИсчислено КАК ВсегоИсчислено
	|ГДЕ
	|	ВсегоИсчислено.НалогПоСтавке13 > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо,
	|	СУММА(Остатки.СуммаОстаток) КАК СуммаОстаток,
	|	Остатки.НалоговыйПериод
	|ПОМЕСТИТЬ ВТОстаткиПоРасчетам
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток КАК СуммаОстаток,
	|		ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода) КАК НалоговыйПериод
	|	ИЗ
	|		РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Остатки(
	|				&КонецМесяцаРасчета,
	|				ГоловнаяОрганизация = &ГоловнаяОрганизация
	|					И СтавкаНалогообложенияРезидента = &СтавкаНалогообложенияРезидента
	|					И (ФизическоеЛицо, ГОД(МесяцНалоговогоПериода)) В
	|						(ВЫБРАТЬ
	|							Исчислено.ФизическоеЛицо,
	|							Исчислено.НалоговыйПериод
	|						ИЗ
	|							ВТВсегоИсчислено КАК Исчислено)) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|		ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|		ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)
	|	ИЗ
	|		РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|	ГДЕ
	|		НЕ &ОкончательныйРасчет
	|		И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период >= &НачалоМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период < &КонецМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = &СтавкаНалогообложенияРезидента
	|		И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо, ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)) В
	|				(ВЫБРАТЬ
	|					Исчислено.ФизическоеЛицо,
	|					Исчислено.НалоговыйПериод
	|				ИЗ
	|					ВТВсегоИсчислено КАК Исчислено)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|		ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|		ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)
	|	ИЗ
	|		РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|	ГДЕ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = &ИсключаемыйРегистратор
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период < &КонецМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = &СтавкаНалогообложенияРезидента
	|		И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо, ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)) В
	|				(ВЫБРАТЬ
	|					Исчислено.ФизическоеЛицо,
	|					Исчислено.НалоговыйПериод
	|				ИЗ
	|					ВТВсегоИсчислено КАК Исчислено)) КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ФизическоеЛицо,
	|	Остатки.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток КАК СуммаОстаток,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.НалоговыйПериод КАК НалоговыйПериод
	|ПОМЕСТИТЬ ВТНеудержано
	|ИЗ
	|	ВТОстаткиПоРасчетам КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзлишнеУдержанныйНДФЛОстатки.ФизическоеЛицо,
	|	-ИзлишнеУдержанныйНДФЛОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ИзлишнеУдержанныйНДФЛОстатки.НалоговыйПериод
	|ПОМЕСТИТЬ ВТНезачтено
	|ИЗ
	|	ВТОстаткиПоРасчетам КАК ИзлишнеУдержанныйНДФЛОстатки
	|ГДЕ
	|	ИзлишнеУдержанныйНДФЛОстатки.СуммаОстаток < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтрицательныйНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОтрицательныйНДФЛ.НалоговыйПериод КАК НалоговыйПериод,
	|	-ВЫБОР
	|		КОГДА ОтрицательныйНДФЛ.НалогПоСтавке13 - ЕСТЬNULL(Неудержано.СуммаОстаток, 0) > 0
	|			ТОГДА ОтрицательныйНДФЛ.НалогПоСтавке13 - ЕСТЬNULL(Неудержано.СуммаОстаток, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КЗачетуВозврату
	|ИЗ
	|	ВТОтрицательныйНДФЛ КАК ОтрицательныйНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеудержано КАК Неудержано
	|		ПО ОтрицательныйНДФЛ.ФизическоеЛицо = Неудержано.ФизическоеЛицо
	|			И ОтрицательныйНДФЛ.НалоговыйПериод = Неудержано.НалоговыйПериод
	|ГДЕ
	|	-ВЫБОР
	|			КОГДА ОтрицательныйНДФЛ.НалогПоСтавке13 - ЕСТЬNULL(Неудержано.СуммаОстаток, 0) > 0
	|				ТОГДА ОтрицательныйНДФЛ.НалогПоСтавке13 - ЕСТЬNULL(Неудержано.СуммаОстаток, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоложительныйНДФЛ.ФизическоеЛицо,
	|	ПоложительныйНДФЛ.НалоговыйПериод,
	|	ВЫБОР
	|		КОГДА ПоложительныйНДФЛ.НалогПоСтавке13 > ЕСТЬNULL(Незачтено.СуммаОстаток, 0)
	|			ТОГДА ЕСТЬNULL(Незачтено.СуммаОстаток, 0)
	|		ИНАЧЕ ПоложительныйНДФЛ.НалогПоСтавке13
	|	КОНЕЦ
	|ИЗ
	|	ВТПоложительныйНДФЛ КАК ПоложительныйНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНезачтено КАК Незачтено
	|		ПО ПоложительныйНДФЛ.ФизическоеЛицо = Незачтено.ФизическоеЛицо
	|			И ПоложительныйНДФЛ.НалоговыйПериод = Незачтено.НалоговыйПериод
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПоложительныйНДФЛ.НалогПоСтавке13 > ЕСТЬNULL(Незачтено.СуммаОстаток, 0)
	|				ТОГДА ЕСТЬNULL(Незачтено.СуммаОстаток, 0)
	|			ИНАЧЕ ПоложительныйНДФЛ.НалогПоСтавке13
	|		КОНЕЦ > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НалоговыйПериод";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса,"НалогПоСтавке13",ИмяКолонкиНалогаИсчисленного);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса,"ЗачтеноАвансовыхПлатежейПоСтавке13",ИмяКолонкиАвансаЗачтенного);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		КЗачетуВозврату = Результат.Выгрузить();
		КЗачетуВозврату.Индексы.Добавить("ФизическоеЛицо, НалоговыйПериод");
		РезультатыРасчетов.Сортировать("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение");
		
		СуммаКЗачетуВозврату = 0;
		НалоговыйПериод = 0; ФизическоеЛицо = Неопределено;
		ПараметрыОтбора = Новый Структура("ФизическоеЛицо, НалоговыйПериод");
		Для каждого СтрокаТЗ Из РезультатыРасчетов Цикл
			
			Если ФизическоеЛицо <> СтрокаТЗ.ФизическоеЛицо Или НалоговыйПериод <> Год(СтрокаТЗ.МесяцНалоговогоПериода) Тогда
				ФизическоеЛицо = СтрокаТЗ.ФизическоеЛицо;
				НалоговыйПериод = Год(СтрокаТЗ.МесяцНалоговогоПериода);
				
				ПараметрыОтбора.ФизическоеЛицо = ФизическоеЛицо;
				ПараметрыОтбора.НалоговыйПериод = НалоговыйПериод;
				СтрокиКЗачетуВозврату = КЗачетуВозврату.НайтиСтроки(ПараметрыОтбора);
				Если СтрокиКЗачетуВозврату.Количество() = 0 Тогда
					СуммаКЗачетуВозврату = 0
				Иначе
					СуммаКЗачетуВозврату = СтрокиКЗачетуВозврату[0].КЗачетуВозврату
				КонецЕсли;
			КонецЕсли;
			
			Если СуммаКЗачетуВозврату = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаТЗ[ИмяКолонкиНалогаИсчисленного] * СуммаКЗачетуВозврату > 0 Тогда
				Если СуммаКЗачетуВозврату > 0 Тогда
					СтрокаТЗ[ИмяКолонкиНалогаКЗачетуВозврату] = Мин(СтрокаТЗ[ИмяКолонкиНалогаИсчисленного],СуммаКЗачетуВозврату);
				Иначе
					СтрокаТЗ[ИмяКолонкиНалогаКЗачетуВозврату] = Макс(СтрокаТЗ[ИмяКолонкиНалогаИсчисленного],СуммаКЗачетуВозврату);
				КонецЕсли;
				СуммаКЗачетуВозврату = СуммаКЗачетуВозврату - СтрокаТЗ[ИмяКолонкиНалогаКЗачетуВозврату];
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Предназначена для расчета НДФЛ удержанного по записанным в учете данным и по 
// переданным данным о выплатах.
//
// Параметры:
//      Ссылка - ДокументСсылка - ссылка на документ-регистратор.
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Организация
//      МенеджерТаблиц - МенеджерВременныхТаблиц, содержит вр. таблицу 
//      	ВТСписокСотрудников с полями 
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты
//          	ДокументОснование, необязательная, если передана, отбираются остатки по указанным документам
//
//  Возвращает таблицу значений удержанных сумм налогов в разрезе месяцев налогового периода и ставок.
//
Функция РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ДатаОперации));
	
	РезультатыРасчетов = Новый ТаблицаЗначений;
	РезультатыРасчетов.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("ФизическоеЛицо",Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	РезультатыРасчетов.Колонки.Добавить("СтавкаНалогообложенияРезидента",Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	РезультатыРасчетов.Колонки.Добавить("Ставка",Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	РезультатыРасчетов.Колонки.Добавить("КодДохода",Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));               
	РезультатыРасчетов.Колонки.Добавить("МесяцНалоговогоПериода",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("РегистрацияВНалоговомОргане",Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	РезультатыРасчетов.Колонки.Добавить("Подразделение", Метаданные.ОпределяемыеТипы.ТерриторииВыполненияРаботВОрганизации.Тип);
	РезультатыРасчетов.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0)));
	РезультатыРасчетов.Колонки.Добавить("ВключатьВДекларациюПоНалогуНаПрибыль",Новый ОписаниеТипов("Булево"));
	РезультатыРасчетов.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ДокументыОснованияНДФЛ.Тип);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТСписокСотрудников КАК СписокСотрудников";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатыРасчетов
	КонецЕсли;
	
	ОтбиратьПоДокументуОснованию = Результат.Выгрузить().Колонки.Найти("ДокументОснование") <> Неопределено;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	&КонецМесяца КАК Период,
	|	СписокСотрудников.ФизическоеЛицо,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникам
	|ИЗ
	|	ВТСписокСотрудников КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период) КАК ДатаНачисления,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) КАК СуммаОстаток,
	|	МАКСИМУМ(СуммыНДФЛПоСотрудникам.СуммаВыплаты) КАК СуммаВыплаты,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|ПОМЕСТИТЬ ВТПодробно
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникам КАК СуммыНДФЛПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация)
	|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период <= &ДатаОперации)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) <> 0";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТПодробно");
	
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		
		Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПериодРегистрации));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
		|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода) КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТПерерасчетыПрошлыхПериодов
		|ИЗ
		|	ВТСуммыНДФЛПоСотрудникам КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода < &НачалоГода
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
		|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ПодробныеДанные.МесяцНалоговогоПериода,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТПоФизическомуЛицуЗаМесяц
		|ИЗ
		|	ВТПодробно КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ПодробныеДанные.МесяцНалоговогоПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	МАКСИМУМ(ПодробныеДанные.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод
		|ИЗ
		|	ВТПоФизическомуЛицуЗаМесяц КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|					И ПодробныеДанные.СуммаОстаток < 0
		|				ТОГДА ПодробныеДанные.СуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвратПрошлыхПериодов
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
		|ИЗ
		|	ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ПодробныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
		|		ПО ПодробныеДанные.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
		|			И ПодробныеДанные.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
		|			И ПодробныеДанные.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
		|ГДЕ
		|	(ПодробныеДанные.СуммаОстаток > 0
		|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод КАК НалоговыйПериод,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.МесяцНалоговогоПериода КАК ПоследнийМесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.ДатаНачисления КАК Период,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.СуммаОстаток,
		|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
		|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.СуммаВыплаты - ВсегоПоФизическомуЛицу.ВозвратПрошлыхПериодов КАК СуммаВыплаты,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц
		|ИЗ
		|	ВТПодробно КАК СуммыНДФЛПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ВсегоПоФизическомуЛицуЗаНалоговыйПериод
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
		|			ПО ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
		|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
		|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента
		|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И СуммыНДФЛПоСотрудникам.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
		|	И (ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток > 0
		|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	НалоговыйПериод,
		|	МесяцНалоговогоПериода,
		|	Период,
		|	ДокументОснование,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПодробно
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСуммыНДФЛПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПоФизическомуЛицуЗаМесяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВсегоПоФизическомуЛицу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПерерасчетыПрошлыхПериодов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод";
		
		Выборка = Запрос.ВыполнитьПакет()[4].Выбрать();
		
	Иначе
		
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
		|ИЗ
		|	ВТПодробно КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ПодробныеДанные.МесяцНалоговогоПериода,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТПоФизическомуЛицуЗаМесяц
		|ИЗ
		|	ВТПодробно КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ПодробныеДанные.МесяцНалоговогоПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВсегоПоФизическомуЛицу.НалоговыйПериод КАК НалоговыйПериод,
		|	ВсегоПоФизическомуЛицу.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.ДатаНачисления КАК Период,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.СуммаОстаток,
		|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
		|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.СуммаВыплаты,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц
		|ИЗ
		|	ВТПодробно КАК СуммыНДФЛПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
		|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицу.НалоговыйПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И СуммыНДФЛПоСотрудникам.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	НалоговыйПериод,
		|	МесяцНалоговогоПериода,
		|	Период,
		|	ДокументОснование,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСуммыНДФЛПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПоФизическомуЛицуЗаМесяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВсегоПоФизическомуЛицу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПодробно";
		
		Выборка = Запрос.ВыполнитьПакет()[2].Выбрать();
		
	КонецЕсли;
	
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл 
		СуммаКРаспределению = Выборка.СуммаВыплаты;
		Пока Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента") И СуммаКРаспределению >= 0 Цикл 
			Пока Выборка.СледующийПоЗначениюПоля("НалоговыйПериод") И СуммаКРаспределению >= 0 Цикл 
				Если Выборка.ОстатокЗаНалоговыйПериод >= 0 Тогда
					ОстатокКУдержанию = 0;
					Пока Выборка.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") И СуммаКРаспределению > 0 Цикл 
						ОстатокКУдержанию = ОстатокКУдержанию + Выборка.СуммаЗаМесяц;
						Если ОстатокКУдержанию > 0 И Выборка.СуммаЗаМесяц > 0 Тогда
							Пока Выборка.Следующий() И СуммаКРаспределению > 0 И ОстатокКУдержанию > 0 Цикл
								Если Выборка.СуммаОстаток > 0 Тогда
									
									СписываемаяСумма = Мин(Выборка.СуммаОстаток, СуммаКРаспределению, ОстатокКУдержанию);
									СуммаКРаспределению = СуммаКРаспределению - СписываемаяСумма;
									ОстатокКУдержанию = ОстатокКУдержанию - СписываемаяСумма;
									
									СтрокаТаблицыРезультатов = РезультатыРасчетов.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
									СтрокаТаблицыРезультатов.Сумма = СписываемаяСумма;			
									
								КонецЕсли;
							КонецЦикла;			
						КонецЕсли;
					КонецЦикла;			
				Иначе
					СуммаКРаспределению = СуммаКРаспределению - Выборка.ОстатокЗаНалоговыйПериод;
					СтрокаТаблицыРезультатов = РезультатыРасчетов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
					СтрокаТаблицыРезультатов.Сумма = Выборка.ОстатокЗаНалоговыйПериод;			
					СтрокаТаблицыРезультатов.МесяцНалоговогоПериода = Выборка.ПоследнийМесяцНалоговогоПериода;			
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;	
	
	Если ОтбиратьПоДокументуОснованию Тогда
		
		Запрос.УстановитьПараметр("РезультатыРасчетов", РезультатыРасчетов);
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.Период,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КодДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.Ставка,
		|	СуммыНДФЛПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТРезультатыРасчетов
		|ИЗ
		|	&РезультатыРасчетов КАК СуммыНДФЛПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование
		|ПОМЕСТИТЬ ВТПодробно
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РезультатыРасчетов.ФизическоеЛицо,
		|	РезультатыРасчетов.СтавкаНалогообложенияРезидента,
		|	РезультатыРасчетов.МесяцНалоговогоПериода,
		|	РезультатыРасчетов.Период,
		|	РезультатыРасчетов.РегистрацияВНалоговомОргане,
		|	РезультатыРасчетов.КодДохода,
		|	РезультатыРасчетов.ДокументОснование,
		|	РезультатыРасчетов.Подразделение,
		|	РезультатыРасчетов.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	РезультатыРасчетов.Ставка,
		|	РезультатыРасчетов.Сумма
		|ИЗ
		|	ВТПодробно КАК Физлица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезультатыРасчетов КАК РезультатыРасчетов
		|		ПО Физлица.ФизическоеЛицо = РезультатыРасчетов.ФизическоеЛицо
		|			И Физлица.ДокументОснование = РезультатыРасчетов.ДокументОснование
		|ГДЕ
		|	РезультатыРасчетов.ФизическоеЛицо ЕСТЬ НЕ NULL ";
		
		РезультатыРасчетов = Запрос.Выполнить().Выгрузить();
		
		Запрос.Текст =  
		"УНИЧТОЖИТЬ ВТРезультатыРасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПодробно";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Возврат РезультатыРасчетов;
	
КонецФункции

// Предназначена для расчета и регистрации НДФЛ удержанного 
// по записанным в учете данным и по переданным данным о выплатах.
//
// Параметры:
//      Ссылка  - ДокументСсылка - ссылка на документ-регистратор.
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//      МенеджерТаблиц - МенеджерВременныхТаблиц, должен содержать временную таблицу с данными о выплатах вида:
//      	ВТСписокСотрудников 
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
//  Формирует движения по регистрам подсистемы.
//
Процедура РассчитатьИЗарегистрироватьУдержанныеНалоги(Ссылка, Движения, Отказ, Организация, ДатаОперации, МенеджерТаблиц, Записывать = Ложь, ПериодРегистрации = Неопределено) Экспорт
	
	УдержанныйНалог = РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации);
	
	СформироватьУдержанныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, , Истина);
	
	Если Движения.Найти("УплатаНДФЛНалоговымиАгентамиКРаспределению") <> Неопределено Тогда
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Очистить();
		Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записать();
	КонецЕсли;
	
	Если Движения.Найти("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ") <> Неопределено Тогда
		СформироватьПеречисленныйНалогПоФизическимЛицам(Ссылка, Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог.ВыгрузитьКолонку("ФизическоеЛицо"), , Записывать);
	КонецЕсли;
	
КонецПроцедуры	

// Процедура регистрирует факт неудачи при попытке выплаты зарплаты документом.
// При этом ранее удержанные при выплате налоги "сторнируются".
//
// Параметры:
//		Движения 		- КоллекцияДвижений, коллекция наборов записей движений ведомости.
//		Отказ			- признак отказа выполнения операции.
//		Документ		- ссылка на документ, которым ранее была зарегистрирована выплата зарплаты.
//		ФизическиеЛица	- массив ссылок на физические лица.
//
// Обработка ошибочных ситуаций
//	выдается сообщение, признак «Отказ» выставляется в Истина.
//
Процедура ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, Документ, ФизическиеЛица) Экспорт
	
	// Расчеты налогоплательщиков с бюджетом.
	РасчетыНалогоплательщиков = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	РасчетыНалогоплательщиков.Отбор.Регистратор.Установить(Документ);
	РасчетыНалогоплательщиков.Прочитать();
	
	РасчетыНалогоплательщиковСторно	= РасчетыНалогоплательщиков.ВыгрузитьКолонки();
	Для Каждого ЗаписьВедомости Из РасчетыНалогоплательщиков Цикл
		Если ФизическиеЛица.Найти(ЗаписьВедомости.ФизическоеЛицо) <> Неопределено Тогда
			СтрокаСторно = РасчетыНалогоплательщиковСторно.Добавить() ;
			ЗаполнитьЗначенияСвойств(СтрокаСторно, ЗаписьВедомости);
			СтрокаСторно.Сумма = - ЗаписьВедомости.Сумма;
		КонецЕсли	
	КонецЦикла;
	
	Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Загрузить(РасчетыНалогоплательщиковСторно);
	Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать= Истина;
	
	// Расчеты налогового агента с бюджетом.
	РасчетыНалоговыхАгентов		= РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	РасчетыНалоговыхАгентов.Отбор.Регистратор.Установить(Документ);
	РасчетыНалоговыхАгентов.Прочитать();

	РасчетыНалоговыхАгентовСторно = РасчетыНалоговыхАгентов.ВыгрузитьКолонки();
	Для Каждого ЗаписьВедомости Из РасчетыНалоговыхАгентов Цикл
		Если ФизическиеЛица.Найти(ЗаписьВедомости.ФизическоеЛицо) <> Неопределено Тогда
			СтрокаСторно = РасчетыНалоговыхАгентовСторно.Добавить() ;
			ЗаполнитьЗначенияСвойств(СтрокаСторно, ЗаписьВедомости);
			СтрокаСторно.Сумма = - ЗаписьВедомости.Сумма;
		КонецЕсли	
	КонецЦикла;
	
	РасчетыНалоговыхАгентовСторно.ЗаполнитьЗначения("",	"РеквизитыПлатежногоПоручения");

	Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(РасчетыНалоговыхАгентовСторно);
	Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать	= Истина;
	
КонецПроцедуры

// Предназначена для расчета и регистрации перечисленного НДФЛ по налогоплательщикам
// по записанным в учете данным об остатках перечисленных сумм НДФЛ в целом.
// Важно! Перед вызовом метода необходимо из движений регистратора по рег-рам 
// - УплатаНДФЛНалоговымиАгентамиКРаспределению
// - РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
// удалить "лишние" записи, т.к. при чтении данных учета движения регистратора не отбрасываются.
//
// Параметры:
//      Ссылка - ссылка на документ-регистратор.
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//      ФизическиеЛица - массив физических лиц (необязательно), если не задан,  
//						перечисленные суммы будут распределены по всем физлицам организации.
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет использоваться регистрация для организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьПеречисленныйНалогПоФизическимЛицам(Ссылка, Движения, Отказ, Организация, ДатаОперации, ФизическиеЛица = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаОперации);
		МассивРегистраций = Новый Массив;
		МассивРегистраций.Добавить(РегистрацияВНалоговомОргане);
		МассивРегистраций.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", МассивРегистраций);
	КонецЕсли;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УплатаКРаспределению.СуммаОстаток КАК Сумма,
	|	УплатаКРаспределению.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	УплатаКРаспределению.РегистрацияВНалоговомОргане,
	|	УплатаКРаспределению.РеквизитыПлатежногоПоручения,
	|	УплатаКРаспределению.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению.Остатки(
	|			&ДатаОстатков,
	|			Организация = &Организация
	|				И РегистрацияВНалоговомОргане В (&РегистрацияВНалоговомОргане)) КАК УплатаКРаспределению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	МесяцНалоговогоПериода";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ПеречисленныйНалог = Результат.Выгрузить();
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ПеречисленныйНалог Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокиРаспределения = РаспределитьПеречисленныйНалогПоФизическимЛицам(Ссылка, Организация, ДатаОперации, СтрокаДанных.Сумма, СтрокаДанных.МесяцНалоговогоПериода, РегистрацияВНалоговомОргане, ФизическиеЛица);
		Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
			ЕстьНовыеСтроки = Истина;
			НоваяСтрока = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, СтрокаТЗ);
			НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
			НоваяСтрока = СтрокаУплатыНалоговогоАгента(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных);
			НоваяСтрока.Сумма = СтрокаТЗ.Сумма;
			НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		Если Записывать Тогда
			Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записать();
			Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записывать = Ложь;
		Иначе
			Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ВычетВПределахНормативовПоАвторскимВознаграждениям() Экспорт

	Возврат УчетНДФЛКлиентСервер.ВычетВПределахНормативовПоАвторскимВознаграждениям();

КонецФункции

// Уточняет значение поля РегистрацияВНалоговомОргане в строке регистра.
// Параметры:
//		СтрокаДанных - срока набора записей учетного регистра, содержит поле РегистрацияВНалоговомОргане.
//      РегистрацияПодразделенияВНалоговомОргане - регистрация в НО, указанная в подразделении (возможно пустая).
//      РегистрацияОрганизацииВНалоговомОргане - регистрация в НО, указанная в организации.
//
Процедура ПроставитьРегистрациюВНалоговомОрганеВСтроке(СтрокаДанных, РегистрацияПодразделенияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане) Экспорт
	СтрокаДанных.РегистрацияВНалоговомОргане = ?(ЗначениеЗаполнено(РегистрацияПодразделенияВНалоговомОргане), РегистрацияПодразделенияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане);
КонецПроцедуры	

// Формирует строку движения по регистру СведенияОДоходахНДФЛ.
//
// Параметры:
//		СведенияОДоходахНДФЛ - набор записей регистра накопления СведенияОДоходахНДФЛ.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля):
//					ФизическоеЛицо, с непустым значением
//					ДатаПолученияДохода, с непустым значением
//					МесяцНалоговогоПериода, с непустым значением
//					КодДохода, с непустым значением
//					КодВычета
//					СтавкаНалогообложения
//					ИсточникДоходаЗаПределамиРФ
//					РегистрацияВНалоговомОргане
//					СуммаДохода
//					СуммаВычета.
//					Начисление
//					Подразделение
//					Сотрудник
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Функция СтрокаСведенийОДоходах(СведенияОДоходахНДФЛ, Организация, ДатаОперации, ДанныеДокумента, ОкончательныйРасчет = Истина) Экспорт
	
	НоваяСтрока = СведенияОДоходахНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.ДоходМежрасчетногоПериода = Не ОкончательныйРасчет;
	Если УчетНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(Год(НоваяСтрока.МесяцНалоговогоПериода)).Найти(НоваяСтрока.КодДохода) <> Неопределено Тогда
		Если НоваяСтрока.КодДохода <> Справочники.ВидыДоходовНДФЛ.Код1010 Тогда
			НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
		КонецЕсли;
	Иначе 
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	Если НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль И НоваяСтрока.МесяцНалоговогоПериода < ДатаПереходаНаКодыОКТМО() Тогда
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	
	Возврат НоваяСтрока
	
КонецФункции

// Формирует строку движения по регистру РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево
//		Организация
//		ДатаОперации - дата
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля):
//					ФизическоеЛицо, с непустым значением.
//					Ставка, с непустым значением
//					МесяцНалоговогоПериода, с непустым значением
//					РегистрацияВНалоговомОргане, с непустым значением.
//					Сумма, с непустым значением
//					РеквизитыПлатежногоПоручения.
Функция СтрокаПеречисленияНДФЛПоНалогоплательщику(Движения, Организация, ДатаОперации, ДанныеДокумента) Экспорт
	
	НоваяСтрока = СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, ДанныеДокумента);
	
    Возврат НоваяСтрока
	
КонецФункции

// Процедура обеспечивает сбор сведений о хранении данных, 
// относящихся к персональным
//
// Параметры:
//		ТаблицаСведений - таблица значений с полями:
//			Объект 			- строка, содержащая полное имя объекта метаданных,
//			ПоляРегистрации - строка, в которой перечислены имена полей регистрации, 
//								отдельные поля регистрации отделяются запятой,
//								альтернативные - символом "|",
//			ПоляДоступа		- строка, в которой перечислены через запятую имена полей доступа.
//			ОбластьДанных	- строка с идентификатором области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ВозвратНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "СуммыВозврата.ПоСтавке13,СуммыВозврата.ПоСтавке09,СуммыВозврата.ПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "КодВычетаЛичный,ВычетыНаДетей.КодВычета";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ОперацияНалоговогоУчетаПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "СведенияОДоходах.СуммаДохода,СведенияОДоходах.СуммаВычета,СведенияОДоходах.СуммаНалогаИсчисленная,НДФЛИсчисленныйПоСтавке13.Сумма,ПредоставленныеВычеты.Сумма,НДФЛУдержанный.Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.АвансовыйПлатежИностранцаПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ПерерасчетНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.НалогПоСтавке09,Сотрудники.НалогПоСтавке13,Сотрудники.НалогПоСтавке35,Сотрудники.НалогПоСтавке13КЗачетуВозврату";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ПерерасчетНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке09,Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке13,Сотрудники.ЗачтеноАвансовыхПлатежейПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ПерерасчетНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник";
	НовыеСведения.ПоляДоступа		= "Сотрудники.НалогПоСтавке35КЗачетуВозврату,Сотрудники.ПримененныйВычетЛичный,Сотрудники.ПримененныйВычетЛичныйКЗачетуВозврату,ПримененныеВычетыНаДетейИИмущественные.РазмерВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ИНН,Адрес,ВидДокумента,СерияДокумента,НомерДокумента,Гражданство,ДатаРождения,СтатусНалогоплательщика,АдресЗаРубежом";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке13,ОблагаемаяСуммаДоходаПоСтавке13,ИсчисленоПоСтавке13,УдержаноПоСтавке13,ЗадолженностьПоСтавке13,ИзлишнеУдержаноПоСтавке13,ПеречисленоПоСтавке13";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке30,ОблагаемаяСуммаДоходаПоСтавке30,ИсчисленоПоСтавке30,УдержаноПоСтавке30,ЗадолженностьПоСтавке30,ИзлишнеУдержаноПоСтавке30,ПеречисленоПоСтавке30";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке9,ОблагаемаяСуммаДоходаПоСтавке9,ИсчисленоПоСтавке9,УдержаноПоСтавке9,ЗадолженностьПоСтавке9,ИзлишнеУдержаноПоСтавке9,ПеречисленоПоСтавке9";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке15,ОблагаемаяСуммаДоходаПоСтавке15,ИсчисленоПоСтавке15,УдержаноПоСтавке15,ЗадолженностьПоСтавке15,ИзлишнеУдержаноПоСтавке15,ПеречисленоПоСтавке15";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "ОбщаяСуммаДоходаПоСтавке35,ОблагаемаяСуммаДоходаПоСтавке35,ИсчисленоПоСтавке35,УдержаноПоСтавке35,ЗадолженностьПоСтавке35,ИзлишнеУдержаноПоСтавке35,ПеречисленоПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкаНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник,Фамилия,Имя,Отчество";
	НовыеСведения.ПоляДоступа		= "СведенияОДоходах.СуммаДохода,СведенияОДоходах.СуммаВычета,СведенияОВычетах.СуммаВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИНН,Сотрудники.Адрес,Сотрудники.ВидДокумента,Сотрудники.СерияДокумента,Сотрудники.НомерДокумента";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.Гражданство,Сотрудники.ДатаРождения,Сотрудники.СтатусНалогоплательщика,Сотрудники.АдресЗарубежом,СведенияОВычетах.КодВычета";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОбщаяСуммаДоходаПоСтавке13,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке13,Сотрудники.ИсчисленоПоСтавке13,Сотрудники.УдержаноПоСтавке13,Сотрудники.ЗадолженностьПоСтавке13";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИзлишнеУдержаноПоСтавке13,Сотрудники.ПеречисленоПоСтавке13,Сотрудники.ОбщаяСуммаДоходаПоСтавке30,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке30";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИсчисленоПоСтавке30,Сотрудники.УдержаноПоСтавке30,Сотрудники.ЗадолженностьПоСтавке30,Сотрудники.ИзлишнеУдержаноПоСтавке30,Сотрудники.ПеречисленоПоСтавке30";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОбщаяСуммаДоходаПоСтавке9,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке9,Сотрудники.ИсчисленоПоСтавке9,Сотрудники.УдержаноПоСтавке9,Сотрудники.ЗадолженностьПоСтавке9";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ИзлишнеУдержаноПоСтавке9,Сотрудники.ПеречисленоПоСтавке9,Сотрудники.ОбщаяСуммаДоходаПоСтавке15,Сотрудники.ОблагаемаяСуммаДоходаПоСтавке15,Сотрудники.ИсчисленоПоСтавке15";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.УдержаноПоСтавке15,Сотрудники.ЗадолженностьПоСтавке15,Сотрудники.ИзлишнеУдержаноПоСтавке15,Сотрудники.ПеречисленоПоСтавке15,Сотрудники.ОбщаяСуммаДоходаПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ОблагаемаяСуммаДоходаПоСтавке35,Сотрудники.ИсчисленоПоСтавке35,Сотрудники.УдержаноПоСтавке35,Сотрудники.ЗадолженностьПоСтавке35,Сотрудники.ИзлишнеУдержаноПоСтавке35";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.СправкиНДФЛДляПередачиВНалоговыйОрган";
	НовыеСведения.ПоляРегистрации	= "Сотрудники.Сотрудник,СведенияОДоходах.Сотрудник,СведенияОВычетах.Сотрудник,Сотрудники.Фамилия,Сотрудники.Имя,Сотрудники.Отчество";
	НовыеСведения.ПоляДоступа		= "Сотрудники.ПеречисленоПоСтавке35,СведенияОДоходах.СуммаДохода,СведенияОДоходах.СуммаВычета,СведенияОВычетах.СуммаВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ";
	НовыеСведения.ПоляРегистрации	= "Сотрудник";
	НовыеСведения.ПоляДоступа		= "РасходыНаСтроительствоПриобретение,ПроцентыПоКредитам,ПроцентыПриПерекредитовании";
	НовыеСведения.ОбластьДанных		= "Имущество";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.ИмущественныеВычетыНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Имущество";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрНакопления.СведенияОДоходахНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо,Сотрудник";
	НовыеСведения.ПоляДоступа		= "СуммаДохода,СуммаВычета";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Размер";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.СтандартныеВычетыНаДетейНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "КодВычета,КоличествоДетей,КоличествоДетейПоОкончании";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "КодВычетаЛичный";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Статус";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
КонецПроцедуры

// Добавляет в МенеджерВременныхТаблиц временную таблицу с данными НДФЛ по документу.
//
Процедура СоздатьВТДанныеНДФЛПоДокументу(МенеджерВременныхТаблиц, ДокументСсылка, ОписаниеТаблицДокумента = Неопределено, ФизическиеЛица = Неопределено) Экспорт
	
	Если ФизическиеЛица = Неопределено Тогда
		ОтборПоФизическимЛицам = Ложь;
	Иначе
		ОтборПоФизическимЛицам = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Ссылка,
	|	ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ КАК ИдентификаторСтроки,
	|	ТаблицаНДФЛ.НомерСтроки,
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.Подразделение КАК Подразделение,
	|	ТаблицаНДФЛ.Налог КАК НалогПоСтавке13,
	|	ТаблицаНДФЛ.ЗачтеноАвансовыхПлатежей КАК ЗачтеноАвансовыхПлатежейПоСтавке13,
	|	ТаблицаНДФЛ.НалогКЗачетуВозврату КАК НалогПоСтавке13КЗачетуВозврату,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичный,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозврату,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетИмущественныйРасходы.РазмерВычета, 0)) КАК ПримененныйВычетИмущественныйРасходы,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетИмущественныйПроцентыПоКредитам.РазмерВычета, 0)) КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетИмущественныйПроцентыПриПерекредитовании.РазмерВычета, 0)) КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаДетей.РазмерВычета, 0)) КАК ПримененныйВычетНаДетей,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаДетейДвойной.РазмерВычета, 0)) КАК ПримененныйВычетНаДетейДвойной,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаДетейДвойнойВторой.РазмерВычета, 0)) КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаВторогоРебенка.РазмерВычета, 0)) КАК ПримененныйВычетНаВторогоРебенка,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаВторогоРебенкаДвойной.РазмерВычета, 0)) КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаВторогоРебенкаДвойнойВторой.РазмерВычета, 0)) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаТретьегоРебенка.РазмерВычета, 0)) КАК ПримененныйВычетНаТретьегоРебенка,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаТретьегоРебенкаДвойной.РазмерВычета, 0)) КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаТретьегоРебенкаДвойнойВторой.РазмерВычета, 0)) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаДетейИнвалидов.РазмерВычета, 0)) КАК ПримененныйВычетНаДетейИнвалидов,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаДетейИнвалидовДвойной.РазмерВычета, 0)) КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СУММА(ЕСТЬNULL(ПримененныйВычетНаДетейИнвалидовДвойнойВторой.РазмерВычета, 0)) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой
	|ПОМЕСТИТЬ ВТДанныеНДФЛ
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетИмущественныйРасходы
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетИмущественныйРасходы.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетИмущественныйРасходы.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетИмущественныйРасходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетИмущественныйПроцентыПоКредитам
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетИмущественныйПроцентыПоКредитам.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетИмущественныйПроцентыПоКредитам.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетИмущественныйПроцентыПоКредитам.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетИмущественныйПроцентыПриПерекредитовании.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетИмущественныйПроцентыПриПерекредитовании.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетИмущественныйПроцентыПриПерекредитовании.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаДетей
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаДетей.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаДетей.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаДетейДвойной
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаДетейДвойной.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаДетейДвойной.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаДетейДвойной.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаДетейДвойнойВторой
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаДетейДвойнойВторой.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаДетейДвойнойВторой.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаДетейДвойнойВторой.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаВторогоРебенка
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаВторогоРебенка.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаВторогоРебенка.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаВторогоРебенка.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаВторогоРебенкаДвойной
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаВторогоРебенкаДвойной.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаВторогоРебенкаДвойной.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаВторогоРебенкаДвойной.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаВторогоРебенкаДвойнойВторой.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаВторогоРебенкаДвойнойВторой.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаВторогоРебенкаДвойнойВторой.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаТретьегоРебенка
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаТретьегоРебенка.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаТретьегоРебенка.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаТретьегоРебенка.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаТретьегоРебенкаДвойной
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаТретьегоРебенкаДвойной.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаТретьегоРебенкаДвойной.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаТретьегоРебенкаДвойной.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаТретьегоРебенкаДвойнойВторой.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаТретьегоРебенкаДвойнойВторой.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаТретьегоРебенкаДвойнойВторой.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаДетейИнвалидов
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаДетейИнвалидов.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаДетейИнвалидов.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаДетейИнвалидов.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаДетейИнвалидовДвойной
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаДетейИнвалидовДвойной.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаДетейИнвалидовДвойной.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаДетейИнвалидовДвойной.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112))
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ТаблицаПримененныеВычеты КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой
	|		ПО ТаблицаНДФЛ.Ссылка = ПримененныйВычетНаДетейИнвалидовДвойнойВторой.Ссылка
	|			И ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ = ПримененныйВычетНаДетейИнвалидовДвойнойВторой.ИдентификаторСтрокиНДФЛ
	|			И (ПримененныйВычетНаДетейИнвалидовДвойнойВторой.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113))
	|ГДЕ
	|	ТаблицаНДФЛ.Ссылка = &Ссылка
	|	И ТаблицаНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.Ссылка,
	|	ТаблицаНДФЛ.НомерСтроки,
	|	ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.Налог,
	|	ТаблицаНДФЛ.ЗачтеноАвансовыхПлатежей,
	|	ТаблицаНДФЛ.НалогКЗачетуВозврату,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичный,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
	|	ТаблицаНДФЛ.ПримененныйВычетЛичныйКЗачетуВозврату";
	
	Если ОписаниеТаблицДокумента = Неопределено Тогда
		ПолноеИмяДокумента = ДокументСсылка.Метаданные().ПолноеИмя();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ПолноеИмяДокумента + ".НДФЛ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаПримененныеВычеты", ПолноеИмяДокумента + ".ПримененныеВычетыНаДетейИИмущественные");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ОписаниеТаблицДокумента.ИмяТаблицыСНалогами);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаПримененныеВычеты", ОписаниеТаблицДокумента.ИмяТаблицыСВычетами);
	КонецЕсли;
	
	// Создаем временную таблицу ВТДанныеНДФЛ.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если ОтборПоФизическимЛицам Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ТаблицаНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)", "");
	КонецЕсли; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает таблицу значений с данными по НДФЛ, прочитанную из данных документа.
//      	 
// Параметры:
//      ДокументСсылка - ДокументСсылка - документ, содержащий сведения о суммах налогов и вычетов.
//      ОписаниеТаблицДокумента - структура - (необязательный), с полями
//      			ИмяТаблицыСНалогами
//      			ИмяТаблицыСВычетами
//      	если не указан, в качестве источника данных используются табличные
//      		части документа: НДФЛ и ПримененныеВычетыНаДетейИИмущественные
//      	если указан, тогда упомянутые таблицы (реальные или временные) должны  
//				иметь тот же состав полей, что имеют табличные части документа 
//				НачислениеЗарплаты НДФЛ и ПримененныеВычетыНаДетейИИмущественные.
//		МенеджерВременныхТаблиц - (необязательный), должен содержать перечисленные 
//      	в ОписаниеТаблицДокумента временные таблицы.
//      	 
// Возвращаемое значение:
//	таблица значений с колонками:
//		Ссылка,
//		НомерСтроки,
//		ФизическоеЛицо,
//		МесяцНалоговогоПериода,
//		Подразделение,
//		НалогПоСтавке13,
//		ЗачтеноАвансовыхПлатежейПоСтавке13,
//		НалогПоСтавке13КЗачетуВозврату,
//		ПримененныйВычетЛичныйКодВычета,
//		ПримененныйВычетЛичный,
//		ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
//		ПримененныйВычетЛичныйКЗачетуВозврату,
//		ПримененныйВычетИмущественныйРасходы,
//		ПримененныйВычетИмущественныйПроцентыПоКредитам,
//		ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
//		ПримененныйВычетНаДетей,
//		ПримененныйВычетНаДетейДвойной,
//		ПримененныйВычетНаДетейДвойнойВторой,
//		ПримененныйВычетНаВторогоРебенка,
//		ПримененныйВычетНаВторогоРебенкаДвойной,
//		ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
//		ПримененныйВычетНаТретьегоРебенка,
//		ПримененныйВычетНаТретьегоРебенкаДвойной,
//		ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
//		ПримененныйВычетНаДетейИнвалидов,
//		ПримененныйВычетНаДетейИнвалидовДвойной,
//		ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//      	 
Функция ДанныеДокументаОНалогеПоОсновнойСтавкеИВычетах(ДокументСсылка, ОписаниеТаблицДокумента = Неопределено, МенеджерВременныхТаблиц = Неопределено, ФизическиеЛица = Неопределено) Экспорт

	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	СоздатьВТДанныеНДФЛПоДокументу(МенеджерВременныхТаблиц, ДокументСсылка, ОписаниеТаблицДокумента, ФизическиеЛица);
	
	// Получаем данные НДФЛ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТДанныеНДФЛ КАК НДФЛ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
    Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

// Функция возвращает код вычета для дохода НДФЛ.
// Если код вычета не определен, то возвращается пустая ссылка.
Функция КодВычетаПоКодуДоходаНДФЛ(КодДоходаНДФЛ) Экспорт
	КодВычета = Справочники.ВидыВычетовНДФЛ.ПустаяСсылка();	
	Если ЗначениеЗаполнено(КодДоходаНДФЛ) Тогда
		РеквизитыКодаДохода = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодДоходаНДФЛ, "ИмеетЕдинственныйВычет,ВычетПоУмолчанию");
		Если РеквизитыКодаДохода.ИмеетЕдинственныйВычет Тогда
			КодВычета  = РеквизитыКодаДохода.ВычетПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	Возврат КодВычета	
КонецФункции 

// Возвращает соответствие кодов доходов и допустимых для них вычетов.
// Соответствие поддерживается с 2010 года.
//
// Параметры:
//	НалоговыйПериод - число - налоговый период (год).
//
// Возвращаемое значение:
//	Соответствие:
//		ключом является Код дохода - СправочникСсылка.ВидыДоходовНДФЛ
//		значением является массив Кодов вычета - СправочникСсылка.ВидыВычетовНДФЛ
//
Функция ВычетыКДоходам(НалоговыйПериод) Экспорт
	
	СоответствиеДоступныхВычетовДоходам = Новый Соответствие;
	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1010, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код601));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1211, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код607));
	
	// Описание кодов 1530 и 1531 по годам.
	Если НалоговыйПериод > 2014 Тогда // с 2015 года
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод = 2014 Тогда // 2014 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод > 2011 Тогда // 2012-2013 годы
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	ИначеЕсли НалоговыйПериод = 2011 Тогда // 2011 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код211);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код215);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	Иначе // по 2010 год
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
		
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
		
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
		
	КонецЕсли;
	
	// Описание кода 1532 по годам.
	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);	
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код206);
	Если НалоговыйПериод = 2010 Или НалоговыйПериод = 2011 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код207);
	КонецЕсли;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	Если НалоговыйПериод = 2011 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код210);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1532, МассивДоступныхВычетов);
	
	// Описание кода 1533 по годам.
	МассивДоступныхВычетов = Новый Массив;
	Если НалоговыйПериод = 2010 Или НалоговыйПериод = 2011 Тогда 
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);	
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);	
	КонецЕсли;
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код220);
	КонецЕсли;
	Если НалоговыйПериод >= 2011 И НалоговыйПериод <= 2014 Тогда // с 2011 по 2014 годы
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1533, МассивДоступныхВычетов);
	
	// Описание кода 1535 по годам.
	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код207);
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	КонецЕсли;
	Если НалоговыйПериод >= 2011 И НалоговыйПериод <= 2014 Тогда // с 2011 по 2014 годы
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код210);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1535, МассивДоступныхВычетов);
		
	// Описание кода 1536 по годам.
	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);	
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код224);
	КонецЕсли;
	Если НалоговыйПериод > 2011 И НалоговыйПериод <= 2014 Тогда // с 2012 по 2014 годы
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	КонецЕсли;
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1536, МассивДоступныхВычетов);
		
	// Описание кода 1537 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код211);	
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1537, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1538 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код215);
		Если НалоговыйПериод = 2011 Тогда // 2011 год
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код214);
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
		КонецЕсли;
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1538, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1539 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		Если НалоговыйПериод = 2011 Тогда // 2011 год
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
		КонецЕсли;
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код213);
		Если НалоговыйПериод <= 2014 Тогда
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код214);
		КонецЕсли;
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1539, МассивДоступныхВычетов);
	КонецЕсли;
	
	// Описание кода 1541 по годам.
	Если НалоговыйПериод >= 2011 Тогда // с 2011 года
		МассивДоступныхВычетов = Новый Массив;
		Если НалоговыйПериод <= 2014 Тогда // по 2014 год
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код213);
		КонецЕсли;
		Если НалоговыйПериод >= 2014 Тогда // с 2014 года
			МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
		КонецЕсли;
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1541, МассивДоступныхВычетов);
	КонецЕсли;
	
	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1543, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код221));
	КонецЕсли;
	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2010, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код403));

	МассивДоступныхВычетов = Новый Массив;
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2201, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2202, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2203, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2204, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2205, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2206, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2207, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2208, МассивДоступныхВычетов);
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2209, МассивДоступныхВычетов);
	
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2720, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код501));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2730, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код502));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2740, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код505));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2760, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код503));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2761, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код506));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2762, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код508));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2770, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код504));
	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2790, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код507));
	
	// описание кода 2791
	Если НалоговыйПериод < 2017 Тогда // по 2016 год
		СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2791, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код509));
	КонецЕсли;

	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код4800, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код620));
		
	Возврат СоответствиеДоступныхВычетовДоходам;
	
КонецФункции

// Возвращает массив кодов вычетов соответствующего года с учетом ограничения переданной группой вычетов.
// Поддерживается с 2010 года.
//
// Параметры:
//	НалоговыйПериод - число - налоговый период (год).
//	ГруппаВычета - ПеречислениеСсылка.ГруппыВычетовПоНДФЛ, массив - 
//
// Возвращаемое значение:
//	Массив значений типа СправочникСсылка.ВидыВычетовНДФЛ
//
Функция ВычетыНалогоплательщика(НалоговыйПериод, Знач ГруппаВычета = Неопределено) Экспорт

	МассивДоступныхВычетов = Новый Массив;
	
	// Личные вычеты
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код104);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код105);
	
	// Вычеты на детей
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код108);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код109);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код110);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код111);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код112);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код113);
	Если НалоговыйПериод > 2011 Тогда
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код115);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код116);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код119);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код120);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код123);
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код124);
	КонецЕсли;
	
	// Имущественные вычеты
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код311);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код312);
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код318);
	
	// Социальные вычеты
	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код319);
	
	// Отмененные, добавленные вычеты с 2010 года
	
	Если НалоговыйПериод > 2012 Тогда // с 2013 добавлен 320 вычет
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код320);
	ИначеЕсли НалоговыйПериод > 2011 Тогда // с 2012 отменен 103 вычет
	Иначе // по 2011
		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код103);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ГруппаВычета) Тогда
		ГруппаВычета = Новый Массив;
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Имущественные);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Социальные);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
		ГруппаВычета.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппыВычетов", ГруппаВычета);
	Запрос.УстановитьПараметр("Ссылки", МассивДоступныхВычетов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыВычетовНДФЛ.Ссылка
	|ИЗ
	|	Справочник.ВидыВычетовНДФЛ КАК ВидыВычетовНДФЛ
	|ГДЕ
	|	ВидыВычетовНДФЛ.ГруппаВычета В(&ГруппыВычетов)
	|	И ВидыВычетовНДФЛ.Ссылка В(&Ссылки)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция РассчитываемыеРесурсыПоОсновнойСтавке() Экспорт

	Возврат "НалогПоСтавке13,ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей() + "," + РассчитываемыеРесурсыИмущественныхВычетов();

КонецФункции 

Функция РассчитываемыеРесурсыВычетовНаДетей() 

	Возврат "ПримененныйВычетНаДетей,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейДвойнойВторой,ПримененныйВычетНаВторогоРебенка,ПримененныйВычетНаВторогоРебенкаДвойной,ПримененныйВычетНаВторогоРебенкаДвойнойВторой,ПримененныйВычетНаТретьегоРебенка,ПримененныйВычетНаТретьегоРебенкаДвойной,ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейИнвалидовДвойнойВторой";

КонецФункции 

Функция РассчитываемыеРесурсыИмущественныхВычетов() 

	Возврат "ПримененныйВычетИмущественныйРасходы,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании";

КонецФункции 

Функция ВидыВычетовПоПолямТаблицы()

	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = Новый Соответствие;
	ВидыВычетов.Вставить("ПримененныйВычетИмущественныйПроцентыПоКредитам", Справочники.ВидыВычетовНДФЛ.Код312);
	ВидыВычетов.Вставить("ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", Справочники.ВидыВычетовНДФЛ.Код318);
	ВидыВычетов.Вставить("ПримененныйВычетИмущественныйРасходы", Справочники.ВидыВычетовНДФЛ.Код311);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаДетей", Справочники.ВидыВычетовНДФЛ.Код108);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейДвойной", Справочники.ВидыВычетовНДФЛ.Код110);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код111);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенка", Справочники.ВидыВычетовНДФЛ.Код115);
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаДвойной", Справочники.ВидыВычетовНДФЛ.Код119);
	ВидыВычетов.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код123);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенка", Справочники.ВидыВычетовНДФЛ.Код116);
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойной", Справочники.ВидыВычетовНДФЛ.Код120);
	ВидыВычетов.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код124);
	
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидов", Справочники.ВидыВычетовНДФЛ.Код109);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовДвойной", Справочники.ВидыВычетовНДФЛ.Код112);
	ВидыВычетов.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойВторой", Справочники.ВидыВычетовНДФЛ.Код113);
	
	Возврат ВидыВычетов	

КонецФункции

// Даты изменений законодательства

// Возвращает дату вступления в силу Федерального Закона от 27.07.2010 № 229-ФЗ.
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаЗакона229ФЗ() Экспорт 

	Возврат '20110101'

КонецФункции

// Возвращает дату начала действия положений о беженцах Федерального закона от 04.10.2014 № 285-ФЗ
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаЗакона285ФЗ() Экспорт 

	Возврат '20140101'

КонецФункции 

Функция ДатаИзмененияНалогообложенияДивидендов() Экспорт 

	Возврат '20150101'

КонецФункции

Функция ДатаПереходаНаКодыОКТМО() Экспорт

	Возврат '20140101'

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Составляет структуру для заполнения таблиц НДФЛ, ПримененныеВычетыНаДетейИИмущественные в форме документов.
// 
// Параметры:
//	МенеджерВременныхТаблиц - в котором определена таблица ВТФизическиеЛица
//		(подробнее см. комментарий к методу РассчитатьНалогПоОсновнойСтавке)
//  ДокументСсылка.
//	Организация
//	МесяцРасчета
//	ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//	                               (соответствует значению Истина).
//	ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по Регистратору.
//
// Возвращаемое значение - структура для заполнения таблиц НДФЛ и ПримененныеВычетыНаДетейИИмущественные.
//
Функция РезультатРасчетаНДФЛ(МенеджерВременныхТаблиц, ДокументСсылка, Организация, МесяцНачисления, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	
	НДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцНачисления, МенеджерВременныхТаблиц,,,,ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога);
	
	Возврат ДанныеОРезультатахРасчетаНДФЛДляДокумента(НДФЛ)
	
КонецФункции

Функция ДанныеОРезультатахРасчетаНДФЛДляДокумента(НДФЛ) Экспорт

	// Идентификатор строки в таблице НДФЛ для связи с таблицей ПримененныеВычетыНаДетейИИмущественные.
	НДФЛ.Колонки.Добавить("ИдентификаторСтрокиНДФЛ", Новый ОписаниеТипов("Число"));
	// Приводим таблицу к структуре, соответствующей документам расчета.
	НДФЛ.Колонки.Добавить("Налог", Новый ОписаниеТипов("Число"));
	НДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежей", Новый ОписаниеТипов("Число"));
	НДФЛ.Колонки.Добавить("НалогКЗачетуВозврату", Новый ОписаниеТипов("Число"));
	НДФЛ.Колонки.Добавить("ПримененныйВычетЛичныйКодВычета");
	НДФЛ.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	НДФЛ.Колонки.Добавить("СуммаКорректировкиВыплаты", Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаНДФЛ Из НДФЛ Цикл
		СтрокаНДФЛ.Налог = СтрокаНДФЛ.НалогПоСтавке13;
		СтрокаНДФЛ.ЗачтеноАвансовыхПлатежей = СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13;
		СтрокаНДФЛ.НалогКЗачетуВозврату = СтрокаНДФЛ.НалогПоСтавке13КЗачетуВозврату;
		СтрокаНДФЛ.ПримененныйВычетЛичныйКодВычета = СтрокаНДФЛ.КодВычетаЛичный;
		СтрокаНДФЛ.Сумма = СтрокаНДФЛ.НалогПоСтавке13 - СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13;
		СтрокаНДФЛ.СуммаКорректировкиВыплаты = СтрокаНДФЛ.НалогПоСтавке13КЗачетуВозврату;
	КонецЦикла;
	
	ПримененныеВычетыНаДетейИИмущественные = Новый ТаблицаЗначений;
	ПримененныеВычетыНаДетейИИмущественные.Колонки.Добавить("ИдентификаторСтрокиНДФЛ", Новый ОписаниеТипов("Число"));
	ПримененныеВычетыНаДетейИИмущественные.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	ПримененныеВычетыНаДетейИИмущественные.Колонки.Добавить("РазмерВычета", Новый ОписаниеТипов("Число"));
	
	// Определяем соответствие видов вычетов полям таблицы.
	ВидыВычетов = ВидыВычетовПоПолямТаблицы();
	
	// Заполняем таблицу ПримененныеВычетыНаДетейИИмущественные: 
	// для каждой строки НДФЛ добавляем столько отдельных строк, сколько вычетов было применено.
	Для Каждого СтрокаНДФЛ Из НДФЛ Цикл
		СтрокаНДФЛ.ИдентификаторСтрокиНДФЛ = НДФЛ.Индекс(СтрокаНДФЛ);
		Для Каждого КлючИЗначение Из ВидыВычетов Цикл
			ИмяПоля = КлючИЗначение.Ключ;
			КодВычета = КлючИЗначение.Значение;
			Если ЗначениеЗаполнено(СтрокаНДФЛ[ИмяПоля]) Тогда
				СтрокаВычетов = ПримененныеВычетыНаДетейИИмущественные.Добавить();
				СтрокаВычетов.ИдентификаторСтрокиНДФЛ = СтрокаНДФЛ.ИдентификаторСтрокиНДФЛ;
				СтрокаВычетов.КодВычета = КодВычета;
				СтрокаВычетов.РазмерВычета = СтрокаНДФЛ[ИмяПоля];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Новый Структура("НДФЛ, ПримененныеВычетыНаДетейИИмущественные", НДФЛ, ПримененныеВычетыНаДетейИИмущественные);

КонецФункции

// Специфические алгоритмы чтения данных

Процедура СоздатьВТСтавкиНалогаЧислом(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13) КАК СтавкаНалогообложения,
	|	0.13 КАК Размер
	|ПОМЕСТИТЬ ВТСтавкиНалогаЧислом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09),
	|	0.09
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35),
	|	0.35
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
	|	0.3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15),
	|	0.15
	|";
	
	Запрос.Выполнить();

КонецПроцедуры 

Процедура СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка КАК РегистрацияВНалоговомОргане,
	|	РегистрацииВНалоговомОргане.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацииВНалоговомОргане.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацииВНалоговомОргане.КПП КАК КПП,
	|	РегистрацииВНалоговомОргане.Код КАК КодНалоговогоОргана
	|ПОМЕСТИТЬ ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Организация";
	
	Запрос.Выполнить();

КонецПроцедуры 

// Помещает данные о вычетах сотрудника во временную таблицу.
//
// Параметры:
//	МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо
//		Период - дата, на которую получаем действующие по физ. лицу вычеты.
//	ИмяВременнойТаблицыОтбора - имя временной таблицы с параметрами "среза".
//
// В результате в менеджер временных таблиц помещается таблица
//	ВТСтандартныеВычетыПоНДФЛЗаПериод с полями
//		ФизическоеЛицо
//		КодВычета.
//		Месяц - месяц на который получены действующие вычеты.
//		Основание
//		ЛичныйВычет - булево, данный признак отличает вычеты на детей от личных вычетов.
Процедура СоздатьВТСтандартныеВычетыПоНДФЛЗаПериод(МенеджерВременныхТаблиц, ТолькоРазрешенные, ДатаАктуальности, ИмяВременнойТаблицыОтбора = "ВТПериодыФизическихЛиц") Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыФизическихЛиц.Период КАК МесяцПериода,
	|	МАКСИМУМ(СтандартныеВычетыФизическихЛицНДФЛ.Период) КАК МесяцВычета
	|ПОМЕСТИТЬ ВТПериодыСрезаЛичныхВычетов
	|ИЗ
	|	ВТПериодыФизическихЛиц КАК ПериодыФизическихЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ КАК СтандартныеВычетыФизическихЛицНДФЛ
	|		ПО ПериодыФизическихЛиц.ФизическоеЛицо = СтандартныеВычетыФизическихЛицНДФЛ.ФизическоеЛицо
	|			И ПериодыФизическихЛиц.Период >= СтандартныеВычетыФизическихЛицНДФЛ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизическихЛиц.ФизическоеЛицо,
	|	ПериодыФизическихЛиц.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации) КАК МесяцРегистрации,
	|	ПериодыФизическихЛиц.Период КАК МесяцПериода
	|ПОМЕСТИТЬ ВТМесяцаСрезаВычетовНаДетей
	|ИЗ
	|	ВТПериодыФизическихЛиц КАК ПериодыФизическихЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|		ПО ПериодыФизическихЛиц.ФизическоеЛицо = СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо
	|			И ПериодыФизическихЛиц.Период >= СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации
	|			И (СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации <= &ДатаАктуальности)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо,
	|	ПериодыФизическихЛиц.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтандартныеВычетыНаДетейНДФЛ.КодВычета КАК КодВычета,
	|	СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации КАК МесяцРегистрации,
	|	МАКСИМУМ(СтандартныеВычетыНаДетейНДФЛ.ДатаДействия) КАК ДатаДействия,
	|	МесяцаРегистрацииВычетов.МесяцПериода КАК МесяцПериода
	|ПОМЕСТИТЬ ВТДатыСрезаВычетовНаДетей
	|ИЗ
	|	ВТМесяцаСрезаВычетовНаДетей КАК МесяцаРегистрацииВычетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|		ПО МесяцаРегистрацииВычетов.ФизическоеЛицо = СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо
	|			И МесяцаРегистрацииВычетов.МесяцРегистрации = СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации
	|			И МесяцаРегистрацииВычетов.МесяцПериода >= СтандартныеВычетыНаДетейНДФЛ.ДатаДействия
	|
	|СГРУППИРОВАТЬ ПО
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо,
	|	СтандартныеВычетыНаДетейНДФЛ.КодВычета,
	|	СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации,
	|	МесяцаРегистрацииВычетов.МесяцПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтандартныеВычетыСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтандартныеВычетыСрезПоследних.МесяцПериода КАК Месяц,
	|	СтандартныеВычетыФизическихЛицНДФЛ.КодВычетаЛичный КАК КодВычета,
	|	1 КАК Количество,
	|	СтандартныеВычетыФизическихЛицНДФЛ.Основание,
	|	ИСТИНА КАК ЛичныйВычет
	|ПОМЕСТИТЬ ВТСтандартныеВычетыПоНДФЛЗаПериод
	|ИЗ
	|	ВТПериодыСрезаЛичныхВычетов КАК СтандартныеВычетыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ КАК СтандартныеВычетыФизическихЛицНДФЛ
	|		ПО СтандартныеВычетыСрезПоследних.ФизическоеЛицо = СтандартныеВычетыФизическихЛицНДФЛ.ФизическоеЛицо
	|			И СтандартныеВычетыСрезПоследних.МесяцВычета = СтандартныеВычетыФизическихЛицНДФЛ.Период
	|			И (СтандартныеВычетыФизическихЛицНДФЛ.КодВычетаЛичный <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо,
	|	СтандартныеВычетыНаДетейСрезПоследних.МесяцПериода,
	|	СтандартныеВычетыНаДетейНДФЛ.КодВычета,
	|	ВЫБОР
	|		КОГДА СтандартныеВычетыНаДетейНДФЛ.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И КОНЕЦПЕРИОДА(СтандартныеВычетыНаДетейНДФЛ.ДействуетДо, МЕСЯЦ) <= СтандартныеВычетыНаДетейСрезПоследних.МесяцПериода
	|			ТОГДА СтандартныеВычетыНаДетейНДФЛ.КоличествоДетейПоОкончании
	|		ИНАЧЕ СтандартныеВычетыНаДетейНДФЛ.КоличествоДетей
	|	КОНЕЦ,
	|	СтандартныеВычетыНаДетейНДФЛ.Основание,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыСрезаВычетовНаДетей КАК СтандартныеВычетыНаДетейСрезПоследних
	|		ПО СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо = СтандартныеВычетыНаДетейСрезПоследних.ФизическоеЛицо
	|			И СтандартныеВычетыНаДетейНДФЛ.КодВычета = СтандартныеВычетыНаДетейСрезПоследних.КодВычета
	|			И СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации = СтандартныеВычетыНаДетейСрезПоследних.МесяцРегистрации
	|			И СтандартныеВычетыНаДетейНДФЛ.ДатаДействия = СтандартныеВычетыНаДетейСрезПоследних.ДатаДействия
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СтандартныеВычетыНаДетейНДФЛ.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					И КОНЕЦПЕРИОДА(СтандартныеВычетыНаДетейНДФЛ.ДействуетДо, МЕСЯЦ) < СтандартныеВычетыНаДетейСрезПоследних.МесяцПериода
	|				ТОГДА СтандартныеВычетыНаДетейНДФЛ.КоличествоДетейПоОкончании
	|			ИНАЧЕ СтандартныеВычетыНаДетейНДФЛ.КоличествоДетей
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыСрезаЛичныхВычетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыСрезаВычетовНаДетей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМесяцаСрезаВычетовНаДетей";	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПериодыФизическихЛиц", ИмяВременнойТаблицыОтбора);
	
	Если НЕ ТолькоРазрешенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Дополняет данные о ставке налогообложения, используемой для резидентов РФ, 
// сведениями о реальной ставке обложения с учетом налогового статуса физического лица.
//
// Параметры:
//	МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо
//		Период, дата начала месяца
//		КодДохода, тип СправочникСсылка.ВидыДоходовНДФЛ
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента.
//	ИмяТаблицы - имя обрабатываемой временной таблицы.
//
// В результате в менеджер временных таблиц помещается таблица
//	ВТСтавкаНДФЛПоСтавкеРезидента с уникальными записями с полями
//		ФизическоеЛицо.
//		Статус
//		Период, дата начала месяца
//		КодДохода, тип СправочникСсылка.ВидыДоходовНДФЛ
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		СтавкаНДФЛ, тип ПеречислениеСсылка.НДФЛСтавки
//		СтавкаЧислом, тип Число, например, 0.13.
Процедура СоздатьВТСтавкаНДФЛПоСтавкеРезидента(МенеджерВременныхТаблиц, ИмяТаблицы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", ДатаИзмененияНалогообложенияДивидендов());
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", ДатаЗакона285ФЗ());
	
	СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ФизическиеЛицаПериоды.ФизическоеЛицо,
	|	ФизическиеЛицаПериоды.Период,
	|	ВЫБОР
	|		КОГДА ФизическиеЛицаПериоды.Период < &ДатаЗакона285ФЗ
	|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СписокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		МАКСИМУМ(СтатусФизическихЛиц.Период) КАК ПериодСтатуса,
	|		СписокФизическихЛиц.Период КАК Период
	|	ИЗ
	|		#ТаблицаНДФЛ КАК СписокФизическихЛиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛиц
	|			ПО СписокФизическихЛиц.ФизическоеЛицо = СтатусФизическихЛиц.ФизическоеЛицо
	|				И СписокФизическихЛиц.Период >= СтатусФизическихЛиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокФизическихЛиц.ФизическоеЛицо,
	|		СписокФизическихЛиц.Период) КАК ФизическиеЛицаПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
	|		ПО ФизическиеЛицаПериоды.ФизическоеЛицо = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо
	|			И ФизическиеЛицаПериоды.ПериодСтатуса = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ФизическиеЛицаСтатусыНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА ТаблицаНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					КОГДА ТаблицаНДФЛ.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК СтавкаНДФЛ
	|ПОМЕСТИТЬ ВТБезСтавкиНалогаЧислом
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = ФизическиеЛицаСтатусыНДФЛ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ТаблицаНДФЛ.СтавкаНДФЛ,
	|	СтавкиНалогаЧислом.Размер КАК СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	|ИЗ
	|	ВТБезСтавкиНалогаЧислом КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаЧислом
	|		ПО ТаблицаНДФЛ.СтавкаНДФЛ = СтавкиНалогаЧислом.СтавкаНалогообложения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкиНалогаЧислом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБезСтавкиНалогаЧислом";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

КонецПроцедуры

// Менеджер временных таблиц содержит таблицу ВТНачисления с полями.
//	Регистратор,
//	НомерСтроки,
//	ФизическоеЛицо
//	КодДохода
//	Сумма
//	КодВычета
//	КоличествоДетей
//	
// Формирует таблицу ВТВычетыКДоходамФизическихЛиц с полями.
//	Регистратор,
//	НомерСтроки,
//	ФизическоеЛицо
//	КодДохода
//	КодВычета
//	СуммаВычета
//
Процедура СоздатьВТВычетыКДоходамФизическихЛиц(Ссылка, Организация, ДатаПолученияДохода, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВычетВПределахНормативовПоАвторскимВознаграждениям", ВычетВПределахНормативовПоАвторскимВознаграждениям());
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ДатаПолученияДохода));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаПолученияДохода));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&КонецПериода КАК Период,
	|	Начисления.КодДохода
	|ПОМЕСТИТЬ ВТКодыДохода
	|ИЗ
	|	ВТНачисления КАК Начисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&КонецПериода КАК Период,
	|	СписокСотрудников.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТПоСотрудникам
	|ИЗ
	|	ВТНачисления КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо";
    Запрос.Выполнить();
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ВсеЗаписи = Истина;
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТПоСотрудникам", "ФизическоеЛицо");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения);
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТКодыДохода", "КодДохода");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ВычетыПоДоходамНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ФизическоеЛицо,
	|	Начисления.КодДохода,
	|	Начисления.Сумма,
	|	ВЫБОР
	|		КОГДА ВидыДоходовНДФЛ.ИмеетЕдинственныйВычет
	|			ТОГДА ВидыДоходовНДФЛ.ВычетПоУмолчанию
	|		ИНАЧЕ Начисления.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	Начисления.КоличествоДетей,
	|	Начисления.Регистратор,
	|	Начисления.НомерСтроки,
	|	ВычетыПоДоходам.ГодовойВычет,
	|	ВычетыПоДоходам.НормативЗатрат
	|ПОМЕСТИТЬ ВТВычетыПоДоходам
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|		ПО Начисления.КодДохода = ВидыДоходовНДФЛ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВычетыПоДоходамНДФЛСрезПоследних КАК ВычетыПоДоходам
	|		ПО Начисления.КодДохода = ВычетыПоДоходам.КодДохода
	|ГДЕ
	|	(ВычетыПоДоходам.ГодовойВычет <> 0
	|			ИЛИ ВычетыПоДоходам.НормативЗатрат <> 0)
	|	И ВЫБОР
	|			КОГДА ВидыДоходовНДФЛ.ИмеетЕдинственныйВычет
	|				ТОГДА ВидыДоходовНДФЛ.ВычетПоУмолчанию
	|			ИНАЧЕ Начисления.КодВычета
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код404)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.КодДохода,
	|	СУММА(СведенияОДоходах.СуммаВычета) КАК СуммаВычета
	|ПОМЕСТИТЬ ВТВычетыПредоставленные
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Регистратор <> &Ссылка
	|	И СведенияОДоходах.Период <= &КонецПериода
	|	И СведенияОДоходах.МесяцНалоговогоПериода МЕЖДУ &НачалоГода И &КонецПериода
	|	И СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И (СведенияОДоходах.ФизическоеЛицо, СведенияОДоходах.КодДохода) В
	|			(ВЫБРАТЬ
	|				ГодовойВычетПоДоходам.ФизическоеЛицо,
	|				ГодовойВычетПоДоходам.КодДохода
	|			ИЗ
	|				ВТВычетыПоДоходам КАК ГодовойВычетПоДоходам
	|			ГДЕ
	|				ГодовойВычетПоДоходам.ГодовойВычет <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.КодДохода";
    Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВычетыПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВычетыПоДоходам.КодДохода КАК КодДохода,
	|	ВЫБОР
	|		КОГДА ВычетыПредоставленные.СуммаВычета ЕСТЬ NULL 
	|			ТОГДА ВычетыПоДоходам.ГодовойВычет
	|		КОГДА ВычетыПоДоходам.ГодовойВычет > ВычетыПредоставленные.СуммаВычета
	|			ТОГДА ВычетыПоДоходам.ГодовойВычет - ВычетыПредоставленные.СуммаВычета
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПравоНаВычет
	|ИЗ
	|	ВТВычетыПоДоходам КАК ВычетыПоДоходам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВычетыПредоставленные КАК ВычетыПредоставленные
	|		ПО ВычетыПоДоходам.ФизическоеЛицо = ВычетыПредоставленные.ФизическоеЛицо
	|			И ВычетыПоДоходам.КодДохода = ВычетыПредоставленные.КодДохода
	|ГДЕ
	|	ВычетыПоДоходам.ГодовойВычет <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	КодДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВычетыПоДоходам.Регистратор КАК Регистратор,
	|	ВычетыПоДоходам.НомерСтроки КАК НомерСтроки,
	|	ВычетыПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВычетыПоДоходам.КодДохода,
	|	ВычетыПоДоходам.Сумма,
	|	ВычетыПоДоходам.КодВычета,
	|	0 КАК СуммаВычета
	|ИЗ
	|	ВТВычетыПоДоходам КАК ВычетыПоДоходам
	|ГДЕ
	|	ВычетыПоДоходам.ГодовойВычет <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результаты = Запрос.ВыполнитьПакет();
	
	ТаблицаВычетов = Результаты[0].Выгрузить();
	ТаблицаВычетов.Индексы.Добавить("ФизическоеЛицо,КодДохода");
    ТаблицаНачислений = Результаты[1].Выгрузить();
	СтруктураПоиска = Новый Структура("ФизическоеЛицо,КодДохода");
	Для каждого СтрокаТЗ Из ТаблицаНачислений Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЗ);
		СтрокаВычета = ТаблицаВычетов.НайтиСтроки(СтруктураПоиска)[0];
		Если СтрокаВычета.ПравоНаВычет = 0 Тогда
			СтрокаТЗ.СуммаВычета = 0
		ИначеЕсли СтрокаТЗ.Сумма > 0 Тогда
			СтрокаТЗ.СуммаВычета = Мин(СтрокаТЗ.Сумма, СтрокаВычета.ПравоНаВычет);
			СтрокаВычета.ПравоНаВычет = Макс(0, СтрокаВычета.ПравоНаВычет - СтрокаТЗ.СуммаВычета);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГодовойВычетПоДоходам", ТаблицаНачислений);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГодовойВычетПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГодовойВычетПоДоходам.КодДохода КАК КодДохода,
	|	ГодовойВычетПоДоходам.КодВычета КАК КодВычета,
	|	ГодовойВычетПоДоходам.СуммаВычета,
	|	ГодовойВычетПоДоходам.Регистратор,
	|	ГодовойВычетПоДоходам.НомерСтроки
	|ПОМЕСТИТЬ ВТГодовойВычетПоДоходам
	|ИЗ
	|	&ГодовойВычетПоДоходам КАК ГодовойВычетПоДоходам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГодовойВычетПоДоходам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГодовойВычетПоДоходам.КодДохода КАК КодДохода,
	|	ГодовойВычетПоДоходам.КодВычета КАК КодВычета,
	|	ГодовойВычетПоДоходам.СуммаВычета,
	|	ГодовойВычетПоДоходам.Регистратор,
	|	ГодовойВычетПоДоходам.НомерСтроки
	|ПОМЕСТИТЬ ВТВычетыКДоходамФизическихЛиц
	|ИЗ
	|	ВТГодовойВычетПоДоходам КАК ГодовойВычетПоДоходам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВычетыПоДоходам.ФизическоеЛицо,
	|	ВычетыПоДоходам.КодДохода,
	|	ВычетыПоДоходам.КодВычета,
	|	ВЫБОР
	|		КОГДА ВычетыПоДоходам.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код508)
	|			ТОГДА ВЫБОР
	|					КОГДА ВычетыПоДоходам.НормативЗатрат * ВычетыПоДоходам.КоличествоДетей < ВычетыПоДоходам.Сумма
	|						ТОГДА ВычетыПоДоходам.НормативЗатрат * ВычетыПоДоходам.КоличествоДетей
	|					ИНАЧЕ ВычетыПоДоходам.Сумма
	|				КОНЕЦ
	|		КОГДА ВычетыПоДоходам.КодВычета = &ВычетВПределахНормативовПоАвторскимВознаграждениям
	|				И ЕСТЬNULL(Статусы.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ТОГДА ВЫРАЗИТЬ(ВычетыПоДоходам.Сумма * ВычетыПоДоходам.НормативЗатрат / 100 КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВычетыПоДоходам.Регистратор,
	|	ВычетыПоДоходам.НомерСтроки
	|ИЗ
	|	ВТВычетыПоДоходам КАК ВычетыПоДоходам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛСрезПоследних КАК Статусы
	|		ПО ВычетыПоДоходам.ФизическоеЛицо = Статусы.ФизическоеЛицо
	|ГДЕ
	|	ВычетыПоДоходам.КодДохода В
	|			(ВЫБРАТЬ
	|				ВычетыПоДоходам.КодДохода
	|			ИЗ
	|				ВТВычетыПоДоходамНДФЛСрезПоследних КАК ВычетыПоДоходам
	|			ГДЕ
	|				ВычетыПоДоходам.НормативЗатрат <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	КодДохода,
	|	КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКодыДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПоСотрудникам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВычетыПоДоходам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВычетыПоДоходамНДФЛСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВычетыПредоставленные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТГодовойВычетПоДоходам";
 
	Запрос.Выполнить()

КонецПроцедуры

// Функция рассчитывает размер вычета, который можно применить к доходу.
// 
Функция ВычетКДоходуСотрудника(Ссылка, Организация, ДатаПолученияДохода, Сотрудник, КодДохода, КодВычетаНДФЛ, СуммаДохода, КоличествоДетей = 0) Экспорт 
	
	СуммаВычета = 0;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&КодДохода КАК КодДохода,
	|	&Сумма КАК Сумма,
	|	&КодВычета КАК КодВычета,
	|	&КоличествоДетей КАК КоличествоДетей,
	|	&Ссылка КАК Регистратор,
	|	0 КАК НомерСтроки
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник",			Сотрудник);
	Запрос.УстановитьПараметр("Ссылка",				Ссылка);
	Запрос.УстановитьПараметр("КодДохода",			КодДохода);
	Запрос.УстановитьПараметр("Сумма",				СуммаДохода);
	Запрос.УстановитьПараметр("КодВычета",			КодВычетаНДФЛ);
	Запрос.УстановитьПараметр("КоличествоДетей",	КоличествоДетей);
	Запрос.Выполнить();
	
	СоздатьВТВычетыКДоходамФизическихЛиц(Ссылка, Организация, ДатаПолученияДохода, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВычетыКДоходамФизическихЛиц.СуммаВычета
	|ИЗ
	|	ВТВычетыКДоходамФизическихЛиц КАК ВычетыКДоходамФизическихЛиц";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		СуммаВычета = Выборка.СуммаВычета;
	КонецЕсли;
	
	Возврат СуммаВычета
	
КонецФункции

// Возвращает таблицу значений с данными об излишне удержанном НДФЛ (возможно, пустую).
//
// Параметры:
//	Организация - организация, по которой получаем данные
//	ДатаАктуальности
//	ФизическиеЛица: тип СправочникСсылка.ФизическиеЛица или массив значений типа СправочникСсылка.ФизическиеЛица 
//    необязательный, если не задан - возвращаются все физлица, по которым есть переплата.
//  ДокументСсылка - регистратор, движения которого исключаются из рассмотрения.
//
// Возвращаемое значение:
//	таблица значений с колонками:
//			Сотрудник: тип СправочникСсылка.ФизическиеЛица
//			НалоговыйПериод: тип Число 4 (год)
//			ОбособленноеПодразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//			ПоСтавке13: тип Число
//			ПоСтавке09: тип Число
//			ПоСтавке35: тип Число
//  если данных о переплате в учете нет - возвращается пустая таблица значений.
Функция ДанныеОПереплатеПоНДФЛ(Организация, ДатаАктуальности, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, Запрос.МенеджерВременныхТаблиц);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане,
	|	МИНИМУМ(ПодразделенияОрганизаций.СтруктурнаяЕдиница) КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВТОбособленныеПодразделения
	|ИЗ
	|	ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаАктуальности, НЕ СтруктурнаяЕдиница ССЫЛКА Справочник.Организации) КАК ПодразделенияОрганизаций
	|		ПО РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане = ПодразделенияОрганизаций.РегистрацияВНалоговомОргане
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток КАК СуммаОстаток,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТРасчетыПоВсемСтавкам
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Остатки(
	|			&ДатаАктуальности,
	|			ГоловнаяОрганизация = &ГоловнаяОрганизация
	|				И &УсловиеДляФизлиц
	|				И РегистрацияВНалоговомОргане В
	|					(ВЫБРАТЬ
	|						РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|					ИЗ
	|						ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И &УсловиеДляФизлиц
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.Регистратор = &Регистратор
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода, ГОД) КАК НачалоНалоговогоПериода,
	|	КОНЕЦПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода, ГОД) КАК ОкончаниеНалоговогоПериода
	|ПОМЕСТИТЬ ВТПереплатаПоВсемСтавкам
	|ИЗ
	|	ВТРасчетыПоВсемСтавкам КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.РегистрацияВНалоговомОргане,
	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода),
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода, ГОД),
	|	КОНЕЦПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.МесяцНалоговогоПериода, ГОД)
	|
	|ИМЕЮЩИЕ
	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛОстатки.СуммаОстаток) < 0";
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	ПереплатаПоВсемСтавкам.ФизическоеЛицо КАК Сотрудник,
	|	ПереплатаПоВсемСтавкам.НалоговыйПериод,
	|	ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода,
	|	ЕСТЬNULL(ОбособленныеПодразделения.ОбособленноеПодразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ОбособленноеПодразделение,
	|	СУММА(ЕСТЬNULL(ПереплатаПоСтавке13.СуммаОстаток, 0)) КАК ПоСтавке13,
	|	СУММА(ЕСТЬNULL(ПереплатаПоСтавке09.СуммаОстаток, 0)) КАК ПоСтавке09,
	|	СУММА(ЕСТЬNULL(ПереплатаПоСтавке35.СуммаОстаток, 0)) КАК ПоСтавке35
	|ПОМЕСТИТЬ ВТПереплатаПоСотруднику
	|ИЗ
	|	ВТПереплатаПоВсемСтавкам КАК ПереплатаПоВсемСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленныеПодразделения КАК ОбособленныеПодразделения
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ОбособленныеПодразделения.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаПоВсемСтавкам КАК ПереплатаПоСтавке13
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ПереплатаПоСтавке13.РегистрацияВНалоговомОргане
	|			И ПереплатаПоВсемСтавкам.ФизическоеЛицо = ПереплатаПоСтавке13.ФизическоеЛицо
	|			И (ПереплатаПоСтавке13.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|			И ПереплатаПоВсемСтавкам.НалоговыйПериод = ПереплатаПоСтавке13.НалоговыйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаПоВсемСтавкам КАК ПереплатаПоСтавке09
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ПереплатаПоСтавке09.РегистрацияВНалоговомОргане
	|			И ПереплатаПоВсемСтавкам.ФизическоеЛицо = ПереплатаПоСтавке09.ФизическоеЛицо
	|			И (ПереплатаПоСтавке09.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09))
	|			И ПереплатаПоВсемСтавкам.НалоговыйПериод = ПереплатаПоСтавке09.НалоговыйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереплатаПоВсемСтавкам КАК ПереплатаПоСтавке35
	|		ПО ПереплатаПоВсемСтавкам.РегистрацияВНалоговомОргане = ПереплатаПоСтавке35.РегистрацияВНалоговомОргане
	|			И ПереплатаПоВсемСтавкам.ФизическоеЛицо = ПереплатаПоСтавке35.ФизическоеЛицо
	|			И (ПереплатаПоСтавке35.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35))
	|			И ПереплатаПоВсемСтавкам.НалоговыйПериод = ПереплатаПоСтавке35.НалоговыйПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода,
	|	ПереплатаПоВсемСтавкам.ФизическоеЛицо,
	|	ЕСТЬNULL(ОбособленныеПодразделения.ОбособленноеПодразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)),
	|	ПереплатаПоВсемСтавкам.НалоговыйПериод";
	
	Если Результат[0].Количество = 0 Тогда
		Запрос.Текст = СтрЗаменить(СтрЗаменить(СтрЗаменить(ТекстЗапроса,"ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода,",""), "ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода,",""), "ПОМЕСТИТЬ ВТПереплатаПоСотруднику","");
		Возврат Запрос.Выполнить().Выгрузить()
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 0", "");
		Запрос.Выполнить();
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПереплатаПоВсемСтавкам.Сотрудник КАК ФизическоеЛицо,
	|	ПереплатаПоВсемСтавкам.НачалоНалоговогоПериода КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТПереплатаПоСотруднику КАК ПереплатаПоВсемСтавкам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереплатаПоВсемСтавкам.Сотрудник КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода < &ДатаАктуальности
	|			ТОГДА ПереплатаПоВсемСтавкам.ОкончаниеНалоговогоПериода
	|		ИНАЧЕ &ДатаАктуальности
	|	КОНЕЦ КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаОкончание
	|ИЗ
	|	ВТПереплатаПоСотруднику КАК ПереплатаПоВсемСтавкам";
	Запрос.Выполнить();
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ВсеЗаписи = Истина;
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТФизическиеЛица", "ФизическоеЛицо");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения,
		"ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаНачалоГода");
		
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		"ВТФизическиеЛицаОкончание", "ФизическоеЛицо");
		
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения,
		"ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаКонецПериода");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереплатаПоВсемСтавкам.Сотрудник,
	|	ПереплатаПоВсемСтавкам.НалоговыйПериод,
	|	ПереплатаПоВсемСтавкам.ОбособленноеПодразделение,
	|	ПереплатаПоВсемСтавкам.ПоСтавке13,
	|	ПереплатаПоВсемСтавкам.ПоСтавке09,
	|	ПереплатаПоВсемСтавкам.ПоСтавке35
	|ИЗ
	|	ВТПереплатаПоСотруднику КАК ПереплатаПоВсемСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаКонецПериода КАК СтатусНаКонецПериода
	|		ПО ПереплатаПоВсемСтавкам.Сотрудник = СтатусНаКонецПериода.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизическихЛицКакНалогоплательщиковНДФЛНаНачалоГода КАК СтатусНаНачалоГода
	|		ПО ПереплатаПоВсемСтавкам.Сотрудник = СтатусНаНачалоГода.ФизическоеЛицо
	|ГДЕ
	|	(ЕСТЬNULL(СтатусНаНачалоГода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ИЛИ ЕСТЬNULL(СтатусНаКонецПериода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент))";

	Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

// Возвращает таблицу значений с данными о физических лицах, по которым требуется пересмотреть данные по НДФЛ
// (возможно, пустую).
//
// Параметры:
//	Организация - организация, по которой получаем данные.
//	МесяцПерерасчета - дата - месяц, в котором производится перерасчет.
//	НачалоПериода - дата - описывает пересчитываемый налоговый период.
//	ОкончаниеПериода - дата - описывает пересчитываемый налоговый период 
//	ФизическиеЛица: тип СправочникСсылка.ФизическиеЛица или массив значений типа СправочникСсылка.ФизическиеЛица 
//    необязательный, если не задан - возвращаются все физлица, по которым есть переплата.
//  ДокументСсылка - регистратор, движения которого исключаются из рассмотрения.
//
// Возвращаемое значение:
//	таблица значений с колонками:
//			ФизическоеЛицо: тип СправочникСсылка.ФизическиеЛица
//			МесяцНалоговогоПериода: тип дата.
//			Подразделение
//			КодВычетаЛичный
//			колонки рассчитанных ресурсов: ПримененныйВычетЛичный, ПримененныйВычетНаДетей, ПримененныйВычетНаДетейДвойной,
//				ПримененныйВычетНаДетейДвойнойВторой,  ПримененныйВычетНаТретьегоРебенка,
//				ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
//				ПримененныйВычетНаВторогоРебенка, ПримененныйВычетНаВторогоРебенкаДвойной,
//				ПримененныйВычетНаВторогоРебенкаДвойнойВторой, ПримененныйВычетНаДетейИнвалидов,
//				ПримененныйВычетНаДетейИнвалидовДвойной, ПримененныйВычетНаДетейИнвалидовДвойнойВторой, НалогПоСтавке13,
//				НалогПоСтавке09, НалогПоСтавке35, НалогПоСтавке13КЗачетуВозврату, НалогПоСтавке35КЗачетуВозврату,
//				ПримененныйВычетИмущественныйРасходы, ПримененныйВычетИмущественныйПроцентыПоКредитам,
//				ПримененныйВычетИмущественныйПроцентыПриПерекредитовании 
//	если данных для перерасчета нет - возвращается пустая таблица значений.
//			
Функция ДанныеОПерерасчетеНДФЛ(Организация, МесяцПерерасчета, НачалоПериода, ОкончаниеПериода, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", КонецМесяца(МесяцПерерасчета));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяца(ОкончаниеПериода));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, Запрос.МенеджерВременныхТаблиц);	
	
    ТекстЗапроса =
	"ВЫБРАТЬ
	|	Обороты.СуммаДохода КАК СуммаДохода,
	|	Обороты.СуммаВычета КАК СуммаВычета,
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(Обороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	Обороты.КодДохода,
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Обороты.Подразделение
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период <= &ДатаАктуальности
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И &УсловиеДляФизлиц
	|	И Обороты.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТДоходы КАК Обороты
	|ГДЕ
	|	Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)";
	
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	Запрос.Выполнить();
	
	РезультатРасчетаНДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцПерерасчета, Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке09", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке35", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке35", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке35КЗачетуВозврату", Новый ОписаниеТипов("Число"));
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы");
	
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	ВТДоходы КАК Доходы
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке09,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке35,
	|	РасчетыСБюджетом.Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТРанееНачисленныеНалоги
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыСБюджетом
	|ГДЕ
	|	РасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыСБюджетом.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизическоеЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|	И РасчетыСБюджетом.Период <= &ДатаАктуальности
	|	И РасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И РасчетыСБюджетом.Регистратор <> &Регистратор
	|	И РасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСБюджетом.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыСБюджетом.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСБюджетом.ФизическоеЛицо,
	|	РасчетыСБюджетом.Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Подразделение КАК Подразделение,
	|	Доходы.Период КАК МесяцНалоговогоПериода,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке09,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	ВТДоходы КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Доходы.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Доходы.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РанееНачисленныеНалоги.ФизическоеЛицо,
	|	РанееНачисленныеНалоги.Подразделение,
	|	РанееНачисленныеНалоги.МесяцНалоговогоПериода,
	|	-РанееНачисленныеНалоги.НалогПоСтавке09,
	|	-РанееНачисленныеНалоги.НалогПоСтавке35
	|ИЗ
	|	ВТРанееНачисленныеНалоги КАК РанееНачисленныеНалоги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.Подразделение КАК Подразделение,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(Налоги.НалогПоСтавке09) КАК НалогПоСтавке09,
	|	СУММА(Налоги.НалогПоСтавке35) КАК НалогПоСтавке35,
	|	0 КАК НалогПоСтавке35КЗачетуВозврату,
	|	0 КАК ЗачтеноАвансовыхПлатежейПоСтавке35
	|ИЗ
	|	ВТНалоги КАК Налоги
	|
	|СГРУППИРОВАТЬ ПО
	|	Налоги.ФизическоеЛицо,
	|	Налоги.Подразделение,
	|	Налоги.МесяцНалоговогоПериода
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Налоги.НалогПоСтавке09) <> 0
	|		ИЛИ СУММА(Налоги.НалогПоСтавке35) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатРасчетаНДФЛ
	КонецЕсли;
	
	НалогПоСтавкам09и35 = Результат.Выгрузить();
	
	ВписатьВРезультатЗачтенныеАвансы(ДокументСсылка, Организация, МесяцПерерасчета, НалогПоСтавкам09и35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, "НалогПоСтавке35", "ЗачтеноАвансовыхПлатежейПоСтавке35");
	ВписатьВРезультатНалогиКЗачетуВозврату(ДокументСсылка, Организация, МесяцПерерасчета, НалогПоСтавкам09и35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, "НалогПоСтавке35", "ЗачтеноАвансовыхПлатежейПоСтавке35", "НалогПоСтавке35КЗачетуВозврату");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НалогПоСтавкам09и35, РезультатРасчетаНДФЛ);
	
	Возврат РезультатРасчетаНДФЛ
	
КонецФункции 

Функция ДанныеУведомленийНаВычеты(Сотрудники, НалоговыйПериод, Организация) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГодНП", НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецНП", КонецГода(Дата(НалоговыйПериод, 1, 1))); 
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
	|	МИНИМУМ(ИмущественныеВычетыНДФЛ.Регистратор) КАК Регистратор
	|ПОМЕСТИТЬ ВТДокументыУведомлений
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо В(&Сотрудники)
	|	И ИмущественныеВычетыНДФЛ.Период < &КонецНП
	|	И ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ИмущественныеВычетыНДФЛ.Год = &ГодНП
	|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|	И ИмущественныеВычетыНДФЛ.Регистратор ССЫЛКА Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.ДатаУведомления, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУведомления,
	|	ЕСТЬNULL(УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.КодНалоговогоОргана, """") КАК КодНалоговогоОрганаУведомления,
	|	ЕСТЬNULL(УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.НомерУведомления, """") КАК НомерУведомления,
	|	ДокументыУведомлений.ФизическоеЛицо
	|ИЗ
	|	ВТДокументыУведомлений КАК ДокументыУведомлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ КАК УведомлениеОПравеНаИмущественныйВычетДляНДФЛ
	|		ПО ДокументыУведомлений.Регистратор = УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.Ссылка
	|			И ДокументыУведомлений.ФизическоеЛицо = УведомлениеОПравеНаИмущественныйВычетДляНДФЛ.Сотрудник
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции	

// Вспомогательные функции и процедуры

Процедура ВписатьВРезультатЗарегистрированныеВУчетеДанные(РезультатыРасчетов, ЗарегистрированныеВУчетеДанные, ИменаКолонок)
	
	Для каждого СтрокаТЗ Из ЗарегистрированныеВУчетеДанные Цикл
		ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаТЗ, "ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение," + ИменаКолонок);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВписатьРесурсВРезультатыРасчетов(РезультатыРасчетов, МесяцНалоговогоПериода, Сумма, ИмяРесурса, СтруктураКлючей, СтрокиРаспределения, КоэффициентыРаспределения, ТочностьВеличины = 2)
	
	Если Сумма <> 0 Тогда
		РаспределениеРесурса = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Сумма, КоэффициентыРаспределения, ТочностьВеличины);
		Если РаспределениеРесурса = Неопределено Тогда
			НоваяСтрока = РезультатыРасчетов.Добавить();
			НоваяСтрока[ИмяРесурса] = Сумма; 
			НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураКлючей, "ФизическоеЛицо");
		Иначе
			Индекс = 0;
			Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
				НоваяСтрока = РезультатыРасчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, "ФизическоеЛицо, Подразделение");
				НоваяСтрока[ИмяРесурса] = РаспределениеРесурса[Индекс];
				НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьРегистрациюВНалоговомОрганеВТаблице(Организация, ТаблицаДанных, ДатаАктуальности) Экспорт

	Если ТаблицаДанных.Колонки.Найти("Подразделение") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	КонецЕсли;
	
	СоответствиеПодразделенийИРегистраций = ПолучитьРегистрацииПодразделенийВНалоговомОргане(ТаблицаДанных.ВыгрузитьКолонку("Подразделение"), ДатаАктуальности);
	РегистрацияВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(Организация, ДатаАктуальности);
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		ПроставитьРегистрациюВНалоговомОрганеВСтроке(СтрокаДанных, СоответствиеПодразделенийИРегистраций.Получить(СтрокаДанных.Подразделение), РегистрацияВНалоговомОргане);
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьРегистрацииПодразделенийВНалоговомОргане(Подразделения, ДатаАктуальности = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаАктуальности) Тогда
		ДатаАктуальности = '00010101'
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("МассивСсылок", Подразделения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница КАК Ссылка,
	|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаАктуальности, СтруктурнаяЕдиница В (&МассивСсылок)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних";
	
	СоответствиеРегистраций = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеРегистраций.Вставить(Выборка.Ссылка, Выборка.РегистрацияВНалоговомОргане);		
	КонецЦикла;	
	Возврат СоответствиеРегистраций;
КонецФункции	

Функция ИмущественныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяКолонки, КодВычета)

	ИмущественныеВычеты = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, " + ИмяКолонки);
	ИмущественныеВычеты.Колонки[ИмяКолонки].Имя = "Сумма";
	ИмущественныеВычеты.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	ИмущественныеВычеты.ЗаполнитьЗначения(КодВычета, "КодВычета");
	ИмущественныеВычеты.Колонки.Добавить("Год", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 0)));
	
	Для каждого СтрокаТЗ Из ИмущественныеВычеты Цикл
		СтрокаТЗ.Год = Год(СтрокаТЗ.МесяцНалоговогоПериода)
	КонецЦикла;
		
	Возврат ИмущественныеВычеты	

КонецФункции

Функция НалогиИзДанныхДокумента(ДанныеДокумента, ИмяКолонки, Ставка)

	ИсчисленныйНалог = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, " + ИмяКолонки);
	ИсчисленныйНалог.Колонки[ИмяКолонки].Имя = "Сумма";
	ИсчисленныйНалог.Колонки.Добавить("СтавкаНалогообложенияРезидента", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	ИсчисленныйНалог.ЗаполнитьЗначения(Ставка, "СтавкаНалогообложенияРезидента");
	
	Возврат ИсчисленныйНалог	

КонецФункции

Функция СтандартныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяКолонки, КодВычета)

	СтандартныеВычеты = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, " + ИмяКолонки);
	СтандартныеВычеты.Колонки[ИмяКолонки].Имя = "Сумма";
	СтандартныеВычеты.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	СтандартныеВычеты.ЗаполнитьЗначения(КодВычета, "КодВычета");
	
	Возврат СтандартныеВычеты	

КонецФункции

Функция ЛичныйВычетИзДанныхДокумента(ДанныеДокумента, ИмяКолонкиСуммы, ИмяКолонкиКода)

	СтандартныеВычеты = ДанныеДокумента.Скопировать(,"ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, " + ИмяКолонкиСуммы + "," + ИмяКолонкиКода);
	СтандартныеВычеты.Колонки[ИмяКолонкиСуммы].Имя = "Сумма";
	СтандартныеВычеты.Колонки[ИмяКолонкиКода].Имя = "КодВычета";
	
	Возврат СтандартныеВычеты	

КонецФункции

Функция РеквизитыПлатежногоПорученияПоДатеНомеру(ДатаПП, НомерПП)

	Возврат "№ " + НомерПП + " от " + Формат(ДатаПП, "ДФ=дд.ММ.гггг")

КонецФункции

Функция РаспределитьПеречисленныйНалогПоФизическимЛицам(Ссылка, Организация, ДатаОперации, Сумма, МесяцНалоговогоПериода, РегистрацияВНалоговомОргане, ФизическиеЛица)

	ПеречисленныеСуммы = Новый ТаблицаЗначений();
	ПеречисленныеСуммы.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ПеречисленныеСуммы.Колонки.Добавить("ФизическоеЛицо",Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ПеречисленныеСуммы.Колонки.Добавить("Ставка",Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ПеречисленныеСуммы.Колонки.Добавить("ВключатьВДекларациюПоНалогуНаПрибыль",Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.СуммаОстаток КАК Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Остатки(
	|			&ДатаОперации,
	|			Организация = &Организация
	|				И &УсловиеДляФизлиц
	|				И МесяцНалоговогоПериода = &МесяцНалоговогоПериода
	|				И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо,
	|	Остатки.Ставка,
	|	СУММА(Остатки.Сумма) КАК Сумма,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	ВТДанныеУчета КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ФизическоеЛицо,
	|	Остатки.Ставка,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо,
	|	Остатки.Ставка,
	|	Остатки.Сумма,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	ВТОстатки КАК Остатки
	|ГДЕ
	|	Остатки.Сумма > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Остатки.Ставка КАК Ставка,
	|	-Остатки.Сумма КАК Сумма,
	|	Остатки.ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	ВТОстатки КАК Остатки
	|ГДЕ
	|	Остатки.Сумма < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сумма,
	|	ФизическоеЛицо,
	|	Ставка";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", МесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	ТаблицаПереплат = Результаты[3].Выгрузить();
	Результат = Результаты[2].Выгрузить();
	
	ВсегоПереплаты = ТаблицаПереплат.Итог("Сумма");
	КУплате = Результат.Итог("Сумма");
	
	ПеречисленоСУчетомПереплаты = Мин(КУплате, Сумма + ВсегоПереплаты);
	Если ПеречисленоСУчетомПереплаты = 0 Тогда
		Возврат ПеречисленныеСуммы
	КонецЕсли;
	
	ЗачтеноПереплаты = ПеречисленоСУчетомПереплаты - Сумма;
	Для каждого СтрокаТЗ Из ТаблицаПереплат Цикл
		НоваяСтрока = ПеречисленныеСуммы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, ,"Сумма"); 
		КЗачету = Мин(ЗачтеноПереплаты, СтрокаТЗ.Сумма);
		ЗачтеноПереплаты = ЗачтеноПереплаты - КЗачету;
		НоваяСтрока.Сумма = -КЗачету;
		Если ЗачтеноПереплаты = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	РезультатРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ПеречисленоСУчетомПереплаты, ОбщегоНазначения.ВыгрузитьКолонку(Результат,"Сумма"),0);
	Если РезультатРаспределения = Неопределено Тогда
		Возврат ПеречисленныеСуммы
	Иначе
		Индекс = 0;
		Для каждого СтрокаТЗ Из Результат Цикл
			НоваяСтрока = ПеречисленныеСуммы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, ,"Сумма"); 
			НоваяСтрока.Сумма = РезультатРаспределения[Индекс];
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПеречисленныеСуммы
	
КонецФункции

Функция СтрокаИмущественныхВычетов(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ОкончательныйРасчет = Истина)
	
	НоваяСтрока = Движения.ИмущественныеВычетыНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	Если ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		НоваяСтрока.Период = ДатаОперации;
	Иначе
		НоваяСтрока.Период = КонецМесяца(ДанныеДокумента.МесяцНалоговогоПериода);
		НоваяСтрока.ВычетМежрасчетногоПериода = Не ОкончательныйРасчет;
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ВидСтроки = Неопределено, ОкончательныйРасчет = Истина)
	
	НоваяСтрока = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.ВариантУдержания = ВидСтроки;
	НоваяСтрока.РасчетМежрасчетногоПериода = Не ОкончательныйРасчет;
	Если УчетНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(Год(НоваяСтрока.МесяцНалоговогоПериода)).Найти(НоваяСтрока.КодДохода) <> Неопределено Тогда
		Если НоваяСтрока.КодДохода <> Справочники.ВидыДоходовНДФЛ.Код1010 Тогда
			НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
		КонецЕсли;
	Иначе 
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока.КодДохода) И НоваяСтрока.КодДохода <> Справочники.ВидыДоходовНДФЛ.Код1010 Тогда
		НоваяСтрока.КодДохода = Справочники.ВидыДоходовНДФЛ.ПустаяСсылка()
	КонецЕсли;
	Если НоваяСтрока.МесяцНалоговогоПериода < ДатаПереходаНаКодыОКТМО() Тогда
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

// Формирует строку движения по регистру РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		ВидДвижения.
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля)
//		ДанныеРаспределения - некоторая дополнительная структура (строка таблицы значений, выборки из результата запроса и т.п.)
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля)
Функция СтрокаРасчетовНалоговыхАгентовСБюджетом(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ДанныеРаспределения = Неопределено) 
	
	НоваяСтрока = Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	Если ДанныеРаспределения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеРаспределения);
	КонецЕсли;
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	Если НоваяСтрока.МесяцНалоговогоПериода < ДатаПереходаНаКодыОКТМО() Или НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка30 Или НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка35 Тогда
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	ИначеЕсли НоваяСтрока.МесяцНалоговогоПериода < ДатаИзмененияНалогообложенияДивидендов() И НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка13 Тогда	
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	ИначеЕсли НоваяСтрока.МесяцНалоговогоПериода >= ДатаИзмененияНалогообложенияДивидендов() И НоваяСтрока.Ставка = Перечисления.НДФЛСтавки.Ставка09 Тогда	
		НоваяСтрока.ВключатьВДекларациюПоНалогуНаПрибыль = Ложь
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаУплатыНалоговогоАгента(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента)
	
	НоваяСтрока = Движения.УплатаНДФЛНалоговымиАгентамиКРаспределению.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаСтандартныхВычетов(Движения, Организация, ДатаОперации, ДанныеДокумента, ОкончательныйРасчет)
	
	НоваяСтрока = Движения.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.ВычетМежрасчетногоПериода = Не ОкончательныйРасчет;
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаАвансовыхПлатежейИностранцев(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ОкончательныйРасчет = Истина)
	
	НоваяСтрока = Движения.АвансовыеПлатежиИностранцевПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	Если Не ЗначениеЗаполнено(НоваяСтрока.Год) И ЗначениеЗаполнено(НоваяСтрока.МесяцНалоговогоПериода) Тогда
		НоваяСтрока.Год = Год(НоваяСтрока.МесяцНалоговогоПериода)
	КонецЕсли;
	Если ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		НоваяСтрока.Период = ДатаОперации;
	Иначе
		НоваяСтрока.Период = КонецМесяца(ДанныеДокумента.МесяцНалоговогоПериода);
		//НоваяСтрока.ВычетМежрасчетногоПериода = Не ОкончательныйРасчет;
	КонецЕсли;
	
    Возврат НоваяСтрока
	
КонецФункции

#КонецОбласти

#Область ФункцииПервоначальногоЗаполненияИОбновленияИБ

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  ИмяРегистра - строка - 
//  ТекстЗапроса - строка - текст исполняемого запроса, в котором обязательно присутствует 
//			поле Регистратор, остальные поля должны соответствовать 
//          полям записи заполняемого регистра, в результате должны 
//          присутствовать все заполняемые поля;
//			кроме того, результат запроса должен быть упорядочен, 
//			первое поле упорядочивания - Регистратор
//  ПараметрыЗапроса - Структура - необязательный, содержит имена и значения параметров, которые требуются запросу 
//          которые требуются запросу
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбработатьНаборыЗаписейРегистраНакопления(ИмяРегистра, ТекстЗапроса, ПараметрыЗапроса = Неопределено, МенеджерВременныхТаблиц = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		Для каждого КлючИЗначение Из ПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение)
		КонецЦикла;
	КонецЕсли;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	ОбщиеДанныеВидыВычетовНДФЛ = ЗарплатаКадры.ЭтоОбщиеДанные(Метаданные.Справочники.ВидыВычетовНДФЛ);
	ОбщиеДанныеВидыДоходовНДФЛ = ЗарплатаКадры.ЭтоОбщиеДанные(Метаданные.Справочники.ВидыДоходовНДФЛ);
	ОбщиеДанныеСтатусыНалогоплательщиковПоНДФЛ = ЗарплатаКадры.ЭтоОбщиеДанные(Метаданные.Справочники.СтатусыНалогоплательщиковПоНДФЛ);
	ОбщиеДанныеРазмерВычетовНДФЛ = ЗарплатаКадры.ЭтоОбщиеДанные(Метаданные.РегистрыСведений.РазмерВычетовНДФЛ);
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.1.0";
		Обработчик.Процедура = "Справочники.ВидыВычетовНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыВычетовНДФЛ;
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.РазмерВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.1.0";
		Обработчик.Процедура = "РегистрыСведений.РазмерВычетовНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = ОбщиеДанныеРазмерВычетовНДФЛ;
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;

	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.1.0";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;

	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.1.0";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.СоздатьКодыДоходовНДФЛ";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
	КонецЕсли;

	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.ВычетыПоДоходамНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.1.0";
		Обработчик.Процедура = "РегистрыСведений.ВычетыПоДоходамНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные =  ЗарплатаКадры.ЭтоОбщиеДанные(Метаданные.РегистрыСведений.ВычетыПоДоходамНДФЛ);
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;
		
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.СтатусыНалогоплательщиковПоНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.24";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.НачальноеЗаполнение";
		Обработчик.ОбщиеДанные = ОбщиеДанныеСтатусыНалогоплательщиковПоНДФЛ;
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;
		
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.РазмерВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.26";
		Обработчик.Процедура = "РегистрыСведений.РазмерВычетовНДФЛ.ЗаполнитьРазмерыВычетовНДФЛДекабрь2011";
		Обработчик.ОбщиеДанные = ОбщиеДанныеРазмерВычетовНДФЛ;
	КонецЕсли;
		
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.26";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.СоздатьКодыДоходовНДФЛДекабрь2011";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.2.28";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьФлажкиИзмененияВычетовВЗаявлении";
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.30";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ОбновлениеДоходовВычетовНДФЛНеПредопределенныхЯнварь2012";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
		Обработчик.НачальноеЗаполнение = Истина;
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.РегистрыСведений.РазмерВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.2.33";
		Обработчик.Процедура = "РегистрыСведений.РазмерВычетовНДФЛ.ЗаполнитьРазмерыВычетовНДФЛЯнварь2012";
		Обработчик.ОбщиеДанные = ОбщиеДанныеРазмерВычетовНДФЛ;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.3.14";
	Обработчик.Процедура = "УчетНДФЛ.СправкиНДФЛЗаполнитьЗначенияНовыхРеквизитов";
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.5.12";
		Обработчик.Процедура = "Справочники.ВидыВычетовНДФЛ.ОписатьВычетПоДСВ";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыВычетовНДФЛ;
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.СтатусыНалогоплательщиковПоНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.5.16";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.УточнитьНаименованияСтатусовНДФЛ";
		Обработчик.ОбщиеДанные = ОбщиеДанныеСтатусыНалогоплательщиковПоНДФЛ;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.6.24";
	Обработчик.Процедура = "Документы.ПерерасчетНДФЛ.ЗаполнитьПримененныеВычетыНаДетейИИмущественные";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.7.5";
	Обработчик.Процедура = "УчетНДФЛ.ОбработкаУчетаПоНДФЛ";
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.8.13";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ПроставитьКодамДоходаОтношениеКОплатеТруда";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.11.10";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ПроставитьКодамНатуральныхДоходовПризнакПредопределенного";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.12.6";
	Обработчик.Процедура = "УчетНДФЛ.СправкиНДФЛУстановитьПризнакСпециальныйДокумент2013года";
	Обработчик.ОбщиеДанные = Ложь;
	Обработчик.НачальноеЗаполнение = Ложь;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.12.9";
		Обработчик.Процедура = "Справочники.ВидыВычетовНДФЛ.УстановитьВременныйКодВычету320";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыВычетовНДФЛ;
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.16.7";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.УстановитьСтавкуДоходу3022";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.18.16";
	Обработчик.Процедура = "УчетНДФЛ.ИсправитьКодДоходаВРасчетахСБюджетом";
	Обработчик.ОбщиеДанные = Ложь;
	Обработчик.НачальноеЗаполнение = Ложь;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.СтатусыНалогоплательщиковПоНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.19.28";
		Обработчик.Процедура = "Справочники.СтатусыНалогоплательщиковПоНДФЛ.ОписатьСтатусБеженца";
		Обработчик.ОбщиеДанные = ОбщиеДанныеСтатусыНалогоплательщиковПоНДФЛ;
		Обработчик.НачальноеЗаполнение = Ложь;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.21.12";
	Обработчик.Процедура = "УчетНДФЛ.ПроставитьФлажокВключатьВДекларациюПоНалогуНаПрибыль";
	Обработчик.ОбщиеДанные = Ложь;
	Обработчик.НачальноеЗаполнение = Ложь;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыДоходовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.21.12";
		Обработчик.Процедура = "Справочники.ВидыДоходовНДФЛ.ЗаполнитьКодыДоходов2014";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыДоходовНДФЛ;
	КонецЕсли;
	
	Если ЗарплатаКадры.АвтономнаяРаботаРазрешеноИзменениеДанных(Метаданные.Справочники.ВидыВычетовНДФЛ) Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.0.21.12";
		Обработчик.Процедура = "Справочники.ВидыВычетовНДФЛ.ЗаполнитьКодыВычетовНДФЛ_2014";
		Обработчик.ОбщиеДанные = ОбщиеДанныеВидыВычетовНДФЛ;
	КонецЕсли;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.22.144";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьПодразделениеСотрудникаВСведенияхОДоходах";
	Обработчик.ОбщиеДанные = Ложь;
	Обработчик.НачальноеЗаполнение = Ложь;
		
КонецПроцедуры	

Процедура ЗаполнитьФлажкиИзмененияВычетовВЗаявлении() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заявления.Заявление,
	|	МАКСИМУМ(Заявления.ИзменитьЛичныйВычет) КАК ИзменитьЛичныйВычет,
	|	МАКСИМУМ(Заявления.ИзменитьВычетыНаДетей) КАК ИзменитьВычетыНаДетей
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтандартныеВычетыФизическихЛицНДФЛ.Регистратор КАК Заявление,
	|		ИСТИНА КАК ИзменитьЛичныйВычет,
	|		ЛОЖЬ КАК ИзменитьВычетыНаДетей
	|	ИЗ
	|		РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ КАК СтандартныеВычетыФизическихЛицНДФЛ
	|	ГДЕ
	|		СтандартныеВычетыФизическихЛицНДФЛ.Регистратор ССЫЛКА Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ
	|		И НЕ СтандартныеВычетыФизическихЛицНДФЛ.Регистратор.ИзменитьЛичныйВычет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтандартныеВычетыНаДетейНДФЛ.Регистратор,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|	ГДЕ
	|		СтандартныеВычетыНаДетейНДФЛ.Регистратор ССЫЛКА Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ
	|		И НЕ СтандартныеВычетыНаДетейНДФЛ.Регистратор.ИзменитьВычетыНаДетей) КАК Заявления
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявления.Заявление";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Заявление.ПолучитьОбъект();
		Док.ОбменДанными.Загрузка = Истина;
		
		Если Выборка.ИзменитьВычетыНаДетей Тогда
			Док.ИзменитьВычетыНаДетей = Истина;
		КонецЕсли;
		Если Выборка.ИзменитьЛичныйВычет Тогда
			Док.ИзменитьЛичныйВычет = Истина;
		КонецЕсли;
		
		Док.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура СправкиНДФЛЗаполнитьЗначенияНовыхРеквизитов() Экспорт
	ФиксируемыеРеквизиты = УчетНДФЛКлиентСервер.СправкиНДФЛИменаФиксируемыхПолей();
	
	Запрос = Новый Запрос;
	ТекущийГодДата = НачалоГода(ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТекущийГодДата", ТекущийГодДата);
	Запрос.УстановитьПараметр("ТекущийГод", Год(ТекущаяДатаСеанса()));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкаНДФЛ.Сотрудник КАК ФизическоеЛицо,
	|	СправкаНДФЛ.Дата КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаДаты
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.Дата
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкаНДФЛ.Сотрудник КАК ФизическоеЛицо,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекущийГодДата, ГОД, СправкаНДФЛ.НалоговыйПериод - &ТекущийГод), ГОД) КАК Период
	|ПОМЕСТИТЬ ВТФизическиеНалоговыеПериоды
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И СправкаНДФЛ.НалоговыйПериод МЕЖДУ 2010 И 2100
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекущийГодДата, ГОД, СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод - &ТекущийГод), ГОД)
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка.НалоговыйПериод МЕЖДУ 2010 И 2100";
	
	Запрос.Выполнить();
	
	НеобходимыеКадровыеДанные = Новый Массив;
	НеобходимыеКадровыеДанные.Добавить("ФизическоеЛицо");
	НеобходимыеКадровыеДанные.Добавить("Фамилия");
	НеобходимыеКадровыеДанные.Добавить("Наименование");
	НеобходимыеКадровыеДанные.Добавить("Имя");
	НеобходимыеКадровыеДанные.Добавить("Отчество");
	НеобходимыеКадровыеДанные.Добавить("ДокументВид");
	НеобходимыеКадровыеДанные.Добавить("ДокументСерия");
	НеобходимыеКадровыеДанные.Добавить("ДокументНомер");
	НеобходимыеКадровыеДанные.Добавить("ДатаРождения");	
	НеобходимыеКадровыеДанные.Добавить("Страна");
	НеобходимыеКадровыеДанные.Добавить("ИНН");
	НеобходимыеКадровыеДанные.Добавить("АдресЗаПределамиРФ");
	НеобходимыеКадровыеДанные.Добавить("АдресПоПрописке");
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
		
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛицаДаты");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, НеобходимыеКадровыеДанные);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.АдресПоПрописке КАК Адрес,
	|	КадровыеДанныеФизЛиц.АдресЗаПределамиРФ КАК АдресЗарубежом,
	|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
	|	КадровыеДанныеФизЛиц.Имя КАК Имя,
	|	КадровыеДанныеФизЛиц.Отчество КАК Отчество,
	|	КадровыеДанныеФизЛиц.ДатаРождения КАК ДатаРождения,
	|	ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) КАК Гражданство,
	|	КадровыеДанныеФизЛиц.ДокументВид КАК ВидДокумента,
	|	КадровыеДанныеФизЛиц.ДокументСерия КАК СерияДокумента,
	|	КадровыеДанныеФизЛиц.ДокументНомер КАК НомерДокумента,
	|	КадровыеДанныеФизЛиц.ИНН КАК ИНН,
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо,
	|	КадровыеДанныеФизЛиц.Период
	|ПОМЕСТИТЬ ВТТекущиеДанныеФизЛиц
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц
	|";	
		
	Запрос.Выполнить();
		
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеНалоговыеПериоды");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь,  "СтатусНалогоплательщика");
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка КАК Ссылка,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСтроки КАК НомерСтроки,
	|	ТекущиеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Адрес, 1, 1000) <> ПОДСТРОКА(ЕСТЬNULL(ТекущиеДанныеФизЛиц.Адрес, """"), 1, 1000)
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксАдрес,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.АдресЗарубежом, 1, 1000) <> ПОДСТРОКА(ЕСТЬNULL(ТекущиеДанныеФизЛиц.АдресЗарубежом, """"), 1, 1000)
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксАдресЗарубежом,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Фамилия <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Фамилия, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксФамилия,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Имя <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Имя, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксИмя,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Отчество <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Отчество, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксОтчество,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ДатаРождения <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1))
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксДатаРождения,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Гражданство <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Гражданство, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксГражданство,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ВидДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ВидДокумента, ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СерияДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.СерияДокумента, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.НомерДокумента, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксВидДокумента,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ВидДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ВидДокумента, ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СерияДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.СерияДокумента, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.НомерДокумента, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксСерияДокумента,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ВидДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ВидДокумента, ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СерияДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.СерияДокумента, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.НомерДокумента, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксНомерДокумента,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИНН <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ИНН, """")
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксИНН,
	|	ВЫБОР
	|		КОГДА СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СтатусНалогоплательщика <> ЕСТЬNULL(СтатусыФизЛицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка))
	|				ИЛИ СправкиНДФЛДляПередачиВНалоговыйОрган.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксСтатусНалогоплательщика,
	|	РегистрацииВНалоговомОргане.Код КАК КодИФНС
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|		ПО СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка = СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТекущиеДанныеФизЛиц КАК ТекущиеДанныеФизЛиц
	|		ПО (СправкиНДФЛДляПередачиВНалоговыйОрган.Дата = ТекущиеДанныеФизЛиц.Период)
	|			И СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник = ТекущиеДанныеФизЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК СтатусыФизЛицНаКонецГода
	|		ПО СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник = СтатусыФизЛицНаКонецГода.ФизическоеЛицо
	|			И (СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериод = ГОД(СтатусыФизЛицНаКонецГода.Период))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО (СправкиНДФЛДляПередачиВНалоговыйОрган.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка КАК Ссылка,
	|	СправкаНДФЛ.Сотрудник КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(СправкаНДФЛ.Адрес, 1, 1000) <> ПОДСТРОКА(ЕСТЬNULL(ТекущиеДанныеФизЛиц.Адрес, """"), 1, 1000)
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксАдрес,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(СправкаНДФЛ.АдресЗаРубежом, 1, 1000) <> ПОДСТРОКА(ЕСТЬNULL(ТекущиеДанныеФизЛиц.АдресЗарубежом, """"), 1, 1000)
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксАдресЗарубежом,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.Фамилия <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Фамилия, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксФамилия,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.Имя <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Имя, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксИмя,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.Отчество <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Отчество, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксОтчество,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.ДатаРождения <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1))
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксДатаРождения,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.Гражданство <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.Гражданство, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксГражданство,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.ВидДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ВидДокумента, ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|				ИЛИ СправкаНДФЛ.СерияДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.СерияДокумента, """")
	|				ИЛИ СправкаНДФЛ.НомерДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.НомерДокумента, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксВидДокумента,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.ВидДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ВидДокумента, ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|				ИЛИ СправкаНДФЛ.СерияДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.СерияДокумента, """")
	|				ИЛИ СправкаНДФЛ.НомерДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.НомерДокумента, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксСерияДокумента,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.ВидДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ВидДокумента, ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка))
	|				ИЛИ СправкаНДФЛ.СерияДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.СерияДокумента, """")
	|				ИЛИ СправкаНДФЛ.НомерДокумента <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.НомерДокумента, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксНомерДокумента,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.ИНН <> ЕСТЬNULL(ТекущиеДанныеФизЛиц.ИНН, """")
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксИНН,
	|	ВЫБОР
	|		КОГДА СправкаНДФЛ.СтатусНалогоплательщика <> ЕСТЬNULL(СтатусыФизЛицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка))
	|				ИЛИ СправкаНДФЛ.Проведен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФиксСтатусНалогоплательщика,
	|	РегистрацииВНалоговомОргане.Код КАК КодИФНС
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТекущиеДанныеФизЛиц КАК ТекущиеДанныеФизЛиц
	|		ПО СправкаНДФЛ.Дата = ТекущиеДанныеФизЛиц.Период
	|			И СправкаНДФЛ.Сотрудник = ТекущиеДанныеФизЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК СтатусыФизЛицНаКонецГода
	|		ПО СправкаНДФЛ.Сотрудник = СтатусыФизЛицНаКонецГода.ФизическоеЛицо
	|			И (СправкаНДФЛ.НалоговыйПериод = ГОД(СтатусыФизЛицНаКонецГода.Период))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО СправкаНДФЛ.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";

	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты[0].Выбрать();
		
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();		
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			ДанныеСправки = ДокументОбъект.Сотрудники[Выборка.НомерСтроки - 1];
			
			Для Каждого ФиксируемоеПоле Из ФиксируемыеРеквизиты Цикл
				ДанныеСправки["Фикс" + ФиксируемоеПоле] = Выборка["Фикс" + ФиксируемоеПоле];
			КонецЦикла;	

			ИтогиПоНалогам = ДокументОбъект.УдалитьСуммыНалогов.Выгрузить(Новый Структура("НомерСправки", ДанныеСправки.НомерСправки));	
			
			Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
				СтрокаИтогов = ИтогиПоНалогам.Добавить();
				СтрокаИтогов.Ставка = СтавкаНДФЛ;
				СтрокаИтогов.ОбщаяСуммаДохода = 0;
				СтрокаИтогов.ОблагаемаяСуммаДохода = 0;
				СтрокаИтогов.Исчислено = 0;
				СтрокаИтогов.Удержано = 0;
				СтрокаИтогов.Перечислено = 0;
				СтрокаИтогов.ИзлишнеУдержано = 0;
				СтрокаИтогов.Задолженность = 0;
			КонецЦикла;	
			
			ИтогиПоНалогам.Свернуть("Ставка", "ОбщаяСуммаДохода, ОблагаемаяСуммаДохода, Исчислено, Удержано, Перечислено, ИзлишнеУдержано, Задолженность");
		
			Для Каждого ИтогиПоСтавке Из ИтогиПоНалогам Цикл
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "ОбщаяСуммаДохода");				
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "ОблагаемаяСуммаДохода");	
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Исчислено");	
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Удержано");
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Перечислено");	
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "ИзлишнеУдержано");
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Задолженность");
			КонецЦикла;	
		
		КонецЦикла;	
		
		ДокументОбъект.КодИФНС = Выборка.КодИФНС;
		ДокументОбъект.Записать();	
	КонецЦикла;	
	
	Выборка = Результаты[1].Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		ДанныеСправки = Выборка.Ссылка.ПолучитьОбъект();
			
		Для Каждого ФиксируемоеПоле Из ФиксируемыеРеквизиты Цикл
			ДанныеСправки["Фикс" + ФиксируемоеПоле] = Выборка["Фикс" + ФиксируемоеПоле];
		КонецЦикла;	

		ИтогиПоНалогам = ДанныеСправки.УдалитьСуммыНалогов.Выгрузить();	
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			СтрокаИтогов = ИтогиПоНалогам.Добавить();
			СтрокаИтогов.Ставка = СтавкаНДФЛ;
			СтрокаИтогов.ОбщаяСуммаДохода = 0;
			СтрокаИтогов.ОблагаемаяСуммаДохода = 0;
			СтрокаИтогов.Исчислено = 0;
			СтрокаИтогов.Удержано = 0;
			СтрокаИтогов.Перечислено = 0;
			СтрокаИтогов.ИзлишнеУдержано = 0;
			СтрокаИтогов.Задолженность = 0;
		КонецЦикла;	
		
		ИтогиПоНалогам.Свернуть("Ставка", "ОбщаяСуммаДохода, ОблагаемаяСуммаДохода, Исчислено, Удержано, Перечислено, ИзлишнеУдержано, Задолженность");
	
		Для Каждого ИтогиПоСтавке Из ИтогиПоНалогам Цикл
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "ОбщаяСуммаДохода");				
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "ОблагаемаяСуммаДохода");	
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Исчислено");	
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Удержано");
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Перечислено");	
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "ИзлишнеУдержано");
			УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, ИтогиПоСтавке, "Задолженность");
		КонецЦикла;	
		
		ДанныеСправки.КодИФНС = Выборка.КодИФНС;
		ДанныеСправки.Записать();	
	КонецЦикла;	

КонецПроцедуры

Процедура ОбработкаУчетаПоНДФЛ() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения = """"
	|	И (РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеНомер <> """"
	|			ИЛИ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеДата <> ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеНомер КАК НомерПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.УдалитьПлатежноеПоручениеДата КАК ДатаПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.РеквизитыПлатежногоПоручения = ?(ЗначениеЗаполнено(Выборка.РеквизитыПлатежногоПоручения), Выборка.РеквизитыПлатежногоПоручения, РеквизитыПлатежногоПорученияПоДатеНомеру(Выборка.ДатаПП, Выборка.НомерПП));
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИмущественныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ИмущественныеВычетыНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.Период,
	|	ИмущественныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ИмущественныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ИмущественныеВычетыНДФЛ.Активность,
	|	ИмущественныеВычетыНДФЛ.ВидДвижения,
	|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Год,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ИмущественныеВычетыНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ ИмущественныеВычетыНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ИмущественныеВычетыНДФЛ.ВычетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|ГДЕ
	|	ИмущественныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.ИмущественныеВычетыНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.ИмущественныеВычетыНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВычетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.УдалитьОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СведенияОДоходахНДФЛ.УдалитьОрганизация
	|		ИНАЧЕ СведенияОДоходахНДФЛ.Организация
	|	КОНЕЦ КАК Организация,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления.СведенияОДоходахНДФЛ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
		РегистрыНакопления.СведенияОДоходахНДФЛ.ПересчитатьИтоги();
	КонецЕсли;

КонецПроцедуры

Процедура СправкиНДФЛУстановитьПризнакСпециальныйДокумент2013года() Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.СпециальныйДокумент2013года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.СпециальныйДокумент2013года
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
	|ИЗ
	|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
	|ГДЕ
	|	СправкиНДФЛДляПередачиВНалоговыйОрган.НалоговыйПериод >= 2013
	|	И НЕ СправкиНДФЛДляПередачиВНалоговыйОрган.СпециальныйДокумент2013года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.НалоговыйПериод >= 2013
	|	И НЕ СправкаНДФЛ.СпециальныйДокумент2013года";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Если Не Результаты[0].Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	Выборка = Результаты[1].Выбрать();
	
	НачатьТранзакцию();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.СпециальныйДокумент2013года = Истина;
		ДокументОбъект.Записать();
	КонецЦикла;	
	ЗафиксироватьТранзакцию();
КонецПроцедуры	

Процедура ИсправитьКодДоходаВРасчетахСБюджетом() Экспорт
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода
	|	КОНЕЦ КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст)
	
КонецПроцедуры

Процедура ПроставитьФлажокВключатьВДекларациюПоНалогуНаПрибыль() Экспорт

	// Обработка данных о доходах физлиц.
	
	КодыДоходовПоЦеннымБумагам = КодыДоходовПоЦеннымБумагам(2014);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодыДоходовПоЦеннымБумагам",КодыДоходовПоЦеннымБумагам);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)";
	Если Запрос.Выполнить().Пустой() Тогда // Дальнейшая обработка не нужна - доходов по ценным бумагам нет.
		Возврат
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И НЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль";
	Если Запрос.Выполнить().Пустой() Тогда // Повторная обработка не нужна - необработанных доходов по ценным бумагам нет.
		Возврат
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И НЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль";
	Запрос.Выполнить();
	
	Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Организация,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодДохода В (&КодыДоходовПоЦеннымБумагам)
	|				И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", Текст, Новый Структура("КодыДоходовПоЦеннымБумагам", КодыДоходовПоЦеннымБумагам), Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка
	|ИЗ
	|	Документ.ОперацияНалоговогоУчетаПоНДФЛ КАК ОперацияНалоговогоУчетаПоНДФЛ
	|ГДЕ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)";	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			Для каждого СтрокаТЧ Из Документ.СведенияОДоходах Цикл
				Если Не СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль И СтрокаТЧ.ДатаПолученияДохода >= '20140101' И СтрокаТЧ.КодДохода <> Справочники.ВидыДоходовНДФЛ.Код1010 И КодыДоходовПоЦеннымБумагам.Найти(СтрокаТЧ.КодДохода) <> Неопределено Тогда
					СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
				КонецЕсли;
			КонецЦикла;
			Если Документ.Модифицированность() Тогда
				Документ.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Обработка данных физлиц, не имевших других доходов, кроме ценных бумаг.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТФизлицаСОднотипнымиДоходами
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.Организация,
	|	ФизлицаСОднотипнымиДоходами.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	ВТФизлицаСОднотипнымиДоходами КАК ФизлицаСОднотипнымиДоходами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО ФизлицаСОднотипнымиДоходами.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И (ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|			И ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизлицаСОднотипнымиДоходами";
	Запрос.Выполнить();

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыВычетов
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = Физлица.Организация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВычетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Физлица.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = Физлица.Организация
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыВычетов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалогоплательщиков
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Физлица.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = Физлица.ГоловнаяОрганизация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалогоплательщиков КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалоговыхАгентов
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА Физлица.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Физлица.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.Организация
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Физлица.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	// Обработка данных регистраторов, в которых нет других доходов, кроме ценных бумаг.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыДоходовПоЦеннымБумагам
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТФизлицаСОднотипнымиДоходами
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыДоходовПоЦеннымБумагам КАК Регистраторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.Регистратор,
	|	ФизлицаСОднотипнымиДоходами.ФизическоеЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТФизлицаСОднотипнымиДоходами КАК ФизлицаСОднотипнымиДоходами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ПО ФизлицаСОднотипнымиДоходами.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|			И ФизлицаСОднотипнымиДоходами.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|			И (ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|			И ФизлицаСОднотипнымиДоходами.РегистрацияВНалоговомОргане = СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРегистраторыДоходовПоЦеннымБумагам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизлицаСОднотипнымиДоходами";
	Запрос.Выполнить();

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыВычетов
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВычетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыВычетов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);
	
	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалогоплательщиков
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалогоплательщиков КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалоговыхАгентов
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = Регистраторы.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = Регистраторы.РегистрацияВНалоговомОргане
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ЗаполнитьПодразделениеСотрудникаВСведенияхОДоходах() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ПодразделениеСотрудника = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	И СведенияОДоходахНДФЛ.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций";
	Запрос.Выполнить();
	
	Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Организация,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.ПодразделениеСотрудника = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				И СведенияОДоходахНДФЛ.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				И СведенияОДоходахНДФЛ.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций
	|			ТОГДА СведенияОДоходахНДФЛ.Подразделение
	|		ИНАЧЕ СведенияОДоходахНДФЛ.ПодразделениеСотрудника
	|	КОНЕЦ КАК ПодразделениеСотрудника,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ОбработатьНаборыЗаписейРегистраНакопления("СведенияОДоходахНДФЛ", Текст, , Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииДляФормированияСправок2НДФЛ

Функция ОКАТО_ОКТМО_КППИзРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане)
	
	ДанныеРегистрации = Новый Структура("ОКАТО, КПП, ОКТМО", "", "", "");
	
	Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, "КодПоОКАТО, КодПоОКТМО, КПП");
		ДанныеРегистрации.ОКАТО	= Реквизиты.КодПоОКАТО;
		ДанныеРегистрации.КПП	= Реквизиты.КПП;
		ДанныеРегистрации.ОКТМО	= Реквизиты.КодПоОКТМО;
	КонецЕсли;
	
	Возврат ДанныеРегистрации;
	
КонецФункции	

Процедура ПроверитьДанныеСправкиНДФЛ(СтруктураПроверяемыхДанных, СоответствиеРеквизитовОткрываемымОбъектам, ДанныеДляПроверки, ВыводитьСообщения = Истина, Отказ = Ложь, ВыполнятьПолнуюПроверку = Истина) Экспорт
	Перем ОткрываемыйОбъект;
	
	Если Не СоответствиеРеквизитовОткрываемымОбъектам.Свойство("Гражданство", ОткрываемыйОбъект) Тогда
		ОткрываемыйОбъект = ДанныеДляПроверки.Сотрудник;
	КонецЕсли;	
	ФИО = ДанныеДляПроверки.Фамилия + ДанныеДляПроверки.Имя + ДанныеДляПроверки.Отчество;
	
	Если ВыполнятьПолнуюПроверку Тогда
		Если СтруктураПроверяемыхДанных.Гражданство = Справочники.СтраныМира.Россия Тогда
			Если Не СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(ФИО, Ложь, "-. 0123456789") Тогда
				Если ВыводитьСообщения Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Нстр("ru = 'Сотрудник %1: ФИО физического лица должно быть введено русскими буквами.'"), ДанныеДляПроверки.СотрудникНаименование);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОткрываемыйОбъект, "Наименование", , Отказ);
				Иначе
					Отказ = Истина;
				КонецЕсли;	
			КонецЕсли; 
		ИначеЕсли ЗначениеЗаполнено(СтруктураПроверяемыхДанных.Гражданство) Тогда
			Если Не (СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(ФИО, Ложь, "-. 0123456789")
				Или СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(ФИО, Ложь, "-. 0123456789")) Тогда
				
				Если ВыводитьСообщения Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Нстр("ru = 'Сотрудник %1: ФИО физического лица нерезидента должно быть введено только русскими или только латинскими буквами.'"), ДанныеДляПроверки.СотрудникНаименование);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОткрываемыйОбъект, "Наименование", , Отказ);
				Иначе
					Отказ = Истина;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли; 
	КонецЕсли;	
		
	Если СтруктураПроверяемыхДанных.Гражданство = Справочники.СтраныМира.Россия Тогда 			
		Если Не СоответствиеРеквизитовОткрываемымОбъектам.Свойство("Гражданство", ОткрываемыйОбъект) Тогда
			ОткрываемыйОбъект = ДанныеДляПроверки.Сотрудник;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтруктураПроверяемыхДанных.Адрес) Тогда
			Если ВыводитьСообщения Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: не указан адрес.'"), ДанныеДляПроверки.СотрудникНаименование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОткрываемыйОбъект,,,Отказ);
			Иначе
				Отказ = Истина;
			КонецЕсли;	
		КонецЕсли;
	// Адрес нерезидента
	ИначеЕсли (Не ЗначениеЗаполнено(СтруктураПроверяемыхДанных.Адрес)) И (Не ЗначениеЗаполнено(СтруктураПроверяемыхДанных.АдресЗарубежом)) Тогда
		Если ВыводитьСообщения Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудник %1: для физического лица нерезидента или иностранца должен быть заполнен ""Адрес зарубежом"".'"), ДанныеДляПроверки.СотрудникНаименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ОткрываемыйОбъект, ,,Отказ);
		Иначе
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры	

Процедура СправкиНДФЛПроверитьДанныеНалоговогоАгента(Объект, ДанныеНалоговогоАгента, СпособФормирования, Отказ) Экспорт 			
	Если ДанныеНалоговогоАгента.ЭтоЮрЛицо Тогда
		ТекстСообщения = "";
		// Сведения об отправителе		
		Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ДанныеНалоговогоАгента.ИННорг, Истина, ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеНалоговогоАгента.Организация, "ИНН", "Объект", Отказ);
		КонецЕсли; 
		
		Если СокрЛП(ДанныеНалоговогоАгента.НазваниеОрганизации) = "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для организации должно быть указано сокращенное наименование организации.'"), 
				Объект.Ссылка, 
				"Организация", "Объект", Отказ);
		КонецЕсли;	
	Иначе		
		// Проверим данные отправителя.
		// Для предпринимателя 12 символов ИНН.
		ТекстСообщения = "";
		
		Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ДанныеНалоговогоАгента.ИННорг, Ложь, ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеНалоговогоАгента.Организация, "ИНН", "Объект", Отказ);
		КонецЕсли;
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(
					ДанныеНалоговогоАгента.Фамилия + ДанныеНалоговогоАгента.Имя + ДанныеНалоговогоАгента.Отчество, 
					Ложь, 
					"-. 0123456789") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для физического лица-работодателя Фамилия, Имя, Отчество должно быть введены русскими буквами.'"), 
				ДанныеНалоговогоАгента.Организация, 
				"ИндивидуальныйПредприниматель",
				"Объект", 
				Отказ);
		КонецЕсли;
		Если ПустаяСтрока(ДанныеНалоговогоАгента.Фамилия) Или ПустаяСтрока(ДанныеНалоговогоАгента.Имя) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для физического лица-работодателя должны быть указаны, как минимум, фамилия и имя.'"), 
				Объект.Ссылка, 
				"Организация",
				"Объект", 
				Отказ);
		КонецЕсли;		
	КонецЕсли;
	
	Если СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО Тогда
		Если ЗначениеЗаполнено(ДанныеНалоговогоАгента.КодНалоговогоОргана) 
			И СтрДлина(СокрЛП(ДанныеНалоговогоАгента.КодНалоговогоОргана)) <> 4 Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неверно указан код налогового органа.'"), Объект.Ссылка, "КодИФНС",, Отказ);
		КонецЕсли;
		
		КлючДанных = Объект.Ссылка;
		Поле = "РегистрацияВНалоговомОргане";
		
		Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(Объект) Тогда
			Если НЕ ЗначениеЗаполнено(ДанныеНалоговогоАгента.ОКТМО) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Не указан код по ОКТМО, по которому формируются сведения.'"), 
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			ИначеЕсли СтрДлина(СокрЛП(ДанныеНалоговогоАгента.ОКТМО)) <> 11 
				И СтрДлина(СокрЛП(ДанныеНалоговогоАгента.ОКТМО)) <> 8 Тогда	
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Неверно указан код по ОКТМО, по которому формируются сведения.'"),
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			КонецЕсли;
		Иначе	
			Если НЕ ЗначениеЗаполнено(ДанныеНалоговогоАгента.ОКАТО) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Не указан код по ОКАТО, по которому формируются сведения.'"), 
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			ИначеЕсли СтрДлина(СокрЛП(ДанныеНалоговогоАгента.ОКАТО)) <> 11 Тогда	
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Неверно указан код по ОКАТО, по которому формируются сведения.'"),
					КлючДанных, 
					"РегистрацияВНалоговомОргане",
					"Объект", 
					Отказ);		
			КонецЕсли;
		КонецЕсли;		
		
		Если ДанныеНалоговогоАгента.ЭтоЮрЛицо И Не ЗначениеЗаполнено(ДанныеНалоговогоАгента.КПП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не указан КПП, по которому формируются сведения.'"), 
				КлючДанных, 
				"РегистрацияВНалоговомОргане",
				"Объект", 
				Отказ);		
		КонецЕсли;
	КонецЕсли;		

КонецПроцедуры	

Процедура СправкиНДФЛПроверитьДанныеОДоходахНалогахВычетах(Ссылка, Дата, ДанныеСправки, ПутьКДаннымСотрудника, Доходы, Вычеты, СоответствиеСтавокДоходов, НачалоСообщения, Отказ, СводнаяСправка = Ложь, ПроверятьСоответствиеДоходовСтавке = Ложь, ДляНалогаНаПрибыль = Ложь) Экспорт 	
	
	ПутьКДаннымСотрудникаДляОшибок = ?(ПустаяСтрока(ПутьКДаннымСотрудника), "", ПутьКДаннымСотрудника + ".");
	
	НомерСтроки = 1;
	Для Каждого СтрокаДоходы Из Доходы Цикл
		
		ПутьКДанным = "СведенияОДоходах[" + Формат(СтрокаДоходы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
				
		Если ЗначениеЗаполнено(СтрокаДоходы.СуммаВычета) И Не ЗначениеЗаполнено(СтрокаДоходы.КодВычета) Тогда 
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в строке %2 списка ""Сведения о доходах"" не заполнен код вычета.'"), НачалоСообщения, НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодВычета", ,Отказ);
		КонецЕсли;

		Если ПроверятьСоответствиеДоходовСтавке Тогда
			
			СтавкаДохода = СтавкаНДФЛ(СоответствиеСтавокДоходов[СтрокаДоходы.КодДохода], СтрокаДоходы.КодДохода, ДанныеСправки.СтатусНалогоплательщика, ДанныеСправки.НалоговыйПериод);
			Если СтавкаДохода <> ДанныеСправки.Ставка Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в строке %2 списка ""Сведения о доходах"" указан доход, не соответствующий ставке справки.'"), НачалоСообщения, НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодДохода", ,Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Если ДляНалогаНаПрибыль Тогда // среди вычетов могут быть только стандартные
		
		ГруппыВычетов = Новый Массив;
		ГруппыВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
		ГруппыВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
		ДопустимыеВычеты = ВычетыНалогоплательщика(ДанныеСправки.НалоговыйПериод, ГруппыВычетов);
		
		НомерСтроки = 1;
		Для Каждого СтрокаВычеты Из Вычеты Цикл
			
			ПутьКДанным = "СведенияОВычетах[" + Формат(СтрокаВычеты.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
					
			Если ДопустимыеВычеты.Найти(СтрокаВычеты.КодВычета) = Неопределено Тогда 
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 в строке %2 списка ""Сведения о вычетах"" указан недопустимый код вычета.'"), НачалоСообщения, НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДанным + "КодВычета", ,Отказ);
			КонецЕсли;

			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
	КонецЕсли;
			
	Если (Не СводнаяСправка) 
		И (Вычеты.Найти(Справочники.ВидыВычетовНДФЛ.Код311, "КодВычета") <> Неопределено 
		Или Вычеты.Найти(Справочники.ВидыВычетовНДФЛ.Код312, "КодВычета") <> Неопределено
		Или Вычеты.Найти(Справочники.ВидыВычетовНДФЛ.Код318, "КодВычета") <> Неопределено) Тогда
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 не указаны данные уведомления о праве на имущественный вычет'"), НачалоСообщения);
				
		Если Не ЗначениеЗаполнено(ДанныеСправки.НомерУведомления)  Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + "НомерУведомления",,Отказ);	
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(ДанныеСправки.ДатаУведомления)  Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + "ДатаУведомления",,Отказ);	
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(ДанныеСправки.КодНалоговогоОрганаУведомления) Тогда 			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + "КодНалоговогоОрганаУведомления",,Отказ);
		ИначеЕсли Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ДанныеСправки.КодНалоговогоОрганаУведомления) Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 неверно указан код налогового органа, выдавшего уведомление о праве на имущественный вычет'"), НачалоСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + "КодНалоговогоОрганаУведомления",,Отказ);	
		КонецЕсли;
	КонецЕсли;
	
	Для каждого ЗначениеПеречисления Из Перечисления.НДФЛСтавки Цикл
		
		Если ПроверятьСоответствиеДоходовСтавке Тогда // проверяем только переданную ставку
			Если ЗначениеПеречисления <> ДанныеСправки.Ставка Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ДоходыПоСтавке = СправкиНДФЛИзвлечьДоходыПоСтавке(ЗначениеПеречисления, ДанныеСправки.НалоговыйПериод, ДанныеСправки.СтатусНалогоплательщика, Доходы, СоответствиеСтавокДоходов);
		
		ОбщаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСправки, "ОбщаяСуммаДохода", ЗначениеПеречисления);
		ОблагаемаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСправки, "ОблагаемаяСуммаДохода", ЗначениеПеречисления);
		
		Если ДоходыПоСтавке.Количество() > 0 
			Или ОбщаяСуммаДохода <> 0 
			Или ОблагаемаяСуммаДохода <> 0 Тогда
			
			Если ОбщаяСуммаДохода <> ДоходыПоСтавке.Итог("СуммаДохода") Тогда
				ИмяПоляИтогов = УчетНДФЛКлиентСервер.СправкиНДФЛИмяПоляИтоговПоСтавке("ОбщаяСуммаДохода", ЗначениеПеречисления);
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 общая сумма дохода по ставке %2 не совпадает с итогом таблицы доходов'"), НачалоСообщения, ЗначениеПеречисления);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + ИмяПоляИтогов,,Отказ);
			КонецЕсли;
			
			Если ОблагаемаяСуммаДохода <> ДоходыПоСтавке.Итог("СуммаДохода") - ДоходыПоСтавке.Итог("СуммаВычета") - ?(ЗначениеПеречисления = Перечисления.НДФЛСтавки.Ставка13, Вычеты.Итог("СуммаВычета"),0) Тогда
				ИмяПоляИтогов = УчетНДФЛКлиентСервер.СправкиНДФЛИмяПоляИтоговПоСтавке("ОблагаемаяСуммаДохода", ЗначениеПеречисления);
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 сумма налоговой базы по ставке %2 не совпадает с итогами таблиц доходов и вычетов'"), НачалоСообщения, ЗначениеПеречисления);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПутьКДаннымСотрудникаДляОшибок + ИмяПоляИтогов,,Отказ);	
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	

Функция СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал) Экспорт

	ДанныеНалоговогоАгента = Новый Структура;
	ДанныеНалоговогоАгента.Вставить("Организация", Организация);
	ДанныеНалоговогоАгента.Вставить("НалоговыйПериод", НалоговыйПериод);
	ДанныеНалоговогоАгента.Вставить("НалоговыйПериодСтрокой", Формат(НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
	ДанныеНалоговогоАгента.Вставить("Дата", Дата);
	ДанныеНалоговогоАгента.Вставить("Телефон", Телефон);
	ДанныеНалоговогоАгента.Вставить("Признак");
	ДанныеНалоговогоАгента.Вставить("ЭтоЮрЛицо", "");
	ДанныеНалоговогоАгента.Вставить("НазваниеОрганизации", "");
	ДанныеНалоговогоАгента.Вставить("Фамилия", "");
	ДанныеНалоговогоАгента.Вставить("Имя", "");
	ДанныеНалоговогоАгента.Вставить("Отчество", "");
	ДанныеНалоговогоАгента.Вставить("КодНалоговогоОргана", "");
	ДанныеНалоговогоАгента.Вставить("ИННорг", "");
	ДанныеНалоговогоАгента.Вставить("КПП", "");
	ДанныеНалоговогоАгента.Вставить("ОКАТО", "");
	ДанныеНалоговогоАгента.Вставить("ОКТМО", "");
	ДанныеНалоговогоАгента.Вставить("ДолжностьПодписавшегоЛица", "");
	ДанныеНалоговогоАгента.Вставить("ФИОПодписавшего", "");
	ДанныеНалоговогоАгента.Вставить("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);

	ЭтоЮрЛицо = ЗарплатаКадры.ЭтоЮридическоеЛицо(Организация);
	ДанныеНалоговогоАгента.ЭтоЮрЛицо = ЭтоЮрЛицо;
	ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "ИНН, НаименованиеПолное, НаименованиеСокращенное, ИндивидуальныйПредприниматель");
	ДанныеОрганизации.Вставить("КодНалоговогоОргана", РегистрацияВНалоговомОргане.Код);
	ДанныеНалоговогоАгента.ИННорг = СокрЛП(ДанныеОрганизации.ИНН);
	
	ЗаполнитьЗначенияСвойств(ДанныеНалоговогоАгента, ОКАТО_ОКТМО_КППИзРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане),"ОКАТО, ОКТМО, КПП");
	
	ДанныеНалоговогоАгента.ОКТМО = СокрЛП(ДанныеНалоговогоАгента.ОКТМО);
	
	МассивФизЛицДокумента = Новый Массив;	
	НеобходимоФИОИП = Ложь;
	НеобходимоФИОПодписавшегоЛица = Ложь;
	Если ЭтоЮрЛицо Тогда
		ДанныеНалоговогоАгента.НазваниеОрганизации = ?(ЗначениеЗаполнено(ДанныеОрганизации.НаименованиеСокращенное), ДанныеОрганизации.НаименованиеСокращенное, ДанныеОрганизации.НаименованиеПолное);
	Иначе
		МассивФизЛицДокумента.Добавить(ДанныеОрганизации.ИндивидуальныйПредприниматель);
		НеобходимоФИОИП = Истина;
	КонецЕсли;
	
	ДанныеНалоговогоАгента.ДолжностьПодписавшегоЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДолжностьПодписавшегоЛица, "Наименование");
	Если ЗначениеЗаполнено(СправкуПодписал) Тогда
		МассивФизЛицДокумента.Добавить(СправкуПодписал);
		НеобходимоФИОПодписавшегоЛица = Истина;
	КонецЕсли;
	
	КадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(Ложь, МассивФизЛицДокумента, "Фамилия,Имя,Отчество,ФамилияИО", Дата);
	
	СоответствиеФИОФизЛицамДокумента = Новый Соответствие;
	Для Каждого СтрокаКадровыеДанныеФизическихЛиц Из КадровыеДанныеФизическихЛиц Цикл
		ФИО = Новый Структура("Фамилия, Имя, Отчество, ФамилияИО");
		ФИО.Вставить("Фамилия", СтрокаКадровыеДанныеФизическихЛиц.Фамилия);
		ФИО.Вставить("Имя", СтрокаКадровыеДанныеФизическихЛиц.Имя);
		ФИО.Вставить("Отчество", СтрокаКадровыеДанныеФизическихЛиц.Отчество);
		ФИО.Вставить("ФамилияИО", СтрокаКадровыеДанныеФизическихЛиц.ФамилияИО);
				
		СоответствиеФИОФизЛицамДокумента.Вставить(СтрокаКадровыеДанныеФизическихЛиц.ФизическоеЛицо, ФИО);		
	КонецЦикла;	
	
	Если НеобходимоФИОИП И ЗначениеЗаполнено(ДанныеОрганизации.ИндивидуальныйПредприниматель) Тогда
		ИндивидуальныйПредпринимательФИО = СоответствиеФИОФизЛицамДокумента[ДанныеОрганизации.ИндивидуальныйПредприниматель];
		Если ИндивидуальныйПредпринимательФИО <> Неопределено Тогда
			ДанныеНалоговогоАгента.НазваниеОрганизации = ИндивидуальныйПредпринимательФИО.Фамилия + " " + ИндивидуальныйПредпринимательФИО.Имя + " " + ИндивидуальныйПредпринимательФИО.Отчество;
			ДанныеНалоговогоАгента.Фамилия = ИндивидуальныйПредпринимательФИО.Фамилия;
			ДанныеНалоговогоАгента.Имя = ИндивидуальныйПредпринимательФИО.Имя;
			ДанныеНалоговогоАгента.Отчество = ИндивидуальныйПредпринимательФИО.Отчество;
		КонецЕсли;	
	КонецЕсли;	
	Если НеобходимоФИОПодписавшегоЛица Тогда
		СправкуПодписалФИО = СоответствиеФИОФизЛицамДокумента[СправкуПодписал];
		Если СправкуПодписалФИО <> Неопределено Тогда
			ДанныеНалоговогоАгента.ФИОПодписавшего = СправкуПодписалФИО.ФамилияИО;
		КонецЕсли;	
	КонецЕсли;	
	Возврат ДанныеНалоговогоАгента
	
КонецФункции

Функция СтавкаНДФЛ(СтавкаНалогообложенияРезидента, КодДохода, СтатусНалогоплательщика, НалоговыйПериод) Экспорт	
	Если СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13 Тогда
		Если СтатусНалогоплательщика = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент Тогда
			Возврат Перечисления.НДФЛСтавки.Ставка30;
		Иначе
			Возврат Перечисления.НДФЛСтавки.Ставка13;
		КонецЕсли;
	ИначеЕсли СтатусНалогоплательщика = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент Тогда
		Если СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09 Тогда
			Если КодДохода = Справочники.ВидыДоходовНДФЛ.Код1010 И НалоговыйПериод >= Год(ДатаИзмененияНалогообложенияДивидендов()) Тогда
				Возврат Перечисления.НДФЛСтавки.Ставка13;
			Иначе
				Возврат Перечисления.НДФЛСтавки.Ставка09;
			КонецЕсли;
		ИначеЕсли СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35 Тогда
			Возврат Перечисления.НДФЛСтавки.Ставка35;
		Иначе
			Возврат Перечисления.НДФЛСтавки.ПустаяСсылка();
		КонецЕсли;
	ИначеЕсли КодДохода = Справочники.ВидыДоходовНДФЛ.Код1010 Тогда
		Возврат Перечисления.НДФЛСтавки.Ставка15;
	Иначе
		Возврат Перечисления.НДФЛСтавки.Ставка30;	
	КонецЕсли; 	
КонецФункции	

Процедура ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, СоответствиеИменСтран, СоответствиеДокументовУдостоверяющихЛичность, СоответствиеКодовДоходов, СоответствиеКодовВычетов) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторСтранМира.Ссылка,
	|	КлассификаторСтранМира.Код,
	|	КлассификаторСтранМира.Наименование
	|ИЗ
	|	Справочник.СтраныМира КАК КлассификаторСтранМира";
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовСтран.Вставить(Выборка.Ссылка,Выборка.Код);
		СоответствиеИменСтран.Вставить(Выборка.Наименование,Выборка.Код)
	КонецЦикла;
	СоответствиеКодовСтран.Вставить(Справочники.СтраныМира.ПустаяСсылка(),"999");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДокументовФизическихЛиц.Ссылка,
	|	ВидыДокументовФизическихЛиц.КодМВД КАК КодДокумента
	|ИЗ
	|	Справочник.ВидыДокументовФизическихЛиц КАК ВидыДокументовФизическихЛиц";
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеДокументовУдостоверяющихЛичность.Вставить(Выборка.Ссылка,Выборка.КодДокумента)
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоходыНДФЛ.Ссылка,
	|	ДоходыНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДляОтчетности
	|ИЗ
	|	Справочник.ВидыДоходовНДФЛ КАК ДоходыНДФЛ";
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеКодовДоходов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовДоходов.Вставить(Выборка.Ссылка, Выборка.КодДляОтчетности)
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыВычетовНДФЛ.Ссылка,
	|	ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДляОтчетности2010,
	|	ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2011Года КАК КодДляОтчетности2011
	|ИЗ
	|	Справочник.ВидыВычетовНДФЛ КАК ВидыВычетовНДФЛ";
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеКодовВычетов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовВычетов.Вставить(Выборка.Ссылка, Выборка.КодДляОтчетности2011)
	КонецЦикла;
	
КонецПроцедуры

Функция СоответствиеДоходовСтавкам(Доходы = Неопределено) Экспорт
	СоответствиеДоходовСтавкам = Новый Соответствие;
	Запрос = Новый Запрос;
	Если Доходы = Неопределено Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыДоходовНДФЛ.Ссылка,
		|	ВидыДоходовНДФЛ.СтавкаНалогообложенияРезидента
		|ИЗ
		|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ";
	Иначе 
		Запрос.УстановитьПараметр("Доходы", Доходы);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыДоходовНДФЛ.Ссылка,
		|	ВидыДоходовНДФЛ.СтавкаНалогообложенияРезидента
		|ИЗ
		|	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
		|ГДЕ
		|	ВидыДоходовНДФЛ.Ссылка В(&Доходы)";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеДоходовСтавкам.Вставить(Выборка.Ссылка, Выборка.СтавкаНалогообложенияРезидента);		
	КонецЦикла;	
	
	Возврат СоответствиеДоходовСтавкам;
КонецФункции	

// Возвращает структуру, содержащую таблицы значений с
// данными о доходах, налогах, вычетах.
//
// Параметры:
// 	Сотрудники - Массив - содержит физических лиц, по которым необходимо получить данные.
//	НалоговыйПериод - Число - номер года налогового периода.
//	Организация - организация, по которой получать доходы.
//	РегистрацияВНалоговомОргане - (необязательный), ссылка на регистрацию в налоговом органе, 
//									по которой отбирать данные.
//	Дата - Дата - (необязательный), дата ограничивающая период получаемых данных о доходах налогах и вычетах
//			если не задана, ограничением будет выступать текущая дата сеанса.
//
// Возвращаемое значение:
//	Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			Сотрудник,
//			МесяцНалоговогоПериода,
//			КодДохода,
//			КодДоходаКодДляОтчетности,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Вычеты - таблица значений с колонками:
//			Сотрудник
//			КодВычета,
//			КодВычетаКод,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Налоги - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			ОбщаяСуммаДохода,
//			ОблагаемаяСуммаДохода,
//			Исчислено,
//			Удержано,
//			Задолженность,
//			ИзлишнеУдержано,
//			Перечислено,
//			ВключатьВДекларациюПоНалогуНаПрибыль
Функция ДанныеОДоходахНалогахВычетах(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане = Неопределено, Дата = '00010101') Экспорт
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаЗакона229ФЗ", ДатаЗакона229ФЗ());
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	НачалоНалоговогоПериода = Дата(НалоговыйПериод, 1, 1);
	КонецНалоговогоПериода = КонецГода(НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецНП",КонецНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоНП", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоНП", КонецНалоговогоПериода + 1); // Начало следующего налогового периода.
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ?(Дата = '00010101', ТекущаяДатаСеанса(), Дата));
	Запрос.УстановитьПараметр("ДатаДоПодачиСведений", ?(Дата = '00010101', ТекущаяДатаСеанса(), Дата) - 1);
	Запрос.УстановитьПараметр("ЧитатьСводныеДанные", РегистрацияВНалоговомОргане = Неопределено);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", ДатаИзмененияНалогообложенияДивидендов());
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(Дата(НалоговыйПериод,1,1)), НачалоМесяца(КонецГода(Дата(НалоговыйПериод,1,1))),,, "ВТПериодыНалогаНаДоходы");
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, Сотрудники, "СтатусНалогоплательщика", КонецНалоговогоПериода);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК СписокСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.ФизическоеЛицо,
	|	Статусы.СтатусНалогоплательщика
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецГода
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК Статусы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТПериодыСрезаСтатусов
	|ИЗ
	|	ВТФизлица КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыНалогаНаДоходы КАК Периоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТПериодыСрезаСтатусов");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, "СтатусНалогоплательщика");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо,
	|	РезидентствоФизлицНаКонецМесяца.Период КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РезидентствоФизлицНаКонецМесяца.Период < &ДатаЗакона229ФЗ
	|			ТОГДА ЕСТЬNULL(РезидентствоФизлицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|		ИНАЧЕ РезидентствоФизлицНаКонецМесяца.СтатусНалогоплательщика
	|	КОНЕЦ КАК ТекущийСтатус,
	|	ЕСТЬNULL(РезидентствоФизлицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|ПОМЕСТИТЬ ВТСтатусы
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК РезидентствоФизлицНаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецГода КАК РезидентствоФизлицНаКонецГода
	|		ПО РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо = РезидентствоФизлицНаКонецГода.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК Месяц,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДоходаКодДляОтчетности,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица КАК Сотрудники
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (&ЧитатьСводныеДанные
	|					И СведенияОДоходахНДФЛ.Организация = &Организация
	|				ИЛИ СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|			И (СведенияОДоходахНДФЛ.Период <= &ДатаПодачиСведений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|ИЗ
	|	ВТФизлица КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ПО Сотрудники.ФизическоеЛицо = ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &ДатаПодачиСведений
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|	И (&ЧитатьСводныеДанные
	|				И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
	|			ИЛИ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета КАК КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.СуммаОборот КАК СуммаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета.ГруппаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	СотрудникиОрганизаций.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета,
	|	ЛОЖЬ
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|			И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (ИмущественныеВычетыНДФЛ.Период <= &ДатаПодачиСведений)
	|			И (ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (ИмущественныеВычетыНДФЛ.Год = &ГодНП)
	|			И (ИмущественныеВычетыНДФЛ.Организация = &Организация)
	|			И (&ЧитатьСводныеДанные
	|				ИЛИ ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.ВидДвижения,
	|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК Период,
	|	НДФЛРасчетыСБюджетом.Сумма,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	ВТФизлица КАК СправкиОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ПО СправкиОДоходах.ФизическоеЛицо = НДФЛРасчетыСБюджетом.ФизическоеЛицо
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛРасчетыСБюджетом.Период < &ДатаПодачиСведений)
	|			И (НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (НДФЛРасчетыСБюджетом.Организация = &Организация)
	|			И (&ЧитатьСводныеДанные
	|				ИЛИ НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) КАК Период,
	|	Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, ГОД),
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	Вычеты.ФизическоеЛицо
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.Период,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.ФизическоеЛицо
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоходыИВычеты.ФизическоеЛицо,
	|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
	|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
	|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТИтогиДоходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) КАК Период,
	|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
	|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
	|		Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|		Доходы.КодДохода КАК КодДохода,
	|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТДоходы КАК Доходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, ГОД),
	|		0,
	|		-Вычеты.СуммаВычета,
	|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|		ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|		Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|		Вычеты.ФизическоеЛицо
	|	ИЗ
	|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО ДоходыИВычеты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И ДоходыИВычеты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И ДоходыИВычеты.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И ДоходыИВычеты.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИВычеты.ФизическоеЛицо,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
	|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НачисленоЗаТекущийГод,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК УдержаноЗаТекущийГод,
	|	0 КАК ВозвращеноЗаТекущийГод,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ПереданоНаВзысканиеЗаТекущийГод,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛСводно
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
	|			&НачалоНП,
	|			&ДатаДоПодачиСведений,
	|			,
	|			Организация = &Организация
	|				И ФизическоеЛицо В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.ФизическоеЛицо
	|					ИЗ
	|						ВТФизлица КАК ФизическиеЛица)
	|				И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	СУММА(НДФЛРасчетыСБюджетом.Сумма) КАК Налог,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТУдержаноНДФЛПо13или30ПоМесяцам
	|ИЗ
	|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = Статусы.ФизическоеЛицо
	|			И (НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) = Статусы.МесяцНалоговогоПериода)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|	И НДФЛРасчетыСБюджетом.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|	И НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
	|	И ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				ТОГДА ИСТИНА
	|			КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|				ТОГДА ВЫБОР
	|						КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаИзмененияНалогообложенияДивидендов
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
	|			&НачалоНП,
	|			&ДатаДоПодачиСведений,
	|			,
	|			Организация = &Организация
	|				И ФизическоеЛицо В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.ФизическоеЛицо
	|					ИЗ
	|						ВТФизлица КАК ФизическиеЛица)
	|				И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|				И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|	КОНЕЦ КАК СтавкаПоСтатусу,
	|	ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) КАК УдержаноНДФЛПоСтавке30,
	|	ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) КАК УдержаноНДФЛПоСтавке13,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТПеречисленоПоСтавке13_30
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке13
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
	|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке13.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке30
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
	|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке30.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = Статусы.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = Статусы.МесяцНалоговогоПериода
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Перечислено.Ставка,
	|	СУММА(Перечислено.Сумма) КАК Сумма,
	|	Перечислено.ФизическоеЛицо,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛ
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|	ИЗ
	|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
	|	ГДЕ
	|		НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
	|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
	|		ВЫБОР
	|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
	|				ТОГДА 0
	|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
	|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
	|			ИНАЧЕ ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0))
	|		КОНЕЦ,
	|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
	|	ИЗ
	|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
	|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
	|		ВЫБОР
	|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
	|				ТОГДА 0
	|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 = 0
	|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
	|			ИНАЧЕ ПеречисленоПоСтавке13_30.СуммаРасход - (ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0)))
	|		КОНЕЦ,
	|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
	|	ИЗ
	|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеречисленоПоСтавке13_30.СтавкаПоСтатусу,
	|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
	|		ВЫБОР
	|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
	|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
	|	ИЗ
	|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30) КАК Перечислено
	|
	|СГРУППИРОВАТЬ ПО
	|	Перечислено.Ставка,
	|	Перечислено.ФизическоеЛицо,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Месяц КАК Месяц,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.КодДохода,
	|	Доходы.КодДоходаКодДляОтчетности,
	|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
	|	Доходы.КодВычета,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
	|	Доходы.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТДоходыПоМесяцам
	|ИЗ
	|	ВТДоходы КАК Доходы
	|ГДЕ
	|	Доходы.Месяц ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Месяц,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.КодДохода,
	|	Доходы.КодДоходаКодДляОтчетности,
	|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Доходы.ФизическоеЛицо,
	|	Доходы.КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ФизическоеЛицо,
	|	Доходы.КодДохода,
	|	Доходы.Месяц
	|ПОМЕСТИТЬ ВТОсобыеМесяцы
	|ИЗ
	|	ВТДоходыПоМесяцам КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.КодДохода,
	|	Доходы.Месяц
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) = 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МесяцыОсобыхВычетов.ФизическоеЛицо,
	|	МесяцыОсобыхВычетов.КодДохода,
	|	МесяцыОсобыхВычетов.Месяц,
	|	МАКСИМУМ(Доходы.КодВычета) КАК КодВычета
	|ПОМЕСТИТЬ ВТСтрокиСУказаннымВычетом
	|ИЗ
	|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
	|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
	|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
	|ГДЕ
	|	Доходы.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыОсобыхВычетов.ФизическоеЛицо,
	|	МесяцыОсобыхВычетов.КодДохода,
	|	МесяцыОсобыхВычетов.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МесяцыОсобыхВычетов.ФизическоеЛицо,
	|	МесяцыОсобыхВычетов.КодДохода,
	|	МесяцыОсобыхВычетов.Месяц,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
	|ПОМЕСТИТЬ ВТДоходыИзСтрокБезВычетов
	|ИЗ
	|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
	|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
	|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
	|ГДЕ
	|	Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыОсобыхВычетов.ФизическоеЛицо,
	|	МесяцыОсобыхВычетов.КодДохода,
	|	МесяцыОсобыхВычетов.Месяц,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Месяц КАК МесяцНалоговогоПериода,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
	|	Доходы.КодДохода,
	|	Доходы.КодДоходаКодДляОтчетности,
	|	Доходы.КодВычета КАК КодВычета,
	|	Доходы.СуммаДохода + ВЫБОР
	|		КОГДА СтрокиСУказаннымВычетом.ФизическоеЛицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ДоходыИзСтрокБезВычетов.СуммаДохода, 0)
	|	КОНЕЦ КАК СуммаДохода,
	|	Доходы.СуммаВычета КАК СуммаВычета,
	|	Доходы.ФизическоеЛицо КАК Сотрудник,
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	ВТДоходыПоМесяцам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобыеМесяцы КАК СтрокиБезКодаВычета
	|		ПО Доходы.ФизическоеЛицо = СтрокиБезКодаВычета.ФизическоеЛицо
	|			И Доходы.КодДохода = СтрокиБезКодаВычета.КодДохода
	|			И Доходы.Месяц = СтрокиБезКодаВычета.Месяц
	|			И (Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИзСтрокБезВычетов КАК ДоходыИзСтрокБезВычетов
	|		ПО Доходы.ФизическоеЛицо = ДоходыИзСтрокБезВычетов.ФизическоеЛицо
	|			И Доходы.Месяц = ДоходыИзСтрокБезВычетов.Месяц
	|			И Доходы.КодДохода = ДоходыИзСтрокБезВычетов.КодДохода
	|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = ДоходыИзСтрокБезВычетов.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСУказаннымВычетом КАК СтрокиСУказаннымВычетом
	|		ПО Доходы.ФизическоеЛицо = СтрокиСУказаннымВычетом.ФизическоеЛицо
	|			И Доходы.Месяц = СтрокиСУказаннымВычетом.Месяц
	|			И Доходы.КодДохода = СтрокиСУказаннымВычетом.КодДохода
	|			И Доходы.КодВычета = СтрокиСУказаннымВычетом.КодВычета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И (КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) = СтавкаНДФЛПоСтавкеРезидента.Период)
	|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|ГДЕ
	|	СтрокиБезКодаВычета.ФизическоеЛицо ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	МесяцНалоговогоПериода,
	|	Доходы.КодДоходаКодДляОтчетности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вычеты.КодВычета,
	|	Вычеты.КодВычетаГруппаВычета КАК ГруппаВычета,
	|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета,
	|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодВычетаКод,
	|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Вычеты.ФизическоеЛицо КАК Сотрудник
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|ГДЕ
	|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Вычеты.КодВычета,
	|	Вычеты.КодВычетаГруппаВычета,
	|	Вычеты.ФизическоеЛицо,
	|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|
	|ИМЕЮЩИЕ
	|	СУММА(Вычеты.СуммаВычета) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВычетаКод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиОрганизаций.ФизическоеЛицо КАК Сотрудник,
	|	ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) КАК Ставка,
	|	ИтогиДоходов.ОбщаяСуммаДохода,
	|	ИтогиДоходов.ОблагаемаяСуммаДохода,
	|	Налоги.НачисленоЗаТекущийГод КАК Исчислено,
	|	Налоги.УдержаноЗаТекущийГод - Налоги.ВозвращеноЗаТекущийГод КАК Удержано,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА &ЧитатьСводныеДанные
	|				ТОГДА ПеречисленоНДФЛСводно.Сумма
	|			ИНАЧЕ ПеречисленоНДФЛ.Сумма
	|		КОНЕЦ, 0) КАК Перечислено,
	|	ВЫБОР
	|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод > 0
	|			ТОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Задолженность,
	|	ВЫБОР
	|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод < 0
	|			ТОГДА -(Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИзлишнеУдержано,
	|	НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.НДФЛСтавки КАК Ставки
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИСТИНА КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ЛОЖЬ) КАК НалогНаПрибыль
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиДоходов КАК ИтогиДоходов
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИтогиДоходов.ФизическоеЛицо
	|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ИтогиДоходов.Ставка)
	|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ИтогиДоходов.ВключатьВДекларациюПоНалогуНаПрибыль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК Налоги
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = Налоги.ФизическоеЛицо
	|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = Налоги.Ставка)
	|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = Налоги.ВключатьВДекларациюПоНалогуНаПрибыль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛСводно КАК ПеречисленоНДФЛСводно
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛСводно.ФизическоеЛицо
	|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛСводно.Ставка)
	|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛСводно.ВключатьВДекларациюПоНалогуНаПрибыль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛ КАК ПеречисленоНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛ.ФизическоеЛицо
	|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛ.Ставка)
	|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
	|ГДЕ
	|	(ИтогиДоходов.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|				И (ИтогиДоходов.ОбщаяСуммаДохода <> 0
	|					ИЛИ ИтогиДоходов.ОблагаемаяСуммаДохода <> 0)
	|			ИЛИ Налоги.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|				И (Налоги.НачисленоЗаТекущийГод <> 0
	|					ИЛИ Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод <> 0)
	|			ИЛИ ВЫБОР
	|					КОГДА &ЧитатьСводныеДанные
	|						ТОГДА ПеречисленоНДФЛСводно.Сумма
	|					ИНАЧЕ ПеречисленоНДФЛ.Сумма
	|				КОНЕЦ ЕСТЬ НЕ NULL 
	|				И ВЫБОР
	|					КОГДА &ЧитатьСводныеДанные
	|						ТОГДА ПеречисленоНДФЛСводно.Сумма
	|					ИНАЧЕ ПеречисленоНДФЛ.Сумма
	|				КОНЕЦ <> 0)";		
		
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	
	Возврат Новый Структура("Доходы, Вычеты, Налоги", 
						Результаты[ВсегоЗапросов - 3].Выгрузить(), 
						Результаты[ВсегоЗапросов - 2].Выгрузить(), 
						Результаты[ВсегоЗапросов - 1].Выгрузить());
	
КонецФункции

Функция ПолучитьСоответствиеКодовФНССтатусамНДФЛ() Экспорт
	СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНалогоплательщиковПоНДФЛ.Ссылка,
	|	СтатусыНалогоплательщиковПоНДФЛ.КодФНС
	|ИЗ
	|	Справочник.СтатусыНалогоплательщиковПоНДФЛ КАК СтатусыНалогоплательщиковПоНДФЛ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовФНССтатусамНДФЛ.Вставить(Выборка.Ссылка, Выборка.КодФНС);		
	КонецЦикла;	
	
	Возврат СоответствиеКодовФНССтатусамНДФЛ;
КонецФункции

Функция СправкиНДФЛДанныеДляПечати(МассивОбъектов, ПолучатьИтоговыеСуммы = Ложь) Экспорт
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		ИсточникДанных = МассивОбъектов[0].Метаданные().ПолноеИмя();
	    ЭтоСправкаДляНалоговогоОргана = (ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.СправкиНДФЛДляПередачиВНалоговыйОрган"));
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Если ПолучатьИтоговыеСуммы Тогда
		Если ЭтоСправкаДляНалоговогоОргана Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки) КАК НомерСправки,
			|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
			|ПОМЕСТИТЬ ВТКоличествоСправок
			|ИЗ
			|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
			|ГДЕ
			|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка В(&МассивОбъектов)
			|
			|СГРУППИРОВАТЬ ПО
			|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке13) КАК ОбщаяСуммаДоходаПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке13) КАК ОблагаемаяСуммаДоходаПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке13) КАК ИсчисленоПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке13) КАК УдержаноПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке13) КАК ЗадолженностьПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке13) КАК ИзлишнеУдержаноПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке13) КАК ПеречисленоПоСтавке13,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке30) КАК ОбщаяСуммаДоходаПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке30) КАК ОблагаемаяСуммаДоходаПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке30) КАК ИсчисленоПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке30) КАК УдержаноПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке30) КАК ЗадолженностьПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке30) КАК ИзлишнеУдержаноПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке30) КАК ПеречисленоПоСтавке30,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке9) КАК ОбщаяСуммаДоходаПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке9) КАК ОблагаемаяСуммаДоходаПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке9) КАК ИсчисленоПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке9) КАК УдержаноПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке9) КАК ЗадолженностьПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке9) КАК ИзлишнеУдержаноПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке9) КАК ПеречисленоПоСтавке9,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке15) КАК ОбщаяСуммаДоходаПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке15) КАК ОблагаемаяСуммаДоходаПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке15) КАК ИсчисленоПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке15) КАК УдержаноПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке15) КАК ЗадолженностьПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке15) КАК ИзлишнеУдержаноПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке15) КАК ПеречисленоПоСтавке15,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке35) КАК ОбщаяСуммаДоходаПоСтавке35,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке35) КАК ОблагаемаяСуммаДоходаПоСтавке35,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке35) КАК ИсчисленоПоСтавке35,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке35) КАК УдержаноПоСтавке35,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке35) КАК ЗадолженностьПоСтавке35,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке35) КАК ИзлишнеУдержаноПоСтавке35,
			|	СУММА(СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке35) КАК ПеречисленоПоСтавке35,
			|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка
			|ПОМЕСТИТЬ ВТСуммыНалогов
			|ИЗ
			|	Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
			|ГДЕ
			|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка В(&МассивОбъектов)
			|
			|СГРУППИРОВАТЬ ПО
			|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Ссылка";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СправкаНДФЛ.Ссылка,
			|	1 КАК НомерСправки
			|ПОМЕСТИТЬ ВТКоличествоСправок
			|ИЗ
			|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
			|ГДЕ
			|	СправкаНДФЛ.Ссылка В(&МассивОбъектов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке13) КАК ОбщаяСуммаДоходаПоСтавке13,
			|	СУММА(СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке13) КАК ОблагаемаяСуммаДоходаПоСтавке13,
			|	СУММА(СправкаНДФЛ.ИсчисленоПоСтавке13) КАК ИсчисленоПоСтавке13,
			|	СУММА(СправкаНДФЛ.УдержаноПоСтавке13) КАК УдержаноПоСтавке13,
			|	СУММА(СправкаНДФЛ.ЗадолженностьПоСтавке13) КАК ЗадолженностьПоСтавке13,
			|	СУММА(СправкаНДФЛ.ИзлишнеУдержаноПоСтавке13) КАК ИзлишнеУдержаноПоСтавке13,
			|	СУММА(СправкаНДФЛ.ПеречисленоПоСтавке13) КАК ПеречисленоПоСтавке13,
			|	СУММА(СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке30) КАК ОбщаяСуммаДоходаПоСтавке30,
			|	СУММА(СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке30) КАК ОблагаемаяСуммаДоходаПоСтавке30,
			|	СУММА(СправкаНДФЛ.ИсчисленоПоСтавке30) КАК ИсчисленоПоСтавке30,
			|	СУММА(СправкаНДФЛ.УдержаноПоСтавке30) КАК УдержаноПоСтавке30,
			|	СУММА(СправкаНДФЛ.ЗадолженностьПоСтавке30) КАК ЗадолженностьПоСтавке30,
			|	СУММА(СправкаНДФЛ.ИзлишнеУдержаноПоСтавке30) КАК ИзлишнеУдержаноПоСтавке30,
			|	СУММА(СправкаНДФЛ.ПеречисленоПоСтавке30) КАК ПеречисленоПоСтавке30,
			|	СУММА(СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке9) КАК ОбщаяСуммаДоходаПоСтавке9,
			|	СУММА(СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке9) КАК ОблагаемаяСуммаДоходаПоСтавке9,
			|	СУММА(СправкаНДФЛ.ИсчисленоПоСтавке9) КАК ИсчисленоПоСтавке9,
			|	СУММА(СправкаНДФЛ.УдержаноПоСтавке9) КАК УдержаноПоСтавке9,
			|	СУММА(СправкаНДФЛ.ЗадолженностьПоСтавке9) КАК ЗадолженностьПоСтавке9,
			|	СУММА(СправкаНДФЛ.ИзлишнеУдержаноПоСтавке9) КАК ИзлишнеУдержаноПоСтавке9,
			|	СУММА(СправкаНДФЛ.ПеречисленоПоСтавке9) КАК ПеречисленоПоСтавке9,
			|	СУММА(СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке15) КАК ОбщаяСуммаДоходаПоСтавке15,
			|	СУММА(СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке15) КАК ОблагаемаяСуммаДоходаПоСтавке15,
			|	СУММА(СправкаНДФЛ.ИсчисленоПоСтавке15) КАК ИсчисленоПоСтавке15,
			|	СУММА(СправкаНДФЛ.УдержаноПоСтавке15) КАК УдержаноПоСтавке15,
			|	СУММА(СправкаНДФЛ.ЗадолженностьПоСтавке15) КАК ЗадолженностьПоСтавке15,
			|	СУММА(СправкаНДФЛ.ИзлишнеУдержаноПоСтавке15) КАК ИзлишнеУдержаноПоСтавке15,
			|	СУММА(СправкаНДФЛ.ПеречисленоПоСтавке15) КАК ПеречисленоПоСтавке15,
			|	СУММА(СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке35) КАК ОбщаяСуммаДоходаПоСтавке35,
			|	СУММА(СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке35) КАК ОблагаемаяСуммаДоходаПоСтавке35,
			|	СУММА(СправкаНДФЛ.ИсчисленоПоСтавке35) КАК ИсчисленоПоСтавке35,
			|	СУММА(СправкаНДФЛ.УдержаноПоСтавке35) КАК УдержаноПоСтавке35,
			|	СУММА(СправкаНДФЛ.ЗадолженностьПоСтавке35) КАК ЗадолженностьПоСтавке35,
			|	СУММА(СправкаНДФЛ.ИзлишнеУдержаноПоСтавке35) КАК ИзлишнеУдержаноПоСтавке35,
			|	СУММА(СправкаНДФЛ.ПеречисленоПоСтавке35) КАК ПеречисленоПоСтавке35,
			|	СправкаНДФЛ.Ссылка
			|ПОМЕСТИТЬ ВТСуммыНалогов
			|ИЗ
			|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
			|ГДЕ
			|	СправкаНДФЛ.Ссылка В(&МассивОбъектов)
			|
			|СГРУППИРОВАТЬ ПО
			|	СправкаНДФЛ.Ссылка";
		КонецЕсли;
		
		Запрос.Выполнить();
			
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.НалоговыйПериод,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКАТО КАК ОКАТО,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане.КПП КАК КПП,
		|	ДанныеДокумента.КодИФНС КАК КодНалоговогоОргана,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Телефон,
		|	ДанныеДокумента.ДолжностьПодписавшегоЛица,
		|	ДанныеДокумента.СправкуПодписал,
		|	ДанныеДокумента.ОснованиеДляПредставленияСправок,
		|	ДанныеДокумента.Номер,
		|	&ИдентификаторФайла КАК ИдентификаторФайла,
		|	Организации.ИНН,
		|	Организации.ЮридическоеФизическоеЛицо,
		|	Организации.НаименованиеПолное,
		|	Организации.НаименованиеСокращенное,
		|	Организации.ИндивидуальныйПредприниматель,
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.МоментВремени,
		|	ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.ОбщаяСуммаДоходаПоСтавке35, 0) КАК ОбщаяСуммаДохода,
		|	ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.ИсчисленоПоСтавке35, 0) КАК Исчислено,
		|	ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.УдержаноПоСтавке35, 0) КАК Удержано,
		|	ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке13, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке30, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке9, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке15, 0) + ЕСТЬNULL(ДанныеОНалогах.ПеречисленоПоСтавке35, 0) КАК Перечислено,
		|	КоличествоСправок.НомерСправки КАК КоличествоСправок,
		|	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКТМО КАК ОКТМО,
		|	ДанныеДокумента.СпециальныйДокумент2013года
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	#ИсточникДанных КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ДанныеДокумента.Организация = Организации.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоСправок КАК КоличествоСправок
		|		ПО ДанныеДокумента.Ссылка = КоличествоСправок.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыНалогов КАК ДанныеОНалогах
		|		ПО ДанныеДокумента.Ссылка = ДанныеОНалогах.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Ссылка В(&МассивОбъектов)";
	Иначе
	   Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	ДанныеДокумента.Организация,
	   |	ДанныеДокумента.НалоговыйПериод,
	   |	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКАТО КАК ОКАТО,
	   |	ДанныеДокумента.РегистрацияВНалоговомОргане.КПП КАК КПП,
	   |	ДанныеДокумента.КодИФНС КАК КодНалоговогоОргана,
	   |	ДанныеДокумента.Дата,
	   |	ДанныеДокумента.Телефон,
	   |	ДанныеДокумента.ДолжностьПодписавшегоЛица,
	   |	ДанныеДокумента.СправкуПодписал,
	   |	ДанныеДокумента.ОснованиеДляПредставленияСправок,
	   |	Организации.ИНН,
	   |	Организации.ЮридическоеФизическоеЛицо,
	   |	Организации.НаименованиеПолное,
	   |	Организации.НаименованиеСокращенное,
	   |	Организации.ИндивидуальныйПредприниматель,
	   |	ДанныеДокумента.Ссылка,
	   |	ДанныеДокумента.МоментВремени,
	   |	ДанныеДокумента.Номер,
	   |	&ИдентификаторФайла КАК ИдентификаторФайла,
	   |	0 КАК ОбщаяСуммаДохода,
	   |	0 КАК Исчислено,
	   |	0 КАК Удержано,
	   |	0 КАК Перечислено,
	   |	0 КАК КоличествоСправок,
	   |	ДанныеДокумента.РегистрацияВНалоговомОргане.КодПоОКТМО КАК ОКТМО,
	   |	ДанныеДокумента.СпециальныйДокумент2013года
	   |ПОМЕСТИТЬ ВТДанныеДокументов
	   |ИЗ
	   |	#ИсточникДанных КАК ДанныеДокумента
	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	   |		ПО ДанныеДокумента.Организация = Организации.Ссылка
	   |ГДЕ
	   |	ДанныеДокумента.Ссылка В(&МассивОбъектов)";
	КонецЕсли;   
	        				   	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ИсточникДанных", ИсточникДанных);
	
	Если ЭтоСправкаДляНалоговогоОргана Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИдентификаторФайла", "ДанныеДокумента.ИдентификаторФайла"); 
	Иначе	
		Запрос.УстановитьПараметр("ИдентификаторФайла", Строка(Новый УникальныйИдентификатор));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОснованиеДляПредставленияСправок", "СпособФормирования");
	КонецЕсли;			   
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("СправкуПодписал");
	ИменаПолейОтветственныхЛиц.Добавить("ИндивидуальныйПредприниматель");

	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов"); 	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НалоговыйПериод,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.Телефон,
	|	ДанныеДокументов.ДолжностьПодписавшегоЛица,
	|	ДанныеДокументов.СправкуПодписал,
	|	ДанныеДокументов.ОснованиеДляПредставленияСправок,
	|	ДанныеДокументов.ИНН,
	|	ДанныеДокументов.КПП,
	|	ДанныеДокументов.КодНалоговогоОргана,
	|	ДанныеДокументов.ЮридическоеФизическоеЛицо,
	|	ДанныеДокументов.НаименованиеПолное,
	|	ДанныеДокументов.НаименованиеСокращенное,
	|	ДанныеДокументов.ИндивидуальныйПредприниматель,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Номер КАК Номер,
	|	ЕСТЬNULL(ФИОИндивидуальныхПредпринимателей.Фамилия, """") КАК ФамилияИП,
	|	ЕСТЬNULL(ФИОИндивидуальныхПредпринимателей.Имя, """") КАК ИмяИП,
	|	ЕСТЬNULL(ФИОИндивидуальныхПредпринимателей.Отчество, """") КАК ОтчествоИП,
	|	ЕСТЬNULL(ФИООтветственныхЛиц.РасшифровкаПодписи, """") КАК ФИОПодписавшего,
	|	ЕСТЬNULL(Должности.Наименование, """") КАК Должность,
	|	ДанныеДокументов.ОКАТО,
	|	ДанныеДокументов.ОКТМО,
	|	ДанныеДокументов.ОбщаяСуммаДохода,
	|	ДанныеДокументов.Исчислено,
	|	ДанныеДокументов.Удержано,
	|	ДанныеДокументов.Перечислено,
	|	ДанныеДокументов.КоличествоСправок,
	|	ДанныеДокументов.СпециальныйДокумент2013года,
	|	ДанныеДокументов.ИдентификаторФайла КАК ИдентификаторФайла
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОИндивидуальныхПредпринимателей
	|		ПО ДанныеДокументов.ИндивидуальныйПредприниматель = ФИОИндивидуальныхПредпринимателей.ФизическоеЛицо
	|			И ДанныеДокументов.Ссылка = ФИОИндивидуальныхПредпринимателей.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
	|		ПО ДанныеДокументов.Ссылка = ФИООтветственныхЛиц.Ссылка
	|			И ДанныеДокументов.СправкуПодписал = ФИООтветственныхЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|		ПО ДанныеДокументов.ДолжностьПодписавшегоЛица = Должности.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.МоментВремени";

	Если Не ЭтоСправкаДляНалоговогоОргана Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОснованиеДляПредставленияСправок", "СпособФормирования");
	КонецЕсли;	
	
	ДанныеОрганизации = Запрос.Выполнить().Выбрать();
	
	ДанныеНалоговыхАгентов = Новый Соответствие;
	
	Пока ДанныеОрганизации.Следующий() Цикл 
		
		ОКТМО = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ДанныеОрганизации.ОКТМО, 11, "-", "Справа");
		
		ДанныеНалоговогоАгента = Новый Структура;
		ДанныеНалоговогоАгента.Вставить("Организация", ДанныеОрганизации.Организация);
		ДанныеНалоговогоАгента.Вставить("НалоговыйПериод", ДанныеОрганизации.НалоговыйПериод);
		ДанныеНалоговогоАгента.Вставить("СпециальныйДокумент2013года", ДанныеОрганизации.СпециальныйДокумент2013года);
		ДанныеНалоговогоАгента.Вставить("НалоговыйПериодСтрокой", Формат(ДанныеОрганизации.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
		ДанныеНалоговогоАгента.Вставить("Дата", ДанныеОрганизации.Дата);
		ДанныеНалоговогоАгента.Вставить("Телефон", ДанныеОрганизации.Телефон);
		ДанныеНалоговогоАгента.Вставить("ЭтоЮрЛицо",ЗарплатаКадры.ЭтоЮридическоеЛицо(ДанныеОрганизации.Организация)); 
		ДанныеНалоговогоАгента.Вставить("КодНалоговогоОргана", ДанныеОрганизации.КодНалоговогоОргана); 
		ДанныеНалоговогоАгента.Вставить("ИННорг", СокрЛП(ДанныеОрганизации.ИНН)); 
		ДанныеНалоговогоАгента.Вставить("ОКАТО", ДанныеОрганизации.ОКАТО);
		ДанныеНалоговогоАгента.Вставить("ОКТМО", ОКТМО);
		ДанныеНалоговогоАгента.Вставить("КПП", ДанныеОрганизации.КПП);
		ДанныеНалоговогоАгента.Вставить("НаименованиеПолное", ДанныеОрганизации.НаименованиеПолное);
		ДанныеНалоговогоАгента.Вставить("ФИОПодписавшего", ДанныеОрганизации.ФИОПодписавшего);
		ДанныеНалоговогоАгента.Вставить("ДолжностьПодписавшегоЛица", ДанныеОрганизации.Должность);
		ДанныеНалоговогоАгента.Вставить("Номер", ДанныеОрганизации.Номер);
		ДанныеНалоговогоАгента.Вставить("Признак");
		ДанныеНалоговогоАгента.Вставить("Фамилия");
		ДанныеНалоговогоАгента.Вставить("Имя");
		ДанныеНалоговогоАгента.Вставить("Отчество");
		ДанныеНалоговогоАгента.Вставить("ИдентификаторФайла", ДанныеОрганизации.ИдентификаторФайла);
		ДанныеНалоговогоАгента.Вставить("Телефон", "");
			
		ПолучаемыеПоля = Новый Массив;
		ПолучаемыеПоля.Добавить("ТелОрганизации");
		
		ДанныеКИОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(ДанныеОрганизации.Организация, , ПолучаемыеПоля);
		
		Если ТипЗнч(ДанныеКИОрганизации) = Тип("Структура")
			И ДанныеКИОрганизации.Свойство("ТелОрганизации") Тогда
			
			ДанныеНалоговогоАгента.Телефон = ДанныеКИОрганизации.ТелОрганизации;
		КонецЕсли;		
			
		Если ДанныеНалоговогоАгента.ЭтоЮрЛицо Тогда
			ДанныеНалоговогоАгента.Вставить("НазваниеОрганизации", ?(ЗначениеЗаполнено(ДанныеОрганизации.НаименованиеСокращенное), ДанныеОрганизации.НаименованиеСокращенное, ДанныеОрганизации.НаименованиеПолное));
		Иначе
			ДанныеНалоговогоАгента.Вставить("НазваниеОрганизации", ДанныеОрганизации.ФамилияИП + " " + ДанныеОрганизации.ИмяИП + " " + ДанныеОрганизации.ОтчествоИП);
			ДанныеНалоговогоАгента.Фамилия = ДанныеОрганизации.ФамилияИП;
			ДанныеНалоговогоАгента.Имя = ДанныеОрганизации.ИмяИП;
			ДанныеНалоговогоАгента.Отчество = ДанныеОрганизации.ОтчествоИП;
		КонецЕсли;
		
		Если ЭтоСправкаДляНалоговогоОргана Тогда
			ДанныеНалоговогоАгента.Признак = ?(ДанныеОрганизации.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ, "2", "1");
		Иначе
			ДанныеНалоговогоАгента.Признак = ?(ДанныеОрганизации.СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно,"СводнаяСправка", "1");
		КонецЕсли;	
		
		Если ПолучатьИтоговыеСуммы Тогда
			ДанныеНалоговогоАгента.Вставить("ОбщаяСуммаДохода", ДанныеОрганизации.ОбщаяСуммаДохода);
			ДанныеНалоговогоАгента.Вставить("Исчислено", ДанныеОрганизации.Исчислено);
			ДанныеНалоговогоАгента.Вставить("Удержано", ДанныеОрганизации.Удержано);
			ДанныеНалоговогоАгента.Вставить("Перечислено", ДанныеОрганизации.Перечислено);
			ДанныеНалоговогоАгента.Вставить("КоличествоСправок", ДанныеОрганизации.КоличествоСправок);
		КонецЕсли;	
		
		ДанныеНалоговыхАгентов.Вставить(ДанныеОрганизации.Ссылка, ДанныеНалоговогоАгента);
	КонецЦикла;	
	
	Возврат ДанныеНалоговыхАгентов;
КонецФункции

Функция СформироватьПечатнуюФорму2НДФЛ(ОбъектыПечати, МассивОбъектов, ДанныеДокументов, ДанныеСотрудниковДокументов, ДанныеОДоходахДокументов, ДанныеОВычетахДокументов) Экспорт
 	СоответствиеКодовФНССтатусамНДФЛ = УчетНДФЛ.ПолучитьСоответствиеКодовФНССтатусамНДФЛ();
	СоответствиеСтавокДоходов = СоответствиеДоходовСтавкам();
	ПустаяСтруктураАдреса = Новый Структура("Индекс,КодРегиона,Район,Город,НаселенныйПункт,Улица,Дом,Корпус,Квартира");
		
	ТекущаяДата = ТекущаяДатаСеанса();
	
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовВычетов = Новый Соответствие;
	ПрочитатьКлассификаторыВСоответствия(
		СоответствиеКодовСтран, 
		СоответствиеИменСтран, 
		СоответствиеДокументовУдостоверяющихЛичность, 
		СоответствиеКодовДоходов,
		СоответствиеКодовВычетов);
		
	ТекущаяДата = ТекущаяДатаСеанса();
	ВременныйТабДокумент = Новый ТабличныйДокумент;
		
	ТабДокумент = Новый ТабличныйДокумент;
		
	Справка2011 = ПолучитьОбщийМакет("Форма2НДФЛс2011");
	Справка2014 = ПолучитьОбщийМакет("Форма2НДФЛс2014");
	
	ОбластьМакетаШапкаПервойСтраницы_2011 = Справка2011.ПолучитьОбласть("ШапкаПервойСтраницы"); 
	ОбластьМакетаШапкаВторойСтраницы_2011 = Справка2011.ПолучитьОбласть("ШапкаВторойСтраницы");
	ОбластьМакетаЗаголовокРаздела3_2011 = Справка2011.ПолучитьОбласть("ЗаголовокРаздела3"); 
	ОбластьМакетаЗаголовокРаздела4_2011 = Справка2011.ПолучитьОбласть("ЗаголовокРаздела4");
	ОбластьМакетаПодвалРаздела4_2011	= Справка2011.ПолучитьОбласть("ПодвалРаздела4");
	ОбластьМакетаРаздел5_2011 = Справка2011.ПолучитьОбласть("Раздел5");
	ОбластьМакетаНалоговыйАгент_2011 = Справка2011.ПолучитьОбласть("НалоговыйАгент");
	ОбластьМакетаПримечание_2011 = Справка2011.ПолучитьОбласть("Примечание");
	
	ОбластьМакетаСтрокаВычетов_2011 = Справка2011.ПолучитьОбласть("СтрокаВычетов"); 
	ОбластьМакетаСтрокаДоходов_2011 = Справка2011.ПолучитьОбласть("СтрокаДоходов"); 
	ОбластиМакетаДляДоходов_2011 = Новый Массив;
	ОбластиМакетаДляДоходов_2011.Добавить(Справка2011.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть"));
	ОбластиМакетаДляДоходов_2011.Добавить(Справка2011.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть"));
	ОбластиМакетаДляВычетов_2011 = Новый Массив;
	Для Сч = 1 По 4 Цикл
		ОбластиМакетаДляВычетов_2011.Добавить(Справка2011.ПолучитьОбласть("СтрокаВычетов|Вычеты"+Сч));
	КонецЦикла;		
	
	ОбластьМакетаШапкаПервойСтраницы_2014 = Справка2014.ПолучитьОбласть("ШапкаПервойСтраницы"); 
	ОбластьМакетаШапкаВторойСтраницы_2014 = Справка2014.ПолучитьОбласть("ШапкаВторойСтраницы");
	ОбластьМакетаЗаголовокРаздела3_2014 = Справка2014.ПолучитьОбласть("ЗаголовокРаздела3"); 
	ОбластьМакетаЗаголовокРаздела4_2014 = Справка2014.ПолучитьОбласть("ЗаголовокРаздела4");
	ОбластьМакетаПодвалРаздела4_2014	= Справка2014.ПолучитьОбласть("ПодвалРаздела4");
	ОбластьМакетаРаздел5_2014 = Справка2014.ПолучитьОбласть("Раздел5");
	ОбластьМакетаНалоговыйАгент_2014 = Справка2014.ПолучитьОбласть("НалоговыйАгент");
	ОбластьМакетаПримечание_2014 = Справка2014.ПолучитьОбласть("Примечание");
	
	ОбластьМакетаСтрокаВычетов_2014 = Справка2014.ПолучитьОбласть("СтрокаВычетов"); 
	ОбластьМакетаСтрокаДоходов_2014 = Справка2014.ПолучитьОбласть("СтрокаДоходов"); 
	ОбластиМакетаДляДоходов_2014 = Новый Массив;
	ОбластиМакетаДляДоходов_2014.Добавить(Справка2014.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть"));
	ОбластиМакетаДляДоходов_2014.Добавить(Справка2014.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть"));
	ОбластиМакетаДляВычетов_2014 = Новый Массив;
	Для Сч = 1 По 4 Цикл
		ОбластиМакетаДляВычетов_2014.Добавить(Справка2014.ПолучитьОбласть("СтрокаВычетов|Вычеты"+Сч));
	КонецЦикла;		
	
	Для Каждого Ссылка Из МассивОбъектов  Цикл
		
		ДанныеТекущегоДокумента = ДанныеДокументов.Получить(Ссылка);
		
		Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(ДанныеТекущегоДокумента) Тогда			
			ОбластьМакетаШапкаПервойСтраницы = ОбластьМакетаШапкаПервойСтраницы_2014; 
			ОбластьМакетаШапкаВторойСтраницы = ОбластьМакетаШапкаВторойСтраницы_2014;
			ОбластьМакетаЗаголовокРаздела3 = ОбластьМакетаЗаголовокРаздела3_2014; 
			ОбластьМакетаЗаголовокРаздела4 = ОбластьМакетаЗаголовокРаздела4_2014;
			ОбластьМакетаПодвалРаздела4	= ОбластьМакетаПодвалРаздела4_2014;
			ОбластьМакетаРаздел5 = ОбластьМакетаРаздел5_2014;
			ОбластьМакетаНалоговыйАгент = ОбластьМакетаНалоговыйАгент_2014;
			ОбластьМакетаПримечание = ОбластьМакетаПримечание_2014;
			
			ОбластьМакетаСтрокаВычетов = ОбластьМакетаСтрокаВычетов_2014; 
			ОбластьМакетаСтрокаДоходов = ОбластьМакетаСтрокаДоходов_2014; 
			ОбластиМакетаДляДоходов = ОбластиМакетаДляДоходов_2014;
			ОбластиМакетаДляВычетов = ОбластиМакетаДляВычетов_2014;			

		Иначе
			ОбластьМакетаШапкаПервойСтраницы = ОбластьМакетаШапкаПервойСтраницы_2011; 
			ОбластьМакетаШапкаВторойСтраницы = ОбластьМакетаШапкаВторойСтраницы_2011;
			ОбластьМакетаЗаголовокРаздела3 = ОбластьМакетаЗаголовокРаздела3_2011; 
			ОбластьМакетаЗаголовокРаздела4 = ОбластьМакетаЗаголовокРаздела4_2011;
			ОбластьМакетаПодвалРаздела4	= ОбластьМакетаПодвалРаздела4_2011;
			ОбластьМакетаРаздел5 = ОбластьМакетаРаздел5_2011;
			ОбластьМакетаНалоговыйАгент = ОбластьМакетаНалоговыйАгент_2011;
			ОбластьМакетаПримечание = ОбластьМакетаПримечание_2011;
			
			ОбластьМакетаСтрокаВычетов = ОбластьМакетаСтрокаВычетов_2011; 
			ОбластьМакетаСтрокаДоходов = ОбластьМакетаСтрокаДоходов_2011; 
			ОбластиМакетаДляДоходов = ОбластиМакетаДляДоходов_2011;
			ОбластиМакетаДляВычетов = ОбластиМакетаДляВычетов_2011;
		КонецЕсли;	

		ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(ДанныеТекущегоДокумента);  // Раздел 1
		Если ДанныеТекущегоДокумента.Признак = "СводнаяСправка" Тогда
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСправкаВИФНС").Видимость = Ложь;
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСводнойСправки").Видимость = Истина;
		Иначе
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСправкаВИФНС").Видимость = Истина;
			ОбластьМакетаШапкаПервойСтраницы.Область("ОбластьСводнойСправки").Видимость = Ложь;
		КонецЕсли;
		
		// последующие страницы
		ОбластьМакетаШапкаВторойСтраницы.Параметры.Заполнить(ОбластьМакетаШапкаПервойСтраницы.Параметры);
		ОбластьМакетаНалоговыйАгент.Параметры.Заполнить(ДанныеТекущегоДокумента); // подписи
				
		СтрокиДанныхПоСотрудникам = ДанныеСотрудниковДокументов.Скопировать(Новый Структура("Ссылка", Ссылка));
		СтрокиДанныхПоСотрудникам.Сортировать("НомерСправки");
				
		Для каждого СтрокаДанных Из СтрокиДанныхПоСотрудникам Цикл 
			
			ВсегоИтогов = 0;
			Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
				Если УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
					ВсегоИтогов = ВсегоИтогов + 1;
				КонецЕсли;
				
			КонецЦикла;	

			СтруктураОтбора = Новый Структура("Ссылка, Сотрудник", Ссылка, СтрокаДанных.НомерСправки); 
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
			ДоходыПоВидам = ДанныеОДоходахДокументов.Скопировать(СтруктураОтбора);
			ВычетыПоВидам = ДанныеОВычетахДокументов.Скопировать(СтруктураОтбора);
					
			ДоходыПоВидам.Колонки.Добавить("КодДоходаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4)));
			ДоходыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
			ДоходыПоВидам.Сортировать("МесяцНалоговогоПериода, КодДохода, СуммаДохода Убыв, КодВычета");
			ПредыдущийМесяц = -1;
			ПредыдущийКодДохода = "";
			Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
				Если ПредыдущийМесяц <> СтрокаТЗ.МесяцНалоговогоПериода Или ПредыдущийКодДохода <> СтрокаТЗ.КодДохода Тогда
					СтрокаТЗ.КодДоходаСтрокой = СоответствиеКодовДоходов[СтрокаТЗ.КодДохода];
					ПредыдущийМесяц = СтрокаТЗ.МесяцНалоговогоПериода;
					ПредыдущийКодДохода = СтрокаТЗ.КодДохода;
				Иначе
					СтрокаТЗ.МесяцНалоговогоПериода = 0;
				КонецЕсли;
				СтрокаТЗ.КодВычетаСтрокой = СоответствиеКодовВычетов[СтрокаТЗ.КодВычета];
			КонецЦикла;
			ВычетыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
			Для каждого СтрокаТЗ Из ВычетыПоВидам Цикл
				СтрокаТЗ.КодВычетаСтрокой = СоответствиеКодовВычетов[СтрокаТЗ.КодВычета];
			КонецЦикла;
			
			Если ТабДокумент.ВысотаТаблицы > 0 Тогда  // Если справок несколько - разобьем на отдельные страницы.
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			// Заполнение данных в параметрах макета.
			
			ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(СтрокаДанных);  // Раздел 2
			ОбластьМакетаШапкаПервойСтраницы.Параметры.Статус = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
			ОбластьМакетаШапкаПервойСтраницы.Параметры.Гражданство = СоответствиеКодовСтран[СтрокаДанных.Гражданство];
			ОбластьМакетаШапкаПервойСтраницы.Параметры.КодУдЛичн = СоответствиеДокументовУдостоверяющихЛичность[СтрокаДанных.ВидДокумента];
			
			Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
				СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
						СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
				ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(СтруктураАдреса);  
				Если СтруктураАдреса.Свойство("Регион") Тогда
					КодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
					Если КодРегиона <> Неопределено Тогда
						КодРегионаСтрокой = "";
						Если ТипЗнч(КодРегиона) = Тип("Число") Тогда
							КодРегионаСтрокой = Формат(КодРегиона, "ЧЦ=2; ЧВН=; ЧГ=");		
						ИначеЕсли ТипЗнч(КодРегиона) = Тип("Строка") Тогда 	
							КодРегионаСтрокой = КодРегиона;	
						КонецЕсли;	
					КонецЕсли;	
				
					ОбластьМакетаШапкаПервойСтраницы.Параметры.КодРегиона = КодРегионаСтрокой;
				КонецЕсли;	
			Иначе // очищаем адресные данные
				ОбластьМакетаШапкаПервойСтраницы.Параметры.Заполнить(ПустаяСтруктураАдреса);  
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
				СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
						СтрокаДанных.АдресЗаРубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
				ОбластьМакетаШапкаПервойСтраницы.Параметры.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
				ОбластьМакетаШапкаПервойСтраницы.Параметры.АдрТекст = СтруктураАдреса.Представление;
			Иначе // очищаем адресные данные
				ОбластьМакетаШапкаПервойСтраницы.Параметры.КодСтр = "";
				ОбластьМакетаШапкаПервойСтраницы.Параметры.АдрТекст = "";
			КонецЕсли;
			
			ОбластьМакетаПодвалРаздела4.Параметры.Заполнить(СтрокаДанных); // Реквизиты Уведомления об имущ.вычете Раздела 4.
			
			// Вывод подготовленной справки в табличный документ.
			
			ТабДокумент.Вывести(ОбластьМакетаШапкаПервойСтраницы);
			
			ПерваяСтавка = Истина;
			ОбластьМакетаШапкаВторойСтраницы.Параметры.НомерСтраницы = 1;
			ВыведеноИтогов = 0;
			
			Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
				Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
					Продолжить;
				КонецЕсли;	
				
				ВыведеноИтогов = ВыведеноИтогов + 1;
				
				ВременныйТабДокумент.Очистить();
				
				// Раздел 3
				
				ОбластьМакетаЗаголовокРаздела3.Параметры.Ставка = СтавкаНДФЛ;
		
				ВременныйТабДокумент.Вывести(ОбластьМакетаЗаголовокРаздела3);
				
				ДоходыПоСтавке = СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, ДанныеТекущегоДокумента.НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				Если ДоходыПоСтавке.Количество() = 0 Тогда
					ВременныйТабДокумент.Вывести(ОбластьМакетаСтрокаДоходов);
				Иначе
					ВывестиТабличныеДанные(ДоходыПоСтавке, ВременныйТабДокумент, ОбластиМакетаДляДоходов, 1, 2, "КодДоходаСтрокой");
				КонецЕсли;
				ВывестиРазделВСправку(ТабДокумент, ВременныйТабДокумент, Ложь, ОбластьМакетаНалоговыйАгент, ОбластьМакетаПримечание, ОбластьМакетаШапкаВторойСтраницы);
				
				// Раздел 4
				Если ПерваяСтавка Тогда
				
					ВременныйТабДокумент.Очистить();
					
					ВременныйТабДокумент.Вывести(ОбластьМакетаЗаголовокРаздела4);
					ВычетыПоВидам.Сортировать("КодВычета");
					Если ВычетыПоВидам.Количество() = 0 Или СтавкаНДФЛ <> Перечисления.НДФЛСтавки.Ставка13 Тогда
						ВременныйТабДокумент.Вывести(ОбластьМакетаСтрокаВычетов);
					Иначе
						ВывестиТабличныеДанные(ВычетыПоВидам, ВременныйТабДокумент, ОбластиМакетаДляВычетов, 1, 4);
					КонецЕсли;
					
					ВременныйТабДокумент.Вывести(ОбластьМакетаПодвалРаздела4);
					ВывестиРазделВСправку(ТабДокумент, ВременныйТабДокумент, Ложь, ОбластьМакетаНалоговыйАгент, ОбластьМакетаПримечание, ОбластьМакетаШапкаВторойСтраницы);
					
					ПерваяСтавка = Ложь;
					
				КонецЕсли;
				
				// Раздел 5
				ВременныйТабДокумент.Очистить();
				
				ОбластьМакетаРаздел5.Параметры.Ставка = СтавкаНДФЛ;
				
				ОбластьМакетаРаздел5.Параметры.ОбщаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ); 
				ОбластьМакетаРаздел5.Параметры.ОблагаемаяСуммаДохода = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.Исчислено = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.Удержано = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
		  		ОбластьМакетаРаздел5.Параметры.Перечислено = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.Задолженность = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
				ОбластьМакетаРаздел5.Параметры.ИзлишнеУдержано = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);

				ВременныйТабДокумент.Вывести(ОбластьМакетаРаздел5);
				ВывестиРазделВСправку(ТабДокумент, ВременныйТабДокумент, ВыведеноИтогов = ВсегоИтогов, ОбластьМакетаНалоговыйАгент, ОбластьМакетаПримечание, ОбластьМакетаШапкаВторойСтраницы);
				
			КонецЦикла;
			
			ТабДокумент.Вывести(ОбластьМакетаНалоговыйАгент);
			ТабДокумент.Вывести(ОбластьМакетаПримечание);
			
		КонецЦикла;
		
	КонецЦикла;	
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДокумент;

КонецФункции

Процедура ВывестиРазделВСправку(ТабДокумент, Раздел, ЭтоПоследнийРаздел, ОбластьНалоговыйАгент, ОбластьПримечание, ШапкаВторойСтраницы)
	
	ВыводимыеОбласти = Новый Массив;
	ВыводимыеОбласти.Добавить(Раздел);
	ВыводимыеОбласти.Добавить(ОбластьНалоговыйАгент);
	
	ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
	Если Не ВывестиПодвалЛиста И ЭтоПоследнийРаздел Тогда
		ВыводимыеОбласти.Добавить(ОбластьПримечание);
		ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
	КонецЕсли;
	Если ВывестиПодвалЛиста Тогда
		ТабДокумент.Вывести(ОбластьНалоговыйАгент);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ШапкаВторойСтраницы.Параметры.НомерСтраницы = ШапкаВторойСтраницы.Параметры.НомерСтраницы + 1;
		ТабДокумент.Вывести(ШапкаВторойСтраницы);
	КонецЕсли;
	
	ТабДокумент.Вывести(Раздел);
	
КонецПроцедуры

Процедура ВывестиТабличныеДанные(МассивСтрок, ДокументРезультат, ОбластиМакета, Знач МинимумСтрок, КоличествоКолонок = 2, ПроверяемоеПоле = "")

	ВсегоСтрок = МассивСтрок.Количество();
	
	Для каждого Область Из ОбластиМакета Цикл
		ОчиститьПараметрыОбластиТабличногоДокумента(Область);
	КонецЦикла;
	
	ЛеваяЧастьМакета = ОбластиМакета[0];
	
	// Вычислим высоту таблицы
	ВысотаТаблицы = ?(ВсегоСтрок < МинимумСтрок, ВсегоСтрок, ?(ВсегоСтрок > МинимумСтрок * КоличествоКолонок, ?(Цел(ВсегоСтрок / КоличествоКолонок) - ВсегоСтрок / КоличествоКолонок = 0, ВсегоСтрок / КоличествоКолонок, Цел(ВсегоСтрок / КоличествоКолонок) + 1), МинимумСтрок));
	
	// Иногда строки доходов не надо переносить в правый столбец печ.формы.
	Если КоличествоКолонок = 2 И ЗначениеЗаполнено(ПроверяемоеПоле) И ВсегоСтрок > ВысотаТаблицы Тогда
		ПерваяСтрокаВторойКолонки = ВысотаТаблицы + 1;
		Для Сч = ПерваяСтрокаВторойКолонки По ВсегоСтрок Цикл
			Если ЗначениеЗаполнено(МассивСтрок[Сч - 1][ПроверяемоеПоле]) Тогда
				Прервать;
			Иначе
				ВысотаТаблицы = ВысотаТаблицы + 1
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Сч = 1 По ВысотаТаблицы Цикл
		
		// перенесем данные
		ЛеваяЧастьМакета.Параметры.Заполнить(МассивСтрок[Сч - 1]);
		Если ВсегоСтрок > МинимумСтрок Тогда  // правая часть
			Для СчКолонок = 2 По КоличествоКолонок Цикл
				Если ВысотаТаблицы * (СчКолонок - 1) + Сч <= ВсегоСтрок Тогда
					ОбластиМакета[СчКолонок - 1].Параметры.Заполнить(МассивСтрок[ВысотаТаблицы * (СчКолонок - 1) + Сч - 1]);
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		// выведем области макета
		ДокументРезультат.Вывести(ЛеваяЧастьМакета);	
		Для СчКолонок = 2 По КоличествоКолонок Цикл
			ДокументРезультат.Присоединить(ОбластиМакета.Получить(СчКолонок - 1));	
		КонецЦикла;
		
		Для каждого Область Из ОбластиМакета Цикл
			ОчиститьПараметрыОбластиТабличногоДокумента(Область);
		КонецЦикла;
		
	КонецЦикла;
	
	// Довыведем пустые строки раздела.
	Если ВысотаТаблицы < МинимумСтрок Тогда
		Для Сч = ВысотаТаблицы + 1 По МинимумСтрок Цикл
			ДокументРезультат.Вывести(ЛеваяЧастьМакета);	
			Для СчКолонок = 2 По КоличествоКолонок Цикл
				ДокументРезультат.Присоединить(ОбластиМакета[СчКолонок - 1]);	
			КонецЦикла; 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьПараметрыОбластиТабличногоДокумента(Область) Экспорт
	
	Для Параметр = 0 По Область.Параметры.Количество() -1 Цикл
		Область.Параметры[Параметр] = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Функция СправкиНДФЛИзвлечьДоходыПоСтавке(Ставка, НалоговыйПериод, СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов) Экспорт
	
	ТаблицаПодходящихДоходов = ДоходыПоВидам.СкопироватьКолонки();

	Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
		
		СтавкаНалогообложенияРезидента = СоответствиеСтавокДоходов[СтрокаТЗ.КодДохода];
		
		СтавкаДохода = СтавкаНДФЛ(СтавкаНалогообложенияРезидента, СтрокаТЗ.КодДохода, СтатусНалогоплательщика, НалоговыйПериод);
				
		Если СтавкаДохода = Ставка Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаПодходящихДоходов.Добавить(), СтрокаТЗ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат	ТаблицаПодходящихДоходов
	
КонецФункции

Функция РегистрацииВНалоговомОрганеПоОрганизации(Организация, НалоговыйПериод) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	0 КАК Приоритет
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК НДФЛСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО (Организации.Ссылка = &Организация)
	|			И (ВЫБОР
	|				КОГДА Организации.Ссылка = Организации.ГоловнаяОрганизация
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ НДФЛСведенияОДоходах.Организация = Организации.Ссылка
	|			КОНЕЦ)
	|			И НДФЛСведенияОДоходах.ГоловнаяОрганизация = Организации.ГоловнаяОрганизация
	|ГДЕ
	|	ГОД(НДФЛСведенияОДоходах.МесяцНалоговогоПериода) = &ГодНП
	|	И НДФЛСведенияОДоходах.СуммаДохода <> 0
	|	И НДФЛСведенияОДоходах.РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка,
	|	1
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка,
	|	1
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец.ГоловнаяОрганизация = &Организация
	|	И РегистрацииВНалоговомОргане.Владелец.ГоловнаяОрганизация <> РегистрацииВНалоговомОргане.Владелец.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
			
	Выборка = Запрос.Выполнить().Выбрать();

	РегистрацииВНалоговомОргане = Новый Массив;
		
	Пока Выборка.Следующий() Цикл 
		РегистрацииВНалоговомОргане.Добавить(Выборка.РегистрацияВНалоговомОргане);
	КонецЦикла;

	Возврат РегистрацииВНалоговомОргане;
КонецФункции

Функция СуммаОКАТОиКПП(КодПоОКАТО, КПП) Экспорт 

	Возврат СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КодПоОКАТО, 11, " ", "Справа") + "/" + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КПП, 9, " ", "Справа")

КонецФункции

Функция СуммаОКТМОиКПП(КодПоОКТМО, КПП) Экспорт 

	Возврат СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КодПоОКТМО, 11, " ", "Справа") + "/" + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(КПП, 9, " ", "Справа")

КонецФункции

Функция ОписаниеДоходовОрганизации(Организация, НалоговыйПериод, ДатаПодачиСведений, ФизическоеЛицо = Неопределено, ДляНалогаНаПрибыль = Ложь, НеВключатьДоходыПоЦеннымБумагам = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	Если ФизическоеЛицо = Неопределено Тогда
		УсловиеФизическоеЛицо = "ИСТИНА";
	Иначе
		УсловиеФизическоеЛицо = "НДФЛСведенияОДоходах.ФизическоеЛицо = &ФизическоеЛицо";
	КонецЕсли;	
	Если ДляНалогаНаПрибыль = Истина Тогда
		УсловиеКодДохода = "НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль";
	ИначеЕсли НеВключатьДоходыПоЦеннымБумагам = Истина Тогда
		УсловиеКодДохода = "НЕ НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль";
	Иначе
		УсловиеКодДохода = "ИСТИНА";
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация" ,Организация);
	Запрос.УстановитьПараметр("ГодНП", НалоговыйПериод);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("ДатаПодачиСведений",?(ДатаПодачиСведений = '00010101', ТекущаяДатаСеанса(), ДатаПодачиСведений));
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК НДФЛСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО (Организации.Ссылка = &Организация)
	|			И (ВЫБОР
	|				КОГДА Организации.Ссылка = Организации.ГоловнаяОрганизация
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ НДФЛСведенияОДоходах.Организация = Организации.Ссылка
	|			КОНЕЦ)
	|			И НДФЛСведенияОДоходах.ГоловнаяОрганизация = Организации.ГоловнаяОрганизация
	|ГДЕ
	|	ГОД(НДФЛСведенияОДоходах.МесяцНалоговогоПериода) = &ГодНП
	|	И НДФЛСведенияОДоходах.Период < &ДатаПодачиСведений
	|	И НДФЛСведенияОДоходах.СуммаДохода <> 0
	|	И &УсловиеКодДохода
	|	И &УсловиеФизическоеЛицо";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", УсловиеФизическоеЛицо);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКодДохода", УсловиеКодДохода);
	
	Выборка = Запрос.Выполнить().Выбрать();

	ОписаниеДоходов = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.РегистрацияВНалоговомОргане) Тогда
			ОписаниеДоходов.Вставить(Выборка.РегистрацияВНалоговомОргане, Истина);	
		Иначе
			ОписаниеДоходов.Вставить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат ОписаниеДоходов;
	
КонецФункции 

Функция ПолучитьСтруктуруПроверяемыхДанныхФизическихЛиц() Экспорт
	Возврат Новый Структура("ИНН, Адрес, Фамилия, Имя, ДатаРождения, АдресЗарубежом, СтатусНалогоплательщика, Гражданство");	
КонецФункции	

Функция ПолучитьПредставлениеПроверяемыхРеквизитовФизическихЛиц() Экспорт 
	ПредставленияПроверяемыхРеквизитов = Новый Структура;
	
	ПредставленияПроверяемыхРеквизитов.Вставить("ИНН", НСтр("ru = 'не заполнен ИНН'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Адрес", НСтр("ru = 'не заполнен адрес'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Фамилия", НСтр("ru = 'не указана фамилия'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Имя", НСтр("ru = 'не указано имя'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("ДатаРождения",   НСтр("ru = 'не заполнена дата рождения'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("ВидДокумента", НСтр("ru = 'не указан вид документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("СерияДокумента", НСтр("ru = 'не заполнена серия документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("НомерДокумента", НСтр("ru = 'не заполнен номер документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("ДатаВыдачи", НСтр("ru = 'не заполнена дата выдачи документа'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("КемВыдан", НСтр("ru = 'не указано кем выдан документ'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("СтатусНалогоплательщика",  НСтр("ru = 'не указан статус налогоплательщика'"));
	ПредставленияПроверяемыхРеквизитов.Вставить("Гражданство",  НСтр("ru = 'не указано гражданство'"));
	
	Возврат ПредставленияПроверяемыхРеквизитов;
	
КонецФункции	

Функция ПолучитьСоответствиеРеквизитовФормеОбъекта() Экспорт 
	СоответствиеРеквизитовФормеОбъекта = Новый Структура;
	СоответствиеРеквизитовФормеОбъекта.Вставить("Фамилия", "Наименование");
	СоответствиеРеквизитовФормеОбъекта.Вставить("Имя", "Наименование");
	СоответствиеРеквизитовФормеОбъекта.Вставить("ДатаРождения", "ДатаРождения");
	СоответствиеРеквизитовФормеОбъекта.Вставить("Адрес",  "");
	СоответствиеРеквизитовФормеОбъекта.Вставить("ВидДокумента", "ВидДокумента");
	СоответствиеРеквизитовФормеОбъекта.Вставить("СерияДокумента", "Серия");
	СоответствиеРеквизитовФормеОбъекта.Вставить("НомерДокумента", "Номер");
	СоответствиеРеквизитовФормеОбъекта.Вставить("ИНН", "ИНН");
	СоответствиеРеквизитовФормеОбъекта.Вставить("Гражданство", "ГражданствоФизическихЛицСтрана");
	СоответствиеРеквизитовФормеОбъекта.Вставить("СтатусНалогоплательщика",  ""); 
		
	Возврат СоответствиеРеквизитовФормеОбъекта;
КонецФункции	

Функция ПолучитьСоответствиеРеквизитовПутиВФормеОбъекта() Экспорт
	СоответствиеРеквизитовПутиВФормеОбъекта = Новый Структура;
	
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Фамилия", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Имя", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Пол",   "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ДатаРождения",   "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ВидДокумента", "ДокументыФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СерияДокумента", "ДокументыФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("НомерДокумента", "ДокументыФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("ИНН", "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Гражданство", "ГражданствоФизическихЛиц");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("Адрес",  "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("АдресЗаРубежом",  "");
	СоответствиеРеквизитовПутиВФормеОбъекта.Вставить("СтатусНалогоплательщика",  ""); 
	
	Возврат СоответствиеРеквизитовПутиВФормеОбъекта;
КонецФункции	

Функция КодыДоходовПоЦеннымБумагам(НалоговыйПериод) Экспорт
	
	Возврат УчетНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(НалоговыйПериод)
	
КонецФункции

#КонецОбласти

#Область КадровыеДанныеФизическихЛиц

// Возвращает подготовленный запрос, формирующий временную таблицу с указанным именем.
// Временная таблица содержит поля Период, ФизическоеЛицо, СтатусНалогоплательщика.
//
// Параметры:
//		ТолькоРазрешенные
//		ОписательВременнойТаблицыОтборов - Структура, см. КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц.
//		ПоляОтбораПериодическихДанных - Соответствие
//		ИмяВТСведенияОСтатусахНалогоплательщиков - Строка, имя временной таблицы, созданной в результате выполнения запроса.
//
// ВозвращаемоеЗначение:
//		Запрос
//
Функция ЗапросВТСведенияОСтатусахНалогоплательщиков(ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИмяВТСведенияОСтатусахНалогоплательщиков = "ВТСведенияОСтатусахНалогоплательщиков") Экспорт
	
	ИмяВТПредварительныеСведенияОСтатусахНалогоплательщиков = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТПредварительныеСведенияОСтатусахНалогоплательщиков");
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц,
		"Период,ФизическоеЛицо");
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("Период", ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("ФизическоеЛицо", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	
	ПоляОтбора = Неопределено;
	Если ПоляОтбораПериодическихДанных <> Неопределено Тогда
		ПоляОтбораПериодическихДанных.Свойство("СтатусФизическихЛицКакНалогоплательщиковНДФЛ", ПоляОтбора);
	КонецЕсли;
	 
	ПараметрыПостроения.Отборы = ПоляОтбора;
	
	ЗапросВТИмяРегистраСрез = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТИмяРегистраСрез(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		ТолькоРазрешенные,
		ОписаниеФильтра,
		ПараметрыПостроения,
		Истина,
		ИмяВТПредварительныеСведенияОСтатусахНалогоплательщиков);
	 
	ТекстЗапросаДанных =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаОтборовФизическихЛиц.Период КАК Период,
		|	ТаблицаОтборовФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ТаблицаОтборовФизическихЛиц.Период < ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
		|				И ПредварительныеСведенияОСтатусахНалогоплательщиков.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|		ИНАЧЕ ЕСТЬNULL(ПредварительныеСведенияОСтатусахНалогоплательщиков.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|	КОНЕЦ КАК СтатусНалогоплательщика
		|ПОМЕСТИТЬ ВТСведенияОСтатусахНалогоплательщиков
		|ИЗ
		|	ВТОтборовФизическихЛиц КАК ТаблицаОтборовФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительныеСведенияОСтатусахНалогоплательщиков КАК ПредварительныеСведенияОСтатусахНалогоплательщиков
		|		ПО ТаблицаОтборовФизическихЛиц.Период = ПредварительныеСведенияОСтатусахНалогоплательщиков.Период
		|			И ТаблицаОтборовФизическихЛиц.ФизическоеЛицо = ПредварительныеСведенияОСтатусахНалогоплательщиков.ФизическоеЛицо";
		
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТОтборовФизическихЛиц", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.Период", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.ФизическоеЛицо", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТПредварительныеСведенияОСтатусахНалогоплательщиков", ИмяВТПредварительныеСведенияОСтатусахНалогоплательщиков);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(ТекстЗапросаДанных, "ВТСведенияОСтатусахНалогоплательщиков", ИмяВТСведенияОСтатусахНалогоплательщиков);
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаДанных, ТолькоРазрешенные);
	
	ЗапросВТИмяРегистраСрез.Текст = 
		ЗапросВТИмяРегистраСрез.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+ ТекстЗапросаДанных;
	
	Возврат ЗапросВТИмяРегистраСрез;
	
КонецФункции

#КонецОбласти

