////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в учете
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает таблицу значений с данными для отражения в учете удержаний.
//
Функция ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	// Создание таблицы значений с нужной структурой.
	ТаблицаУдержаннаяЗарплата = НоваяТаблицаУдержаннаяЗарплата();
	
	Если РезультатыРасчетаЗарплаты <> Неопределено Тогда
		НачисленияУдержания = РезультатыРасчетаЗарплаты.НачисленияУдержания;
		Если НачисленияУдержания = Неопределено Тогда
			// Переданы результаты расчета, но данные по удержаниям не определены.
			Возврат ТаблицаУдержаннаяЗарплата;
		КонецЕсли;
	Иначе
		НачисленияУдержания = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТаблицуУдержаннаяЗарплата(ТаблицаУдержаннаяЗарплата, ПериодРегистрации, Организация, НачисленияУдержания);

	Возврат ТаблицаУдержаннаяЗарплата;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	// Создание таблицы значений с нужной структурой.
	ТаблицаНДФЛ = НоваяТаблицаНДФЛ();
	
	Если РезультатыРасчетаЗарплаты <> Неопределено Тогда
		НачисленияУдержания = РезультатыРасчетаЗарплаты.НачисленияУдержания;
		Если НачисленияУдержания = Неопределено Тогда
			// Переданы результаты расчета, но данные по НДФЛ не определены.
			Возврат ТаблицаНДФЛ;
		КонецЕсли;
	Иначе
		НачисленияУдержания = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТаблицуНДФЛ(ТаблицаНДФЛ, ПериодРегистрации, Организация, НачисленияУдержания);

	Возврат ТаблицаНДФЛ;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	// Создание таблицы значений с нужной структурой.
	ТаблицаНачислений = НоваяТаблицаНачислений();
	
	Если РезультатыРасчетаЗарплаты <> Неопределено Тогда
		НачисленияУдержания = РезультатыРасчетаЗарплаты.НачисленияУдержания;
		Если НачисленияУдержания = Неопределено Тогда
			// Переданы результаты расчета, но данные по начислениям не определены.
			Возврат ТаблицаНачислений;	
		КонецЕсли;
	Иначе
		НачисленияУдержания = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТаблицуНачислений(ТаблицаНачислений, ПериодРегистрации, Организация, НачисленияУдержания);

	Возврат ТаблицаНачислений;

КонецФункции

Функция ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	// Создание таблицы значений с нужной структурой.
	ТаблицаВзносов = НоваяТаблицаСтраховыеВзносы();
	
	Если РезультатыРасчетаЗарплаты <> Неопределено Тогда
		СтраховыеВзносы = РезультатыРасчетаЗарплаты.СтраховыеВзносы;
		Если СтраховыеВзносы = Неопределено Тогда
			// Переданы результаты расчета, но данные по взносам не определены.
			Возврат ТаблицаВзносов;
		КонецЕсли;
	Иначе
		СтраховыеВзносы = Неопределено;
	КонецЕсли;
	
	ЗаполнитьДанныеВзносов(ТаблицаВзносов, ПериодРегистрации, Организация, СтраховыеВзносы);

	Возврат ТаблицаВзносов;

КонецФункции 

// Функция формирует структуру с данными отражения зарплаты в учете.
//
// Параметры:
//  ПериодРегистрации - тип дата, первое число месяца.
//  Организация, тип СправочникСсылка.Организации.
//  РезультатыРасчетаЗарплаты - Структура, ключ - имя регистра, значение - таблица значений с движениями документа
//						это источник данных, если Неопределено, тогда источник данных - движения регистров.
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам разделов данных.
//			Значение - таблица значений.
//
Функция ДанныеДляОтраженияЗарплатыВУчете(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	ТаблицаНачислений = ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ТаблицаВзносов    = ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ТаблицаНачисленныйНДФЛ    = ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ТаблицаУдержаннаяЗарплата = ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
				
	ДанныеДляОтражения = Новый Структура;
	ДанныеДляОтражения.Вставить("Начисления", ТаблицаНачислений);
	ДанныеДляОтражения.Вставить("СтраховыеВзносы", ТаблицаВзносов);
	ДанныеДляОтражения.Вставить("НДФЛ", ТаблицаНачисленныйНДФЛ);
	ДанныеДляОтражения.Вставить("Удержания", ТаблицаУдержаннаяЗарплата);
	
	Возврат ДанныеДляОтражения;
	
КонецФункции

Процедура СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОсобыхНачислений.Ссылка КАК НачислениеУдержание,
	|	ВидыОперацийПоЗарплате.Ссылка КАК ВидОперации
	|ПОМЕСТИТЬ ВТНачислениеУдержаниеВидОперации
	|ИЗ
	|	Перечисление.ВидыОсобыхНачисленийИУдержаний КАК ВидыОсобыхНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.ВидыОперацийПоЗарплате КАК ВидыОперацийПоЗарплате
	|		ПО (ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорРаботыУслуги)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоговорАвторскогоЗаказа)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.Дивиденды)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.Дивиденды)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДивидендыСотрудников)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДивидендыСотрудников)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛ)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НФДЛДивиденды)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НФДЛДивидендыСотрудникам)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛДоначисленныйПоРезультатамПроверки)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛДоначисленныйПоРезультатамПроверки)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛПередачаЗадолженностиВНалоговыйОрган)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛПередачаЗадолженностиВНалоговыйОрган)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛПрочиеРасчетыСПерсоналом)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛПрочиеРасчетыСПерсоналом)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛДоходыКонтрагентов)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛРасчетыСБывшимиСотрудниками)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛРасчетыСБывшимиСотрудниками)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПогашениеЗаймаИзЗарплаты)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПогашениеЗаймов)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПроцентыПоЗайму)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПроцентыПоЗайму)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НатуральныйДоход)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоПроцентовПоЗайму)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.МатериальнаяПомощь)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.МатериальнаяПомощь)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДСВРаботодателя)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДСВ)
	|				ИЛИ ВидыОсобыхНачислений.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.КомпенсацияЗаЗадержкуЗарплаты)
	|					И ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокНачислений.Ссылка,
	|	СписокНачислений.ВидОперацииПоЗарплате
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК СписокНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Удержания.Ссылка,
	|	Удержания.ВидОперацииПоЗарплате
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания";
	
	Запрос.Выполнить();
	
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);

КонецПроцедуры

Функция НачислениеУдержаниеВидОперации() Экспорт

	НачислениеУдержаниеВидОперации = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТНачислениеУдержаниеВидОперации(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеУдержаниеВидОперации.НачислениеУдержание,
	|	НачислениеУдержаниеВидОперации.ВидОперации
	|ИЗ
	|	ВТНачислениеУдержаниеВидОперации КАК НачислениеУдержаниеВидОперации";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НачислениеУдержаниеВидОперации.Вставить(Выборка.НачислениеУдержание, Выборка.ВидОперации);
	КонецЦикла;

	Возврат НачислениеУдержаниеВидОперации;

КонецФункции

Функция ВидыОсобыхНачисленийИУдержанийНДФЛ(ТолькоОтражаемыеВБухучете = Ложь) Экспорт

	НДФЛ = Новый Массив;
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛДоначисленныйПоРезультатамПроверки);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛПередачаЗадолженностиВНалоговыйОрган);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛПрочиеРасчетыСПерсоналом);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛДоходыКонтрагентов);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛРасчетыСБывшимиСотрудниками);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НФДЛДивиденды);
	НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НФДЛДивидендыСотрудникам);
	
	Если Не ТолькоОтражаемыеВБухучете Тогда
		НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛКЗачету);
		НДФЛ.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛЗачтено);
	КонецЕсли;
		
	Возврат НДФЛ;

КонецФункции

Процедура ДобавитьКолонкуИдентификаторСтроки(Таблица, ЗаполнитьИдентификаторСтроки = Ложь, НомерПервойСтроки = 1) Экспорт

	Если Таблица.Колонки.Найти("ИдентификаторСтроки") = Неопределено Тогда
		Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
		ЗаполнитьКолонкуИдентификаторСтроки(Таблица, НомерПервойСтроки);
	ИначеЕсли ЗаполнитьИдентификаторСтроки Тогда
		// Колонка есть, установим новые идентификаторы строк.
		ЗаполнитьКолонкуИдентификаторСтроки(Таблица, НомерПервойСтроки);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьКолонкуИдентификаторСтроки(Таблица, НомерПервойСтроки = 1) Экспорт

	ИдентификаторСтроки = НомерПервойСтроки;
	Для каждого Строка Из Таблица Цикл
		Строка.ИдентификаторСтроки = ИдентификаторСтроки;
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет таблицу значений ТаблицаУдержаннаяЗарплата.
Процедура ЗаполнитьТаблицуУдержаннаяЗарплата(ТаблицаУдержаннаяЗарплата, ПериодРегистрации, Организация, НачисленияУдержания) 
	
	ЕстьДанныеПоУдержаниям = НачисленияУдержания <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Получим массив видов особых начислений удержаний, относящихся к НДФЛ.
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ВидыОсобыхНачисленийИУдержанийНДФЛ();
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	// Создание таблицы ВТУдержанияПоСотрудникам.
	Если ЕстьДанныеПоУдержаниям Тогда
		
		ДобавитьКолонкуИдентификаторСтроки(НачисленияУдержания);
		Запрос.УстановитьПараметр("НачисленияУдержания", НачисленияУдержания);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.Сумма,
		|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты,
		|	НачисленияУдержания.Период,
		|	НачисленияУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.Контрагент
		|ПОМЕСТИТЬ ВТНачисленияУдержания
		|ИЗ
		|	&НачисленияУдержания КАК НачисленияУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Удержания.Организация КАК Организация,
		|	Удержания.Сотрудник КАК Сотрудник,
		|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Удержания.Подразделение КАК Подразделение,
		|	Удержания.НачислениеУдержание КАК Удержание,
		|	НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	Удержания.Период КАК Период,
		|	Удержания.ДокументОснование,
		|	Удержания.Контрагент,
		|	Удержания.ИдентификаторСтроки,
		|	Удержания.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТУдержанияПоСотрудникам
		|ИЗ
		|	ВТНачисленияУдержания КАК Удержания
		|ГДЕ
		|	Удержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
		|	И НЕ Удержания.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация,
		|	УдержанияПоСотрудникам.Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание,
		|	НАЧАЛОПЕРИОДА(УдержанияПоСотрудникам.Период, МЕСЯЦ),
		|	УдержанияПоСотрудникам.Период,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.Контрагент,
		|	УдержанияПоСотрудникам.ИдентификаторСтроки,
		|	УдержанияПоСотрудникам.Сумма
		|ИЗ
		|	ВТНачисленияУдержания КАК УдержанияПоСотрудникам
		|ГДЕ
		|	УдержанияПоСотрудникам.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияУдержания";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация КАК Организация,
		|	УдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение КАК Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание КАК Удержание,
		|	УдержанияПоСотрудникам.Сумма КАК Сумма,
		|	НАЧАЛОПЕРИОДА(УдержанияПоСотрудникам.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	УдержанияПоСотрудникам.Период КАК Период,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.Контрагент,
		|	0 КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТУдержанияПоСотрудникам
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК УдержанияПоСотрудникам
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(УдержанияПоСотрудникам.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И (&ПоВсемОрганизациям
		|			ИЛИ УдержанияПоСотрудникам.Организация = &Организация)
		|	И УдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
		|	И НЕ УдержанияПоСотрудникам.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация,
		|	УдержанияПоСотрудникам.Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание,
		|	УдержанияПоСотрудникам.Сумма,
		|	НАЧАЛОПЕРИОДА(УдержанияПоСотрудникам.Период, МЕСЯЦ),
		|	УдержанияПоСотрудникам.Период,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.Контрагент,
		|	0
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК УдержанияПоСотрудникам
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(УдержанияПоСотрудникам.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И (&ПоВсемОрганизациям
		|			ИЛИ УдержанияПоСотрудникам.Организация = &Организация)
		|	И УдержанияПоСотрудникам.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму)";

		Запрос.Выполнить();
		
	КонецЕсли;
	
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	ОтражениеЗарплатыВУчетеВнутренний.СоздатьВТУдержанияПоСотрудникамКонтрагент(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Удержания.Организация КАК Организация,
	|	Удержания.Сотрудник,
	|	Удержания.ФизическоеЛицо,
	|	Удержания.Подразделение,
	|	Удержания.ИдентификаторСтроки,
	|	ЕСТЬNULL(УдержанияПоСотрудникамКонтрагент.Контрагент, Удержания.Контрагент) КАК Контрагент,
	|	ЕСТЬNULL(УдержаниеВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	Удержания.Сумма КАК Сумма
	|ИЗ
	|	ВТУдержанияПоСотрудникам КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК УдержаниеВидОперации
	|		ПО Удержания.Удержание = УдержаниеВидОперации.НачислениеУдержание
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержанияПоСотрудникамКонтрагент КАК УдержанияПоСотрудникамКонтрагент
	|		ПО Удержания.ДокументОснование = УдержанияПоСотрудникамКонтрагент.ДокументОснование
	|			И Удержания.ФизическоеЛицо = УдержанияПоСотрудникамКонтрагент.ФизическоеЛицо
	|			И Удержания.Удержание = УдержанияПоСотрудникамКонтрагент.Удержание
	|			И (Удержания.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если НЕ ЕстьДанныеПоУдержаниям Тогда
		ЗаполнитьКолонкуИдентификаторСтроки(Результат);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаУдержаннаяЗарплата);
	
КонецПроцедуры

// Процедура заполняет таблицу значений ТаблицаНДФЛ.
Процедура ЗаполнитьТаблицуНДФЛ(ТаблицаНДФЛ, ПериодРегистрации, Организация, НачисленияУдержания)

	ЕстьДанныеПоНДФЛ = НачисленияУдержания <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Получим массив видов особых начислений удержаний, относящихся к НДФЛ.
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ВидыОсобыхНачисленийИУдержанийНДФЛ(Истина);
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	// Создадим временную таблицу с соответствием видов особых начислений удержаний видам операций по зарплате.
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	Если ЕстьДанныеПоНДФЛ Тогда
		
		ДобавитьКолонкуИдентификаторСтроки(НачисленияУдержания);
		Запрос.УстановитьПараметр("НачисленияУдержания", НачисленияУдержания);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.Сумма,
		|	НачисленияУдержания.ИдентификаторСтроки,
		|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты,
		|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации
		|ПОМЕСТИТЬ ВТНачисленияУдержания
		|ИЗ
		|	&НачисленияУдержания КАК НачисленияУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияУдержания.Организация КАК Организация,
		|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияУдержания.Подразделение КАК Подразделение,
		|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
		|	НачисленияУдержания.Сумма КАК Сумма,
		|	НачисленияУдержания.ИдентификаторСтроки,
		|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации
		|ПОМЕСТИТЬ ВТТаблицаНДФЛ
		|ИЗ
		|	ВТНачисленияУдержания КАК НачисленияУдержания
		|ГДЕ
		|	НачисленияУдержания.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияУдержания";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержания.Организация КАК Организация,
		|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияУдержания.Подразделение КАК Подразделение,
		|	НачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
		|	НачисленияУдержания.Сумма КАК Сумма,
		|	НачисленияУдержания.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	0 КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТТаблицаНДФЛ
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ НачисленияУдержания.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(НачисленияУдержания.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И НачисленияУдержания.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)";
		Запрос.Выполнить();
		
		ОтражениеЗарплатыВУчетеВнутренний.ДополнитьТаблицуНДФЛ(ПериодРегистрации, Организация, МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Организация,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.Сумма КАК Сумма,
	|	ТаблицаНДФЛ.ТерриторияВыполненияРаботВОрганизации,
	|	ТаблицаНДФЛ.ИдентификаторСтроки,
	|	ЕСТЬNULL(ВидыОсобыхУдержанийВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК ВидыОсобыхУдержанийВидОперации
	|		ПО ТаблицаНДФЛ.НачислениеУдержание = ВидыОсобыхУдержанийВидОперации.НачислениеУдержание
	|ГДЕ
	|	ТаблицаНДФЛ.Сумма <> 0";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если НЕ ЕстьДанныеПоНДФЛ Тогда
		ЗаполнитьКолонкуИдентификаторСтроки(Результат);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаНДФЛ);

КонецПроцедуры

Процедура ЗаполнитьТаблицуНачислений(ТаблицаНачислений, ПериодРегистрации, Организация, НачисленияУдержания)

	ЕстьДанныеПоНачислениям = НачисленияУдержания <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Если ЕстьДанныеПоНачислениям Тогда
		
		ДобавитьКолонкуИдентификаторСтроки(НачисленияУдержания);
		Запрос.УстановитьПараметр("НачисленияУдержания", НачисленияУдержания);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.ДатаНачала,
		|	НачисленияУдержания.ДатаОкончания,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	НачисленияУдержания.Сумма
		|ПОМЕСТИТЬ ВТНачисленияУдержания
		|ИЗ
		|	&НачисленияУдержания КАК НачисленияУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.ДатаНачала,
		|	НачисленияУдержания.ДатаОкончания,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.ИдентификаторСтроки,
		|	НачисленияУдержания.Сумма
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	ВТНачисленияУдержания КАК НачисленияУдержания
		|ГДЕ
		|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.ДатаНачала,
		|	НачисленияУдержания.ДатаОкончания,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.ИдентификаторСтроки,
		|	НачисленияУдержания.Сумма
		|ИЗ
		|	ВТНачисленияУдержания КАК НачисленияУдержания
		|ГДЕ
		|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
		|	И НачисленияУдержания.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.ДатаНачала,
		|	НачисленияУдержания.ДатаОкончания,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.ДокументОснование,
		|	НачисленияУдержания.ИдентификаторСтроки,
		|	НачисленияУдержания.Сумма
		|ИЗ
		|	ВТНачисленияУдержания КАК НачисленияУдержания
		|ГДЕ
		|	НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
		|	И НачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияУдержания";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.Организация,
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Подразделение,
		|	Начисления.ДатаНачала,
		|	Начисления.ДатаОкончания,
		|	Начисления.НачислениеУдержание,
		|	Начисления.ДокументОснование,
		|	0 КАК ИдентификаторСтроки,
		|	Начисления.Сумма
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Начисления
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ Начисления.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(Начисления.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И Начисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.ДатаНачала,
		|	НачисленияУдержания.ДатаОкончания,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.ДокументОснование,
		|	0,
		|	НачисленияУдержания.Сумма
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ НачисленияУдержания.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(НачисленияУдержания.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
		|	И НачисленияУдержания.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачисленияУдержания.Организация,
		|	НачисленияУдержания.Сотрудник,
		|	НачисленияУдержания.ФизическоеЛицо,
		|	НачисленияУдержания.Подразделение,
		|	НачисленияУдержания.ДатаНачала,
		|	НачисленияУдержания.ДатаОкончания,
		|	НачисленияУдержания.НачислениеУдержание,
		|	НачисленияУдержания.ДокументОснование,
		|	0,
		|	НачисленияУдержания.Сумма
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержания
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ НачисленияУдержания.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(НачисленияУдержания.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И НачисленияУдержания.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
		|	И НачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)";
		
		Запрос.Выполнить();
		
		ОтражениеЗарплатыВУчетеВнутренний.ДополнитьТаблицуНачислений(ПериодРегистрации, Организация, МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	Начисления.НачислениеУдержание КАК Начисление,
	|	Начисления.ДокументОснование,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.Сумма КАК Сумма
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
	|		ПО Начисления.НачислениеУдержание = НачисленияВидОперации.НачислениеУдержание";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если НЕ ЕстьДанныеПоНачислениям Тогда
		ЗаполнитьКолонкуИдентификаторСтроки(Результат);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаНачислений);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеВзносов(ТаблицаВзносов, ПериодРегистрации, Организация, СтраховыеВзносы)
	
	ЕстьДанныеПоВзносам = СтраховыеВзносы <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЕстьДанныеПоВзносам Тогда
		
		Запрос.УстановитьПараметр("СтраховыеВзносы", СтраховыеВзносы);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтраховыеВзносы.Организация,
		|	СтраховыеВзносы.ФизическоеЛицо,
		|	СтраховыеВзносы.Сотрудник,
		|	СтраховыеВзносы.Подразделение,
		|	СтраховыеВзносы.Начисление,
		|	НЕОПРЕДЕЛЕНО КАК ПоляВзносов,
		|	СтраховыеВзносы.ОблагаетсяЕНВД,
		|	СтраховыеВзносы.ДатаНачала
		|ПОМЕСТИТЬ ВТСтраховыеВзносы
		|ИЗ
		|	&СтраховыеВзносы КАК СтраховыеВзносы";
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "НЕОПРЕДЕЛЕНО КАК ПоляВзносов", УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина, "СтраховыеВзносы"));
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтраховыеВзносы.Организация,
		|	СтраховыеВзносы.ФизическоеЛицо,
		|	СтраховыеВзносы.Сотрудник,
		|	СтраховыеВзносы.Подразделение,
		|	СтраховыеВзносы.Начисление,
		|	СУММА(0) КАК ПоляВзносов,
		|	СтраховыеВзносы.ОблагаетсяЕНВД,
		|	СтраховыеВзносы.ДатаНачала
		|ПОМЕСТИТЬ ВТСтраховыеВзносы
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносы
		|ГДЕ
		|	СтраховыеВзносы.Организация = &Организация
		|	И НАЧАЛОПЕРИОДА(СтраховыеВзносы.Период, МЕСЯЦ) = &ПериодРегистрации
		|
		|СГРУППИРОВАТЬ ПО
		|	СтраховыеВзносы.Подразделение,
		|	СтраховыеВзносы.Сотрудник,
		|	СтраховыеВзносы.ФизическоеЛицо,
		|	СтраховыеВзносы.Организация,
		|	СтраховыеВзносы.ОблагаетсяЕНВД,
		|	СтраховыеВзносы.ДатаНачала,
		|	СтраховыеВзносы.Начисление";
		
		ТекстПолейВзносов = "";
		Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
			ТекстПолейВзносов = ТекстПолейВзносов + "СУММА(СтраховыеВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
		КонецЦикла;
		
		Если ПоВсемОрганизациям Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтраховыеВзносы.Организация = &Организация", "ИСТИНА")
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(0) КАК ПоляВзносов,", ТекстПолейВзносов);
		Запрос.Выполнить();
		
	КонецЕсли;
	
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ТФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФССНС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФСС);
	
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносы.Организация,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.ДатаНачала,
	|	ВидыОперацийПоЗарплате.Ссылка КАК ВидОперации,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА СтраховыеВзносы.ПФРПоСуммарномуТарифу
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРСтраховая
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРНакопительная
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА СтраховыеВзносы.ТФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА СтраховыеВзносы.ФФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА СтраховыеВзносы.ФСС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА СтраховыеВзносы.ФССНесчастныеСлучаи
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуЛетчикам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуШахтерам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма
	|ИЗ
	|	ВТСтраховыеВзносы КАК СтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыОперацийПоЗарплате КАК ВидыОперацийПоЗарплате
	|		ПО (ВидыОперацийПоЗарплате.Ссылка В (&ВидыОпераций))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.Организация,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.ДатаНачала,
	|	ВидыОперацийПоЗарплате.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА СтраховыеВзносы.ПФРПоСуммарномуТарифу
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРСтраховая
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА СтраховыеВзносы.ПФРНакопительная
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА СтраховыеВзносы.ТФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА СтраховыеВзносы.ФФОМС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА СтраховыеВзносы.ФСС
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА СтраховыеВзносы.ФССНесчастныеСлучаи
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуЛетчикам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА СтраховыеВзносы.ПФРНаДоплатуШахтерам
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
	|			КОГДА ВидыОперацийПоЗарплате.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) <> 0";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ДобавитьКолонкуИдентификаторСтроки(Результат);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаВзносов);
	
КонецПроцедуры

#Область ИнициализацияТаблицЗначений

Функция НоваяТаблицаНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;  
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторииВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаУдержаннаяЗарплата()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаНачислений() Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	МассивТиповДокументОснование = ОтражениеЗарплатыВУчетеВнутренний.ТипыПоляДокументОснование();
	
	Таблица = Новый ТаблицаЗначений;

	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТиповДокументОснование));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));

	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаСтраховыеВзносы() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТипов.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТипов);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТипов));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаСтраховыеВзносыБезВидаОперации() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТипов.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТипов);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТипов));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Таблица.Колонки.Добавить(ИмяПоля, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	КонецЦикла;
	
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяСтруктураРезультатыРасчетаЗарплаты() Экспорт

	РезультатыРасчетаЗарплаты = Новый Структура;
	РезультатыРасчетаЗарплаты.Вставить("НачисленияУдержания", Неопределено);
	РезультатыРасчетаЗарплаты.Вставить("СтраховыеВзносы", Неопределено);
	
	Возврат РезультатыРасчетаЗарплаты

КонецФункции

#КонецОбласти

#КонецОбласти
