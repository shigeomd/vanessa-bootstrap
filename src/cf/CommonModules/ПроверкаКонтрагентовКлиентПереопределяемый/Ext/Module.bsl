////////////////////////////////////////////////////////////////////////////////
// Открытие вспомогательных форм
//  
////////////////////////////////////////////////////////////////////////////////


#Область ПрограммныйИнтерфейс

Процедура ОпределитьПоИмениСобытияНеобходимостьПроверкиКонтрагентов(
		Форма, ИмяСобытия, Параметр, Источник, ТребуетсяПроверкаКонтрагентов) Экспорт
	
	ДокументОбъект 	= Форма.Объект;
	ДокументСсылка 	= ДокументОбъект.Ссылка;
	ТипДокумента 	= ТипЗнч(ДокументСсылка);
	
	Если (ТипДокумента = Тип("ДокументСсылка.СчетФактураВыданный")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.СчетФактураПолученный")) Тогда
		
		// В счетах-фактурах проверку выполняем только при записи контрагента
		ТребуетсяПроверкаКонтрагентов = ИмяСобытия = "Запись_Контрагенты";
		
	ИначеЕсли ИмяСобытия = "Запись_СчетФактураПолученный" 
		ИЛИ ИмяСобытия = "Запись_СчетФактураВыданный"
		ИЛИ ИмяСобытия = "Запись_СчетФактураВыданныйКорректировочный"
		ИЛИ ИмяСобытия = "Запись_СчетФактураПолученныйКорректировочный" Тогда
		
		// Проверяем только если в документе счет-фактура находится в подвале
		
		ТребуетсяПроверкаКонтрагентов = ПроверкаКонтрагентовКлиентСервер.ЭтоДокументСоСчетомФактуройВПодвале(Форма);
		
	ИначеЕсли ИмяСобытия = "Запись_Контрагенты" Тогда
		
		// При записи контрагента проверку делаем в любом случае
		ТребуетсяПроверкаКонтрагентов = Истина;
		
	Иначе
		
		ТребуетсяПроверкаКонтрагентов = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
