
#Область СлужебныйПрограммныйИнтерфейс

#Область ПанельПримененныеВычеты

// Возвращает максимальное значение идентификатора строки НДФЛ.
//
// Параметры:
//		ТаблицаНДФЛ - ДанныеФормыКоллекция
//
// Возвращаемое значение:
//		Число
//
Функция МаксимальныйИдентификаторСтрокиНДФЛ(ТаблицаНДФЛ) Экспорт
	
	МаксимальныйИдентификаторСтрокиНДФЛ = 0;
	
	Для каждого СтрокаТаблицыНДФЛ Из ТаблицаНДФЛ Цикл
		
		Если МаксимальныйИдентификаторСтрокиНДФЛ < СтрокаТаблицыНДФЛ.ИдентификаторСтрокиНДФЛ Тогда
			МаксимальныйИдентификаторСтрокиНДФЛ = СтрокаТаблицыНДФЛ.ИдентификаторСтрокиНДФЛ;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МаксимальныйИдентификаторСтрокиНДФЛ;
	
КонецФункции

// Назначает идентификаторы строкам таблицы значений НДФЛ и строкам связанной 
// таблицы значений ПримененныеВычетыНаДетейИИмущественные, перед добавление в
// коллекции строк табличных частей объектов.
//
// Параметры:
//		МаксимальныйИдентификаторСтрокиНДФЛ - Число
//		ТаблицаНДФЛ - ТаблицаЗначений
//		ПримененныеВычетыНаДетейИИмущественные - ТаблицаЗначений
//
Процедура НазначитьИдентификаторыНовымСтрокамТаблицамНДФЛИПримененныеВычетыНаДетейИИмущественные(МаксимальныйИдентификаторСтрокиНДФЛ, ТаблицаНДФЛ, ПримененныеВычетыНаДетейИИмущественные) Экспорт
	
	Для каждого СтрокаТаблицыНДФЛ Из ТаблицаНДФЛ Цикл
		СтрокаТаблицыНДФЛ.ИдентификаторСтрокиНДФЛ = СтрокаТаблицыНДФЛ.ИдентификаторСтрокиНДФЛ + МаксимальныйИдентификаторСтрокиНДФЛ;
	КонецЦикла;
	
	Для каждого СтрокаТаблицыПримененныеВычетыНаДетейИИмущественные Из ПримененныеВычетыНаДетейИИмущественные Цикл
		СтрокаТаблицыПримененныеВычетыНаДетейИИмущественные.ИдентификаторСтрокиНДФЛ = СтрокаТаблицыПримененныеВычетыНаДетейИИмущественные.ИдентификаторСтрокиНДФЛ + МаксимальныйИдентификаторСтрокиНДФЛ;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет вторичные данные формы.
//
// Параметры:
//		Форма	- УправляемаяФорма
//		Период	- Дата, дата в налоговом периоде, в котором применяются вычеты к доходам.
//
Процедура ЗаполнитьВторичныеДанныеТабличныхЧастей(Форма, Период = '00010101') Экспорт
	
	Если НЕ Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьНачислениеЗарплаты") Тогда
		Возврат;
	КонецЕсли; 
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаСервере();
	
	ВычетыКДоходам = ОписаниеПанелиВычеты.НастраиваемыеПанели.Получить("ВычетыКДоходам");
	Если ВычетыКДоходам <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Форма, "СоответствиеКодовВычетовКодамДоходов",
			Новый ФиксированноеСоответствие(УчетНДФЛ.ВычетыКДоходам(Год(Период))));
			
		ДанныеВычетовКДоходам = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ВычетыКДоходам);
		
		Сотрудники = ДанныеВычетовКДоходам.Выгрузить(, "Сотрудник");
		Сотрудники.Свернуть("Сотрудник");
		
		Начисления = ДанныеВычетовКДоходам.Выгрузить(, "Начисление");
		Начисления.Свернуть("Начисление");
		
		УстановитьПривилегированныйРежим(Истина);
		ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники.ВыгрузитьКолонку("Сотрудник"), "ФизическоеЛицо");
		КодыДоходов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Начисления.ВыгрузитьКолонку("Начисление"), "КодДоходаНДФЛ");
		УстановитьПривилегированныйРежим(Ложь);
		
		Для каждого СтрокаНачисления Из ДанныеВычетовКДоходам Цикл
			СтрокаНачисления.ВычетПримененныйКДоходам = Форма.СоответствиеКодовВычетовКодамДоходов.Получить(КодыДоходов.Получить(СтрокаНачисления.Начисление)) <> Неопределено;
			СтрокаНачисления.ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаНачисления.Сотрудник];
		КонецЦикла;
		
	КонецЕсли; 
	
	ДанныеНДФЛ = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ПутьКДаннымНДФЛ);
	Форма[ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты + "МаксимальныйИдентификаторСтрокиНДФЛ"] = МаксимальныйИдентификаторСтрокиНДФЛ(ДанныеНДФЛ);
	
	Для каждого СтрокаНДФЛ Из ДанныеНДФЛ Цикл
		ЗаполнитьПредставленияВычетовСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты);
	КонецЦикла;
		
	Если НЕ ПустаяСтрока(ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ИмяПоляПериод) Тогда
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(
			ДанныеНДФЛ,
			ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ИмяПоляПериод,
			ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ИмяПоляПериод + "Строкой");
	КонецЕсли; 
	
КонецПроцедуры

// Возвращает табличный документ, содержащий печатную форму отчета РегистрНалоговогоУчетаПоНДФЛ,
// сформированный с учетом данных, содержащихся в документе из которого производится вызов.
//
// Параметры:
//		ДокументОбъект - ДокументОбъект, с учетом данных которого формируется отчет.
//		Модифицированность - Булево, признак модифицированности данных формы.
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица, по которому формируется отчет.
//		ДатаОтчета - Дата, период за который формируется отчет.
//
// Возвращаемое значение:
//		ТабличныйДокумент
//
Функция РегистрНалоговогоУчетаПоНДФЛ(ДокументОбъект, Модифицированность, ФизическиеЛица, ДатаОтчета) Экспорт
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ОтображатьЗаголовки = Ложь;
	ДокументРезультат.ОтображатьСетку = Ложь;
	
	Если ДокументОбъект.ПометкаУдаления Тогда
		ВызватьИсключение НСтр("ru='Документ помечен на удаление, отчет не будет сформирован'");
	Иначе
		
		Попытка
			
			НачатьТранзакцию();
			
			УстановитьПривилегированныйРежим(Истина);
			
			Если ТипЗнч(ФизическиеЛица) = Тип("Массив") Тогда
				ФизическиеЛицаОтчета = ФизическиеЛица;
			Иначе
				ФизическиеЛицаОтчета = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическиеЛица);
			КонецЕсли;
			
			Если НЕ ДокументОбъект.Проведен ИЛИ Модифицированность Тогда
				
				ДокументОбъект.ДополнительныеСвойства.Вставить("ФизическиеЛица", ФизическиеЛицаОтчета);
				
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Ложь);
			
			НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
			
			ОтчетРегистрНалоговогоУчетаПоНДФЛ = Отчеты.РегистрНалоговогоУчетаПоНДФЛ.Создать();
			
			Отбор = ОтчетРегистрНалоговогоУчетаПоНДФЛ.КомпоновщикНастроек.Настройки.Отбор;
			Отбор.Элементы.Очистить();
			
			СтандартныйПериод = Новый СтандартныйПериод;
			СтандартныйПериод.ДатаНачала    = НачалоГода(ДатаОтчета);
			СтандартныйПериод.ДатаОкончания = КонецГода(ДатаОтчета);
			
			ПараметрыДанных = ОтчетРегистрНалоговогоУчетаПоНДФЛ.КомпоновщикНастроек.Настройки.ПараметрыДанных;
			ПараметрыДанных.УстановитьЗначениеПараметра("Период", СтандартныйПериод);
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "Организация", ВидСравненияКомпоновкиДанных.Равно, ДокументОбъект.Организация);
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ФизическоеЛицо", ВидСравненияКомпоновкиДанных.ВСписке, ФизическиеЛицаОтчета);
			
			ОтчетРегистрНалоговогоУчетаПоНДФЛ.СкомпоноватьРезультат(ДокументРезультат);
			
			ОтменитьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			Если ПривилегированныйРежим() Тогда
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли; 
			
			Инфо = ИнформацияОбОшибке();
			ВызватьИсключение НСтр("ru = 'Не удалось, сформировать отчет.'") + " " + Инфо.Описание;

		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ДокументРезультат;
	
КонецФункции

// Размещает элементы управления панели вычетов НДФЛ, на управляемой форме, переданной
// в качестве параметра.
//
// Параметры:
//		Форма - УправляемаяФорма
//		ОписаниеПанелиВычеты - Структура, описывающая панель вычетов,
//					см. функцию УчетНДФЛКлиентСерверВнутренний.ОписаниеПанелиВычеты.
//
Процедура ДополнитьФормуПанельюВычетов(Форма, ОписаниеПанелиВычеты = Неопределено) Экспорт
	
	Если НЕ Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьНачислениеЗарплаты") Тогда
		Возврат;
	КонецЕсли; 
	
	УчетНДФЛФормыВнутренний.ДополнитьФормуПанельюВычетов(Форма, ОписаниеПанелиВычеты);
	
КонецПроцедуры

// Добавляет реквизиты формы (в коллекцию добавляемых реквизитов), необходимые для работы панели вычетов.
//
// Параметры:
//		Форма - УправляемаяФорма
//		МассивДобавляемыхРеквизитов - Массив, в который добавляются новые реквизиты.
//		МассивИменРеквизитовФормы - Массив, строк, содержащих пути к данным реквизитам формы.
//      ОписаниеПанелиВычеты - Структура, описывающая панель вычетов,
//					см. функцию УчетНДФЛКлиентСерверВнутренний.ОписаниеПанелиВычеты.
//
Процедура ДополнитьМассивРеквизитовПанелиВычетов(Форма, МассивДобавляемыхРеквизитов, МассивИменРеквизитовФормы, ОписаниеПанелиВычеты = Неопределено) Экспорт
	
	УчетНДФЛФормыВнутренний.ДополнитьМассивРеквизитовПанелиВычетов(Форма, МассивДобавляемыхРеквизитов, МассивИменРеквизитовФормы, ОписаниеПанелиВычеты);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СведенияОДоходахПриСозданииНаСервере(Форма, КодДоходаПутьКДанным, ИмяПоляКодВычета, ИмяПоляСуммаВычета = "") Экспорт 	
	УстановитьУсловноеОформлениеТаблицыСведенияОДоходах(Форма, КодДоходаПутьКДанным, ИмяПоляКодВычета, ИмяПоляСуммаВычета);
КонецПроцедуры	

Процедура УстановитьУсловноеОформлениеТаблицыСведенияОДоходах(Форма, КодДоходаПутьКДанным, ИмяПоляКодВычета, ИмяПоляСуммаВычета)
	СписокДоходовСВычетами = Новый СписокЗначений;
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1010);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1211);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1530);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1531);	
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1532);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1533);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1535);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1536);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1537);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1538);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1539);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код1541);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2010);	
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2201);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2202);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2203);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2204);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2205);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2206);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2207);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2208);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2209);	
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2720);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2730);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2740);	
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2760);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2761);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2762);	
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2770);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2790);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код2791);
	СписокДоходовСВычетами.Добавить(Справочники.ВидыДоходовНДФЛ.Код4800);
	
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(КодДоходаПутьКДанным);
	ЭлементОтбора.ПравоеЗначение = СписокДоходовСВычетами;
	
	ОформляемоеПоле =  ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляКодВычета);
	
	Если ИмяПоляСуммаВычета <> "" Тогда 
		ОформляемоеПоле =  ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Использование = Истина;
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляСуммаВычета);
	КонецЕсли;
	
	ЭлементОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("ТолькоПросмотр");
	ЭлементОформления.Использование = Истина;
	ЭлементОформления.Значение = Истина;
	
КонецПроцедуры	

Процедура СправкиНДФЛУстановитьСписокВыбораРегистрацийВНО(Форма, ФизическоеЛицо = Неопределено) Экспорт 
	Форма.РегистрацияВНалоговомОрганеСписокВыбора.Очистить();
	ЗначениеПоУмолчанию = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	РегистрацииВНалоговомОргане = УчетНДФЛ.РегистрацииВНалоговомОрганеПоОрганизации(Форма.Объект.Организация, Форма.Объект.НалоговыйПериод);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РегистрацииВНалоговомОргане", РегистрацииВНалоговомОргане);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка,
	|	РегистрацииВНалоговомОргане.КодПоОКАТО,
	|	РегистрацииВНалоговомОргане.КПП,
	|	РегистрацииВНалоговомОргане.КодПоОКТМО
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Ссылка В(&РегистрацииВНалоговомОргане)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокРегистраций = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(Форма.Объект) Тогда
			ПредставлениеРегистрации = УчетНДФЛ.СуммаОКТМОиКПП(Выборка.КодПоОКТМО, Выборка.КПП);
		Иначе
			ПредставлениеРегистрации = УчетНДФЛ.СуммаОКАТОиКПП(Выборка.КодПоОКАТО, Выборка.КПП);	
		КонецЕсли;
		
		СписокРегистраций.Добавить(Выборка.Ссылка, ПредставлениеРегистрации);
	КонецЦикла;		
	
	Если Не Форма.Объект.РегистрацияВНалоговомОргане.Пустая()  
		И СписокРегистраций.НайтиПоЗначению(Форма.Объект.РегистрацияВНалоговомОргане) = Неопределено Тогда
		
		СписокРегистраций.Добавить(Форма.Объект.РегистрацияВНалоговомОргане, Форма.РегистрацияВНОПредставление);
	КонецЕсли;	
	
	Для Каждого ЭлементСписка Из СписокРегистраций Цикл
		ДобавляемоеЗначение = Новый Структура("Регистрация, Представление", ЭлементСписка.Значение, ЭлементСписка.Представление);
		
		Форма.РегистрацияВНалоговомОрганеСписокВыбора.Добавить(ДобавляемоеЗначение, ЭлементСписка.Представление);		
	КонецЦикла;	
	
	Если Форма.Объект.РегистрацияВНалоговомОргане.Пустая()
		И Форма.РегистрацияВНалоговомОрганеСписокВыбора.Количество() > 0 Тогда
		
		Форма.Объект.РегистрацияВНалоговомОргане = Форма.РегистрацияВНалоговомОрганеСписокВыбора[0].Значение.Регистрация;
	КонецЕсли;	
	
	СправкиНДФЛУстановитьКодИФНС(Форма.Объект.РегистрацияВНалоговомОргане, Форма.Объект.КодИФНС);
	
	СправкиНДФЛУстановитьПредставлениеРегистрацииВНО(Форма);
КонецПроцедуры	

Процедура СправкиНДФЛУстановитьЗаголовокПоляРегистрацияВНО(Форма) Экспорт
	Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(Форма.Объект) Тогда	
		Заголовок = "ОКТМО/КПП";		
	Иначе	
		Заголовок = "ОКАТО/КПП";
	КонецЕсли;	
	
	ТекущийЗаголовок = ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(Форма.Элементы, "РегистрацияВНалоговомОргане", "Заголовок");
	
	Если ТекущийЗаголовок <> Заголовок Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "РегистрацияВНалоговомОргане", "Заголовок", Заголовок);
	КонецЕсли;	
КонецПроцедуры	

Процедура СправкиНДФЛЗафиксироватьДанныеСотрудников(ДанныеСправок) Экспорт
	ФиксируемыеПоля = УчетНДФЛКлиентСервер.СправкиНДФЛИменаФиксируемыхПолей();
	
	Для Каждого СправкаПоСотруднику Из ДанныеСправок Цикл
		Для Каждого ИмяПоля Из ФиксируемыеПоля Цикл
			СправкаПоСотруднику["Фикс" + ИмяПоля] = Истина;	
		КонецЦикла;	
		
		СправкаПоСотруднику.ФиксНалоги = Истина;
		СправкаПоСотруднику.ФиксУведомление = Истина;
	КонецЦикла;	
КонецПроцедуры	

Процедура СправкиНДФЛПрочитатьДанныеСотрудников(ДанныеСправок, НалоговыйПериод, ДатаДокумента, ОбновлятьНеФиксированныеДанные = Истина) Экспорт
	ЗаполняемыеПоля = УчетНДФЛКлиентСервер.СправкиНДФЛИменаФиксируемыхПолей();	
	
	СотрудникиДляЗаполнения = Новый Массив;
	ДанныеСправокПоСотрудникам = Новый Соответствие;
	
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		
		Если СотрудникиДляЗаполнения.Найти(ДанныеСправкиПоСотруднику.Сотрудник) = Неопределено Тогда
		
			ПолучатьКадровыеДанныеСотрудника = Ложь;
			Если ОбновлятьНеФиксированныеДанные Тогда
				Для Каждого ИмяПоля Из ЗаполняемыеПоля Цикл
					Если Не ДанныеСправкиПоСотруднику["Фикс" + ИмяПоля] Тогда 
						ПолучатьКадровыеДанныеСотрудника = Истина;	
					КонецЕсли;			
				КонецЦикла;	
			КонецЕсли;
			
			Если ПолучатьКадровыеДанныеСотрудника Тогда
				СотрудникиДляЗаполнения.Добавить(ДанныеСправкиПоСотруднику.Сотрудник);			
				ДанныеСправокПоСотрудникам.Вставить(ДанныеСправкиПоСотруднику.Сотрудник, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеСправкиПоСотруднику));
			КонецЕсли;
		
		Иначе
			ДанныеСправокПоСотрудникам[ДанныеСправкиПоСотруднику.Сотрудник].Добавить(ДанныеСправкиПоСотруднику)
		КонецЕсли;
		
	КонецЦикла;	
	
	Если СотрудникиДляЗаполнения.Количество() > 0 Тогда
				
		НеобходимыеКадровыеДанные = Новый Массив();
		
		НеобходимыеКадровыеДанные.Добавить("ФизическоеЛицо");
		НеобходимыеКадровыеДанные.Добавить("Фамилия");
		НеобходимыеКадровыеДанные.Добавить("Наименование");
		НеобходимыеКадровыеДанные.Добавить("Имя");
		НеобходимыеКадровыеДанные.Добавить("Отчество");
		НеобходимыеКадровыеДанные.Добавить("ДокументВид");
		НеобходимыеКадровыеДанные.Добавить("ДокументСерия");
		НеобходимыеКадровыеДанные.Добавить("ДокументНомер");
		НеобходимыеКадровыеДанные.Добавить("ДатаРождения");	
		НеобходимыеКадровыеДанные.Добавить("Страна");
		НеобходимыеКадровыеДанные.Добавить("ИНН");
		НеобходимыеКадровыеДанные.Добавить("АдресЗаПределамиРФ");
		НеобходимыеКадровыеДанные.Добавить("АдресЗаПределамиРФПредставление");
		НеобходимыеКадровыеДанные.Добавить("АдресПоПрописке");
		НеобходимыеКадровыеДанные.Добавить("АдресПоПропискеПредставление");
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		
		КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(МенеджерВТ, Истина, СотрудникиДляЗаполнения, НеобходимыеКадровыеДанные, ДатаДокумента);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадровыеДанныеФизЛиц.АдресПоПропискеПредставление КАК АдресПредставление,
		|	КадровыеДанныеФизЛиц.АдресЗаПределамиРФПредставление КАК АдресЗарубежомПредставление,
		|	КадровыеДанныеФизЛиц.АдресПоПрописке КАК Адрес,
		|	КадровыеДанныеФизЛиц.АдресЗаПределамиРФ КАК АдресЗарубежом,
		|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
		|	КадровыеДанныеФизЛиц.Имя КАК Имя,
		|	КадровыеДанныеФизЛиц.Отчество КАК Отчество,
		|	КадровыеДанныеФизЛиц.ДатаРождения КАК ДатаРождения,
		|	ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) КАК Гражданство,
		|	КадровыеДанныеФизЛиц.ДокументВид КАК ВидДокумента,
		|	КадровыеДанныеФизЛиц.ДокументСерия КАК СерияДокумента,
		|	КадровыеДанныеФизЛиц.ДокументНомер КАК НомерДокумента,
		|	КадровыеДанныеФизЛиц.ИНН КАК ИНН,
		|	КадровыеДанныеФизЛиц.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТТекущиеДанныеФизЛиц
		|ИЗ
		|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц
		|";	
		
		Запрос.Выполнить();
		
		КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(МенеджерВТ, Истина, СотрудникиДляЗаполнения, "СтатусНалогоплательщика", КонецГода(Дата(НалоговыйПериод, 1, 1)));
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТекущиеДанныеФизЛиц.Адрес КАК Адрес,
		|	ТекущиеДанныеФизЛиц.АдресЗарубежом КАК АдресЗарубежом,
		|	ТекущиеДанныеФизЛиц.Фамилия КАК Фамилия,
		|	ТекущиеДанныеФизЛиц.Имя КАК Имя,
		|	ТекущиеДанныеФизЛиц.Отчество КАК Отчество,
		|	ТекущиеДанныеФизЛиц.ДатаРождения КАК ДатаРождения,
		|	ТекущиеДанныеФизЛиц.Гражданство КАК Гражданство,
		|	ТекущиеДанныеФизЛиц.ВидДокумента КАК ВидДокумента,
		|	ТекущиеДанныеФизЛиц.СерияДокумента КАК СерияДокумента,
		|	ТекущиеДанныеФизЛиц.НомерДокумента КАК НомерДокумента,
		|	ТекущиеДанныеФизЛиц.ИНН КАК ИНН,
		|	СтатусыФизЛицНаКонецГода.СтатусНалогоплательщика КАК СтатусНалогоплательщика,
		|	ТекущиеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо 
		|ИЗ
		|	ВТТекущиеДанныеФизЛиц КАК ТекущиеДанныеФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК СтатусыФизЛицНаКонецГода
		|		ПО ТекущиеДанныеФизЛиц.ФизическоеЛицо = СтатусыФизЛицНаКонецГода.ФизическоеЛицо";

		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДанныеСправокПоСотруднику = ДанныеСправокПоСотрудникам[Выборка.ФизическоеЛицо];
			
			Для каждого ДанныеСправкиПоСотруднику Из ДанныеСправокПоСотруднику Цикл
				Для Каждого ИмяПоля Из ЗаполняемыеПоля Цикл
					Если НЕ ДанныеСправкиПоСотруднику["Фикс" + ИмяПоля] Тогда 
						ДанныеСправкиПоСотруднику[ИмяПоля] = Выборка[ИмяПоля];
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура СправкиНДФЛОтменитьИсправлениеДанныхСотрудника(Форма, СправкаПоСотруднику,НалоговыйПериод, ДатаДокумента) Экспорт
														
	ЗаполняемыеПоля = УчетНДФЛКлиентСервер.СправкиНДФЛИменаФиксируемыхПолей();	
	
	ЧитатьДанныеСотрудников = Ложь;
	Для Каждого ИмяПоля Из ЗаполняемыеПоля Цикл
		ЧитатьДанныеСотрудников = ЧитатьДанныеСотрудников Или СправкаПоСотруднику["Фикс" + ИмяПоля];
		
		СправкаПоСотруднику["Фикс" + ИмяПоля] = Ложь; 
	КонецЦикла;	
	
	Если ЧитатьДанныеСотрудников Тогда
		ДанныеСправок = Новый Массив;
		ДанныеСправок.Добавить(СправкаПоСотруднику);
		
		СправкиНДФЛПрочитатьДанныеСотрудников(ДанныеСправок, НалоговыйПериод, ДатаДокумента, Истина);
		
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьСвойстваЭлементовСФиксациейДанных(Форма, СправкаПоСотруднику, Форма.ДокументПроведен);
	КонецЕсли;	
		
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьИнфонадписьИсправления(Форма.ИнфоНадписьИсправления, СправкаПоСотруднику, Форма.ДокументПроведен);
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьСвойстваЭлементовСФиксациейДанных(Форма, СправкаПоСотруднику, Форма.ДокументПроведен);
		
КонецПроцедуры	

Процедура СправкиНДФЛОбновитьНалоги(Форма, СправкаПоСотруднику, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, ДатаДокумента, Организация, РегистрацияВНалоговомОргане, ИспользоватьНомераСправок, ЗаполнятьБезДоходовПоЦеннымБумагам = Ложь) Экспорт
								
	СправкаПоСотруднику.ФиксНалоги = Ложь;
		
	ДанныеСправок = Новый Массив;
	ДанныеСправок.Добавить(СправкаПоСотруднику);
	
	СправкиНДФЛПрочитатьДанныеОДоходахИНалогах(ДанныеСправок, 
										СведенияОДоходах, 
										СведенияОВычетах, 
										НалоговыйПериод, 
										ДатаДокумента, 
										Организация, 
										РегистрацияВНалоговомОргане, 
										ИспользоватьНомераСправок, 
										ЗаполнятьБезДоходовПоЦеннымБумагам);
										
	СправкаПоСотруднику.ФиксУведомление = Ложь;
	
	ДанныеСправок = Новый Массив;
	ДанныеСправок.Добавить(СправкаПоСотруднику);
	
	СправкиНДФЛПрочитатьДанныеУведомлений(ДанныеСправок, Организация, НалоговыйПериод);	
	
КонецПроцедуры	

Процедура СправкиНДФЛПрочитатьДанныеОДоходахИНалогах(ДанныеСправок, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, ДатаДокумента, Организация, РегистрацияВНалоговомОргане = Неопределено, ИспользоватьНомераСправок = Истина, ЗаполнятьБезДоходовПоЦеннымБумагам = Ложь) Экспорт
								
	Сотрудники = Новый Массив;	
	СправкиПоСотрудникам = Новый Соответствие;
	
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		Сотрудники.Добавить(ДанныеСправкиПоСотруднику.Сотрудник);
		
		СправкиПоСотрудникам.Вставить(ДанныеСправкиПоСотруднику.Сотрудник, ДанныеСправкиПоСотруднику);
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл 
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "ОбщаяСуммаДохода", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "ОблагаемаяСуммаДохода", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Исчислено", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Удержано", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Перечислено", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Задолженность", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "ИзлишнеУдержано", 0);
		КонецЦикла;	

	КонецЦикла;	
	
	ДанныеДоходахНалогахВычетах = УчетНДФЛ.ДанныеОДоходахНалогахВычетах(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, ДатаДокумента);
	
	Если НалоговыйПериод >= Год(УчетНДФЛ.ДатаПереходаНаКодыОКТМО()) И ЗаполнятьБезДоходовПоЦеннымБумагам Тогда
		СтруктураПоиска = Новый Структура("ВключатьВДекларациюПоНалогуНаПрибыль", Ложь);
		ДанныеДоходахНалогахВычетах.Доходы = ДанныеДоходахНалогахВычетах.Доходы.Скопировать(ДанныеДоходахНалогахВычетах.Доходы.НайтиСтроки(СтруктураПоиска));
		ДанныеДоходахНалогахВычетах.Вычеты = ДанныеДоходахНалогахВычетах.Вычеты.Скопировать(ДанныеДоходахНалогахВычетах.Вычеты.НайтиСтроки(СтруктураПоиска));
		ДанныеДоходахНалогахВычетах.Налоги = ДанныеДоходахНалогахВычетах.Налоги.Скопировать(ДанныеДоходахНалогахВычетах.Налоги.НайтиСтроки(СтруктураПоиска));
	КонецЕсли;
	ДанныеДоходахНалогахВычетах.Доходы.Свернуть("МесяцНалоговогоПериода,Ставка,КодДохода,КодДоходаКодДляОтчетности,КодВычета,Сотрудник","СуммаДохода, СуммаВычета"); 
	ДанныеДоходахНалогахВычетах.Вычеты.Свернуть("КодВычета,Сотрудник","СуммаВычета"); 
	ДанныеДоходахНалогахВычетах.Налоги.Свернуть("Ставка,Сотрудник","ОбщаяСуммаДохода, ОблагаемаяСуммаДохода, Исчислено, Удержано, Перечислено, Задолженность, ИзлишнеУдержано"); 
	
	Если ИспользоватьНомераСправок Тогда
		Для Каждого СтрокаДанныхОДоходах Из ДанныеДоходахНалогахВычетах.Доходы Цикл
			СтрокаДоходовСправки = СведенияОДоходах.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоходовСправки, СтрокаДанныхОДоходах);
			СтрокаДоходовСправки.НомерСправки = СправкиПоСотрудникам[СтрокаДанныхОДоходах.Сотрудник].НомерСправки;
			СтрокаДоходовСправки.МесяцНалоговогоПериодаСтрокой = УчетНДФЛКлиентСервер.МесяцНалоговогоПериодаСтрокой(СтрокаДоходовСправки.МесяцНалоговогоПериода);
		КонецЦикла;
		Для Каждого СтрокаДанныхОВычетах Из ДанныеДоходахНалогахВычетах.Вычеты Цикл
			СтрокаВычетовСправки = СведенияОВычетах.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВычетовСправки, СтрокаДанныхОВычетах);
			СтрокаВычетовСправки.НомерСправки = СправкиПоСотрудникам[СтрокаВычетовСправки.Сотрудник].НомерСправки;
		КонецЦикла;	
	Иначе
		Для Каждого СтрокаДанныхОДоходах Из ДанныеДоходахНалогахВычетах.Доходы Цикл
			СтрокаДоходовСправки = СведенияОДоходах.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоходовСправки, СтрокаДанныхОДоходах);
			СтрокаДоходовСправки.МесяцНалоговогоПериодаСтрокой = УчетНДФЛКлиентСервер.МесяцНалоговогоПериодаСтрокой(СтрокаДоходовСправки.МесяцНалоговогоПериода);
		КонецЦикла;
		СведенияОВычетах.Загрузить(ДанныеДоходахНалогахВычетах.Вычеты);
	КонецЕсли;	
	
	Для Каждого СтрокаИтогов Из ДанныеДоходахНалогахВычетах.Налоги Цикл
		ДанныеСправки = СправкиПоСотрудникам[СтрокаИтогов.Сотрудник];
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "ОбщаяСуммаДохода");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "ОблагаемаяСуммаДохода");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Исчислено");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Удержано");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Перечислено");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Задолженность");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "ИзлишнеУдержано");
	КонецЦикла;	
	
КонецПроцедуры	

Процедура СправкиНДФЛПрочитатьДанныеУведомлений(ДанныеСправок, Организация, НалоговыйПериод) Экспорт
	Сотрудники = Новый Массив;	
	СправкиПоСотрудникам = Новый Соответствие;
	
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		Сотрудники.Добавить(ДанныеСправкиПоСотруднику.Сотрудник);
		
		СправкиПоСотрудникам.Вставить(ДанныеСправкиПоСотруднику.Сотрудник, ДанныеСправкиПоСотруднику);
		
		ДанныеСправкиПоСотруднику.ДатаУведомления = '00010101';
		ДанныеСправкиПоСотруднику.НомерУведомления = "";
		ДанныеСправкиПоСотруднику.КодНалоговогоОрганаУведомления = "";
	КонецЦикла;
	
	ДанныеУведомлений = УчетНДФЛ.ДанныеУведомленийНаВычеты(Сотрудники, НалоговыйПериод, Организация);
	
	Для Каждого Уведомление Из ДанныеУведомлений Цикл
		ДанныеСправки = СправкиПоСотрудникам[Уведомление.ФизическоеЛицо]; 
		ДанныеСправки.ДатаУведомления = Уведомление.ДатаУведомления;
		ДанныеСправки.НомерУведомления = Уведомление.НомерУведомления;
		ДанныеСправки.КодНалоговогоОрганаУведомления = Уведомление.КодНалоговогоОрганаУведомления;
	КонецЦикла;	
КонецПроцедуры	

Процедура СправкиНДФЛПрочитатьДанные(ДанныеСправок, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, ДатаДокумента, Организация,  РегистрацияВНалоговомОргане = Неопределено, ИспользоватьНомераСправок = Истина, ОбновлятьНеФиксированныеДанные = Истина, ЗаполнятьБезДоходовПоЦеннымБумагам = Ложь) Экспорт
																	
	СправкиНДФЛПрочитатьДанныеСотрудников(ДанныеСправок, НалоговыйПериод, ДатаДокумента, ОбновлятьНеФиксированныеДанные);
		
	СправкиСНефиксированнымиСведениямиОНалогах = Новый Массив;
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		Если Не ДанныеСправкиПоСотруднику.ФиксНалоги Тогда
			СправкиСНефиксированнымиСведениямиОНалогах.Добавить(ДанныеСправкиПоСотруднику);
		КонецЕсли;	
	КонецЦикла;	
	
	СправкиНДФЛПрочитатьДанныеОДоходахИНалогах(СправкиСНефиксированнымиСведениямиОНалогах, 
										    СведенияОДоходах, 
										    СведенияОВычетах, 
											НалоговыйПериод, 
											ДатаДокумента, 
											Организация, 
											РегистрацияВНалоговомОргане, 
											ИспользоватьНомераСправок, 
											ЗаполнятьБезДоходовПоЦеннымБумагам);
											
	СправкиСНефиксированнымиСведениямиУведомлений = Новый Массив;
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		Если Не ДанныеСправкиПоСотруднику.ФиксУведомление Тогда
			СправкиСНефиксированнымиСведениямиУведомлений.Добавить(ДанныеСправкиПоСотруднику);
		КонецЕсли;	
	КонецЦикла;	
	
	СправкиНДФЛПрочитатьДанныеУведомлений(СправкиСНефиксированнымиСведениямиУведомлений, Организация, НалоговыйПериод);
								
КонецПроцедуры									
													
Процедура СправкиНДФЛОбновитьИтоги(ДанныеСправки, СведенияОДоходах, СведенияОВычетах) Экспорт	
	
	КодыДоходов = Новый Массив;
	Для Каждого СтрокаДоходов Из СведенияОДоходах Цикл
		КодыДоходов.Добавить(СтрокаДоходов.КодДохода);
	КонецЦикла;
		
	СтавкиКДоходам = УчетНДФЛ.СоответствиеДоходовСтавкам(КодыДоходов);		
	
	ИтогиПоСтавкам = Новый ТаблицаЗначений;
	ИтогиПоСтавкам.Колонки.Добавить("Ставка");
	ИтогиПоСтавкам.Колонки.Добавить("ОблагаемаяСуммаДохода");
	ИтогиПоСтавкам.Колонки.Добавить("ОбщаяСуммаДохода");
	
	ДоходыПоставке = ИтогиПоСтавкам.Добавить();
	ДоходыПоставке.Ставка = Перечисления.НДФЛСтавки.Ставка09;
	ДоходыПоставке.ОбщаяСуммаДохода = 0;
	ДоходыПоставке.ОблагаемаяСуммаДохода = 0;

	ДоходыПоставке = ИтогиПоСтавкам.Добавить();
	ДоходыПоставке.Ставка = Перечисления.НДФЛСтавки.Ставка13;
	ДоходыПоставке.ОбщаяСуммаДохода = 0;
	ДоходыПоставке.ОблагаемаяСуммаДохода = 0;
	
	ДоходыПоставке = ИтогиПоСтавкам.Добавить();
	ДоходыПоставке.Ставка = Перечисления.НДФЛСтавки.Ставка15;
	ДоходыПоставке.ОбщаяСуммаДохода = 0;
	ДоходыПоставке.ОблагаемаяСуммаДохода = 0;

	ДоходыПоставке = ИтогиПоСтавкам.Добавить();
	ДоходыПоставке.Ставка = Перечисления.НДФЛСтавки.Ставка30;
	ДоходыПоставке.ОбщаяСуммаДохода = 0;
	ДоходыПоставке.ОблагаемаяСуммаДохода = 0;

	ДоходыПоставке = ИтогиПоСтавкам.Добавить();
	ДоходыПоставке.Ставка = Перечисления.НДФЛСтавки.Ставка35;
	ДоходыПоставке.ОбщаяСуммаДохода = 0;
	ДоходыПоставке.ОблагаемаяСуммаДохода = 0;

	Для Каждого СтрокаДоходов Из СведенияОДоходах Цикл
		СтавкаНалогообложенияРезидента = СтавкиКДоходам.Получить(СтрокаДоходов.КодДохода);
		
		Если СтавкаНалогообложенияРезидента <> Неопределено Тогда
		
			Ставка = УчетНДФЛ.СтавкаНДФЛ(СтавкаНалогообложенияРезидента, СтрокаДоходов.КодДохода, ДанныеСправки.СтатусНалогоплательщика, ДанныеСправки.НалоговыйПериод);	
			
			ДоходыПоставке = ИтогиПоСтавкам.Добавить();
			ДоходыПоставке.Ставка = Ставка;
			ДоходыПоставке.ОбщаяСуммаДохода = СтрокаДоходов.СуммаДохода;
			ДоходыПоставке.ОблагаемаяСуммаДохода = СтрокаДоходов.СуммаДохода - СтрокаДоходов.СуммаВычета;
		КонецЕсли;	
	КонецЦикла;		
	
	Для Каждого СтрокаВычетов Из СведенияОВычетах Цикл
		ДоходыПоставке = ИтогиПоСтавкам.Добавить();
		ДоходыПоставке.Ставка = Перечисления.НДФЛСтавки.Ставка13;
		ДоходыПоставке.ОбщаяСуммаДохода = 0;
		ДоходыПоставке.ОблагаемаяСуммаДохода = -СтрокаВычетов.СуммаВычета;
	КонецЦикла;	
	
	ИтогиПоСтавкам.Свернуть("Ставка", "ОблагаемаяСуммаДохода, ОбщаяСуммаДохода");
	
	Для Каждого СтрокаИтогов Из ИтогиПоСтавкам Цикл
		СтрокаИтогов.ОбщаяСуммаДохода = Макс(СтрокаИтогов.ОбщаяСуммаДохода, 0);	
		СтрокаИтогов.ОблагаемаяСуммаДохода = Макс(СтрокаИтогов.ОблагаемаяСуммаДохода, 0);
		
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "ОблагаемаяСуммаДохода");
		УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "ОбщаяСуммаДохода");
	КонецЦикла;	
	
КонецПроцедуры	

Процедура СправкиНДФЛСтатусНалогоплательщикаПриИзменении(Форма, ДанныеСправки, СведенияОДоходах, СведенияОВычетах) Экспорт
	СправкиНДФЛОбновитьИтоги(ДанныеСправки, СведенияОДоходах, СведенияОВычетах);
		
	УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьВидимостьСтраницИтогов(Форма, ДанныеСправки); 
	
КонецПроцедуры	

Процедура СправкиНДФЛУстановитьКодИФНС(РегистрацияВНалоговомОргане, КодИФНС) Экспорт
	КодИФНС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "Код");	
КонецПроцедуры	

Функция СправкиНДФЛПредставлениеРегистрацииВНО(Форма, РегистрацияВНалоговомОргане) Экспорт 
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		Возврат "";
	ИначеЕсли УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(Форма.Объект) Тогда
		
		ПоляПредставления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.Объект.РегистрацияВНалоговомОргане, "КодПоОКТМО, КПП");
		Возврат УчетНДФЛ.СуммаОКТМОиКПП(ПоляПредставления.КодПоОКТМО, ПоляПредставления.КПП);
		
	Иначе	
		ПоляПредставления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.Объект.РегистрацияВНалоговомОргане, "КодПоОКАТО, КПП");
		Возврат УчетНДФЛ.СуммаОКАТОиКПП(ПоляПредставления.КодПоОКАТО, ПоляПредставления.КПП);
	КонецЕсли;	
КонецФункции	

Процедура СправкиНДФЛУстановитьПредставлениеРегистрацииВНО(Форма) Экспорт 
	Форма.РегистрацияВНОПредставление = СправкиНДФЛПредставлениеРегистрацииВНО(Форма, Форма.Объект.РегистрацияВНалоговомОргане);
КонецПроцедуры	

Процедура СправкаНДФЛУстановитьИнофнадписьОписаниеДоходовОрганизации(Форма, СводнаяСправка = Ложь, ФизическоеЛицо = Неопределено, ДляНалогаНаПрибыль = Ложь, НеВключатьДоходыПоЦеннымБумагам = Ложь) Экспорт
	ОписаниеДоходовОрганизации = УчетНДФЛ.ОписаниеДоходовОрганизации(Форма.Объект.Организация, Форма.Объект.НалоговыйПериод, Форма.Объект.Дата, ФизическоеЛицо, ДляНалогаНаПрибыль, НеВключатьДоходыПоЦеннымБумагам);	
	
	Если ДляНалогаНаПрибыль Тогда
		
		Форма.ЗарегистрированыДоходы = ОписаниеДоходовОрганизации.Количество() > 0 
											Или (ФизическоеЛицо <> Неопределено	И (ФизическоеЛицо.Пустая() Или СводнаяСправка));
		Возврат;
		
	Иначе

		Форма.ЗарегистрированыДоходы = Не ЗначениеЗаполнено(Форма.Объект.РегистрацияВНалоговомОргане) 
											Или Не ОписаниеДоходовОрганизации.Получить(Форма.Объект.РегистрацияВНалоговомОргане) = Неопределено 
											Или (ФизическоеЛицо <> Неопределено И (ФизическоеЛицо.Пустая() Или СводнаяСправка));
		
	КонецЕсли;
										
	Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(Форма.Объект) Тогда
		ЗаголовокРегистрации = "ОКТМО/КПП";
	Иначе
		ЗаголовокРегистрации = "ОКАТО/КПП";	
	КонецЕсли;	
	
	ИнфоРегистрацияВНО = "";
	ТекстПредупреждения = "";
	Если Не Форма.ЗарегистрированыДоходы Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = ' По %1 %2 доходы не зарегистрированы.'"), ЗаголовокРегистрации, Форма.РегистрацияВНОПредставление);		
	КонецЕсли;	
	
	ТекстКодов = "";
	Для Каждого РегистрацияВНОПредставление Из ОписаниеДоходовОрганизации Цикл
		Если ЗначениеЗаполнено(РегистрацияВНОПредставление.Ключ) Тогда
			ТекстКодов = ТекстКодов + ?(ЗначениеЗаполнено(ТекстКодов),", ","") + СправкиНДФЛПредставлениеРегистрацииВНО(Форма, РегистрацияВНОПредставление.Ключ);
		КонецЕсли;	
	КонецЦикла;
	
	Если СводнаяСправка
		И ОписаниеДоходовОрганизации.Количество() > 0 Тогда
		
		ИнфоРегистрацияВНО = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'За %1 год доходы зарегистрированы'"),
														Формат(Форма.Объект.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"));
	ИначеЕсли ЗначениеЗаполнено(ТекстКодов) Тогда
		ИнфоРегистрацияВНО = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'За %1 год зарегистрированы доходы по следующим кодам %2 %3. %4'"),
														Формат(Форма.Объект.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"), 
														ЗаголовокРегистрации,
														ТекстКодов, 
														ТекстПредупреждения);
	Иначе
		Если ОписаниеДоходовОрганизации.Количество() > 0 Тогда
			ПродолжениеТекст = НСтр("ru = '. Возможно, для организации не указана регистрация в налоговом органе.'");
		Иначе	
			ПродолжениеТекст = "";
		КонецЕсли;	
		
		ИнфоРегистрацияВНО = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'За %1 год не зарегистрировано доходов%2'"), Формат(Форма.Объект.НалоговыйПериод,"ЧЦ=4; ЧДЦ=0; ЧГ=0"), ПродолжениеТекст);
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(Форма, "РегистрацияВНалоговомОргане", ИнфоРегистрацияВНО);

КонецПроцедуры	

Процедура СправкиНДФЛОчиститьДанныеСправки(ДанныеСправки, ДляНалогаНаПрибыль = Ложь) Экспорт
	ФиксируемыеПоля = УчетНДФЛКлиентСервер.СправкиНДФЛИменаФиксируемыхПолей();
	
	Для Каждого ИмяПоля Из ФиксируемыеПоля Цикл
		ДанныеСправки["Фикс" + ИмяПоля] = Ложь;	
		ДанныеСправки[ИмяПоля] = Неопределено;
	КонецЦикла;	
	
	ДанныеСправки.ФиксНалоги = Ложь;
	Если Не ДляНалогаНаПрибыль Тогда
		ДанныеСправки.ФиксУведомление = Ложь;
	КонецЕсли;
	
	Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл 
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "ОбщаяСуммаДохода", 0);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "ОблагаемаяСуммаДохода", 0);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "Исчислено", 0);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "Удержано", 0);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "Перечислено", 0);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "Задолженность", 0);
		УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправки, СтавкаНДФЛ, "ИзлишнеУдержано", 0);
	КонецЦикла;	
	
КонецПроцедуры	

Процедура СправкиНДФЛЗаполнитьСписокКонтролируемыхПолей(Форма, ДляНалогаНаПрибыль = Ложь) Экспорт
	КонтролируемыеПоля = Новый Структура;
	
	КонтролируемыеПоляДоходы = Новый Массив;
	Если Не ДляНалогаНаПрибыль Тогда
		КонтролируемыеПоляДоходы.Добавить("МесяцНалоговогоПериода");
	КонецЕсли;
	КонтролируемыеПоляДоходы.Добавить("КодДохода");
	КонтролируемыеПоляДоходы.Добавить("СуммаДохода");
	КонтролируемыеПоляДоходы.Добавить("КодВычета");
	КонтролируемыеПоляДоходы.Добавить("СуммаВычета");
	
	КонтролируемыеПоля.Вставить("СведенияОДоходах", Новый ФиксированныйМассив(КонтролируемыеПоляДоходы));
	
	КонтролируемыеПоляВычеты = Новый Массив;
    КонтролируемыеПоляВычеты.Добавить("КодВычета");
	КонтролируемыеПоляВычеты.Добавить("СуммаВычета");
	
	КонтролируемыеПоля.Вставить("СведенияОВычетах", Новый ФиксированныйМассив(КонтролируемыеПоляВычеты));
	
	КонтролируемыеПоляИтоги = Новый Массив;
	КонтролируемыеПоляИтоги.Добавить("ОбщаяСуммаДоходаПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("ОблагаемаяСуммаДоходаПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("ИсчисленоПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("УдержаноПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("ЗадолженностьПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("ИзлишнеУдержаноПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("ПеречисленоПоСтавке13");
	КонтролируемыеПоляИтоги.Добавить("ОбщаяСуммаДоходаПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("ОблагаемаяСуммаДоходаПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("ИсчисленоПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("УдержаноПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("ЗадолженностьПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("ИзлишнеУдержаноПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("ПеречисленоПоСтавке30");
	КонтролируемыеПоляИтоги.Добавить("ОбщаяСуммаДоходаПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("ОблагаемаяСуммаДоходаПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("ИсчисленоПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("УдержаноПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("ЗадолженностьПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("ИзлишнеУдержаноПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("ПеречисленоПоСтавке9");
	КонтролируемыеПоляИтоги.Добавить("ОбщаяСуммаДоходаПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("ОблагаемаяСуммаДоходаПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("ИсчисленоПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("УдержаноПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("ЗадолженностьПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("ИзлишнеУдержаноПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("ПеречисленоПоСтавке15");
	КонтролируемыеПоляИтоги.Добавить("ОбщаяСуммаДоходаПоСтавке35");
	КонтролируемыеПоляИтоги.Добавить("ОблагаемаяСуммаДоходаПоСтавке35");
	КонтролируемыеПоляИтоги.Добавить("ИсчисленоПоСтавке35");
	КонтролируемыеПоляИтоги.Добавить("УдержаноПоСтавке35");
	КонтролируемыеПоляИтоги.Добавить("ЗадолженностьПоСтавке35");
	КонтролируемыеПоляИтоги.Добавить("ИзлишнеУдержаноПоСтавке35");
	КонтролируемыеПоляИтоги.Добавить("ПеречисленоПоСтавке35");
		
	КонтролируемыеПоля.Вставить("ИТОГИ", Новый ФиксированныйМассив(КонтролируемыеПоляИтоги));
	
	Если Не ДляНалогаНаПрибыль Тогда
		
		КонтролируемыеПоляУведомление = Новый Массив;
		
		КонтролируемыеПоляУведомление.Добавить("ДатаУведомления");
		КонтролируемыеПоляУведомление.Добавить("НомерУведомления");
		КонтролируемыеПоляУведомление.Добавить("КодНалоговогоОрганаУведомления");

		КонтролируемыеПоля.Вставить("Уведомление", Новый ФиксированныйМассив(КонтролируемыеПоляУведомление));
		
	КонецЕсли;
	
	Форма.КонтролируемыеПоля = Новый ФиксированнаяСтруктура(КонтролируемыеПоля);
	
КонецПроцедуры	
	
Функция ПоместитьДанныеСправки2НДФЛВХранилище(Форма, ДанныеСотрудника, СтрокиСведенийОДоходах, СтрокиСведенийОВычетах, НомерСправки, Ошибки = Неопределено, НоваяСтрока = Ложь, Ставка = Неопределено, НеВключатьДоходыПоЦеннымБумагам = Ложь) Экспорт
	
	ДанныеСправки = Новый Структура;
	
	МетаданныеСправки = Метаданные.Документы.СправкаНДФЛ;
	Для каждого РеквизитСправки Из МетаданныеСправки.Реквизиты Цикл
		ДанныеСправки.Вставить(РеквизитСправки.Имя);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ДанныеСправки, Форма.Объект);
	ЗаполнитьЗначенияСвойств(ДанныеСправки, ДанныеСотрудника);
	
	СведенияОДоходах = Новый Массив;
	КлючиТЧСведенияОДоходах = "";
	Для каждого РеквизитТЧ Из МетаданныеСправки.ТабличныеЧасти.СведенияОДоходах.Реквизиты Цикл
		КлючиТЧСведенияОДоходах = ?(ПустаяСтрока(КлючиТЧСведенияОДоходах), "", КлючиТЧСведенияОДоходах + ",") + РеквизитТЧ.Имя;
	КонецЦикла;

	Для каждого СтрокаСведений Из СтрокиСведенийОДоходах Цикл
		СтруктураСведений = Новый Структура(КлючиТЧСведенияОДоходах);
		ЗаполнитьЗначенияСвойств(СтруктураСведений, СтрокаСведений);
		СведенияОДоходах.Добавить(СтруктураСведений);
	КонецЦикла;
	ДанныеСправки.Вставить("МассивСведенийОДоходах", СведенияОДоходах);
			
	СведенияОВычетах = Новый Массив;
	КлючиТЧСведенияОВычетах = "";
	Для каждого РеквизитТЧ Из МетаданныеСправки.ТабличныеЧасти.СведенияОВычетах.Реквизиты Цикл
		КлючиТЧСведенияОВычетах = ?(ПустаяСтрока(КлючиТЧСведенияОВычетах), "", КлючиТЧСведенияОВычетах + ",") + РеквизитТЧ.Имя;
	КонецЦикла;

	Для каждого СтрокаСведений Из СтрокиСведенийОВычетах Цикл
		СтруктураСведений = Новый Структура(КлючиТЧСведенияОВычетах);
		ЗаполнитьЗначенияСвойств(СтруктураСведений, СтрокаСведений);
		СведенияОВычетах.Добавить(СтруктураСведений);
	КонецЦикла;
	ДанныеСправки.Вставить("МассивСведенийОВычетах", СведенияОВычетах);
	
	ДанныеСправки.Вставить("ДокументПроведен", Форма.ДокументПроведен);
	
	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Массив;
	КонецЕсли;
	
	ДанныеСправки.Вставить("Дата", Форма.Объект.Дата);
	ДанныеСправки.Вставить("НомерСправки", НомерСправки);
	ДанныеСправки.Вставить("Ставка", Ставка);
	ДанныеСправки.Вставить("НоваяСтрока", НоваяСтрока);
	
	ДанныеСправки.Вставить("ОшибкиДанныхСправки", Ошибки);
	ДанныеСправки.Вставить("НеВключатьДоходыПоЦеннымБумагам", НеВключатьДоходыПоЦеннымБумагам);
		
	Возврат	ПоместитьВоВременноеХранилище(ДанныеСправки, Новый УникальныйИдентификатор());
		
КонецФункции

Процедура ДляНалогаНаПрибыльПрочитатьДанныеОДоходахИНалогахСотрудника(Форма, СправкаПоСотруднику, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, ДатаДокумента, Организация, НомерСправки, Ставка) Экспорт
								
	СправкаПоСотруднику.ФиксНалоги = Ложь;
		
	ДанныеСправок = Новый Массив;
	ДанныеСправок.Добавить(СправкаПоСотруднику);
	
	ДляНалогаНаПрибыльПрочитатьДанныеОДоходахИНалогах(ДанныеСправок, 
										СведенияОДоходах, 
										СведенияОВычетах, 
										НалоговыйПериод, 
										ДатаДокумента, 
										Организация,
										НомерСправки,
										Ставка);
										
КонецПроцедуры	

Процедура ДляНалогаНаПрибыльПрочитатьДанные(ДанныеСправок, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, ДатаДокумента, Организация,  ОбновлятьНеФиксированныеДанные = Истина) Экспорт
																	
	СправкиНДФЛПрочитатьДанныеСотрудников(ДанныеСправок, НалоговыйПериод, ДатаДокумента, ОбновлятьНеФиксированныеДанные);
		
	СправкиСНефиксированнымиСведениямиОНалогах = Новый Массив;
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		Если Не ДанныеСправкиПоСотруднику.ФиксНалоги Тогда
			СправкиСНефиксированнымиСведениямиОНалогах.Добавить(ДанныеСправкиПоСотруднику);
		КонецЕсли;	
	КонецЦикла;	
	
	ДляНалогаНаПрибыльПрочитатьДанныеОДоходахИНалогах(СправкиСНефиксированнымиСведениямиОНалогах, 
										    СведенияОДоходах, 
										    СведенияОВычетах, 
											НалоговыйПериод, 
											ДатаДокумента, 
											Организация);
											
КонецПроцедуры									

Процедура ДляНалогаНаПрибыльПрочитатьДанныеОДоходахИНалогах(ДанныеСправок, СведенияОДоходах, СведенияОВычетах, НалоговыйПериод, ДатаДокумента, Организация, НомерСправки = Неопределено, Ставка = Неопределено) Экспорт
								
	Сотрудники = Новый Массив;	
	СправкиПоСотрудникам = Новый Соответствие;
	
	Для Каждого ДанныеСправкиПоСотруднику Из ДанныеСправок Цикл
		
		Если Сотрудники.Найти(ДанныеСправкиПоСотруднику.Сотрудник) = Неопределено Тогда
			Сотрудники.Добавить(ДанныеСправкиПоСотруднику.Сотрудник);
			СправкиПоСотрудникам.Вставить(ДанныеСправкиПоСотруднику.Сотрудник, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеСправкиПоСотруднику));
		Иначе
			СправкиПоСотрудникам[ДанныеСправкиПоСотруднику.Сотрудник].Добавить(ДанныеСправкиПоСотруднику)
		КонецЕсли;
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл 
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "ОбщаяСуммаДохода", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "ОблагаемаяСуммаДохода", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Исчислено", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Удержано", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Перечислено", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "Задолженность", 0);
			УчетНДФЛКлиентСервер.СправкиНДФЛУстановитьЗначениеПоляИтоговПоСтавке(ДанныеСправкиПоСотруднику, СтавкаНДФЛ, "ИзлишнеУдержано", 0);
		КонецЦикла;	

	КонецЦикла;	
	
	ДанныеДоходахНалогахВычетах = УчетНДФЛ.ДанныеОДоходахНалогахВычетах(Сотрудники, НалоговыйПериод, Организация, Неопределено, КонецДня(ДатаДокумента) + 1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.Ставка,
	|	Доходы.КодДохода,
	|	Доходы.КодВычета КАК КодВычета,
	|	Доходы.СуммаДохода,
	|	Доходы.СуммаВычета КАК СуммаВычета,
	|	Доходы.Сотрудник
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	&ДоходыПоМесяцам КАК Доходы
	|ГДЕ
	|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вычеты.КодВычета,
	|	Вычеты.СуммаВычета,
	|	Вычеты.Сотрудник
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	&Вычеты КАК Вычеты
	|ГДЕ
	|	Вычеты.ГруппаВычета В (ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Стандартные), ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей))
	|	И Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.Ставка,
	|	Налоги.ОбщаяСуммаДохода,
	|	Налоги.ОблагаемаяСуммаДохода,
	|	Налоги.Исчислено,
	|	Налоги.Удержано,
	|	Налоги.Перечислено,
	|	Налоги.Задолженность,
	|	Налоги.ИзлишнеУдержано,
	|	Налоги.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Налоги.Сотрудник
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	&Налоги КАК Налоги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Налоги.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
	|	СУММА(Налоги.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
	|	СУММА(Налоги.Исчислено) КАК Исчислено,
	|	СУММА(Налоги.Удержано) КАК Удержано,
	|	СУММА(Налоги.Перечислено) КАК Перечислено,
	|	СУММА(Налоги.Задолженность) КАК Задолженность,
	|	СУММА(Налоги.ИзлишнеУдержано) КАК ИзлишнеУдержано,
	|	Налоги.Ставка,
	|	Налоги.Сотрудник
	|ИЗ
	|	ВТНалоги КАК Налоги
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Налоги.ВключатьВДекларациюПоНалогуНаПрибыль
	|				ТОГДА ИСТИНА
	|			КОГДА Налоги.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|				ТОГДА ЛОЖЬ
	|			КОГДА &ДоИзмененияНалогообложенияДивидендов
	|					И Налоги.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Налоги.Сотрудник,
	|	Налоги.Ставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Ставка,
	|	Доходы.КодДохода,
	|	Доходы.КодВычета,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
	|	Доходы.Сотрудник
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Ставка,
	|	Доходы.КодДохода,
	|	Доходы.КодВычета,
	|	Доходы.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вычеты.КодВычета,
	|	Вычеты.СуммаВычета,
	|	Вычеты.Сотрудник
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоходыИВычеты.Сотрудник,
	|	ДоходыИВычеты.Ставка,
	|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
	|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		Доходы.Ставка КАК Ставка,
	|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
	|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
	|		Доходы.Сотрудник КАК Сотрудник
	|	ИЗ
	|		ВТДоходы КАК Доходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
	|		0,
	|		-Вычеты.СуммаВычета,
	|		Вычеты.Сотрудник
	|	ИЗ
	|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИВычеты.Сотрудник,
	|	ДоходыИВычеты.Ставка";
	Запрос.УстановитьПараметр("ДоходыПоМесяцам", ДанныеДоходахНалогахВычетах.Доходы);
	Запрос.УстановитьПараметр("Вычеты", ДанныеДоходахНалогахВычетах.Вычеты);
	Запрос.УстановитьПараметр("Налоги", ДанныеДоходахНалогахВычетах.Налоги);
	Запрос.УстановитьПараметр("ДоИзмененияНалогообложенияДивидендов", НалоговыйПериод < Год(УчетНДФЛ.ДатаИзмененияНалогообложенияДивидендов()));
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоРезультатов = Результаты.Количество();
	
	ДанныеДоходахНалогахВычетах.Налоги = Результаты[ВсегоРезультатов - 4].Выгрузить();
	ДанныеДоходахНалогахВычетах.Доходы = Результаты[ВсегоРезультатов - 3].Выгрузить();
	ДанныеДоходахНалогахВычетах.Вычеты = Результаты[ВсегоРезультатов - 2].Выгрузить();
	ИтогиБазы = Результаты[ВсегоРезультатов - 1].Выгрузить();
	Если НомерСправки = Неопределено Тогда
		Для Каждого СтрокаДанныхОДоходах Из ДанныеДоходахНалогахВычетах.Доходы Цикл
			СправкиПоСотруднику = СправкиПоСотрудникам[СтрокаДанныхОДоходах.Сотрудник];
			СправкаДляЗаполнения = Неопределено;
			Для каждого ДанныеСправки Из СправкиПоСотруднику Цикл
				Если ДанныеСправки.Ставка = СтрокаДанныхОДоходах.Ставка Тогда
					СправкаДляЗаполнения = ДанныеСправки
				КонецЕсли;
			КонецЦикла;
			Если СправкаДляЗаполнения <> Неопределено Тогда
				СтрокаДоходовСправки = СведенияОДоходах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДоходовСправки, СтрокаДанныхОДоходах);
				СтрокаДоходовСправки.НомерСправки = СправкаДляЗаполнения.НомерСправки;
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаДанныхОВычетах Из ДанныеДоходахНалогахВычетах.Вычеты Цикл
			СправкиПоСотруднику = СправкиПоСотрудникам[СтрокаДанныхОДоходах.Сотрудник];
			СправкаДляЗаполнения = Неопределено;
			Для каждого ДанныеСправки Из СправкиПоСотруднику Цикл
				Если ДанныеСправки.Ставка = Перечисления.НДФЛСтавки.Ставка13 Тогда
					СправкаДляЗаполнения = ДанныеСправки
				КонецЕсли;
			КонецЦикла;
			Если СправкаДляЗаполнения <> Неопределено Тогда
				СтрокаВычетовСправки = СведенияОВычетах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВычетовСправки, СтрокаДанныхОВычетах);
				СтрокаВычетовСправки.НомерСправки = СправкаДляЗаполнения.НомерСправки;
			КонецЕсли;
		КонецЦикла;	
	Иначе
		Для Каждого СтрокаДанныхОДоходах Из ДанныеДоходахНалогахВычетах.Доходы Цикл
			Если СтрокаДанныхОДоходах.Ставка = Ставка Тогда
				СтрокаДоходовСправки = СведенияОДоходах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДоходовСправки, СтрокаДанныхОДоходах);
			КонецЕсли;
		КонецЦикла;
		Если Ставка = Перечисления.НДФЛСтавки.Ставка13 Тогда
			Для Каждого СтрокаДанныхОВычетах Из ДанныеДоходахНалогахВычетах.Вычеты Цикл
				СтрокаВычетовСправки = СведенияОВычетах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВычетовСправки, СтрокаДанныхОВычетах);
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;	
	
	СтруктураПоиска = Новый Структура("Сотрудник, Ставка");
	Для Каждого СтрокаИтогов Из ДанныеДоходахНалогахВычетах.Налоги Цикл
		СправкиПоСотруднику = СправкиПоСотрудникам[СтрокаИтогов.Сотрудник];
		Для каждого ДанныеСправки Из СправкиПоСотруднику Цикл
			ЗаполнятьСправку = Ложь;
			Если ЗначениеЗаполнено(Ставка) Тогда
				ЗаполнятьСправку = СтрокаИтогов.Ставка = Ставка
			Иначе
				ЗаполнятьСправку = СтрокаИтогов.Ставка = ДанныеСправки.Ставка
			КонецЕсли;
			Если ЗаполнятьСправку Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаИтогов);
				СтрокиИтоговБазы = ИтогиБазы.НайтиСтроки(СтруктураПоиска);
				Если СтрокиИтоговБазы.Количество() > 0 Тогда
					УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокиИтоговБазы[0], "ОбщаяСуммаДохода");
					УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокиИтоговБазы[0], "ОблагаемаяСуммаДохода");
				КонецЕсли;
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Исчислено");
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Удержано");
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Перечислено");
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "Задолженность");
				УчетНДФЛКлиентСервер.СправкиНДФЛЗаполнитьПолеИтогов(ДанныеСправки, СтрокаИтогов, "ИзлишнеУдержано");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры	

#Область ПанельПримененныеВычеты

Процедура ЗаполнитьПредставлениеВычетовНаДетейИИмущественныхСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты)
	
	ВычетыНаДетейИИмущественные = ОписаниеПанелиВычеты.НастраиваемыеПанели.Получить("ВычетыНаДетейИИмущественные");
	Если ВычетыНаДетейИИмущественные <> Неопределено Тогда
		
		СтрокаНДФЛ.ПредставлениеВычетовНаДетейИИмущественных = 0;
		ДанныеВычетовНаДетейИИмущественных = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
			Форма, ВычетыНаДетейИИмущественные);
			
		ДанныеПоСтрокеНДФЛ = ДанныеВычетовНаДетейИИмущественных.НайтиСтроки(Новый Структура("ИдентификаторСтрокиНДФЛ", СтрокаНДФЛ.ИдентификаторСтрокиНДФЛ));
		Для каждого СтрокаДанныхВычетов Из ДанныеПоСтрокеНДФЛ Цикл
			УчетНДФЛКлиентСервер.ДополнитьПредставлениеВычетов(СтрокаНДФЛ.ПредставлениеВычетовНаДетейИИмущественных, СтрокаДанныхВычетов.КодВычета, СтрокаДанныхВычетов.РазмерВычета);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеВычетовКДоходамСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты)
	
	ВычетыКДоходам = ОписаниеПанелиВычеты.НастраиваемыеПанели.Получить("ВычетыКДоходам");
	Если ВычетыКДоходам <> Неопределено Тогда
		
		СтрокаНДФЛ.ПредставлениеВычетовКДоходам = 0;
		
		ДанныеВычетовКДоходам = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(
			Форма, ВычетыКДоходам);
			
		СтруктураОтбораВычетыПримененныеКДоходам = Новый Структура("ФизическоеЛицо,Подразделение,ВычетПримененныйКДоходам");
		ЗаполнитьЗначенияСвойств(СтруктураОтбораВычетыПримененныеКДоходам, СтрокаНДФЛ);
		
		СтруктураОтбораВычетыПримененныеКДоходам.ВычетПримененныйКДоходам = Истина;
		
		ДанныеПоСтрокеНДФЛ = ДанныеВычетовКДоходам.НайтиСтроки(СтруктураОтбораВычетыПримененныеКДоходам);
		Для каждого СтрокаДанныхВычетов Из ДанныеПоСтрокеНДФЛ Цикл
			УчетНДФЛКлиентСервер.ДополнитьПредставлениеВычетов(СтрокаНДФЛ.ПредставлениеВычетовКДоходам, СтрокаДанныхВычетов.КодВычета, СтрокаДанныхВычетов.СуммаВычета);
		КонецЦикла;
		
	КонецЕсли; 
			
КонецПроцедуры

Процедура ЗаполнитьПредставленияВычетовСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты) Экспорт
	
	УчетНДФЛКлиентСервер.ЗаполнитьПредставлениеВычетовЛичныхСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты);
	ЗаполнитьПредставлениеВычетовНаДетейИИмущественныхСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты);
	ЗаполнитьПредставлениеВычетовКДоходамСтрокиНДФЛ(Форма, СтрокаНДФЛ, ОписаниеПанелиВычеты);
		
КонецПроцедуры

Процедура ОбновитьПредставлениеВычетовНаДетейИИмущественныхСтрокиНДФЛ(Форма) Экспорт
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаСервере();
	Если ОписаниеПанелиВычеты.НастраиваемыеПанели.Получить("ВычетыНаДетейИИмущественные") <> Неопределено Тогда
		
		НДФЛТекущиеДанные = УчетНДФЛКлиентСервер.НДФЛТекущиеДанные(Форма, ОписаниеПанелиВычеты);
		ЗаполнитьПредставлениеВычетовНаДетейИИмущественныхСтрокиНДФЛ(Форма, НДФЛТекущиеДанные, ОписаниеПанелиВычеты);
		
		Форма[ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты + "ПредставлениеВычетовНаДетейИИмущественных"] = НДФЛТекущиеДанные["ПредставлениеВычетовНаДетейИИмущественных"];
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбновитьПредставлениеВычетовКДоходамСтрокиНДФЛ(Форма) Экспорт
	
	ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаСервере();
	Если ОписаниеПанелиВычеты.НастраиваемыеПанели.Получить("ВычетыКДоходам") <> Неопределено Тогда
		
		НДФЛТекущиеДанные = УчетНДФЛКлиентСервер.НДФЛТекущиеДанные(Форма, ОписаниеПанелиВычеты);
		ЗаполнитьПредставлениеВычетовКДоходамСтрокиНДФЛ(Форма, НДФЛТекущиеДанные, ОписаниеПанелиВычеты);
		
		Форма[ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты + "ПредставлениеВычетовКДоходам"] = НДФЛТекущиеДанные["ПредставлениеВычетовКДоходам"];
		
	КонецЕсли; 
	
КонецПроцедуры

Функция МассивСвязейПараметровВыбораВычетовНДФЛ(ОписаниеПанелиВычеты) Экспорт
	
	Возврат УчетНДФЛФормыВнутренний.МассивСвязейПараметровВыбораВычетовНДФЛ(ОписаниеПанелиВычеты);
	
КонецФункции

#КонецОбласти

#КонецОбласти
