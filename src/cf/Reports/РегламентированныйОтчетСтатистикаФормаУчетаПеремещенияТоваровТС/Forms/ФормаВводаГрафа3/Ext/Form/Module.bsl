
&НаКлиенте
Перем Оповестить;
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтвЛицоФинУр 			          = Параметры.ОтвЛицоФинУр;
	ОтвЛицоФинУрИндекс                = Параметры.ОтвЛицоФинУрИндекс;
	ОтвЛицоФинУрНаименование          = Параметры.ОтвЛицоФинУрНаименование;
	ОтвЛицоФинУрНаселенныйПункт 	  = Параметры.ОтвЛицоФинУрНаселенныйПункт;
	ОтвЛицоФинУрОбласть 			  = Параметры.ОтвЛицоФинУрОбласть;
	ОтвЛицоФинУрПасВидДок 			  = Параметры.ОтвЛицоФинУрПасВидДок;	
	ОтвЛицоФинУрПасДатаДок 			  = Параметры.ОтвЛицоФинУрПасДатаДок;
	ОтвЛицоФинУрПасНаименование		  = Параметры.ОтвЛицоФинУрПасНаименование;
	ОтвЛицоФинУрПасНомерДок 		  = Параметры.ОтвЛицоФинУрПасНомерДок;
	ОтвЛицоФинУрПасОрг 			      = Параметры.ОтвЛицоФинУрПасОрг;
	ОтвЛицоФинУрПодИндекс 		      = Параметры.ОтвЛицоФинУрПодИндекс;
	ОтвЛицоФинУрПодНаименование 	  = Параметры.ОтвЛицоФинУрПодНаименование;
	ОтвЛицоФинУрПодНаселенныйПункт    = Параметры.ОтвЛицоФинУрПодНаселенныйПункт;
	ОтвЛицоФинУрПодОбласть 		      = Параметры.ОтвЛицоФинУрПодОбласть;
	ОтвЛицоФинУрПодРФ_ИНН          	  = Параметры.ОтвЛицоФинУрПодРФ_ИНН;
	ОтвЛицоФинУрПодРФ_КПП             = Параметры.ОтвЛицоФинУрПодРФ_КПП;
	ОтвЛицоФинУрПодРФ_ОГРН 			  = Параметры.ОтвЛицоФинУрПодРФ_ОГРН;
	ОтвЛицоФинУрПодСтранаКод 		  = Параметры.ОтвЛицоФинУрПодСтранаКод;
	ОтвЛицоФинУрПодСтранаНаименование = Параметры.ОтвЛицоФинУрПодСтранаНаименование;	
	ОтвЛицоФинУрПодУлицаНомерДома 	  = Параметры.ОтвЛицоФинУрПодУлицаНомерДома;
	ОтвЛицоФинУрРФ_ИНН			      = Параметры.ОтвЛицоФинУрРФ_ИНН;
	ОтвЛицоФинУрРФ_КПП 		          = Параметры.ОтвЛицоФинУрРФ_КПП;
	ОтвЛицоФинУрРФ_ОГРН 			  = Параметры.ОтвЛицоФинУрРФ_ОГРН;
	ОтвЛицоФинУрСтранаКод 		      = Параметры.ОтвЛицоФинУрСтранаКод;
	ОтвЛицоФинУрСтранаНаименование    = Параметры.ОтвЛицоФинУрСтранаНаименование;
	ОтвЛицоФинУрУлицаНомерДома        = Параметры.ОтвЛицоФинУрУлицаНомерДома;

	
	СтруктураРеквизитов = Новый Структура;
	МассивРеквизитов = ПолучитьРеквизиты();
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Если Реквизит.Имя <> "СтруктураРеквизитов" И Реквизит.Имя <> "ВидыУдостЛичности" Тогда
			СтруктураРеквизитов.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	ОтвЛицоФинУрПриИзменении(Неопределено);
	
	СтранаКодУмолч  = "RU";
	СтранаНаимУмолч = "РОССИЯ";	
	ОтвЛицоФинУрСтранаКод = СтранаКодУмолч;  
	ОтвЛицоФинУрСтранаНаименование = СтранаНаимУмолч;
	ОтвЛицоФинУрПодСтранаКод = СтранаКодУмолч;
	ОтвЛицоФинУрПодСтранаНаименование = СтранаНаимУмолч;  
	
	Если ПустаяСтрока(ОтвЛицоФинУрПасНаименование) Тогда
		 СтрокаПасРФ = ВидыУдостЛичности.НайтиСтроки(Новый Структура("Кратко", "ПасРФ"));
		 Если СтрокаПасРФ <> Неопределено Тогда
	  		 ОтвЛицоФинУрПасВидДок = СтрокаПасРФ[0].Код; 
			 ОтвЛицоФинУрПасНаименование = СтрокаПасРФ[0].Кратко;
		 КонецЕсли;
	КонецЕсли;
	 
	Модифицированность = Ложь;
	Оповестить = Ложь;
	
 КонецПроцедуры

&НаКлиенте
Процедура КнопкаОКНажатие(Команда)
	    	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершениеПродолжение", ЭтотОбъект);
	ПрименитьИзменения(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Применить изменения?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,  РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;
				
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершениеПродолжение", ЭтотОбъект);
		ПрименитьИзменения(ОписаниеОповещения);
				
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершениеПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Истина Тогда
		
		Модифицированность = Ложь;
		Закрыть(СтруктураРеквизитов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПустуюСтруктуруРеквизитов() Экспорт
	
	ПустаяСтруктураРеквизитовФормы = Новый Структура;
		
	Для Каждого ЭлементФормы Из ЭтаФорма.Элементы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") Тогда
			Если ЗначениеЗаполнено(ЭлементФормы.ПутьКДанным) Тогда
				
				ПустаяСтруктураРеквизитовФормы.Вставить(ЭлементФормы.ПутьКДанным);
								
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПустаяСтруктураРеквизитовФормы;
	
КонецФункции	

&НаКлиенте
Процедура ПрименитьИзменения(ВыполняемоеОповещение)
		
	РеквСтрокаСообщения	= "";
		
	Для Каждого РеквизитФормы Из СтруктураРеквизитов Цикл
						
		СтруктураРеквизитов[РеквизитФормы.Ключ] = ЭтаФорма[РеквизитФормы.Ключ];
								
		//Проверка на заполненность полей, обязательных к заполнению
		Если ТипЗнч(Элементы[РеквизитФормы.Ключ]) = Тип("ПолеФормы") Тогда
			Если Элементы[РеквизитФормы.Ключ].Видимость И Элементы[РеквизитФормы.Ключ].АвтоОтметкаНезаполненного Тогда
				Если НЕ ЗначениеЗаполнено(СтруктураРеквизитов[РеквизитФормы.Ключ]) Тогда
							
					ПредставлениеРекв = Элементы[РеквизитФормы.Ключ].Заголовок;
					Если Найти(СтруктураРеквизитов[РеквизитФормы.Ключ], "ПасНаим") > 0 Тогда
						ПредставлениеРекв = "Док., удост. личн. (кратко)";
					КонецЕсли; 
					РеквСтрокаСообщения = РеквСтрокаСообщения + ?(ПустаяСтрока(РеквСтрокаСообщения), "", "," + Символы.ПС) + """" + ПредставлениеРекв + """";
							 
				КонецЕсли;	
			КонецЕсли; 
		КонецЕсли;		
			
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(РеквСтрокаСообщения) Тогда 
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не заполнены поля, обязательные к заполнению: %1 %1%2. %1 %1 Продолжить редактирование ?'"), Символы.ПС, РеквСтрокаСообщения);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрименитьИзмененияЗавершение", ЭтотОбъект, ВыполняемоеОповещение);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;		

	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзмененияЗавершение(Ответ, ВыполняемоеОповещение) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Ложь);
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);	
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОтвЛицоФинУрПриИзменении(Элемент)
	
	УстановкаДляОРГ = Ложь;
	УстановкаДляПОД = Ложь;
	УстановкаДляИНД = Ложь;
	УстановкаДляФЛ  = Ложь;
	
	Если ОтвЛицоФинУр = "ОРГ" Тогда
	
		УстановкаДляОРГ = Истина;
		
	ИначеЕсли ОтвЛицоФинУр = "ПОД" Тогда
		
		УстановкаДляПОД = Истина;
		
	ИначеЕсли ОтвЛицоФинУр = "ИНД" Тогда
		
		УстановкаДляИНД = Истина;
		
	ИначеЕсли ОтвЛицоФинУр = "ФЛ_" Тогда
		
		УстановкаДляФЛ = Истина;
		
	Иначе
		
		ОтвЛицоФинУр = "ОРГ";
		УстановкаДляОРГ = Истина;
		
	КонецЕсли; 
	
	ОтвЛицоФинУрРФ_ИННПриИзменении(Неопределено);
	ОтвЛицоФинУрРФ_ОГРНПриИзменении(Неопределено);
	
	Элементы.ОтвЛицоФинУрНаименование.КнопкаВыбора = НЕ УстановкаДляПОД;
 
	Элементы.ОтвЛицоФинУрРФ_ОГРН.Видимость = НЕ УстановкаДляФЛ;
	Элементы.ОтвЛицоФинУрРФ_КПП.Видимость = УстановкаДляОРГ ИЛИ УстановкаДляПОД;
	
	Элементы.ОтвЛицоФинУрПасВидДок.Видимость = УстановкаДляФЛ;
	Элементы.ОтвЛицоФинУрПасНаименование.Видимость = УстановкаДляФЛ;
	Элементы.ОтвЛицоФинУрПасНомерДок.Видимость = УстановкаДляФЛ;
	Элементы.ОтвЛицоФинУрПасДатаДок.Видимость = УстановкаДляФЛ;
	Элементы.ОтвЛицоФинУрПасОрг.Видимость = УстановкаДляФЛ;
	
	Элементы.ОтвЛицоФинУрПодНаименование.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодИндекс.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодСтранаКод.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодСтранаНаименование.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодОбласть.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодНаселенныйПункт.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодУлицаНомерДома.Видимость = УстановкаДляПОД;
	
	Элементы.ОтвЛицоФинУрПодРФ_ОГРН.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодРФ_ИНН.Видимость = УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодРФ_КПП.Видимость = УстановкаДляПОД;
	
	Элементы.ОтвЛицоФинУрПодРФ_ОГРН.Доступность = НЕ УстановкаДляПОД;
	Элементы.ОтвЛицоФинУрПодРФ_ИНН.Доступность = НЕ УстановкаДляПОД;
	
	Модифицированность = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрРФ_ИННПриИзменении(Элемент)
	
	Если ОтвЛицоФинУр = "ПОД" Тогда
		ОтвЛицоФинУрПодРФ_ИНН  = ОтвЛицоФинУрРФ_ИНН;
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрРФ_ОГРНПриИзменении(Элемент)
	
	Если ОтвЛицоФинУр = "ПОД" Тогда
		ОтвЛицоФинУрПодРФ_ОГРН = ОтвЛицоФинУрРФ_ОГРН;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",                      "Выберите документ, удостоверяющий личность");
	ПараметрыФормы.Вставить("ТаблицаЗначений",                ВидыУдостЛичности);
	ПараметрыФормы.Вставить("СтруктураДляПоиска",             Новый Структура("Кратко", ОтвЛицоФинУрПасНаименование));
	ПараметрыФормы.Вставить("НаимКолонкиНазвание",            "Наименование");
	ПараметрыФормы.Вставить("ВключитьВидимостьКолонкиКратко", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтвЛицоФинУрПасНаименованиеНачалоВыбораЗавершение", ЭтотОбъект);

	ОткрытьФорму("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	 
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНаименованиеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> Неопределено Тогда
        ОтвЛицоФинУрПасВидДок = Результат["Код"];
        ОтвЛицоФинУрПасНаименование = Результат["Кратко"];
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрНаименованиеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрИндексПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрОбластьПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрНаселенныйПунктПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрУлицаНомерДомаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрРФ_КПППриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодНаименованиеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодИндексПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодОбластьПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодНаселенныйПунктПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодУлицаНомерДомаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодРФ_ИННПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодРФ_КПППриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодРФ_ОГРНПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНаименованиеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНомерДокПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасДатаДокПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасОргПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

// Обработка выбора адресной информации из справочников
&НаКлиенте
Процедура ОтвЛицоФинУрНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяСправочникаДляВыбора = "Контрагенты";
	Если ОтвЛицоФинУр = "ФЛ_" Тогда
		ИмяСправочникаДляВыбора = "ФизическиеЛица";
	КонецЕсли;	
	
	Если НЕ ВладелецФормы.СуществуетСправочник(ИмяСправочникаДляВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Неопределено;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтвЛицоФинУрПодНаименованиеНачалоВыбораЗавершение", ЭтотОбъект, ИмяСправочникаДляВыбора);
	ВладелецФормы.ПолучитьСведенияИзСправочника(Элемент.ТекстРедактирования, ИмяСправочникаДляВыбора, ВыбранноеЗначение, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрНаименованиеНачалоВыбораЗавершение(СтруктураВозврата, ИмяСправочникаДляВыбора) Экспорт 
	
	СтруктураСведений = СтруктураВозврата.СтруктураСведений;
	ВыбранноеЗначение = СтруктураВозврата.ВыбранноеЗначение;
		
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТСНаКлиенте(СтруктураСведений.Адрес);
	
	ОтвЛицоФинУрНаименование = СтруктураСведений.Наименование;

	ОтвЛицоФинУрИндекс  =  СтруктураАдреса.Индекс;
	//ПолучательСтранаКод  = СтруктураАдреса.СтранаКод;
	//ПолучательСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтвЛицоФинУрОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрУлицаНомерДома = СтруктураАдреса.УлицаНомерДома; 
	
	ОтвЛицоФинУрРФ_ИНН  = СтруктураСведений.ИНН;
	ОтвЛицоФинУрРФ_КПП  = СтруктураСведений.КПП;
	//ОтвЛицоФинУрРФ_ОГРН = СтруктураСведений.ОГРН;
	
	Если ИмяСправочникаДляВыбора = "ФизическиеЛица" Тогда
		ПаспортРФСтрока = ВидыУдостЛичности.НайтиСтроки(Новый Структура("Кратко", "ПасРФ"));
		Если ПаспортРФСтрока <> Неопределено Тогда
			ОтвЛицоФинУрПасВидДок = ПаспортРФСтрока[0].Код; 
			ОтвЛицоФинУрПасНаименование = ПаспортРФСтрока[0].Кратко;
		КонецЕсли; 
		ОтвЛицоФинУрПасНомерДок = "";
		ОтвЛицоФинУрПасДатаДок  = "";
		ОтвЛицоФинУрПасОрг      = ""; 
		
		Удостоверения = "";
		Если СтруктураСведений.Свойство("Удостоверения", Удостоверения) Тогда
			ИныеДокументыСтрока = ВидыУдостЛичности.НайтиСтроки(Новый Структура("Кратко", "ИныеДк"));
			РезультатПоиска = Неопределено;
			СтрокаПоиска = СтрЗаменить(СокрЛП(Удостоверения.ВидДокумента), "Российской Федерации", "РФ");
			Для Каждого ВидУдостЛичности Из ВидыУдостЛичности Цикл
				Если Найти(ВидУдостЛичности.Наименование, СтрокаПоиска) > 0 Тогда
					РезультатПоиска = ВидУдостЛичности;
					Прервать;
				КонецЕсли; 
			КонецЦикла;	
			Если РезультатПоиска = Неопределено Тогда
				РезультатПоиска = ИныеДокументыСтрока;
			КонецЕсли;
			Если РезультатПоиска <> Неопределено Тогда
				ОтвЛицоФинУрПасВидДок = РезультатПоиска.Код; 
				ОтвЛицоФинУрПасНаименование = РезультатПоиска.Кратко;
			КонецЕсли;
			ОтвЛицоФинУрПасНомерДок = "Серия:" + Удостоверения.Серия + " №:" + Удостоверения.Номер;
			ОтвЛицоФинУрПасДатаДок  = Удостоверения.ДатаВыдачи;
			ОтвЛицоФинУрПасОрг   = Удостоверения.КемВыдан; 
		КонецЕсли;	
					
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ИмяСправочникаДляВыбора = "Контрагенты";
	
	Если НЕ ВладелецФормы.СуществуетСправочник(ИмяСправочникаДляВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Неопределено;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтвЛицоФинУрПодНаименованиеНачалоВыбораЗавершение", ЭтотОбъект, ИмяСправочникаДляВыбора);
	ВладелецФормы.ПолучитьСведенияИзСправочника(Элемент.ТекстРедактирования, ИмяСправочникаДляВыбора, ВыбранноеЗначение, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПодНаименованиеНачалоВыбораЗавершение(СтруктураВозврата, ИмяСправочникаДляВыбора) Экспорт 
	
	СтруктураСведений = СтруктураВозврата.СтруктураСведений;
	ВыбранноеЗначение = СтруктураВозврата.ВыбранноеЗначение;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТСНаКлиенте(СтруктураСведений.Адрес);
	
	ОтвЛицоФинУрПодНаименование = СтруктураСведений.Наименование;

	ОтвЛицоФинУрПодИндекс  =  СтруктураАдреса.Индекс;
	//ПолучательСтранаКод  = СтруктураАдреса.СтранаКод;
	//ПолучательСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтвЛицоФинУрПодОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрПодНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрПодУлицаНомерДома = СтруктураАдреса.УлицаНомерДома; 
	
	ОтвЛицоФинУрПодРФ_ИНН  = СтруктураСведений.ИНН;
	ОтвЛицоФинУрПодРФ_КПП  = СтруктураСведений.КПП;
	ОтвЛицоФинУрПодРФ_ОГРН = СтруктураСведений.ОГРН;
	
	Если НЕ ВладелецФормы.ЕстьРеквизитСправочника(ИмяСправочникаДляВыбора, "ГоловнойКонтрагент") Тогда
		Возврат;
	КонецЕсли;
	
	ГоловнаяОрганизация = ПолучитьГоловнойКонтрагент(ИмяСправочникаДляВыбора, ВыбранноеЗначение);
	
	Если ГоловнаяОрганизация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "АдрЮР");   // Юридический адрес
	
	ДатаПодписи = Неопределено;
	
	ОргСведения = ВладелецФормы.ПолучитьСведенияОКонтрагенте(ГоловнаяОрганизация, ДатаПодписи, Сведения);
	
	Адрес = "";
	ОргСведения.Свойство("АдрЮР", Адрес);
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТСНаКлиенте(Адрес);
	
	ОтвЛицоФинУрИндекс  =  СтруктураАдреса.Индекс;
	//ПолучательСтранаКод  = СтруктураАдреса.СтранаКод;
	//ПолучательСтранаНаименование = СтруктураАдреса.СтранаНаименование;
	ОтвЛицоФинУрОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрУлицаНомерДома = СтруктураАдреса.УлицаНомерДома;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьГоловнойКонтрагент(ИмяСправочникаДляВыбора, ВыбранноеЗначение)
	
	Если ВыбранноеЗначение.ГоловнойКонтрагент.Пустая() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ГоловнаяОрганизация = ВыбранноеЗначение.ГоловнойКонтрагент;
	
	ОтвЛицоФинУрНаименование =  ГоловнаяОрганизация.НаименованиеПолное;
	ОтвЛицоФинУрРФ_ИНН  = ГоловнаяОрганизация.ИНН;
	ОтвЛицоФинУрРФ_КПП  = ГоловнаяОрганизация.КПП;
	
	Возврат ГоловнаяОрганизация; 
		
КонецФункции
