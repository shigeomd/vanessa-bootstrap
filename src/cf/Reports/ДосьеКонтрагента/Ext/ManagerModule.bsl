#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ДанныеОтчета = Новый Структура("Контрагент,ОписаниеОшибки", ПараметрыОтчета.Контрагент, "");
	
	ЭтоЮридическоеЛицо = СтрДлина(ПараметрыОтчета.ИНН) = 10;
	Если ЭтоЮридическоеЛицо Тогда
		ИнформацияОСвязях = СервисДанныхЕдиныхГосРеестров.ИнформацияОСвязяхЮридическогоЛицаПоИНН(ПараметрыОтчета.ИНН);
	Иначе
		ИнформацияОСвязях = СервисДанныхЕдиныхГосРеестров.ИнформацияОСвязяхПредпринимателяПоИНН(ПараметрыОтчета.ИНН);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИнформацияОСвязях.ОписаниеОшибки) Тогда
		ДанныеОтчета.ОписаниеОшибки = ИнформацияОСвязях.ОписаниеОшибки;
		ПоместитьВоВременноеХранилище(ДанныеОтчета, АдресХранилища);
		Возврат;
	КонецЕсли;
	
	ПолучитьСостояниеКонтрагентаПоДаннымЕГРН(ИнформацияОСвязях);
	
	ДополнитьИнформациюОКонтрагентеДаннымиИБ(ИнформацияОСвязях, ДанныеОтчета);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ПараметрыВывода   = Новый Структура;
	ПараметрыВывода.Вставить("ОбластиМакета",      ВсеОбластиМакета());
	ПараметрыВывода.Вставить("ОбластиРасшифровки", НоваяТаблицаОбластиРасшифровки());
	ПараметрыВывода.Вставить("ЭтоЮридическоеЛицо", ЭтоЮридическоеЛицо);
	
	ВывестиРазделНаименование(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделРегистрация(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделРеквизиты(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделРасчетныеСчета(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделВидыДеятельности(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделЛицензии(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделЮридическийАдрес(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделПочтовыйАдрес(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделКонтакты(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделУставныйКапитал(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделРуководитель(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделУчрежденныеФирмы(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделУчредители(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделПодразделения(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ВывестиРазделИзмененияВРеестре(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода);
	
	ДанныеОтчета.Вставить("НайденныйИНН",         ИнформацияОСвязях.ИНН);
	ДанныеОтчета.Вставить("ТабличныйДокумент",    ТабличныйДокумент);
	ДанныеОтчета.Вставить("ОбластиРасшифровки",   ПараметрыВывода.ОбластиРасшифровки);
	ДанныеОтчета.Вставить("ИспользуемоеИмяФайла", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Досье контрагента %1'"),
		ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИнформацияОСвязях.НаименованиеСокращенное, "")));
	
	ПоместитьВоВременноеХранилище(ДанныеОтчета, АдресХранилища);
	
КонецПроцедуры 

#Область ВыводРазделовОтчета

Процедура ВывестиРазделНаименование(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)
	
	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	
	ОбластиМакета.Наименование.Параметры.НаименованиеСокращенное = ИнформацияОСвязях.НаименованиеСокращенное;
	Если ИнформацияОСвязях.НаименованиеСокращенное <> ИнформацияОСвязях.НаименованиеПолное Тогда
		ОбластиМакета.Наименование.Параметры.НаименованиеПолное = ИнформацияОСвязях.НаименованиеПолное;
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластиМакета.Наименование);
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);

КонецПроцедуры

Процедура ВывестиРазделРегистрация(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)
	
	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	ОбластиМакета.Регистрация.Параметры.ДатаРегистрации = Формат(ИнформацияОСвязях.ДатаРегистрации, "ДЛФ=D");
	ТабличныйДокумент.Вывести(ОбластиМакета.Регистрация);
	Если ИнформацияОСвязях.КодСтатуса <> Неопределено Тогда
	
		Если ИнформацияОСвязях.КодСтатуса = "001" Тогда
			Если ЭтоЮридическоеЛицо Тогда
				ОбластиМакета.ДействующаяОрганизация.Параметры.ДействующаяОрганизация =
					НСтр("ru='Действующая организация (по данным ЕГРЮЛ)'");
			Иначе
				ОбластиМакета.ДействующаяОрганизация.Параметры.ДействующаяОрганизация =
					НСтр("ru='Действующий ИП (по данным ЕГРИП)'");
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластиМакета.ДействующаяОрганизация);
		Иначе
			Если ЭтоЮридическоеЛицо Тогда
				ОбластиМакета.НедействующаяОрганизация.Параметры.НедействующаяОрганизация =
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='%1 (по данным ЕГРЮЛ)'"),
						ИнформацияОСвязях.НаименованиеСтатуса);
			Иначе
				ОбластиМакета.НедействующаяОрганизация.Параметры.НедействующаяОрганизация =
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='%1 (по данным ЕГРИП)'"),
						ИнформацияОСвязях.НаименованиеСтатуса);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластиМакета.НедействующаяОрганизация);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОСвязях.СостояниеПоДаннымЕГРН) Тогда
	
		Если ИнформацияОСвязях.СостояниеПоДаннымЕГРН = Перечисления.СостоянияСуществованияКонтрагента.Действует Тогда
			Если ЭтоЮридическоеЛицо Тогда
				ОбластиМакета.ДействующаяОрганизация.Параметры.ДействующаяОрганизация =
					НСтр("ru='Организация есть в базе ЕГРН'");
			Иначе
				ОбластиМакета.ДействующаяОрганизация.Параметры.ДействующаяОрганизация =
					НСтр("ru='ИП есть в базе ЕГРН'");
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластиМакета.ДействующаяОрганизация);
		Иначе
			Если НЕ ЭтоЮридическоеЛицо 
				И ИнформацияОСвязях.СостояниеПоДаннымЕГРН = Перечисления.СостоянияСуществованияКонтрагента.ПрекратилДеятельность Тогда
				ОбластиМакета.НедействующаяОрганизация.Параметры.НедействующаяОрганизация = НСтр("ru='Не действует (по данным ЕГРН)'");
			Иначе
				ОбластиМакета.НедействующаяОрганизация.Параметры.НедействующаяОрганизация =
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='%1 (по данным ЕГРН)'"),
						ИнформацияОСвязях.СостояниеПоДаннымЕГРН);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластиМакета.НедействующаяОрганизация);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ИнформацияОСвязях.РегистрацияВНалоговомОргане <> Неопределено 
		ИЛИ ИнформацияОСвязях.РегистрацияВПенсионномФонде <> Неопределено
		ИЛИ ИнформацияОСвязях.РегистрацияВФСС <> Неопределено Тогда
		
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "Регистрация", 0);
		
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "Регистрация";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Если ИнформацияОСвязях.РегистрацияВНалоговомОргане <> Неопределено Тогда
				ДатаРегистрации = Формат(ИнформацияОСвязях.РегистрацияВНалоговомОргане.ДатаРегистрации, "ДЛФ=D");
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.ДатаРегистрации = ДатаРегистрации;
				ГосударственныйОрган = ИнформацияОСвязях.РегистрацияВНалоговомОргане.Наименование;
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.ГосударственныйОрган = ГосударственныйОрган;
				ТабличныйДокумент.Вывести(ОбластиМакета.РегистрацияВГосОрганах);
			КонецЕсли;
			Если ИнформацияОСвязях.РегистрацияВПенсионномФонде <> Неопределено Тогда
				ДатаРегистрации = Формат(ИнформацияОСвязях.РегистрацияВПенсионномФонде.ДатаРегистрации, "ДЛФ=D");
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.ДатаРегистрации = ДатаРегистрации;
				ГосударственныйОрган = ИнформацияОСвязях.РегистрацияВПенсионномФонде.НаименованиеОрганаПФР;
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.ГосударственныйОрган = ГосударственныйОрган;
				РегистрационныйНомер = ИнформацияОСвязях.РегистрацияВПенсионномФонде.РегистрационныйНомерПФР;
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.РегистрационныйНомер = РегистрационныйНомер;
				ТабличныйДокумент.Вывести(ОбластиМакета.РегистрацияВГосОрганах);
			КонецЕсли;
			Если ИнформацияОСвязях.РегистрацияВФСС <> Неопределено Тогда
				ДатаРегистрации = Формат(ИнформацияОСвязях.РегистрацияВФСС.ДатаРегистрации, "ДЛФ=D");
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.ДатаРегистрации = ДатаРегистрации;
				ГосударственныйОрган = ИнформацияОСвязях.РегистрацияВФСС.НаименованиеОрганаФСС;
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.ГосударственныйОрган = ГосударственныйОрган;
				РегистрационныйНомер = ИнформацияОСвязях.РегистрацияВФСС.РегистрационныйНомерФСС;
				ОбластиМакета.РегистрацияВГосОрганах.Параметры.РегистрационныйНомер = РегистрационныйНомер;
				ТабличныйДокумент.Вывести(ОбластиМакета.РегистрацияВГосОрганах);
			КонецЕсли;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "Регистрация");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);

КонецПроцедуры

Процедура ВывестиРазделРеквизиты(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
		ОбластиМакета.РеквизитыЮридическогоЛица.Параметры.Заполнить(ИнформацияОСвязях);
		ТабличныйДокумент.Вывести(ОбластиМакета.РеквизитыЮридическогоЛица);
	Иначе
		ОбластиМакета.РеквизитыПредпринимателя.Параметры.Заполнить(ИнформацияОСвязях);
		ТабличныйДокумент.Вывести(ОбластиМакета.РеквизитыПредпринимателя);
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
	
КонецПроцедуры

Процедура ВывестиРазделРасчетныеСчета(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	КоличествоРасчетныхСчетов = ИнформацияОСвязях.РасчетныеСчета.Количество();
	Если КоличествоРасчетныхСчетов > 0 Тогда
		
		// Расчетный счет 1
		СтрокаРасчетногоСчета = ИнформацияОСвязях.РасчетныеСчета[0];
		ОбластиМакета.РасчетныеСчета.Параметры.Банк = СтрокаРасчетногоСчета.Банк;
		ТабличныйДокумент.Вывести(ОбластиМакета.РасчетныеСчета);
		БанковскиеРеквизиты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			?(ЗначениеЗаполнено(СтрокаРасчетногоСчета.КоррСчет),
				НСтр("ru='р/с %1, БИК %2, корр. счет %3'"),
				НСтр("ru='р/с %1, БИК %2'")),
			СтрокаРасчетногоСчета.НомерСчета,
			СтрокаРасчетногоСчета.БИК,
			СтрокаРасчетногоСчета.КоррСчет);
		ОбластиМакета.РасчетныеСчетаРеквизиты.Параметры.БанковскиеРеквизиты = БанковскиеРеквизиты;
		ТабличныйДокумент.Вывести(ОбластиМакета.РасчетныеСчетаРеквизиты);
		
		// Еще расчетные счета
		
		Если КоличествоРасчетныхСчетов = 2 Тогда
			
			// Расчетный счет 2
			СтрокаРасчетногоСчета = ИнформацияОСвязях.РасчетныеСчета[1];
			ОбластиМакета.ЕщеРасчетныеСчета.Параметры.Банк = СтрокаРасчетногоСчета.Банк;
			ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеРасчетныеСчета);
			БанковскиеРеквизиты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				?(ЗначениеЗаполнено(СтрокаРасчетногоСчета.КоррСчет),
					НСтр("ru='р/с %1, БИК %2, корр. счет %3'"),
					НСтр("ru='р/с %1, БИК %2'")),
				СтрокаРасчетногоСчета.НомерСчета,
				СтрокаРасчетногоСчета.БИК,
				СтрокаРасчетногоСчета.КоррСчет);
			ОбластиМакета.РасчетныеСчетаРеквизиты.Параметры.БанковскиеРеквизиты = БанковскиеРеквизиты;
			ТабличныйДокумент.Вывести(ОбластиМакета.РасчетныеСчетаРеквизиты);
			
		ИначеЕсли КоличествоРасчетныхСчетов > 2 Тогда
			
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "РасчетныеСчета", КоличествоРасчетныхСчетов);
		
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "РасчетныеСчета";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Для НомерСтроки = 2 По КоличествоРасчетныхСчетов Цикл
				// Расчетные счета 2 - N
				СтрокаРасчетногоСчета = ИнформацияОСвязях.РасчетныеСчета[НомерСтроки - 1];
				ОбластиМакета.ЕщеРасчетныеСчета.Параметры.Банк = СтрокаРасчетногоСчета.Банк;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеРасчетныеСчета);
				БанковскиеРеквизиты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					?(ЗначениеЗаполнено(СтрокаРасчетногоСчета.КоррСчет),
						НСтр("ru='р/с %1, БИК %2, корр. счет %3'"),
						НСтр("ru='р/с %1, БИК %2'")),
					СтрокаРасчетногоСчета.НомерСчета,
					СтрокаРасчетногоСчета.БИК,
					СтрокаРасчетногоСчета.КоррСчет);
				ОбластиМакета.РасчетныеСчетаРеквизиты.Параметры.БанковскиеРеквизиты = БанковскиеРеквизиты;
				ТабличныйДокумент.Вывести(ОбластиМакета.РасчетныеСчетаРеквизиты);
			КонецЦикла;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "РасчетныеСчета");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель); 
		
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиРазделВидыДеятельности(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	КоличествоВидовДеятельности = ИнформацияОСвязях.ВидыДеятельности.Количество();
	Если КоличествоВидовДеятельности > 0 Тогда
		
		// Вид деятельности 1
		КлассификаторОКВЭД = ОбщегоНазначенияБПВызовСервера.ПолучитьКлассификатор("ОКВЭД");
		КодОКВЭД           = ИнформацияОСвязях.ВидыДеятельности[0].КодОКВЭД;
		НаименованиеОКВЭД  = КлассификаторОКВЭД.Получить(КодОКВЭД);
		ОбластиМакета.ВидыДеятельности.Параметры.КодОКВЭД          = КодОКВЭД;
		ОбластиМакета.ВидыДеятельности.Параметры.НаименованиеОКВЭД = НаименованиеОКВЭД;
		ТабличныйДокумент.Вывести(ОбластиМакета.ВидыДеятельности);
		
		// Еще виды деятельности
		
		Если КоличествоВидовДеятельности = 2 Тогда
			
			// Вид деятельности 2
			КодОКВЭД          = ИнформацияОСвязях.ВидыДеятельности[1].КодОКВЭД;
			НаименованиеОКВЭД = КлассификаторОКВЭД.Получить(КодОКВЭД);
			ОбластиМакета.ЕщеВидыДеятельности.Параметры.КодОКВЭД          = КодОКВЭД;
			ОбластиМакета.ЕщеВидыДеятельности.Параметры.НаименованиеОКВЭД = НаименованиеОКВЭД;
			ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеВидыДеятельности);
			
		ИначеЕсли КоличествоВидовДеятельности > 2 Тогда
			
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "ВидыДеятельности", КоличествоВидовДеятельности);
			
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "ВидыДеятельности";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Для НомерСтроки = 2 По КоличествоВидовДеятельности Цикл
				// Виды деятельности 2 - N
				КодОКВЭД          = ИнформацияОСвязях.ВидыДеятельности[НомерСтроки - 1].КодОКВЭД;
				НаименованиеОКВЭД = КлассификаторОКВЭД.Получить(КодОКВЭД);
				ОбластиМакета.ЕщеВидыДеятельности.Параметры.КодОКВЭД          = КодОКВЭД;
				ОбластиМакета.ЕщеВидыДеятельности.Параметры.НаименованиеОКВЭД = НаименованиеОКВЭД;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеВидыДеятельности);
			КонецЦикла;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "ВидыДеятельности");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель); 
		
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиРазделЛицензии(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	КоличествоЛицензий = ИнформацияОСвязях.Лицензии.Количество();
	Если КоличествоЛицензий > 0 Тогда
		
		// Лицензия 1
		СтрокаЛицензии  = ИнформацияОСвязях.Лицензии[0];
		ОбластиМакета.Лицензии.Параметры.Лицензия = СтрокаЛицензии.Лицензия;
		ТабличныйДокумент.Вывести(ОбластиМакета.Лицензии);
		Если НЕ ПустаяСтрока(СтрокаЛицензии.ОписаниеЛицензии) Тогда
			ОбластиМакета.ЛицензииОписание.Параметры.ОписаниеЛицензии = СтрокаЛицензии.ОписаниеЛицензии;
			ТабличныйДокумент.Вывести(ОбластиМакета.ЛицензииОписание);
		КонецЕсли;
		
		// Еще лицензии
		
		Если КоличествоЛицензий = 2 Тогда
			
			// Лицензия 2
			СтрокаЛицензии = ИнформацияОСвязях.Лицензии[1];
			ОбластиМакета.ЕщеЛицензии.Параметры.Лицензия = СтрокаЛицензии.Лицензия;
			ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеЛицензии);
			Если НЕ ПустаяСтрока(СтрокаЛицензии.ОписаниеЛицензии) Тогда
				ОбластиМакета.ЛицензииОписание.Параметры.ОписаниеЛицензии = СтрокаЛицензии.ОписаниеЛицензии;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЛицензииОписание);
			КонецЕсли;
			
		ИначеЕсли КоличествоЛицензий > 2 Тогда
			
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "Лицензии", КоличествоЛицензий);
		
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "Лицензии";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Для НомерСтроки = 2 По КоличествоЛицензий Цикл
				// Лицензии 2 - N
				СтрокаЛицензии = ИнформацияОСвязях.Лицензии[НомерСтроки-1];
				ОбластиМакета.ЕщеЛицензии.Параметры.Лицензия = СтрокаЛицензии.Лицензия;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеЛицензии);
				Если НЕ ПустаяСтрока(СтрокаЛицензии.ОписаниеЛицензии) Тогда
					ОбластиМакета.ЛицензииОписание.Параметры.ОписаниеЛицензии = СтрокаЛицензии.ОписаниеЛицензии;
					ТабличныйДокумент.Вывести(ОбластиМакета.ЛицензииОписание);
				КонецЕсли;
			КонецЦикла;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "Лицензии");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель); 
		
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиРазделЮридическийАдрес(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если НЕ ЭтоЮридическоеЛицо Тогда
		Возврат;
	КонецЕсли;
			
	ОбластиМакета.ЮридическийАдрес.Параметры.ЮридическийАдрес = ИнформацияОСвязях.ЮридическийАдрес.Представление;
	ТабличныйДокумент.Вывести(ОбластиМакета.ЮридическийАдрес);
	
	// Еще организации, зарегистрированные по этому юридическому адресу
	
	КоличествоОрганизаций = ИнформацияОСвязях.ОрганизацииПоАдресу.Количество();
	Если КоличествоОрганизаций > 0 Тогда
		
		// Сколько всего
		ИнформацияОСвязях.ОрганизацииПоАдресу.Сортировать("НаименованиеОрганизации");
		СколькоЕщеОрганизаций = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='По этому адресу %1 еще %2 %3:'"),
			?(КоличествоОрганизаций % 10 = 1 И НЕ КоличествоОрганизаций % 100 = 11, 
				НСтр("ru='зарегистрирована'"),
				НСтр("ru='зарегистрированы'")),
			Формат(КоличествоОрганизаций, "ЧГ="),
			?(КоличествоОрганизаций % 10 = 1 И Цел(КоличествоОрганизаций/10) <> 1, 
				НСтр("ru='организация'"),
				?(КоличествоОрганизаций % 10 > 1 И КоличествоОрганизаций % 10 < 5 И Цел(КоличествоОрганизаций/10) <> 1, 
					НСтр("ru='организации'"),
					НСтр("ru='организаций'"))));
		ОбластиМакета.СколькоЕщеОрганизаций.Параметры.СколькоЕщеОрганизаций = СколькоЕщеОрганизаций;
		ТабличныйДокумент.Вывести(ОбластиМакета.СколькоЕщеОрганизаций);
		
		// Организация 1
		ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
			ИнформацияОСвязях.ОрганизацииПоАдресу[0]);
		
		Если КоличествоОрганизаций = 2 Тогда
			
			// Организация 2
			ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
				ИнформацияОСвязях.ОрганизацииПоАдресу[1]);
			
		ИначеЕсли КоличествоОрганизаций > 2 Тогда
			
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "ОрганизацииПоАдресу", КоличествоОрганизаций);
		
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "ОрганизацииПоАдресу";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Для НомерСтроки = 2 По КоличествоОрганизаций Цикл
				// Организации 2 - N
				ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
					ИнформацияОСвязях.ОрганизацииПоАдресу[НомерСтроки-1]);
			КонецЦикла;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "ОрганизацииПоАдресу");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
	
КонецПроцедуры

Процедура ВывестиРазделПочтовыйАдрес(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЗначениеЗаполнено(ИнформацияОСвязях.ПочтовыйАдрес) 
		И (НЕ ЭтоЮридическоеЛицо 
		ИЛИ ИнформацияОСвязях.ПочтовыйАдрес <> ИнформацияОСвязях.ЮридическийАдрес.Представление) Тогда
		
		ОбластиМакета.ПочтовыйАдрес.Параметры.ПочтовыйАдрес = ИнформацияОСвязях.ПочтовыйАдрес;
		ТабличныйДокумент.Вывести(ОбластиМакета.ПочтовыйАдрес);
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРазделКонтакты(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	КоличествоКонтактов = ИнформацияОСвязях.КонтактныеЛица.Количество();
	Если КоличествоКонтактов > 0 Тогда
		
		// Контактное лицо 1
		СтрокаКонтактногоЛица = ИнформацияОСвязях.КонтактныеЛица[0];
		ОбластиМакета.Контакты.Параметры.КонтактноеЛицо = СтрокаКонтактногоЛица.Представление;
		ТабличныйДокумент.Вывести(ОбластиМакета.Контакты);
		
		Если КоличествоКонтактов = 2 Тогда
			
			// Контактное лицо 2
			СтрокаКонтактногоЛица = ИнформацияОСвязях.КонтактныеЛица[1];
			ОбластиМакета.ЕщеКонтакты.Параметры.КонтактноеЛицо = СтрокаКонтактногоЛица.Представление;
			ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеКонтакты);
			
		ИначеЕсли КоличествоКонтактов > 2 Тогда
			
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "КонтактныеЛица", КоличествоКонтактов);
		
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "КонтактныеЛица";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Для НомерСтроки = 2 По КоличествоКонтактов Цикл
				// Контактные лица 2 - N
				СтрокаКонтактногоЛица = ИнформацияОСвязях.КонтактныеЛица[НомерСтроки - 1];
				ОбластиМакета.ЕщеКонтакты.Параметры.КонтактноеЛицо = СтрокаКонтактногоЛица.Представление;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеКонтакты);
			КонецЦикла;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "КонтактныеЛица");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРазделУставныйКапитал(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо
		И ИнформацияОСвязях.УставныйКапитал > 0 Тогда
		
		ОбластиМакета.УставныйКапитал.Параметры.УставныйКапитал = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 руб.'"),
			Формат(ИнформацияОСвязях.УставныйКапитал, "ЧДЦ="));
		ТабличныйДокумент.Вывести(ОбластиМакета.УставныйКапитал);
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРазделРуководитель(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
		ВыводитьСекциюРуководитель = ЗначениеЗаполнено(ИнформацияОСвязях.Руководитель);
	Иначе
		ВыводитьСекциюРуководитель = ИнформацияОСвязях.ОрганизацииГдеРуководитель.Количество() > 0
			ИЛИ ИнформацияОСвязях.ОрганизацииГдеУчредитель.Количество() > 0;
	КонецЕсли;
		
	Если ВыводитьСекциюРуководитель Тогда
			
		Если ЭтоЮридическоеЛицо Тогда
			Руководитель = ИнформацияОСвязях.Руководитель.Представление;
			Если ЗначениеЗаполнено(ИнформацияОСвязях.Телефон) Тогда
				Руководитель = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='%1, тел. %2'"),
					Руководитель,
					ИнформацияОСвязях.Телефон.Представление);
			КонецЕсли;
			ДолжностьРуководителя = ИнформацияОСвязях.Руководитель.Должность;
			Если ЗначениеЗаполнено(ИнформацияОСвязях.Руководитель.ДатаЗаписи) Тогда
				ДолжностьРуководителя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='%1 с %2'"),
					ДолжностьРуководителя,
					Формат(ИнформацияОСвязях.Руководитель.ДатаЗаписи, "ДЛФ=D"));
			КонецЕсли;
			ОбластиМакета.Руководитель.Параметры.Руководитель          = Руководитель;
			ОбластиМакета.Руководитель.Параметры.ДолжностьРуководителя = ДолжностьРуководителя;
			ТабличныйДокумент.Вывести(ОбластиМакета.Руководитель);
		Иначе
			ОбластиМакета.Предприниматель.Параметры.Предприниматель = ИнформацияОСвязях.Наименование;
			ТабличныйДокумент.Вывести(ОбластиМакета.Предприниматель);
		КонецЕсли;
	
		// Организации, где еще этот руководитель (предприниматель) является руководителем
		
		КоличествоОрганизаций = ИнформацияОСвязях.ОрганизацииГдеРуководитель.Количество();
		Если КоличествоОрганизаций > 0 Тогда
			
			// Сколько всего
			ИнформацияОСвязях.ОрганизацииГдеРуководитель.Сортировать("НаименованиеОрганизации");
			СколькоЕщеОрганизаций = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				?(ЭтоЮридическоеЛицо, 
					НСтр("ru='Является руководителем еще в %1 %2%3:'"), 
					НСтр("ru='Является руководителем в %1 %2%3:'")),
				Формат(КоличествоОрганизаций, "ЧГ="),
				?(КоличествоОрганизаций % 10 = 1 И НЕ КоличествоОрганизаций % 100 = 11, 
					НСтр("ru='организации'"),
					НСтр("ru='организациях'")),
				?(ИнформацияОСвязях.ОрганизацииГдеРуководительПоФИО,
					НСтр("ru=' (поиск проведен по ФИО и может быть неточным)'"),
					""));
			ОбластиМакета.СколькоЕщеОрганизаций.Параметры.СколькоЕщеОрганизаций = СколькоЕщеОрганизаций;
			ТабличныйДокумент.Вывести(ОбластиМакета.СколькоЕщеОрганизаций);
			
			// Организация 1
			ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
				ИнформацияОСвязях.ОрганизацииГдеРуководитель[0]);
			
			Если КоличествоОрганизаций = 2 Тогда
				
				// Организация 2
				ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
					ИнформацияОСвязях.ОрганизацииГдеРуководитель[1]);
				
			ИначеЕсли КоличествоОрганизаций > 2 Тогда
				
				// Свернуто
				ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "ОрганизацииГдеРуководитель", КоличествоОрганизаций);
			
				// Развернуто
				СтрокаОбласти = ОбластиРасшифровки.Добавить();
				СтрокаОбласти.ИмяОбласти   = "ОрганизацииГдеРуководитель";
				СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
				Для НомерСтроки = 2 По КоличествоОрганизаций Цикл
					// Организации 2 - N
					ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
						ИнформацияОСвязях.ОрганизацииГдеРуководитель[НомерСтроки-1]);
				КонецЦикла;
				Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "ОрганизацииГдеРуководитель");
				ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
				ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
				СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
				ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		// Организации, где еще этот руководитель (предприниматель) является учредителем
		
		КоличествоОрганизаций = ИнформацияОСвязях.ОрганизацииГдеУчредитель.Количество();
		Если КоличествоОрганизаций > 0 Тогда
			
			// Сколько всего
			ИнформацияОСвязях.ОрганизацииГдеУчредитель.Сортировать("НаименованиеОрганизации");
			ВыводитьЕще = ЭтоЮридическоеЛицо 
				И ((ЗначениеЗаполнено(ИнформацияОСвязях.Руководитель.ИНН)
				И ИнформацияОСвязях.Учредители.Найти(ИнформацияОСвязях.Руководитель.ИНН, "ИНН") <> Неопределено)
				ИЛИ (НЕ ЗначениеЗаполнено(ИнформацияОСвязях.Руководитель.ИНН)
				И ИнформацияОСвязях.Учредители.Найти(ИнформацияОСвязях.Руководитель.Представление, "Учредитель") <> Неопределено));
			СколькоЕщеОрганизаций = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				?(ВыводитьЕще, 
					НСтр("ru='Является учредителем еще в %1 %2%3:'"), 
					НСтр("ru='Является учредителем в %1 %2%3:'")),
				Формат(КоличествоОрганизаций, "ЧГ="),
				?(КоличествоОрганизаций % 10 = 1 И НЕ КоличествоОрганизаций % 100 = 11, 
					НСтр("ru='организации'"),
					НСтр("ru='организациях'")),
				?(ИнформацияОСвязях.ОрганизацииГдеУчредительПоФИО,
					НСтр("ru=' (поиск проведен по ФИО и может быть неточным)'"),
					""));
			ОбластиМакета.СколькоЕщеОрганизаций.Параметры.СколькоЕщеОрганизаций = СколькоЕщеОрганизаций;
			ТабличныйДокумент.Вывести(ОбластиМакета.СколькоЕщеОрганизаций);
			
			// Организация 1
			ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизацииГдеУчредитель", 
				ИнформацияОСвязях.ОрганизацииГдеУчредитель[0]);
			
			Если КоличествоОрганизаций = 2 Тогда
				
				// Организация 2
				ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизацииГдеУчредитель", 
					ИнформацияОСвязях.ОрганизацииГдеУчредитель[1]);
				
			ИначеЕсли КоличествоОрганизаций > 2 Тогда
				
				// Свернуто
				ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "ОрганизацииГдеУчредитель", КоличествоОрганизаций);
				
				// Развернуто
				СтрокаОбласти = ОбластиРасшифровки.Добавить();
				СтрокаОбласти.ИмяОбласти   = "ОрганизацииГдеУчредитель";
				СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
				Для НомерСтроки = 2 По КоличествоОрганизаций Цикл
					// Организации 2 - N
					ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизацииГдеУчредитель", 
						ИнформацияОСвязях.ОрганизацииГдеУчредитель[НомерСтроки - 1]);
				КонецЦикла;
				Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "ОрганизацииГдеУчредитель");
				ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
				ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
				СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
				ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
	
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиРазделУчрежденныеФирмы(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
			
		КоличествоОрганизаций = ИнформацияОСвязях.УчрежденныеФирмы.Количество();
		Если КоличествоОрганизаций > 0 Тогда
				
			ИнформацияОСвязях.УчрежденныеФирмы.Сортировать("НаименованиеОрганизации");
			
			// Организация 1
			ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "УчрежденныеФирмы", 
				ИнформацияОСвязях.УчрежденныеФирмы[0]);
			
			Если КоличествоОрганизаций = 2 Тогда
				
				// Организация 2
				ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеУчрежденныеФирмы", 
					ИнформацияОСвязях.УчрежденныеФирмы[1]);
				
			ИначеЕсли КоличествоОрганизаций > 2 Тогда
				
				// Свернуто
				ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "УчрежденныеФирмы", КоличествоОрганизаций);
				
				// Развернуто
				СтрокаОбласти = ОбластиРасшифровки.Добавить();
				СтрокаОбласти.ИмяОбласти   = "УчрежденныеФирмы";
				СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
				Для НомерСтроки = 2 По КоличествоОрганизаций Цикл
					// Организации 2 - N
					ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеУчрежденныеФирмы", 
						ИнформацияОСвязях.УчрежденныеФирмы[НомерСтроки - 1]);
				КонецЦикла;
				Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "УчрежденныеФирмы");
				ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
				ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
				СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
				ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиРазделУчредители(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
				
		КоличествоУчредителей = ИнформацияОСвязях.Учредители.Количество();
		Если КоличествоУчредителей > 0 Тогда
			
			Для НомерУчредителя = 1 По КоличествоУчредителей Цикл
				
				// Учредитель
				
				ПрефиксОбластиРасшифровки = "Учредитель" + Формат(НомерУчредителя, "ЧГ=");
				
				СтрокаУчредителя = ИнформацияОСвязях.Учредители[НомерУчредителя - 1];
				Если НомерУчредителя > 1 Тогда
					ТабличныйДокумент.Вывести(ОбластиМакета.РазделительСтрокСписка);
				КонецЕсли;
				ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, ?(НомерУчредителя = 1, "Учредители", "ЕщеУчредители"), 
					СтрокаУчредителя);
				
				// Организации, где еще этот учредитель является руководителем
			
				КоличествоОрганизаций = СтрокаУчредителя.ОрганизацииГдеРуководитель.Количество();
				Если КоличествоОрганизаций > 0 Тогда
					
					// Сколько всего
					СтрокаУчредителя.ОрганизацииГдеРуководитель.Сортировать("НаименованиеОрганизации");
					ИмяОбластиРасшифровки = ПрефиксОбластиРасшифровки + "ОрганизацииГдеРуководитель";
					ВыводитьЕще = ИнформацияОСвязях.Руководитель <> Неопределено
						И ((ЗначениеЗаполнено(ИнформацияОСвязях.Руководитель.ИНН)
						И СтрокаУчредителя.ИНН = ИнформацияОСвязях.Руководитель.ИНН)
						ИЛИ (НЕ ЗначениеЗаполнено(ИнформацияОСвязях.Руководитель.ИНН)
						И СтрокаУчредителя.Учредитель = ИнформацияОСвязях.Руководитель.Представление));
					СколькоЕщеОрганизаций = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						?(ВыводитьЕще,
							НСтр("ru='Является руководителем еще в %1 %2%3:'"),
							НСтр("ru='Является руководителем в %1 %2%3:'")),
						Формат(КоличествоОрганизаций, "ЧГ="),
						?(КоличествоОрганизаций % 10 = 1 И НЕ КоличествоОрганизаций % 100 = 11, 
							НСтр("ru='организации'"),
							НСтр("ru='организациях'")),
						?(СтрокаУчредителя.ОрганизацииГдеРуководительПоФИО,
							НСтр("ru=' (поиск проведен по ФИО и может быть неточным)'"),
							""));
					ОбластиМакета.СколькоЕщеОрганизаций.Параметры.СколькоЕщеОрганизаций = СколькоЕщеОрганизаций;
					ТабличныйДокумент.Вывести(ОбластиМакета.СколькоЕщеОрганизаций);
					
					// Организация 1
					ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
						СтрокаУчредителя.ОрганизацииГдеРуководитель[0]);
					
					Если КоличествоОрганизаций = 2 Тогда
						
						// Организация 2
						ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
							СтрокаУчредителя.ОрганизацииГдеРуководитель[1]);
						
					ИначеЕсли КоличествоОрганизаций > 2 Тогда
						
						// Свернуто
						ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, ИмяОбластиРасшифровки, КоличествоОрганизаций);
					
						// Развернуто
						СтрокаОбласти = ОбластиРасшифровки.Добавить();
						СтрокаОбласти.ИмяОбласти   = ИмяОбластиРасшифровки;
						СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
						Для НомерСтроки = 2 По КоличествоОрганизаций Цикл
							// Организации 2 - N
							ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизации", 
								СтрокаУчредителя.ОрганизацииГдеРуководитель[НомерСтроки-1]);
						КонецЦикла;
						Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", ИмяОбластиРасшифровки);
						ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
						ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
						СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
						ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
						
					КонецЕсли;
					
				КонецЕсли;
				
				// Организации, где еще этот учредитель является учредителем
			
				КоличествоОрганизаций = СтрокаУчредителя.ОрганизацииГдеУчредитель.Количество();
				Если КоличествоОрганизаций > 0 Тогда
					
					// Сколько всего
					СтрокаУчредителя.ОрганизацииГдеУчредитель.Сортировать("НаименованиеОрганизации");
					ИмяОбластиРасшифровки = ПрефиксОбластиРасшифровки + "ОрганизацииГдеУчредитель";
					СколькоЕщеОрганизаций = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Является учредителем еще в %1 %2%3:'"),
						Формат(КоличествоОрганизаций, "ЧГ="),
						?(КоличествоОрганизаций % 10 = 1 И НЕ КоличествоОрганизаций % 100 = 11, 
							НСтр("ru='организации'"),
							НСтр("ru='организациях'")),
						?(СтрокаУчредителя.ОрганизацииГдеУчредительПоФИО,
							НСтр("ru=' (поиск проведен по ФИО и может быть неточным)'"),
							""));
					ОбластиМакета.СколькоЕщеОрганизаций.Параметры.СколькоЕщеОрганизаций = СколькоЕщеОрганизаций;
					ТабличныйДокумент.Вывести(ОбластиМакета.СколькоЕщеОрганизаций);
					
					// Организация 1
					ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизацииГдеУчредитель", 
						СтрокаУчредителя.ОрганизацииГдеУчредитель[0]);
					
					Если КоличествоОрганизаций = 2 Тогда
						
						// Организация 2
						ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизацииГдеУчредитель", 
							СтрокаУчредителя.ОрганизацииГдеУчредитель[1]);
						
					ИначеЕсли КоличествоОрганизаций > 2 Тогда
						
						// Свернуто
						ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, ИмяОбластиРасшифровки, КоличествоОрганизаций);
					
						// Развернуто
						СтрокаОбласти = ОбластиРасшифровки.Добавить();
						СтрокаОбласти.ИмяОбласти   = ИмяОбластиРасшифровки;
						СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
						Для НомерСтроки = 2 По КоличествоОрганизаций Цикл
							// Организации 2 - N
							ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, "ЕщеОрганизацииГдеУчредитель", 
								СтрокаУчредителя.ОрганизацииГдеУчредитель[НомерСтроки - 1]);
						КонецЦикла;
						Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", ИмяОбластиРасшифровки);
						ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
						ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
						СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
						ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
						
					КонецЕсли;
		
				КонецЕсли;
				
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель); 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРазделПодразделения(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
					
		КоличествоПодразделений = ИнформацияОСвязях.Подразделения.Количество();
		Если КоличествоПодразделений > 0 Тогда
			
			// Подразделение 1
			СтрокаПодразделения = ИнформацияОСвязях.Подразделения[0];
			ОбластиМакета.Подразделения.Параметры.ОписаниеПодразделения = СтрокаПодразделения.ОписаниеПодразделения;
			ТабличныйДокумент.Вывести(ОбластиМакета.Подразделения);
			
			// Еще подразделения
			
			Если КоличествоПодразделений = 2 Тогда
				
				// Подразделение 2
				СтрокаПодразделения = ИнформацияОСвязях.Подразделения[1];
				ОбластиМакета.ЕщеПодразделения.Параметры.ОписаниеПодразделения = СтрокаПодразделения.ОписаниеПодразделения;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеПодразделения);
				
			ИначеЕсли КоличествоПодразделений > 2 Тогда
				
				// Свернуто
				ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "Подразделения", КоличествоПодразделений);
			
				// Развернуто
				СтрокаОбласти = ОбластиРасшифровки.Добавить();
				СтрокаОбласти.ИмяОбласти   = "Подразделения";
				СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
				Для НомерСтроки = 2 По КоличествоПодразделений Цикл
					// Подразделения 2 - N
					СтрокаПодразделения = ИнформацияОСвязях.Подразделения[НомерСтроки-1];
					ОбластиМакета.ЕщеПодразделения.Параметры.ОписаниеПодразделения = СтрокаПодразделения.ОписаниеПодразделения;
					ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеПодразделения);
				КонецЦикла;
				Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "Подразделения");
				ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
				ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
				СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
				ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель); 
			
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиРазделИзмененияВРеестре(ТабличныйДокумент, ИнформацияОСвязях, ПараметрыВывода)

	ОбластиМакета = ПараметрыВывода.ОбластиМакета;
	ОбластиРасшифровки = ПараметрыВывода.ОбластиРасшифровки;
	ЭтоЮридическоеЛицо = ПараметрыВывода.ЭтоЮридическоеЛицо;
	
	КоличествоИзменений = ИнформацияОСвязях.ИзмененияВРеестре.Количество();
	Если КоличествоИзменений > 0 Тогда
		
		// Изменение 1
		СтрокаИзменения = ИнформацияОСвязях.ИзмененияВРеестре[0];
		ОбластиМакета.ИзмененияВРеестре.Параметры.ДатаИзменения = Формат(СтрокаИзменения.ДатаИзменения, "ДЛФ=D");
		ОбластиМакета.ИзмененияВРеестре.Параметры.ГосударственныйОрган = СтрокаИзменения.ГосударственныйОрган;
		ТабличныйДокумент.Вывести(ОбластиМакета.ИзмененияВРеестре);
		Если НЕ ПустаяСтрока(СтрокаИзменения.ОписаниеИзменения) Тогда
			ОбластиМакета.ИзмененияВРеестреОписание.Параметры.ОписаниеИзменения = СтрокаИзменения.ОписаниеИзменения;
			ТабличныйДокумент.Вывести(ОбластиМакета.ИзмененияВРеестреОписание);
		КонецЕсли;
		
		// Еще изменения
		
		Если КоличествоИзменений = 2 Тогда
			
			// Изменение 2
			СтрокаИзменения = ИнформацияОСвязях.ИзмененияВРеестре[1];
			ОбластиМакета.ЕщеИзмененияВРеестре.Параметры.ДатаИзменения = Формат(СтрокаИзменения.ДатаИзменения, "ДЛФ=D");
			ОбластиМакета.ЕщеИзмененияВРеестре.Параметры.ГосударственныйОрган = СтрокаИзменения.ГосударственныйОрган;
			ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеИзмененияВРеестре);
			Если НЕ ПустаяСтрока(СтрокаИзменения.ОписаниеИзменения) Тогда
				ОбластиМакета.ИзмененияВРеестреОписание.Параметры.ОписаниеИзменения = СтрокаИзменения.ОписаниеИзменения;
				ТабличныйДокумент.Вывести(ОбластиМакета.ИзмененияВРеестреОписание);
			КонецЕсли;
			
		ИначеЕсли КоличествоИзменений > 2 Тогда
			
			// Свернуто
			ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, "ИзмененияВРеестре", КоличествоИзменений);
		
			// Развернуто
			СтрокаОбласти = ОбластиРасшифровки.Добавить();
			СтрокаОбласти.ИмяОбласти   = "ИзмененияВРеестре";
			СтрокаОбласти.ПерваяСтрока = ТабличныйДокумент.ВысотаТаблицы + 1;
			Для НомерСтроки = 2 По КоличествоИзменений Цикл
				// Изменения 2 - N
				СтрокаИзменения = ИнформацияОСвязях.ИзмененияВРеестре[НомерСтроки-1];
				ОбластиМакета.ЕщеИзмененияВРеестре.Параметры.ДатаИзменения = Формат(СтрокаИзменения.ДатаИзменения, "ДЛФ=D");
				ОбластиМакета.ЕщеИзмененияВРеестре.Параметры.ГосударственныйОрган = СтрокаИзменения.ГосударственныйОрган;
				ТабличныйДокумент.Вывести(ОбластиМакета.ЕщеИзмененияВРеестре);
				Если НЕ ПустаяСтрока(СтрокаИзменения.ОписаниеИзменения) Тогда
					ОбластиМакета.ИзмененияВРеестреОписание.Параметры.ОписаниеИзменения = СтрокаИзменения.ОписаниеИзменения;
					ТабличныйДокумент.Вывести(ОбластиМакета.ИзмененияВРеестреОписание);
				КонецЕсли;
			КонецЦикла;
			Расшифровка = Новый Структура("Действие,ИмяОбласти", "Свернуть", "ИзмененияВРеестре");
			ОбластиМакета.Свернуть.Параметры.Расшифровка = Расшифровка;
			ТабличныйДокумент.Вывести(ОбластиМакета.Свернуть);
			СтрокаОбласти.ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
			ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластиМакета.Разделитель); 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура ВывестиСтрокуОбОрганизации(ТабличныйДокумент, ОбластиМакета, ИмяОбласти, СтрокаДанных)
	
	СтруктураДанных = НовыеРеквизитыОрганизации();
	ЗаполнитьЗначенияСвойств(СтруктураДанных, СтрокаДанных);
	Если ЗначениеЗаполнено(СтруктураДанных.ИНН) Тогда
		ОбластиМакета[ИмяОбласти].Параметры.Заполнить(СтруктураДанных);
		Расшифровка = Новый Структура("Действие,ИНН", "Открыть", СтруктураДанных.ИНН);
		ОбластиМакета[ИмяОбласти].Параметры.Расшифровка = Расшифровка;
		ТабличныйДокумент.Вывести(ОбластиМакета[ИмяОбласти]);
	Иначе
		ОбластиМакета[ИмяОбласти + "БезРасшифровки"].Параметры.Заполнить(СтруктураДанных);
		ТабличныйДокумент.Вывести(ОбластиМакета[ИмяОбласти + "БезРасшифровки"]);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанных.КодСтатуса) И СтруктураДанных.КодСтатуса <> "001" Тогда
		ТекОбласть = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, 2, ТабличныйДокумент.ВысотаТаблицы, 2);
		ТекОбласть.ЦветТекста = ЦветаСтиля.ЦветКонтрагентаОтсутствущегоВРеестре;
		ОбластиМакета.СтатусОрганизации.Параметры.НаименованиеСтатуса = СтруктураДанных.НаименованиеСтатуса;
		ТабличныйДокумент.Вывести(ОбластиМакета.СтатусОрганизации);
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиСтрокуОбУчредителе(ТабличныйДокумент, ОбластиМакета, ИмяОбласти, СтрокаДанных)
	
	СтруктураДанных = НовыеРеквизитыУчредителя();
	ЗаполнитьЗначенияСвойств(СтруктураДанных, СтрокаДанных);
	Если ЗначениеЗаполнено(СтруктураДанных.ПроцентКапитала) Тогда
		СтруктураДанных.ПроцентКапитала = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 %'"),
			СтруктураДанных.ПроцентКапитала);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанных.СуммаКапитала) Тогда
		СтруктураДанных.СуммаКапитала = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 руб.'"),
			СтруктураДанных.СуммаКапитала);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанных.ИНН) Тогда
		ОбластиМакета[ИмяОбласти].Параметры.Заполнить(СтруктураДанных);
		Расшифровка = Новый Структура("Действие,ИНН", "Открыть", СтруктураДанных.ИНН);
		ОбластиМакета[ИмяОбласти].Параметры.Расшифровка = Расшифровка;
		ТабличныйДокумент.Вывести(ОбластиМакета[ИмяОбласти]);
	Иначе
		ОбластиМакета[ИмяОбласти + "БезРасшифровки"].Параметры.Заполнить(СтруктураДанных);
		ТабличныйДокумент.Вывести(ОбластиМакета[ИмяОбласти + "БезРасшифровки"]);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанных.КодСтатуса) И СтруктураДанных.КодСтатуса <> "001" Тогда
		ТекОбласть = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, 2, ТабличныйДокумент.ВысотаТаблицы, 2);
		ТекОбласть.ЦветТекста = ЦветаСтиля.ЦветКонтрагентаОтсутствущегоВРеестре;
		ОбластиМакета.СтатусОрганизации.Параметры.НаименованиеСтатуса = СтруктураДанных.НаименованиеСтатуса;
		ТабличныйДокумент.Вывести(ОбластиМакета.СтатусОрганизации);
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиСтрокуЕще(ТабличныйДокумент, ОбластиМакета, ИмяОбластиРасшифровки, КоличествоВсего)
	
	Если КоличествоВсего = 0 Тогда
		ТекстЕще = НСтр("ru='Еще'");
	Иначе
		ТекстЕще = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Еще %1'"),
			КоличествоВсего - 1);
	КонецЕсли;
	ОбластиМакета.Еще.Параметры.ТекстЕще = ТекстЕще;
	Расшифровка = Новый Структура("Действие,ИмяОбласти", "Показать", ИмяОбластиРасшифровки);
	ОбластиМакета.Еще.Параметры.Расшифровка = Расшифровка;
	ТабличныйДокумент.Вывести(ОбластиМакета.Еще);

КонецПроцедуры

Процедура ДополнитьИнформациюОКонтрагентеДаннымиИБ(ИнформацияОСвязях, ДанныеОтчета)
	
	ИнформацияОСвязях.Вставить("РасчетныеСчета", НоваяТаблицаРасчетныеСчета());
	ИнформацияОСвязях.Вставить("ПочтовыйАдрес");
	ИнформацияОСвязях.Вставить("КонтактныеЛица", НоваяТаблицаКонтактныеЛица());
	
	Если НЕ ЗначениеЗаполнено(ДанныеОтчета.Контрагент) Тогда
	
		Запрос = Новый Запрос;
		Если ИнформацияОСвязях.Свойство("КПП") Тогда
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	Спр.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Спр
			|ГДЕ
			|	Спр.ИНН = &ИНН
			|	И (Спр.КПП = &КПП ИЛИ Спр.КПП = """")";
			Запрос.УстановитьПараметр("КПП", ИнформацияОСвязях.КПП);
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	Спр.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Спр
			|ГДЕ
			|	Спр.ИНН = &ИНН";
		КонецЕсли;
		Запрос.УстановитьПараметр("ИНН", ИнформацияОСвязях.ИНН);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ДанныеОтчета.Контрагент = Выборка.Ссылка;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеОтчета.Контрагент) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеОтчета.Контрагент, 
		"ОсновнойБанковскийСчет,ОсновноеКонтактноеЛицо");
	
	// Расчетные счета
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Код КАК Код,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	БанковскиеСчета.Банк.Представление КАК Банк,
	|	БанковскиеСчета.Банк.Код КАК БИК,
	|	БанковскиеСчета.Банк.КоррСчет КАК КоррСчет,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.Ссылка = &ОсновнойБанковскийСчет
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Основной
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Основной УБЫВ,
	|	Код";
	Запрос.УстановитьПараметр("Контрагент", ДанныеОтчета.Контрагент);
	Запрос.УстановитьПараметр("ОсновнойБанковскийСчет", РеквизитыКонтрагента.ОсновнойБанковскийСчет);
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		НоваяСтрока = ИнформацияОСвязях.РасчетныеСчета.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	// Почтовый адрес
	
	ИнформацияОСвязях.ПочтовыйАдрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ДанныеОтчета.Контрагент, 
		Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента);
	
	// Контактные лица
	
	СписокКонтактныхЛиц = Справочники.КонтактныеЛица.СписокКонтактныхЛиц(ДанныеОтчета.Контрагент, Ложь);
	Если СписокКонтактныхЛиц.Количество() > 0 Тогда
		Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОсновноеКонтактноеЛицо) Тогда 
			// Основное контактное лицо делаем первым
			СтрокаСписка = СписокКонтактныхЛиц.НайтиПоЗначению(РеквизитыКонтрагента.ОсновноеКонтактноеЛицо);
			Если СтрокаСписка <> Неопределено Тогда
				ИндексСтроки = СписокКонтактныхЛиц.Индекс(СтрокаСписка);
				Если ИндексСтроки > 0 Тогда
					СписокКонтактныхЛиц.Сдвинуть(СтрокаСписка, -ИндексСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		МассивЛиц = Новый Массив;
		Для каждого СтрокаСписка Из СписокКонтактныхЛиц Цикл
			МассивЛиц.Добавить(СтрокаСписка.Значение);
		КонецЦикла;
		ТаблицаКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивЛиц);
		Для каждого СтрокаСписка Из СписокКонтактныхЛиц Цикл
			НоваяСтрока = ИнформацияОСвязях.КонтактныеЛица.Добавить();
			НоваяСтрока.Ссылка        = СтрокаСписка.Значение;
			НоваяСтрока.Представление = СтрокаСписка.Представление;
			СтрокиКИ = ТаблицаКИ.Скопировать(Новый Структура("Объект", НоваяСтрока.Ссылка), "Представление,Тип");
			СтрокиКИ.Сортировать("Тип УБЫВ");
			Для каждого СтрокаКИ Из СтрокиКИ Цикл
				Если ЗначениеЗаполнено(СтрокаКИ.Представление) Тогда
					НоваяСтрока.Представление = НоваяСтрока.Представление + ", " + СтрокаКИ.Представление;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры 

Процедура ПолучитьСостояниеКонтрагентаПоДаннымЕГРН(ИнформацияОСвязях)

	ИнформацияОСвязях.Вставить("СостояниеПоДаннымЕГРН");
	
	КПП = ?(ИнформацияОСвязях.Свойство("КПП"), ИнформацияОСвязях.КПП, "");
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ИНН",        ИнформацияОСвязях.ИНН);
	ДополнительныеПараметры.Вставить("КПП",        КПП);
	ДополнительныеПараметры.Вставить("Дата",       ТекущаяДатаСеанса());
	ДополнительныеПараметры.Вставить("Ссылка",     Справочники.Контрагенты.ПустаяСсылка());
	ДополнительныеПараметры.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	ДополнительныеПараметры.Вставить("СохранятьРезультатСразуПослеПроверки", Ложь);
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	ПроверкаКонтрагентов.ПроверитьКонтрагента(ДополнительныеПараметры, АдресХранилища);
	
	Состояние = ПроверкаКонтрагентовВызовСервера.ТекущееСостояниеКонтрагента(
		Справочники.Контрагенты.ПустаяСсылка(), ИнформацияОСвязях.ИНН, КПП, АдресХранилища);
	
	ИнформацияОСвязях.СостояниеПоДаннымЕГРН = Состояние;
	
КонецПроцедуры

Функция ВсеОбластиМакета()
	
	Макет     = Отчеты.ДосьеКонтрагента.ПолучитьМакет("Макет");
	Результат = Новый Структура;
	Для каждого Область Из Макет.Области Цикл
		Результат.Вставить(Область.Имя, Макет.ПолучитьОбласть(Область.Имя));
	КонецЦикла;
	Возврат Результат;

КонецФункции 

Функция НоваяТаблицаРасчетныеСчета()

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Ссылка",     Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета"));
	Результат.Колонки.Добавить("Банк",       Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("НомерСчета", Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("БИК",        Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("КоррСчет",   Новый ОписаниеТипов("Строка"));
	Возврат Результат;

КонецФункции

Функция НоваяТаблицаКонтактныеЛица()

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Ссылка",        Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
	Результат.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Возврат Результат;

КонецФункции

Функция НоваяТаблицаОбластиРасшифровки()

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ИмяОбласти",      Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ПерваяСтрока",    Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ПоследняяСтрока", Новый ОписаниеТипов("Число"));
	Возврат Результат;
	
КонецФункции 

Функция НовыеРеквизитыОрганизации()
	
	Результат = Новый Структура;
	Результат.Вставить("НаименованиеОрганизации");
	Результат.Вставить("ИНН");
	Результат.Вставить("КодСтатуса");
	Результат.Вставить("НаименованиеСтатуса");
	Возврат Результат;

КонецФункции 

Функция НовыеРеквизитыУчредителя()
	
	Результат = Новый Структура;
	Результат.Вставить("Учредитель");
	Результат.Вставить("НаименованиеОрганизации");
	Результат.Вставить("ИНН");
	Результат.Вставить("КодСтатуса");
	Результат.Вставить("НаименованиеСтатуса");
	Результат.Вставить("ПроцентКапитала");
	Результат.Вставить("СуммаКапитала");
	Возврат Результат;

КонецФункции 

#КонецОбласти	

#КонецЕсли