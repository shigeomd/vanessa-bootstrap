#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда



// Формирует табличную часть отчета
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	// в связи со спецификой отчета переопределим перериод
	ПараметрыОтчета.Период = КонецКвартала(ПараметрыОтчета.КонецПериода);

	ТаблицаДанныхКнигиУчетаДоходовИРасходов = Новый ТаблицаЗначений;
	ПолучитьОборотыКнигиУчетаДоходовИРасходовПоКвартально(ТаблицаДанныхКнигиУчетаДоходовИРасходов, 
			НачалоГода(ПараметрыОтчета.Период), КонецДня(ПараметрыОтчета.Период), ПараметрыОтчета.Организация);
	ПараметрыОтчета.Вставить("ТаблицаДанныхКнигиУчетаДоходовИРасходов", ТаблицаДанныхКнигиУчетаДоходовИРасходов);
	
	ПараметрыОтчета.Вставить("ТаблицаДанныхУменьшенияНалогаПоКвартально", ПолучитьОборотыУменьшенияНалогаПоКвартально(
			НачалоГода(ПараметрыОтчета.Период), КонецДня(ПараметрыОтчета.Период), ПараметрыОтчета.Организация));
			
	ПараметрыОтчета.Вставить("ТаблицаУбытков", ПолучитьТаблицуУбытков(ПараметрыОтчета.Период, ПараметрыОтчета.Организация));
	
	ПечатьТитульногоЛиста(ПараметрыОтчета);
	
	ПечатьРаздела1(ПараметрыОтчета);
	
	ПечатьРаздела2(ПараметрыОтчета);
	
	ПечатьРаздела3(ПараметрыОтчета);
	
	ПечатьРаздела4(ПараметрыОтчета);
	
	ПоместитьВоВременноеХранилище(ПараметрыОтчета.СписокСформированныхЛистов, АдресХранилища);
	
КонецПроцедуры

Процедура ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет)
	
	Секция = Макет.ПолучитьОбласть("Шапка|Основная");
	ТабличныйДокумент.Вывести(Секция);
	Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Шапка|Режим3","Шапка|Режим12"));
	Если ПараметрыОтчета.РежимПечатиГраф4и6 = 3 Тогда
		Секция = Макет.ПолучитьОбласть("Шапка|Режим3");
		Если ПараметрыОтчета.Период >= Дата("20060101") Тогда
			Секция.Параметры.Заголовок4 = "Доходы, учитываемые при исчислении налоговой базы"; 
			Секция.Параметры.Заголовок6 = "Расходы, учитываемые при исчислении налоговой базы";
		Иначе
			Секция.Параметры.Заголовок4 = "Доходы"; 
			Секция.Параметры.Заголовок6 = "Расходы";
		КонецЕсли;
	Иначе
		Секция = Макет.ПолучитьОбласть("Шапка|Режим12");
		Если ПараметрыОтчета.Период >= Дата("20060101") Тогда
			Секция.Параметры.Заголовок5 = "в т.ч. доходы, учитываемые при исчислении налоговой базы"; 
			Секция.Параметры.Заголовок7 = "в т.ч. расходы, учитываемые при исчислении налоговой базы";
		Иначе
			Секция.Параметры.Заголовок5 = "в т.ч. доходы, учитываемые при расчете единого налога"; 
			Секция.Параметры.Заголовок7 = "в т.ч. расходы, учитываемые при расчете единого налога";
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(Секция);
	
КонецПроцедуры
	
Процедура ПечатьТитульногоЛиста(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_ТитульныйЛист";
	
	Если ПараметрыОтчета.Период >= Дата("20130101") Тогда
		Секция = ПолучитьМакет("ТитульныйЛист_135н");
	ИначеЕсли ПараметрыОтчета.Период >= Дата("20090101") Тогда
		Секция = ПолучитьМакет("ТитульныйЛист_154н");
	ИначеЕсли ПараметрыОтчета.Период >= Дата("20060101") Тогда
		Секция = ПолучитьМакет("ТитульныйЛист_167н");
	Иначе
		Секция = ПолучитьМакет("ТитульныйЛист");
	КонецЕсли;
	
	Секция.Параметры.НаПериод = "на " + Формат(Год(ПараметрыОтчета.Период), "ЧГ=") + " год";
	
	Сведения = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) Тогда
		Секция.Параметры.ПолноеНаименованиеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			Сведения, "НаименованиеДляПечатныхФорм");
	Иначе
		Секция.Параметры.ПолноеНаименованиеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			Сведения, "ФИОФизлица");
	КонецЕсли;
	
	Секция.Параметры.КодОКПО = Сведения.КодПоОКПО;
	Если ПараметрыОтчета.Период < Дата("20060101") Тогда
		Секция.Параметры.ИННОрганизации = Сведения.ИНН + "/" + Сведения.КПП;
		Секция.Параметры.КодОКДП = "";
		Если ПараметрыОтчета.РежимПечатиГраф4и6 = 3 Тогда
			Секция.Параметры.РедакцияПриказаМНС = "";
		Иначе
			Секция.Параметры.РедакцияПриказаМНС = "(в редакции приказа МНС РФ от ""26"" марта 2003 №БГ-3-22/135)";
		КонецЕсли;
	ИначеЕсли ПараметрыОтчета.Период < Дата("20090101") Тогда
		Если ПараметрыОтчета.РежимПечатиГраф4и6 = 3 Тогда
			Секция.Параметры.РедакцияПриказаМНС = "(в ред. Приказа Минфина РФ от 27.11.2006 № 152н)";
		Иначе
			Секция.Параметры.РедакцияПриказаМНС = "";
		КонецЕсли;
	КонецЕсли;
	
	//Соберем банковские счета
	Счета = "";
	
	ЗапросБС = Новый Запрос;
	ЗапросБС.УстановитьПараметр("Владелец", ПараметрыОтчета.Организация);
	ЗапросБС.УстановитьПараметр("НачДата", НачалоГода(ПараметрыОтчета.Период));
	ЗапросБС.УстановитьПараметр("КонДата", КонецГода(ПараметрыОтчета.Период));
	ЗапросБС.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	ЗапросБС.Текст =
	"ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета КАК Номер,
	|	БанковскиеСчета.Банк.Наименование КАК Банк
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Владелец
	|	И (БанковскиеСчета.ДатаОткрытия = &ПустаяДата ИЛИ БанковскиеСчета.ДатаОткрытия <= &КонДата)
	|	И (БанковскиеСчета.ДатаЗакрытия = &ПустаяДата ИЛИ БанковскиеСчета.ДатаЗакрытия >= &НачДата)";
	
	
	БанковскиеСчетаВыборка = ЗапросБС.Выполнить().Выгрузить();
	Для Каждого Строка Из БанковскиеСчетаВыборка Цикл
		НомСч = СокрЛП(Строка.Номер);
		Банк  = СокрЛП(Строка.Банк);
		Счета = Счета+"№ "+НомСч+" в "+Банк+", ";
	КонецЦикла;
	Счета = Лев(Счета,СтрДлина(Счета)-2);
	Секция.Параметры.Счета = Счета;
	
	Если УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.Период, Истина) Тогда
		Секция.Параметры.ОбъектНалогообложения = УчетнаяПолитика.ОбъектНалогообложенияУСН(ПараметрыОтчета.Организация, ПараметрыОтчета.Период);
	КонецЕсли;	
	Если ПараметрыОтчета.Период < Дата("20090101") Тогда
		Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.Период) Тогда
			Секция.Параметры.ДатаУведомления	= "от " + Формат(УчетнаяПолитика.УведомлениеДата(ПараметрыОтчета.Организация, ПараметрыОтчета.Период), "ДЛФ=ДД");
			Секция.Параметры.НомерУведомления	= "№ " + УчетнаяПолитика.УведомлениеНомер(ПараметрыОтчета.Организация, ПараметрыОтчета.Период);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыОтчета.Период >= Дата("20060101") Тогда
		//Проверим длину адреса
		
		СтрокаАдреса = СокрЛП(Сведения.ФактическийАдрес);
		Если СтрДлина(СтрокаАдреса) > 45 Тогда
			ПозицияПереноса = 0;
			СтрокаПоиска = СтрокаАдреса;
			РезультатПоиска = Найти(СтрокаПоиска, ",");
			Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
				ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
				СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
				РезультатПоиска = Найти(СтрокаПоиска, ",");
			КонецЦикла;
			Если НЕ ПозицияПереноса = 0 Тогда
				Секция.Параметры.АдресОрганизации = Лев(СтрокаАдреса, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации2 = Прав(СтрокаАдреса, СтрДлина(СтрокаАдреса) - ПозицияПереноса);
			Иначе
				СтрокаПоиска = СтрокаАдреса;
				РезультатПоиска = Найти(СтрокаПоиска, " ");
				Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
					ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
					СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
					РезультатПоиска = Найти(СтрокаПоиска, " ");
				КонецЦикла;
				ПозицияПереноса = ?(ПозицияПереноса = 0, 45, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации = Лев(СтрокаАдреса, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации2 = Прав(СтрокаАдреса, СтрДлина(СтрокаАдреса) - ПозицияПереноса);
			КонецЕсли;
			
		Иначе
			Секция.Параметры.АдресОрганизации = Сведения.ФактическийАдрес;
		КонецЕсли;
	Иначе 
		Секция.Параметры.АдресОрганизации = Сведения.ФактическийАдрес;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Секция);
	
	Если ПараметрыОтчета.Период >= Дата("20060101") Тогда
		
		ИНН = Сведения.ИНН;
		КПП = Сведения.КПП;
		
		Если СтрДлина(ИНН) <> 12 Тогда
			// Налогоплательщик - юр. лицо
			ИНН = "00" + ИНН;
		Иначе
			// Налогоплательщик - физ. лицо
			КПП = "";
		КонецЕсли;
		
		Ном = 1;
		Пока Ном > 0 Цикл
			Если НЕ(Ном > 9) Тогда
				ТабличныйДокумент.Область("КПП" + Ном).Текст = Сред(КПП, Ном, 1);
			КонецЕсли;
			ИмяОбластиИНН = "ИНН";
			Если ПараметрыОтчета.Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				ИмяОбластиИНН = "Пр" + ИмяОбластиИНН;
			КонецЕсли;
			Если НЕ(Ном > 12) Тогда
				ТабличныйДокумент.Область(ИмяОбластиИНН + Ном).Текст = ?(Число(ИНН) > 0, Сред(ИНН, Ном, 1), "");
				
				Ном = Ном + 1;
				Продолжить;
			КонецЕсли;
			Ном = 0;
		КонецЦикла;
	КонецЕсли;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Титульный лист");
	
КонецПроцедуры

Процедура ПечатьРаздела1(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел1";
	Макет = ПолучитьМакет("Раздел1");
	
	ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	ВыделятьНДС = ВыделятьНДС(ПараметрыОтчета, ПараметрыОтчета.Организация);
	
	НачДата = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	КолКварталов = Цел(Месяц(КонецКвартала(ПараметрыОтчета.Период))/3);
	
	НПП = 1;
	
	Если НачДата <> НачалоГода(ПараметрыОтчета.Период) Тогда
		
		ЗапросНПП = Новый Запрос();
		ЗапросНПП.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
		ЗапросНПП.УстановитьПараметр("НачДата", НачалоГода(ПараметрыОтчета.Период));
		ЗапросНПП.УстановитьПараметр("КонДата", НачалоКвартала(ПараметрыОтчета.Период) - 1);
		ЗапросНПП.Текст = "ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок,
		|	СУММА(ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.НДС <> 0 ТОГДА " + ?(НЕ ВыделятьНДС И ПараметрыОтчета.РежимПечатиНДС = 2, "1", "0")
				+ " ИНАЧЕ 0 КОНЕЦ) КАК КоличествоСтрокНДС
		|ИЗ
		|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
		|ГДЕ
		|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачДата И &КонДата
		|	И КнигаУчетаДоходовИРасходов.Активность = Истина
		|	И КнигаУчетаДоходовИРасходов.Организация = &Организация" + ?(ПараметрыОтчета.РежимПечатиГраф4и6 = 1, "", "
		|	И (КнигаУчетаДоходовИРасходов.Графа5 <> 0 ИЛИ КнигаУчетаДоходовИРасходов.Графа7 <> 0)");
		
		РезультатЗапроса = ЗапросНПП.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ТаблицаРезультата = РезультатЗапроса.Выгрузить();
			НПП = НПП + ТаблицаРезультата.Итог("КоличествоСтрок") + ТаблицаРезультата.Итог("КоличествоСтрокНДС");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекКвартал = Цел(Месяц(КонецКвартала(НачДата))/3);
	ПоследнийКварталПериода = ПолучитьНомерКвартала(ПараметрыОтчета.Период);
	
	ВыборкаЗаписей = ПолучитьЗаписиКнигиУчетаДоходовИРасходов(НачДата, КонецДня(ПараметрыОтчета.Период), ПараметрыОтчета.Организация);
	ТаблицаРасшифровок = ПолучитьЗаписиРасшифровкаКУДиР(НачДата, КонецДня(ПараметрыОтчета.Период),ПараметрыОтчета.Организация);
	ТаблицаРасшифровок.Индексы.Добавить("Регистратор");
	ТаблицаРасшифровок.Индексы.Добавить("СтрокаДокумента");
	ТаблицаРасшифровок.Индексы.Добавить("ВидРасхода");
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		КварталЗаписи = Цел(Месяц(КонецКвартала(ВыборкаЗаписей.Период))/3);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиИтогиЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка|Основная");
		Секция.Параметры.НомерПП 						= НПП;
		Секция.Параметры.ТекРасшифровка					= ВыборкаЗаписей.Регистратор;
		Секция.Параметры.ПечДатаНомерДок 				= ВыборкаЗаписей.РеквизитыПервичногоДокумента;
		Секция.Параметры.ПечСодержОпер 					= ВыборкаЗаписей.Содержание;
		
		Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
			//Выводим все строки
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа5) И НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа7) Тогда
			Продолжить;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Секция);
		
		НДСрасходовБУ = 0;
		
		Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Строка|Режим3","Строка|Режим12"));
		Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
			Секция.Параметры.ПечДоходыБУ = ВыборкаЗаписей.Графа4;
			Если ПараметрыОтчета.РежимПечатиНДС = 2 И ВыборкаЗаписей.Графа6 > 0 И ВыборкаЗаписей.Графа7 > 0 И ВыборкаЗаписей.НДС > 0
					И НЕ ВыделятьНДС Тогда 
				НДСрасходовБУ = ?(ВыборкаЗаписей.Графа6 >= ВыборкаЗаписей.Графа7, ВыборкаЗаписей.НДС,
					ВыборкаЗаписей.НДС*ВыборкаЗаписей.Графа6/ВыборкаЗаписей.Графа7);
				Секция.Параметры.ПечРасходыБУ 			= ВыборкаЗаписей.Графа6 - НДСрасходовБУ;
			Иначе
				Секция.Параметры.ПечРасходыБУ 			= ВыборкаЗаписей.Графа6;
			КонецЕсли;
		КонецЕсли;
		
		Секция.Параметры.ПечДоходы 						= ВыборкаЗаписей.Графа5;
		Если ВыборкаЗаписей.НДС = 0 ИЛИ ВыделятьНДС Тогда
			
			Секция.Параметры.ПечРасходы 				= ВыборкаЗаписей.Графа7;
			ТабличныйДокумент.Присоединить(Секция);
			
		ИначеЕсли ПараметрыОтчета.РежимПечатиНДС = 1 Тогда
			
			Секция.Параметры.ПечРасходы 				= "" + Формат(ВыборкаЗаписей.Графа7, "ЧДЦ=2") + "
			|в т.ч. НДС
			|" + Формат(ВыборкаЗаписей.НДС, "ЧДЦ=2");
			ТабличныйДокумент.Присоединить(Секция);
			
		Иначе // ПараметрыОтчета.РежимПечатиНДС = 2
			
			Секция.Параметры.ПечРасходы 				= ВыборкаЗаписей.Графа7 - ВыборкаЗаписей.НДС;
			ТабличныйДокумент.Присоединить(Секция);
			
		КонецЕсли;
		
		Если ПараметрыОтчета.ВыводитьРасшифровки Тогда
			ЕстьШапка = Ложь;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Регистратор", ВыборкаЗаписей.Регистратор);
			ПараметрыОтбора.Вставить("СтрокаДокумента", ВыборкаЗаписей.СтрокаДокумента);
						
			НайденныеСтроки = ТаблицаРасшифровок.НайтиСтроки(ПараметрыОтбора);
			Для Каждого ВыборкаРасшифровки Из НайденныеСтроки Цикл
				
				Если ПараметрыОтчета.РежимПечатиНДС = 2 И (НЕ ВыделятьНДС) И ВыборкаЗаписей.НДС <> 0 И ВыборкаРасшифровки.ВидРасхода = Перечисления.ВидыРасходовУСН.НДС Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ЕстьШапка Тогда
					
					ТабличныйДокумент.НачатьГруппуСтрок("Расшифровка расходов строки №" + Строка(НПП), Ложь);
					
					Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "ШапкаРасшифровки3","ШапкаРасшифровки12"));
					Секция.Параметры.НомерПП = НПП;
					
					ТабличныйДокумент.Вывести(Секция);
					
					ЕстьШапка = Истина;
				КонецЕсли;
				
				Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "СтрокаРасшифровки3","СтрокаРасшифровки12"));
				Секция.Параметры.НомерПП 			= Строка(НПП) + "." + ВыборкаРасшифровки.СтрокаРасхода;
				Секция.Параметры.ПечСодержОпер		= ВыборкаРасшифровки.Содержание;
				Если ЗначениеЗаполнено(ВыборкаРасшифровки.РеквизитыДокументаОплаты) Тогда
					Секция.Параметры.ПечДатаНомерОплаты	= "Оплачено: "
						+ НалоговыйУчетУСН.РеквизитыПервичногоДокумента(ВыборкаРасшифровки.РеквизитыДокументаОплаты);
					Секция.Параметры.ДокОплаты = ВыборкаРасшифровки.РеквизитыДокументаОплаты;
				КонецЕсли;
				Секция.Параметры.ПечРасходы 			= ВыборкаРасшифровки.Графа7;
				
				ТабличныйДокумент.Вывести(Секция);
				
			КонецЦикла;
			
			Если ЕстьШапка Тогда
				Секция = Макет.ПолучитьОбласть("ПодвалРасшифровки");
				ТабличныйДокумент.Вывести(Секция);
				ТабличныйДокумент.ЗакончитьГруппуСтрок();
			КонецЕсли;
			
		КонецЕсли;
		
		//Выведем строку НДС
		Если ПараметрыОтчета.РежимПечатиНДС = 2 И ВыборкаЗаписей.НДС <> 0 И НЕ ВыделятьНДС Тогда
			
			НПП = НПП + 1;
			
			Секция = Макет.ПолучитьОбласть("Строка|Основная");
			Секция.Параметры.НомерПП 					= НПП;
			Секция.Параметры.ТекРасшифровка				= ВыборкаЗаписей.Регистратор;
			Секция.Параметры.ПечДатаНомерДок 			= ВыборкаЗаписей.РеквизитыПервичногоДокумента;
			Секция.Параметры.ПечСодержОпер 				= ВыборкаЗаписей.Содержание +" (НДС)";
			ТабличныйДокумент.Вывести(Секция);
			Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Строка|Режим3","Строка|Режим12"));
			Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
				Секция.Параметры.ПечРасходыБУ 			= НДСрасходовБУ;
			КонецЕсли;
			Секция.Параметры.ПечРасходы 				= ВыборкаЗаписей.НДС;
			ТабличныйДокумент.Присоединить(Секция);
			
			Если ПараметрыОтчета.ВыводитьРасшифровки Тогда
				ЕстьШапка = Ложь;
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Регистратор", ВыборкаЗаписей.Регистратор);
				ПараметрыОтбора.Вставить("СтрокаДокумента", ВыборкаЗаписей.СтрокаДокумента);
				ПараметрыОтбора.Вставить("ВидРасхода", Перечисления.ВидыРасходовУСН.НДС);
				
				НайденныеСтроки = ТаблицаРасшифровок.НайтиСтроки(ПараметрыОтбора);
				Для Каждого ВыборкаРасшифровки Из НайденныеСтроки Цикл
					
					Если ПараметрыОтчета.РежимПечатиНДС = 2 И ВыборкаЗаписей.НДС <> 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Если НЕ ЕстьШапка Тогда
						
						ТабличныйДокумент.НачатьГруппуСтрок("Расшифровка расходов строки №" + Строка(НПП), Ложь);
						
						Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "ШапкаРасшифровки3","ШапкаРасшифровки12"));
						Секция.Параметры.НомерПП = НПП;
						
						ТабличныйДокумент.Вывести(Секция);
						
						ЕстьШапка = Истина;
					КонецЕсли;
					
					Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "СтрокаРасшифровки3","СтрокаРасшифровки12"));
					Секция.Параметры.НомерПП 			= Строка(НПП) + "." + ВыборкаРасшифровки.СтрокаРасхода;
					Секция.Параметры.ПечСодержОпер		= ВыборкаРасшифровки.Содержание;
					Если ЗначениеЗаполнено(ВыборкаРасшифровки.РеквизитыДокументаОплаты) Тогда
						Секция.Параметры.ПечДатаНомерОплаты	= "Оплачено: "
							+ НалоговыйУчетУСН.РеквизитыПервичногоДокумента(ВыборкаРасшифровки.РеквизитыДокументаОплаты);
						Секция.Параметры.ДокОплаты = ВыборкаРасшифровки.РеквизитыДокументаОплаты;
					КонецЕсли;
					Секция.Параметры.ПечРасходы 		= ВыборкаРасшифровки.Графа7;
					
					ТабличныйДокумент.Вывести(Секция);
					
				КонецЦикла;
				
				Если ЕстьШапка Тогда
					Секция = Макет.ПолучитьОбласть("ПодвалРасшифровки");
					ТабличныйДокумент.Вывести(Секция);
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		НПП = НПП + 1;
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиИтогиЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	// Выведем подвал
	Если ПолучитьНомерКвартала(ПараметрыОтчета.Период) = 4 И ПараметрыОтчета.Период >= Дата("20060101") Тогда
		Секция = Макет.ПолучитьОбласть("Справка");
		
		П010 = ПараметрыОтчета.ТаблицаДанныхКнигиУчетаДоходовИРасходов.Итог("Графа5");
		П020 = ПараметрыОтчета.ТаблицаДанныхКнигиУчетаДоходовИРасходов.Итог("Графа7");
        П030 = 0;
		
		Если ПараметрыОтчета.ТаблицаУбытков.Количество() > 0 Тогда
			П030 = ПараметрыОтчета.ТаблицаУбытков[0].УбытокОтУплатыМинимальногоНалога;
		КонецЕсли;
		
		Секция.Параметры.ПечДоходы = П010;
		Секция.Параметры.ПечРасходы = П020;
		Секция.Параметры.Убыток030 = П030;
		
		Если П010 - П020 - П030 >= 0 Тогда
			Секция.Параметры.ИтогоДоходы = П010 - П020 - П030;
		Иначе
			Секция.Параметры.ИтогоРасходы = П020 + П030 - П010;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(6,,6,);
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел I за " + ПоследнийКварталПериода + " кв. (Доходы и расходы)");
	                                                                       
КонецПроцедуры

Процедура ПечатьРаздела2(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел2";
	
	Если ПараметрыОтчета.Период >= Дата("20130101") Тогда
		Макет = ПолучитьМакет("Раздел2_135н");
	ИначеЕсли ПараметрыОтчета.Период >= Дата("20090101") Тогда
		Макет = ПолучитьМакет("Раздел2_154н");
	ИначеЕсли ПараметрыОтчета.Период >= Дата("20060101") Тогда
		Макет = ПолучитьМакет("Раздел2_167н");
	Иначе
		Макет = ПолучитьМакет("Раздел2");
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период);
	ТабличныйДокумент.Вывести(Секция);
	
	НПП = 1;
	
	ТаблицаРезультата = ПолучитьЗаписиКнигиУчетаДоходовИРасходовПоОС(ПараметрыОтчета);
	
	ТаблицаОтчета = ТаблицаРезультата.Скопировать();
	ТаблицаОтчета.Очистить();
	ТаблицаОтчета.Колонки.Добавить("ПечДатаОплаты");
	СтрокаТаблицыОтчета = Неопределено;
	СписокДат = "";
	Для Каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		Если СтрокаТаблицыОтчета = Неопределено Тогда
			СтрокаТаблицыОтчета = ТаблицаОтчета.Добавить();
		КонецЕсли;
		Если (СтрокаТаблицыОтчета.ОсновноеСредство					 = СтрокаТаблицы.ОсновноеСредство) И
			(СтрокаТаблицыОтчета.ДокументМодернизации 				 = СтрокаТаблицы.ДокументМодернизации) И
			(СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию 		 = СтрокаТаблицы.Графа3_ДатаВводаВЭксплуатацию) И
			(СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования   = СтрокаТаблицы.Графа7_СрокПолезногоИспользования) И
			(СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде = СтрокаТаблицы.Графа8_КолКварталовВОтчетномПериоде) И
			(СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде 	 = СтрокаТаблицы.Графа9_КолКварталовВНалПериоде) И
			(СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод 	 = СтрокаТаблицы.Графа10_ДоляРасходовЗаНалПериод) И
			(СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал 		 = СтрокаТаблицы.Графа11_ДоляРасходовЗаКвартал) Тогда
			
			СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость 		= СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость
				+ СтрокаТаблицы.Графа5_ПервоначальнаяСтоимость;
			СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость 			= СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость
				+ СтрокаТаблицы.Графа6_ОстаточнаяСтоимость;
			СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод = СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод
				+ СтрокаТаблицы.Графа12_СуммаРасходовЗаОтчетнПериод;
			СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал 		= СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал
				+ СтрокаТаблицы.Графа13_СуммаРасходовЗаКвартал;
			СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов 		= СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов
				+ СтрокаТаблицы.Графа14_РасходыПрошлыхПериодов;
			СтрокаТаблицыОтчета.Графа15_ОстатокРасходов 			= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов
				+ СтрокаТаблицы.Графа15_ОстатокРасходов;
			
			СписокДат = СписокДат + Формат(СтрокаТаблицы.ДатаОплаты, "ДФ=дд.ММ.гггг") + ", ";
		Иначе
			СтрокаТаблицыОтчета.ПечДатаОплаты = ?(Прав(СписокДат,2)=", ",Лев(СписокДат,СтрДлина(СписокДат)-2),СписокДат);
			
			СтрокаТаблицыОтчета 									= ТаблицаОтчета.Добавить();
			СтрокаТаблицыОтчета.ОсновноеСредство 					= СтрокаТаблицы.ОсновноеСредство;
			СтрокаТаблицыОтчета.ДокументМодернизации 				= СтрокаТаблицы.ДокументМодернизации;
			СтрокаТаблицыОтчета.ИнвентарныйНомер 					= СтрокаТаблицы.ИнвентарныйНомер;
			СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию 		= СтрокаТаблицы.Графа3_ДатаВводаВЭксплуатацию;
			СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация	= СтрокаТаблицы.Графа4_ГосударственнаяРегистрация;
			СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования 	= СтрокаТаблицы.Графа7_СрокПолезногоИспользования;
			СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде = СтрокаТаблицы.Графа8_КолКварталовВОтчетномПериоде;
			СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде 		= СтрокаТаблицы.Графа9_КолКварталовВНалПериоде;
			СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод 	= СтрокаТаблицы.Графа10_ДоляРасходовЗаНалПериод;
			СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал 		= СтрокаТаблицы.Графа11_ДоляРасходовЗаКвартал;
			
			СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость 		= СтрокаТаблицы.Графа5_ПервоначальнаяСтоимость;
			СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость			= СтрокаТаблицы.Графа6_ОстаточнаяСтоимость;
			СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод = СтрокаТаблицы.Графа12_СуммаРасходовЗаОтчетнПериод;
			СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал 		= СтрокаТаблицы.Графа13_СуммаРасходовЗаКвартал;
			СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов 		= СтрокаТаблицы.Графа14_РасходыПрошлыхПериодов;
			СтрокаТаблицыОтчета.Графа15_ОстатокРасходов 			= СтрокаТаблицы.Графа15_ОстатокРасходов;
			
			СписокДат = Формат(СтрокаТаблицы.ДатаОплаты, "ДФ=дд.ММ.гггг") + ", ";
		КонецЕсли;
	КонецЦикла;
	Если НЕ СтрокаТаблицыОтчета = Неопределено Тогда
		СтрокаТаблицыОтчета.ПечДатаОплаты = ?(Прав(СписокДат,2)=", ",Лев(СписокДат,СтрДлина(СписокДат)-2),СписокДат);
		ТаблицаОтчета.Удалить(0);
	КонецЕсли;
	
	НПП = 1;
	Для Каждого СтрокаТаблицыОтчета Из ТаблицаОтчета Цикл
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.ПорядковыйНомер  = НПП;
		Секция.Параметры.ОсновноеСредство = СтрокаТаблицыОтчета.ОсновноеСредство;
		Если ЗначениеЗаполнено(СтрокаТаблицыОтчета.ДокументМодернизации) Тогда
			СтрокаСодержания = СтрокаТаблицыОтчета.ОсновноеСредство.Наименование
				+ ?(НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.ИнвентарныйНомер), "", ", инв.№"
				+ СтрокаТаблицыОтчета.ИнвентарныйНомер) + " (" + СтрокаТаблицыОтчета.ДокументМодернизации.СобытиеОС.Наименование
				+ " от " + Формат(СтрокаТаблицыОтчета.ДокументМодернизации.Дата,"ДФ=дд.ММ.гггг") + ")";
		Иначе
			СтрокаСодержания = СтрокаТаблицыОтчета.ОсновноеСредство.Наименование
				+ ?(НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.ИнвентарныйНомер), "", ", инв.№" + СтрокаТаблицыОтчета.ИнвентарныйНомер);
		КонецЕсли;
		Секция.Параметры.НаименованиеОС 							= СтрокаСодержания;
		Секция.Параметры.ПечДатаВводаВЭксплуатацию 					= Формат(СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию,
			"ДФ=дд.ММ.гггг");
		Секция.Параметры.ДатаОплаты 								= СтрокаТаблицыОтчета.ПечДатаОплаты;
		Секция.Параметры.ПервоначальнаяСтоимость 					= СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость;
		
		Если ПараметрыОтчета.Период >= Дата("20060101") Тогда
			Если ПолучитьНомерКвартала(ПараметрыОтчета.Период) = 4 Тогда
				Секция.Параметры.СуммаРасходовЗаОтчетныйПериод 		= СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования) Тогда
				СтрокаТаблицыОтчета.Графа15_ОстатокРасходов	= 0;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация) Тогда
				Секция.Параметры.Графа4_ГосударственнаяРегистрация	= СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация;
			КонецЕсли;
			
		Иначе
			Секция.Параметры.КоличествоКварталовВОтчетномПериоде 		= СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде;
			Секция.Параметры.СуммаРасходовЗаОтчетныйПериод 				= СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод;
			Секция.Параметры.СуммаРасходовНеВключенныхВСоставРасходов 	= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов;
		КонецЕсли;
		
		Секция.Параметры.ОстаточнаяСтоимость 						= СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость;
		Секция.Параметры.СрокПолезногоИспользования 				= СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования;
		
		Секция.Параметры.КоличествоКварталовВНалоговомПериоде 		= СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде;
		Секция.Параметры.ПроцентПринятыхРасходов 					= СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод;
		Секция.Параметры.ПроцентПринятыхРасходовЗаКвартал 			= СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал;
		Секция.Параметры.СуммаРасходовЗаПоследнийКвартал 			= СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал;
		Секция.Параметры.СуммаРасходовПредыдущихПериодов			= СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов;
		Секция.Параметры.СуммаРасходовНеВключенныхВСоставРасходов 	= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов;
		
		ДокументСнятоСУчетаБУ = Неопределено;
		ДатаВыбытия			  = Неопределено;
		Если ТипЗнч(СтрокаТаблицыОтчета.ОсновноеСредство) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
			УчетНМА.ПолучитьДокументБухСостоянияНМА(СтрокаТаблицыОтчета.ОсновноеСредство,
				ПараметрыОтчета.Организация, Перечисления.ВидыСостоянийНМА.Списан,  ДокументСнятоСУчетаБУ, ДатаВыбытия);
		Иначе
			УчетОС.ПолучитьДокументБухСостоянияОС(СтрокаТаблицыОтчета.ОсновноеСредство,
				ПараметрыОтчета.Организация, Перечисления.СостоянияОС.СнятоСУчета,  ДокументСнятоСУчетаБУ, ДатаВыбытия);
		КонецЕсли;
		ДатаВыбытия = ?(ДатаВыбытия > КонецДня(ПараметрыОтчета.Период),"", ДатаВыбытия);
		Секция.Параметры.ПечДатаВыбытия 							= Формат(ДатаВыбытия, "ДФ=дд.ММ.гггг");
		
		ТабличныйДокумент.Вывести(Секция);
		НПП = НПП + 1;
	КонецЦикла;
	
	Секция = Макет.ПолучитьОбласть("Итог");
	
	Секция.Параметры.ИтогоПервоначальнаяСтоимость 					= ТаблицаОтчета.Итог("Графа5_ПервоначальнаяСтоимость");
	Секция.Параметры.ИтогоОстаточнаяСтоимость 						= ТаблицаОтчета.Итог("Графа6_ОстаточнаяСтоимость");
	
	Если (ПараметрыОтчета.Период < Дата("20060101")) ИЛИ (ПолучитьНомерКвартала(ПараметрыОтчета.Период) = 4) Тогда
		Секция.Параметры.ИтогоСуммаРасходовЗаОтчетныйПериод 		= ТаблицаОтчета.Итог("Графа12_СуммаРасходовЗаОтчетнПериод");
	КонецЕсли;
	
	Секция.Параметры.ИтогоСуммаРасходовЗаПоследнийКвартал 			= ТаблицаОтчета.Итог("Графа13_СуммаРасходовЗаКвартал");
	Секция.Параметры.ИтогоСуммаРасходовПредыдущихПериодов 			= ТаблицаОтчета.Итог("Графа14_РасходыПрошлыхПериодов");
	Секция.Параметры.ИтогоСуммаРасходовНеВключенныхВСоставРасходов  = ТаблицаОтчета.Итог("Графа15_ОстатокРасходов");
	
	ТабличныйДокумент.Вывести(Секция);
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел II (Расходы на ОС и НМА)");
	
КонецПроцедуры

Процедура ПечатьРаздела3(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел3";
	
	Если ПараметрыОтчета.Период >= Дата("20090101") Тогда
		Если ПараметрыОтчета.Период >= Дата("20130101") Тогда
			Секция = ПолучитьМакет("Раздел3_135н");
		Иначе
			Секция = ПолучитьМакет("Раздел3_154н");
		КонецЕсли;
		Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период);
		
		Если ПараметрыОтчета.ТаблицаУбытков.Количество() > 0 Тогда
			
			Раздел1_П010 = ПараметрыОтчета.ТаблицаДанныхКнигиУчетаДоходовИРасходов.Итог("Графа5");
			Раздел1_П020 = ПараметрыОтчета.ТаблицаДанныхКнигиУчетаДоходовИРасходов.Итог("Графа7");
        	Раздел1_П030 = ПараметрыОтчета.ТаблицаУбытков[0].УбытокОтУплатыМинимальногоНалога;
			Раздел1_П040 = ?(Раздел1_П010 - Раздел1_П020 - Раздел1_П030 >= 0, Раздел1_П010 - Раздел1_П020 - Раздел1_П030, 0);
			Раздел1_П041 = ?(Раздел1_П010 - Раздел1_П020 - Раздел1_П030 >= 0, 0, Раздел1_П020 + Раздел1_П030 - Раздел1_П010);
			
			П010 = ПараметрыОтчета.ТаблицаУбытков.Итог("СуммаНеПеренесенныхУбытков");
			П120 = Раздел1_П040;
			П130 = Мин(Раздел1_П040, П010);
			П140 = Раздел1_П041;
			П150 = П010 - П130 + П140;
			
			СуммаКРаспределениюПоСтрокам = П130;
			
			Для Каждого СтрокаУбытка Из ПараметрыОтчета.ТаблицаУбытков Цикл
				ПараметрСтроки1 = Формат(1+СтрокаУбытка.НомерСтроки, "ЧЦ=2; ЧВН=");
				ПараметрСтроки2 = Формат(14+СтрокаУбытка.НомерСтроки, "ЧЦ=2; ЧВН=");
				Секция.Области["П"+ПараметрСтроки1+"01"].Текст = Прав(СтрокаУбытка.Год, 2);
				Секция.Области["П"+ПараметрСтроки1+"03"].Текст = СтрокаУбытка.СуммаНеПеренесенныхУбытков;
				
				СуммаУбыткаПоСтроке = Мин(СуммаКРаспределениюПоСтрокам, СтрокаУбытка.СуммаНеПеренесенныхУбытков);
				СуммаКРаспределениюПоСтрокам = СуммаКРаспределениюПоСтрокам - СуммаУбыткаПоСтроке;
				
				Если СтрокаУбытка.НомерСтроки > 1 Тогда
					Секция.Области["П"+ПараметрСтроки2+"01"].Текст = Прав(СтрокаУбытка.Год, 2);
					Секция.Области["П"+ПараметрСтроки2+"03"].Текст = СтрокаУбытка.СуммаНеПеренесенныхУбытков - СуммаУбыткаПоСтроке;
				Иначе
					//Убыток "сгорел" - прошло больше 10 лет
					Если СтрокаУбытка.СуммаНеПеренесенныхУбытков - СуммаУбыткаПоСтроке >  0 Тогда
						П150 = П150 - СтрокаУбытка.СуммаНеПеренесенныхУбытков - СуммаУбыткаПоСтроке
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Секция.Области["П2501"].Текст = Прав(ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Год, НачалоГода(ПараметрыОтчета.Период), КонецГода(ПараметрыОтчета.Период)), 2);
			Секция.Области["П2503"].Текст = Раздел1_П041;
			
			Секция.Области["П0103"].Текст = П010;
			Секция.Области["П1203"].Текст = П120;
			Секция.Области["П1303"].Текст = П130;
			Секция.Области["П1403"].Текст = П140;
			Секция.Области["П1503"].Текст = П150;
			
		КонецЕсли;
				
	ИначеЕсли ПараметрыОтчета.Период >= Дата("20060101") Тогда
		Секция = ПолучитьМакет("Раздел3_167н");
		Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период);
		
	Иначе
		Секция = ПолучитьМакет("Раздел3");
		Секция.Параметры.П0103 = 0;
		Секция.Параметры.П0203 = 0;
		Секция.Параметры.П0104 = 0;
		Секция.Параметры.П0204 = 0;
		Секция.Параметры.П0105 = 0;
		Секция.Параметры.П0205 = 0;
		Секция.Параметры.П0106 = 0;
		Секция.Параметры.П0206 = 0;
		
		ПоследнийКварталПериода = ПолучитьНомерКвартала(ПараметрыОтчета.Период);
		
		Для Каждого Квартал Из ПараметрыОтчета.ТаблицаДанныхКнигиУчетаДоходовИРасходов Цикл
			НомКв = ПолучитьНомерКвартала(Квартал.Период);
			
			Для Сч = НомКв По ПоследнийКварталПериода Цикл
				ИмПар = "П010" + (Сч + 2);
				Секция.Параметры[ИмПар] = Секция.Параметры[ИмПар] + Квартал.Графа5;
				
				ИмПар = "П020" + (Сч + 2);
				Секция.Параметры[ИмПар] = Секция.Параметры[ИмПар] + Квартал.Графа7;
			КонецЦикла;
		КонецЦикла;
		
		Для Сч = 3 по 6 Цикл
			Секция.Параметры["П030" + Сч] = ?((Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч])>0,
				Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч], "");
			Секция.Параметры["П031" + Сч] = ?((Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч])<0,
				-(Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч]), "");
		КонецЦикла;
		
		Секция.Параметры.П0103 = ?(Секция.Параметры.П0103 = 0, "", Секция.Параметры.П0103);
		Секция.Параметры.П0203 = ?(Секция.Параметры.П0203 = 0, "", Секция.Параметры.П0203);
		Секция.Параметры.П0104 = ?(Секция.Параметры.П0104 = 0, "", Секция.Параметры.П0104);
		Секция.Параметры.П0204 = ?(Секция.Параметры.П0204 = 0, "", Секция.Параметры.П0204);
		Секция.Параметры.П0105 = ?(Секция.Параметры.П0105 = 0, "", Секция.Параметры.П0105);
		Секция.Параметры.П0205 = ?(Секция.Параметры.П0205 = 0, "", Секция.Параметры.П0205);
		Секция.Параметры.П0106 = ?(Секция.Параметры.П0106 = 0, "", Секция.Параметры.П0106);
		Секция.Параметры.П0206 = ?(Секция.Параметры.П0206 = 0, "", Секция.Параметры.П0206);
		
		Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период);
		Секция.Параметры.ПериодОтчетаСтр = Формат(Год(ПараметрыОтчета.Период), "ЧГ=") + " г.";
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Секция);
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел III (Расчет суммы убытка)");
	
КонецПроцедуры

Процедура ПечатьРаздела4(ПараметрыОтчета)
	
	Если ПараметрыОтчета.Период < Дата("20130101") Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел4";
	
	
	Макет = ПолучитьМакет("Раздел4");
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период);
	ТабличныйДокумент.Вывести(Секция);
	
	НачДата = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	КолКварталов = Цел(Месяц(КонецКвартала(ПараметрыОтчета.Период))/3);
	
	НПП = 1;
	
	Если НачДата <> НачалоГода(ПараметрыОтчета.Период) Тогда
		
		ЗапросНПП = Новый Запрос();
		ЗапросНПП.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
		ЗапросНПП.УстановитьПараметр("НачДата", НачалоГода(ПараметрыОтчета.Период));
		ЗапросНПП.УстановитьПараметр("КонДата", НачалоКвартала(ПараметрыОтчета.Период) - 1);
		
		ЗапросНПП.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок
		|ИЗ
		|	РегистрНакопления.КнигаУчетаДоходовИРасходовРаздел4 КАК КнигаУчетаДоходовИРасходовРаздел4
		|ГДЕ
		|	КнигаУчетаДоходовИРасходовРаздел4.Период МЕЖДУ &НачДата И &КонДата
		|	И КнигаУчетаДоходовИРасходовРаздел4.Организация = &Организация
		|	И КнигаУчетаДоходовИРасходовРаздел4.Активность";
		
		РезультатЗапроса = ЗапросНПП.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ТаблицаРезультата = РезультатЗапроса.Выгрузить();
			НПП = НПП + ТаблицаРезультата.Итог("КоличествоСтрок");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекКвартал 				= ПолучитьНомерКвартала(НачДата);
	ПоследнийКварталПериода = ПолучитьНомерКвартала(ПараметрыОтчета.Период);
	
	ВыборкаЗаписей = ПолучитьЗаписиУменьшенияНалога(НачДата, КонецДня(ПараметрыОтчета.Период), ПараметрыОтчета.Организация);
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		КварталЗаписи = Цел(Месяц(КонецКвартала(ВыборкаЗаписей.ПериодЗаписи))/3);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиУменьшенияНалогаЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НомерПП = НПП;
		Секция.Параметры.Заполнить(ВыборкаЗаписей);
		
		Если Не ЗначениеЗаполнено(ВыборкаЗаписей.ПериодНачисленияПредставление) Тогда
			Секция.Параметры.ПериодНачисленияПредставление = Формат(ВыборкаЗаписей.ПериодНачисления, "ДФ='ММММ гггг'");
		КонецЕсли;
		
		Секция.Параметры.ИтогоВзносов = ВыборкаЗаписей.ПФР + ВыборкаЗаписей.ФСС + ВыборкаЗаписей.ФОМС + ВыборкаЗаписей.ФСС_НС 
				+ ВыборкаЗаписей.Больничные + ВыборкаЗаписей.Дстрах;

				
		НПП = НПП + 1;
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУменьшенияНалогаЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел IV (Уменьшение суммы налога)");
	
КонецПроцедуры

Процедура ВывестиИтогиЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент)
	
	Секция = Макет.ПолучитьОбласть("Итого|Основная");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПечТекстИтогов = "Итого за "
		+ СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь) + " квартал";
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Итого|Режим3","Итого|Режим12"));
	
	ИтогПечДоходыБУ 	= 0;
	ИтогПечРасходыБУ 	= 0;
	ИтогПечДоходы 		= 0;
	ИтогПечРасходы 		= 0;
	ПечДоходыБУ 		= 0;
	ПечРасходыБУ 		= 0;
	ПечДоходы 			= 0;
	ПечРасходы 			= 0;
	
	Для Каждого ИтогиПериода Из ПараметрыОтчета.ТаблицаДанныхКнигиУчетаДоходовИРасходов Цикл
		Если ПолучитьНомерКвартала(ИтогиПериода.Период) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		ИтогПечДоходыБУ 	= ИтогПечДоходыБУ + ИтогиПериода.Графа4;
		ИтогПечРасходыБУ 	= ИтогПечРасходыБУ + ИтогиПериода.Графа6;
		ИтогПечДоходы 		= ИтогПечДоходы + ИтогиПериода.Графа5;
		ИтогПечРасходы 		= ИтогПечРасходы + ИтогиПериода.Графа7;
		Если ПолучитьНомерКвартала(ИтогиПериода.Период) = ТекКвартал Тогда
			ПечДоходыБУ 	= ИтогиПериода.Графа4;
			ПечРасходыБУ 	= ИтогиПериода.Графа6;
			ПечДоходы 		= ИтогиПериода.Графа5;
			ПечРасходы 		= ИтогиПериода.Графа7;
		КонецЕсли;
	КонецЦикла;
	
	
	Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
		Секция.Параметры.ПечДоходыБУ = ПечДоходыБУ;
		Секция.Параметры.ПечРасходыБУ = ПечРасходыБУ;
	КонецЕсли;
	Секция.Параметры.ПечДоходы 	= ПечДоходы;
	Секция.Параметры.ПечРасходы = ПечРасходы;
	ТабличныйДокумент.Присоединить(Секция);
	
	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итого|Основная");
		Секция.Параметры.ПечТекстИтогов = "Итого за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период, ДобавитьМесяц(НачалоГода(ПараметрыОтчета.Период)-1, ТекКвартал*3));
		ТабличныйДокумент.Вывести(Секция);
		
		Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Итого|Режим3","Итого|Режим12"));
		Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
			Секция.Параметры.ПечДоходыБУ = ИтогПечДоходыБУ;
			Секция.Параметры.ПечРасходыБУ = ИтогПечРасходыБУ;
		КонецЕсли;
		Секция.Параметры.ПечДоходы = ИтогПечДоходы;
		Секция.Параметры.ПечРасходы = ИтогПечРасходы;
		ТабличныйДокумент.Присоединить(Секция);
	КонецЕсли;
	
	Если ТекКвартал <> ПоследнийКварталПериода Тогда
		
		ТабличныйДокумент.ТолькоПросмотр = Истина;
		ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(6,,6,);
	                                                                           
		ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел I за " + ТекКвартал + " кв. (Доходы и расходы)");
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
		ТабличныйДокумент.Автомасштаб			= Истина;
		ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел1";
		
		ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиУменьшенияНалогаЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент)
	
	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за "
		+ СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь) + " квартал";
		
	ПФР 		= 0;
	ФСС 		= 0;
	ФОМС 		= 0;
	ФСС_НС 		= 0;
	Больничные 	= 0;
	Дстрах 		= 0;
		
	Для Каждого ИтогиПериода Из ПараметрыОтчета.ТаблицаДанныхУменьшенияНалогаПоКвартально Цикл	
		
		Если ПолучитьНомерКвартала(ИтогиПериода.Квартал) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		ПФР 		= ПФР + ИтогиПериода.ПФР;
		ФСС 		= ФСС + ИтогиПериода.ФСС;
		ФОМС 		= ФОМС + ИтогиПериода.ФОМС;
		ФСС_НС 		= ФСС_НС + ИтогиПериода.ФСС_НС;
		Больничные 	= Больничные + ИтогиПериода.Больничные;
		Дстрах 		= Дстрах + ИтогиПериода.Дстрах;
		
		ИтогоВзносов = ИтогиПериода.ПФР + ИтогиПериода.ФСС + ИтогиПериода.ФОМС + ИтогиПериода.ФСС_НС + ИтогиПериода.Больничные + ИтогиПериода.Дстрах;
		
		Если ПолучитьНомерКвартала(ИтогиПериода.Квартал) = ТекКвартал Тогда
			Секция.Параметры.Заполнить(ИтогиПериода);
			Секция.Параметры.ИтогоВзносов = ИтогоВзносов;
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
	КонецЦикла;
	
	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + ПолучитьПредставлениеПериода(ПараметрыОтчета.Период, ДобавитьМесяц(НачалоГода(ПараметрыОтчета.Период)-1, ТекКвартал*3));
		
		Секция.Параметры.ПФР 		= ПФР;
		Секция.Параметры.ФСС 		= ФСС;
		Секция.Параметры.ФОМС 		= ФОМС;
		Секция.Параметры.ФСС_НС 		= ФСС_НС;
		Секция.Параметры.Больничные 	= Больничные;
		Секция.Параметры.Дстрах 		= Дстрах;
		Секция.Параметры.ИтогоВзносов   = ПФР + ФСС + ФОМС +ФСС_НС + Больничные + Дстрах;
	
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
КонецПроцедуры

Функция ВыделятьНДС(ПараметрыОтчета, УказаннаяОрганизация)
	
	Результат = Истина;
	
	Если ЗначениеЗаполнено(УказаннаяОрганизация) Тогда
		Если ПараметрыОтчета.УСН = Перечисления.СистемыНалогообложения.Упрощенная Тогда
			Если ПараметрыОтчета.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
				Результат = (ПараметрыОтчета.ПорядокПризнанияРасходовПоНДС = Перечисления.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьНомерКвартала(ДатаВКвартале)
	
	Возврат Цел(Месяц(КонецКвартала(ДатаВКвартале))/3);
	
КонецФункции

Функция ПолучитьПредставлениеПериода(Период, КонДата = Неопределено) Экспорт
	
	КонДата = ?(КонДата = Неопределено, Период, КонДата);
	Возврат ПредставлениеПериода(НачалоГода(КонДата), КонецДня(КонДата), "ФП = Истина");
	
КонецФункции

// Получает записи книги учета доходов и расходов за период
//
// Параметры:
// ТаблицаДанных  – <ТаблицаЗначений> – таблица значений, в которую необходимо загрузить данные
//
Процедура ПолучитьОборотыКнигиУчетаДоходовИРасходовПоКвартально(ТаблицаДанных, НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КнигаУчетаДоходовИРасходовОбороты.Период КАК Период,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот КАК Графа4,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Графа5,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа6Оборот КАК Графа6,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Графа7
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, Квартал, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// Получает поквартальные обороты раздела IV книги учета доходов и расходов за период
//
Функция ПолучитьОборотыУменьшенияНалогаПоКвартально(НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КнигаУчетаДоходовИРасходовРаздел4Обороты.ПФРОборот КАК ПФР,
	|	КнигаУчетаДоходовИРасходовРаздел4Обороты.ФССОборот КАК ФСС,
	|	КнигаУчетаДоходовИРасходовРаздел4Обороты.ФОМСОборот КАК ФОМС,
	|	КнигаУчетаДоходовИРасходовРаздел4Обороты.ФСС_НСОборот КАК ФСС_НС,
	|	КнигаУчетаДоходовИРасходовРаздел4Обороты.БольничныеОборот КАК Больничные,
	|	КнигаУчетаДоходовИРасходовРаздел4Обороты.ДобровольноеСтрахованиеОборот КАК ДСтрах,
	|	НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел4Обороты.Период, МЕСЯЦ) КАК Квартал
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходовРаздел4.Обороты(&НачалоПериода, &КонецПериода, Квартал, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовРаздел4Обороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Квартал";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьТаблицуУбытков(Период, Организация)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РегистрацияСуммыУбыткаУСН.Ссылка,
	|	РегистрацияСуммыУбыткаУСН.НомерСтроки КАК НомерСтроки,
	|	РегистрацияСуммыУбыткаУСН.Год,
	|	РегистрацияСуммыУбыткаУСН.СуммаНеПеренесенныхУбытков,
	|	РегистрацияСуммыУбыткаУСН.Ссылка.УбытокОтУплатыМинимальногоНалога КАК УбытокОтУплатыМинимальногоНалога,
	|	РегистрацияСуммыУбыткаУСН.Ссылка.Проведен
	|ИЗ
	|	Документ.РегистрацияСуммыУбыткаУСН.Убытки КАК РегистрацияСуммыУбыткаУСН
	|ГДЕ
	|	РегистрацияСуммыУбыткаУСН.Ссылка.Организация = &Организация
	|	И РегистрацияСуммыУбыткаУСН.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ГОД) И КОНЕЦПЕРИОДА(&Период, ГОД)
	|	И РегистрацияСуммыУбыткаУСН.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получает записи книги учета доходов и расходов за период
//
// Параметры:
// Выборка  – <ВыборкаРезультатЗапроса> – выборка результат запроса
//
Функция ПолучитьЗаписиКнигиУчетаДоходовИРасходов(НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КнигаУчетаДоходовИРасходов.Период КАК Период,
	|	КнигаУчетаДоходовИРасходов.Регистратор,
	|	КнигаУчетаДоходовИРасходов.НДС,
	|	КнигаУчетаДоходовИРасходов.Содержание,
	|	КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.СтрокаДокумента,
	|	КнигаУчетаДоходовИРасходов.ВидРасхода,
	|	КнигаУчетаДоходовИРасходов.Графа4,
	|	КнигаУчетаДоходовИРасходов.Графа5,
	|	КнигаУчетаДоходовИРасходов.Графа6,
	|	КнигаУчетаДоходовИРасходов.Графа7
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходов.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	КнигаУчетаДоходовИРасходов.Регистратор,
	|	КнигаУчетаДоходовИРасходов.НомерСтроки";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьЗаписиУменьшенияНалога(НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КнигаУчетаДоходовИРасходовРаздел4.РеквизитыПервичногоДокумента КАК ДатаНомер,
	|	КнигаУчетаДоходовИРасходовРаздел4.ДокументРасхода,
	|	КнигаУчетаДоходовИРасходовРаздел4.Период КАК ПериодЗаписи,
	|	КнигаУчетаДоходовИРасходовРаздел4.ПериодНачисления КАК ПериодНачисления,
	|	КнигаУчетаДоходовИРасходовРаздел4.ПериодНачисленияПредставление,
	|	КнигаУчетаДоходовИРасходовРаздел4.ПФР КАК ПФР,
	|	КнигаУчетаДоходовИРасходовРаздел4.ФСС КАК ФСС,
	|	КнигаУчетаДоходовИРасходовРаздел4.ФОМС КАК ФОМС,
	|	КнигаУчетаДоходовИРасходовРаздел4.ФСС_НС КАК ФСС_НС,
	|	КнигаУчетаДоходовИРасходовРаздел4.Больничные КАК Больничные,
	|	КнигаУчетаДоходовИРасходовРаздел4.ДобровольноеСтрахование КАК ДСтрах
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходовРаздел4 КАК КнигаУчетаДоходовИРасходовРаздел4
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел4.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходовРаздел4.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходовРаздел4.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодЗаписи,
	|	ПериодНачисления,
	|	КнигаУчетаДоходовИРасходовРаздел4.НомерСтроки";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Получает данные из регистра РасшифровкаКУДиР
//
// Возвращаемое значение:
// <ТаблицаЗначений> – записи из регистра РасшифровкаКУДиР
//
Функция ПолучитьЗаписиРасшифровкаКУДиР(НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасшифровкаКУДиР.Регистратор КАК Регистратор,
	|	РасшифровкаКУДиР.ВидРасхода,
	|	РасшифровкаКУДиР.СтрокаДокумента,
	|	РасшифровкаКУДиР.СтрокаРасхода КАК СтрокаРасхода,
	|	РасшифровкаКУДиР.Содержание,
	|	РасшифровкаКУДиР.РеквизитыДокументаОплаты,
	|	РасшифровкаКУДиР.Графа7
	|ИЗ
	|	РегистрСведений.РасшифровкаКУДиР КАК РасшифровкаКУДиР
	|ГДЕ
	|	РасшифровкаКУДиР.Организация = &Организация
	|	И РасшифровкаКУДиР.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасшифровкаКУДиР.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасшифровкаКУДиР.Период,
	|	Регистратор,
	|	СтрокаРасхода";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получает данные из книги учета доходов и расходов по ОС за период
//
// Возвращаемое значение:
// <ТаблицаЗначений> – данные книги учета доходов и расходов по ОС
//
Функция ПолучитьЗаписиКнигиУчетаДоходовИРасходовПоОС(ПараметрыОтчета)
	
	ЗапросОС = Новый Запрос;
	ЗапросОС.УстановитьПараметр("НачГода", НачалоГода(ПараметрыОтчета.Период));
	ЗапросОС.УстановитьПараметр("НачДата", НачалоКвартала(ПараметрыОтчета.Период));
	ЗапросОС.УстановитьПараметр("КонДата", КонецДня(ПараметрыОтчета.Период));
	ЗапросОС.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	ЗапросОС.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство КАК ОсновноеСредство,
	|	КнигаУчетаДоходовИРасходовОС.ДокументМодернизации КАК ДокументМодернизации,
	|	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаВводаВЭксплуатацию,
	|	КнигаУчетаДоходовИРасходовОС.ДатаОплаты КАК ДатаОплаты,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость КОНЕЦ) КАК Графа5_ПервоначальнаяСтоимость,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость КОНЕЦ) КАК Графа6_ОстаточнаяСтоимость,
	|	КнигаУчетаДоходовИРасходовОС.Графа4_ГосударственнаяРегистрация КАК Графа4_ГосударственнаяРегистрация,
	|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования КАК Графа7_СрокПолезногоИспользования,
	|	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде КАК Графа8_КолКварталовВОтчетномПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде КАК Графа9_КолКварталовВНалПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод КАК Графа10_ДоляРасходовЗаНалПериод,
	|	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал КАК Графа11_ДоляРасходовЗаКвартал,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод КОНЕЦ) КАК Графа12_СуммаРасходовЗаОтчетнПериод,
	|	СУММА(ВЫБОР КОГДА ((КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал) ЕСТЬ NULL ИЛИ (КнигаУчетаДоходовИРасходовОС.Период < &НачДата))  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал КОНЕЦ) КАК Графа13_СуммаРасходовЗаКвартал,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов КОНЕЦ) КАК Графа14_РасходыПрошлыхПериодов,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ) КАК Графа15_ОстатокРасходов,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходовОС КАК КнигаУчетаДоходовИРасходовОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонДата, Организация = &Организация) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО КнигаУчетаДоходовИРасходовОС.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|
	|ГДЕ
	|	((КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачДата И &КонДата) ИЛИ 
	|	((ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ) = 0) И 
	|	(КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачГода И &КонДата)) И
	|	КнигаУчетаДоходовИРасходовОС.Организация = &Организация И
	|	КнигаУчетаДоходовИРасходовОС.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство,
	|	КнигаУчетаДоходовИРасходовОС.ДокументМодернизации,
	|	КнигаУчетаДоходовИРасходовОС.ДатаОплаты,
	|	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаВводаВЭксплуатацию,
	|	КнигаУчетаДоходовИРасходовОС.Графа4_ГосударственнаяРегистрация,
	|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования,
	|	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод,
	|	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОС.НематериальныйАктив,
	|	NULL,
	|	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаПринятияКУчету,
	|	КнигаУчетаДоходовИРасходовОС.ДатаОплаты,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость КОНЕЦ),
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость КОНЕЦ),
	|	0,
	|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования,
	|	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод,
	|	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал,
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод КОНЕЦ),
	|	СУММА(ВЫБОР КОГДА ((КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал) ЕСТЬ NULL ИЛИ (КнигаУчетаДоходовИРасходовОС.Период < &НачДата))  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал КОНЕЦ),
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов КОНЕЦ),
	|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ),
	|	0
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходовНМА КАК КнигаУчетаДоходовИРасходовОС
	|
	|ГДЕ
	|	((КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачДата И &КонДата) ИЛИ 
	|	((ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ) = 0) И 
	|	(КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачГода И &КонДата)) И
	|	КнигаУчетаДоходовИРасходовОС.Организация = &Организация И
	|	КнигаУчетаДоходовИРасходовОС.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаУчетаДоходовИРасходовОС.НематериальныйАктив,
	|	КнигаУчетаДоходовИРасходовОС.ДатаОплаты,
	|	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаПринятияКУчету,
	|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования,
	|	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде,
	|	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод,
	|	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство,
	|	ДокументМодернизации,
	|	Графа7_СрокПолезногоИспользования,
	|	Графа8_КолКварталовВОтчетномПериоде УБЫВ,
	|	Графа9_КолКварталовВНалПериоде УБЫВ,
	|	Графа10_ДоляРасходовЗаНалПериод,
	|	Графа11_ДоляРасходовЗаКвартал,
	|	ДатаОплаты";
	
	Возврат ЗапросОС.Выполнить().Выгрузить();
	
КонецФункции


#КонецЕсли