////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список,, Параметр);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ Список

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ПоступлениеДенежныхДокументов") Тогда
		КлючеваяОперация = "ОткрытиеФормыПоступлениеДенежныхДокументов";
	ИначеЕсли ТипЗнч(ДанныеСтроки.Ссылка) = Тип("ДокументСсылка.ВыдачаДенежныхДокументов") Тогда
		КлючеваяОперация = "ОткрытиеФормыВыдачаДенежныхДокументов";
	КонецЕсли;
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);

КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьВыдачуДенежныхДокументов(Команда)
	
	КлючеваяОперация = "СозданиеФормыВыдачаДенежныхДокументов";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);

	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	
	ОткрытьФорму("Документ.ВыдачаДенежныхДокументов.ФормаОбъекта", 
		Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), 
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеДенежныхДокументов(Команда)

	КлючеваяОперация = "СозданиеФормыПоступлениеДенежныхДокументов";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	
	ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.ФормаОбъекта",
		Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), 
		ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДвижениеДенежныхДокументов(Команда)
	
	СтруктураПараметров = Новый Структура;
	ОтборПоОрганизации  = ВернутьПолеПользовательскогоОтбораКомпоновки(ЭтаФорма,, "Организация");
	
	Если ОтборПоОрганизации <> Неопределено И ОтборПоОрганизации.Использование И ЗначениеЗаполнено(ОтборПоОрганизации.ПравоеЗначение) Тогда
		СтруктураПараметров.Вставить("РежимРасшифровки", Истина);
		СтруктураПараметров.Вставить("Организация",      ОтборПоОрганизации.ПравоеЗначение);
	КонецЕсли;
	
	ОткрытьФорму("Отчет.ОтчетПоДвижениюДенежныхДокументов.Форма", СтруктураПараметров);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Функция ВернутьПолеПользовательскогоОтбораКомпоновки(Форма, Настройки = Неопределено, Знач ИмяПоля)
	
	Если Настройки = Неопределено Тогда
		Настройки = Форма.Список.КомпоновщикНастроек.ПользовательскиеНастройки;
	КонецЕсли;
	
	ПолеОтбораКомпоновки = Неопределено;
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для каждого ЭлементОтбора Из Форма.Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ЛевоеЗначение Тогда
			ПолеОтбораКомпоновки = Настройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПолеОтбораКомпоновки;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать
