
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ251", НСтр("ru = 'л. с'"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ999", НСтр("ru = 'Кгс'"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ181", НСтр("ru = 'БРТ'"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ796", НСтр("ru = 'шт'"));
	
	ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, , Параметр);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Список

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	СписокЗначенийВидыЗаписей = Новый СписокЗначений;
	СписокЗначенийВидыЗаписей.Добавить(ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация"), НСтр("ru = 'Регистрация'"));
	СписокЗначенийВидыЗаписей.Добавить(ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета"), НСтр("ru = 'Снятие с учета'"));
	ОповещениеОВыбореОперации = Новый ОписаниеОповещения("ВыборИзМенюЗавершение",ЭтотОбъект);
	ПоказатьВыборИзМеню(ОповещениеОВыбореОперации, СписокЗначенийВидыЗаписей);

	Отказ = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьРегистрация(Команда)
	
	ОткрытьФормуРегистрации();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСнятиеСРегистрации(Команда)
	
	ОткрытьФормуСнятияСУчета();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыборИзМенюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Если ВыбранныйЭлемент.Значение = ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация") Тогда
			ОткрытьФормуРегистрации();			
		ИначеЕсли ВыбранныйЭлемент.Значение = ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета") Тогда
			ОткрытьФормуСнятияСУчета();	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРегистрации()
	
	ЗначенияЗаполнения = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ЗначенияЗаполнения.Вставить("ВидЗаписи", ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация"));	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.РегистрацияТранспортныхСредств.ФормаЗаписи", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСнятияСУчета()
	
	ЗначенияЗаполнения = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ЗначенияЗаполнения.Вставить("ВидЗаписи", ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета"));
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.РегистрацияТранспортныхСредств.ФормаЗаписи", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры


