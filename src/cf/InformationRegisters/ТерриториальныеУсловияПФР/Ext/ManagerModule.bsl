#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьПодчиненныеСтруктурныеЕдиницы(СтруктурныеЕдиницы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(СтруктурныеЕдиницы.ГоловнаяСтруктурнаяЕдиница) Тогда
		
		ПодчиненныеСтруктурныеЕдиницы = СтруктурныеЕдиницы.ПодчиненныеСтруктурныеЕдиницы;
		Если ПодчиненныеСтруктурныеЕдиницы.Количество() =0 Тогда
			Возврат;
		КонецЕсли;
		
		НовыйНаборЗаписей = РегистрыСведений.ТерриториальныеУсловияПФР.СоздатьНаборЗаписей();
		НовыйНаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(СтруктурныеЕдиницы.ГоловнаяСтруктурнаяЕдиница);
		НовыйНаборЗаписей.Прочитать();
		ТекущийНабор = НовыйНаборЗаписей.Выгрузить();
		
		Для каждого ПодчиненнаяСтруктурнаяЕдиница Из ПодчиненныеСтруктурныеЕдиницы Цикл
			НовыйНаборЗаписей = РегистрыСведений.ТерриториальныеУсловияПФР.СоздатьНаборЗаписей();
			НовыйНаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(ПодчиненнаяСтруктурнаяЕдиница);
			НовыйНаборЗаписей.Прочитать();
			ТаблицаИсходногоНабора = НовыйНаборЗаписей.Выгрузить();
			
			// Проверим необходимость записи нового набора.
			Если НЕ ОбщегоНазначения.КоллекцииИдентичны(ТаблицаИсходногоНабора, ТекущийНабор, ,"СтруктурнаяЕдиница") Тогда
				НовыйНаборЗаписей.Очистить();
				
				Для каждого ЗаписьТекущегоНабора Из ТекущийНабор Цикл
					НоваяЗаписьНабора = НовыйНаборЗаписей.Добавить();
					НоваяЗаписьНабора.СтруктурнаяЕдиница = ПодчиненнаяСтруктурнаяЕдиница;
					ЗаполнитьЗначенияСвойств(НоваяЗаписьНабора, ЗаписьТекущегоНабора,, "СтруктурнаяЕдиница");
				КонецЦикла;
				
				НовыйНаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
				НовыйНаборЗаписей.Записать();
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли