
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВедущийОбъект", ВедущийОбъект);
	Если Не ЗначениеЗаполнено(ВедущийОбъект) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВладелецРегистрацииВНалоговомОргане", ВладелецРегистрацииВНалоговомОргане);
	Если Не ЗначениеЗаполнено(ВладелецРегистрацииВНалоговомОргане) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Если объект еще не заблокирован для изменений и есть права на изменение набора
	// попытаемся установить блокировку.
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ИсторияРегистрацийВНалоговомОргане) Тогда
		
		ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		
		Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаКомандаОК",
			"Доступность",
			Ложь);
			
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	НаборЗаписей.Загрузить(Параметры.НаборЗаписей.Выгрузить());
	
	НаборЗаписей.Сортировать("Период");
	
	Если НаборЗаписей.Количество() > 0 Тогда
		Элементы.НаборЗаписей.ТекущаяСтрока = НаборЗаписей[НаборЗаписей.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;
	
	ДатаОтсчетаПериодическихСведений = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.ДатаОтсчетаПериодическихСведений();
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			
			Элемент.ТекущиеДанные.СтруктурнаяЕдиница = ВедущийОбъект;
			Элемент.ТекущиеДанные.РегистрацияВНалоговомОргане = ПредопределенноеЗначение("Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка");
			
			НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			
			Если НаборЗаписей.Количество() > 1 Тогда
				ПоследнийПериод = НаборЗаписей.Получить(1).Период;
			Иначе
				ПоследнийПериод = '00010101000000';
			КонецЕсли;
			
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = НачалоДня(ПоследнийПериод + 60*60*24);
			КонецЕсли;
			
			Элемент.ТекущиеДанные.Период = НовыйПериод;
			
			ЭтотОбъект.ТекущийЭлемент = Элементы.НаборЗаписейРегистрацияВНалоговомОргане;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если НЕ ОтменаРедактирования Тогда
			
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				
				СообщениеОбОшибке = НСтр("ru = 'Укажите дату начала действия'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , "НаборЗаписейПериод", , Отказ);
				Возврат;
				
			КонецЕсли;
			
			Если Элемент.ТекущиеДанные.Период < ДатаОтсчетаПериодическихСведений Тогда
				
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Нельзя вводить записи с датой меньше %1'"),
										Формат(ДатаОтсчетаПериодическихСведений,"ДЛФ=D" ));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , "НаборЗаписейПериод", , Отказ);
				Возврат;
				
			КонецЕсли;
			
			НайденныеСтроки = НаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
					СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , "НаборЗаписейПериод", , Отказ);
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.Сортировать("Период");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если НаборЗаписей.Индекс(Элемент.ТекущиеДанные) = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	Для Каждого Запись Из НаборЗаписей Цикл
		Если НЕ ЗначениеЗаполнено(Запись.РегистрацияВНалоговомОргане) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Регистрация в налоговом органе"" не заполнено'");
			НомерСтроки = Формат(НаборЗаписей.Индекс(Запись), "ЧЦ=; ЧДЦ=; ЧГ=");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , "НаборЗаписей["+НомерСтроки+"].РегистрацияВНалоговомОргане",  , Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Устанавливаем период самой первой записи на дату отсчета
	Если НаборЗаписей.Количество() > 0
		И НаборЗаписей[0].Период <> ДатаОтсчетаПериодическихСведений Тогда
		НаборЗаписей[0].Период = ДатаОтсчетаПериодическихСведений;
	КонецЕсли;
	
	ПараметрОповещения = Новый Структура(
		"ВедущийОбъект, ИмяРегистра, НаборЗаписей", 
		ВедущийОбъект, "ИсторияРегистрацийВНалоговомОргане", НаборЗаписей);
	Оповестить("ОтредактированаИстория", ПараметрОповещения, ВедущийОбъект);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти