

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьФункциональныеОпцииФормы();
	
	УстановитьПараметрыВыбораПодразделения(ЭтаФорма);
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетЗатрат);
	УправлениеЭлементамиУСН();
	
	ПоВсемОС		   = ?(ЗначениеЗаполнено(Запись.ОсновноеСредство), 0, 1);
	ПоВсемОрганизациям = ?(ЗначениеЗаполнено(Запись.Организация), 0, 1);
	
	ЗаголовокОрганизация = НСтр("ru = 'Организация:'");
	
	УправлениеФормой(ЭтаФорма);
	
	ПравоРедактированияНастроек = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоНалогам);
	ЭтаФорма.Элементы.ПоВсемОС.ТолькоПросмотр = НЕ ПравоРедактированияНастроек;
	ЭтаФорма.Элементы.ПоВсемОрганизациям.ТолькоПросмотр = НЕ ПравоРедактированияНастроек;
	
	ВыборНалогаДоступен = Истина;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("ВидНалога")
	   И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.ВидНалога) Тогда
	   Запись.ВидНалога = Параметры.ЗначенияЗаполнения.ВидНалога;
	   ВыборНалогаДоступен = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ВыборНалогаДоступен") Тогда
		ВыборНалогаДоступен = Параметры.ВыборНалогаДоступен;
	КонецЕсли;
	
	ЭтаФорма.Элементы.ВидНалога.Видимость = ВыборНалогаДоступен;
	Если НЕ ВыборНалогаДоступен Тогда
		
		ЭтаФорма.АвтоЗаголовок = Ложь;
		Если Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Налог на имущество: способ отражения расходов'");
		ИначеЕсли Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Транспортный налог: способ отражения расходов'");
		ИначеЕсли Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Земельный налог: способ отражения расходов'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнятьОтражениеВУСН = ?(ЗначениеЗаполнено(Запись.Организация),
								ПрименяетсяУСНДоходыМинусРасходы,
								ИспользуетсяУСН);
	
	Если ЗаполнятьОтражениеВУСН И Не ЗначениеЗаполнено(Запись.ОтражениеВУСН) Тогда
		ТекущийОбъект.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
	ИначеЕсли Не ЗаполнятьОтражениеВУСН Тогда
		ТекущийОбъект.ОтражениеВУСН = Перечисления.ОтражениеВУСН.ПустаяСсылка();
	КонецЕсли;
	
	Если НЕ Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");		
		Если ЗначениеЗаполнено(ТекущийОбъект.ОсновноеСредство) И НЕ ЗначениеЗаполнено(ТекущийОбъект.Организация) Тогда
			ТекущийОбъект.Организация = ОсновнаяОрганизация;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ПериодПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНалогаПриИзменении(Элемент)
	
	ПерезаполнитьОтражениеВУСН = ?(ЗначениеЗаполнено(Запись.Организация),
								   ПрименяетсяУСНДоходыМинусРасходы,
								   ИспользуетсяУСН);
	
	Если ЗначениеЗаполнено(Запись.ВидНалога) И ПерезаполнитьОтражениеВУСН Тогда
		ВидНалогаПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемОрганизациямПриИзменении(Элемент)
	
	Если ПоВсемОрганизациям = 1 Тогда
		Запись.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемОСПриИзменении(Элемент)
	
	Если ПоВсемОС = 1 Тогда
		Запись.ОсновноеСредство = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.Организация) Тогда
		ПоВсемОрганизациям = 1;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	ПоВсемОрганизациям = 0;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетЗатратПриИзменении(Элемент)
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3", 
	                              "Субконто1", "Субконто2", "Субконто3");
								  
	ЗначенияСубконто = Новый Соответствие;
	ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы"), 
		БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа());
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетЗатрат);
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Запись.СчетЗатрат, Запись, ПоляОбъекта,,ЗначенияСубконто);
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(ЭтаФорма, Запись, "Субконто%Индекс%");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыДокумента);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ИспользуетсяУСН			= ПолучитьФункциональнуюОпцию("ИспользуетсяУСН");
	ИспользуетсяЕНВД		= ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	
	ПлательщикЕНВД						= УчетнаяПолитика.ПлательщикЕНВД(Запись.Организация, Запись.Период);
	ПрименяетсяУСНДоходыМинусРасходы	= УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Запись.Организация, Запись.Период);

КонецПроцедуры

Процедура ПериодПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	УправлениеЭлементамиУСН();

КонецПроцедуры

&НаСервере
Процедура ВидНалогаПриИзмененииНаСервере()

	Если Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество
		И Запись.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Распределяются Тогда
		// расходы по налогу на имущество при УСН не бывают распределяемыми
		Запись.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
	КонецЕсли;
	
	УправлениеЭлементамиУСН();

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	УправлениеЭлементамиУСН();
	УстановитьПараметрыВыбораПодразделения(ЭтаФорма);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма, Счет)
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3, Подразделение",
	                            "Субконто1", "Субконто2", "Субконто3", "Подразделение");
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3, Подразделение",
	                                 "ЗаголовокСубконто1", "ЗаголовокСубконто2", 
	                                 "ЗаголовокСубконто3", "ЗаголовокПодразделение");
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма)
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма.Запись, "Субконто%Индекс%");
	БухгалтерскийУчетКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(Форма, Форма.Запись,
		"Субконто%Индекс%", "Субконто%Индекс%", ПараметрыДокумента);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрыВыбораПодразделения(Форма)
	
	Элементы = Форма.Элементы;
	Запись	 = Форма.Запись;
	
	ПараметрыВыбораПодразделения = Новый Массив;
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		ПараметрыВыбораПодразделения.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Запись.Организация));
	КонецЕсли;
	
	Элементы.Подразделение.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПодразделения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта)

	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("СчетУчета"  , ПараметрыОбъекта.СчетЗатрат);
	СписокПараметров.Вставить("Организация", ПараметрыОбъекта.Организация);

	Возврат СписокПараметров;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Запись   = Форма.Запись;
	
	ПоВсемОС  = (Форма.ПоВсемОС = 1);
	УказаноОС = ЗначениеЗаполнено(Запись.ОсновноеСредство);
	
	ПоВсемОрганизациям = (Форма.ПоВсемОрганизациям = 1);
	
	Элементы.СтраницыПереключательОрганизации.ТекущаяСтраница = ?(НЕ ПоВсемОС И УказаноОС,
		Элементы.СтраницаЗаголовокОрганизация, Элементы.СтраницаПереключательОрганизация);
	
	Элементы.ОсновноеСредство.Доступность = НЕ ПоВсемОС;
	
	Элементы.Организация.Доступность = НЕ ПоВсемОрганизациям ИЛИ (НЕ ПоВсемОС И УказаноОС);
	Элементы.Организация.АвтоотметкаНезаполненного = УказаноОС;
	Элементы.Организация.ОтметкаНезаполненного =
		УказаноОС
		И НЕ ПоВсемОрганизациям
		И НЕ ЗначениеЗаполнено(Запись.Организация);

КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиУСН()

	ПоказыватьОтражениеВУСН = ?(ЗначениеЗаполнено(Запись.Организация),
								ПрименяетсяУСНДоходыМинусРасходы,
								ИспользуетсяУСН);
						
	ДобавитьРаспределяемые = ?(ЗначениеЗаполнено(Запись.Организация), ПлательщикЕНВД, ИспользуетсяЕНВД)
							 И НЕ Запись.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество;
	
	ЗаголовокОтражениеВУСН = ?(ПоказыватьОтражениеВУСН, НСтр("ru = 'Отражение в УСН:'"), "");
	
	Элементы.ОтражениеВУСН.Доступность = ПоказыватьОтражениеВУСН;
	
	Список = Элементы.ОтражениеВУСН.СписокВыбора;
	Список.Очистить();
	Если ПоказыватьОтражениеВУСН Тогда
		Список.Добавить(Перечисления.ОтражениеВУСН.Принимаются, "Принимаются");
		Список.Добавить(Перечисления.ОтражениеВУСН.НеПринимаются, "Не принимаются");
		Если ДобавитьРаспределяемые Тогда
			Список.Добавить(Перечисления.ОтражениеВУСН.Распределяются, "Распределяются");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(Запись.ВидНалога) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Вид налога'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВидНалога", "Запись", Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ОсновноеСредство) И НЕ ЗначениеЗаполнено(Запись.Организация)
		И Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Организация'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация", "Запись", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


