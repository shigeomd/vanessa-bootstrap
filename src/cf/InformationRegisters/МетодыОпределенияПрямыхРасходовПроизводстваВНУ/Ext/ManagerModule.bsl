#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ЗапрещенныеВидыРасходовНУ() Экспорт
	
	// Прямыми не могут быть нормируемые расходы и не учитываем в целях налогообложения
	ЗапрещенныеВидыРасходовНУ = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
	ЗапрещенныеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.АмортизационнаяПремия);
	ЗапрещенныеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ЕСН);
	
	Возврат ЗапрещенныеВидыРасходовНУ;
	
КонецФункции

Функция ДопустимыеВидыРасходовНУ() Экспорт
	
	// Все, что не запрещено - допустимо
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Запрещенные", ЗапрещенныеВидыРасходовНУ());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыРасходовНУ.Ссылка КАК Ссылка,
	|	ВидыРасходовНУ.Порядок КАК Порядок
	|ИЗ
	|	Перечисление.ВидыРасходовНУ КАК ВидыРасходовНУ
	|ГДЕ
	|	НЕ ВидыРасходовНУ.Ссылка В (&Запрещенные)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура УдалитьЗаписиНеСНачалаГода() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
	|	НАЧАЛОПЕРИОДА(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия, ГОД) КАК ПравильныйПериодДействия,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация КАК Организация,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ КАК ВидРасходовНУ,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение КАК Подразделение,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет КАК Счет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет КАК КорСчет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ НеправильныеЗаписи
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|ГДЕ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия <> НАЧАЛОПЕРИОДА(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия, ГОД)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравильныйПериодДействия,
	|	Организация,
	|	ВидРасходовНУ,
	|	Подразделение,
	|	Счет,
	|	КорСчет,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеправильныеЗаписи.ПериодДействия КАК ПериодДействия,
	|	НеправильныеЗаписи.Организация,
	|	НеправильныеЗаписи.ВидРасходовНУ,
	|	НеправильныеЗаписи.Подразделение,
	|	НеправильныеЗаписи.Счет,
	|	НеправильныеЗаписи.КорСчет,
	|	НеправильныеЗаписи.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Лишняя,
	|	НеправильныеЗаписи.ПравильныйПериодДействия
	|ИЗ
	|	НеправильныеЗаписи КАК НеправильныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|		ПО НеправильныеЗаписи.ПравильныйПериодДействия = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия
	|			И НеправильныеЗаписи.Организация = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация
	|			И НеправильныеЗаписи.ВидРасходовНУ = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ
	|			И НеправильныеЗаписи.Подразделение = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение
	|			И НеправильныеЗаписи.Счет = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет
	|			И НеправильныеЗаписи.КорСчет = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет
	|			И НеправильныеЗаписи.СтатьяЗатрат = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Лишняя УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Записей не будет много, поэтому записываем маленькими наборами
		
		МенеджерЗаписи = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		НачатьТранзакцию();
		МенеджерЗаписи.Удалить();
		Если Не Выборка.Лишняя Тогда
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.ПериодДействия = Выборка.ПравильныйПериодДействия;
			МенеджерЗаписи.Записать();
		КонецЕсли;
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//   ЗаполнятьДаннымиЗаПредыдущийГод - 
//    Булево - 
//       Истина - заполнять данными за предыдущий год, вне зависимости от того, есть они или нет
//       Ложь   - заполнять в соответствии с требованиями ст. 319
//    Неопределено - заполнять данными за предыдущий год, если они есть, или требованиями ст. 319, если данных за предыдущий год нет
Процедура Настроить(Организация, Знач Период, ЗаполнятьДаннымиЗаПредыдущийГод = Неопределено, Перезаписывать = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполнятьДаннымиЗаПредыдущийГод = Истина Тогда
		МетодЗаполнения = "ПредыдущийПериод";
	ИначеЕсли ЗаполнятьДаннымиЗаПредыдущийГод = Ложь Тогда
		МетодЗаполнения = "ПоУмолчанию";
	Иначе
		МетодЗаполнения = Неопределено;
	КонецЕсли;
	
	Период = НачалоГода(Период);
	НаборЗаписей = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.ПериодДействия.Установить(Период);
	
	Если Не Перезаписывать Тогда
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НаборЗаписей.Заполнить(МетодЗаполнения);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Обновление ИБ

Процедура ДобавитьСчетаВзносовС2014Года() Экспорт
	
	// Предолагаем, что если пользователь ранее выполнил настройку для "старого" счета учета взносов в ПФР,
	// то он хотел бы, чтобы она продолжила действовать и для новых, аналогичных по назначению счетов.
	
	// Обрабатываем все периоды, потому что записи прошлых лет могут наследоваться на будущие годы.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НовыеСчета", СчетаВзносовС2014Года());
	Запрос.УстановитьПараметр("СтарыйСчет", ПланыСчетов.Хозрасчетный.ПФР_страх);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокПрямыхРасходов.ПериодДействия КАК ПериодДействия,
	|	СписокПрямыхРасходов.Организация КАК Организация,
	|	СписокПрямыхРасходов.ВидРасходовНУ КАК ВидРасходовНУ,
	|	СписокПрямыхРасходов.Подразделение КАК Подразделение,
	|	СписокПрямыхРасходов.Счет КАК Счет,
	|	СписокПрямыхРасходов.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ УжеЕсть
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК СписокПрямыхРасходов
	|ГДЕ
	|	СписокПрямыхРасходов.КорСчет В(&НовыеСчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодДействия,
	|	Организация,
	|	ВидРасходовНУ,
	|	Подразделение,
	|	Счет,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК КорСчет
	|ПОМЕСТИТЬ НовыеСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В(&НовыеСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокПрямыхРасходов.ПериодДействия КАК ПериодДействия,
	|	СписокПрямыхРасходов.Организация КАК Организация,
	|	СписокПрямыхРасходов.ВидРасходовНУ КАК ВидРасходовНУ,
	|	СписокПрямыхРасходов.Подразделение КАК Подразделение,
	|	СписокПрямыхРасходов.Счет КАК Счет,
	|	НовыеСчета.КорСчет КАК КорСчет,
	|	СписокПрямыхРасходов.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК СписокПрямыхРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ УжеЕсть КАК УжеЕсть
	|		ПО СписокПрямыхРасходов.ПериодДействия = УжеЕсть.ПериодДействия
	|			И СписокПрямыхРасходов.Организация = УжеЕсть.Организация
	|			И СписокПрямыхРасходов.ВидРасходовНУ = УжеЕсть.ВидРасходовНУ
	|			И СписокПрямыхРасходов.Подразделение = УжеЕсть.Подразделение
	|			И СписокПрямыхРасходов.СтатьяЗатрат = УжеЕсть.СтатьяЗатрат
	|			И СписокПрямыхРасходов.Счет = УжеЕсть.Счет,
	|	НовыеСчета КАК НовыеСчета
	|ГДЕ
	|	СписокПрямыхРасходов.КорСчет = &СтарыйСчет
	|	И УжеЕсть.ПериодДействия ЕСТЬ NULL ";
	
	ИменаИзмерений = Новый Массив;
	Для Каждого Измерение Из Метаданные.РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Измерения Цикл
		ИменаИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	
	НовыеСчета = СчетаВзносовС2014Года();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьНаборЗаписей();
		Для Каждого ИмяИзмерения Из ИменаИзмерений Цикл
			НаборЗаписей.Отбор[ИмяИзмерения].Установить(Выборка[ИмяИзмерения]);
		КонецЦикла;
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СчетаВзносовС2014Года() Экспорт
	
	СчетаВзносовС2014Года = Новый Массив;
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
	СчетаВзносовС2014Года.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);
	
	Возврат СчетаВзносовС2014Года;
	
КонецФункции

Функция ОбновитьМетодыОпределенияПрямыхРасходовПроизводстваВНУ() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
		|ГДЕ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение <> &Подразделение";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		Запись.Удалить();
		
	КонецЦикла;
	
КонецФункции

#КонецЕсли