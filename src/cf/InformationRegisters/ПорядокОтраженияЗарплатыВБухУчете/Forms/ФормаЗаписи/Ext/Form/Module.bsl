////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма, Счет, Суффикс = "")
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
	                            "Субконто" + Суффикс + "1", "Субконто" + Суффикс + "2", "Субконто" + Суффикс + "3");
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
	                                 "ЗаголовокСубконто" + Суффикс + "1", "ЗаголовокСубконто" + Суффикс + "2", 
	                                 "ЗаголовокСубконто" + Суффикс + "3"); 
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей, , Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, Суффикс = "")
    	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма.Запись, "Субконто" + Суффикс + "%Индекс%");
	ИзменитьПараметрыВыбораПолейСубконтоЛокально(
		Форма, Форма.Запись, ПараметрыДокумента, Суффикс);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта)

	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("СчетУчета"  ,   Форма.Запись.Счет);
	СписокПараметров.Вставить("Организация",   ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
	
	Возврат СписокПараметров;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконтоЛокально(Форма, Объект, СписокПараметров, Суффикс = "") Экспорт
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма.Запись, "Субконто" + Суффикс + "%Индекс%");
	
	ШаблонИмяПоляОбъекта = "Субконто" + Суффикс + "%Индекс%";
	ШаблонИмяЭлементаФормы = "Субконто" + Суффикс + "%Индекс%";
	
	МассивПараметров = Новый Массив();
	Для Индекс = 1 По 3 Цикл
		ИмяПоляОбъекта   = СтрЗаменить(ШаблонИмяПоляОбъекта  , "%Индекс%", Индекс);
		ИмяЭлементаФормы = СтрЗаменить(ШаблонИмяЭлементаФормы, "%Индекс%", Индекс);

		Если ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Организация));
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = БухгалтерскийУчетКлиентСерверПереопределяемый.ТипПодразделения() Тогда
			ИмяРеквизитаОрганизации = БухгалтерскийУчетКлиентСерверПереопределяемый.ИмяРеквизитаОрганизацияПодразделения();
			Если ЗначениеЗаполнено(ИмяРеквизитаОрганизации) Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор." + ИмяРеквизитаОрганизации, СписокПараметров.Организация));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Организация", СписокПараметров.Организация));
			Если СписокПараметров.Свойство("Контрагент") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Контрагент));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.Субконто") 
			И СписокПараметров.Свойство("СчетУчета") Тогда
			СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СписокПараметров.СчетУчета);
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СвойстваСчета["ВидСубконто" + Индекс]));
		КонецЕсли;
		Если МассивПараметров.Количество() > 0 Тогда
			ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
			Форма.Элементы[ИмяЭлементаФормы].ПараметрыВыбора = ПараметрыВыбора;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(Форма)
	
	ТекущаяЗапись = Форма.Запись;
	
	Если ТекущаяЗапись.ЕНВД Тогда
		
		Текст = "";
		
	ИначеЕсли ЗначениеЗаполнено(ТекущаяЗапись.Счет) Тогда
	
		Текст = "Счет учета расходов по страховым взносам ";
		
		Если ТекущаяЗапись.Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов") Тогда
			
			Текст = Текст + "по БУ: " + ТекущаяЗапись.Счет + " по НУ: "
				+ ?(ЗначениеЗаполнено(ТекущаяЗапись.СчетНУ),
					ТекущаяЗапись.СчетНУ,
					"требуется указать!");
					
		Иначе
					
			Текст = Текст + "по БУ и НУ: " 
				+ ?(ЗначениеЗаполнено(ТекущаяЗапись.Счет),
					ТекущаяЗапись.Счет,
					"требуется указать!");
			
		КонецЕсли;
		
	Иначе
		
		Текст = "";
		
	КонецЕсли;
	
	Форма.НадписьСчетУчетаРасходовПоСтраховымВзносам = Текст;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеСчетомИСубконтоНУ(Форма)
	
	ТекущаяЗапись = Форма.Запись;
	
	Если ТекущаяЗапись.Счет <> ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов") 
		ИЛИ ТекущаяЗапись.ЕНВД Тогда
		ТекущаяЗапись.СчетНУ = "";
		ТекущаяЗапись.СубконтоНУ1 = "";
		ТекущаяЗапись.СубконтоНУ2 = "";
		ТекущаяЗапись.СубконтоНУ3 = "";
		
		УстановитьЗаголовкиИДоступностьСубконто(Форма, ТекущаяЗапись.СчетНУ, "НУ");
		
		ПоляОбъекта = Новый Структура("СубконтоНУ1, СубконтоНУ2, СубконтоНУ3", 
		"СубконтоНУ1", "СубконтоНУ2", "СубконтоНУ3");
		
		БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(ТекущаяЗапись.Счет, ТекущаяЗапись, ПоляОбъекта,,, Ложь);
		
		УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(Форма);
		
		ДоступностьРеквизитовНУ = Ложь;
		
	Иначе
		
		ДоступностьРеквизитовНУ = Истина;
		
	КонецЕсли;
	
	Форма.Элементы.СчетНУ.Доступность      = ДоступностьРеквизитовНУ;
	Форма.Элементы.СубконтоНУ1.Доступность = ДоступностьРеквизитовНУ;
	Форма.Элементы.СубконтоНУ2.Доступность = ДоступностьРеквизитовНУ;
	Форма.Элементы.СубконтоНУ3.Доступность = ДоступностьРеквизитовНУ;
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьЗначениеПоУмолчанию(Настройка)

	Возврат БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию(Настройка);

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.Счет);
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3", 
	                              "Субконто1", "Субконто2", "Субконто3");
	
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Запись.Счет, Запись, ПоляОбъекта,,, Ложь);
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);

	УправлениеСчетомИСубконтоНУ(ЭтаФорма);
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
									  
КонецПроцедуры

&НаКлиенте
Процедура СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ПараметрыДокумента = СписокПараметровВыбораСубконто(ЭтаФорма, Запись, "Субконто%Индекс%");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыДокумента);

КонецПроцедуры

&НаКлиенте
Процедура ПоДеятельностиОблагаемойЕНВДПриИзменении(Элемент)
	
	УправлениеСчетомИСубконтоНУ(ЭтаФорма);
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетНУПриИзменении(Элемент)
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетНУ, "НУ");
	
	ПоляОбъекта = Новый Структура("СубконтоНУ1, СубконтоНУ2, СубконтоНУ3", 
	                              "СубконтоНУ1", "СубконтоНУ2", "СубконтоНУ3");
	
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Запись.СчетНУ, Запись, ПоляОбъекта,,, Ложь);
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "НУ");

	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
									  
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНУПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "НУ");

КонецПроцедуры

&НаКлиенте
Процедура СубконтоНУНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ПараметрыДокумента = СписокПараметровВыбораСубконто(ЭтаФорма, Запись, "СубконтоНУ%Индекс%");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыДокумента);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаголовокОтражениеВУСН = "Отражение в УСН:";
	ЗаголовокСчетаНУ = "Счет учета стр. взносов (НУ):";
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.Счет);
	УправлениеСчетомИСубконтоНУ(ЭтаФорма);
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетНУ, "НУ");
	
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
	
КонецПроцедуры

