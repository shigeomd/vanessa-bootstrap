#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция НастройкиПримененияТребований() Экспорт
	
	Настройки = Новый ТаблицаЗначений;
	Настройки.Колонки.Добавить("Наименование",       Новый ОписаниеТипов("Строка"));
	Настройки.Колонки.Добавить("Задача",             Новый ОписаниеТипов("СправочникСсылка.ЗадачиБухгалтера"));
	Настройки.Колонки.Добавить("Варианты",           Новый ОписаниеТипов("ТаблицаЗначений, ПеречислениеСсылка.УсловияПримененияТребованийЗаконодательства"));
	Настройки.Колонки.Добавить("ЗаголовокВыбора",    Новый ОписаниеТипов("Строка")); // Заголовок переключателя в форме выбора
	Настройки.Колонки.Добавить("ВыбиратьВСписке",    Новый ОписаниеТипов("Булево"));
	Настройки.Индексы.Добавить("Задача");
	
	Условия = Перечисления.УсловияПримененияТребованийЗаконодательства;
	
	// Форма бухгалтерской отчетности
	Настройка = ДобавитьНастройку(
		Настройки,
		НСтр("ru = 'Форма бухгалтерской отчетности'"),
		"БухгалтерскаяОтчетность",
		НСтр("ru = 'Сдается'")); // Заголовок выбора
		
	Если Настройка <> Неопределено Тогда
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.БухгалтерскаяОтчетностьОбщаяФорма;
		Вариант.Представление = НСтр("ru = 'Сдается по общей форме'");
		Вариант.ТекстВыбора   = НСтр("ru = 'по общей форме'");
		
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.БухгалтерскаяОтчетностьМалыеПредприятия;
		Вариант.Представление = НСтр("ru = 'Сдается по форме для малого бизнеса'");
		Вариант.ТекстВыбора   = НСтр("ru = 'по форме для малого бизнеса'");
		
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.БухгалтерскаяОтчетностьНекоммерческиеОрганизации;
		Вариант.Представление = НСтр("ru = 'Сдается по форме для некоммерческих организаций'");
		Вариант.ТекстВыбора   = НСтр("ru = 'по форме для некоммерческих организаций'");
		
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.БухгалтерскаяОтчетностьСоциальноОриентированные;
		Вариант.Представление = НСтр("ru = 'Сдается по форме для социально-ориентированных организаций'");
		Вариант.ТекстВыбора   = НСтр("ru = 'по форме для социально-ориентированных организаций'");
	КонецЕсли;
	
	// Порядок уплаты авансовых платежей по налогу на прибыль
	Настройка = ДобавитьНастройку(
		Настройки,
		НСтр("ru = 'Порядок уплаты авансовых платежей'"),
		"НалогНаПрибыль",
		НСтр("ru = 'Авансы уплачиваются'")); // Заголовок выбора
		
	Если Настройка <> Неопределено Тогда
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.НалогНаПрибыльАвансыЕжеквартально;
		Вариант.Представление = НСтр("ru = 'Авансы уплачиваются ежеквартально'");
		Вариант.ТекстВыбора   = НСтр("ru = 'ежеквартально'");
		
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.НалогНаПрибыльАвансыЕжемесячно;
		Вариант.Представление = НСтр("ru = 'Авансы уплачиваются ежемесячно (по расчетной прибыли)'");
		Вариант.ТекстВыбора   = НСтр("ru = 'ежемесячно (по расчетной прибыли)'");
		
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.НалогНаПрибыльАвансыПоФактическойПрибыли;
		Вариант.Представление = НСтр("ru = 'Авансы уплачиваются ежемесячно (по фактической прибыли)'");
		Вариант.ТекстВыбора   = НСтр("ru = 'ежемесячно (по фактической прибыли)'");
	КонецЕсли;
	
	// Дополнительные страховые взносы сотрудников
	Настройка = ДобавитьНастройку(
		Настройки,
		НСтр("ru = 'Перечисление доп. страховых взносов сотрудников'"),
		"СтраховыеВзносы",
		НСтр("ru = 'Доп. взносы сотрудников'")); // Заголовок выбора
		
	Если Настройка <> Неопределено Тогда
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.ПустаяСсылка();
		Вариант.Представление = НСтр("ru = 'Не перечисляются доп. взносы сотрудников'");
		Вариант.ТекстВыбора   = НСтр("ru = 'не перечисляются'");
		
		Вариант = Настройка.Варианты.Добавить();
		Вариант.Условие       = Условия.СтраховыеВзносыСотрудников;
		Вариант.Представление = НСтр("ru = 'Перечисляются доп. взносы сотрудников'");
		Вариант.ТекстВыбора   = НСтр("ru = 'перечисляются'");
	КонецЕсли;
	
	// Алкоголь  
	МетаданныеЗначенийПеречисления = Метаданные.Перечисления.УсловияПримененияТребованийЗаконодательства.ЗначенияПеречисления;
	
	УсловияАлкоголь = Новый Массив;
	УсловияАлкоголь.Добавить(Условия.РозничнаяПродажаАлкоголя);
	УсловияАлкоголь.Добавить(Условия.ОптоваяТорговляАлкоголем);
	УсловияАлкоголь.Добавить(Условия.ПроизводствоАлгоколя);
	УсловияАлкоголь.Добавить(Условия.ПеревозкаАлкоголя);
	
	Для Каждого УсловиеАлкоголь Из УсловияАлкоголь Цикл
		
		Представление = "" + УсловиеАлкоголь;
		
		Настройка = ДобавитьНастройку(Настройки,
			Представление,
			"ДекларированиеАлкогольнойПродукции",
			Представление,
			Истина,           // Выбирать в списке
			УсловиеАлкоголь); // Настройка
			
	КонецЦикла;
	
	Возврат Настройки;
	
КонецФункции

Функция ДобавитьНастройку(Настройки, Наименование, КодЗадачи, ЗаголовокВыбора, ВыбиратьВСписке = Ложь, Варианты = Неопределено)
	
	Задача = Справочники.ЗадачиБухгалтера.НайтиПоКоду(КодЗадачи);
	
	Если Задача.Пустая() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.Наименование       = Наименование;
	НоваяСтрока.Задача             = Задача;
	НоваяСтрока.ЗаголовокВыбора    = ЗаголовокВыбора;
	НоваяСтрока.ВыбиратьВСписке    = ВыбиратьВСписке;
			
	
	Если Варианты = Неопределено Тогда
		НоваяСтрока.Варианты = Новый ТаблицаЗначений;
		НоваяСтрока.Варианты.Колонки.Добавить("Условие",       Новый ОписаниеТипов("ПеречислениеСсылка.УсловияПримененияТребованийЗаконодательства"));
		НоваяСтрока.Варианты.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
		НоваяСтрока.Варианты.Колонки.Добавить("ТекстВыбора",   Новый ОписаниеТипов("Строка"));
	Иначе
		НоваяСтрока.Варианты = Варианты;
	КонецЕсли;
	
	Возврат НоваяСтрока;
	
КонецФункции

Функция УсловияИзНастроек(Организация) Экспорт
	
	ПроверенныеУсловия = Новый Соответствие;
	
	// Проверим, выполняются ли варианты по умолчанию.
	// Такие варианты выполняются, если пользователь не выбрал какой-либо вытесняющий вариант.
	ВариантыПоУмолчанию = Новый ТаблицаЗначений;
	ВариантыПоУмолчанию.Колонки.Добавить("Основной",    Новый ОписаниеТипов("ПеречислениеСсылка.УсловияПримененияТребованийЗаконодательства"));
	ВариантыПоУмолчанию.Колонки.Добавить("Вытесняющий", Новый ОписаниеТипов("ПеречислениеСсылка.УсловияПримененияТребованийЗаконодательства"));
	ВариантыПоУмолчанию.Индексы.Добавить("Вытесняющий");
	
	Для Каждого НаборВариантов Из НастройкиПримененияТребований() Цикл
		
		СпособОписанияВариантов = ТипЗнч(НаборВариантов.Варианты);
		Если СпособОписанияВариантов <> Тип("ТаблицаЗначений")  Тогда
			// Значений по умолчанию нет, вытеснять нечего
			Продолжить;
		КонецЕсли;
			
		КоличествоВариантов = НаборВариантов.Варианты.Количество();
		
		Если КоличествоВариантов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВариантПоУмолчанию = НаборВариантов.Варианты[0].Условие;
		
		Если Не ЗначениеЗаполнено(ВариантПоУмолчанию) Тогда
			// Этот вариант для нас бесполезен - вытеснять нечего
			Продолжить;
		КонецЕсли;
		
		ПроверенныеУсловия.Вставить(ВариантПоУмолчанию, Истина);
		
		Для Индекс = 1 По НаборВариантов.Варианты.Количество()-1 Цикл // Исключаем вариант по умолчанию
			
			НоваяСтрока = ВариантыПоУмолчанию.Добавить();
			НоваяСтрока.Основной    = ВариантПоУмолчанию;
			НоваяСтрока.Вытесняющий = НаборВариантов.Варианты[Индекс].Условие;
			
			ПроверенныеУсловия.Вставить(НоваяСтрока.Вытесняющий, Ложь);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Что выбрал пользователь в настройках списка?
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Настройки.Условие
	|ИЗ
	|	РегистрСведений.ВариантыПримененияТребованийЗаконодательства КАК Настройки
	|ГДЕ
	|	Настройки.Организация = &Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Выбранное условие "включим"
		ПроверенныеУсловия.Вставить(Выборка.Условие, Истина);
		
		// Условия, вытесненные выбранным, "выключим"
		Отбор = Новый Структура;
		Отбор.Вставить("Вытесняющий", Выборка.Условие);
		Для Каждого Вытеснение Из ВариантыПоУмолчанию.НайтиСтроки(Отбор) Цикл
			ПроверенныеУсловия.Вставить(Вытеснение.Основной, Ложь);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПроверенныеУсловия;
	
КонецФункции

#КонецЕсли
