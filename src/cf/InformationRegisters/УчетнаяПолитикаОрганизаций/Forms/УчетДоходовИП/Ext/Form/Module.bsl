&НаКлиенте
Перем ОтветПередЗакрытием;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗакрыватьПриЗакрытииВладельца = Истина;
	
	ВестиУчетПоВидамДеятельностиИП = Параметры.ВестиУчетПоВидамДеятельностиИП;
	ИППорядокВключенияАвансовВДоходы = ?(Параметры.АвансыВключаютсяВДоходыВПериодеПолученияИП, 1, 0);
	ВидДеятельностиДоходовПоАвансамИП = Параметры.ВидДеятельностиДоходовПоАвансамИП;
		
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтветПередЗакрытием <> Истина Тогда
		
		Отказ = Истина;
		
		Оповещение = Новый ОписаниеОповещения(
			"ПередЗакрытиемЗавершение",
			ЭтотОбъект);
			
		ТекстВопроса = НСтр("ru='Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ИППорядокВключенияАвансовВДоходы = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидДеятельностиДоходовПоАвансамИП");
	Иначе
		Если НЕ ВестиУчетПоВидамДеятельностиИП Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ВидДеятельностиДоходовПоАвансамИП");
		КонецЕсли;
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИППорядокВключенияАвансовВДоходыПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	ПараметрыЗакрытия = ПолучитьПараметрыЗакрытия();
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		ОтветПередЗакрытием	= Истина;
		ПараметрыЗакрытия = ПолучитьПараметрыЗакрытия();
		Закрыть(ПараметрыЗакрытия);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ОтветПередЗакрытием	= Истина;
		Закрыть();
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
 	Элементы.ВидДеятельностиДоходовПоАвансамИП.Видимость = Форма.ВестиУчетПоВидамДеятельностиИП;	
	Элементы.ВидДеятельностиДоходовПоАвансамИП.Доступность = Форма.ИППорядокВключенияАвансовВДоходы = 1;
		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыЗакрытия()
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("АвансыВключаютсяВДоходыВПериодеПолученияИП", ?(ИППорядокВключенияАвансовВДоходы = 1, Истина, Ложь));
	ПараметрыЗакрытия.Вставить("ВидДеятельностиДоходовПоАвансамИП", ВидДеятельностиДоходовПоАвансамИП);
	
	Возврат ПараметрыЗакрытия;
	
КонецФункции
