&НаКлиенте
Перем ОтветПередЗакрытием;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗакрыватьПриЗакрытииВладельца = Истина;
	
	Организация = Параметры.Организация;
	РассчитыватьСебестоимостьПолуфабрикатов = Параметры.РассчитыватьСебестоимостьПолуфабрикатов;
	СпособРасчетаСебестоимостиПроизводства = Параметры.СпособРасчетаСебестоимостиПроизводства;
	РассчитыватьСебестоимостьУслугСобственнымПодразделениям = Параметры.РассчитыватьСебестоимостьУслугСобственнымПодразделениям;
	УчитыватьОтклоненияОтПлановойСебестоимости = Параметры.СпособУчетаВыпускаГотовойПродукции = Перечисления.СпособыУчетаВыпускаГотовойПродукции.СИспользованиемСчета40;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтветПередЗакрытием <> Истина Тогда
		
		Отказ = Истина;
		
		Оповещение = Новый ОписаниеОповещения(
			"ПередЗакрытиемЗавершение",
			ЭтотОбъект);
			
		ТекстВопроса = НСтр("ru='Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ РассчитыватьСебестоимостьПолуфабрикатов И НЕ РассчитыватьСебестоимостьУслугСобственнымПодразделениям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособРасчетаСебестоимостиПроизводства");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РассчитыватьСебестоимостьПолуфабрикатовПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаСебестоимостиПроизводстваПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитыватьСебестоимостьУслугСобственнымПодразделениямПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	ПараметрыЗакрытия = ПолучитьПараметрыЗакрытия();
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВстречныйВыпускПродукцииУслуг(Команда)
	
	Если СпособРасчетаСебестоимостиПроизводства = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСебестоимостиПродукции.ПоПеределам") Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Организация));
		ОткрытьФорму("РегистрСведений.ВстречныйВыпускПродукцииУслуг.ФормаСписка", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПорядокПодразделенийДляЗакрытияСчетовЗатрат(Команда)

	Если СпособРасчетаСебестоимостиПроизводства = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям") Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Организация));
		ОткрытьФорму("Документ.УстановкаПорядкаЗакрытияПодразделений.ФормаСписка", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		ОтветПередЗакрытием	= Истина;
		ПараметрыЗакрытия = ПолучитьПараметрыЗакрытия();
		Закрыть(ПараметрыЗакрытия);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ОтветПередЗакрытием	= Истина;
		Закрыть();
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.СпособРасчетаСебестоимостиПроизводства.Доступность = Форма.РассчитыватьСебестоимостьПолуфабрикатов ИЛИ Форма.РассчитыватьСебестоимостьУслугСобственнымПодразделениям;
	Элементы.ВстречныйВыпускПродукцииУслуг.Доступность = Форма.РассчитыватьСебестоимостьПолуфабрикатов ИЛИ Форма.РассчитыватьСебестоимостьУслугСобственнымПодразделениям;
	Элементы.ПорядокПодразделенийДляЗакрытияСчетовЗатрат.Доступность = Форма.РассчитыватьСебестоимостьПолуфабрикатов ИЛИ Форма.РассчитыватьСебестоимостьУслугСобственнымПодразделениям;
	
	Если Форма.СпособРасчетаСебестоимостиПроизводства = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям") Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПорядокПодразделенийДляЗакрытияСчетовЗатрат;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВстречныйВыпускПродукцииУслуг;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыЗакрытия()
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("РассчитыватьСебестоимостьПолуфабрикатов", РассчитыватьСебестоимостьПолуфабрикатов);
	ПараметрыЗакрытия.Вставить("СпособРасчетаСебестоимостиПроизводства", СпособРасчетаСебестоимостиПроизводства);
	ПараметрыЗакрытия.Вставить("РассчитыватьСебестоимостьУслугСобственнымПодразделениям", РассчитыватьСебестоимостьУслугСобственнымПодразделениям);
	
	Если УчитыватьОтклоненияОтПлановойСебестоимости Тогда
		СпособУчетаВыпускаГотовойПродукции = ПредопределенноеЗначение("Перечисление.СпособыУчетаВыпускаГотовойПродукции.СИспользованиемСчета40");
	Иначе
		СпособУчетаВыпускаГотовойПродукции = ПредопределенноеЗначение("Перечисление.СпособыУчетаВыпускаГотовойПродукции.БезИспользованияСчета40");
	КонецЕсли;
	
	ПараметрыЗакрытия.Вставить("СпособУчетаВыпускаГотовойПродукции", СпособУчетаВыпускаГотовойПродукции);
	
	Возврат ПараметрыЗакрытия;
	
КонецФункции