////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Список.Параметры.УстановитьЗначениеПараметра("КонецТекущегоГода",  КонецГода(ТекущаяДатаСеанса()));
	
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачалаДействияПатентнойСистемы",
		УчетУСН.ДатаНачалаДействияПатентнойСистемы());
	
	Список.Параметры.УстановитьЗначениеПараметра("ПредставлениеУСНПатента",       НСтр("ru = 'Упрощенная на основе патента'"));
	Список.Параметры.УстановитьЗначениеПараметра("ПредставлениеПатентнойСистемы", НСтр("ru = 'Патентная'"));
	Список.Параметры.УстановитьЗначениеПараметра("ПредставлениеЕНВД",             НСтр("ru = 'ЕНВД'"));
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
		ЭлементОтбораОрганизация = ОтборыСписковКлиентСервер.ЭлементОтбораСпискаПоИмени(Список, "Организация");
		Если ЭлементОтбораОрганизация <> Неопределено Тогда
			ЭлементОтбораОрганизация.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		КонецЕсли;
		Элементы.ГруппаОтборОрганизация.Видимость = Истина;
	Иначе
		ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
		Элементы.ГруппаОтборОрганизация.Видимость = Ложь;
	КонецЕсли;

	УстановитьУсловноеОформление();
		
	// Заполнение группы информационных ссылок
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" И НЕ ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, , Параметр);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		ТекущаяОрганизация = Элементы.Список.ТекущиеДанные.Организация;
	Иначе
		ЗначенияЗаполнения = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
		ТекущаяОрганизация = ?(ЗначенияЗаполнения.Свойство("Организация"), ЗначенияЗаполнения.Организация, Неопределено);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяОрганизация) 
		И ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоОбособленноеПодразделение(ТекущаяОрганизация) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Учетная политика обособленного подразделения не редактируется.
		|Необходимо изменять учетную политику головной организации.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Организация) 
		И ЭтоОбособленноеПодразделение(ТекущиеДанные.Организация) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Учетная политика обособленного подразделения не редактируется.
		|Необходимо изменять учетную политику головной организации.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");

	ПолеОрганизацияНаименование = Новый ПолеКомпоновкиДанных("Организация.Наименование");
	ПолеОрганизация = Новый ПолеКомпоновкиДанных("Организация");
	
	Для каждого ЭлементНастроек Из Настройки.Элементы Цикл
		
		Если ТипЗнч(ЭлементНастроек) = Тип("ПорядокКомпоновкиДанных") 
		И ЭлементНастроек.ИдентификаторПользовательскойНастройки = Список.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки Тогда
			
			Для каждого ЭлементПорядка Из ЭлементНастроек.Элементы Цикл
				
				Если ЭлементПорядка.Поле = ПолеОрганизацияНаименование Тогда
					ЭлементПорядка.Поле = ПолеОрганизация;
				КонецЕсли;
				
				Прервать;
				
			КонецЦикла;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПечатьПриказ(Команда)
	
	ВыполнитьКомандуПечати("Приказ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУчетнаяПолитикаБУ(Команда)
	
	ВыполнитьКомандуПечати("УчетнаяПолитикаБУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПланСчетов(Команда)
	
	ВыполнитьКомандуПечати("ПланСчетов");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПервичныеДокументы(Команда)
	
	ВыполнитьКомандуПечати("ПервичныеДокументы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРегистрыБУ(Команда)
	
	ВыполнитьКомандуПечати("РегистрыБУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУчетнаяПолитикаНУ(Команда)
	
	ВыполнитьКомандуПечати("УчетнаяПолитикаНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРегистрыНУ(Команда)
	
	ВыполнитьКомандуПечати("РегистрыНУ");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Организация");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтборОрганизация", ВидСравненияКомпоновкиДанных.НеРавно, Справочники.Организации.ПустаяСсылка());

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоОбособленноеПодразделение(Ссылка)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ОбособленноеПодразделение");
	
КонецФункции

// Печать

&НаКлиенте
Процедура ВыполнитьКомандуПечати(ИмяМакета)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ИмяМакета",   ИмяМакета);
	ПараметрыПечати.Вставить("Организация", ТекущиеДанные.Организация);
	ПараметрыПечати.Вставить("Период",      ТекущиеДанные.Период);
	
	Если ИмяМакета = "РегистрыНУ" ИЛИ ИмяМакета = "РегистрыБУ" 
		ИЛИ ИмяМакета = "ПервичныеДокументы"
		ИЛИ ИмяМакета = "ПланСчетов" Тогда
		
		ОбъектыПечати = Новый Массив;
		ОбъектыПечати.Добавить(ТекущиеДанные.Организация);
		Если ИмяМакета = "РегистрыБУ" Тогда
			ТекстЗаголовка = НСтр("ru='Регистры БУ на %1 по %2'");
		ИначеЕсли ИмяМакета = "РегистрыНУ" Тогда
			ТекстЗаголовка = НСтр("ru='Регистры НУ на %1 по %2'");
		ИначеЕсли ИмяМакета = "ПервичныеДокументы" Тогда
			ТекстЗаголовка = НСтр("ru='Формы первичных документов на %1 по %2'");
		ИначеЕсли ИмяМакета = "ПланСчетов" Тогда
			ТекстЗаголовка = НСтр("ru='Рабочий план счетов на %1 по %2'");
		КонецЕсли;
		ПараметрыПечати.Вставить("ЗаголовокФормы", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстЗаголовка,
			Формат(ТекущиеДанные.Период, "ДЛФ=D"),
			ТекущиеДанные.Организация));
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("РегистрСведений.УчетнаяПолитикаОрганизаций",
			ИмяМакета, ОбъектыПечати, ЭтотОбъект, ПараметрыПечати);
		
	Иначе
		ОткрытьФорму("РегистрСведений.УчетнаяПолитикаОрганизаций.Форма.ФормаПечати", 
			ПараметрыПечати, ЭтотОбъект, ИмяМакета);
	КонецЕсли;
	
КонецПроцедуры

