

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Загрузим настройки разделов монитора
	СписокРазделовИзНастроек = ХранилищеОбщихНастроек.Загрузить("МониторРуководителя", "СписокРазделовМонитораРуководителя");
	Если СписокРазделовИзНастроек = Неопределено Тогда
		
		// Если не удалось получить настройку пользователя
		// загрузим настройку по умолчанию
		ЗаполнитьСписокРазделовПоУмолчанию();
		
	Иначе
		
		ЗагрузитьСписокРазделов(СписокРазделовИзНастроек);
		
	КонецЕсли;	
	
	// Получаем настройку округления
	ВариантОкругленияИзНастроек = ХранилищеОбщихНастроек.Загрузить("МониторРуководителя", "ВариантОкругленияМонитораРуководителя");
	
	Если ВариантОкругленияИзНастроек = Неопределено Тогда
		// По умолчанию до целых рублей
		ВариантОкругления = 1;
	Иначе
		ВариантОкругления = ВариантОкругленияИзНастроек;
	КонецЕсли;		
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРазделов

&НаКлиенте
Процедура СписокРазделовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРазделовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	// Сохраняем настройки
	СохранитьНастройкиНаСервере();
	
	Закрыть(Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	// Просто закрываем форму
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныеНастройки(Команда)
	
	ЗаполнитьСписокРазделовПоУмолчанию();
	ВариантОкругления = 1;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьСписокРазделов(Список)
	
	СписокРазделов.Очистить();
	
	Для Каждого Раздел Из Список Цикл
		
		СписокРазделов.Добавить(Раздел.Значение, Раздел.Представление, Раздел.Пометка);
		
	КонецЦикла;
	
	Если БухгалтерскийУчетВызовСервераПовтИсп.ИспользоватьОднуНоменклатурнуюГруппу() Тогда
		НайденныйЭлемент = СписокРазделов.НайтиПоЗначению(Перечисления.РазделыМонитораРуководителя.ПродажиПоНоменклатурнымГруппам);
		Если НайденныйЭлемент <> Неопределено Тогда
			СписокРазделов.Удалить(НайденныйЭлемент);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРазделовПоУмолчанию()
	
	СписокРазделовПоУмолчанию = МониторРуководителя.СтандартныйСписокРазделовМонитораРуководителя();
	ЗагрузитьСписокРазделов(СписокРазделовПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	СписокРазделовДляСохранения = Новый СписокЗначений;
	
	// Сложим данные формы в СписокЗначений
	Для Каждого Раздел Из СписокРазделов Цикл
		
		СписокРазделовДляСохранения.Добавить(Раздел.Значение, Раздел.Представление, Раздел.Пометка);
		
	КонецЦикла;
	
	Если БухгалтерскийУчетВызовСервераПовтИсп.ИспользоватьОднуНоменклатурнуюГруппу() Тогда
		РазделПродажиПоНоменклатурнымГруппам = Перечисления.РазделыМонитораРуководителя.ПродажиПоНоменклатурнымГруппам;
		СписокРазделовДляСохранения.Добавить(РазделПродажиПоНоменклатурнымГруппам, РазделПродажиПоНоменклатурнымГруппам, Истина);
	КонецЕсли;
	
	// Записываем настройки в хранилище
	ХранилищеОбщихНастроек.Сохранить("МониторРуководителя", "СписокРазделовМонитораРуководителя", СписокРазделовДляСохранения, "Настройка разделов монитора руководителя");
	ХранилищеОбщихНастроек.Сохранить("МониторРуководителя", "ВариантОкругленияМонитораРуководителя", ВариантОкругления, "Единица измерения монитора руководителя (руб./тыс. руб)");
	
КонецПроцедуры

#КонецОбласти
