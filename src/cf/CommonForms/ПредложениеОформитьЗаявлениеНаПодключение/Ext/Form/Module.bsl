
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрофилиНастроекЭДО.Ссылка
	|ИЗ
	|	Справочник.ПрофилиНастроекЭДО КАК ПрофилиНастроекЭДО
	|ГДЕ
	|	ПрофилиНастроекЭДО.СпособОбменаЭД = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО)";
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		ТекстЗапроса = ТекстЗапроса + " И
			|	ПрофилиНастроекЭДО.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПрофильНастроекЭДО = Выборка.Ссылка;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация", Организация) И ЗначениеЗаполнено(Организация)
		И ЗначениеЗаполнено(ПрофильНастроекЭДО) ТОгда
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	HTMLДокумент = ПолучитьОбщийМакет("ПредложениеОформитьЗаявлениеНаПодключение").ПолучитьТекст();
	Если Параметры.Свойство("Контрагент", Контрагент) И ЗначениеЗаполнено(Контрагент) Тогда
		
		// Проверим необходимость запуска фонового задания
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияКонтрагентовЭД.Состояние
		|ИЗ
		|	РегистрСведений.СостоянияКонтрагентовЭД КАК СостоянияКонтрагентовЭД
		|ГДЕ
		|	СостоянияКонтрагентовЭД.Контрагент = &Контрагент
		|	И СостоянияКонтрагентовЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаЭД.Подключен)";
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Не Выборка.Следующий() Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		HTMLДокумент = ПолучитьОбщийМакет("ПредложениеОформитьЗаявлениеНаПодключениеИзСправочникаКонтрагенты").ПолучитьТекст();
	КонецЕсли;

	Если Параметры.Свойство("ПоказыватьКнопки") И Параметры.ПоказыватьКнопки Тогда
		
		Элементы.ГруппаКнопок.Видимость = Истина;
		
		БольшеНеПоказывать 	= ХранилищеОбщихНастроек.Загрузить("Обработка.ЭлектронныеДокументы", "НеПоказыватьПредложениеОформитьЗаявлениеНаПодключение");
		
		Если БольшеНеПоказывать = Истина Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейФормы

&НаКлиенте
Процедура ПолеHTMLДокументаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	
	Попытка
		Ссылка = ДанныеСобытия.href;
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Найти(Ссылка, "&ОформлениеЗаявления") <> 0 Тогда
		
		Если ЭлектронныеДокументыСлужебныйВызовСервера.ЕстьПравоОбработкиЭД() Тогда
			
			УстановитьЗначенияКонстант();
			
			Если ЗначениеЗаполнено(ПрофильНастроекЭДО) И ЗначениеЗаполнено(Контрагент) Тогда
				ПараметрыФормы = Новый Структура;
				ЗначенияЗаполнения = Новый Структура;
				ЗначенияЗаполнения.Вставить("Контрагент", Контрагент);
				ЗначенияЗаполнения.Вставить("ПрофильНастроекЭДО", ПрофильНастроекЭДО);
				
				ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
				ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
				
			Иначе
				
				СпособыОЭД = Новый Массив;
				СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
				
				ПарметрыОткрытия = Новый Структура();
				ПараметрыФормы.Вставить("Организация", Организация);
				ПараметрыФормы.Вставить("Контрагент", Контрагент);
				
				ОткрытьФорму("Справочник.ПрофилиНастроекЭДО.Форма.ПомощникПодключенияЭДО", ПараметрыФормы);
			КонецЕсли;
			Закрыть();
		КонецЕсли;
	ИначеЕсли Найти(Ссылка, "&ЗакрытьЗаявление") <> 0 Тогда
		Закрыть();
	ИначеЕсли Ссылка <> Неопределено Тогда
		ПоказатьВебСтраницу(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLДокументаПриНажатииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Если КонтекстЭДОКлиент <> Неопределено Тогда 
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Организация", Организация);
		ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.МастерФормированияЗаявкиНаПодключение", ПараметрыФормы);
		Закрыть();
	Иначе
		ПоказатьПредупреждение(,"Недостаточно прав для использования модуля документооборота!
			|Пользователю требуется назначить роль ""Право на защищенный документооборот с контролирующими органами"".");
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НажатиеБольшеНеПоказывать(Команда)
		
	СохранитьЗначениеБольшеНеПоказыватьНаСервере(Истина);
		
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеПоказатьПозже(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗначенияКонстант()
	
	ИспользуютсяОбменЭД = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
		"ИспользоватьОбменЭД");
	Если Не ИспользуютсяОбменЭД Тогда
		Константы.ИспользоватьОбменЭД.Установить(Истина);
	КонецЕсли;
	
	ИспользуютсяЭП = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
		"ИспользоватьЭлектронныеПодписиЭД");
	Если Не ИспользуютсяЭП Тогда
		Константы.ИспользоватьЭлектронныеПодписи.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВебСтраницу(АдресСтраницы) 
	
	Попытка
	
		ПерейтиПоНавигационнойСсылке(АдресСтраницы);

	Исключение
		
		ОбработкаИсключения(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаИсключения(ИнформацияОбОшибке)
	
	ПричинаОшибки = ИнформацияОбОшибке().Причина;
	
	ПоказатьПредупреждение(,?(ПричинаОшибки.Описание = Неопределено,
					 "При выполенении действия произошла ошибка.",
					 ПричинаОшибки.Описание));
	
КонецПроцедуры // ОбработкаИсключения() 

&НаСервереБезКонтекста
Процедура СохранитьЗначениеБольшеНеПоказыватьНаСервере(БольшеНеПоказывать)
	
	ХранилищеОбщихНастроек.Сохранить("Обработка.ЭлектронныеДокументы", "НеПоказыватьПредложениеОформитьЗаявлениеНаПодключение", БольшеНеПоказывать);
	
КонецПроцедуры

#КонецОбласти
