////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БанковскийСчетКонтрагента = Параметры.БанковскийСчетКонтрагента;
	БанковскийСчетОрганизации = Параметры.БанковскийСчетОрганизации;
	
	ЭтоСчетОрганизации                 = Параметры.Свойство("ЭтоСчетОрганизации");
	ОткрытИзПлатежки                   = Параметры.Свойство("ОткрытИзПлатежки");
	НастройкиОткрытыИзБанковскогоСчета = НЕ ОткрытИзПлатежки;
	
	Если ОткрытИзПлатежки ИЛИ НЕ ЭтоСчетОрганизации Тогда
		СтруктураБанковскийСчетКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчетКонтрагента,
			"Наименование, Владелец, ТекстКорреспондента, ТекстНазначения, ВсегдаУказыватьКПП");
		
		Контрагент = ?(НастройкиОткрытыИзБанковскогоСчета, Параметры.Контрагент, СтруктураБанковскийСчетКонтрагента.Владелец);
		БанковскийСчетНаименование = ?(ЗначениеЗаполнено(БанковскийСчетКонтрагента),
			СтруктураБанковскийСчетКонтрагента.Наименование, Параметры.Наименование);
		БанковскийСчетКонтрагентаАвтоТекстКорреспондента = СформироватьТекстНаименованияПлательщикаПолучателя(
			Контрагент, БанковскийСчетКонтрагента);
		
		Если НастройкиОткрытыИзБанковскогоСчета Тогда
			ЗаполнитьЗначенияСвойств(СтруктураБанковскийСчетКонтрагента, Параметры.НастройкиПП);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.АвтоТекстНазначения) Тогда
			БанковскийСчетКонтрагентаАвтоТекстНазначения = Параметры.АвтоТекстНазначения;
		Иначе
			БанковскийСчетКонтрагентаАвтоТекстНазначения = НСтр("ru = 'Оплата по договору'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураБанковскийСчетКонтрагента.ТекстКорреспондента) Тогда
			БанковскийСчетКонтрагентаТекстКорреспондентаИспользование = 1;
			БанковскийСчетКонтрагентаТекстКорреспондента              = СтруктураБанковскийСчетКонтрагента.ТекстКорреспондента;
		Иначе
			БанковскийСчетКонтрагентаТекстКорреспондентаИспользование = 0;
			БанковскийСчетКонтрагентаТекстКорреспондента              = БанковскийСчетКонтрагентаАвтоТекстКорреспондента;
		КонецЕсли;
		
		БанковскийСчетКонтрагентаВсегдаУказыватьКПП = Число(СтруктураБанковскийСчетКонтрагента.ВсегдаУказыватьКПП);
		
		Если ЗначениеЗаполнено(СтруктураБанковскийСчетКонтрагента.ТекстНазначения) Тогда
			БанковскийСчетКонтрагентаТекстНазначенияИспользование = 1;
			БанковскийСчетКонтрагентаТекстНазначения              = СтруктураБанковскийСчетКонтрагента.ТекстНазначения;
		Иначе
			БанковскийСчетКонтрагентаТекстНазначенияИспользование = 0;
			БанковскийСчетКонтрагентаТекстНазначения              = БанковскийСчетКонтрагентаАвтоТекстНазначения;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоСчетОрганизации ИЛИ ОткрытИзПлатежки Тогда
		СтруктураБанковскийСчетОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчетОрганизации,
			"Наименование, Владелец, ТекстКорреспондента, ВсегдаУказыватьКПП, МесяцПрописью, СуммаБезКопеек");
		
		Организация = ?(НастройкиОткрытыИзБанковскогоСчета, Параметры.Организация, СтруктураБанковскийСчетОрганизации.Владелец);
		БанковскийСчетНаименование = ?(ЗначениеЗаполнено(БанковскийСчетОрганизации),
			СтруктураБанковскийСчетОрганизации.Наименование, Параметры.Наименование);
		БанковскийСчетОрганизацииАвтоТекстКорреспондента  = СформироватьТекстНаименованияПлательщикаПолучателя(
			Организация, БанковскийСчетОрганизации);
		АвтоНаименованиеПлательщикаПриПеречисленииВБюджет = СформироватьТекстНаименованияПлательщикаПолучателя(
			Организация, БанковскийСчетОрганизации, Истина);
		
		Если НастройкиОткрытыИзБанковскогоСчета Тогда
			ЗаполнитьЗначенияСвойств(СтруктураБанковскийСчетОрганизации, Параметры.НастройкиПП);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураБанковскийСчетОрганизации.ТекстКорреспондента) Тогда
			БанковскийСчетОрганизацииТекстКорреспондентаИспользование = 1;
			БанковскийСчетОрганизацииТекстКорреспондента              = СтруктураБанковскийСчетОрганизации.ТекстКорреспондента;
		Иначе
			БанковскийСчетОрганизацииТекстКорреспондентаИспользование = 0;
			БанковскийСчетОрганизацииТекстКорреспондента              = БанковскийСчетОрганизацииАвтоТекстКорреспондента;
		КонецЕсли;
		
		БанковскийСчетОрганизацииВсегдаУказыватьКПП = Число(СтруктураБанковскийСчетОрганизации.ВсегдаУказыватьКПП);
		БанковскийСчетОрганизацииМесяцПрописью      = Число(СтруктураБанковскийСчетОрганизации.МесяцПрописью);
		БанковскийСчетОрганизацииСуммаБезКопеек     = Число(СтруктураБанковскийСчетОрганизации.СуммаБезКопеек);
		
		Если НастройкиОткрытыИзБанковскогоСчета И Параметры.НастройкиПП.Свойство("НаименованиеПлательщикаПриПеречисленииВБюджет") Тогда
			НаименованиеПлательщикаПриПеречисленииВБюджет = Параметры.НастройкиПП.НаименованиеПлательщикаПриПеречисленииВБюджет;
		Иначе
			НаименованиеПлательщикаПриПеречисленииВБюджет = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Организация, "НаименованиеПлательщикаПриПеречисленииВБюджет");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НаименованиеПлательщикаПриПеречисленииВБюджет) Тогда
			НаименованиеПлательщикаПриПеречисленииВБюджетИспользование = 1;
		Иначе
			НаименованиеПлательщикаПриПеречисленииВБюджетИспользование = 0;
			НаименованиеПлательщикаПриПеречисленииВБюджет              = АвтоНаименованиеПлательщикаПриПеречисленииВБюджет;
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиОткрытыИзБанковскогоСчета Тогда
		ОтобразитьФормуБезЗакладок();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросСохранениеДанныхЗавершение", ЭтотОбъект);
		
		Если НастройкиОткрытыИзБанковскогоСчета Тогда
			ТекстВопроса = НСтр("ru = 'Данные были изменены. Перенести изменения?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		КонецЕсли;
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПеренестиДанныеВБанковскийСчет Тогда
		СтруктураРезультат = Новый Структура();
		
		Если ОткрытИзПлатежки ИЛИ НЕ ЭтоСчетОрганизации Тогда
			СтруктураРезультат.Вставить("ТекстКорреспондента",
				?(БанковскийСчетКонтрагентаТекстКорреспондентаИспользование, БанковскийСчетКонтрагентаТекстКорреспондента, ""));
			СтруктураРезультат.Вставить("ВсегдаУказыватьКПП", БанковскийСчетКонтрагентаВсегдаУказыватьКПП);
			СтруктураРезультат.Вставить("ТекстНазначения",
				?(БанковскийСчетКонтрагентаТекстНазначенияИспользование, БанковскийСчетКонтрагентаТекстНазначения, ""));
		КонецЕсли;
		
		Если ЭтоСчетОрганизации ИЛИ ОткрытИзПлатежки Тогда
			СтруктураРезультат.Вставить("ТекстКорреспондента",
				?(БанковскийСчетОрганизацииТекстКорреспондентаИспользование, БанковскийСчетОрганизацииТекстКорреспондента, ""));
			СтруктураРезультат.Вставить("ВсегдаУказыватьКПП", БанковскийСчетОрганизацииВсегдаУказыватьКПП);
			
			СтруктураРезультат.Вставить("МесяцПрописью",  БанковскийСчетОрганизацииМесяцПрописью);
			СтруктураРезультат.Вставить("СуммаБезКопеек", БанковскийСчетОрганизацииСуммаБезКопеек);
			СтруктураРезультат.Вставить("НаименованиеПлательщикаПриПеречисленииВБюджет",
				?(НаименованиеПлательщикаПриПеречисленииВБюджетИспользование, НаименованиеПлательщикаПриПеречисленииВБюджет, ""));
		КонецЕсли;
		
		ОповеститьОВыборе(СтруктураРезультат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если БанковскийСчетКонтрагентаТекстКорреспондентаИспользование = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("БанковскийСчетКонтрагентаТекстКорреспондента");
	КонецЕсли;
	
	Если БанковскийСчетКонтрагентаТекстНазначенияИспользование = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("БанковскийСчетКонтрагентаТекстНазначения");
	КонецЕсли;
	
	Если БанковскийСчетОрганизацииТекстКорреспондентаИспользование = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("БанковскийСчетОрганизацииТекстКорреспондента");
	КонецЕсли;
	
	Если НаименованиеПлательщикаПриПеречисленииВБюджетИспользование = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаименованиеПлательщикаПриПеречисленииВБюджет");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура БанковскийСчетКонтрагентаТекстКорреспондентаИспользованиеПриИзменении(Элемент)
	
	Если БанковскийСчетКонтрагентаТекстКорреспондентаИспользование = 0 Тогда
		БанковскийСчетКонтрагентаТекстКорреспондента = БанковскийСчетКонтрагентаАвтоТекстКорреспондента;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетКонтрагентаТекстНазначенияИспользованиеПриИзменении(Элемент)
	
	Если БанковскийСчетКонтрагентаТекстНазначенияИспользование = 0 Тогда
		БанковскийСчетКонтрагентаТекстНазначения = БанковскийСчетКонтрагентаАвтоТекстНазначения;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетОрганизацииТекстКорреспондентаИспользованиеПриИзменении(Элемент)
	
	Если БанковскийСчетОрганизацииТекстКорреспондентаИспользование = 0 Тогда
		БанковскийСчетОрганизацииТекстКорреспондента = БанковскийСчетОрганизацииАвтоТекстКорреспондента;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПлательщикаПриПеречисленииВБюджетПриИзменении(Элемент)
	
	Если НаименованиеПлательщикаПриПеречисленииВБюджетИспользование = 0 Тогда
		НаименованиеПлательщикаПриПеречисленииВБюджет = АвтоНаименованиеПлательщикаПриПеречисленииВБюджет;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Записать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьДанные();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиДанныеВБанковскийСчет = Модифицированность;
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ПеренестиДанныеВБанковскийСчет = Истина;
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОтобразитьФормуБезЗакладок()
	
	Элементы.ФормаГруппаОткрытоИзПП.Видимость    = Ложь;
	Элементы.ГруппаКомментарий.Видимость         = Ложь;
	Элементы.ФормаГруппаОткрытоИзСчета.Видимость = Истина;
	Элементы.ФормаОК.КнопкаПоУмолчанию           = Истина;
	ПоложениеКоманднойПанели                     = ПоложениеКоманднойПанелиФормы.Низ;
	КоманднаяПанель.ГоризонтальноеПоложение      = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ГруппаСтраницы.ОтображениеСтраниц   = ОтображениеСтраницФормы.Нет;
	Если Параметры.Свойство("ЭтоСчетОрганизации") Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница  = Элементы.ГруппаНастройкиДляОрганизации;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница  = Элементы.ГруппаНастройкиДляКонтрагента;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.БанковскийСчетКонтрагентаТекстКорреспондента.Доступность  = Форма.БанковскийСчетКонтрагентаТекстКорреспондентаИспользование;
	Элементы.БанковскийСчетКонтрагентаТекстНазначения.Доступность      = Форма.БанковскийСчетКонтрагентаТекстНазначенияИспользование;
	Элементы.БанковскийСчетОрганизацииТекстКорреспондента.Доступность  = Форма.БанковскийСчетОрганизацииТекстКорреспондентаИспользование;
	Элементы.НаименованиеПлательщикаПриПеречисленииВБюджет.Доступность = Форма.НаименованиеПлательщикаПриПеречисленииВБюджетИспользование;
	
КонецПроцедуры

&НаСервере
Функция СформироватьТекстНаименованияПлательщикаПолучателя(Знач ВладелецСчета, Знач БанковскийСчет, Знач ПеречислениеВБюджет = Ложь) Экспорт
	
	Возврат УчетДенежныхСредствБП.НаименованиеПлательщикаПолучателяПоУмолчанию(
		ВладелецСчета,
		БанковскийСчет,
		ПеречислениеВБюджет,
		ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьДанные()
	
	Если ЗаписатьДанныеСервер() Тогда
		Модифицированность = Ложь;
		Оповестить("ИзменениеНастроекПлатежныхПорученийИТребований");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьДанныеСервер()
	
	Результат = Истина;
	
	БанковскийСчетКонтрагентаОбъект = БанковскийСчетКонтрагента.ПолучитьОбъект();
	БанковскийСчетКонтрагентаОбъект.ТекстКорреспондента =
		?(БанковскийСчетКонтрагентаТекстКорреспондентаИспользование, БанковскийСчетКонтрагентаТекстКорреспондента, "");
	БанковскийСчетКонтрагентаОбъект.ВсегдаУказыватьКПП  = БанковскийСчетКонтрагентаВсегдаУказыватьКПП;
	БанковскийСчетКонтрагентаОбъект.ТекстНазначения     =
		?(БанковскийСчетКонтрагентаТекстНазначенияИспользование, БанковскийСчетКонтрагентаТекстНазначения, "");
	
	Попытка
		БанковскийСчетКонтрагентаОбъект.Записать();
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Если ИнформацияОбОшибке.Причина = Неопределено Тогда
			ОписаниеОшибки = ИнформацияОбОшибке.Описание;
		Иначе
			ОписаниеОшибки = ИнформацияОбОшибке.Причина.Описание;
		КонецЕсли;
		
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка при записи настроек банковского счета контрагента:
				|%1'"), ОписаниеОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
		
		Результат = Ложь;
	КонецПопытки;
	
	Если Результат Тогда
		ХранилищеОбщихНастроек.Сохранить(
			"НастройкиПлатежныхПорученийТребований",
			"ВсегдаУказыватьКППКонтрагента",
			БанковскийСчетКонтрагентаОбъект.ВсегдаУказыватьКПП);
	КонецЕсли;
	
	БанковскийСчетОрганизацииОбъект = БанковскийСчетОрганизации.ПолучитьОбъект();
	БанковскийСчетОрганизацииОбъект.ТекстКорреспондента =
		?(БанковскийСчетОрганизацииТекстКорреспондентаИспользование, БанковскийСчетОрганизацииТекстКорреспондента, "");
	БанковскийСчетОрганизацииОбъект.ВсегдаУказыватьКПП = БанковскийСчетОрганизацииВсегдаУказыватьКПП;
	БанковскийСчетОрганизацииОбъект.МесяцПрописью      = БанковскийСчетОрганизацииМесяцПрописью;
	БанковскийСчетОрганизацииОбъект.СуммаБезКопеек     = БанковскийСчетОрганизацииСуммаБезКопеек;
	
	Попытка
		БанковскийСчетОрганизацииОбъект.Записать();
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Если ИнформацияОбОшибке.Причина = Неопределено Тогда
			ОписаниеОшибки = ИнформацияОбОшибке.Описание;
		Иначе
			ОписаниеОшибки = ИнформацияОбОшибке.Причина.Описание;
		КонецЕсли;
		
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка при записи настроек банковского счета организации:
				|%1'"), ОписаниеОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
		
		Результат = Ложь;
	КонецПопытки;
	
	Если Результат Тогда
		ХранилищеОбщихНастроек.Сохранить(
			"НастройкиПлатежныхПорученийТребований",
			"ВсегдаУказыватьКППОрганизации",
			БанковскийСчетОрганизацииОбъект.ВсегдаУказыватьКПП);
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ДобавлениеИзменениеНастроекБухгалтерии") Тогда
		
		ОрганизацияОбъект = Организация.ПолучитьОбъект();
		ОрганизацияОбъект.НаименованиеПлательщикаПриПеречисленииВБюджет =
			?(НаименованиеПлательщикаПриПеречисленииВБюджетИспользование, НаименованиеПлательщикаПриПеречисленииВБюджет, "");
		
		Попытка
			ОрганизацияОбъект.Записать();
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			Если ИнформацияОбОшибке.Причина = Неопределено Тогда
				ОписаниеОшибки = ИнформацияОбОшибке.Описание;
			Иначе
				ОписаниеОшибки = ИнформацияОбОшибке.Причина.Описание;
			КонецЕсли;
			
			ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при записи настроек организации:
					|%1'"), ОписаниеОшибки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
			
			Результат = Ложь;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВопросСохранениеДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да И ПроверитьЗаполнение() Тогда
		Если НастройкиОткрытыИзБанковскогоСчета Тогда
			ПеренестиДанныеВБанковскийСчет = Истина;
			Модифицированность = Ложь;
		Иначе
			ЗаписатьДанные();
		КонецЕсли;
		
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры
