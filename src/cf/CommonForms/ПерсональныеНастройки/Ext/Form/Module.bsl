////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаСервере
Процедура ПриИзмененииПодразделенияСервер()

	Если НЕ ОсновноеПодразделение.Пустая() Тогда
		ОрганизацияПодразделения = БухгалтерскийУчетПереопределяемый.ОрганизацияПодразделения(ОсновноеПодразделение);
		Если ЗначениеЗаполнено(ОрганизацияПодразделения) 
			И ОрганизацияПодразделения <> ОсновнаяОрганизация Тогда
			ОсновнаяОрганизация = ОрганизацияПодразделения;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОсновноеПодразделениеПриИзменении(Элемент)

	ПриИзмененииПодразделенияСервер();

КонецПроцедуры

&НаКлиенте
Функция ОписаниеНастройки(Объект, Настойка, Значение)
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", Объект);
	Элемент.Вставить("Настройка", Настойка);
	Элемент.Вставить("Значение", Значение);
	
	Возврат Элемент;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ЗаписатьДанные();
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные()
	
	СохранитьНастройкиСервер();
	
	Если ТекущаяОрганизация <> ОсновнаяОрганизация Тогда
		Оповестить("ИзменениеОсновнойОрганизации", ОсновнаяОрганизация);
	КонецЕсли;
	
	Если ТекущееПодразделение <> ОсновноеПодразделение Тогда
		Оповестить("ИзменениеОсновногоПодразделенияОрганизации", ОсновноеПодразделение);
	КонецЕсли;
	
	Если ТекущийСклад <> ОсновнойСклад Тогда
		Оповестить("ИзменениеОсновногоСклада", ОсновнойСклад);
	КонецЕсли;
	
	МассивСтруктур = Новый Массив;
	
	// БазоваяФункциональность
	МассивСтруктур.Добавить(ОписаниеНастройки(
	    "ОбщиеНастройкиПользователя",
	    "ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",
	    ЗапрашиватьПодтверждениеПриЗавершенииПрограммы));
	// Конец БазоваяФункциональность
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранитьМассивИОбновитьПовторноИспользуемыеЗначения(МассивСтруктур);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Форма.Элементы.ЗначениеРабочейДаты.Доступность = Форма.ИспользоватьТекущуюДатуКомпьютера = 1;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ
//

&НаСервере
Процедура СохранитьНастройкиСервер()

	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ОсновнаяОрганизация",              ОсновнаяОрганизация);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации", ОсновноеПодразделение);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ОсновнойСклад",                    ОсновнойСклад);
	ОбщегоНазначенияБПВызовСервера.УстановитьЗначениеПоУмолчанию("ПоказыватьСчетаУчетаВДокументах",  ПоказыватьСчетаУчетаВДокументах);
	
	Если ИспользоватьТекущуюДатуКомпьютера = 0 Тогда
		ЗначениеРабочейДатыДляСохранения  = '0001-01-01';
	Иначе
		ЗначениеРабочейДатыДляСохранения  = ЗначениеРабочейДаты;
	КонецЕсли;
	ОбщегоНазначения.УстановитьРабочуюДатуПользователя(ЗначениеРабочейДатыДляСохранения);
	
	Модифицированность = Ложь;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОсновнаяОрганизация		= БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	ОсновноеПодразделение	= БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
	ОсновнойСклад			= БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	
	ПоказыватьСчетаУчетаВДокументах = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ПоказыватьСчетаУчетаВДокументах");
	
	ЗапрашиватьПодтверждениеПриЗавершенииПрограммы = СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы();
	ЗначениеРабочейДаты		= ОбщегоНазначения.РабочаяДатаПользователя();
	
	ТекущаяОрганизация		= ОсновнаяОрганизация;
	ТекущееПодразделение	= ОсновноеПодразделение;
	ТекущийСклад			= ОсновнойСклад;
	
	Если ЗначениеЗаполнено(ЗначениеРабочейДаты) Тогда
		ИспользоватьТекущуюДатуКомпьютера = 1;
	Иначе
		ИспользоватьТекущуюДатуКомпьютера = 0;
		ЗначениеРабочейДаты = '0001-01-01';
	КонецЕсли;

	УправлениеФормой(ЭтаФорма);

	ПоказыватьПредупреждениеОбИзменениях = Истина;
	Если НЕ Параметры.Свойство("ПоказыватьПредупреждениеОбИзменениях", ПоказыватьПредупреждениеОбИзменениях) Тогда
		ПоказыватьПредупреждениеОбИзменениях = Истина;
	КонецЕсли;
	
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДата", 
		ПоказыватьПредупреждениеОбИзменениях);
	
	Элементы.ГруппаИнтеграция1СБухфон.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьИнтеграцию1СБухфон");
	
	// СтандартныеПодсистемы.Пользователи
	АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
	Элементы.СведенияОПользователе.Заголовок = АвторизованныйПользователь;
	// Конец СтандартныеПодсистемы.Пользователи
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// Чтобы при режиме работы "В закладках" форма предупреждения открывалась поверх формы
	// персональных настроек, открываем ее с небольшой задержкой.
	ПодключитьОбработчикОжидания("ПоказатьПредупреждениеПриОткрытииОбработчикОжидания", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеПриОткрытииОбработчикОжидания()

	ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("РабочаяДата", , НастройкиПредупреждений);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru='Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДанные();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ
//

&НаКлиенте
Процедура ИспользоватьТекущуюДатуКомпьютераПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
	Если ИспользоватьТекущуюДатуКомпьютера = 0 Тогда
		ЗначениеРабочейДаты = '0001-01-01';
	ИначеЕсли ИспользоватьТекущуюДатуКомпьютера = 1 Тогда
		ЗначениеРабочейДаты = ТекущаяДата();
	КонецЕсли;
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура СведенияОПользователе(Команда)
	
	ПоказатьЗначение(, АвторизованныйПользователь);
	
КонецПроцедуры