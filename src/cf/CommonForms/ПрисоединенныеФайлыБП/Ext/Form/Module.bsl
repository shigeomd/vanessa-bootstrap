
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ВладелецФайла = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Список присоединенных файлов можно посмотреть только в форме объекта-владельца.'");
	Иначе
		ШаблонЗаголовка = НСтр("ru='Присоединенные файлы: %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, Параметры.ВладелецФайла);
		Заголовок = ТекстЗаголовка;
	КонецЕсли;
	
	ИмяСправочникаХранилищаФайлов = Неопределено;
	НастроитьДинамическийСписок(ИмяСправочникаХранилищаФайлов);
	
	ТипСправочникаСФайлами = Тип("СправочникСсылка." + ИмяСправочникаХранилищаФайлов);
	МетаданныеСправочникаСФайлами = Метаданные.НайтиПоТипу(ТипСправочникаСФайлами);
	
	Если НЕ ПравоДоступа("ИнтерактивноеДобавление", МетаданныеСправочникаСФайлами) Тогда
		Элементы.ФормаДобавить.Видимость = Ложь;
		Элементы.СписокКонтекстноеМенюДобавить.Видимость = Ложь;
	КонецЕсли;
	
	ИменаВсехКомандФормы = ПолучитьИменаКомандФормы();
	ИменаЭлементов = Новый Массив;
	
	Для Каждого ЭлементФормы Из Элементы Цикл
		Если ТипЗнч(ЭлементФормы) <> Тип("КнопкаФормы") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИменаВсехКомандФормы.Найти(ЭлементФормы.ИмяКоманды) <> Неопределено Тогда
			ИменаЭлементов.Добавить(ЭлементФормы.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ИменаЭлементовКнопокФормы = Новый ФиксированныйМассив(ИменаЭлементов);
	
	РасширенияПоддерживающиеПредпросмотр = СписокРасширенийДляПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОповеститьОбИзменении(Параметры.ВладелецФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_ПрисоединенныйФайл" Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаФайл = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
	
	Если ТипЗнч(СсылкаНаФайл) <> ТипСправочникаСФайлами Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр.Свойство("ЭтоНовый") И Параметр.ЭтоНовый Тогда
		
		Элементы.Список.ТекущаяСтрока = СсылкаНаФайл;
		УстановитьДоступностьКнопок();
		
	Иначе
		Если НЕ ДействиеРазрешено() Тогда
			Возврат;
		КонецЕсли;
		
		Если СсылкаНаФайл = Элементы.Список.ТекущиеДанные.Ссылка Тогда
			УстановитьДоступностьКнопок();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьДоступностьКнопок();
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если РасширенияПоддерживающиеПредпросмотр.НайтиПоЗначению(ТекущиеДанные.Расширение) <> Неопределено Тогда
		ДанныеФайла = ПолучитьДанныеФайла(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
		АдресДанныхФайла = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	Иначе
		АдресДанныхФайла = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Параметры.ВладелецФайла, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПрисоединенныеФайлыБПКлиент.ПараметрыПеретаскиванияСодержатФайлы(ПараметрыПеретаскивания) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПрисоединенныеФайлыБПКлиент.ДобавитьФайлыПеретаскиванием(
			ПараметрыПеретаскивания,
			Параметры.ВладелецФайла,
			УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	Элементы.Список.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	КлючеваяОперация = "ФормированиеПисьмаПрисоединенныеФайлы";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
	ФайлыДляОтправки = Элементы.Список.ВыделенныеСтроки;
	
	ПараметрыПисьма = ПодготовитьПараметрыЭлектронногоПисьма(ФайлыДляОтправки, Параметры.ВладелецФайла, УникальныйИдентификатор);
	
	Если ЗначениеЗаполнено(ПараметрыПисьма) Тогда
		РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыПисьма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКаталогФайла(Команда)
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ДанныеФайла = ПолучитьДанныеФайла(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
	ПрисоединенныеФайлыСлужебныйКлиент.ОткрытьКаталогСФайлом(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ДанныеФайла = ПолучитьДанныеФайла(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
	ПрисоединенныеФайлыКлиент.СохранитьФайлКак(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуФайла(Команда)
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПрисоединенныйФайл", Элементы.Список.ТекущиеДанные.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.ПрисоединенныйФайл", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуУдаления(Команда)
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные.ПометкаУдаления Тогда
		ТекстВопроса = НСтр("ru='Снять пометку на удаление с файла ""%1""?'");
	Иначе
		ТекстВопроса = НСтр("ru='Пометить на удаление файл ""%1""?'");
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ТекущиеДанные.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьПометкуУдаленияОтветПолучен", ЭтотОбъект, ТекущиеДанные);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СписокРасширенийДляПредпросмотра()
	
	РасширенияДляПредпросмотра = Новый СписокЗначений;
	РасширенияДляПредпросмотра.Добавить("jpg");
	РасширенияДляПредпросмотра.Добавить("jpeg");
	РасширенияДляПредпросмотра.Добавить("tiff");
	РасширенияДляПредпросмотра.Добавить("tif");
	РасширенияДляПредпросмотра.Добавить("gif");
	РасширенияДляПредпросмотра.Добавить("bmp");
	РасширенияДляПредпросмотра.Добавить("png");
	
	Возврат РасширенияДляПредпросмотра;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьПараметрыЭлектронногоПисьма(Знач ФайлыДляОтправки, Знач ВладелецФайла, Знач УникальныйИдентификатор)
	
	Получатель = "";
	Вложения = Новый Массив;
	ТолькоОдинФайл = ФайлыДляОтправки.Количество() = 1;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", ВладелецФайла.Метаданные()) Тогда
		Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецФайла, "Контрагент");
		Получатель = ОтправкаПочтовыхСообщений.АдресаЭлектроннойПочты(Контрагент);
	КонецЕсли;
	
	ШаблонТемаПисьма = НСтр("ru='%1, %2 к документу %3 %4 от %5'");
	НомерДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецФайла, "Номер");
	ДатаДокумента  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецФайла, "Дата");
	ТемаПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТемаПисьма,
		?(ТолькоОдинФайл, НСтр("ru='Файл'"), НСтр("ru='Файлы'")),
		?(ТолькоОдинФайл, НСтр("ru='присоединенный'"), НСтр("ru='присоединенные'")),
		ТипЗнч(ВладелецФайла),
		ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерДокумента, Истина, Истина),
		Формат(ДатаДокумента, "ДЛФ=DD"));
		
	ШаблонТекстаПисьма = НСтр("ru='К письму %1 %2:'");
	ТекстПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаПисьма,
		?(ТолькоОдинФайл, НСтр("ru='присоединен'"), НСтр("ru='присоединены'")),
		?(ТолькоОдинФайл, НСтр("ru='файл'"), НСтр("ru='файлы'")));
	
	Для Каждого ФайлДляОтправки Из ФайлыДляОтправки Цикл
		ДанныеФайла = ПолучитьДанныеФайла(ФайлДляОтправки, УникальныйИдентификатор);
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Представление"            , ДанныеФайла.ИмяФайла);
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
		Вложения.Добавить(ОписаниеФайла);
		ИмяФайлаДляПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='	%1'"), ДанныеФайла.ИмяФайла);
		ТекстПисьма = ТекстПисьма + Символы.ПС + ИмяФайлаДляПисьма;
	КонецЦикла;
	
	
	ПараметрыОтправки = Новый Структура;
	ПараметрыОтправки.Вставить("Получатель"               , Получатель);
	ПараметрыОтправки.Вставить("Тема"                     , ТемаПисьма);
	ПараметрыОтправки.Вставить("Текст"                    , ТекстПисьма);
	ПараметрыОтправки.Вставить("Вложения"                 , Вложения);
	ПараметрыОтправки.Вставить("УдалятьФайлыПослеОтправки", Истина);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФайл()
	
	Если НЕ ДействиеРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ДанныеФайла = ПолучитьДанныеФайла(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	
КонецПроцедуры

&НаКлиенте
Функция ДействиеРазрешено()
	
	ДействиеРазрешено = Истина;
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		ДействиеРазрешено = Ложь;
	КонецЕсли;
	
	Возврат ДействиеРазрешено;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьКнопок()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ИменаКоманд = Новый Массив;
		ИменаКоманд.Добавить("Добавить");
	ИначеЕсли ТипЗнч(Элементы.Список.ТекущаяСтрока) <> ТипСправочникаСФайлами Тогда
		ИменаКоманд = Новый Массив;
	Иначе
		ИменаКоманд = ПолучитьИменаКомандФормы();
	КонецЕсли;
	
	Для Каждого ИмяЭлементаФормы Из ИменаЭлементовКнопокФормы Цикл
		
		ЭлементФормы = Элементы.Найти(ИмяЭлементаФормы);
		
		Если ИменаКоманд.Найти(ЭлементФормы.ИмяКоманды) <> Неопределено Тогда
			Если НЕ ЭлементФормы.Доступность Тогда
				ЭлементФормы.Доступность = Истина;
			КонецЕсли;
			
		ИначеЕсли ЭлементФормы.Доступность Тогда
			ЭлементФормы.Доступность = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(Знач ПрисоединенныйФайл,
			Знач ИдентификаторФормы = Неопределено,
			Знач ПолучатьСсылкуНаДвоичныеДанные = Истина)
	
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(
		ПрисоединенныйФайл, ИдентификаторФормы, ПолучатьСсылкуНаДвоичныеДанные);
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьЗначениеПометкиУдаления(Знач ПрисоединенныйФайл, Знач ПометкаУдаления)
	
	ПрисоединенныйФайлОбъект = ПрисоединенныйФайл.ПолучитьОбъект();
	ПрисоединенныйФайлОбъект.ПометкаУдаления = ПометкаУдаления;
	ПрисоединенныйФайлОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДинамическийСписок(ИмяСправочникаХранилищаФайлов)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Файлы.Ссылка КАК Ссылка,
	|	Файлы.ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА Файлы.ПометкаУдаления = ИСТИНА
	|			ТОГДА Файлы.ИндексКартинки + 1
	|		ИНАЧЕ Файлы.ИндексКартинки
	|	КОНЕЦ КАК ИндексКартинки,
	|	Файлы.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(Файлы.Описание КАК СТРОКА(500)) КАК Описание,
	|	Файлы.Расширение КАК Расширение
	|ИЗ
	|	&ИмяСправочника КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &ВладелецФайлов";
	
	ЗаголовокОшибки = НСтр("ru='Ошибка при настройке динамического списка присоединенных файлов.'");
	ОкончаниеОшибки = НСтр("ru='В этом случае настройка динамического списка невозможна.'");
	
	ИмяСправочникаХранилищаФайлов = ПрисоединенныеФайлыСлужебный.ИмяСправочникаХраненияФайлов(
		Параметры.ВладелецФайла, "", ЗаголовокОшибки, ОкончаниеОшибки);
	
	ПолноеИмяСправочника = "Справочник." + ИмяСправочникаХранилищаФайлов;
	Список.ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяСправочника", ПолноеИмяСправочника);
	
	Список.Параметры.УстановитьЗначениеПараметра("ВладелецФайлов" , Параметры.ВладелецФайла);
	Список.ОсновнаяТаблица = ПолноеИмяСправочника;
	Список.ДинамическоеСчитываниеДанных = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИменаКомандФормы()
	
	ИменаКоманд = Новый Массив;
	
	ИменаКоманд.Добавить("Добавить");
	ИменаКоманд.Добавить("Отправить");
	ИменаКоманд.Добавить("ОткрытьКарточкуФайла");
	ИменаКоманд.Добавить("УстановитьПометкуУдаления");
	ИменаКоманд.Добавить("СохранитьКак");
	ИменаКоманд.Добавить("ОткрытьКаталогФайла");
	
	Возврат ИменаКоманд;
	
КонецФункции

&НаКлиенте
Процедура УстановитьПометкуУдаленияОтветПолучен(ОтветПользователя, ТекущиеДанные) Экспорт
	
	Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
		УстановитьЗначениеПометкиУдаления(ТекущиеДанные.Ссылка, НЕ ТекущиеДанные.ПометкаУдаления);
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
