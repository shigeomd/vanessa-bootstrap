#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	Счет        = Параметры.Счет;
	
	Для НомерСубконто = 1 По 3 Цикл
		ЭтотОбъект["Субконто" + НомерСубконто] = Параметры["Субконто" + НомерСубконто];
	КонецЦикла;
	
	Направление = СокрЛП(Параметры.Направление);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Счет) Тогда
		ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
		Для Индекс = 1 По 3 Цикл
			Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
				ТипЗначенияСубконто = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				ЭтотОбъект["Субконто" + Индекс] = ТипЗначенияСубконто.ПривестиЗначение(ЭтотОбъект["Субконто" + Индекс]);
			Иначе
				ЭтотОбъект["Субконто" + Индекс] = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Счет = ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента Тогда
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			Если Не ЗначениеЗаполнено(ЭтотОбъект["Субконто" + НомерСубконто]) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Поле", "Заполнение", ЭтотОбъект["ЗаголовокСубконто" + НомерСубконто], , ,);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Субконто" + НомерСубконто, , Отказ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да И ПроверитьЗаполнение() Тогда
		ОповеститьОВыбореИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетУчетаПриИзменении(Элемент)
	
	УстановитьЗаголовкиИДоступностьСубконто(ЭтотОбъект);
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	
	ЗначенияСубконто = Новый Соответствие;
	ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет"), 
		ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог"));
	
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Счет, ЭтотОбъект, ПоляОбъекта,, ЗначенияСубконто);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокПараметров = СписокПараметровВыбораСубконто(ЭтотОбъект, ЭтотОбъект, "Субконто%Индекс%");
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтотОбъект, Элемент, СтандартнаяОбработка, СписокПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ОповеститьОВыбореИЗакрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Для Индекс = 1 По 3 Цикл
		
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Субконто" + Индекс);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
			"Счет", ВидСравненияКомпоновкиДанных.НеРавно, ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма)
	
	Счет = Форма.Счет;
	
	Если Форма.Направление = "Дт" Тогда
		Форма.ЗаголовокСчет = НСтр("ru = 'Счет дебета:'");
	ИначеЕсли Форма.Направление = "Кт" Тогда
		Форма.ЗаголовокСчет = НСтр("ru = 'Счет кредита:'");
	Иначе
		Форма.ЗаголовокСчет = НСтр("ru = 'Счет учета:'");
	КонецЕсли;
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3", 
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3");
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей);
	
	СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
		Если СвойстваСчета["ВидСубконто" + НомерСубконто] = ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыСтраховыхВзносовИП") Тогда
			Форма.Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = НСтр("ru = '<Авто>'");
		Иначе
			Форма.Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = "";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма)
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма, "Субконто%Индекс%");
	
	БухгалтерскийУчетКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(
		Форма, Форма, "Субконто%Индекс%", "Субконто%Индекс%", ПараметрыДокумента);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта)
	
	СписокПараметров = Новый Структура;
	
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("Организация", Форма.Организация);
	СписокПараметров.Вставить("СчетУчета",   Форма.Счет);
	
	Если Форма.Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДСНалоговогоАгента") Тогда
		СписокПараметров.Вставить("ТипыДокументов", Новый ОписаниеТипов(
			"ДокументСсылка.СписаниеСРасчетногоСчета,ДокументСсылка.РасходныйКассовыйОрдер,ДокументСсылка.КорректировкаДолга"));
	КонецЕсли;
	
	Возврат СписокПараметров;
	
КонецФункции

&НаКлиенте
Процедура ОповеститьОВыбореИЗакрыть()
	
	ВыбранноеЗначение = Новый Структура;
	ВыбранноеЗначение.Вставить("Счет" + Направление, Счет);
	Для НомерСубконто = 1 По 3 Цикл
		ВыбранноеЗначение.Вставить("Субконто" + Направление + НомерСубконто, ЭтотОбъект["Субконто" + НомерСубконто]);
	КонецЦикла;
	
	Модифицированность = Ложь;
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти