
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ИнтернетПоддержкаПользователей.ИспользованиеИнтернетПоддержкиРазрешеноВТекущемРежимеРаботы() Тогда
		// Право администрирования не проверяется, т.к. подсистема
		// используется только в локальном режиме.
		ВызватьИсключение НСтр("ru = 'Использование Интернет-поддержки запрещено в текущем режиме работы.'");
	КонецЕсли;
	
	Если НЕ Пользователи.ЭтоПолноправныйПользователь(, Истина, Ложь) Тогда
		// Право администрирования не проверяется, т.к. подсистема
		// используется только в локальном режиме.
		ВызватьИсключение
			НСтр("ru = 'Недостаточно прав доступа.
			|
			|Настройка параметров подключения к Интернет-поддержке пользователей доступна только администратору системы.'");
	КонецЕсли;
	
	ЭтоКлиентСервернаяИБ = (НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая());
	КлючСохраненияПоложенияОкна = Строка(ЭтоКлиентСервернаяИБ);
	
	Элементы.ГруппаПодключениеССервера.Видимость = ЭтоКлиентСервернаяИБ;
	Элементы.ДекорацияРекомендацииКС83.Видимость = ЭтоКлиентСервернаяИБ;
	
	ТекстЗапроса      = "";
	КолонкиПараметров = Новый Массив;
	Таблицы           = Новый Массив;
	
	Если ЭтоКлиентСервернаяИБ Тогда
		КолонкиПараметров.Добавить("ПодключениеКСервисуИППССервера.Значение КАК ПодключениеКСервисуИППССервера");
		Таблицы.Добавить("Константа.ПодключениеКСервисуИППССервера КАК ПодключениеКСервисуИППССервера");
	КонецЕсли;
	
	КолонкиПараметров.Добавить("ВЫБОР
		|		КОГДА ТаймаутПодключенияКСервисуИнтернетПоддержки.Значение = 0
		|			ТОГДА 30
		|		ИНАЧЕ ТаймаутПодключенияКСервисуИнтернетПоддержки.Значение
		|	КОНЕЦ КАК ТаймаутПодключенияКСервисуИнтернетПоддержки");
	Таблицы.Добавить("Константа.ТаймаутПодключенияКСервисуИнтернетПоддержки КАК ТаймаутПодключенияКСервисуИнтернетПоддержки");
	
	КолонкиСтр = "";
	Для Итератор = 0 По КолонкиПараметров.ВГраница() Цикл
		КолонкиСтр = КолонкиСтр + ?(Итератор > 0, ",", "") + КолонкиПараметров[Итератор];
	КонецЦикла;
	
	ТаблицыСтр = "";
	Для Итератор = 0 По Таблицы.ВГраница() Цикл
		ТаблицыСтр = ТаблицыСтр + ?(Итератор > 0, ",", "") + Таблицы[Итератор];
	КонецЦикла;
	
	ТекстЗапроса = "ВЫБРАТЬ " + КолонкиСтр + " ИЗ " + ТаблицыСтр + ";" + Символы.ПС;
	ТекстЗапроса = ТекстЗапроса
		+
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПараметрыИнтернетПоддержкиПользователей.Имя КАК ИмяПараметра,
		|	ПараметрыИнтернетПоддержкиПользователей.Значение КАК ЗначениеПараметра
		|ИЗ
		|	РегистрСведений.ПараметрыИнтернетПоддержкиПользователей КАК ПараметрыИнтернетПоддержкиПользователей
		|ГДЕ
		|	ПараметрыИнтернетПоддержкиПользователей.Имя = ""login""";
	
	ЗапросПараметров = Новый Запрос(ТекстЗапроса);
	РезультатыПакета = ЗапросПараметров.ВыполнитьПакет();
	
	ВыборкаСетевыхПараметров = РезультатыПакета[0].Выбрать();
	ВыборкаСетевыхПараметров.Следующий();
	
	Если ЭтоКлиентСервернаяИБ Тогда
		ПодключениеССервера = Число(ВыборкаСетевыхПараметров.ПодключениеКСервисуИППССервера);
	КонецЕсли;
	
	ТаймаутПодключения = Число(ВыборкаСетевыхПараметров.ТаймаутПодключенияКСервисуИнтернетПоддержки);
	
	// Отображение параметров авторизации
	ВыборкаПараметровАвторизации = РезультатыПакета[1].Выбрать();
	Пока ВыборкаПараметровАвторизации.Следующий() Цикл
		Логин = ВыборкаПараметровАвторизации.ЗначениеПараметра;
	КонецЦикла;
	
	// Переопределение логина и пароля, если не заполнен
	Если ПустаяСтрока(Логин) Тогда
		ДанныеПользователя = ИнтернетПоддержкаПользователейКлиентСервер.НовыйДанныеПользователяИнтернетПоддержки();
		ИнтернетПоддержкаПользователейПереопределяемый.ПриОпределенииДанныхПользователяИнтернетПоддержки(
			ДанныеПользователя);
		Если ТипЗнч(ДанныеПользователя) = Тип("Структура")
			И ДанныеПользователя.Свойство("Логин") Тогда
			Логин = Строка(ДанныеПользователя.Логин);
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(Логин) Тогда
		Элементы.ДекорацияПояснениеЛогинПароль.Заголовок = НСтр("ru = 'Вы еще не авторизованы'");
		Элементы.Логин.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИнтернетПоддержкаИзменениеДанныхАвторизации" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		Если Параметр.Свойство("Логин") Тогда
			
			Логин = Параметр.Логин;
			Если ПустаяСтрока(Логин) Тогда
				Элементы.ДекорацияПояснениеЛогинПароль.Заголовок = НСтр("ru = 'Вы еще не авторизованы'");
				Элементы.Логин.Видимость = Ложь;
			Иначе
				Элементы.ДекорацияПояснениеЛогинПароль.Заголовок =
					НСтр("ru = 'При подключении Интернет-поддержки используется:'");
				Элементы.Логин.Видимость = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ПроверитьОткрытиеФормыПараметровИнтернетПоддержки" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("ФормаОткрыта") Тогда
			Параметр.ФормаОткрыта = Открыта();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодключениеССервераПриИзменении(Элемент)
	
	ПриИзмененииПодключениеССервера(ПодключениеССервера);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаймаутПодключенияПриИзменении(Элемент)
	
	ПриИзмененииТаймаутаНаСервере(ТаймаутПодключения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПояснениеПолучениеЛогинаПароляОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтернетПоддержкаПользователейКлиент.ОткрытьИнтернетСтраницу(
		"http://users.v8.1c.ru",
		НСтр("ru = 'Поддержка пользователей системы 1С:Предприятие 8'"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВвестиЛогинПарольИлиЗарегистрироваться(Команда)
	
	ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПриИзмененииТаймаутаНаСервере(Знач Таймаут)
	
	Константы.ТаймаутПодключенияКСервисуИнтернетПоддержки.Установить(Таймаут);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриИзмененииПодключениеССервера(Знач ПодключениеССервера)
	
	Константы.ПодключениеКСервисуИППССервера.Установить((ПодключениеССервера = 1));
	
КонецПроцедуры

#КонецОбласти