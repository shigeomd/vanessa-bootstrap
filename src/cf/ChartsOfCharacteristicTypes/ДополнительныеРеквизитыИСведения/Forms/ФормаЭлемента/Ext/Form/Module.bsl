&НаКлиенте
Перем ОбработкаПродолженияПриОшибкеЗаписи;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	ТекущийНаборСвойств = Параметры.ТекущийНаборСвойств;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.ЭтоДополнительноеСведение.Доступность = Ложь;
		ПоказатьУточнениеНабора = Параметры.ПоказатьУточнениеНабора;
	Иначе
		Если ЗначениеЗаполнено(ТекущийНаборСвойств) Тогда
			Объект.НаборСвойств = ТекущийНаборСвойств;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ВладелецДополнительныхЗначений) Тогда
			Объект.ВладелецДополнительныхЗначений = Параметры.ВладелецДополнительныхЗначений;
		КонецЕсли;
		
		Если Параметры.ЭтоДополнительноеСведение <> Неопределено Тогда
			Объект.ЭтоДополнительноеСведение = Параметры.ЭтоДополнительноеСведение;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Элементы.ЭтоДополнительноеСведение.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Предопределенный И НЕ ЗначениеЗаполнено(Объект.Заголовок) Тогда
		Объект.Заголовок = Объект.Наименование;
	КонецЕсли;
	
	ЭтоДополнительноеСведение = ?(Объект.ЭтоДополнительноеСведение, 1, 0);
	
	ОбновитьСоставЭлементовФормы();
	
	Если Объект.МногострочноеПолеВвода > 0 Тогда
		МногострочноеПолеВвода = Истина;
		МногострочноеПолеВводаЧисло = Объект.МногострочноеПолеВвода;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		Закрыть();
		
		// Открытие формы свойства.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
		ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
		
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
			ПараметрыФормы, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ПараметрыЗаписи.Свойство("КогдаНаименованиеУжеИспользуется") Тогда
	
		// Заполнение наименования по набору свойств
		// и проверка есть ли свойство с тем же наименованием.
		ТекстВопроса = НаименованиеУжеИспользуется(
			Объект.Заголовок, Объект.Ссылка, Объект.НаборСвойств, Объект.Наименование);
		
		Если ЗначениеЗаполнено(ТекстВопроса) Тогда
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("ПродолжитьЗапись",            НСтр("ru = 'Продолжить запись'"));
			Кнопки.Добавить("ВернутьсяКВводуНаименования", НСтр("ru = 'Вернуться к вводу наименования'"));
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПослеОтветаНаВопросКогдаНаименованиеУжеИспользуется", ЭтотОбъект, ПараметрыЗаписи),
				ТекстВопроса, Кнопки, , "ВернутьсяКВводуНаименования");
			
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
		ОбработкаПродолженияПриОшибкеЗаписи = ПараметрыЗаписи.ОбработкаПродолжения;
		ПодключитьОбработчикОжидания("ПослеОшибкиЗаписи", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Объект.ТипЗначения) Тогда
		ТекущийОбъект.ДополнительныеЗначенияИспользуются = Истина;
	Иначе
		ТекущийОбъект.ДополнительныеЗначенияИспользуются = Ложь;
		ТекущийОбъект.ЗаголовокФормыЗначения = "";
		ТекущийОбъект.ЗаголовокФормыВыбораЗначения = "";
	КонецЕсли;
	
	Если Объект.ЭтоДополнительноеСведение
	 ИЛИ НЕ (    Объект.ТипЗначения.СодержитТип(Тип("Число" ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Дата"  ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Булево")) )Тогда
		
		ТекущийОбъект.ФорматСвойства = "";
	КонецЕсли;
	
	ТекущийОбъект.МногострочноеПолеВвода = 0;
	
	Если НЕ Объект.ЭтоДополнительноеСведение
	   И Объект.ТипЗначения.Типы().Количество() = 1
	   И Объект.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
		
		Если МногострочноеПолеВвода Тогда
			ТекущийОбъект.МногострочноеПолеВвода = МногострочноеПолеВводаЧисло;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.НаборСвойств) Тогда
		ДобавитьВНабор = ТекущийОбъект.НаборСвойств;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.НаборыДополнительныхРеквизитовИСведений");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ДобавитьВНабор);
		Блокировка.Заблокировать();
		ЗаблокироватьДанныеДляРедактирования(ДобавитьВНабор);
		
		ОбъектНаборСвойств = ДобавитьВНабор.ПолучитьОбъект();
		Если ТекущийОбъект.ЭтоДополнительноеСведение Тогда
			ТабличнаяЧасть = ОбъектНаборСвойств.ДополнительныеСведения;
		Иначе
			ТабличнаяЧасть = ОбъектНаборСвойств.ДополнительныеРеквизиты;
		КонецЕсли;
		НайденнаяСтрока = ТабличнаяЧасть.Найти(ТекущийОбъект.Ссылка, "Свойство");
		Если НайденнаяСтрока = Неопределено Тогда
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока.Свойство = ТекущийОбъект.Ссылка;
			ОбъектНаборСвойств.Записать();
			ТекущийОбъект.ДополнительныеСвойства.Вставить("ИзмененныйНабор", ДобавитьВНабор);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ОчиститьВведенныеВесовыеКоэффициенты") Тогда
		ОчиститьВведенныеВесовыеКоэффициенты();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	ОбновитьСоставЭлементовФормы();
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ИзмененныйНабор") Тогда
		ПараметрыЗаписи.Вставить("ИзмененныйНабор", ТекущийОбъект.ДополнительныеСвойства.ИзмененныйНабор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ДополнительныеРеквизитыИСведения",
		Новый Структура("Ссылка", Объект.Ссылка), Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("ИзмененныйНабор") Тогда
		
		Оповестить("Запись_НаборыДополнительныхРеквизитовИСведений",
			Новый Структура("Ссылка", ПараметрыЗаписи.ИзмененныйНабор), ПараметрыЗаписи.ИзмененныйНабор);
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
		ОбработкаПродолженияПриОшибкеЗаписи = Неопределено;
		ОтключитьОбработчикОжидания("ПослеОшибкиЗаписи");
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
				ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
			Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтоДополнительноеСведениеПриИзменении(Элемент)
	
	Объект.ЭтоДополнительноеСведение = ЭтоДополнительноеСведение;
	
	ОбновитьСоставЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийКомментарийНажатие(Элемент)
	
	ЗаписатьОбъект("ПереходКСпискуЗначений",
		"УточнениеСпискаЗначенийКомментарийНажатиеЗавершение");
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовКомментарийНажатие(Элемент)
	
	ЗаписатьОбъект("ПереходКСпискуЗначений",
		"УточнениеНаборовКомментарийНажатиеПродолжение");
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	ТекстПредупреждения = "";
	ОбновитьСоставЭлементовФормы(ТекстПредупреждения);
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеЗначенияСВесомПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
	   И НЕ Объект.ДополнительныеЗначенияСВесом Тогда
		
		ТекстВопроса =
			НСтр("ru = 'Очистить введенные весовые коэффициенты?
			           |
			           |Данные будут записаны.'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("ОчиститьИЗаписать", НСтр("ru = 'Очистить и записать'"));
		Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеПодтвержденияОчисткиВесовыхКоэффициентов", ЭтотОбъект),
			ТекстВопроса, Кнопки, , "ОчиститьИЗаписать");
	Иначе
		ЗаписатьОбъект("ИзменениеИспользованияВеса",
			"ДополнительныеЗначенияСВесомПриИзмененииЗавершение");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МногострочноеПолеВводаЧислоПриИзменении(Элемент)
	
	МногострочноеПолеВвода = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗначения

&НаКлиенте
Процедура ЗначенияПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяСобытия = "Запись_ЗначенияСвойствОбъектов";
	Иначе
		ИмяСобытия = "Запись_ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Оповестить(ИмяСобытия,
		Новый Структура("Ссылка", Элемент.ТекущиеДанные.Ссылка),
		Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Копирование", Копирование);
	ДополнительныеПараметры.Вставить("Родитель", Родитель);
	ДополнительныеПараметры.Вставить("Группа", Группа);
	
	ЗаписатьОбъект("ПереходКСпискуЗначений",
		"ЗначенияПередНачаломДобавленияЗавершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элементы.ДополнительныеЗначения.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьОбъект("ПереходКСпискуЗначений",
		"ЗначенияПередНачаломИзмененияЗавершение");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьФорматЗначения(Команда)
	
	Конструктор = Новый КонструкторФорматнойСтроки(Объект.ФорматСвойства);
	
	Конструктор.ДоступныеТипы = Объект.ТипЗначения;
	
	Конструктор.Показать(
		Новый ОписаниеОповещения("РедактироватьФорматЗначенияЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийИзменить(Команда)
	
	ЗаписатьОбъект("ИзменениеВидаРеквизита",
		"УточнениеСпискаЗначенийИзменитьЗавершение");
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовИзменить(Команда)
	
	ЗаписатьОбъект("ИзменениеВидаРеквизита",
		"УточнениеНаборовИзменитьЗавершение");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗаблокированныеРеквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ЭтотОбъект);
	
	Если ЗаблокированныеРеквизиты.Количество() > 0 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
		ПараметрыФормы.Вставить("ЭтоДополнительныйРеквизит", Объект.ЭтоДополнительноеСведение);
		
		Оповещение = Новый ОписаниеОповещения("ОбновитьФормуДляРедактирования", ЭтотОбъект);
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.РазблокированиеРеквизитов",
			ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	Иначе
		ЗапретРедактированияРеквизитовОбъектовКлиент.ПоказатьПредупреждениеВсеВидимыеРеквизитыРазблокированы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьФормуДляРедактирования(Результат, Параметр) Экспорт
	#Если ВебКлиент Тогда
		ОбновитьОтображениеДанных();
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросКогдаНаименованиеУжеИспользуется(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ <> "ПродолжитьЗапись" Тогда
		ТекущийЭлемент = Элементы.Заголовок;
		Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
					ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
				Истина);
		КонецЕсли;
	Иначе
		ПараметрыЗаписи.Вставить("КогдаНаименованиеУжеИспользуется");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияОчисткиВесовыхКоэффициентов(Ответ, Неопределен) Экспорт
	
	Если Ответ <> "ОчиститьИЗаписать" Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ОчиститьВведенныеВесовыеКоэффициенты");
	
	ЗаписатьОбъект("ИзменениеИспользованияВеса",
		"ДополнительныеЗначенияСВесомПриИзмененииЗавершение",
		,
		ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеЗначенияСВесомПриИзмененииЗавершение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Оповестить(
			"Изменение_ЗначениеХарактеризуетсяВесовымКоэффициентом",
			Объект.ДополнительныеЗначенияСВесом,
			Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийКомментарийНажатиеЗавершение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказатьУточнениеНабора", Истина);
	ПараметрыФормы.Вставить("Ключ", Объект.ВладелецДополнительныхЗначений);
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
		ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовКомментарийНажатиеПродолжение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныйНабор = Неопределено;
	
	Если СписокНаборов.Количество() > 1 Тогда
		ПоказатьВыборИзСписка(
			Новый ОписаниеОповещения("УточнениеНаборовКомментарийНажатиеЗавершение", ЭтотОбъект),
			СписокНаборов, Элементы.УточнениеНаборовКомментарий);
	Иначе
		УточнениеНаборовКомментарийНажатиеЗавершение(, СписокНаборов[0].Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовКомментарийНажатиеЗавершение(ВыбранныйЭлемент, ВыбранныйНабор) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ВыбранныйНабор = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
	Если ВыбранныйНабор <> Неопределено Тогда
		Закрыть();
		
		ЗначениеВыбора = Новый Структура;
		ЗначениеВыбора.Вставить("Набор", ВыбранныйНабор);
		ЗначениеВыбора.Вставить("Свойство", Объект.Ссылка);
		ЗначениеВыбора.Вставить("ЭтоДополнительноеСведение", Объект.ЭтоДополнительноеСведение);
		ОповеститьОВыборе(ЗначениеВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломДобавленияЗавершение(Отказ, ПараметрыОбработки) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", ПараметрыОбработки.Родитель);
	ЗначенияЗаполнения.Вставить("Владелец", Объект.Ссылка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СкрытьВладельца", Истина);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Если ПараметрыОбработки.Группа Тогда
		ПараметрыФормы.Вставить("ЭтоГруппа", Истина);
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаГруппы", ПараметрыФормы, Элементы.Значения);
	Иначе
		ПараметрыФормы.Вставить("ПоказатьВес", Объект.ДополнительныеЗначенияСВесом);
		
		Если ПараметрыОбработки.Копирование Тогда
			ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Значения.ТекущаяСтрока);
		КонецЕсли;
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаОбъекта", ПараметрыФормы, Элементы.Значения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломИзмененияЗавершение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Если Элементы.Значения.ТекущаяСтрока <> Неопределено Тогда
		// Открытие формы значения или группы значений.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СкрытьВладельца", Истина);
		ПараметрыФормы.Вставить("ПоказатьВес", Объект.ДополнительныеЗначенияСВесом);
		ПараметрыФормы.Вставить("Ключ", Элементы.Значения.ТекущаяСтрока);
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаОбъекта", ПараметрыФормы, Элементы.Значения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийИзменитьЗавершение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	ПараметрыФормы.Вставить("НаборСвойств", Объект.НаборСвойств);
	ПараметрыФормы.Вставить("Свойство", Объект.Ссылка);
	ПараметрыФормы.Вставить("ВладелецДополнительныхЗначений", Объект.ВладелецДополнительныхЗначений);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Объект.ЭтоДополнительноеСведение);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ИзменениеНастройкиСвойства",
		ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовИзменитьЗавершение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	ПараметрыФормы.Вставить("Свойство", Объект.Ссылка);
	ПараметрыФормы.Вставить("НаборСвойств", Объект.НаборСвойств);
	ПараметрыФормы.Вставить("ВладелецДополнительныхЗначений", Объект.ВладелецДополнительныхЗначений);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Объект.ЭтоДополнительноеСведение);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ИзменениеНастройкиСвойства",
		ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьОбъект(ВариантТекстаВопроса, ИмяПроцедурыПродолжения, ДополнительныеПараметры = Неопределено, ПараметрыЗаписи = Неопределено)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И НЕ Модифицированность Тогда
		
		ВыполнитьОбработкуОповещения(Новый ОписаниеОповещения(
			ИмяПроцедурыПродолжения, ЭтотОбъект, ДополнительныеПараметры), Ложь);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи = Неопределено Тогда
		ПараметрыЗаписи = Новый Структура;
	КонецЕсли;
	
	ОбработкаПродолжения = Новый Структура;
	ОбработкаПродолжения.Вставить("ИмяПроцедуры", ИмяПроцедурыПродолжения);
	ОбработкаПродолжения.Вставить("Параметры", ДополнительныеПараметры);
	
	ПараметрыЗаписи.Вставить("ОбработкаПродолжения", ОбработкаПродолжения);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаписатьОбъектПродолжение("Записать", ПараметрыЗаписи);
		Возврат;
	КонецЕсли;
	
	Если ВариантТекстаВопроса = "ПереходКСпискуЗначений" Тогда
		ТекстВопроса =
			НСтр("ru = 'Переход к работе со списком значений
			           |возможен только после записи данных.
			           |
			           |Данные будут записаны.'");
	Иначе
		ТекстВопроса =
			НСтр("ru = 'Данные будут записаны.'")
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Записать", НСтр("ru = 'Записать'"));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения(
			"ЗаписатьОбъектПродолжение", ЭтотОбъект, ПараметрыЗаписи),
		ТекстВопроса, Кнопки, , "Записать");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьОбъектПродолжение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ <> "Записать" Тогда
		Возврат;
	КонецЕсли;
	
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОшибкиЗаписи()
	
	Если ОбработкаПродолженияПриОшибкеЗаписи <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(ОбработкаПродолженияПриОшибкеЗаписи.ИмяПроцедуры,
				ЭтотОбъект, ОбработкаПродолженияПриОшибкеЗаписи.Параметры),
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФорматЗначенияЗавершение(Текст, Неопределен) Экспорт
	
	Если Текст <> Неопределено Тогда
		Объект.ФорматСвойства = Текст;
		УстановитьЗаголовокКнопкиФормата(ЭтотОбъект);
		
		ТекстПредупреждения = "";
		Массив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, ";");
		
		Для каждого Подстрока Из Массив Цикл
			Если Найти(Подстрока, "ДП=") > 0 ИЛИ Найти(Подстрока, "DE=") > 0 Тогда
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
					НСтр("ru = 'Представление пустой даты не поддерживается в полях ввода.'");
				Продолжить;
			КонецЕсли;
			Если Найти(Подстрока, "ЧН=") > 0 ИЛИ Найти(Подстрока, "NZ=") > 0 Тогда
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
					НСтр("ru = 'Представление пустого числа не поддерживается в полях ввода.'");
				Продолжить;
			КонецЕсли;
			Если Найти(Подстрока, "ДФ=") > 0 ИЛИ Найти(Подстрока, "DF=") > 0 Тогда
				Если Найти(Подстрока, "ддд") > 0 ИЛИ Найти(Подстрока, "ddd") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
						НСтр("ru = 'Кратное название дня недели не поддерживается в полях ввода.'");
				КонецЕсли;
				Если Найти(Подстрока, "дддд") > 0 ИЛИ Найти(Подстрока, "dddd") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
						НСтр("ru = 'Полное название дня недели не поддерживается в полях ввода.'");
				КонецЕсли;
				Если Найти(Подстрока, "МММ") > 0 ИЛИ Найти(Подстрока, "MMM") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
						НСтр("ru = 'Кратное название месяца не поддерживается в полях ввода.'");
				КонецЕсли;
				Если Найти(Подстрока, "ММММ") > 0 ИЛИ Найти(Подстрока, "MMMM") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
						НСтр("ru = 'Полное название месяца не поддерживается в полях ввода.'");
				КонецЕсли;
			КонецЕсли;
			Если Найти(Подстрока, "ДЛФ=") > 0 ИЛИ Найти(Подстрока, "DLF=") > 0 Тогда
				Если Найти(Подстрока, "ДД") > 0 ИЛИ Найти(Подстрока, "DD") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
						НСтр("ru = 'Длинная дата (месяц прописью) не поддерживается в полях ввода.'");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
			ТекстПредупреждения = ТекстПредупреждения + Символы.ПС +
				НСтр("ru = 'В местах использования полей надписей ограничений нет.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоставЭлементовФормы(ТекстПредупреждения = "")
	
	Заголовок = ПолучитьЗаголовок(Объект);
	
	Если НЕ Объект.ТипЗначения.СодержитТип(Тип("Число"))
	   И НЕ Объект.ТипЗначения.СодержитТип(Тип("Дата"))
	   И НЕ Объект.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
		
		Объект.ФорматСвойства = "";
	КонецЕсли;
	
	УстановитьЗаголовокКнопкиФормата(ЭтотОбъект);
	
	Если Объект.ЭтоДополнительноеСведение
	 ИЛИ НЕ (    Объект.ТипЗначения.СодержитТип(Тип("Число" ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Дата"  ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Булево")) )Тогда
		
		Элементы.РедактироватьФорматЗначения.Видимость = Ложь;
	Иначе
		Элементы.РедактироватьФорматЗначения.Видимость = Истина;
	КонецЕсли;
	
	Если НЕ Объект.ЭтоДополнительноеСведение
	   И Объект.ТипЗначения.Типы().Количество() = 1
	   И Объект.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
		
		Элементы.ГруппаМногострочность.Видимость = Истина;
	Иначе
		Элементы.ГруппаМногострочность.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ЭтоДополнительноеСведение Тогда
		Объект.ЗаполнятьОбязательно = Ложь;
		Элементы.ЗаполнятьОбязательно.Видимость = Ложь;
	Иначе
		Элементы.ЗаполнятьОбязательно.Видимость = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтарыйТипЗначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ТипЗначения");
	Иначе
		СтарыйТипЗначения = Новый ОписаниеТипов;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВладелецДополнительныхЗначений) Тогда
		
		СвойстваВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.ВладелецДополнительныхЗначений, "ТипЗначения, ДополнительныеЗначенияСВесом");
		
		Если СвойстваВладельца.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
			Объект.ТипЗначения = Новый ОписаниеТипов(
				Объект.ТипЗначения,
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия",
				"СправочникСсылка.ЗначенияСвойствОбъектов");
		Иначе
			Объект.ТипЗначения = Новый ОписаниеТипов(
				Объект.ТипЗначения,
				"СправочникСсылка.ЗначенияСвойствОбъектов",
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
		КонецЕсли;
		
		ВладелецЗначений = Объект.ВладелецДополнительныхЗначений;
		ЗначенияСВесом   = СвойстваВладельца.ДополнительныеЗначенияСВесом;
	Иначе
		// Проверка возможности удаления типа дополнительных значений.
		Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(СтарыйТипЗначения) Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
			
			Если СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЗначениеИстина
				|ИЗ
				|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
				|ГДЕ
				|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец";
			Иначе
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЗначениеИстина
				|ИЗ
				|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Владелец = &Владелец";
			КонецЕсли;
			
			Если НЕ Запрос.Выполнить().Пустой() Тогда
				
				Если СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"))
				   И НЕ Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
					
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Недопустимо удалять тип ""%1"",
						           |так как дополнительные значения уже введены.
						           |Сначала нужно удалить введенные дополнительные значения.
						           |
						           |Удаленный тип восстановлен.'"),
						Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
					
					Объект.ТипЗначения = Новый ОписаниеТипов(
						Объект.ТипЗначения,
						"СправочникСсылка.ЗначенияСвойствОбъектовИерархия",
						"СправочникСсылка.ЗначенияСвойствОбъектов");
				
				ИначеЕсли СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"))
				        И НЕ Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
					
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Недопустимо удалять тип ""%1"",
						           |так как дополнительные значения уже введены.
						           |Сначала нужно удалить введенные дополнительные значения.
						           |
						           |Удаленный тип восстановлен.'"),
						Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) );
					
					Объект.ТипЗначения = Новый ОписаниеТипов(
						Объект.ТипЗначения,
						"СправочникСсылка.ЗначенияСвойствОбъектов",
						"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Проверка, что установлено не более одного типа дополнительных значений.
		Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"))
		   И Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
			
			Если НЕ СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
				
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Недопустимо одновременно использовать типы значения
					           |""%1"" и
					           |""%2"".
					           |
					           |Второй тип удален.'"),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
				
				// Удаление второго типа.
				Объект.ТипЗначения = Новый ОписаниеТипов(
					Объект.ТипЗначения,
					,
					"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
			Иначе
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Недопустимо одновременно использовать типы значения
					           |""%1"" и
					           |""%2"".
					           |
					           |Первый тип удален.'"),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
				
				// Удаление первого типа.
				Объект.ТипЗначения = Новый ОписаниеТипов(
					Объект.ТипЗначения,
					,
					"СправочникСсылка.ЗначенияСвойствОбъектов");
			КонецЕсли;
		КонецЕсли;
		
		ВладелецЗначений = Объект.Ссылка;
		ЗначенияСВесом   = Объект.ДополнительныеЗначенияСВесом;
	КонецЕсли;
	
	Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Объект.ТипЗначения) Тогда
		Элементы.ГруппаЗаголовкиФормЗначений.Видимость = Истина;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Истина;
		Элементы.ДополнительныеЗначения.Видимость = Истина;
	Иначе
		Элементы.ГруппаЗаголовкиФормЗначений.Видимость = Ложь;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Ложь;
		Элементы.ДополнительныеЗначения.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.Значения.Шапка        = ЗначенияСВесом;
	Элементы.ЗначенияВес.Видимость = ЗначенияСВесом;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Значения, "Владелец", ВладелецЗначений, , , Истина);
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		Значения.ОсновнаяТаблица = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		Значения.ОсновнаяТаблица = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	// Отображение уточнений.
	
	Если НЕ ЗначениеЗаполнено(Объект.ВладелецДополнительныхЗначений) Тогда
		Элементы.УточнениеСпискаЗначений.Видимость = Ложь;
		Элементы.ДополнительныеЗначения.ТолькоПросмотр = Ложь;
		Элементы.ЗначенияКоманднаяПанельРедактирования.Видимость = Истина;
		Элементы.ЗначенияКонтекстноеМенюРедактирования.Видимость = Истина;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Истина;
		Элементы.ГруппаЗаголовкиФормЗначений.Видимость = Истина;
	Иначе
		Элементы.УточнениеСпискаЗначений.Видимость = Истина;
		Элементы.ДополнительныеЗначения.ТолькоПросмотр = Истина;
		Элементы.ЗначенияКоманднаяПанельРедактирования.Видимость = Ложь;
		Элементы.ЗначенияКонтекстноеМенюРедактирования.Видимость = Ложь;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Ложь;
		Элементы.ГруппаЗаголовкиФормЗначений.Видимость = Ложь;
		
		Элементы.УточнениеСпискаЗначенийКомментарий.Гиперссылка = ЗначениеЗаполнено(Объект.Ссылка);
		Элементы.УточнениеСпискаЗначенийИзменить.Доступность    = ЗначениеЗаполнено(Объект.Ссылка);
		
		СвойстваВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.ВладелецДополнительныхЗначений, "НаборСвойств, Заголовок, ЭтоДополнительноеСведение");
		
		Если СвойстваВладельца.ЭтоДополнительноеСведение <> Истина Тогда
			ШаблонУточнения = НСтр("ru = 'Список значений общий с реквизитом ""%1"" набора ""%2""'");
		Иначе
			ШаблонУточнения = НСтр("ru = 'Список значений общий со сведением ""%1"" набора ""%2""'");
		КонецЕсли;
		
		Элементы.УточнениеСпискаЗначенийКомментарий.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонУточнения, СвойстваВладельца.Заголовок, Строка(СвойстваВладельца.НаборСвойств)) + "  ";
	КонецЕсли;
	
	ОбновитьСписокНаборов();
	
	Если НЕ ПоказатьУточнениеНабора
	   И ЗначениеЗаполнено(Объект.НаборСвойств)
	   И СписокНаборов.Количество() < 2 Тогда
		
		Элементы.УточнениеНаборов.Видимость = Ложь;
	Иначе
		Элементы.УточнениеНаборов.Видимость = Истина;
		Элементы.УточнениеНаборовКомментарий.Гиперссылка =
			ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(ТекущийНаборСвойств);
		
		Элементы.УточнениеНаборовИзменить.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
		
		Если ЗначениеЗаполнено(Объект.НаборСвойств)
		   И СписокНаборов.Количество() < 2 Тогда
			
			Элементы.УточнениеНаборовИзменить.Видимость = Ложь;
		
		ИначеЕсли ЗначениеЗаполнено(ТекущийНаборСвойств) Тогда
			Элементы.УточнениеНаборовИзменить.Видимость = Истина;
		Иначе
			Элементы.УточнениеНаборовИзменить.Видимость = Ложь;
		КонецЕсли;
		
		Если СписокНаборов.Количество() > 0 Тогда
		
			Если ЗначениеЗаполнено(Объект.НаборСвойств)
			   И СписокНаборов.Количество() < 2 Тогда
				
				Если Объект.ЭтоДополнительноеСведение Тогда
					ШаблонУточнения = НСтр("ru = 'Сведение входит в набор: %1'");
				Иначе
					ШаблонУточнения = НСтр("ru = 'Реквизит входит в набор: %1'");
				КонецЕсли;
				ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонУточнения, СокрЛП(СписокНаборов[0].Представление));
			Иначе
				Если СписокНаборов.Количество() > 1 Тогда
					Если Объект.ЭтоДополнительноеСведение Тогда
						ШаблонУточнения = НСтр("ru = 'Общее сведение входит в %1 %2'");
					Иначе
						ШаблонУточнения = НСтр("ru = 'Общий реквизит входит в %1 %2'");
					КонецЕсли;
					
					СтрокаНаборы = СокрЛП(ЧислоПрописью(
						СписокНаборов.Количество(), "НД=Ложь", "набор,набора,наборов,м,,,,,0"));
					
					Пока Истина Цикл
						Позиция = Найти(СтрокаНаборы, " ");
						Если Позиция = 0 Тогда
							Прервать;
						КонецЕсли;
						СтрокаНаборы = СокрЛП(Сред(СтрокаНаборы, Позиция + 1));
					КонецЦикла;
					
					ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонУточнения, Формат(СписокНаборов.Количество(), "ЧГ="), СтрокаНаборы);
				Иначе
					Если Объект.ЭтоДополнительноеСведение Тогда
						ШаблонУточнения = НСтр("ru = 'Общее сведение входит в набор: %1'");
					Иначе
						ШаблонУточнения = НСтр("ru = 'Общий реквизит входит в набор: %1'");
					КонецЕсли;
					
					ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонУточнения, СокрЛП(СписокНаборов[0].Представление));
				КонецЕсли;
			КонецЕсли;
		Иначе
			Элементы.УточнениеНаборовКомментарий.Гиперссылка = Ложь;
			Элементы.УточнениеНаборовИзменить.Видимость = Ложь;
			
			Если ЗначениеЗаполнено(Объект.НаборСвойств) Тогда
				Если Объект.ЭтоДополнительноеСведение Тогда
					ТекстКомментария = НСтр("ru = 'Сведение не входит в набор'");
				Иначе
					ТекстКомментария = НСтр("ru = 'Реквизит не входит в набор'");
				КонецЕсли;
			Иначе
				Если Объект.ЭтоДополнительноеСведение Тогда
					ТекстКомментария = НСтр("ru = 'Общее сведение не входит в наборы'");
				Иначе
					ТекстКомментария = НСтр("ru = 'Общий реквизит не входит в наборы'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.УточнениеНаборовКомментарий.Заголовок = ТекстКомментария + " ";
		
		Если Элементы.УточнениеНаборовКомментарий.Гиперссылка Тогда
			Элементы.УточнениеНаборовКомментарий.Подсказка = НСтр("ru = 'Переход к набору'");
		Иначе
			Элементы.УточнениеНаборовКомментарий.Подсказка = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВведенныеВесовыеКоэффициенты()
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить(ИмяТаблицыЗначений);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТекущаяТаблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗначенияСвойствОбъектов КАК ТекущаяТаблица
		|ГДЕ
		|	ТекущаяТаблица.Вес <> 0";
		Запрос.Текст = СтрЗаменить(Запрос.Текст , "Справочник.ЗначенияСвойствОбъектов", ИмяТаблицыЗначений);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗначениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ЗначениеОбъект.Вес = 0;
			ЗначениеОбъект.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаборов()
	
	СписокНаборов.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДополнительныеРеквизиты.Ссылка КАК Набор,
		|	ДополнительныеРеквизиты.Ссылка.Наименование
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
		|ГДЕ
		|	ДополнительныеРеквизиты.Свойство = &Свойство
		|	И НЕ ДополнительныеРеквизиты.Ссылка.ЭтоГруппа
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеСведения.Ссылка,
		|	ДополнительныеСведения.Ссылка.Наименование
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Свойство = &Свойство
		|	И НЕ ДополнительныеСведения.Ссылка.ЭтоГруппа");
		
		Запрос.УстановитьПараметр("Свойство", Объект.Ссылка);
		
		НачатьТранзакцию();
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				СписокНаборов.Добавить(Выборка.Набор, Выборка.Наименование + "         ");
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НаименованиеУжеИспользуется(Знач Заголовок, Знач ТекущееСвойство, Знач НаборСвойств, НовоеНаименование)
	
	Если ЗначениеЗаполнено(НаборСвойств) Тогда
		НаименованиеНабора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НаборСвойств, "Наименование");
		НовоеНаименование = Заголовок + " (" + НаименованиеНабора + ")";
	Иначе
		НовоеНаименование = Заголовок;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Свойства.ЭтоДополнительноеСведение,
	|	Свойства.НаборСвойств
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.Наименование = &Наименование
	|	И Свойства.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",       ТекущееСвойство);
	Запрос.УстановитьПараметр("Наименование", НовоеНаименование);
	
	НачатьТранзакцию();
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.НаборСвойств) Тогда
		Если Выборка.ЭтоДополнительноеСведение Тогда
			ТекстВопроса = НСтр("ru = 'Существует дополнительное сведение с наименованием
			                          |""%1"".'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Существует дополнительный реквизит с наименованием
			                          |""%1"".'");
		КонецЕсли;
	Иначе
		Если Выборка.ЭтоДополнительноеСведение Тогда
			ТекстВопроса = НСтр("ru = 'Существует общее дополнительное сведение с наименованием
			                          |""%1"".'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Существует общий дополнительный реквизит с наименованием
			                          |""%1"".'");
		КонецЕсли;
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстВопроса + НСтр("ru ='
		                         |
		                         |Рекомендуется использовать другое наименование,
		                         |иначе программа может работать некорректно.'"),
		НовоеНаименование);
	
	Возврат ТекстВопроса;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗаголовок(Объект)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если ЗначениеЗаполнено(Объект.НаборСвойств) Тогда
			Если Объект.ЭтоДополнительноеСведение Тогда
				Заголовок = Строка(Объект.Заголовок) + " " + НСтр("ru = '(Дополнительное сведение)'");
			Иначе
				Заголовок = Строка(Объект.Заголовок) + " " + НСтр("ru = '(Дополнительный реквизит)'");
			КонецЕсли;
		Иначе
			Если Объект.ЭтоДополнительноеСведение Тогда
				Заголовок = Строка(Объект.Заголовок) + " " + НСтр("ru = '(Общее дополнительное сведение)'");
			Иначе
				Заголовок = Строка(Объект.Заголовок) + " " + НСтр("ru = '(Общий дополнительный реквизит)'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Объект.НаборСвойств) Тогда
			Если Объект.ЭтоДополнительноеСведение Тогда
				Заголовок = НСтр("ru = 'Дополнительное сведение (создание)'");
			Иначе
				Заголовок = НСтр("ru = 'Дополнительный реквизит (создание)'");
			КонецЕсли;
		Иначе
			Если Объект.ЭтоДополнительноеСведение Тогда
				Заголовок = НСтр("ru = 'Общее дополнительное сведение (создание)'");
			Иначе
				Заголовок = НСтр("ru = 'Общий дополнительный реквизит (создание)'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Заголовок;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокКнопкиФормата(Форма)
	
	Если ПустаяСтрока(Форма.Объект.ФорматСвойства) Тогда
		ТекстЗаголовка = НСтр("ru = 'Формат по умолчанию'");
	Иначе
		ТекстЗаголовка = НСтр("ru = 'Формат установлен'");
	КонецЕсли;
	
	Форма.Элементы.РедактироватьФорматЗначения.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

#КонецОбласти
