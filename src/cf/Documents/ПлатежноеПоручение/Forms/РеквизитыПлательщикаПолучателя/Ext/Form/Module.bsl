////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПлательщик = Параметры.ЭтоПлательщик;
	
	ОрганизацияИП = ?(ЭтоПлательщик,
		(Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо =
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Объект.Организация, "ЮридическоеФизическоеЛицо")),
		Ложь);
	
	ПереводМеждуСчетами = Параметры.Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет;
	
	АвтоЗначенияРеквизитов = УчетДенежныхСредствБП.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
		Параметры.Объект.Организация,
		Параметры.Объект.СчетОрганизации,
		?(ПереводМеждуСчетами, Параметры.Объект.Организация, Параметры.Объект.Контрагент),
		Параметры.Объект.СчетКонтрагента,
		Истина,
		Параметры.Объект.Дата);
	
	Если ЭтоПлательщик Тогда
		ВсегдаУказыватьКПП     = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Объект.СчетОрганизации, "ВсегдаУказыватьКПП");
		ТекстНаименования      = Параметры.Объект.ТекстПлательщика;
		УказаниеКППОбязательно = Параметры.Объект.ПеречислениеВБюджет ИЛИ НЕ ОрганизацияИП И ВсегдаУказыватьКПП;
		
		ИНН = Параметры.Объект.ИННПлательщика;
		КПП = Параметры.Объект.КПППлательщика;
		
		ИННОбъекта = АвтоЗначенияРеквизитов.ИННПлательщика;
		Если УказаниеКППОбязательно И НЕ ПустаяСтрока(КПП) Тогда
			КППОбъекта = КПП;
		Иначе
			КППОбъекта = АвтоЗначенияРеквизитов.КПППлательщика
		КонецЕсли;
	Иначе
		Если ПереводМеждуСчетами Тогда
			ПолучательФизЛицо = ОрганизацияИП;
		ИначеЕсли ТипЗнч(Параметры.Объект.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ПолучательФизЛицо = Истина;
		Иначе
			ПолучательФизЛицо      = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо =
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Объект.Контрагент, "ЮридическоеФизическоеЛицо");
		КонецЕсли;
		
		ТекстНаименования      = Параметры.Объект.ТекстПолучателя;
		УказаниеКППОбязательно = НЕ ПолучательФизЛицо
			И (Параметры.Объект.ПеречислениеВБюджет
			ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Объект.СчетКонтрагента, "ВсегдаУказыватьКПП"));
		
		ИНН = Параметры.Объект.ИННПолучателя;
		КПП = Параметры.Объект.КПППолучателя;
		
		ИННОбъекта = АвтоЗначенияРеквизитов.ИННПолучателя;
		Если УказаниеКППОбязательно И НЕ ПустаяСтрока(КПП) Тогда
			КППОбъекта = КПП;
		Иначе
			КППОбъекта = АвтоЗначенияРеквизитов.КПППолучателя
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЭтоПлательщик Тогда
		Элементы.ИНН.Заголовок = НСтр("ru = 'ИНН получателя'");
		Элементы.КПП.Заголовок = НСтр("ru = 'КПП получателя'");
		Элементы.ТекстНаименования.Заголовок = НСтр("ru = 'Наименование получателя'");
	КонецЕсли;
	
	ПлательщикаПолучателя = ?(ЭтоПлательщик, НСтр("ru = 'плательщика'"), НСтр("ru = 'получателя'"));
	
	ТекстИННВладельца = НСтр("ru = '%1 - ИНН, указанный для %2'");
	ТекстИННВладельца = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстИННВладельца, ИННОбъекта, ПлательщикаПолучателя);
	Элементы.ИНН.СписокВыбора.Добавить(ИННОбъекта, ТекстИННвладельца);
	
	ТекстКППвладельца = НСтр("ru = '%1 - КПП, указанный для %2 (основной)'");
	
	ТекстКППвладельца = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстКППвладельца, КППОбъекта, ПлательщикаПолучателя);
	Элементы.КПП.СписокВыбора.Добавить(КППОбъекта, ТекстКППвладельца);
	
	Если ЭтоПлательщик Тогда
		ЗаполнитьСписокКПП(СписокКПП, Параметры.Объект.Организация);
		Если СписокКПП.Количество() > 1 Тогда
			Для каждого ЭлементКПП Из СписокКПП Цикл
				Если Элементы.КПП.СписокВыбора.НайтиПоЗначению(ЭлементКПП.Значение) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстШаблона = НСтр("ru = '%1 - КПП в налоговом органе ""%2""'");
				КПППредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстШаблона, ЭлементКПП.Значение, ЭлементКПП.Представление);
				Элементы.КПП.СписокВыбора.Добавить(ЭлементКПП.Значение, КПППредставление);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступность();
	
	ЭтаФорма.Заголовок = ?(ЭтоПлательщик, НСтр("ru = 'Реквизиты плательщика'"), НСтр("ru = 'Реквизиты получателя'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Изменить значения реквизитов в документе?'");
		Оповещение   = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КППОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = "Неопределено" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОповещениеВыбора = Новый ОписаниеОповещения("ВыборИзСпискаЗавершение", ЭтотОбъект);
		ПоказатьВыборИзСписка(ОповещениеВыбора, СписокКПП, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	Если ЕстьОшибкиЗаполненияРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьРеквизитыДокумента();
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьДоступность()
	
	Если ОрганизацияИП И НЕ ВсегдаУказыватьКПП Тогда
		Элементы.КПП.Доступность = Ложь;
	Иначе
		Элементы.КПП.АвтоОтметкаНезаполненного = УказаниеКППОбязательно;
	КонецЕсли;
	
	Если НЕ ЭтоПлательщик И ПолучательФизЛицо Тогда
		Элементы.КПП.Доступность = Ложь;
		Элементы.КПП.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокКПП(СписокКПП, ВладелецСчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Спр.Наименование,
	|	Спр.КПП КАК КПП
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК Спр
	|ГДЕ
	|	Спр.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	КПП";
	
	Запрос.УстановитьПараметр("Владелец", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ВладелецСчета));
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ТекстШаблон = НСтр("ru = '%1 (%2)'");
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокКПП.Добавить(Выборка.КПП, Выборка.Наименование);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьОшибкиЗаполненияРеквизитов()
	
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	Если ПустаяСтрока(ИНН) Тогда
		Если ЭтоПлательщик Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""ИНН плательщика"" не заполнено'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Поле ""ИНН получателя"" не заполнено'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ИНН",, ЕстьОшибки);
	КонецЕсли;
	
	Если УказаниеКППОбязательно И ПустаяСтрока(КПП) Тогда
		Если ЭтоПлательщик Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""КПП плательщика"" не заполнено'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Поле ""КПП получателя"" не заполнено'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КПП",, ЕстьОшибки);
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстНаименования) Тогда
		Если ЭтоПлательщик Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Наименование плательщика"" не заполнено'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Поле ""Наименование получателя"" не заполнено'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ТекстНаименования",, ЕстьОшибки);
	КонецЕсли;
	
	Возврат ЕстьОшибки;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьРеквизитыДокумента()
	
	СтруктураРезультата = Новый Структура;
	
	Если ЭтоПлательщик Тогда
		СтруктураРезультата.Вставить("ИННПлательщика",   ИНН);
		СтруктураРезультата.Вставить("КПППлательщика",   КПП);
		СтруктураРезультата.Вставить("ТекстПлательщика", ТекстНаименования);
		Оповестить("ВыборРеквизитовПлательщика", СтруктураРезультата);
	Иначе
		СтруктураРезультата.Вставить("ИННПолучателя",   ИНН);
		СтруктураРезультата.Вставить("КПППолучателя",   КПП);
		СтруктураРезультата.Вставить("ТекстПолучателя", ТекстНаименования);
		Оповестить("ВыборРеквизитовПолучателя", СтруктураРезультата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		КПП = ВыбранныйЭлемент.Значение;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЗАВЕРШЕНИЕ НЕМОДАЛЬНЫХ ВЫЗОВОВ

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЕстьОшибкиЗаполненияРеквизитов() Тогда
			Возврат;
		КонецЕсли;
		
		ИзменитьРеквизитыДокумента();
		Модифицированность = Ложь;
	ИначеЕсли Результат <> КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		Модифицированность = Ложь;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры
