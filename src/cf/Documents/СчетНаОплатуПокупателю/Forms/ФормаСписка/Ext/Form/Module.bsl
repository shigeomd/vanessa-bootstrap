#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	
	УстановитьУсловноеОформление();
	
	// Уведомим о появлении нового функционала
	КлючиНастроек = "БыстроеОсвоениеСчетНаОплатуПокупателю, НовоеВСчетахНаОплатуРелиз39";
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях(КлючиНастроек);
	
	// Заполнение группы информационных ссылок
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);
	
	// Видимость команд установки статуса документов
	ЕстьПравоИзмененияСтатусовДокументов = СтатусыДокументов.ПравоИзмененияСтатусовДокументов();
	Элементы.УстановитьСтатусОплачен.Видимость         = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.УстановитьСтатусОплаченЧастично.Видимость = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.УстановитьСтатусОтменен.Видимость         = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.УстановитьСтатусНеоплачен.Видимость       = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.СписокКонтекстноеМенюУстановитьСтатусОплачен.Видимость         = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.СписокКонтекстноеМенюУстановитьСтатусОплаченЧастично.Видимость = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.СписокКонтекстноеМенюУстановитьСтатусОтменен.Видимость         = ЕстьПравоИзмененияСтатусовДокументов;
	Элементы.СписокКонтекстноеМенюУстановитьСтатусНеоплачен.Видимость       = ЕстьПравоИзмененияСтатусовДокументов;
	
	ПроверкаКонтрагентов.ФормаСпискаПриСозданииНаСервере(Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПоказатьБыстроеОсвоение", 0.6, Истина);
	
	Если НастройкиПредупреждений.НовоеВСчетахНаОплатуРелиз39 Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПоказатьИнформациюНовоеВСчетахНаОплатуРелиз39", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	КлючеваяОперация = "СозданиеФормыСчетНаОплатуПокупателям";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	КлючеваяОперация = "ОткрытиеФормыСчетНаОплатуПокупателям";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Строка <> Неопределено Тогда
		
		Если ПрисоединенныеФайлыБПКлиент.ПараметрыПеретаскиванияСодержатФайлы(ПараметрыПеретаскивания) Тогда
			
			СтандартнаяОбработка = Ложь;
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Ссылка"                 , Строка);
			ДополнительныеПараметры.Вставить("ПараметрыПеретаскивания", ПараметрыПеретаскивания);
			ДополнительныеПараметры.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПеретаскиваниеФайловОтветПолучен",
				ПрисоединенныеФайлыБПКлиент,
				ДополнительныеПараметры);
			ШаблонВопроса = НСтр("ru='Присоединить файлы к документу %1?'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонВопроса, Строка);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСтатусОплачен(Команда)
	
	УстановитьСтатусыВыделенныхДокументов(ПредопределенноеЗначение("Перечисление.СтатусОплатыСчетаПокупателю.Оплачен"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОплаченЧастично(Команда)
	
	УстановитьСтатусыВыделенныхДокументов(ПредопределенноеЗначение("Перечисление.СтатусОплатыСчетаПокупателю.ОплаченЧастично"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусНеоплачен(Команда)
	
	УстановитьСтатусыВыделенныхДокументов(ПредопределенноеЗначение("Перечисление.СтатусОплатыСчетаПокупателю.Неоплачен"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОтменен(Команда)
	
	УстановитьСтатусыВыделенныхДокументов(ПредопределенноеЗначение("Перечисление.СтатусОплатыСчетаПокупателю.Отменен"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьСтатусыВыделенныхДокументов(НовыйСтатус)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	МассивДокументов = Новый Массив;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока);
		
		Если ТекущаяСтрока <> Неопределено Тогда
			МассивДокументов.Добавить(ТекущаяСтрока.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивДокументов.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		Возврат;
	КонецЕсли;
	
	УстановитьСтатусДокументовНаСервере(МассивДокументов, НовыйСтатус);
	
	Элементы.Список.Обновить();
	
	Оповестить("ИзмененСтатусДокументов", МассивДокументов); // Оповещение открытых форм документов
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСтатусДокументовНаСервере(Знач МассивДокументов, Знач НовыйСтатус)
	
	РегистрыСведений.СтатусыДокументов.УстановитьСтатусДокументов(МассивДокументов, НовыйСтатус);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоказатьИнформациюНовоеВСчетахНаОплатуРелиз39()
	
	ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("НовоеВСчетахНаОплатуРелиз39", , НастройкиПредупреждений);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБыстроеОсвоение()
	
	ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("БыстроеОсвоениеСчетНаОплатуПокупателю", , НастройкиПредупреждений);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	
	// Вся строка серым цветом, если счет отменен.

	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Список");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.Оплата", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтатусОплатыСчетаПокупателю.Отменен);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстВторостепеннойНадписи);


	// Вся строка зеленым цветом, если счет оплачен.

	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Список");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.Оплата", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтатусОплатыСчетаПокупателю.Оплачен);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ЗеленыйЛес);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

