////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьРеквизитыИзПараметровФормы(ЭтаФорма);
		УстановитьСостояниеДокумента();
	КонецЕсли;
	
	ТекущаяДатаДокумента = Объект.Дата;
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	
	ОбновитьПодвал(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("СостояниеРегламентнойОперации", 
		?(Объект.Проведен, ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено"), 
						   ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.НеВыполнено")));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПодтверждениеНулевойСтавкиНДС";
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		Если Объект.Состав.Количество() > 0 Тогда
			ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросОчиститьТабличнуюЧастьЗавершение", ЭтотОбъект, ТекущаяДатаДокумента);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ДатаПриИзмененииНаСервере();
		КонецЕсли;
	Иначе
		// Запомним новую дату документа.
		ТекущаяДатаДокумента = Объект.Дата;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Состав

&НаКлиенте
Процедура СоставСобытиеПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ДанныеСтрокиТабличнойЧасти = Новый Структура(
		"Событие,СтавкаНДС,СуммаНДС,ПродажиСНДС0,СчетФактураВыданный,ДокументОтгрузки,Покупатель");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТабличнойЧасти, ТекущаяСтрока);
	
	ДанныеСтрокиТабличнойЧасти = СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСтрокиТабличнойЧасти);

КонецПроцедуры

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	
	ОбновитьПодвал(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоставПродажиСНДС0ПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ТекущаяСтрока.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.ПродажиСНДС0, 
								Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущаяСтрока.СтавкаНДС));

КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ТекущаяСтрока.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.ПродажиСНДС0, 
								Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущаяСтрока.СтавкаНДС));

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.Проведен Тогда
		ТекстВопроса = НСтр("ru='Проведенный документ не может быть заполнен автоматически. 
			|Отменить проведение документа для заполнения?'"); 
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьДокумент();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект = Форма.Объект;
	
	ПараметрыОтбора = Новый Структура("Событие", ПредопределенноеЗначение("Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0"));
	МассивНеподтверждений = Объект.Состав.НайтиСтроки(ПараметрыОтбора);
	
	Форма.ЕстьНеподтверждениеСтавки = МассивНеподтверждений.Количество() <> 0;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыИзПараметровФормы(Форма)
	
	ПараметрыЗаполненияФормы = Неопределено;
	
	Если Форма.Параметры.Свойство("ПараметрыЗаполненияФормы",ПараметрыЗаполненияФормы) Тогда
		ЗаполнитьЗначенияСвойств(Форма.Объект,ПараметрыЗаполненияФормы);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодвал(Форма)
	
	Объект   			  = Форма.Объект;
	Форма.НадписьВсего 	  = Объект.Состав.Итог("ПродажиСНДС0");
	Форма.НадписьВсегоНДС = Объект.Состав.Итог("СуммаНДС");

КонецПроцедуры

&НаСервере
Функция СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти)
	
	Если ДанныеСтрокиТабличнойЧасти.Событие = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0 Тогда
		
		Если ВерсияПостановления1137 = 3 Тогда
			ДанныеСтрокиТабличнойЧасти.СуммаНДС = ОпределитьСуммуНДСПоДокументуОтгрузки(
				ДанныеСтрокиТабличнойЧасти.ДокументОтгрузки, ДанныеСтрокиТабличнойЧасти.Покупатель);
		Иначе
			ДанныеСтрокиТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
			ДанныеСтрокиТабличнойЧасти.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0, 
				Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ДанныеСтрокиТабличнойЧасти.СтавкаНДС))
		КонецЕсли;
			
	Иначе
		ДанныеСтрокиТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
		ДанныеСтрокиТабличнойЧасти.СчетФактураВыданный = Документы.СчетФактураВыданный.ПустаяСсылка();
		ДанныеСтрокиТабличнойЧасти.СуммаНДС  = 0;
	КонецЕсли;
	
	Возврат ДанныеСтрокиТабличнойЧасти;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДокумент(ОтменитьПроведение = Ложь)

	ЗаполнитьДокументНаСервере(ОтменитьПроведение);
	Если ОтменитьПроведение Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
	КонецЕсли;
	
	Если Объект.Состав.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Неподтвержденная реализация по ставке 0% не обнаружена.'");
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокумент(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТабличнуюЧастьЗавершение(Результат, ТекущаяДатаДокумента) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДатаПриИзмененииНаСервере();
		Объект.Состав.Очистить();
	Иначе
		Объект.Дата = ТекущаяДатаДокумента;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьСуммуНДСПоДокументуОтгрузки(ДокументОтгрузки, Контрагент)
	
	Если НЕ ЗначениеЗаполнено(ДокументОтгрузки) Тогда
		Возврат 0;
	КонецЕсли;
	
	ДанныеСчетаФактуры = Новый Структура(
		"СчетФактура,ВидСчетаФактуры,Контрагент,ДоговорКонтрагента,ИспользуетсяПостановлениеНДС1137,НеподтверждениеНулевойСтавки,СводныйКомиссионный");
		
	ДанныеСчетаФактуры.СчетФактура = Документы.СчетФактураВыданный.ПустаяСсылка();
	ДанныеСчетаФактуры.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	ДанныеСчетаФактуры.Контрагент = Контрагент;
	ДанныеСчетаФактуры.ИспользуетсяПостановлениеНДС1137 = Истина;
	ДанныеСчетаФактуры.НеподтверждениеНулевойСтавки = Истина;
	ДанныеСчетаФактуры.СводныйКомиссионный = Ложь;		
	ПараметрыДокумента = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОтгрузки, ДанныеСчетаФактуры);
	
	Если ПараметрыДокумента.Реквизиты = Неопределено 
		ИЛИ ПараметрыДокумента.ТаблицаДокумента = Неопределено Тогда
		Возврат 0;
	Иначе
		Возврат ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаНДС");
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	// СоставСтавкаНДС, СоставСуммаНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСтавкаНДС");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСуммаНДС");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);


	// СоставСчетФактураВыданный

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСчетФактураВыданный");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Меньше, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// СоставСчетФактураВыданный

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСчетФактураВыданный");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗаголовкиСтрокЦветТекста);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Не требуется'"));


	// СоставСтавкаНДС, СоставВидЦенности

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСтавкаНДС");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставВидЦенности");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Равно, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// СоставПродажиСНДС0

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставПродажиСНДС0");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Равно, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);


	// СтатьяПрочихРасходов

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СтатьяПрочихРасходов");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЕстьНеподтверждениеСтавки", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаСервере(ОтменитьПроведение)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ОтменитьПроведение Тогда
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	ДокументОбъект.ЗаполнитьДокумент();
	ЗначениеВДанныеФормы(ДокументОбъект, Объект);
	
	ОбновитьПодвал(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры
