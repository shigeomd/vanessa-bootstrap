////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВидДоговора");
	
	ЭтоДоговорСКомитентом = (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
		ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку);
		
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСостояниеДокумента();
	КонецЕсли;
		
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		УстановитьДоговорКонтрагента();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)

	УстановитьДоговорКонтрагента();

КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)

	ДанныеОбъекта = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ВалютаДокумента,
		|СчетУчетаРасчетовСКомитентом, ЭтоДоговорСКомитентом");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	ДоговорКонтрагентаПриИзмененииНаСервере(ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
	
	ЭтоДоговорСКомитентом = ДанныеОбъекта.ЭтоДоговорСКомитентом;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтаФорма, "Объект.Комментарий");
	
КонецПроцедуры  

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	Элементы.СчетУчетаРасчетовСКомитентом.Доступность =  Форма.ЭтоДоговорСКомитентом;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоговорКонтрагента()

	ДанныеОбъекта = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ВалютаДокумента,
		|СчетУчетаРасчетовСКомитентом, ЭтоДоговорСКомитентом");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	УстановитьДоговорКонтрагентаНаСервере(ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
	
	ЭтоДоговорСКомитентом = ДанныеОбъекта.ЭтоДоговорСКомитентом;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьДоговорКонтрагентаНаСервере(ДанныеОбъекта)

	БухгалтерскийУчетПереопределяемый.УстановитьДоговорКонтрагента(ДанныеОбъекта.ДоговорКонтрагента, ДанныеОбъекта.Контрагент, ДанныеОбъекта.Организация);
	
	ДоговорКонтрагентаПриИзмененииНаСервере(ДанныеОбъекта);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДоговорКонтрагентаПриИзмененииНаСервере(ДанныеОбъекта)

	Если ЗначениеЗаполнено(ДанныеОбъекта.ДоговорКонтрагента) Тогда
		СвойстваДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеОбъекта.ДоговорКонтрагента, "ВидДоговора, ВалютаВзаиморасчетов");
		
		ДанныеОбъекта.ЭтоДоговорСКомитентом = (СвойстваДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
			ИЛИ СвойстваДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку);
		ДанныеОбъекта.ВалютаДокумента = СвойстваДоговора.ВалютаВзаиморасчетов;
	Иначе
		ДанныеОбъекта.ЭтоДоговорСКомитентом = Ложь;
		ДанныеОбъекта.ВалютаДокумента       = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	Если ДанныеОбъекта.ЭтоДоговорСКомитентом Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(ДанныеОбъекта.Организация, ДанныеОбъекта.Контрагент, ДанныеОбъекта.ДоговорКонтрагента);
		ДанныеОбъекта.СчетУчетаРасчетовСКомитентом = СчетаУчета.СчетРасчетовСКомитентом;
	Иначе
		ДанныеОбъекта.СчетУчетаРасчетовСКомитентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
