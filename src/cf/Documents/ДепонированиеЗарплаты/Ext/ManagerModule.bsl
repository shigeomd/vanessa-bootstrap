
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Печать реестра депонированных сумм.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрДепонированныхСумм";
	КомандаПечати.Представление = УчетДепонированнойЗарплатыВнутренний.ОписаниеПечатиРеестраДепонированныхСумм().ПредставлениеКоманды;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ОписаниеПечатиРеестра = УчетДепонированнойЗарплатыВнутренний.ОписаниеПечатиРеестраДепонированныхСумм();
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрДепонированныхСумм") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РеестрДепонированныхСумм", ОписаниеПечатиРеестра.СинонимМакета, РеестрДепонированныхСумм(МассивОбъектов, ОбъектыПечати, ОписаниеПечатиРеестра.ИмяМакета));
	КонецЕсли;
	
КонецПроцедуры

Функция РеестрДепонированныхСумм(МассивОбъектов, ОбъектыПечати, ИмяМакета) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрДепонированныхСумм";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы(ИмяМакета);
	
	НастройкиПечатныхФорм = ЗарплатаКадрыПовтИсп.НастройкиПечатныхФорм();
	
	// получаем данные для печати
	ВыборкаШапок = ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = ВыборкаДляПечатиТаблицы(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаШапок.Следующий() Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		// выводим данные о документе
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаШапок);
		ОбластьМакетаШапкаДокумента.Параметры.ДатаДокумента	= Формат(ВыборкаШапок.Дата, "ДЛФ=D");
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
		// Выводим данные по строкам документа.
		ВыборкаСтрок.Сбросить();
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Депонирование, "Депонирование") Цикл
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			
			ОбластьМакетаСтрока.Параметры.ФизическоеЛицо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 %2 %3'"), ВыборкаСтрок.Фамилия, ВыборкаСтрок.Имя, ВыборкаСтрок.Отчество);
				
			Если НастройкиПечатныхФорм.ВыводитьПолнуюИерархиюПодразделений И ЗначениеЗаполнено(ОбластьМакетаСтрока.Параметры.Подразделение) Тогда
				ОбластьМакетаСтрока.Параметры.Подразделение = ОбластьМакетаСтрока.Параметры.Подразделение.ПолноеНаименование();
			КонецЕсли; 
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу.
			ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрок.Сумма;
			Итого = Итого + ВыборкаСтрок.Сумма;
			
		КонецЦикла;
		
		Если ВыведеноСтрок > 0 Тогда 
			ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		КонецЕсли;
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
		Для Сч = 1 По ОбластьМакетаСтрока.Параметры.Количество() Цикл
			ОбластьМакетаСтрока.Параметры.Установить(Сч - 1,""); 
		КонецЦикла;
		ОбластьМакетаСтрока.Параметры.ФизическоеЛицо = " ";
		Пока ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти) Цикл
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаШапок);
		ОбластьМакетаПодвал.Параметры.Итого = Итого;
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);
		
	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует запрос по документу.
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк.
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ВыборкаДляПечатиШапки(Депонирования)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Депонирования", Депонирования);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДепонированиеЗарплаты.Ссылка КАК Депонирование,
	|	ДепонированиеЗарплаты.Ведомость КАК Ссылка,
	|	ДепонированиеЗарплаты.Дата КАК Дата,
	|	ДепонированиеЗарплаты.Ведомость.Номер КАК Номер,
	|	ДепонированиеЗарплаты.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ДепонированиеЗарплаты.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК НазваниеОрганизации,
	|	ВЫРАЗИТЬ(ДепонированиеЗарплаты.Организация.КодПоОКПО КАК СТРОКА(10)) КАК КодПоОКПО,
	|	ДепонированиеЗарплаты.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ДепонированиеЗарплаты.Бухгалтер КАК Бухгалтер,
	|	ДепонированиеЗарплаты.Кассир КАК Кассир
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ДепонированиеЗарплаты КАК ДепонированиеЗарплаты
	|ГДЕ
	|	ДепонированиеЗарплаты.Ссылка В(&Депонирования)";

	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	ИменаПолейОтветственныхЛиц.Добавить("Бухгалтер");
	ИменаПолейОтветственныхЛиц.Добавить("Кассир");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Депонирование,
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НазваниеОрганизации,
	|	ДанныеДокументов.КодПоОКПО,
	|	ЕСТЬNULL(ВТФИОКассирПоследние.РасшифровкаПодписи, """") КАК Кассир,
	|	ЕСТЬNULL(ВТФИОГлавБухПоследние.РасшифровкаПодписи, """") КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(ВТФИОБухгалтерПоследние.РасшифровкаПодписи, """") КАК Бухгалтер
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОКассирПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОКассирПоследние.Ссылка
	|			И ДанныеДокументов.Кассир = ВТФИОКассирПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОГлавБухПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОГлавБухПоследние.Ссылка
	|			И ДанныеДокументов.ГлавныйБухгалтер = ВТФИОГлавБухПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОБухгалтерПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОБухгалтерПоследние.Ссылка
	|			И ДанныеДокументов.Бухгалтер = ВТФИОБухгалтерПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокументов.Дата, ГОД),
	|	ДанныеДокументов.Номер";
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

// Формирует запрос по табличной части документа.
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк.
//
// Возвращаемое значение:
//  Выборка из результата запроса.
//
Функция ВыборкаДляПечатиТаблицы(Депонирования)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Депонирования", Депонирования);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДепонированиеЗарплатыДепоненты.Ссылка.Ведомость КАК Ведомость,
	|	ДепонированиеЗарплатыДепоненты.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ДепонированиеЗарплаты.Депоненты КАК ДепонированиеЗарплатыДепоненты
	|ГДЕ
	|	ДепонированиеЗарплатыДепоненты.Ссылка В(&Депонирования)";
	Депоненты = Запрос.Выполнить().Выгрузить();
	Ведомости = ОбщегоНазначения.ВыгрузитьКолонку(Депоненты, "Ведомость", Истина);
	ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(Депоненты, "ФизическоеЛицо", Истина);
	
	ВзаиморасчетыССотрудниками.СоздатьВТДанныеВедомостейДляОплатыДокументами(Запрос.МенеджерВременныхТаблиц, Истина, Депонирования, Ведомости, ФизическиеЛица, Неопределено);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДепонированиеЗарплатыДепоненты.Ссылка КАК Депонирование,
	|	ДепонированиеЗарплатыДепоненты.Ссылка.Дата КАК Период,
	|	ДепонированиеЗарплатыДепоненты.НомерСтроки КАК НомерСтроки,
	|	ДанныеВедомостей.Ведомость.Номер КАК НомерВедомости,
	|	ДанныеВедомостей.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеВедомостей.СуммаКВыплате КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ДепонированиеЗарплаты.Депоненты КАК ДепонированиеЗарплатыДепоненты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеВедомостейДляОплатыДокументами КАК ДанныеВедомостей
	|		ПО ДепонированиеЗарплатыДепоненты.Ссылка.Ведомость = ДанныеВедомостей.Ведомость
	|			И ДепонированиеЗарплатыДепоненты.ФизическоеЛицо = ДанныеВедомостей.ФизическоеЛицо
	|			И (ДепонированиеЗарплатыДепоненты.Ссылка В (&Депонирования))";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = 
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
			Запрос.МенеджерВременныхТаблиц,
			"ВТДанныеДокументов");
			
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество"); 
			
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, МассивНеобходимыхКадровыхДанных);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Депонирование КАК Депонирование,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокументов.НомерВедомости,
	|	КадровыеДанныеФизическихЛиц.Фамилия,
	|	КадровыеДанныеФизическихЛиц.Имя,
	|	КадровыеДанныеФизическихЛиц.Отчество,
	|	ДанныеДокументов.Сумма
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|		ПО ДанныеДокументов.ФизическоеЛицо = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Депонирование,
	|	НомерСтроки";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
