#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Табличная часть Товары
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",    "Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ТоварыВЦенахПродажи");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",    "ЗапасыВЦенахПродажи");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТоварыВЦенахПродажи");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВТабличнойЧасти(
		Объект,
		ИмяТабличнойЧасти);

КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  Объект                - ДокументОбъект или соответствующие данные формы
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - оставлен для совместимости; не используется
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре = Неопределено) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		Объект,
		СтрокаТабличнойЧасти,
		ИмяТабличнойЧасти);

КонецПроцедуры

#КонецОбласти
	
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Инвентаризация товаров на складе
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризацияТоваровНаСкладе";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризация товаров на складе'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	// Инвентаризационная опись товаров (ИНВ-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ3";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись товаров (ИНВ-3)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	// Сличительная ведомость (ИНВ-19)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ19";
	КомандаПечати.Представление = НСтр("ru = 'Сличительная ведомость (ИНВ-19)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	// Приказ о проведении инвентаризации (ИНВ-22)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ22";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о проведении инвентаризации (ИНВ-22)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Инвентаризация товаров на складе""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияТоваровНаСкладе") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИнвентаризацияТоваровНаСкладе", "Инвентаризация товаров на складе", 
			ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета), , "Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИнвентаризацияТоваровНаСкладе");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНВ3", "ИНВ-3 (Инвентаризационная опись товаров)", 
			ПечатьИнв3(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета), , "Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИНВ3");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ19") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНВ19",  "ИНВ-19 (Сличительная ведомость)", 
			ПечатьИНВ19(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета), , "Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИНВ19");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ22") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНВ22",  "ИНВ-22 (Приказ)", 
			ПечатьИНВ22(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета), , "ОбщийМакет.ПФ_MXL_ИНВ22");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьВыборкуШапок(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка,
	|	ИнвентаризацияТоваровНаСкладе.Номер,
	|	ИнвентаризацияТоваровНаСкладе.Дата,
	|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ИнвентаризацияТоваровНаСкладе.Организация,
	|	ИнвентаризацияТоваровНаСкладе.Склад.Представление КАК ПредставлениеСклада,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация1,
	|	ИнвентаризацияТоваровНаСкладе.Склад,
	|	ИнвентаризацияТоваровНаСкладе.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Наименование КАК ТоварКратко,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.Артикул
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.Код
	|		КОНЕЦ КАК КодАртикул,
	|		СчетУчета КАК СубСчет,
	|		Количество КАК Количество,
	|		КоличествоУчет КАК КоличествоПоУчету,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|		Цена,
	|		Сумма,
	|		СуммаУчет КАК СуммаПоУчету
	|	),
	|	ИнвентаризацияТоваровНаСкладе.ИнвентаризационнаяКомиссия.(
	|		НомерСтроки,
	|		ФизЛицо,
	|		Председатель КАК Председатель
	|	),
	|	ИнвентаризацияТоваровНаСкладе.ПричинаПроведенияИнвентаризации
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Дата,
	|	Ссылка,
	|	Председатель УБЫВ,
	|	ИнвентаризацияТоваровНаСкладе.Товары.НомерСтроки";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

Функция ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаПечати = ВалютаРегламентированногоУчета;
	Шапки = ПолучитьВыборкуШапок(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИнвентаризацияТоваровНаСкладе";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИнвентаризацияТоваровНаСкладе");
	ПервыйДокумент = Истина;
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;

	Пока Шапки.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапки, 
																					"Инвентаризация товаров на складе");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим данные об организации и складе
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапки);
		
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапки.Организация, Шапки.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ОбластьМакета.Параметры.ВалютаНаименование = Строка(ВалютаПечати);
		ОбластьМакета.Параметры.Валюта             = ВалютаПечати;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку таблицы
		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(Шапки);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.Колонка = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.Колонка = "Код";
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;

		ОбластьСтроки = ?(ВыводитьКоды, "СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		ВыборкаСтрокТовары = Шапки.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Товар = ВыборкаСтрокТовары.Товар;

			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета                        = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего        = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСуммы);
		ОбластьМакета.Параметры.ВсегоПоУчету = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСуммыПоУчету);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(ОбластьМакета);
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапки.Ссылка);

	КонецЦикла;	//Шапки.Следующий() 
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьИнв3(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)

	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаПечати = ВалютаРегламентированногоУчета;
	Шапка = ПолучитьВыборкуШапок(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ3";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИНВ3");
	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		ЧленКомиссии = Шапка.ИнвентаризационнаяКомиссия.Выбрать();

		//////////////////////////////////////////////////////////////////////
		// 1-я страница формы

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ДатаДокумента            = Шапка.Дата;
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Ложь);
		ОбластьМакета.Параметры.ДатаОкончанияИнвентаризацииЛокальныйФормат = Шапка.ДатаОкончанияИнвентаризации; 
		
		ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ОтветственноеЛицо, Шапка.Дата);
		ОбластьМакета.Параметры.ДолжностьМОЛ1     = ДанныеМОЛ.Должность;
		ОбластьМакета.Параметры.ФИОМОЛ1           = ДанныеМОЛ.Представление;
		ОбластьМакета.Параметры.Подразделение = Шапка.Склад;
			
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы

		ИтогФактКоличество = 0;
		ИтогФактСумма      = 0;
		ИтогФактСуммаВсего = 0;
		ИтогБухКоличество  = 0;
		ИтогБухСумма       = 0;

		КолвоСтрокПоСтранице = 0;
		КолвоПоСтранице      = 0;
		СуммаЛиста           = 0;
		ИтогоКолво           = 0;
		
		НомерСтраницы = 2;
	    Ном = 0;

		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		// Выводим многострочную часть документа
		ПодвалСтраницы  = Макет.ПолучитьОбласть("ПодвалСтраницы");	
			
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Ном = Ном + 1;
			СтрокаТаблицы   = Макет.ПолучитьОбласть("Строка");
			СтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалСтраницы);
			
			Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

				ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
				ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

				ПараметрыОбласти.ИтогоФактКоличество = ИтогФактКоличество;
				ПараметрыОбласти.ИтогоФактСумма      = ИтогФактСумма;
				ПараметрыОбласти.ИтогоБухКоличество  = ИтогБухКоличество;
				ПараметрыОбласти.ИтогоБухСумма       = ИтогБухСумма;

				ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
				ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(КолвоПоСтранице);
				ПараметрыОбласти.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);

				ИтогФактКоличество = 0;
				ИтогФактСумма      = 0;
				ИтогБухКоличество  = 0;
				ИтогБухСумма       = 0;

				КолвоСтрокПоСтранице = 0;
				КолвоПоСтранице      = 0;
				СуммаЛиста           = 0;

			КонецЕсли;

			СтрокаТаблицы.Параметры.Номер = Ном;
			СтрокаТаблицы.Параметры.ТоварНаименование = ?(ЗначениеЗаполнено(ВыборкаСтрокТовары.Товар), ВыборкаСтрокТовары.Товар, ВыборкаСтрокТовары.ТоварКратко);

			ТабДокумент.Вывести(СтрокаТаблицы);

			ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.Количество;
			ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.Сумма;
			ИтогФактСуммаВсего = ИтогФактСуммаВсего + ВыборкаСтрокТовары.Сумма;
			ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.КоличествоПоУчету;
			ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.СуммаПоУчету;
			ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.Количество;

			КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
			КолвоПоСтранице      = КолвоПоСтранице      + ВыборкаСтрокТовары.Количество;
			СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.Сумма;

		КонецЦикла;

		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

		ПараметрыОбласти.ИтогоФактКоличество  = ИтогФактКоличество;
		ПараметрыОбласти.ИтогоФактСумма       = ИтогФактСумма;
		ПараметрыОбласти.ИтогоБухКоличество   = ИтогБухКоличество;
		ПараметрыОбласти.ИтогоБухСумма        = ИтогБухСумма;
		ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
		ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(КолвоПоСтранице);
		ПараметрыОбласти.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Выводим подвал документа
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(ИтогоКолво);
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
		ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогФактСуммаВсего, ВалютаПечати);
		
		Инд = 1;
		Пока ЧленКомиссии.Следующий() Цикл
			ДанныеЧленаКомиссии = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, ЧленКомиссии.ФизЛицо, Шапка.Дата);
			Если Инд <= 4 Тогда
				Если ЧленКомиссии.Председатель Тогда
					ОбластьМакета.Параметры["ДолжностьПредседателя"] = ДанныеЧленаКомиссии.Должность;
					ОбластьМакета.Параметры["ФИОПредседателя"] = ДанныеЧленаКомиссии.Представление;
				Иначе
					ОбластьМакета.Параметры["ДолжностьЧленаКомиссии" + Инд] = ДанныеЧленаКомиссии.Должность;
					ОбластьМакета.Параметры["ФИОЧленаКомиссии" + Инд] = ДанныеЧленаКомиссии.Представление;
				КонецЕсли;		
			Иначе
				ТабДокумент.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("ДопЧленКомиссии");
	           	ОбластьМакета.Параметры["ДолжностьЧленаКомиссии"] = ДанныеЧленаКомиссии.Должность;
				ОбластьМакета.Параметры["ФИОЧленаКомиссии"] = ДанныеЧленаКомиссии.Представление;
			КонецЕсли;
			Инд = Инд + 1;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписиМОЛ");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
			
		ОбластьМакета.Параметры.ДолжностьМОЛ1   = ДанныеМОЛ.Должность;
		ОбластьМакета.Параметры.ФИОМОЛ1         = ДанныеМОЛ.Представление;
		
		ОбластьМакета.Параметры.ДатаДокумента 	= Шапка.Дата;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции

Функция ПечатьИНВ19(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаПечати = ВалютаРегламентированногоУчета;
	Шапка = ПолучитьВыборкуШапок(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ19";
	
	СисИнфо = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СисИнфо.ИнформацияПрограммыПросмотра) Тогда 
		ТабДокумент.ПолеСлева          = 0;
	Иначе
		ТабДокумент.ПолеСлева          = 20;
		ТабДокумент.ПолеСправа         = 0;
	КонецЕсли;

	
	// Получение областей макета.
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИНВ19");
	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		ЧленКомиссии = Шапка.ИнвентаризационнаяКомиссия.Выбрать();
		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
		ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("СтрокаТаблицы1");
		ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоТаблицы1");
		ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");

		// Вывод шапки документа.
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.Дата;
		ОбластьМакетаШапка.Параметры.ДатаНачалаИнвентаризации = Шапка.ДатаНачалаИнвентаризации;
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Ложь);
		
		ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ОтветственноеЛицо, Шапка.Дата);
		ОбластьМакетаШапка.Параметры.ДолжностьМОЛ1     = ДанныеМОЛ.Должность;
		ОбластьМакетаШапка.Параметры.ФИОМОЛ1           = ДанныеМОЛ.Представление;
		ОбластьМакетаШапка.Параметры.ПредставлениеПодразделения = Шапка.Склад;

		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);

		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		НомерСтраницы   = 2;
		НомерСтроки     = 1;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		ИтогоРезультатИзлишекКоличество   = 0;
		ИтогоРезультатИзлишекСумма        = 0;
		ИтогоРезультатНедостачаКоличество = 0;
		ИтогоРезультатНедостачаСумма      = 0;

		// Вывод заголовка таблицы.
		ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

		// Вывод многострочной части докмента.
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакетаСтрока.Параметры.ТоварНаименование = ?(ЗначениеЗаполнено(ВыборкаСтрокТовары.Товар), 
															ВыборкаСтрокТовары.Товар, ВыборкаСтрокТовары.ТоварКратко);

			Разница     = 0;
			РазницаСумм = 0;

			Разница     = ВыборкаСтрокТовары.Количество - ВыборкаСтрокТовары.КоличествоПоУчету;
			РазницаСумм = ВыборкаСтрокТовары.Сумма      - ВыборкаСтрокТовары.СуммаПоУчету;
			
			Если Разница = 0 Тогда
				Продолжить;
			КонецЕсли;

			ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
			
			Если Разница < 0 Тогда
				
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаКоличество = - Разница;
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаСумма      = - РазницаСумм;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекКоличество   = 0;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекСумма        = 0;

				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + ( - Разница);
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + ( - РазницаСумм);
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + 0;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + 0;
				
			Иначе
				
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаКоличество = 0;
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаСумма      = 0;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекКоличество   = Разница;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекСумма        = РазницаСумм;

				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + 0;
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + 0;
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + Разница;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + РазницаСумм;
				
			КонецЕсли;

			// Проверка вывода.
			СтрокаСПодвалом = Новый Массив();
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			
			Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
				
				Если КоличествоСтрок <> 1 Тогда
			
					// Вывод итого по странице.
					ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					
					// Вывод разделителя страниц.
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Вывод заголовка таблицы.
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;

			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			
			НомерСтроки = НомерСтроки + 1;

		КонецЦикла;

		// Вывод итого по странице.
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма;
		ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
		
		// Вывод подвала.
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ОбластьМакетаПодвал.Параметры.ФИОБухгалтера = Руководители.ГлавныйБухгалтерПредставление;
		ОбластьМакетаПодвал.Параметры.ДолжностьМОЛ1 = ДанныеМОЛ.Должность;
		ОбластьМакетаПодвал.Параметры.ФИОМОЛ1 = ДанныеМОЛ.Представление;
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции

Функция ПечатьИНВ22(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаПечати = ВалютаРегламентированногоУчета;
	Шапка = ПолучитьВыборкуШапок(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ22";
	
	// Получение областей макета.
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ИНВ22");
	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл
	
		ЗаголовокРазделаПодписей = Новый Структура();
		ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
		ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		ЧленКомиссии = Шапка.ИнвентаризационнаяКомиссия.Выбрать();
	
		// Получаем области макета для вывода в табличный документ
		ШапкаОтчета   = Макет.ПолучитьОбласть("Шапка");
		Подпись = Макет.ПолучитьОбласть("Подпись");
		Подвал  = Макет.ПолучитьОбласть("Подвал");
		
		// Выведем шапку документа
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		
		ШапкаОтчета.Параметры.Заполнить(Шапка);
		ШапкаОтчета.Параметры.Организация          = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		ШапкаОтчета.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
		
		ШапкаОтчета.Параметры.НомерДокумента = Шапка.ДокументОснованиеНомер;
		ШапкаОтчета.Параметры.ДатаДокумента  = Шапка.ДокументОснованиеДата;
		
		ШапкаОтчета.Параметры.НаименованиеИмуществаОбязательств = "";
		ШапкаОтчета.Параметры.Подразделение = Шапка.Склад;
		
		ТабДокумент.Вывести(ШапкаОтчета);
		
		// Выведем подпись председателя инвентаризационной комиссии
		ПредседательКомиссии = Неопределено;
		Если ЧленКомиссии.Следующий() Тогда
			Если ЧленКомиссии.Председатель Тогда
				ПредседательКомиссии = ЧленКомиссии;
			КонецЕсли;	// 
		КонецЕсли;
		
		Если НЕ (ПредседательКомиссии = Неопределено) Тогда
			
			ДанныеПредседателя = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, ПредседательКомиссии.ФизЛицо, Шапка.Дата);
				
			Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
		    Подпись.Параметры.НаименованиеЧленаКомисси = ПредседательКомиссии.ФизЛицо.Наименование;
			
		Иначе
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.НаименованиеЧленаКомисси = "";
			
		КонецЕсли;
			
		ТабДокумент.Вывести(Подпись);
		
		// Выведем подписи членов комиссии
		ВыводитьЗаголовок = Истина;
		
		КоличествоЧленовКомиссии = 0;
		
		// Сначала выведем членов комиссии из выборки
		Пока ЧленКомиссии.Следующий() Цикл
			
			Если ЧленКомиссии.Председатель Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
			
			ДанныеЧленаКомиссии = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, ЧленКомиссии.ФизЛицо, Шапка.Дата);
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = ДанныеЧленаКомиссии.Должность;
	    	Подпись.Параметры.НаименованиеЧленаКомисси = ЧленКомиссии.ФизЛицо.Наименование;
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		// подписей, как в форме, утвержденной Госкомстатом)
		Если КоличествоЧленовКомиссии < 3 Тогда
			
			Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			Для Итератор = (КоличествоЧленовКомиссии + 1) По 3 Цикл
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
				                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
															   "");
				Подпись.Параметры.Должность                = "";
			    Подпись.Параметры.НаименованиеЧленаКомисси = "";
				
				ТабДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
		
		КонецЕсли;
		
		// Выведем подвал приказа
		Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подвал) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		Подвал.Параметры.НаименованиеИмуществаОбязательств = "";
		Подвал.Параметры.ДатаНачалаИнвентаризации          = Формат(Шапка.ДатаНачалаИнвентаризации, "ДЛФ=DD");
		Подвал.Параметры.ДатаОкончанияИнвентаризации       = Формат(Шапка.ДатаОкончанияИнвентаризации, "ДЛФ=DD");
		Подвал.Параметры.ПричинаПроведенияИнвентаризации   = Шапка.ПричинаПроведенияИнвентаризации;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);
		
		Подвал.Параметры.ДолжностьРуководителя          = Руководители.РуководительДолжностьПредставление;
		Подвал.Параметры.РасшифровкаПодписиРуководителя = Руководители.РуководительПредставление;
		
		ТабДокумент.Вывести(Подвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли