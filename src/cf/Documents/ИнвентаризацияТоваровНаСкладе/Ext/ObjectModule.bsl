#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполняет документ по остаткам на складе
// 
Процедура ЗаполнитьПоОстаткамНаСкладе() Экспорт

	СписокСкладов = Новый Массив;
	Если ЗначениеЗаполнено(Склад) Тогда
		СписокСкладов.Добавить(Склад);
	Иначе
		ЗапросПоСкладам = Новый Запрос;
		ЗапросПоСкладам.УстановитьПараметр("МОЛ", ОтветственноеЛицо);
		ЗапросПоСкладам.УстановитьПараметр("КонецПериода", Дата);
		ЗапросПоСкладам.Текст = 
		"ВЫБРАТЬ
		|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&КонецПериода, ФизическоеЛицо = &МОЛ) КАК ОтветственныеЛицаСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница";
		
		Выборка   = ЗапросПоСкладам.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.СтруктурнаяЕдиница = NULL Тогда
				Продолжить;
			КонецЕсли;
			СписокСкладов.Добавить(Выборка.СтруктурнаяЕдиница);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеСклада = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Склад, "ТипСклада, ТипЦенРозничнойТорговли");
	//Определим настройки аналитического учета
	БУ = ПланыСчетов.Хозрасчетный.Товары.ПолучитьОбъект();
	ВестиСкладскойУчетБУ = БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто") <> Неопределено;
	ВестиСуммовойУчетПоСкладамБУ = ?(ВестиСкладскойУчетБУ, 
		БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто").Суммовой, Ложь);
	
	ТекстУсловияК = ?(ВестиСкладскойУчетБУ, "И Субконто2 В (&Склад)", "");
	ТекстУсловияС = ?(ВестиСуммовойУчетПоСкладамБУ, "И Субконто2 В (&Склад)", "");
	
	ПорядокСубконтоК = Новый Массив();
	ПорядокСубконтоК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВестиСкладскойУчетБУ Тогда
		ПорядокСубконтоК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	
	ПорядокСубконтоС = Новый Массив();
	ПорядокСубконтоС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВестиСуммовойУчетПоСкладамБУ Тогда
		ПорядокСубконтоС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
		
	ПорядокСубконтоМОЛ = Новый Массив();
	ПорядокСубконтоМОЛ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ПорядокСубконтоМОЛ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);

	МассивИсклСчетов = Новый Массив();
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.МатериальныеЦенностиВЭксплуатации);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценкаАТТ);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценкаНТТ);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГТД);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад",		        СписокСкладов);
	Запрос.УстановитьПараметр("МОЛ",	 			ОтветственноеЛицо);
	Запрос.УстановитьПараметр("КонецПериода",	 	Дата);
	Запрос.УстановитьПараметр("Организация",	    Организация);
	Запрос.УстановитьПараметр("ВидСубконто",	    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	Запрос.УстановитьПараметр("ПорядокСубконтоК",	ПорядокСубконтоК);
	Запрос.УстановитьПараметр("ПорядокСубконтоС",	ПорядокСубконтоС);
	Запрос.УстановитьПараметр("ПорядокСубконтоМОЛ",	ПорядокСубконтоМОЛ);
	Запрос.УстановитьПараметр("ИсклСчета",	 		МассивИсклСчетов);
	ТекстЗапросаИнвентаризация = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_ИсклСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ИсклСчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиК.Счет,
	|	ХозрасчетныйОстаткиК.Субконто1,
	|	ХозрасчетныйОстаткиК.КоличествоОстаток
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиК
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, , &ПорядокСубконтоК, Организация В (&Организация) " 
		+ ТекстУсловияК + ") КАК ХозрасчетныйОстаткиК
	|;									
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиС.Счет,
	|	ХозрасчетныйОстаткиС.Субконто1,
	|	ХозрасчетныйОстаткиС.СуммаОстаток,
	|	ХозрасчетныйОстаткиС.КоличествоОстаток
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиС
	|ИЗ
	|РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, , &ПорядокСубконтоС, Организация В (&Организация) " 
		+ ТекстУсловияС + ") КАК ХозрасчетныйОстаткиС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиК.Счет КАК Счет,
	|	ХозрасчетныйОстаткиК.Счет.Порядок КАК Порядок,
	|	ХозрасчетныйОстаткиК.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиК.Субконто1.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиС.СуммаОстаток, 0) КАК СуммаВсего,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиС.КоличествоОстаток, 0) КАК КоличествоВсего,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиК.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	ХозрасчетныйОстаткиК КАК ХозрасчетныйОстаткиК
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиС КАК ХозрасчетныйОстаткиС
	|		ПО ХозрасчетныйОстаткиК.Счет = ХозрасчетныйОстаткиС.Счет
	|			И ХозрасчетныйОстаткиК.Субконто1 = ХозрасчетныйОстаткиС.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиК.Счет В
	|				(ВЫБРАТЬ
	|					ВТ_ИсклСчета.Счет
	|				ИЗ
	|					ВТ_ИсклСчета)";
	
	Если НЕ ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(ОтветственноеЛицо) Тогда
		ТекстЗапросаИнвентаризация = ТекстЗапросаИнвентаризация + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Счет.Порядок,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто1.ЕдиницаИзмерения,
		|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0),
		|	ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстаток, 0),
		|	ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстаток, 0)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, , &ПорядокСубконтоМОЛ, Организация В (&Организация) И Субконто2 В (&МОЛ)) КАК ХозрасчетныйОстатки
		|
		|ГДЕ
		|  НЕ (ХозрасчетныйОстатки.Счет В (ВЫБРАТЬ
		|					ВТ_ИсклСчета.Счет
		|				ИЗ
		|					ВТ_ИсклСчета))
		|";
	КонецЕсли;
	ТекстЗапросаИнвентаризация = ТекстЗапросаИнвентаризация + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Запрос.Текст = ТекстЗапросаИнвентаризация;

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТабличнойЧасти = Товары.Добавить();

		СтрокаТабличнойЧасти.Номенклатура   = Выборка.Номенклатура;
		СтрокаТабличнойЧасти.Количество     = Выборка.Количество;
		СтрокаТабличнойЧасти.СчетУчета	    = Выборка.Счет;
		СтрокаТабличнойЧасти.КоличествоУчет = СтрокаТабличнойЧасти.Количество;

		Цена = ?(Выборка.КоличествоВсего = 0, 0, Выборка.СуммаВсего / Выборка.КоличествоВсего);
		
		СтрокаТабличнойЧасти.СуммаУчет = Цена * Выборка.Количество;
		СтрокаТабличнойЧасти.Сумма     = СтрокаТабличнойЧасти.СуммаУчет;
		СтрокаТабличнойЧасти.Цена      = Цена;

		Если ДанныеСклада.ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка Тогда
			СтрокаТабличнойЧасти.ЦенаВРознице = Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТабличнойЧасти.Номенклатура,
				ДанныеСклада.ТипЦенРозничнойТорговли, Дата, Константы.ВалютаРегламентированногоУчета.Получить(), 1, 1);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Процедура перезаполняет учетные количества в документе
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Процедура ПерезаполнитьУчетныеКоличества() Экспорт

	СписокСкладов = Новый Массив();
	Если ЗначениеЗаполнено(Склад) Тогда
		СписокСкладов.Добавить(Склад);
	Иначе
		ЗапросПоСкладам = Новый Запрос();
		ЗапросПоСкладам.УстановитьПараметр("МОЛ", ОтветственноеЛицо);
		ЗапросПоСкладам.УстановитьПараметр("КонецПериода",    Дата);
		ЗапросПоСкладам.Текст = 
		"ВЫБРАТЬ
		|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&КонецПериода, ФизическоеЛицо = &МОЛ) КАК ОтветственныеЛицаСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница";
		
		Выборка   = ЗапросПоСкладам.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.СтруктурнаяЕдиница = NULL Тогда
				Продолжить;
			КонецЕсли;
			СписокСкладов.Добавить(Выборка.СтруктурнаяЕдиница);
		КонецЦикла;
	КонецЕсли;
		
	//Определим настройки аналитического учета
	БУ = ПланыСчетов.Хозрасчетный.Товары.ПолучитьОбъект();
	ВестиСкладскойУчетБУ  = БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто") <> Неопределено;
	ВестиСуммовойУчетПоСкладамБУ = ?(ВестиСкладскойУчетБУ, 
									БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады, "ВидСубконто").Суммовой, 
									Ложь);
	
	ТекстУсловияК = ?(ВестиСкладскойУчетБУ, "И Субконто2 В (&Склад)", "");
	ТекстУсловияС = ?(ВестиСуммовойУчетПоСкладамБУ, "И Субконто2 В (&Склад)", "");
	
	ПорядокСубконтоК = Новый Массив();
	ПорядокСубконтоК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВестиСкладскойУчетБУ Тогда
		ПорядокСубконтоК.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	
	ПорядокСубконтоС = Новый Массив();
	ПорядокСубконтоС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВестиСуммовойУчетПоСкладамБУ Тогда
		ПорядокСубконтоС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
		
	ПорядокСубконтоМОЛ = Новый Массив();
	ПорядокСубконтоМОЛ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ПорядокСубконтоМОЛ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);

	МассивИсклСчетов = Новый Массив();
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.МатериальныеЦенностиВЭксплуатации);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценкаАТТ);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценкаНТТ);
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГТД);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад",		         СписокСкладов);
	Запрос.УстановитьПараметр("МОЛ",	 			 ОтветственноеЛицо);
	Запрос.УстановитьПараметр("КонецПериода",	 	 Дата);
	Запрос.УстановитьПараметр("Организация",	     Организация);
	Запрос.УстановитьПараметр("ВидСубконто",	     ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	Запрос.УстановитьПараметр("ПорядокСубконтоК",	 ПорядокСубконтоК);
	Запрос.УстановитьПараметр("ПорядокСубконтоС",	 ПорядокСубконтоС);
	Запрос.УстановитьПараметр("ПорядокСубконтоМОЛ",	 ПорядокСубконтоМОЛ);
	Запрос.УстановитьПараметр("ИсклСчета",	 		 МассивИсклСчетов);
	Запрос.УстановитьПараметр("ДокументСсылка",  	 Ссылка);
	
	ТекстЗапросаИнвентаризация = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_ИсклСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ИсклСчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура КАК Номенклатура,
	|	ИнвентаризацияТоваровНаСкладеТовары.СчетУчета КАК СчетУчета,
	|	ИнвентаризацияТоваровНаСкладеТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВложенныйЗапрос
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ИнвентаризацияТоваровНаСкладеТовары
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладеТовары.Ссылка = &ДокументСсылка
	|	И НЕ ИнвентаризацияТоваровНаСкладеТовары.СчетУчета В
	|				(ВЫБРАТЬ
	|					ВТ_ИсклСчета.Счет
	|				ИЗ
	|					ВТ_ИсклСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура КАК Номенклатура,
	|	ИнвентаризацияТоваровНаСкладеТовары.СчетУчета КАК СчетУчета,
	|	ИнвентаризацияТоваровНаСкладеТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВложенныйЗапрос2
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ИнвентаризацияТоваровНаСкладеТовары
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладеТовары.Ссылка = &ДокументСсылка
	|	И НЕ ИнвентаризацияТоваровНаСкладеТовары.СчетУчета В
	|				(ВЫБРАТЬ
	|					ВТ_ИсклСчета.Счет
	|				ИЗ
	|					ВТ_ИсклСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиК.Счет,
	|	ХозрасчетныйОстаткиК.Субконто1,
	|	ХозрасчетныйОстаткиК.КоличествоОстаток
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиК
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, , &ПорядокСубконтоК, Организация В (&Организация) " 
		+ ТекстУсловияК + ") КАК ХозрасчетныйОстаткиК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиС.Счет,
	|	ХозрасчетныйОстаткиС.Субконто1,
	|	ХозрасчетныйОстаткиС.СуммаОстаток,
	|	ХозрасчетныйОстаткиС.КоличествоОстаток
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, , &ПорядокСубконтоС, Организация В (&Организация) " 
		+ ТекстУсловияС + ") КАК ХозрасчетныйОстаткиС
	|;
	|";
	
	Если НЕ ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(ОтветственноеЛицо) Тогда
		ТекстЗапросаИнвентаризация = ТекстЗапросаИнвентаризация + "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток
		|ПОМЕСТИТЬ ХозрасчетныйОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&КонецПериода,
		|				,
		|				&ПорядокСубконтоМОЛ,
		|				Организация В (&Организация)
		|					И Субконто2 В (&МОЛ)) КАК ХозрасчетныйОстатки
		|;
		|";
	КонецЕсли;
	
	ТекстЗапросаИнвентаризация = ТекстЗапросаИнвентаризация + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиС.СуммаОстаток), 0) КАК СуммаВсего,
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиС.КоличествоОстаток), 0) КАК КоличествоВсего,
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиК.КоличествоОстаток), 0) КАК Количество,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.СчетУчета КАК СчетУчета
	|ИЗ
	|	ВложенныйЗапрос КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиК КАК ХозрасчетныйОстаткиК
	|		ПО (ХозрасчетныйОстаткиК.Субконто1 = ВложенныйЗапрос.Номенклатура)
	|			И (ХозрасчетныйОстаткиК.Счет = ВложенныйЗапрос.СчетУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиС КАК ХозрасчетныйОстаткиС
	|		ПО (ХозрасчетныйОстаткиС.Субконто1 = ВложенныйЗапрос.Номенклатура)
	|			И (ХозрасчетныйОстаткиС.Счет = ВложенныйЗапрос.СчетУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.СчетУчета
	|";
	
	Если НЕ ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(ОтветственноеЛицо) Тогда
		ТекстЗапросаИнвентаризация = ТекстЗапросаИнвентаризация + "
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.СуммаОстаток), 0) КАК СуммаВсего,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.КоличествоОстаток), 0) КАК КоличествоВсего,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.КоличествоОстаток), 0) КАК Количество,
		|	ВложенныйЗапрос2.НомерСтроки,
		|	ВложенныйЗапрос2.Номенклатура,
		|	ВложенныйЗапрос2.СчетУчета
		|ИЗ
		|	ВложенныйЗапрос2 КАК ВложенныйЗапрос2
		|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
		|		ПО (ХозрасчетныйОстатки.Субконто1 = ВложенныйЗапрос2.Номенклатура)
		|			И (ХозрасчетныйОстатки.Счет = ВложенныйЗапрос2.СчетУчета)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос2.НомерСтроки,
		|	ВложенныйЗапрос2.Номенклатура,
		|	ВложенныйЗапрос2.СчетУчета
		|";
	КонецЕсли;
	
	ТекстЗапросаИнвентаризация = ТекстЗапросаИнвентаризация + "
	|
	|УПОРЯДОЧИТЬ ПО
	|   НомерСтроки";
	
	Запрос.Текст = ТекстЗапросаИнвентаризация;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();	
	ТаблицаЗапроса.Свернуть("НомерСтроки", "СуммаВсего, КоличествоВсего, Количество");
	
	Для каждого СтрокаТабличнойЧасти ИЗ Товары Цикл

		СтрокаЗапроса = ТаблицаЗапроса.Найти(СтрокаТабличнойЧасти.НомерСтроки, "НомерСтроки");
		
		Если НЕ ЗначениеЗаполнено(СтрокаЗапроса) Тогда
			СтрокаТабличнойЧасти.КоличествоУчет = 0;
			СтрокаТабличнойЧасти.СуммаУчет      = 0;
			Продолжить;
		КонецЕсли;
		
		Если СтрокаЗапроса.Количество <= 0 Тогда
			СтрокаТабличнойЧасти.КоличествоУчет = 0;
			СтрокаТабличнойЧасти.СуммаУчет      = 0;
			Продолжить;
		КонецЕсли;

		СтрокаТабличнойЧасти.КоличествоУчет = СтрокаЗапроса.Количество;
		
		Цена = ?(СтрокаЗапроса.КоличествоВсего = 0, 0, СтрокаЗапроса.СуммаВсего / СтрокаЗапроса.КоличествоВсего);
		
		СтрокаТабличнойЧасти.СуммаУчет = Цена * СтрокаЗапроса.Количество;
		СтрокаТабличнойЧасти.Цена      = Цена;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);

	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения, Истина);

	Если ЗначениеЗаполнено(Склад) Тогда
		ОтветственноеЛицо = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Склад, Дата);
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата 		  = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ТипСклада");
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУчет");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Количество");
	
	Для каждого Строка Из Товары Цикл
		
		Префикс = "Товары[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		ИмяСписка = НСтр("ru = 'Товары'");
		
		Если Строка.Количество = 0 И Строка.КоличествоУчет = 0 Тогда
			
			ИмяПоля = НСтр("ru = 'Количество'");
			Поле = Префикс + "Количество";
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", 
				ИмяПоля, Строка.НомерСтроки, ИмяСписка, ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
			ИмяПоля = НСтр("ru = 'Количество учетное'");
			Поле = Префикс + "КоличествоУчет";
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", 
				ИмяПоля, Строка.НомерСтроки, ИмяСписка, ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
		КонецЕсли;
	
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры

#КонецЕсли
