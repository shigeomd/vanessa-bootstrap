#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.Ссылка.Дата КАК ДатаОснования,
	|	Реквизиты.Ссылка.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.Ссылка.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.Ссылка.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Ссылка.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Ссылка.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Ссылка.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Ссылка.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Ссылка.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Ссылка.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Ссылка.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Ссылка.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Ссылка.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Ссылка.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Ссылка.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Ссылка.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	Реквизиты.Ссылка.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.Ссылка.Исполнитель КАК Исполнитель,
	|	Реквизиты.Ссылка.ИсполнительПоПриказу КАК ИсполнительПоПриказу,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки
	|ИЗ
	|	Документ.ОказаниеУслуг.Контрагенты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|	И Реквизиты.СчетФактура = &СчетФактура
	|	И Реквизиты.Контрагент = &Контрагент
	|	И Реквизиты.ДоговорКонтрагента = &ДоговорКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Реквизиты.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Ссылка.Номенклатура КАК Товар,
	|	ТаблицаУслуги.Ссылка.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаУслуги.Ссылка.Номенклатура.Артикул КАК ТоварАртикул,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаУслуги.Ссылка.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.Ссылка.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		ИНАЧЕ ТаблицаУслуги.Ссылка.Номенклатура.Наименование
	|	КОНЕЦ КАК ТоварНаименование,
	|	NULL КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	NULL КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	ТаблицаУслуги.Ссылка.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.Цена КАК Цена,
	|	ТаблицаУслуги.Сумма КАК Сумма,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДС,
	|	ТаблицаУслуги.Ссылка.СтавкаНДС КАК СтавкаНДС,
	|	ИСТИНА КАК ЭтоУслуга,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ТаблицаУслуги.Сумма КАК ВсегоРуб,
	|	ТаблицаУслуги.СуммаНДС КАК НДСРуб,
	|	ТаблицаУслуги.Сумма - ТаблицаУслуги.СуммаНДС КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОказаниеУслуг.Контрагенты КАК ТаблицаУслуги
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОснование
	|	И ТаблицаУслуги.СчетФактура = &СчетФактура
	|	И ТаблицаУслуги.Контрагент = &Контрагент
	|	И ТаблицаУслуги.ДоговорКонтрагента = &ДоговорКонтрагента";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	ОказаниеУслуг.Ссылка.Дата КАК Дата,
	|	ОказаниеУслуг.Ссылка.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК Руководитель,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ОказаниеУслуг.Ссылка КАК ДокументОснование,
	|	ОказаниеУслуг.НомерСтроки КАК НомерСтроки,
	|	ОказаниеУслуг.Контрагент,
	|	ОказаниеУслуг.ДоговорКонтрагента,
	|	"""" КАК КППСчетаФактуры,
	|	ОказаниеУслуг.Ссылка.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслуг
	|ГДЕ
	|	ОказаниеУслуг.Ссылка В(&МассивОбъектов)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СведенияОНоменклатуре = Неопределено) Экспорт
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		ДанныеОбъекта = Новый Структура("Дата, Организация, ДеятельностьНаПатенте, Реализация");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
		ДанныеОбъекта.Реализация = Истина;
		
		СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(Объект.Номенклатура, ДанныеОбъекта);
	КонецЕсли;
	
	СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетДоходов) Тогда
		Объект.СчетДоходов = СчетаУчета.СчетДоходов;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСПродажи) Тогда
		Объект.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("Субконто")
		И ЗначениеЗаполнено(СведенияОНоменклатуре.Субконто) Тогда
		
		Объект.Субконто = СведенияОНоменклатуре.Субконто;
		
	ИначеЕсли СведенияОНоменклатуре.Свойство("ВидСубконтоТипЗначения")
		И ЗначениеЗаполнено(СведенияОНоменклатуре.ВидСубконтоТипЗначения) Тогда
		
		Объект.Субконто =
			СведенияОНоменклатуре.ВидСубконтоТипЗначения.ПривестиЗначение(Объект.Субконто);
		
	Иначе
		Объект.Субконто = Неопределено;
	КонецЕсли;
	
	Если СчетаУчета.СчетУчетаНДСПродажи <> Неопределено Тогда
		Объект.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетРасходов) Тогда
		Объект.СчетРасходов = СчетаУчета.СчетРасходов;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти);
	КонецЦикла;

КонецПроцедуры

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция ПолучитьДокументыСчетФактураНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОказаниеУслуг.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслуг
	|ГДЕ
	|	ОказаниеУслуг.Ссылка В(&МассивДокументов)
	|	И ОказаниеУслуг.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОказаниеУслуг.Ссылка,
	|	ОказаниеУслуг.Дата,
	|	ОказаниеУслуг.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ОказаниеУслуг КАК ОказаниеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ОказаниеУслуг.Ссылка)
	|ГДЕ
	|	ОказаниеУслуг.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ЕстьНДС
			И (НЕ УчетнаяПолитика.ПлательщикНДС(Выборка.Организация, Выборка.Дата) 
			ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Выборка.Дата) = 3 
			И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Выборка.Организация, Выборка.Дата)) Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти = "") Экспорт

	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
		Объект.Организация, СтрокаТабличнойЧасти.Контрагент, СтрокаТабличнойЧасти.ДоговорКонтрагента);
	
	СтрокаТабличнойЧасти.СчетУчетаРасчетовСКонтрагентом	= СчетаУчета.СчетРасчетовПокупателя;
	СтрокаТабличнойЧасти.СчетУчетаРасчетовПоАвансам		= СчетаУчета.СчетАвансовПокупателя;
	
КонецПроцедуры

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	
	Возврат МассивРеквизитов;
	
КонецФункции

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СчетДоходов,
	|	Реквизиты.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте
	|ИЗ
	|	Документ.ОказаниеУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПрименяетсяУСН			= УчетнаяПолитика.ПрименяетсяУСН(Выборка.Организация, Выборка.Период);
	ПрименяетсяУСНПатент	= УчетнаяПолитика.ПрименяетсяУСНПатент(Выборка.Организация, Выборка.Период);
	
	ЭтоДоходыЕНВД			= БухгалтерскийУчетВызовСервераПовтИсп.СчетОтноситсяКДеятельностиЕНВД(Выборка.СчетДоходов);
	
	Субсчета91	= БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ПрименяетсяУСН",			ПрименяетсяУСН);
	Запрос.УстановитьПараметр("ПрименяетсяУСНПатент",	ПрименяетсяУСНПатент);
	Запрос.УстановитьПараметр("ДеятельностьНаПатенте",	Выборка.ДеятельностьНаПатенте);
	Запрос.УстановитьПараметр("ЭтоДоходыЕНВД",			ЭтоДоходыЕНВД);
	Запрос.УстановитьПараметр("Субсчета91",				Субсчета91);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст	= ТекстЗапросаТаблицыДокумента(НомераТаблиц)
					+ ТекстЗапросаЗачетАвансов(НомераТаблиц)
					+ ТекстЗапросаРеализация(НомераТаблиц)
					+ ТекстЗапросаРеализацияУслуг(НомераТаблиц);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТаблицаУслуги.Ссылка.Номенклатура КАК Номенклатура,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.Сумма + ВЫБОР
	|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ТаблицаУслуги.Сумма + ВЫБОР
	|			КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаУслуги.СуммаНДС
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.Сумма + ВЫБОР
	|		КОГДА ТаблицаУслуги.Ссылка.СуммаВключаетНДС
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
	|	ТаблицаУслуги.Ссылка.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаУслуги.Ссылка.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаУслуги.Ссылка.СчетДоходов КАК СчетДоходов,
	|	ТаблицаУслуги.Ссылка.Субконто КАК Субконто,
	|	ВЫБОР
	|		КОГДА &ЭтоДоходыЕНВД
	|				И НЕ &ДеятельностьНаПатенте
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	&ДеятельностьНаПатенте КАК ДоходПатент,
	|	ТаблицаУслуги.Ссылка.СчетРасходов,
	|	ТаблицаУслуги.Контрагент КАК Контрагент,
	|	ТаблицаУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаУслуги.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	ТаблицаУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаУслуги.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ТаблицаУслуги.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ТаблицаУслуги.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ТаблицаУслуги.СчетФактура КАК СчетФактура,
	|	ТаблицаУслуги.ВыданСФ КАК ВыданСФ,
	|	ТаблицаУслуги.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	Документ.ОказаниеУслуг.Контрагенты КАК ТаблицаУслуги
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц)

	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""ОказаниеУслуг"" КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
	|	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
	|	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Документ.ОказаниеУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаУслуги.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаУслуги.Ссылка КАК ДокументРасчетов,
	|	ТаблицаУслуги.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	ТаблицаУслуги.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	ТаблицаУслуги.Контрагент КАК Контрагент,
	|	ТаблицаУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаУслуги.ВидДоговора КАК ВидДоговора,
	|	ТаблицаУслуги.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаУслуги.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ТаблицаУслуги.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ТаблицаУслуги.РасчетыВВалюте КАК РасчетыВВалюте,
	|	ТаблицаУслуги.ПодразделениеОрганизации КАК Подразделение,
	|	СУММА(ТаблицаУслуги.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаУслуги.СуммаРуб) КАК СуммаРуб,
	|	СУММА(0) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаУслуги.ДоходЕНВД
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаУслуги.ДоходПатент
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВзаиморасчетовПатент
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУслуги.Ссылка,
	|	ТаблицаУслуги.СчетУчетаРасчетовСКонтрагентом,
	|	ТаблицаУслуги.СчетУчетаРасчетовПоАвансам,
	|	ТаблицаУслуги.Контрагент,
	|	ТаблицаУслуги.ДоговорКонтрагента,
	|	ТаблицаУслуги.ВидДоговора,
	|	ТаблицаУслуги.ВалютаВзаиморасчетов,
	|	ТаблицаУслуги.РасчетыВУсловныхЕдиницах,
	|	ТаблицаУслуги.УчетАгентскогоНДС,
	|	ТаблицаУслуги.РасчетыВВалюте,
	|	ТаблицаУслуги.ПодразделениеОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРеализация(НомераТаблиц)

	НомераТаблиц.Вставить("РеализацияРеквизиты",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеализацияТаблицаДокумента",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СтавкаНДС КАК СтавкаНДС,
	|	Реквизиты.СчетДоходов КАК СчетДоходов,
	|	Реквизиты.Субконто КАК Субконто,
	|	Реквизиты.СчетРасходов КАК СчетРасходов,
	|	Реквизиты.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации
	|ИЗ
	|	Документ.ОказаниеУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаБУ,
	|	ТаблицаУслуги.СуммаРуб КАК СуммаНУ,
	|	Реквизиты.СчетРасходов КАК СчетУчета,
	|	Реквизиты.СчетДоходов КАК СчетДоходов,
	|	Реквизиты.Субконто КАК Субконто,
	|	Реквизиты.СтавкаНДС КАК СтавкаНДС,
	|	Реквизиты.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаУслуги.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ТаблицаУслуги.Контрагент КАК КорСубконто1,
	|	ТаблицаУслуги.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	ТаблицаУслуги.Контрагент КАК Контрагент,
	|	ТаблицаУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаУслуги.СчетФактура КАК СчетФактура,
	|	ТаблицаУслуги.ВыданСФ КАК ВыданСФ,
	|	ТаблицаУслуги.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаУслуги.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ИСТИНА КАК ЭтоУслуга,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента
	|ИЗ
	|	Документ.ОказаниеУслуг КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаУслуги КАК ТаблицаУслуги
	|		ПО Реквизиты.Ссылка = ТаблицаУслуги.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРеализацияУслуг(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеализацияУслуг", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
	|	ТаблицаУслуги.Субконто КАК НоменклатурнаяГруппа,
	|	СУММА(ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб) КАК Сумма
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|ГДЕ
	|	НЕ ТаблицаУслуги.СчетРасходов В (&Субсчета91)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУслуги.СчетРасходов,
	|	ТаблицаУслуги.Субконто";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	ТаблицаЗначений.ЗаполнитьЗначения("Реализация услуг", "Содержание");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Акты об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акты";
	КомандаПечати.Представление = НСтр("ru = 'Акты об оказании услуг'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Счета-фактуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счета-фактуры'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Оказание услуг""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акты") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акты", "Акты об оказании услуг",
			ПечатьАктовОбОказанииУслуг(МассивОбъектов, ОбъектыПечати),,"Документ.ОказаниеУслуг.ПФ_MXL_Акт");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
		МассивСчетовФактур = ПолучитьМассивСчетовФактурОбъктов(МассивОбъектов);
		Документы.СчетФактураВыданный.Печать(МассивСчетовФактур, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

// Функция формирует табличный документ с печатными формами актов об обказании услуг
// для каждой строки табличной части
//
// Возвращаемое значение:
//  Табличный документ - печатные формы актов
//
Функция ПечатьАктовОбОказанииУслуг(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыАктаУслуги();
	
	Шапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОказаниеУслуг_Акты";
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОказаниеУслуг.ПФ_MXL_Акт");
	
	Пока Шапка.Следующий() Цикл
		
		СведенияОбОрганизации	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеПоставщика	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		
		ОтветственныеЛицаОрганизации = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата, Шапка.ПодразделениеОрганизации);
		
		Если ЗначениеЗаполнено(Шапка.Исполнитель) Тогда
			Если Шапка.Исполнитель = ОтветственныеЛицаОрганизации.Руководитель Тогда 
				ЗаместительПоПриказу = ОтветственныеЛицаОрганизации.РуководительПредставление;
				ДолжностьИНазваниеОрганизации = "" + ОтветственныеЛицаОрганизации.РуководительДолжностьПредставление;
				Если ЗначениеЗаполнено(ПредставлениеПоставщика) И ЗначениеЗаполнено(ДолжностьИНазваниеОрганизации) Тогда
					ДолжностьИНазваниеОрганизации = ДолжностьИНазваниеОрганизации + ", " + ПредставлениеПоставщика;
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда
					ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
				КонецЕсли;
			Иначе
				ДанныеОтветственногоЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.Исполнитель, Шапка.Дата);
				ЗаместительПоПриказу = "" + ДанныеОтветственногоЛица.Представление;
				Если ЗначениеЗаполнено(Шапка.ИсполнительПоПриказу) И ЗначениеЗаполнено(ЗаместительПоПриказу) Тогда 
					ЗаместительПоПриказу = ЗаместительПоПриказу + ", " + Шапка.ИсполнительПоПриказу;
				ИначеЕсли ЗначениеЗаполнено(Шапка.ИсполнительПоПриказу) Тогда
					ЗаместительПоПриказу =  "" + Шапка.ИсполнительПоПриказу;
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеОтветственногоЛица.Должность) И ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда
					ДолжностьИНазваниеОрганизации = "" + ДанныеОтветственногоЛица.Должность + ", " + ПредставлениеПоставщика;
				ИначеЕсли ЗначениеЗаполнено(ДанныеОтветственногоЛица.Должность) Тогда 
					ДолжностьИНазваниеОрганизации = "" + ДанныеОтветственногоЛица.Должность;
				Иначе
					ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ЗаместительПоПриказу = ОтветственныеЛицаОрганизации.РуководительПредставление;
			ДолжностьИНазваниеОрганизации = "" + ОтветственныеЛицаОрганизации.РуководительДолжностьПредставление;
			Если ЗначениеЗаполнено(ПредставлениеПоставщика) И ЗначениеЗаполнено(ДолжностьИНазваниеОрганизации) Тогда
				ДолжностьИНазваниеОрганизации = ДолжностьИНазваниеОрганизации + ", " + ПредставлениеПоставщика;
			ИначеЕсли ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда
				ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
			КонецЕсли;
		КонецЕсли;
		
		Выборка = Шапка.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Акт");
			
			ДанныеПечатиАкт = Новый Структура;
			ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Акт № %1/%2 от %3'"),
				ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Ложь), Выборка.НомерСтроки, Формат(Шапка.Дата, "ДЛФ=DD"));
				
			ДанныеПечатиАкт.Вставить("ТекстЗаголовка",					ТекстЗаголовка);
			ДанныеПечатиАкт.Вставить("ДолжностьИНазваниеОрганизации",	ДолжностьИНазваниеОрганизации);
			ДанныеПечатиАкт.Вставить("ЗаместительПоПриказу",			ЗаместительПоПриказу);
			ДанныеПечатиАкт.Вставить("ПредставлениеПоставщика",			ПредставлениеПоставщика);
			ДанныеПечатиАкт.Вставить("Поставщик",						Шапка.Поставщик);
			
			СведенияОКонтрагенте	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Получатель, Шапка.Дата);
			ПредставлениеПолучателя	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
			ДанныеПечатиАкт.Вставить("ПредставлениеПолучателя",	ПредставлениеПолучателя);
			ДанныеПечатиАкт.Вставить("Получатель",				Выборка.Получатель);
			
			// Вывести табличную часть
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ДанныеПечатиАкт.Вставить("НомерСтроки", 1);
			ДанныеПечатиАкт.Вставить("Товар", СокрЛП(Выборка.Товар));
			
			Сумма		= ?(ЗначениеЗаполнено(Выборка.Сумма), Выборка.Сумма, 0);
			СуммаНДС	= ?(ЗначениеЗаполнено(Выборка.СуммаНДС), Выборка.СуммаНДС, 0);
			
			ДанныеПечатиАкт.Вставить("Всего", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма));
			
			Если СуммаНДС <> 0 Тогда
				ВсегоНДС	= ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС);
				НДС			= ?(Шапка.СуммаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'"));
			Иначе
				ВсегоНДС	= НСтр("ru='-'");
				НДС			= НСтр("ru = 'Без налога (НДС)'");
			КонецЕсли;
			ДанныеПечатиАкт.Вставить("ВсегоНДС", ВсегоНДС);
			ДанныеПечатиАкт.Вставить("НДС", НДС);
			
			СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
			ИтоговаяСтрока	= НСтр("ru = 'Всего оказано услуг на сумму '") +
				ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, ВалютаРегламентированногоУчета);
			СуммаПрописью	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи,
				ВалютаРегламентированногоУчета);
				
			ДанныеПечатиАкт.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
			ДанныеПечатиАкт.Вставить("СуммаПрописью", СуммаПрописью);
			ОбластьМакета.Параметры.Заполнить(ДанныеПечатиАкт);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьАктовОбОказанииУслуг()

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
//
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыАктаУслуги()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументОказаниеУслуг.Ссылка КАК Ссылка,
	|	ДокументОказаниеУслуг.Номер КАК Номер,
	|	ДокументОказаниеУслуг.Дата КАК Дата,
	|	ДокументОказаниеУслуг.Организация КАК Организация,
	|	ДокументОказаниеУслуг.Организация КАК Поставщик,
	|	ДокументОказаниеУслуг.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДокументОказаниеУслуг.Исполнитель КАК Исполнитель,
	|	ДокументОказаниеУслуг.ИсполнительПоПриказу КАК ИсполнительПоПриказу,
	|	ДокументОказаниеУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДокументОказаниеУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ДокументОказаниеУслуг.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ДокументОказаниеУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ВЫРАЗИТЬ(ДокументОказаниеУслуг.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		ИНАЧЕ ДокументОказаниеУслуг.Номенклатура.Наименование
	|	КОНЕЦ КАК Товар,
	|	ОказаниеУслуг.Количество КАК Количество,
	|	ДокументОказаниеУслуг.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОказаниеУслуг.НомерСтроки КАК НомерСтроки,
	|	ОказаниеУслуг.Контрагент КАК Получатель,
	|	ОказаниеУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОказаниеУслуг.Цена КАК Цена,
	|	ОказаниеУслуг.Сумма КАК Сумма,
	|	ОказаниеУслуг.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.ОказаниеУслуг КАК ДокументОказаниеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслуг
	|		ПО ДокументОказаниеУслуг.Ссылка = ОказаниеУслуг.Ссылка
	|ГДЕ
	|	ДокументОказаниеУслуг.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОказаниеУслуг.Дата,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьМассивСчетовФактурОбъктов(МассивОбъектов)
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОказаниеУслугКонтрагенты.СчетФактура
	|ИЗ
	|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
	|ГДЕ
	|	ОказаниеУслугКонтрагенты.Ссылка В (&МассивОбъектов)
	|	И ОказаниеУслугКонтрагенты.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)";
	Запрос.Текст = ТекстЗапроса;
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура"));
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Номенклатура");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли