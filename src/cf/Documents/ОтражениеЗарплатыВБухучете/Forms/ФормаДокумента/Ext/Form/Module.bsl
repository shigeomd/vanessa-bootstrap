
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтражениеЗарплатыВБухучете.УстановитьУсловноеОформлениеДокументОтражениеВУчете(ЭтаФорма);
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("ПредыдущийМесяц, Организация, Ответственный", 
			"Объект.ПериодРегистрации",
			"Объект.Организация",
			"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ОтражениеЗарплатыВБухучете.ЗаполнитьРегистрациюВНалоговомОрганеВТабличнойЧастиДокументОтражениеВУчете(Объект.Организация, Объект.НачисленныйНДФЛ);
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОтражениеЗарплатыВБухучете.ЗаполнитьРегистрациюВНалоговомОрганеВТабличнойЧастиДокументОтражениеВУчете(Объект.Организация, Объект.НачисленныйНДФЛ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОтражениеЗарплатыВБухучете.УстановитьВидимостьКолонокКППКодНалоговогоОргана(ЭтаФорма, Объект.Организация);
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаОтраженаВБухучетеПриИзменении(Элемент)
	
	Если Объект.ЗарплатаОтраженаВБухучете Тогда
		Объект.Бухгалтер = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Объект.Бухгалтер = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Модифицированность);
	ОбработатьИзменениеМесяцНачисленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПериодРегистрацииНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеВыбрано Тогда
		ОбработатьИзменениеМесяцНачисленияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Направление, Модифицированность);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцНачисленияПриИзменении", 0.3, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцНачисленияПриИзменении()

	ОбработатьИзменениеМесяцНачисленияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеМесяцНачисленияНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	УчетСтраховыхВзносов.УстановитьВидимостьКолонокТаблицыСтраховыхВзносов(ЭтаФорма, Объект.ПериодРегистрации, "НачисленнаяЗарплатаИВзносы");
	ОтражениеЗарплатыВБухучете.УстановитьВидимостьКолонокКодовТерриторийДокументОтражениеВУчете(ЭтаФорма, Объект.ПериодРегистрации, "НачисленныйНДФЛ");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыНачисленныйндфл

&НаКлиенте
Процедура НачисленныйНДФЛРегистрацияВНалоговомОрганеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НачисленныйНДФЛ.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.РегистрацияВНалоговомОргане) Тогда
		ТекущиеДанные.КодПоОКАТО = Неопределено;
		ТекущиеДанные.КодПоОКТМО = Неопределено;
		ТекущиеДанные.КПП = Неопределено;
		ТекущиеДанные.КодНалоговогоОргана = Неопределено;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, СведенияОРегистрацииВНалоговомОргане(ТекущиеДанные.РегистрацияВНалоговомОргане), "КодПоОКАТО,КодПоОКТМО,КПП,КодНалоговогоОргана");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СведенияОРегистрацииВНалоговомОргане(РегистрацияВНалоговомОргане)
	СведенияОРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, "КодПоОКАТО,КодПоОКТМО,КПП,Код");
	СведенияОРегистрации.Вставить("КодНалоговогоОргана", СведенияОРегистрации.Код);
	Возврат СведенияОРегистрации;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если НЕ ЗарплатаКадрыКлиент.ОрганизацияЗаполнена(Объект) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Объект.НачисленнаяЗарплатаИВзносы.Количество() > 0 
		Или Объект.НачисленныйНДФЛ.Количество() > 0 
		Или Объект.УдержаннаяЗарплата.Количество() > 0 
		Или Объект.ВыплатаОтпусковЗаСчетРезерва.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьЗавершение", ЭтотОбъект);
		ТекстВопроса = Нстр("ru = 'Табличные части документа будут очищены. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьЗавершение(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
	
	УстановитьФункциональныеОпцииФормы();
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОбменЗарплата3Бухгалтерия3") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ОбменДаннымиЗарплата3Бухгалтерия3");
		ОбменИспользуется = Модуль.ОбменИспользуется(Объект.Организация);
	КонецЕсли;
	
	Если ОбменИспользуется Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КонфигурацииЗарплатаКадры") Тогда
			ТолькоПросмотр = Объект.ЗарплатаОтраженаВБухучете;
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗарплатаОтраженаВБухучете", "ТолькоПросмотр", Истина);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Бухгалтер", "ТолькоПросмотр", Истина);
		Иначе
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Заполнить", "Видимость", Ложь);
			
			ПользователюРазрешеноФормированиеПроводок = Пользователи.РолиДоступны("ОтражениеЗарплатыВБухгалтерскомУчете");
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗарплатаОтраженаВБухучете", "ТолькоПросмотр", Не ПользователюРазрешеноФормированиеПроводок);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Бухгалтер", "ТолькоПросмотр", Не ПользователюРазрешеноФормированиеПроводок);
			
			Если НЕ ПользователюРазрешеноФормированиеПроводок Тогда
				ТолькоПросмотр = Объект.ЗарплатаОтраженаВБухучете;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УчетСтраховыхВзносов.УстановитьВидимостьКолонокТаблицыСтраховыхВзносов(ЭтаФорма, Объект.ПериодРегистрации, "НачисленнаяЗарплатаИВзносы");
	ОтражениеЗарплатыВБухучете.УстановитьВидимостьКолонокКодовТерриторийДокументОтражениеВУчете(ЭтаФорма, Объект.ПериодРегистрации, "НачисленныйНДФЛ");
	ОтражениеЗарплатыВБухучете.УстановитьВидимостьКолонокКППКодНалоговогоОргана(ЭтаФорма, Объект.Организация);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, НачалоДня(Объект.ПериодРегистрации));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	// Начисленная зарплата и взносы.
	Объект.НачисленнаяЗарплатаИВзносы.Очистить();
	Объект.НачисленныйНДФЛ.Очистить();
	Объект.УдержаннаяЗарплата.Очистить();
	Объект.ВыплатаОтпусковЗаСчетРезерва.Очистить();

	// Получим структуру с отражением в бухучете зарплаты, удержаний, взносов.
	РезультатыОтраженияЗарплаты = ОтражениеЗарплатыВБухучете.ДанныеДляОтраженияЗарплатыВБухучете(Объект.ПериодРегистрации, Объект.Организация);
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		
		МодульРезервОтпусков = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Объект.Организация, Объект.ПериодРегистрации);
		
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			
			КолонкиСуммирования = Неопределено;
			ОтражениеЗарплатыВБухучете.НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы(КолонкиСуммирования);
			НачисленныеОтпуска = ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска();
			МодульРезервОтпусков.СписатьРасходыПоОплатеОтпускаЗаСчетОценочныхОбязательств(Объект.Организация, Объект.ПериодРегистрации, Объект.Ссылка, РезультатыОтраженияЗарплаты.НачисленнаяЗарплатаИВзносы, НачисленныеОтпуска, КолонкиСуммирования);
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НачисленныеОтпуска, Объект.ВыплатаОтпусковЗаСчетРезерва);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОтражениеЗарплатыВБухучете.СвернутьДанныеДляОтраженияЗарплатыВБухучете(РезультатыОтраженияЗарплаты, "Сотрудник,Начисление");
	
	// Перенесем данные в табличные части документа.
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатыОтраженияЗарплаты.НачисленнаяЗарплатаИВзносы, Объект.НачисленнаяЗарплатаИВзносы);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатыОтраженияЗарплаты.НачисленныйНДФЛ, Объект.НачисленныйНДФЛ);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РезультатыОтраженияЗарплаты.УдержаннаяЗарплата, Объект.УдержаннаяЗарплата);
	
	ОтражениеЗарплатыВБухучете.ЗаполнитьРегистрациюВНалоговомОрганеВТабличнойЧастиДокументОтражениеВУчете(Объект.Организация, Объект.НачисленныйНДФЛ);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
