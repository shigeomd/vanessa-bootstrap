#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем ВнешниеДанные Экспорт;

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "Сотрудник");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения, , Истина);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Увольнение") Тогда	
		СтрокаДанныеУвольнения = "Организация, ФизическоеЛицо, ДатаУвольнения";
		ДанныеУвольнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтрокаДанныеУвольнения);
		Организация = ДанныеУвольнения["Организация"];
		Сотрудник = ДанныеУвольнения["ФизическоеЛицо"];
		НалоговыйПериод = Год(ДанныеУвольнения["ДатаУвольнения"]);
		СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно;
		Дата = ?(ЗначениеЗаполнено(ДанныеУвольнения["ДатаУвольнения"]), КонецДня(ДанныеУвольнения["ДатаУвольнения"]) + 1, ТекущаяДатаСеанса());
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "РегистрацияВНалоговомОргане");
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "КодИФНС");
	КонецЕсли;	
	
	Если ВнешниеДанные = Истина Тогда
		Если Не ЗначениеЗаполнено(СпособФормирования) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "СведенияОДоходах.МесяцНалоговогоПериода");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "НалоговыйПериод");
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "Организация");
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "РегистрацияВНалоговомОргане");
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "КодИФНС");		
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "СпособФормирования");
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "Дата");
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "Номер");
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДанныеДокумента(Отказ) Экспорт 	
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);	
		СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
		УчетНДФЛ.СправкиНДФЛПроверитьДанныеНалоговогоАгента(ЭтотОбъект, СтруктураДанныхНА, СпособФормирования, Отказ);
	КонецЕсли;	
	
	ДанныеСотрудникаДляПроверки = ПолучитьДанныеСотрудникДляПроверки();
	Документы.СправкаНДФЛ.ПроверитьДанныеФизическогоЛица(
		Ссылка,
		ДанныеСотрудникаДляПроверки,
		Дата,
		"",,
		Отказ);
	
	Доходы = СведенияОДоходах.Выгрузить();
	Вычеты = СведенияОВычетах.Выгрузить();
		
	Сводно = (СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.Сводно);

	НачалоСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Справка 2-НДФЛ по %1:'"), ДанныеСотрудникаДляПроверки.СотрудникНаименование);
	
	УчетНДФЛ.СправкиНДФЛПроверитьДанныеОДоходахНалогахВычетах(
		Ссылка,
		Дата,
		ЭтотОбъект,
		"",
		Доходы,
		Вычеты,
		СоответствиеСтавокДоходов,
		НачалоСообщенияОбОшибке,
		Отказ,
		Сводно);
		
КонецПроцедуры

Функция ПолучитьДанныеСотрудникДляПроверки()
	ДанныеСотрудника = Новый Структура("Сотрудник, ИНН, Фамилия, Имя, Отчество, Адрес, ВидДокумента, СерияДокумента, НомерДокумента,
									   |Гражданство, ДатаРождения, СтатусНалогоплательщика, АдресЗарубежом, СотрудникНаименование");
									   
	ЗаполнитьЗначенияСвойств(ДанныеСотрудника, ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ДанныеСотрудника.Сотрудник) Тогда
		ДанныеСотрудника.СотрудникНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСотрудника.Сотрудник, "Наименование");
	Иначе
		ДанныеСотрудника.СотрудникНаименование = "";
	КонецЕсли;	
	
	Возврат ДанныеСотрудника;
КонецФункции	

#КонецОбласти

#КонецЕсли
