#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДанныеФизическогоЛица(Ссылка, ПроверяемыеДанные, ДатаДокумента, ПутьКДаннымФизическогоЛица, НомерСтроки = Неопределено, Отказ = Ложь) Экспорт
	
	Ошибки = Новый Соответствие;
	
	ПравилаПроверки = ПравилаПроверкиДанныхФизическогоЛица(ПроверяемыеДанные.Гражданство, ДатаДокумента);
	
	ДанныеФизическогоЛицаДляПроверки = ДанныеФизическогоЛицаДляПроверки(ПроверяемыеДанные);
	
	ФизическиеЛицаЗарплатаКадры.ПроверитьДанныеФизическогоЛица(
		ДанныеФизическогоЛицаДляПроверки,
		ПравилаПроверки,
		Ошибки);
				
	Если НомерСтроки <> Неопределено Тогда
		ПутьКДанным = ПутьКДаннымФизическогоЛица + "[" + Формат(НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
	ИначеЕсли Не ПустаяСтрока(ПутьКДаннымФизическогоЛица) Тогда
		ПутьКДанным = ПутьКДаннымФизическогоЛица + ".";	
	Иначе
		ПутьКДанным = ПутьКДаннымФизическогоЛица;	
	КонецЕсли;		
	
	Для Каждого ОшибкиПоФизЛицу Из Ошибки Цикл
		Для Каждого ОшибкаДанныхФизическогоЛица Из ОшибкиПоФизЛицу.Значение Цикл
			Если ОшибкаДанныхФизическогоЛица.ПолеФормы <> "КемВыдан"
				И ОшибкаДанныхФизическогоЛица.ПолеФормы <> "ДатаВыдачи" Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ОшибкаДанныхФизическогоЛица.ТекстОшибки,
					Ссылка,
					ПутьКДанным + ОшибкаДанныхФизическогоЛица.ПолеФормы,,
					Отказ);
			КонецЕсли;	
		КонецЦикла;		
	КонецЦикла;	
	
	Если Не ЗначениеЗаполнено(ПроверяемыеДанные.СтатусНалогоплательщика) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Сотрудник %1: не заполнено поле ""Статус налогоплательщика""'"),
						ПроверяемыеДанные.СотрудникНаименование);
						
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Ссылка,
			ПутьКДанным + "СтатусНалогоплательщика",,
			Отказ);
					
	КонецЕсли;	
	
	Если ПроверяемыеДанные.Гражданство <> Справочники.СтраныМира.Россия
		И Не ЗначениеЗаполнено(ПроверяемыеДанные.Адрес)
		И Не ЗначениеЗаполнено(ПроверяемыеДанные.АдресЗаРубежом) Тогда
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Сотрудник %1: для физического лица нерезидента или иностранца должен быть заполнен ""Адрес зарубежом""'"),
						ПроверяемыеДанные.СотрудникНаименование);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Ссылка,
			ПутьКДанным + "АдресЗаРубежом",,
			Отказ);
	КонецЕсли;
		
КонецПроцедуры

Функция ПравилаПроверкиДанныхФизическогоЛица(Гражданство, ДатаДокумента)
	Правила = Новый Массив;
	
	ФизическиеЛицаЗарплатаКадры.ДобавитьПравилоПроверки(
		Правила,
		"ИНН",
		"ИНН",
		"ИНН",
		Ложь);
		
	ФизическиеЛицаЗарплатаКадры.ДобавитьПравилоПроверкиФИО(
		Правила,
		"Фамилия",
		"Имя",
		"Отчество",
		"Гражданство",
		"ФИО");
		
	ФизическиеЛицаЗарплатаКадры.ДобавитьПравилоПроверкиДатыРождения(
		Правила,
		"ДатаРождения",
		"Дата рождения",
		ДатаДокумента,
		Истина);

	АдресРФОбязателен =  Гражданство = Справочники.СтраныМира.Россия;
	
	ФизическиеЛицаЗарплатаКадры.ДобавитьПравилоПроверки(
		Правила,
		"Адрес",
		"Адрес",
		"Адрес РФ",
		АдресРФОбязателен);
		
	ФизическиеЛицаЗарплатаКадры.ДобавитьПравилоПроверкиУдостоверенияЛичности(
		Правила,
		"ВидДокумента",
		"СерияДокумента",
		"НомерДокумента",
		"ДатаВыдачи",
		"КемВыдан",
		"Документ удостоверяющий личность",
		Истина,
		Истина);
		
	Возврат Правила;	
				
КонецФункции	

Функция ДанныеФизическогоЛицаДляПроверки(ПроверяемыеДанные)
	ДанныеФизическогоЛицаДляПроверки = Новый Структура;
	ДанныеФизическогоЛицаДляПроверки.Вставить("ФизическоеЛицо", ПроверяемыеДанные.Сотрудник);
	ДанныеФизическогоЛицаДляПроверки.Вставить("Наименование", ПроверяемыеДанные.СотрудникНаименование);
	ДанныеФизическогоЛицаДляПроверки.Вставить("Фамилия");
	ДанныеФизическогоЛицаДляПроверки.Вставить("Имя");
	ДанныеФизическогоЛицаДляПроверки.Вставить("Отчество");
	ДанныеФизическогоЛицаДляПроверки.Вставить("ИНН");
	ДанныеФизическогоЛицаДляПроверки.Вставить("Адрес");
	ДанныеФизическогоЛицаДляПроверки.Вставить("ВидДокумента");
	ДанныеФизическогоЛицаДляПроверки.Вставить("СерияДокумента");
	ДанныеФизическогоЛицаДляПроверки.Вставить("НомерДокумента");
	ДанныеФизическогоЛицаДляПроверки.Вставить("Гражданство");
	ДанныеФизическогоЛицаДляПроверки.Вставить("ДатаРождения");
	ДанныеФизическогоЛицаДляПроверки.Вставить("АдресЗарубежом");
	ДанныеФизическогоЛицаДляПроверки.Вставить("ДатаВыдачи");
	ДанныеФизическогоЛицаДляПроверки.Вставить("КемВыдан");

	ЗаполнитьЗначенияСвойств(ДанныеФизическогоЛицаДляПроверки, ПроверяемыеДанные);

	Возврат  ДанныеФизическогоЛицаДляПроверки;
КонецФункции	

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка о доходах (2-НДФЛ)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Форма2НДФЛ";
	КомандаПечати.Представление = НСтр("ru = 'Справка о доходах (2-НДФЛ)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	Отказ = Ложь;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Форма2НДФЛ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Форма2НДФЛ", "Форма 2НДФЛ", СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов, ОбъектыПечати));	
	КонецЕсли;
КонецПроцедуры	

Функция ТаблицыДанныхДокументаДляПечати(Ссылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаНДФЛ.Ссылка,
	|	СправкаНДФЛ.ВерсияДанных,
	|	СправкаНДФЛ.ПометкаУдаления,
	|	СправкаНДФЛ.Номер,
	|	СправкаНДФЛ.Дата,
	|	СправкаНДФЛ.Проведен,
	|	СправкаНДФЛ.НалоговыйПериод,
	|	СправкаНДФЛ.Организация,
	|	СправкаНДФЛ.СправкуПодписал,
	|	СправкаНДФЛ.ДолжностьПодписавшегоЛица,
	|	СправкаНДФЛ.СпособФормирования,
	|	СправкаНДФЛ.Сотрудник,
	|	СправкаНДФЛ.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СправкаНДФЛ.ИНН,
	|	СправкаНДФЛ.Номер КАК НомерСправки,
	|	СправкаНДФЛ.РегистрацияВНалоговомОргане,
	|	СправкаНДФЛ.Фамилия,
	|	СправкаНДФЛ.Имя,
	|	СправкаНДФЛ.Отчество,
	|	СправкаНДФЛ.Адрес,
	|	СправкаНДФЛ.ВидДокумента,
	|	СправкаНДФЛ.СерияДокумента,
	|	СправкаНДФЛ.НомерДокумента,
	|	СправкаНДФЛ.Гражданство,
	|	СправкаНДФЛ.ДатаРождения,
	|	СправкаНДФЛ.СтатусНалогоплательщика,
	|	СправкаНДФЛ.ДатаУведомления,
	|	СправкаНДФЛ.НомерУведомления,
	|	СправкаНДФЛ.Ответственный,
	|	СправкаНДФЛ.Комментарий,
	|	СправкаНДФЛ.АдресЗаРубежом,
	|	СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке13,
	|	СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке13,
	|	СправкаНДФЛ.ИсчисленоПоСтавке13,
	|	СправкаНДФЛ.УдержаноПоСтавке13,
	|	СправкаНДФЛ.ЗадолженностьПоСтавке13,
	|	СправкаНДФЛ.ИзлишнеУдержаноПоСтавке13,
	|	СправкаНДФЛ.ПеречисленоПоСтавке13,
	|	СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке30,
	|	СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке30,
	|	СправкаНДФЛ.ИсчисленоПоСтавке30,
	|	СправкаНДФЛ.УдержаноПоСтавке30,
	|	СправкаНДФЛ.ЗадолженностьПоСтавке30,
	|	СправкаНДФЛ.ИзлишнеУдержаноПоСтавке30,
	|	СправкаНДФЛ.ПеречисленоПоСтавке30,
	|	СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке9,
	|	СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке9,
	|	СправкаНДФЛ.ИсчисленоПоСтавке9,
	|	СправкаНДФЛ.УдержаноПоСтавке9,
	|	СправкаНДФЛ.ЗадолженностьПоСтавке9,
	|	СправкаНДФЛ.ИзлишнеУдержаноПоСтавке9,
	|	СправкаНДФЛ.ПеречисленоПоСтавке9,
	|	СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке15,
	|	СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке15,
	|	СправкаНДФЛ.ИсчисленоПоСтавке15,
	|	СправкаНДФЛ.УдержаноПоСтавке15,
	|	СправкаНДФЛ.ЗадолженностьПоСтавке15,
	|	СправкаНДФЛ.ИзлишнеУдержаноПоСтавке15,
	|	СправкаНДФЛ.ПеречисленоПоСтавке15,
	|	СправкаНДФЛ.ОбщаяСуммаДоходаПоСтавке35,
	|	СправкаНДФЛ.ОблагаемаяСуммаДоходаПоСтавке35,
	|	СправкаНДФЛ.ИсчисленоПоСтавке35,
	|	СправкаНДФЛ.УдержаноПоСтавке35,
	|	СправкаНДФЛ.ЗадолженностьПоСтавке35,
	|	СправкаНДФЛ.ИзлишнеУдержаноПоСтавке35,
	|	СправкаНДФЛ.ПеречисленоПоСтавке35,
	|	СправкаНДФЛ.КодНалоговогоОрганаУведомления
	|ИЗ
	|	Документ.СправкаНДФЛ КАК СправкаНДФЛ
	|ГДЕ
	|	СправкаНДФЛ.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаНДФЛСведенияОДоходах.Ссылка,
	|	СправкаНДФЛСведенияОДоходах.НомерСтроки,
	|	СправкаНДФЛСведенияОДоходах.МесяцНалоговогоПериода,
	|	СправкаНДФЛСведенияОДоходах.КодДохода,
	|	СправкаНДФЛСведенияОДоходах.СуммаДохода,
	|	СправкаНДФЛСведенияОДоходах.КодВычета,
	|	СправкаНДФЛСведенияОДоходах.СуммаВычета,
	|	СправкаНДФЛСведенияОДоходах.Ссылка.Номер КАК НомерСправки,
	|	СправкаНДФЛСведенияОДоходах.Ссылка.Сотрудник
	|ИЗ
	|	Документ.СправкаНДФЛ.СведенияОДоходах КАК СправкаНДФЛСведенияОДоходах
	|ГДЕ
	|	СправкаНДФЛСведенияОДоходах.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаНДФЛСведенияОВычетах.Ссылка,
	|	СправкаНДФЛСведенияОВычетах.НомерСтроки,
	|	СправкаНДФЛСведенияОВычетах.КодВычета,
	|	СправкаНДФЛСведенияОВычетах.СуммаВычета,
	|	СправкаНДФЛСведенияОВычетах.Ссылка.Номер КАК НомерСправки,
	|	СправкаНДФЛСведенияОВычетах.Ссылка.Сотрудник
	|ИЗ
	|	Документ.СправкаНДФЛ.СведенияОВычетах КАК СправкаНДФЛСведенияОВычетах
	|ГДЕ
	|	СправкаНДФЛСведенияОВычетах.Ссылка В(&Ссылка)";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Сотрудники = Результаты[0].Выгрузить();
	
	Для Каждого СтрокаТаблицы Из Сотрудники Цикл
		СтрокаТаблицы.НомерСправки = НомерСправкиБезПрефиксов(СтрокаТаблицы.НомерСправки);			
	КонецЦикла;	
	
	СведенияОДоходах = Результаты[1].Выгрузить();
	
	Для Каждого СтрокаТаблицы Из СведенияОДоходах Цикл
		СтрокаТаблицы.НомерСправки =  НомерСправкиБезПрефиксов(СтрокаТаблицы.НомерСправки);		
	КонецЦикла;	
	
	СведенияОВычетах = Результаты[2].Выгрузить();
	
	Для Каждого СтрокаТаблицы Из СведенияОВычетах Цикл
		СтрокаТаблицы.НомерСправки =  НомерСправкиБезПрефиксов(СтрокаТаблицы.НомерСправки);		
	КонецЦикла;	
	
	Возврат Новый Структура("Сотрудники, СведенияОДоходах, СведенияОВычетах", Сотрудники, СведенияОДоходах, СведенияОВычетах);
	
КонецФункции	

Функция НомерСправкиБезПрефиксов(НомерДокумента)
	Возврат ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерДокумента, Истина, Истина);	
КонецФункции	

Функция СформироватьПечатнуюФорму2НДФЛ(МассивОбъектов, ОбъектыПечати)
	МассивНепроверяемыхРеквизитов = Новый Массив;	
	
	ДанныеНА = УчетНДФЛ.СправкиНДФЛДанныеДляПечати(МассивОбъектов);
	ТаблицыДокумента = ТаблицыДанныхДокументаДляПечати(МассивОбъектов);
	Возврат УчетНДФЛ.СформироватьПечатнуюФорму2НДФЛ(ОбъектыПечати, МассивОбъектов, ДанныеНА, ТаблицыДокумента.Сотрудники, ТаблицыДокумента.СведенияОДоходах, ТаблицыДокумента.СведенияОВычетах); 
КонецФункции	

#КонецОбласти

#КонецОбласти

#КонецЕсли