#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// ЗАПОЛНЕНИЕ ДОКУМЕНТА

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Товары" Тогда
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
			СтрокаТабличнойЧасти.СчетУчета   = СчетаУчета.СчетУчета;
			СтрокаТабличнойЧасти.СчетУчетаНУ = СчетаУчета.СчетУчета;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетНДСТаможни) Тогда
			СтрокаТабличнойЧасти.СчетУчетаНДС = СчетаУчета.СчетНДСТаможни;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СпособУчетаНДС) Тогда
			СтрокаТабличнойЧасти.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТоварыПоДаннымПоступления(ДанныеОбъекта, ДокументПоступления, НомерРаздела) Экспорт
	
	ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ОснованиеВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПоступления, "ВидОперации");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Количество,
	|	ПоступлениеТоваровУслугТовары.Сумма,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК ФактурнаяСтоимость,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК СуммаПошлины,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ПоступлениеТоваровУслугТовары.СчетУчета,
	|	ПоступлениеТоваровУслугТовары.СчетУчета КАК СчетУчетаНУ,
	|	ПоступлениеТоваровУслугТовары.СчетУчетаНДС,
	|	ПоступлениеТоваровУслугТовары.СпособУчетаНДС,
	|	ПоступлениеТоваровУслугТовары.ОтражениеВУСН,
	|	ПоступлениеТоваровУслугТовары.СтранаПроисхождения,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(2, 0)) КАК НомерРаздела,
	|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка) КАК ДокументПартии
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументПоступления";
	
	Если ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" + "
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслугОборудование.Номенклатура,
		|	ПоступлениеТоваровУслугОборудование.Количество,
		|	ПоступлениеТоваровУслугОборудование.Сумма,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)),
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)),
		|	ПоступлениеТоваровУслугОборудование.СчетУчета,
		|	ПоступлениеТоваровУслугОборудование.СчетУчета,
		|	ПоступлениеТоваровУслугОборудование.СчетУчетаНДС,
		|	ПоступлениеТоваровУслугОборудование.СпособУчетаНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.НеПринимаются),
		|	ПоступлениеТоваровУслугОборудование.СтранаПроисхождения,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(2, 0)),
		|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
		|ГДЕ
		|	ПоступлениеТоваровУслугОборудование.Ссылка = &ДокументПоступления";
	ИначеЕсли ОснованиеВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия 
				И ОснованиеВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	ТаблицаЗначенийТовары = Запрос.Выполнить().Выгрузить();
	
	ДанныеОбъекта.Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПоступления, "Склад");
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация,
		ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаЗначенийТовары, "Номенклатура", Истина),
		ДанныеОбъекта.Склад,
		ДанныеОбъекта.Дата);
	
	КурсДокумента      = ЗаполнениеДокументов.КурсДокумента(ДокументПоступления,      ВалютаРеглУчета);
	КратностьДокумента = ЗаполнениеДокументов.КратностьДокумента(ДокументПоступления, ВалютаРеглУчета);
	Для каждого СтрокаТоваров Из ТаблицаЗначенийТовары Цикл
		СтрокаТоваров.НомерРаздела   = НомерРаздела;
		СтрокаТоваров.ДокументПартии = ДокументПоступления;
		
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТоваров.Номенклатура);
		Если ЗначениеЗаполнено(СтрокаТоваров.СчетУчета) Тогда
			СтрокаТоваров.СчетУчетаНДС = СчетаУчета.СчетНДСТаможни;
		Иначе
			Документы.ГТДИмпорт.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
				ДанныеОбъекта, СтрокаТоваров, "Товары", СчетаУчета);
		КонецЕсли;
		
		СтрокаТоваров.ФактурнаяСтоимость = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
			СтрокаТоваров.Сумма,
			ДокументПоступления.ВалютаДокумента, ДанныеОбъекта.ВалютаДокумента,
			КурсДокумента, ДанныеОбъекта.КурсДокумента,
			КратностьДокумента,ДанныеОбъекта.КратностьДокумента);
		
	КонецЦикла;
	
	ТаблицаЗначенийТовары.Колонки.Удалить("Сумма");
	
	Возврат ТаблицаЗначенийТовары;
	
КонецФункции

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.Номер,
	|	ГТДИмпорт.Дата КАК Период,
	|	ГТДИмпорт.Организация,
	|	ГТДИмпорт.ВалютаДокумента,
	|	ГТДИмпорт.КурсДокумента,
	|	ГТДИмпорт.КратностьДокумента,
	|	ЕСТЬNULL(ГТДИмпорт.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРеглУчета) КАК ВалютаВзаиморасчетов,
	|	ГТДИмпорт.КурсВзаиморасчетов,
	|	ГТДИмпорт.КратностьВзаиморасчетов,
	|	ГТДИмпорт.Контрагент,
	|	ГТДИмпорт.ДоговорКонтрагента,
	|	ГТДИмпорт.ДоговорКонтрагентаРегл,
	|	ГТДИмпорт.ТаможенныйСбор,
	|	ГТДИмпорт.ТаможенныйСборВал,
	|	ГТДИмпорт.ТаможенныйШтраф,
	|	ГТДИмпорт.ТаможенныйШтрафВал,
	|	ГТДИмпорт.СчетУчетаРасчетовСКонтрагентом,
	|	ГТДИмпорт.СтатьяПрочихДоходовРасходов,
	|	ЕСТЬNULL(ГТДИмпорт.СтатьяПрочихДоходовРасходов.ПринятиеКналоговомуУчету, ИСТИНА) КАК ЗатратыПринимаютсяКНУ,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы) КАК СчетУчетаРасходов,
	|	ГТДИмпорт.СчетУчетаРасчетовСКонтрагентомВал,
	|	ГТДИмпорт.ПодразделениеОрганизации,
	|	ГТДИмпорт.НДСПредъявленКВычету,
	|	ГТДИмпорт.НДСВключенВСтоимость,
	|	ГТДИмпорт.НомерГТД
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК Валютный,
	|	&ВалютаРеглУчета КАК ВалютаДокумента,
	|	1 КАК КурсДокумента,
	|	1 КАК КратностьДокумента,
	|	&ВалютаРеглУчета КАК ВалютаВзаиморасчетов,
	|	1 КАК КурсВзаиморасчетов,
	|	1 КАК КратностьВзаиморасчетов,
	|	ГТДИмпорт.ДоговорКонтрагентаРегл КАК ДоговорКонтрагента,
	|	ГТДИмпорт.ТаможенныйСбор,
	|	ГТДИмпорт.ТаможенныйШтраф,
	|	ГТДИмпорт.СчетУчетаРасчетовСКонтрагентом,
	|	ГТДИмпорт.СтатьяПрочихДоходовРасходов,
	|	ГТДИмпорт.ТаможенныйСбор + ГТДИмпорт.ТаможенныйШтраф КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ РеквизитыДоговоров
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ГТДИмпорт.ВалютаДокумента,
	|	ГТДИмпорт.КурсДокумента,
	|	ГТДИмпорт.КратностьДокумента,
	|	ЕСТЬNULL(ГТДИмпорт.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРеглУчета),
	|	ГТДИмпорт.КурсВзаиморасчетов,
	|	ГТДИмпорт.КратностьВзаиморасчетов,
	|	ГТДИмпорт.ДоговорКонтрагента,
	|	ГТДИмпорт.ТаможенныйСборВал,
	|	ГТДИмпорт.ТаможенныйШтрафВал,
	|	ГТДИмпорт.СчетУчетаРасчетовСКонтрагентомВал,
	|	ГТДИмпорт.СтатьяПрочихДоходовРасходов,
	|	ГТДИмпорт.ТаможенныйСборВал + ГТДИмпорт.ТаможенныйШтрафВал
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ГТДИмпортРазделы.ПошлинаВВалюте
	|				ТОГДА 0
	|			ИНАЧЕ ГТДИмпортРазделы.СуммаПошлины
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ГТДИмпортРазделы.НДСВВалюте
	|				ТОГДА 0
	|			ИНАЧЕ ГТДИмпортРазделы.СуммаНДС
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ГТДИмпортРазделы.ПошлинаВВалюте
	|				ТОГДА ГТДИмпортРазделы.СуммаПошлины
	|			ИНАЧЕ 0
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ГТДИмпортРазделы.НДСВВалюте
	|				ТОГДА ГТДИмпортРазделы.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВал
	|ПОМЕСТИТЬ СуммыПошлины
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|ГДЕ
	|	ГТДИмпортРазделы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.Номер,
	|	ГТДИмпорт.Период,
	|	ГТДИмпорт.Организация,
	|	РеквизитыДоговоров.ВалютаДокумента,
	|	РеквизитыДоговоров.КурсДокумента,
	|	РеквизитыДоговоров.КратностьДокумента,
	|	РеквизитыДоговоров.ВалютаВзаиморасчетов,
	|	РеквизитыДоговоров.КурсВзаиморасчетов,
	|	РеквизитыДоговоров.КратностьВзаиморасчетов,
	|	ГТДИмпорт.Контрагент,
	|	РеквизитыДоговоров.ДоговорКонтрагента,
	|	РеквизитыДоговоров.ТаможенныйСбор,
	|	РеквизитыДоговоров.ТаможенныйШтраф,
	|	РеквизитыДоговоров.СчетУчетаРасчетовСКонтрагентом,
	|	ГТДИмпорт.СтатьяПрочихДоходовРасходов,
	|	ЕСТЬNULL(ГТДИмпорт.СтатьяПрочихДоходовРасходов.ПринятиеКналоговомуУчету, ИСТИНА) КАК ЗатратыПринимаютсяКНУ,
	|	ГТДИмпорт.СчетУчетаРасходов,
	|	ГТДИмпорт.ПодразделениеОрганизации,
	|	ГТДИмпорт.НомерГТД,
	|	РеквизитыДоговоров.СуммаВзаиморасчетов + ВЫБОР
	|		КОГДА РеквизитыДоговоров.Валютный = ИСТИНА
	|			ТОГДА СуммыПошлины.СуммаВал
	|		ИНАЧЕ СуммыПошлины.Сумма
	|	КОНЕЦ КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ РеквизитыАвансов
	|ИЗ
	|	Реквизиты КАК ГТДИмпорт,
	|	РеквизитыДоговоров КАК РеквизитыДоговоров,
	|	СуммыПошлины КАК СуммыПошлины
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеквизитыДоговоров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СуммыПошлины
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.КурсДокумента,
	|	Реквизиты.КратностьДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	// В РеквизитыДоговоров и РеквизитыАвансов - всегда две записи: для рублевого и валютного договоров.
	// В Реквизиты и СуммыПошлины - по одной записи.
	
	Результат = Запрос.Выполнить();
	ПараметрыПроведения.Вставить("ШапкаДокумента", Результат.Выгрузить());
	Выборка = Результат.Выбрать();
	
	Если НЕ Выборка.Следующий() ИЛИ НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, Выборка.Ссылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	// Коэффициенты пересчета сумм
	// - из валюты документа в валюту взаиморасчетов 
	// - из валюты взаиморасчетов в рубли
	Если Выборка.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
		КоэффициентРуб = 1;
	Иначе
		КоэффициентРуб = Выборка.КурсВзаиморасчетов / Выборка.КратностьВзаиморасчетов;
	КонецЕсли;
	Если Выборка.ВалютаВзаиморасчетов = Выборка.ВалютаДокумента Тогда
		КоэффициентВзаиморасчетов = 1;
	Иначе
		КоэффициентВзаиморасчетов = (Выборка.КурсВзаиморасчетов / Выборка.КратностьВзаиморасчетов) / КоэффициентРуб;
	КонецЕсли;
	
	Если Выборка.ВалютаДокумента = ВалютаРеглУчета Тогда
		КоэффициентТаможеннаяСтоимостьРуб = 1;
	Иначе
		КоэффициентТаможеннаяСтоимостьРуб = Выборка.КурсДокумента/Выборка.КратностьДокумента;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КоэффициентВзаиморасчетов", КоэффициентВзаиморасчетов);
	Запрос.УстановитьПараметр("КоэффициентРуб",            КоэффициентРуб);
	Запрос.УстановитьПараметр("КоэффициентТаможеннаяСтоимостьРуб", КоэффициентТаможеннаяСтоимостьРуб);
	
	Запрос.УстановитьПараметр("СинонимТовары", НСтр("ru = 'Товары'"));
	
	Запрос.УстановитьПараметр("ПрименяетсяУСН",                   УчетнаяПолитика.ПрименяетсяУСН(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходыМинусРасходы", УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ПлательщикНДФЛ",                   УчетнаяПолитика.ПлательщикНДФЛ(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП",   УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",     УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ДатаДокумента", 					  Выборка.Период);
	
	// счета учета
	СчетаМПЗ = Новый Массив();
	СчетаМПЗ.Добавить(ПланыСчетов.Хозрасчетный.Материалы); // 10 счет
	Субсчета10 = БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(СчетаМПЗ, Ложь,,Ложь);
	
	СчетаМПЗ.Добавить(ПланыСчетов.Хозрасчетный.Товары);   // дополняем счетом 41
	СубсчетаМПЗ = БухгалтерскийУчет.ПолучитьМассивСчетовССубсчетами(СчетаМПЗ, Ложь,,Ложь);
	
	Запрос.УстановитьПараметр("Субсчета10",  Субсчета10);
	Запрос.УстановитьПараметр("СубсчетаМПЗ", СубсчетаМПЗ);
	
	// Содержания проводок:
	Запрос.УстановитьПараметр("СодержаниеПошлина",          НСтр("ru = 'Таможенная пошлина'"));
	Запрос.УстановитьПараметр("СодержаниеПошлинаВал",       НСтр("ru = 'Таможенная пошлина (в валюте)'"));
	Запрос.УстановитьПараметр("СодержаниеШтраф",            НСтр("ru = 'Таможенный штраф'"));
	Запрос.УстановитьПараметр("СодержаниеШтрафВал",         НСтр("ru = 'Таможенный штраф (в валюте)'"));
	Запрос.УстановитьПараметр("СодержаниеСборы",            НСтр("ru = 'Таможенный сбор'"));
	Запрос.УстановитьПараметр("СодержаниеСборыВал",         НСтр("ru = 'Таможенный сбор (в валюте)'"));
	Запрос.УстановитьПараметр("СодержаниеНДС",              НСтр("ru = 'НДС, уплаченный таможенным органам'"));
	Запрос.УстановитьПараметр("СодержаниеНДСВал",           НСтр("ru = 'НДС, уплаченный таможенным органам (в валюте)'"));
	Запрос.УстановитьПараметр("СодержаниеНДСВСтоимости",    НСтр("ru = 'НДС, уплаченный таможенным органам, включен в стоимость'"));
	Запрос.УстановитьПараметр("СодержаниеНДСВСтоимостиВал", НСтр("ru = 'НДС, уплаченный таможенным органам (в валюте), включен в стоимость'"));
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаТаблицаПошлина(НомераТаблиц)
		+ ТекстЗапросаТаможенныйСбор(НомераТаблиц)
		+ ТекстЗапросаШтраф(НомераТаблиц)
		+ ТекстЗапросаНДС(НомераТаблиц)
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)
		+ ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц)
		+ ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары"          , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРазделы"         , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммыПоТоварам"  , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ГТДИмпортТовары.Ссылка,
	|	ГТДИмпортТовары.НомерСтроки,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Количество,
	|	ГТДИмпортТовары.ФактурнаяСтоимость,
	|	ГТДИмпортТовары.СуммаПошлины,
	|	ГТДИмпортТовары.СуммаНДС,
	|	ГТДИмпортТовары.ДокументПартии,
	|	ГТДИмпортТовары.СчетУчета,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортТовары.СпособУчетаНДС,
	|	ГТДИмпортТовары.СчетУчетаНУ,
	|	ГТДИмпортТовары.СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ГТДИмпортТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ГТДИмпортТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОГДА ГТДИмпортТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ГТДИмпортТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗатратыПринимаютсяКНУ,
	|	ГТДИмпортТовары.ОтражениеВУСН,
	|	ГТДИмпортТовары.СтранаПроисхождения,
	|	ГТДИмпортТовары.НомерРаздела КАК НомерРаздела
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|ГДЕ
	|	ГТДИмпортТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерРаздела
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГТДИмпортРазделы.Ссылка,
	|	ГТДИмпортРазделы.НомерСтроки КАК НомерСтроки,
	|	ГТДИмпортРазделы.ТаможеннаяСтоимость,
	|	ГТДИмпортРазделы.ПошлинаВВалюте,
	|	ГТДИмпортРазделы.СтавкаПошлины,
	|	ГТДИмпортРазделы.СуммаПошлины,
	|	ГТДИмпортРазделы.НДСВВалюте,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортРазделы.СуммаНДС,
	|	ГТДИмпортРазделы.НомерСтроки КАК НомерРаздела
	|ПОМЕСТИТЬ РазделыДокумента
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|ГДЕ
	|	ГТДИмпортРазделы.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка,
	|	ТоварыДокумента.НомерСтроки,
	|	ТоварыДокумента.НомерРаздела,
	|	ТоварыДокумента.Номенклатура,
	|	ТоварыДокумента.Количество,
	|	ТоварыДокумента.ФактурнаяСтоимость,
	|	ТоварыДокумента.СчетУчета,
	|	ТоварыДокумента.СчетУчетаНДС,
	|	ТоварыДокумента.СпособУчетаНДС,
	|	ТоварыДокумента.СчетУчетаНУ,
	|	ТоварыДокумента.СтатьяЗатратНУ,
	|	ТоварыДокумента.ЗатратыПринимаютсяКНУ,
	|	ТоварыДокумента.ОтражениеВУСН,
	|	ТоварыДокумента.СтранаПроисхождения,
	|	ТоварыДокумента.ДокументПартии,
	|	ТоварыДокумента.ДокументПартии.Склад КАК Склад,
	|	ТоварыДокумента.ДокументПартии.ПодразделениеОрганизации КАК Подразделение,
	|	РазделыДокумента.ПошлинаВВалюте,
	|	РазделыДокумента.НДСВВалюте,
	|	РазделыДокумента.СтавкаНДС,
	|	РазделыДокумента.СтавкаПошлины,
	|	РазделыДокумента.СуммаПошлины,
	|	РазделыДокумента.СуммаНДС,
	|	ВЫБОР
	|		КОГДА РазделыДокумента.ПошлинаВВалюте
	|			ТОГДА Реквизиты.СчетУчетаРасчетовСКонтрагентомВал
	|		ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА РазделыДокумента.ПошлинаВВалюте
	|			ТОГДА ТоварыДокумента.СуммаПошлины
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПошлиныВВалюте,
	|	ВЫБОР
	|		КОГДА РазделыДокумента.НДСВВалюте
	|			ТОГДА ТоварыДокумента.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСВВалюте,
	|	ТоварыДокумента.СуммаПошлины * ВЫБОР
	|		КОГДА РазделыДокумента.ПошлинаВВалюте
	|			ТОГДА &КоэффициентРуб
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаПошлиныРуб,
	|	ТоварыДокумента.СуммаНДС * ВЫБОР
	|		КОГДА РазделыДокумента.НДСВВалюте
	|			ТОГДА &КоэффициентРуб
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаНДСРуб,
	|	ТоварыДокумента.СуммаПошлины * ВЫБОР
	|		КОГДА РазделыДокумента.ПошлинаВВалюте
	|			ТОГДА &КоэффициентВзаиморасчетов
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаПошлиныВзаиморасчетов,
	|	ТоварыДокумента.СуммаНДС * ВЫБОР
	|		КОГДА РазделыДокумента.НДСВВалюте
	|			ТОГДА &КоэффициентВзаиморасчетов
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаНДСВзаиморасчетов
	|ПОМЕСТИТЬ СуммыПоТоварам
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РазделыДокумента КАК РазделыДокумента
	|		ПО ТоварыДокумента.НомерРаздела = РазделыДокумента.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТоварыДокумента.Ссылка)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПошлина(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПошлинаРеквизиты"  , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПошлина"           , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СуммаПошлиныВВалюте КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВВалюте КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаНУ,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.ДокументПартии КАК ДокументОприходования,
	|	ТаблицаТовары.КорСчет КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПошлинаВВалюте
	|			ТОГДА Реквизиты.ДоговорКонтрагента
	|		ИНАЧЕ Реквизиты.ДоговорКонтрагентаРегл
	|	КОНЕЦ КАК КорСубконто2,
	|	ТаблицаТовары.Ссылка КАК КорСубконто3,
	|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСубконтоСтатьиНУ,
	|	ТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаТовары.ПошлинаВВалюте
	|				ТОГДА &СодержаниеПошлинаВал
	|			ИНАЧЕ &СодержаниеПошлина
	|		КОНЕЦ КАК СТРОКА(150)) КАК Содержание
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|ГДЕ
	|	ТаблицаТовары.СуммаПошлиныРуб <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаможенныйСбор(НомераТаблиц)

	НомераТаблиц.Вставить("ТаможенныйСборРеквизиты"  , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаможенныйСборВРублях"    , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаможенныйСборВВалюте"    , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ТаможенныйСбор,
	|	Реквизиты.ТаможенныйСборВал,
	|	&КоэффициентРуб КАК КоэффициентРуб,
	|	&КоэффициентВзаиморасчетов КАК КоэффициентВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	ТаблицаТовары.СуммаПошлиныВВалюте КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВВалюте КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаНУ,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.ДокументПартии КАК ДокументОприходования,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагентаРегл КАК КорСубконто2,
	|	ТаблицаТовары.Ссылка КАК КорСубконто3,
	|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСубконтоСтатьиНУ,
	|	ТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	ВЫРАЗИТЬ(&СодержаниеСборы КАК СТРОКА(150)) КАК Содержание
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	ТаблицаТовары.СуммаПошлиныВВалюте КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВВалюте КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК СуммаНУ,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.ДокументПартии КАК ДокументОприходования,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентомВал КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицаТовары.Ссылка КАК КорСубконто3,
	|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСубконтоСтатьиНУ,
	|	ТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	ВЫРАЗИТЬ(&СодержаниеСборыВал КАК СТРОКА(150)) КАК Содержание
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаШтраф(НомераТаблиц)

	НомераТаблиц.Вставить("ШтрафРеквизиты"  , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ШтрафВРублях"    , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ШтрафВВалюте"    , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ТаможенныйШтраф,
	|	Реквизиты.ТаможенныйШтрафВал,
	|	&КоэффициентРуб КАК КоэффициентРуб,
	|	&КоэффициентВзаиморасчетов КАК КоэффициентВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	0 КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	Реквизиты.ТаможенныйШтраф КАК СуммаРуб,
	|	Реквизиты.ТаможенныйШтраф КАК СуммаБУ,
	|	Реквизиты.ТаможенныйШтраф КАК СуммаНУ,
	|	Реквизиты.ТаможенныйШтраф КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСРуб,
	|	NULL КАК СтавкаНДС,
	|	Реквизиты.СчетУчетаРасходов КАК СчетУчета,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагентаРегл КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.СчетУчетаРасходов КАК СчетУчетаНУ,
	|	Реквизиты.СтатьяПрочихДоходовРасходов КАК СтатьяЗатратНУ,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы) КАК ВидСубконтоСтатьиНУ,
	|	Реквизиты.ЗатратыПринимаютсяКНУ,
	|	&СодержаниеШтраф КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.ТаможенныйШтраф <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	0 КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ВЫРАЗИТЬ(Реквизиты.ТаможенныйШтрафВал * &КоэффициентРуб КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ВЫРАЗИТЬ(Реквизиты.ТаможенныйШтрафВал * &КоэффициентРуб КАК ЧИСЛО(15, 2)) КАК СуммаБУ,
	|	Реквизиты.ТаможенныйШтрафВал КАК СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(Реквизиты.ТаможенныйШтрафВал * &КоэффициентРуб КАК ЧИСЛО(15, 2)) КАК СуммаНУ,
	|	0 КАК СуммаНДСРуб,
	|	NULL КАК СтавкаНДС,
	|	Реквизиты.СчетУчетаРасходов КАК СчетУчета,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентомВал КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	Реквизиты.СчетУчетаРасходов КАК СчетУчетаНУ,
	|	Реквизиты.СтатьяПрочихДоходовРасходов КАК СтатьяЗатратНУ,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы) КАК ВидСубконтоСтатьиНУ,
	|	Реквизиты.ЗатратыПринимаютсяКНУ,
	|	&СодержаниеШтрафВал КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.ТаможенныйШтрафВал <> 0";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыНДСВВалюте",  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыНДСВРублях",  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыНДСВВалюте",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыНДСВРублях",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НДСВСтоимостиВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НДСВСтоимостиВРублях", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентомВал КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.НДСПредъявленКВычету КАК НДСПредъявленКВычету,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВЫРАЗИТЬ(&СодержаниеНДСВал КАК СТРОКА(150)) КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагентаРегл КАК ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.НДСПредъявленКВычету КАК НДСПредъявленКВычету,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	&ВалютаРеглУчета КАК ВалютаВзаиморасчетов,
	|	ВЫРАЗИТЬ(&СодержаниеНДС КАК СТРОКА(150)) КАК Содержание,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""20""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка КАК Регистратор,
	|	ТоварыДокумента.НомерРаздела КАК НомерРаздела,
	|	ТоварыДокумента.НомерСтроки КАК НомерСтроки,
	|	ТоварыДокумента.ДокументПартии КАК ДокументПартии,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.ДокументПартии.Склад КАК Склад,
	|	ТоварыДокумента.ДокументПартии.ПодразделениеОрганизации КАК Подразделение,
	|	ТоварыДокумента.СчетУчета КАК СчетУчета,
	|	ТоварыДокумента.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТоварыДокумента.СпособУчетаНДС КАК СпособУчетаНДС,
	|	РазделыДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ТоварыДокумента.СуммаНДС * &КоэффициентРуб КАК ЧИСЛО(15, 2)) КАК СуммаНДСРуб,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыДокумента.ФактурнаяСтоимость * &КоэффициентТаможеннаяСтоимостьРуб КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаБезНДСРуб,
	|	ТоварыДокумента.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫРАЗИТЬ(&СодержаниеПошлинаВал КАК СТРОКА(150)) КАК Содержание,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""20""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РазделыДокумента КАК РазделыДокумента
	|		ПО ТоварыДокумента.НомерРаздела = РазделыДокумента.НомерСтроки
	|ГДЕ
	|	РазделыДокумента.НДСВВалюте = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.Ссылка КАК Регистратор,
	|	ТоварыДокумента.НомерРаздела КАК НомерРаздела,
	|	ТоварыДокумента.НомерСтроки КАК НомерСтроки,
	|	ТоварыДокумента.ДокументПартии КАК ДокументПартии,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.ДокументПартии.Склад КАК Склад,
	|	ТоварыДокумента.ДокументПартии.ПодразделениеОрганизации КАК Подразделение,
	|	ТоварыДокумента.СчетУчета КАК СчетУчета,
	|	ТоварыДокумента.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТоварыДокумента.СпособУчетаНДС КАК СпособУчетаНДС,
	|	РазделыДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыДокумента.СуммаНДС КАК СуммаНДСРуб,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыДокумента.ФактурнаяСтоимость * &КоэффициентТаможеннаяСтоимостьРуб КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаБезНДСРуб,
	|	ТоварыДокумента.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|	ВЫРАЗИТЬ(&СодержаниеПошлина КАК СТРОКА(150)) КАК Содержание,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""20""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РазделыДокумента КАК РазделыДокумента
	|		ПО ТоварыДокумента.НомерРаздела = РазделыДокумента.НомерСтроки
	|ГДЕ
	|	РазделыДокумента.НДСВВалюте = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.НомерРаздела КАК НомерРаздела,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНУ,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.ДокументПартии КАК ДокументОприходования,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентомВал КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицаТовары.Ссылка КАК КорСубконто3,
	|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСубконтоСтатьиНУ,
	|	ТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	ВЫРАЗИТЬ(&СодержаниеНДСВСтоимостиВал КАК СТРОКА(150)) КАК Содержание
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|ГДЕ
	|	ТаблицаТовары.НДСВВалюте = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.НомерРаздела КАК НомерРаздела,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаРуб,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаБУ,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНУ,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.ДокументПартии КАК ДокументОприходования,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагентаРегл КАК КорСубконто2,
	|	ТаблицаТовары.Ссылка КАК КорСубконто3,
	|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТовары.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатратНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСубконтоСтатьиНУ,
	|	ТаблицаТовары.ЗатратыПринимаютсяКНУ,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	ВЫРАЗИТЬ(&СодержаниеНДСВСтоимости КАК СТРОКА(150)) КАК Содержание
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|ГДЕ
	|	ТаблицаТовары.НДСВВалюте = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц)
	
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты"          , НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента"   , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеквизитыАвансов.Ссылка КАК Регистратор,
	|	РеквизитыАвансов.Период КАК Период,
	|	РеквизитыАвансов.Организация КАК Организация,
	|	РеквизитыАвансов.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК РеквизитыАвансов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыАвансов.Ссылка КАК ДокументРасчетов,
	|	РеквизитыАвансов.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	РеквизитыАвансов.СчетУчетаРасчетовСКонтрагентом КАК СчетАвансов,
	|	РеквизитыАвансов.Контрагент,
	|	РеквизитыАвансов.ДоговорКонтрагента,
	|	СУММА(РеквизитыАвансов.ТаможенныйСбор) КАК ТаможенныйСбор,
	|	СУММА(РеквизитыАвансов.ТаможенныйШтраф) КАК ТаможенныйШтраф,
	|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ДоговорыКонтрагентов.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	РеквизитыАвансов.ПодразделениеОрганизации КАК Подразделение,
	|	СУММА(РеквизитыАвансов.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(РеквизитыАвансов.СуммаВзаиморасчетов * &КоэффициентРуб) КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовЕНВД
	|ИЗ
	|	РеквизитыАвансов КАК РеквизитыАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО РеквизитыАвансов.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеквизитыАвансов.Ссылка,
	|	РеквизитыАвансов.СчетУчетаРасчетовСКонтрагентом,
	|	РеквизитыАвансов.Контрагент,
	|	РеквизитыАвансов.ДоговорКонтрагента,
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах,
	|	ДоговорыКонтрагентов.УчетАгентскогоНДС,
	|	РеквизитыАвансов.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	РеквизитыАвансов.СчетУчетаРасчетовСКонтрагентом";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)

	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатковРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц)

	НомераТаблиц.Вставить("УСНРеквизитыВВалюте",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УСНРеквизитыВРублях",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РасходыУСНВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РасходыУСНВРублях", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК Валюта,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	Реквизиты.ТаможенныйСборВал КАК ТаможенныйСбор,
	|	&ПрименяетсяУСНДоходыМинусРасходы,
	|	&КоэффициентРуб КАК КоэффициентРуб,
	|	&КоэффициентВзаиморасчетов КАК КоэффициентВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ДоговорКонтрагентаРегл КАК ДоговорКонтрагента,
	|	&ВалютаРеглУчета КАК Валюта,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	Реквизиты.ТаможенныйСбор КАК ТаможенныйСбор,
	|	&ПрименяетсяУСНДоходыМинусРасходы,
	|	&КоэффициентРуб КАК КоэффициентРуб,
	|	&КоэффициентВзаиморасчетов КАК КоэффициентВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежи) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаТовары.Номенклатура КАК ЭлементРасхода,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.ДокументПартии КАК Партия,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	0 КАК Сумма,
	|	0 КАК Сбор, 				// валютный сбор распределяем по фактурной стоимости в обработке проведения
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПошлинаВВалюте
	|			ТОГДА ТаблицаТовары.СуммаПошлиныВВалюте
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Пошлина,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НДСВВалюте
	|			ТОГДА ТаблицаТовары.СуммаНДСВВалюте
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ТаблицаТовары.ОтражениеВУСН КАК ОтражениеВУСН
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|			ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|ГДЕ
	|	&ПрименяетсяУСНДоходыМинусРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерРаздела,
	|	ТаблицаТовары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежи) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаТовары.Номенклатура КАК ЭлементРасхода,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.ДокументПартии КАК Партия,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	0 КАК Сумма,
	|	0 КАК Сбор, 				// рублевый сбор распределяем по фактурной стоимости в обработке проведения
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.ПошлинаВВалюте
	|			ТОГДА ТаблицаТовары.СуммаПошлиныРуб
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Пошлина,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.НДСВВалюте
	|			ТОГДА ТаблицаТовары.СуммаНДСРуб
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	ТаблицаТовары.ОтражениеВУСН КАК ОтражениеВУСН
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|			ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|ГДЕ
	|	&ПрименяетсяУСНДоходыМинусРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерРаздела,
	|	ТаблицаТовары.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПоступлениеМПЗИП(НомераТаблиц)

	НомераТаблиц.Вставить("ПоступлениеМПЗИПРеквизиты",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаблицаТоваров",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаможенныйСбор",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаможенныйСборВал",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаможенныйШтраф",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеМПЗИПТаможенныйШтрафВал",	НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ПоступлениеДопРасходов"" КАК ТипПоступления,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	ЛОЖЬ КАК НДСВключенВСтоимость,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	""ГТДИмпорт"" КАК ВидОперации,
	|	Реквизиты.ТаможенныйСбор ,
	|	Реквизиты.ТаможенныйСборВал КАК ТаможенныйСборВал
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СуммаПошлиныРуб КАК Сумма,
	|	0 КАК НДС,
	|	0 КАК Количество,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ТаблицаТовары.ДокументПартии КАК Партия
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|ГДЕ
	|	&ПлательщикНДФЛ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	0 КАК НДС,
	|	0 КАК Количество,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ТаблицаТовары.ДокументПартии КАК Партия
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|			И (Реквизиты.ТаможенныйСбор <> 0)
	|ГДЕ
	|	&ПлательщикНДФЛ
	|	И Реквизиты.ТаможенныйСбор <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	0 КАК НДС,
	|	0 КАК Количество,
	|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НоменклатурнаяГруппа
	|	КОНЕЦ КАК Поле4,
	|	ТаблицаТовары.СтатьяЗатратНУ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаТовары.СтатьяЗатратНУ ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СтатьяЗатратНУ КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ТаблицаТовары.ДокументПартии КАК Партия
	|ИЗ
	|	СуммыПоТоварам КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = ТаблицаТовары.Ссылка)
	|			И (Реквизиты.ТаможенныйСбор <> 0)
	|ГДЕ
	|	&ПлательщикНДФЛ
	|	И Реквизиты.ТаможенныйСборВал <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	"""" КАК ИмяСписка,
	|	"""" КАК СинонимСписка,
	|	0 КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	Реквизиты.ТаможенныйШтраф КАК Сумма,
	|	0 КАК НДС,
	|	0 КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
	|	&ОсновнаяНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Реквизиты.СтатьяПрочихДоходовРасходов КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК ВидРасходовНУ,
	|	Реквизиты.СтатьяПрочихДоходовРасходов.ПринятиеКналоговомуУчету КАК ПринятиеКналоговомуУчету,
	|	Реквизиты.СтатьяПрочихДоходовРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Партия
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	&ПлательщикНДФЛ
	|	И Реквизиты.ТаможенныйШтраф <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	"""" КАК ИмяСписка,
	|	"""" КАК СинонимСписка,
	|	0 КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	ВЫРАЗИТЬ(Реквизиты.ТаможенныйШтрафВал * &КоэффициентРуб КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	0 КАК НДС,
	|	0 КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
	|	&ОсновнаяНоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Реквизиты.СтатьяПрочихДоходовРасходов КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК ВидРасходовНУ,
	|	Реквизиты.СтатьяПрочихДоходовРасходов.ПринятиеКналоговомуУчету КАК ПринятиеКналоговомуУчету,
	|	Реквизиты.СтатьяПрочихДоходовРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Партия
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	&ПлательщикНДФЛ
	|	И Реквизиты.ТаможенныйШтрафВал <> 0";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Функция удаляет из таблицы взаиморасчетов сумму на оплату НДС
//
Функция ПодготовитьТаблицуВзаиморасчетовБезНДСИП(ТаблицаВзаиморасчетов, ТоварыНДСвРублях, ТоварыНДСвВалюте) Экспорт
	Перем ТаблицаВзаиморасчетовБезНДС;
	
	Если ТаблицаВзаиморасчетов = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаВзаиморасчетовБезНДС	= ТаблицаВзаиморасчетов.Скопировать();
	
	СуммаНДСРуб	= 0;
	Если НЕ ТоварыНДСвРублях = Неопределено Тогда
		СуммаНДСРуб	= СуммаНДСРуб + ТоварыНДСвРублях.Итог("СуммаНДСРуб");
	КонецЕсли;
	
	Если НЕ ТоварыНДСвВалюте = Неопределено Тогда
		СуммаНДСРуб	= СуммаНДСРуб + ТоварыНДСвВалюте.Итог("СуммаНДСРуб");
	КонецЕсли;
	
	Если СуммаНДСРуб = 0 Тогда
		Возврат ТаблицаВзаиморасчетовБезНДС;
	КонецЕсли;
	
	Для каждого СтрокаВзаиморасчетов Из ТаблицаВзаиморасчетовБезНДС Цикл
		
		Если СтрокаВзаиморасчетов.СуммаРуб = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаОплаченногоНДС	= Мин(СуммаНДСРуб, СтрокаВзаиморасчетов.СуммаРуб);
		
		СтрокаВзаиморасчетов.СуммаРуб	= СтрокаВзаиморасчетов.СуммаРуб - СуммаОплаченногоНДС;
		СуммаНДСРуб	= СуммаНДСРуб - СуммаОплаченногоНДС;
		
		Если СуммаНДСРуб = 0 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаВзаиморасчетовБезНДС;
	
КонецФункции

// Подготавливает таблицу для отражения поступления расходов УСН из переданной таблицы с распределенными по номенклатуре суммами платежей
// Фильтрует строки движений с нулевыми значениями ресурсов
// Параметры:
//  ТаблицаСуммРасходов  -  <Массив> - массив таблиц поступления расходов со структурой колонок,
// Возвращаемое значение:
// ТаблицаПоступленияРасходов  -  <ТаблицаЗначений>  -  таблица движений прихода по регистру "РасходыПриУСН"
Функция ПодготовитьТаблицуПоступленияРасходовУСН(ТаблицаСуммРасходов) Экспорт

	Если ТаблицаСуммРасходов = Неопределено ИЛИ ТаблицаСуммРасходов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаПоступленияРасходов = РегистрыНакопления.РасходыПриУСН.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаПоступленияРасходов.Колонки.Добавить("ЭтоТовар",		Новый ОписаниеТипов("Булево"));
	ТаблицаПоступленияРасходов.Колонки.Добавить("ЭтоМатериал",	Новый ОписаниеТипов("Булево"));
	
	Для каждого СтрокаРасхода Из ТаблицаСуммРасходов Цикл
		
		СтрокаРасхода.Сумма = СтрокаРасхода.Сбор + СтрокаРасхода.Пошлина + СтрокаРасхода.НДС;
		
		Если СтрокаРасхода.Сумма = 0 И СтрокаРасхода.НДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаПриход = ТаблицаПоступленияРасходов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаРасхода);
		
	КонецЦикла;
	
	Возврат ТаблицаПоступленияРасходов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""ГТД по импорту""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	ПолеТовары =
	"	Таб.Товары.(
	|		КОЛИЧЕСТВО(Ссылка) КАК ЕстьТовары
	|	)";
	
	Результат.Вставить("Товары", ПолеТовары);
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБНОВЛЕНИЯ

Процедура ЗаполнитьОтражениеВУСНАктуальныхДокументов() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГТДИмпортТовары.Ссылка
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|ГДЕ
	|	ГТДИмпортТовары.ОтражениеВУСН = ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка)
	|	И ГТДИмпортТовары.Ссылка.Дата >= &НачалоАктуальногоПериода"
	;
	
	Запрос.УстановитьПараметр("НачалоАктуальногоПериода", '20140101');
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Для каждого СтрокаТовар Из ДокументОбъект.Товары Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТовар.ОтражениеВУСН) Тогда
				СтрокаТовар.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось заполнить колонку ""Расходы (НУ)"" в документе ""ГТД по импорту""'"),
				УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьОтражениеВУСНДокументовПрошлыхЛет(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	|	ГТДИмпортТовары.Ссылка
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|ГДЕ
	|	ГТДИмпортТовары.ОтражениеВУСН = ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка)"
	;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Блокируем объект от изменения другими сеансами.
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ГТДИмпорт");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Если документ ранее был удален или обработан другими сеансами, пропускаем его.
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
			ЗаписыватьДокумент = Ложь;
			
			Для каждого СтрокаТовар Из ДокументОбъект.Товары Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТовар.ОтражениеВУСН) Тогда
					СтрокаТовар.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
					ЗаписыватьДокумент = Истина;
				КонецЕсли;
			КонецЦикла;
			
			// Если колонку уже заполнили пользователи, пропускаем документ.
			Если НЕ ЗаписыватьДокумент Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось заполнить колонку ""Расходы (НУ)"" в документе ""%1"" по причине:
					|%2'"), 
					Выборка.Ссылка,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,, 
				Выборка.Регистратор, ТекстСообщения);
			
		КонецПопытки;
	
	КонецЦикла;
	
	Если ОбъектовОбработано + ПроблемныхОбъектов = 0 Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
		
	Иначе
		
		Параметры.ОбработкаЗавершена = Ложь;

		Если ОбъектовОбработано = 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедуре Документы.ГТДИмпорт.ЗаполнитьОтражениеВУСНДокументовПрошлыхЛет
					|не удалось заполнить колонку ""Расходы (НУ)"" в %1 документах.'"),
					ПроблемныхОбъектов);
			ВызватьИсключение ТекстСообщения;
		Иначе
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,,,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Процедура Документы.ГТДИмпорт.ЗаполнитьОтражениеВУСНДокументовПрошлыхЛет
						|обработала очередную порцию данных: %1 документов'"), 
						ОбъектовОбработано));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецЕсли