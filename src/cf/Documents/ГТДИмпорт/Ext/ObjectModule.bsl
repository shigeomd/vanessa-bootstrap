#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата) Тогда
		НДСВключенВСтоимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	Если НЕ ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом)
		И ЗначениеЗаполнено(Организация)
		И ЗначениеЗаполнено(Контрагент)
		И ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Организация, Контрагент, ДоговорКонтрагента);
		СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
	КонецЕсли;

	Если Разделы.Количество() = 0 Тогда
		Раздел = ДобавитьРаздел();
	КонецЕсли;
	
	НДСВключенВСтоимость = НЕ УчетнаяПолитика.ПлательщикНДС(Организация, Дата);
	ОтразитьВычетНДСПриРегистрацииСчетаФактуры = Дата > '20120101'
		И НЕ УчетнаяПолитика.РаздельныйУчетНДС(Организация, Дата)
		И НЕ НДСВключенВСтоимость;
	УпрощенныйУчетНДС = УчетнаяПолитика.УпрощенныйУчетНДС(Организация, Дата);
	
	НДСПредъявленКВычету = УпрощенныйУчетНДС ИЛИ ОтразитьВычетНДСПриРегистрацииСчетаФактуры;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;

	ЕстьВалютныеСуммы = Разделы.НайтиСтроки(Новый Структура("ПошлинаВВалюте", Истина)).Количество() > 0;
	Если НЕ ЕстьВалютныеСуммы Тогда
		ЕстьВалютныеСуммы = Разделы.НайтиСтроки(Новый Структура("НДСВВалюте", Истина)).Количество() > 0;
	КонецЕсли;

	// Условные проверки реквизитов шапки:
	Если ТаможенныйСборВал = 0 И
		ТаможенныйШтрафВал = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаРасчетовСКонтрагентомВал");
		Если НЕ ЕстьВалютныеСуммы Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
		КонецЕсли;
	КонецЕсли;

	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата);
	Если НЕ ПлательщикНалогаНаПрибыль Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СчетУчетаНУ");
	КонецЕсли;

	// Условные проверки реквизитов табличных частей:
	МассивНепроверяемыхРеквизитов.Добавить("Разделы.СуммаПошлины");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.СуммаНДС");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.СчетУчетаНДС");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.СтатьяЗатратНУ");

	ТаблицыДокумента = ПолучитьТаблицыДляПроверкиЗаполнения();

	ВыборкаДокументов = ТаблицыДокумента.ТаблицаРазделов.Выбрать();
	Пока ВыборкаДокументов.Следующий() Цикл

		Префикс = "Разделы[%1].";
		Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Префикс, Формат(ВыборкаДокументов.НомерСтроки - 1, "ЧН=0; ЧГ="));
		ИмяСписка = НСтр("ru = 'Разделы'");

		Если ВыборкаДокументов.ТоварыКоличествоСтрок = 0 Тогда
			ТекстСообщения = НСтр("ru = 'По разделу ""%1"" отсутствуют строки с номенклатурой'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
														Формат(ВыборкаДокументов.НомерСтроки, "ЧН=0; ЧГ="));

			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Список", "Заполнение", НСтр("ru = 'Товары'"),
				ВыборкаДокументов.Товары, "Товары", ТекстСообщения);
			Поле = "Товары";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			Продолжить;
		КонецЕсли;

		Если ВыборкаДокументов.ТоварыСуммаПошлины <> ВыборкаДокументов.СуммаПошлины Тогда
			ТекстСообщения = НСтр("ru = 'По разделу ""%1"" сумма пошлины не совпадает с итогом по товарам раздела'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
														Формат(ВыборкаДокументов.НомерСтроки, "ЧН=0; ЧГ="));

			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность", НСтр("ru = 'Сумма пошлины'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка, ТекстСообщения);
			Поле = Префикс + "СуммаПошлины";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

		Если ВыборкаДокументов.ФактурнаяСтоимость <> ВыборкаДокументов.ТаможеннаяСтоимость Тогда
			ТекстСообщения = НСтр("ru = 'Не совпадает фактурная стоимость и таможенная стоимость по разделу ""%1"" '");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
														Формат(ВыборкаДокументов.НомерСтроки, "ЧН=0; ЧГ="));

			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность", НСтр("ru = 'Таможенная стоимость'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка, ТекстСообщения);
			Поле = Префикс + "ТаможеннаяСтоимость";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект");
		КонецЕсли;

		Если ВыборкаДокументов.ТоварыСуммаНДС <> ВыборкаДокументов.СуммаНДС Тогда
			ТекстСообщения = НСтр("ru = 'По разделу ""%1"" сумма НДС не совпадает с итогом по товарам раздела'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
														Формат(ВыборкаДокументов.НомерСтроки, "ЧН=0; ЧГ="));

			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность", НСтр("ru = 'Сумма НДС'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка, ТекстСообщения);
			Поле = Префикс + "СуммаНДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

		Если ЗначениеЗаполнено(ВыборкаДокументов.СуммаНДС) И НЕ ЗначениеЗаполнено(ВыборкаДокументов.СтавкаНДС) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", НСтр("ru = 'Ставка НДС'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка);
			Поле = Префикс + "СтавкаНДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВыборкаДокументов.СуммаНДС)
			И ВыборкаДокументов.СтавкаНДС <> Перечисления.СтавкиНДС.БезНДС
			И ВыборкаДокументов.СтавкаНДС <> Перечисления.СтавкиНДС.НДС0 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", НСтр("ru = 'Сумма НДС'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка);
			Поле = Префикс + "СуммаНДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

	КонецЦикла;

	ВыборкаДокументов = ТаблицыДокумента.ТаблицаТоваров.Выбрать();
	Пока ВыборкаДокументов.Следующий() Цикл

		Префикс = "Товары[%1].";
		Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Префикс, Формат(ВыборкаДокументов.НомерСтроки - 1, "ЧН=0; ЧГ="));
		ИмяСписка = НСтр("ru = 'Товары'");

		Если ВыборкаДокументов.СтатьяНУОбязательна И НЕ ЗначениеЗаполнено(ВыборкаДокументов.СтатьяЗатратНУ) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", НСтр("ru = 'Статья затрат (НУ)'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка);
			Поле = Префикс + "СтатьяЗатратНУ";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

		Если ЗначениеЗаполнено(ВыборкаДокументов.СуммаНДС) И НЕ ЗначениеЗаполнено(ВыборкаДокументов.СчетУчетаНДС) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", НСтр("ru = 'Счет учета НДС'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка);
			Поле = Префикс + "СчетУчетаНДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		//Проверка способа учета НДС
		Если РаздельныйУчетНДСНаСчете19 И НЕ ЗначениеЗаполнено(ВыборкаДокументов.СпособУчетаНДС)
			И ВыборкаДокументов.СуммаНДС <> 0 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Способ учета НДС'"),
				ВыборкаДокументов.НомерСтроки, ИмяСписка);
			Поле = Префикс + "СпособУчетаНДС";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);	
		КонецЕсли;	

	КонецЦикла;

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Организация, Дата);
	
	Если НЕ РаздельныйУчетНДСНаСчете19 Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СпособУчетаНДС");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();

	НДСПредъявленКВычету = Ложь;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ГТДИмпорт.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ (АНАЛИЗ ОСТАТКОВ И Т.П.)

	// Таблица взаиморасчетов
	ТаблицаВзаиморасчетов = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		Неопределено,
		ПараметрыПроведения.ЗачетАвансовРеквизиты, 
		Отказ);

	// Распределение сумм таможенного сбора:
	РеквизитыТаможенныйСбор = ПараметрыПроведения.ТаможенныйСборРеквизиты[0];
	ЕстьСборВРублях = РеквизитыТаможенныйСбор.ТаможенныйСбор > 0 И ПараметрыПроведения.ТаможенныйСборВРублях.Количество() > 0;
	Если ЕстьСборВРублях Тогда
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
			РеквизитыТаможенныйСбор.ТаможенныйСбор, ПараметрыПроведения.ТаможенныйСборВРублях,
			"СуммаВзаиморасчетов", "ФактурнаяСтоимость");
		Для Каждого СтрокаТаблицы Из ПараметрыПроведения.ТаможенныйСборВРублях Цикл
			СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаВзаиморасчетов;
			СтрокаТаблицы.СуммаБУ  = СтрокаТаблицы.СуммаРуб;
			СтрокаТаблицы.СуммаНУ  = СтрокаТаблицы.СуммаРуб;
		КонецЦикла;
	КонецЕсли;
	ЕстьСборВВалюте = РеквизитыТаможенныйСбор.ТаможенныйСборВал > 0 И ПараметрыПроведения.ТаможенныйСборВВалюте.Количество() > 0;
	Если ЕстьСборВВалюте Тогда
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
			РеквизитыТаможенныйСбор.ТаможенныйСборВал, ПараметрыПроведения.ТаможенныйСборВВалюте,
			"СуммаВзаиморасчетов", "ФактурнаяСтоимость");
		Для Каждого СтрокаТаблицы Из ПараметрыПроведения.ТаможенныйСборВВалюте Цикл
			СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаВзаиморасчетов * РеквизитыТаможенныйСбор.КоэффициентРуб;
			СтрокаТаблицы.СуммаБУ  = СтрокаТаблицы.СуммаРуб;
			СтрокаТаблицы.СуммаНУ  = СтрокаТаблицы.СуммаРуб;
		КонецЦикла;
	КонецЕсли;
	
	УСНРеквизитыВВалюте = ПараметрыПроведения.УСНРеквизитыВВалюте[0];
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		УСНРеквизитыВВалюте.ТаможенныйСбор,
		ПараметрыПроведения.РасходыУСНВВалюте,
		"Сбор", "ФактурнаяСтоимость");
		
	УСНРеквизитыВРублях = ПараметрыПроведения.УСНРеквизитыВРублях[0];
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		УСНРеквизитыВРублях.ТаможенныйСбор,
		ПараметрыПроведения.РасходыУСНВРублях,
		"Сбор", "ФактурнаяСтоимость");
		
	ТаблицаПоступленияРасходовУСНВВалюте = Документы.ГТДИмпорт.ПодготовитьТаблицуПоступленияРасходовУСН(ПараметрыПроведения.РасходыУСНВВалюте);
	ТаблицаПоступленияРасходовУСНВРублях = Документы.ГТДИмпорт.ПодготовитьТаблицуПоступленияРасходовУСН(ПараметрыПроведения.РасходыУСНВРублях);

	// Учет доходов и расходов ИП
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		РеквизитыТаможенныйСбор.ТаможенныйСбор,
		ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйСбор,
		"СуммаВзаиморасчетов", "ФактурнаяСтоимость");
		
	Для Каждого СтрокаТаблицы Из ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйСбор Цикл
		СтрокаТаблицы.Сумма = СтрокаТаблицы.СуммаВзаиморасчетов;
	КонецЦикла;
	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
		ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйСбор, ПараметрыПроведения.ПоступлениеМПЗИПТаблицаТоваров);
		
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		РеквизитыТаможенныйСбор.ТаможенныйСборВал,
		ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйСборВал,
		"СуммаВзаиморасчетов", "ФактурнаяСтоимость");
		
	Для Каждого СтрокаТаблицы Из ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйСборВал Цикл
		СтрокаТаблицы.Сумма = СтрокаТаблицы.СуммаВзаиморасчетов * РеквизитыТаможенныйСбор.КоэффициентРуб;
	КонецЦикла;
	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
		ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйСборВал, ПараметрыПроведения.ПоступлениеМПЗИПТаблицаТоваров);
		
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
		ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйШтраф, ПараметрыПроведения.ПоступлениеМПЗИПТаблицаТоваров);
		
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
		ПараметрыПроведения.ПоступлениеМПЗИПТаможенныйШтрафВал, ПараметрыПроведения.ПоступлениеМПЗИПТаблицаТоваров);
		
	ТаблицаТоваровИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
		ПараметрыПроведения.ПоступлениеМПЗИПТаблицаТоваров,
		ПараметрыПроведения.ПоступлениеМПЗИПРеквизиты);
		
	ТаблицаОстатковОСНМАИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуОстатковОСНМА(
		ТаблицаТоваровИП,
		ПараметрыПроведения.ПоступлениеМПЗИПРеквизиты);
		
	СтруктураТаблицМПЗ	= Новый Структура("ТаблицаТоваров", ТаблицаТоваровИП);
	
	ТаблицаВзаиморасчетовБезНДСИП = Документы.ГТДИмпорт.ПодготовитьТаблицуВзаиморасчетовБезНДСИП(
		ТаблицаВзаиморасчетов, ПараметрыПроведения.ТоварыНДСвРублях, ПараметрыПроведения.ТоварыНДСвВалюте);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Зачет аванса
	УчетВзаиморасчетов.СформироватьДвиженияЗачетАвансов(
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты, 
		Движения, 
		Отказ);
		
	// Пошлина за товары
	УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.ТаблицаПошлина,
		ПараметрыПроведения.ТаблицаПошлинаРеквизиты, Движения, Отказ);

	// Таможенный сбор
	Если ЕстьСборВРублях Тогда
		УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.ТаможенныйСборВРублях,
			ПараметрыПроведения.ТаможенныйСборРеквизиты, Движения, Отказ);
	КонецЕсли;
	Если ЕстьСборВВалюте Тогда
		УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.ТаможенныйСборВВалюте,
			ПараметрыПроведения.ТаможенныйСборРеквизиты, Движения, Отказ);
	КонецЕсли;

	// Таможенный штраф
	УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.ШтрафВРублях,
		ПараметрыПроведения.ШтрафРеквизиты, Движения, Отказ);
	УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.ШтрафВВалюте,
		ПараметрыПроведения.ШтрафРеквизиты, Движения, Отказ);

	// НДС, уплаченный на таможне в валюте
	РеквизитыНДСВал = ПараметрыПроведения.РеквизитыНДСВВалюте[0];
	ЕстьНДСВСтоимостиВал = РеквизитыНДСВал.НДСВключенВСтоимость И ПараметрыПроведения.НДСВСтоимостиВВалюте.Количество() > 0;
	
	Если ЕстьНДСВСтоимостиВал Тогда
		УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.НДСВСтоимостиВВалюте,
			ПараметрыПроведения.РеквизитыНДСВВалюте, Движения, Отказ);
	КонецЕсли;
		
	УчетНДС.СформироватьДвиженияУплатаНДСнаТаможне(
		ПараметрыПроведения.ТоварыНДСвВалюте, ТаблицаВзаиморасчетов, ПараметрыПроведения.РеквизитыНДСвВалюте, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияУплатаНДСнаТаможне(
		ПараметрыПроведения.ТоварыНДСвВалюте, ПараметрыПроведения.РеквизитыНДСвВалюте, Движения, Отказ);
		
	// НДС, уплаченный на таможне в рублях
	РеквизитыНДСРуб = ПараметрыПроведения.РеквизитыНДСВРублях[0];
	ЕстьНДСВСтоимостиРуб = РеквизитыНДСРуб.НДСВключенВСтоимость И ПараметрыПроведения.НДСВСтоимостиВРублях.Количество() > 0;
	
	Если ЕстьНДСВСтоимостиРуб Тогда
		УчетТоваров.СформироватьДвиженияИзменениеСебестоимостиОстатковТоваров(ПараметрыПроведения.НДСВСтоимостиВРублях,
			ПараметрыПроведения.РеквизитыНДСВРублях, Движения, Отказ);
	КонецЕсли;
		
	УчетНДС.СформироватьДвиженияУплатаНДСнаТаможне(
		ПараметрыПроведения.ТоварыНДСвРублях, ТаблицаВзаиморасчетов, ПараметрыПроведения.РеквизитыНДСвРублях, Движения, Отказ);
	УчетНДСРаздельный.СформироватьДвиженияУплатаНДСнаТаможне(
		ПараметрыПроведения.ТоварыНДСвРублях, ПараметрыПроведения.РеквизитыНДСвРублях, Движения, Отказ);

	// УСН
	СуммаСторноРасхода = 0;
	УчетУСН.ПоступлениеРасходовУСН(
		ТаблицаПоступленияРасходовУСНВВалюте, ПараметрыПроведения.УСНРеквизитыВВалюте, СуммаСторноРасхода, Движения, Отказ);
	УчетУСН.ПоступлениеРасходовУСН(
		ТаблицаПоступленияРасходовУСНВРублях, ПараметрыПроведения.УСНРеквизитыВРублях, СуммаСторноРасхода, Движения, Отказ);

	Если НЕ Отказ И Движения.РасходыПриУСН.Количество()>0 Тогда
		Движения.РасходыПриУСН.Записать(Истина);
		Движения.РасходыПриУСН.Записывать = Ложь;
	КонецЕсли;
	
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект);
	
	// Учет доходов и расходов ИП
	
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеМПЗ(СтруктураТаблицМПЗ,
		ТаблицаВзаиморасчетовБезНДСИП, ТаблицаОстатковОСНМАИП, ПараметрыПроведения.ПоступлениеМПЗИПРеквизиты, Движения, Отказ);
	
	// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкаВалютныхОстатковПоПроводкамДокумента(
		ПараметрыПроведения.ПереоценкаВалютныхОстатковРеквизиты, Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.ПереоценкаВалютныхОстатковРеквизиты, Движения, Отказ);

	УчетУСН.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.ПереоценкаВалютныхОстатковРеквизиты, Движения, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Если НЕ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия
			И НЕ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары
			И НЕ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		// Контрагент у нас другой
		Контрагент         = Неопределено;
		ДоговорКонтрагента = Неопределено;
		Сделка             = Неопределено;
		
		// Заполним Табличную часть
		Раздел = ДобавитьРаздел();
		
		ДанныеОбъекта = Новый Структура("Дата, Организация, Склад, ВалютаДокумента, КурсДокумента, КратностьДокумента");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		
		ТоварыПоДаннымПоступления = Документы.ГТДИмпорт.ТоварыПоДаннымПоступления(ДанныеОбъекта, Основание, 1);
		Если ТоварыПоДаннымПоступления.Количество() > 0 Тогда
			Товары.Загрузить(ТоварыПоДаннымПоступления);
		КонецЕсли;
		
		ВсегоСтоимость = 0;
		ВсегоПошлина   = 0;
		ВсегоНДС       = 0;
		
		ПосчитатьИтогиПоРазделу(1, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС);
		
		Раздел.ТаможеннаяСтоимость = ВсегоСтоимость;
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьРаздел() Экспорт
	
	НовыйРаздел = Разделы.Добавить();
	
	НовыйРаздел.НДСВВалюте     = Ложь;
	НовыйРаздел.ПошлинаВВалюте = ЗначениеЗаполнено(ДоговорКонтрагента);
	НовыйРаздел.СтавкаНДС      = Перечисления.СтавкиНДС.НДС18;
	
	Возврат НовыйРаздел;
	
КонецФункции

Процедура ПосчитатьИтогиПоРазделу(НомерРаздела, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС)  Экспорт
	
	ВсегоСтоимость = 0;
	ВсегоПошлина   = 0;
	ВсегоНДС       = 0;
	МассивСтрок    = Товары.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));
	
	Для каждого ЭлементМассива Из МассивСтрок Цикл
		ВсегоСтоимость = ВсегоСтоимость + ЭлементМассива.ФактурнаяСтоимость;
		ВсегоПошлина   = ВсегоПошлина   + ЭлементМассива.СуммаПошлины;
		ВсегоНДС       = ВсегоНДС       + ЭлементМассива.СуммаНДС;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицыДляПроверкиЗаполнения()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Разделы", Разделы.Выгрузить(, "НомерСтроки, СуммаПошлины, СуммаНДС, СтавкаНДС, ТаможеннаяСтоимость"));
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(, "НомерСтроки, Номенклатура, НомерРаздела, СчетУчетаНДС, СуммаНДС, СпособУчетаНДС, СуммаПошлины, ФактурнаяСтоимость, СчетУчетаНУ, СтатьяЗатратНУ"));
	МассивОписаний = Новый Массив;
	МассивОписаний.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	МассивОписаний.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидыСубконтоСтатейНУ", МассивОписаний);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВремТаблица.НомерСтроки,
	|	ВремТаблица.Номенклатура,
	|	ВремТаблица.НомерРаздела,
	|	ВремТаблица.СчетУчетаНДС,
	|	ВремТаблица.СуммаНДС,
	|	ВремТаблица.СпособУчетаНДС,
	|	ВремТаблица.СуммаПошлины,
	|	ВремТаблица.ФактурнаяСтоимость,
	|	ВремТаблица.СчетУчетаНУ,
	|	ВремТаблица.СтатьяЗатратНУ
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК ВремТаблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВремТаблица.НомерРаздела,
	|	ВремТаблица.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремТаблица.НомерСтроки,
	|	ВремТаблица.ТаможеннаяСтоимость,
	|	ВремТаблица.СуммаПошлины,
	|	ВремТаблица.СуммаНДС,
	|	ВремТаблица.СтавкаНДС
	|ПОМЕСТИТЬ Разделы
	|ИЗ
	|	&Разделы КАК ВремТаблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВремТаблица.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Разделы.НомерСтроки,
	|	Разделы.СуммаПошлины,
	|	Разделы.ТаможеннаяСтоимость,
	|	Разделы.СуммаНДС,
	|	Разделы.СтавкаНДС,
	|	Товары.ТоварыКоличествоСтрок,
	|	Товары.ТоварыСуммаПошлины,
	|	Товары.ТоварыСуммаНДС,
	|	Товары.ФактурнаяСтоимость
	|ИЗ
	|	Разделы КАК Разделы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Товары.НомерРаздела КАК НомерРаздела,
	|			СУММА(Товары.СуммаПошлины) КАК ТоварыСуммаПошлины,
	|			СУММА(Товары.ФактурнаяСтоимость) КАК ФактурнаяСтоимость,
	|			СУММА(ВЫБОР
	|					КОГДА Товары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ) КАК ТоварыКоличествоСтрок,
	|			СУММА(Товары.СуммаНДС) КАК ТоварыСуммаНДС
	|		ИЗ
	|			Товары КАК Товары
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Товары.НомерРаздела) КАК Товары
	|		ПО Разделы.НомерСтроки = Товары.НомерРаздела
	|ГДЕ
	|	(Разделы.СуммаНДС <> Товары.ТоварыСуммаНДС
	|			ИЛИ Разделы.СуммаПошлины <> Товары.ТоварыСуммаПошлины
	|			ИЛИ Разделы.ТаможеннаяСтоимость <> Товары.ФактурнаяСтоимость
	|			ИЛИ Разделы.СуммаНДС > 0
	|				И Разделы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	счета.Ссылка КАК Счет,
	|	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|				КОГДА СчетаВидыСубконто.ВидСубконто В (&ВидыСубконтоСтатейНУ)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ, ЛОЖЬ)) КАК СтатьяНУОбязательна
	|ПОМЕСТИТЬ Счета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК счета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК СчетаВидыСубконто
	|		ПО счета.Ссылка = СчетаВидыСубконто.Ссылка
	|ГДЕ
	|	счета.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Товары.СчетУчетаНУ
	|			ИЗ
	|				Товары КАК Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	счета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.СчетУчетаНУ,
	|	ЕСТЬNULL(Счета.СтатьяНУОбязательна, ЛОЖЬ) КАК СтатьяНУОбязательна,
	|	Товары.СтатьяЗатратНУ,
	|	Товары.СчетУчетаНДС,
	|	Товары.СуммаНДС,
	|	Товары.СпособУчетаНДС
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Счета КАК Счета
	|		ПО Товары.СчетУчетаНУ = Счета.Счет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";

	РезультатыЗапроса = Запрос.ВыполнитьПакет();

	Таблицы = Новый Структура;
	Таблицы.Вставить("ТаблицаРазделов", РезультатыЗапроса[2]);
	Таблицы.Вставить("ТаблицаТоваров", РезультатыЗапроса[4]);

	Возврат Таблицы;

КонецФункции

#КонецЕсли
