////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

	// Активизировать первую непустую табличную часть
	СписокТабличныхЧастей = Новый СписокЗначений;
	СписокТабличныхЧастей.Добавить("Спецодежда",   "Спецодежда");
	СписокТабличныхЧастей.Добавить("Спецоснастка", "Спецоснастка");
	СписокТабличныхЧастей.Добавить("ИнвентарьИХозяйственныеПринадлежности", "ИнвентарьИХозяйственныеПринадлежности");

	АктивизироватьТабличнуюЧасть = ОбщегоНазначенияБПВызовСервера.ПолучитьПервуюНепустуюВидимуюТабличнуюЧасть(
		ЭтаФорма, СписокТабличныхЧастей);
	ОбщегоНазначенияБПВызовСервера.АктивизироватьЭлементФормы(ЭтаФорма, АктивизироватьТабличнуюЧасть);
		
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)

	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатуры.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение, ИсточникВыбора.ИмяТаблицы);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеСписаниеМатериаловИзЭксплуатации";
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);

	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;

	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СпособСписанияРасходовПриИзменении(Элемент)

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СчетДтПриИзменении(Элемент)

	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Объект.СчетДт);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Спецодежда

&НаКлиенте
Процедура СпецодеждаНоменклатураПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Спецодежда.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы  = Новый Структура(
		"Номенклатура, ПартияМатериаловВЭксплуатации,
		|Количество, СчетПередачи");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СпецодеждаПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);

КонецПроцедуры

&НаКлиенте
Процедура СпецодеждаПартияМатериаловВЭксплуатацииПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Спецодежда.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы  = Новый Структура(
		"Номенклатура, ПартияМатериаловВЭксплуатации,
		|Количество, СчетПередачи");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СпецодеждаПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Спецоснастка

&НаКлиенте
Процедура СпецоснасткаПриИзменении(Элемент)

	ОтмечатьПустоеПодразделение = Объект.Спецоснастка.Количество() > 0;

КонецПроцедуры

&НаКлиенте
Процедура СпецоснасткаНоменклатураПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Спецоснастка.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура(
		"Номенклатура, ПартияМатериаловВЭксплуатации,
		|Количество, СчетПередачи");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СпецоснасткаПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);

КонецПроцедуры

&НаКлиенте
Процедура СпецоснасткаПартияМатериаловВЭксплуатацииПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Спецоснастка.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура(
		"Номенклатура, ПартияМатериаловВЭксплуатации,
		|Количество, СчетПередачи");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СпецоснасткаПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СпецодеждаЗаполнитьПоОстаткам(Команда)

	Если НЕ ПроверитьВозможностьЗаполненияТабличнойЧасти() Тогда
		Возврат;
	КонецЕсли;

	Если Объект.Спецодежда.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='При заполнении табличная часть будет очищена.
			|Продолжить?'");
		СИстекшимСрокомПолезногоИспользования = Ложь;
		Оповещение = Новый ОписаниеОповещения(
			"ВопросПриЗаполненииСпецодеждыПоОстаткамЗавершение", ЭтотОбъект, СИстекшимСрокомПолезногоИспользования);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьСпецодеждуПоОстаткамВЭксплуатации();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СпецодеждаЗаполнитьПоОстаткамСИстекшимСрокомПолезногоИспользования(Команда)

	Если НЕ ПроверитьВозможностьЗаполненияТабличнойЧасти() Тогда
		Возврат;
	КонецЕсли;

	Если Объект.Спецодежда.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='При заполнении табличная часть будет очищена.
			|Продолжить?'");
		СИстекшимСрокомПолезногоИспользования = Истина;
		Оповещение = Новый ОписаниеОповещения(
			"ВопросПриЗаполненииСпецодеждыПоОстаткамЗавершение", ЭтотОбъект, СИстекшимСрокомПолезногоИспользования);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьСпецодеждуПоОстаткамВЭксплуатации(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецодеждаПодбор(Команда)

	ДействиеПодбор("Спецодежда");

КонецПроцедуры

&НаКлиенте
Процедура СпецоснасткаЗаполнитьПоОстаткам(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.ПодразделениеОрганизации) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Не указано подразделение организации!
			|Заполнение невозможно!'"));
		Возврат;
	КонецЕсли;

	Если НЕ ПроверитьВозможностьЗаполненияТабличнойЧасти() Тогда
		Возврат;
	КонецЕсли;

	Если Объект.Спецоснастка.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='При заполнении табличная часть будет очищена.
			|Продолжить?'");
		СИстекшимСрокомПолезногоИспользования = Ложь;
		Оповещение = Новый ОписаниеОповещения(
			"ВопросПриЗаполненииСпецоснасткуПоОстаткамЗавершение", ЭтотОбъект, СИстекшимСрокомПолезногоИспользования);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьСпецоснасткуПоОстаткамВЭксплуатации();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СпецоснасткаЗаполнитьПоОстаткамСИстекшимСрокомПолезногоИспользования(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.ПодразделениеОрганизации) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Не указано подразделение организации!
			|Заполнение невозможно!'"));
		Возврат;
	КонецЕсли;

	Если НЕ ПроверитьВозможностьЗаполненияТабличнойЧасти() Тогда
		Возврат;
	КонецЕсли;

	Если Объект.Спецоснастка.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='При заполнении табличная часть будет очищена.
			|Продолжить?'");
		СИстекшимСрокомПолезногоИспользования = Истина;
		Оповещение = Новый ОписаниеОповещения(
			"ВопросПриЗаполненииСпецоснасткуПоОстаткамЗавершение", ЭтотОбъект, СИстекшимСрокомПолезногоИспользования);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьСпецоснасткуПоОстаткамВЭксплуатации(Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СпецоснасткаПодбор(Команда)

	ДействиеПодбор("Спецоснастка");

КонецПроцедуры

&НаКлиенте
Процедура ИнвентарьИХозяйственныеПринадлежностиЗаполнитьПоОстаткам(Команда)

	Если Объект.ИнвентарьИХозяйственныеПринадлежности.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗаполненияИнвентаряПоОстаткамЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='При заполнении табличная часть будет очищена.
			|Продолжить?'");
		ПоказатьВопрос(Оповещение,ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьИнвентарьИХозяйственныеПринадлежностиПоОстаткамВЭксплуатации();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИнвентарьИХозяйственныеПринадлежностиПодбор(Команда)

	ДействиеПодбор("ИнвентарьИХозяйственныеПринадлежности");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	
	// ПодразделениеОрганизации
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодразделениеОрганизации");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтмечатьПустоеПодразделение", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	УстановитьСостояниеДокумента();

	ТекущаяДатаДокумента = Объект.Дата;
	
	ОтмечатьПустоеПодразделение = Объект.Спецоснастка.Количество() > 0;

	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Объект.СчетДт);

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	Элементы.ГруппаСчетУчетаЗатрат.Видимость = 
		Объект.СпособСписанияРасходов = ПредопределенноеЗначение("Перечисление.СпособыСписанияРасходов.ВДебетСчетаУказанногоВДокументе");
		
	// Доступность взаимосвязанных полей
	Элементы.ПодразделениеОрганизации.Доступность = ЗначениеЗаполнено(Объект.Организация);

КонецПроцедуры

// Серверная обработка изменения реквизитов:

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ДатаОбработатьИзменение();
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ДатаОбработатьИзменение()

	УстановитьФункциональныеОпцииФормы();

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	ПодразделениеПоУмолчанию = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
	Если БухгалтерскийУчетПереопределяемый.ПодразделениеПринадлежитОрганизации(ПодразделениеПоУмолчанию, Объект.Организация) Тогда
		Объект.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
	КонецЕсли;
	
	ЗаполнитьСчетаУчетаВТабличнойЧастиНаСервере();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетаУчетаВТабличнойЧастиНаСервере(ИмяТабличнойЧасти = "")

	Если ПустаяСтрока(ИмяТабличнойЧасти) ИЛИ ИмяТабличнойЧасти = "Спецодежда" Тогда
		Документы.СписаниеМатериаловИзЭксплуатации.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Спецодежда");
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяТабличнойЧасти) ИЛИ ИмяТабличнойЧасти = "Спецоснастка" Тогда
		Документы.СписаниеМатериаловИзЭксплуатации.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Спецоснастка");
	КонецЕсли;

КонецПроцедуры

// Внешний вид, содержание надписей и т.п.

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма, Счет)

	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоДт1", "СубконтоДт2", "СубконтоДт3");

	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоДт1", "ЗаголовокСубконтоДт2",
		"ЗаголовокСубконтоДт3");
	
	ЗначенияСубконто = Новый Соответствие;
	ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы"), 
		БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа());

	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляОбъекта, ЗаголовкиПолей);
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Счет, Форма.Объект, ПоляОбъекта,, ЗначенияСубконто);

КонецПроцедуры

// Обслуживание подбора

&НаКлиенте
Процедура ДействиеПодбор(ИмяТаблицы)

	Перем Команда, Валюта;

	СписокЗапросов = Новый СписокЗначений;
	СписокЗапросов.Добавить(,"По справочнику");

	ЗаголовокПодбора = НСтр("ru = 'Подбор номенклатуры в %1 (%2)'");
	Если ИмяТаблицы = "Спецодежда" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Спецодежда'");
	ИначеЕсли ИмяТаблицы = "Спецоснастка" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Спецоснастка'");
	ИначеЕсли ИмяТаблицы = "ИнвентарьИХозяйственныеПринадлежности" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Инвентарь и хозяйственные принадлежности'");
	КонецЕсли;
	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ЗаголовокПодбора,
		Объект.Ссылка,
		ПредставлениеТаблицы);

	ВременнаяДатаРасчетов = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);

	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("ДатаРасчетов"       , ВременнаяДатаРасчетов);
	СтруктураПараметровПодбора.Вставить("ТипЦен"             , Неопределено);
	СтруктураПараметровПодбора.Вставить("Валюта"             , Валюта);
	СтруктураПараметровПодбора.Вставить("ДоговорКонтрагента" , Неопределено);
	СтруктураПараметровПодбора.Вставить("Контрагент"         , Неопределено);
	СтруктураПараметровПодбора.Вставить("Организация"        , Объект.Организация);
	СтруктураПараметровПодбора.Вставить("Склад"              , Неопределено);
	СтруктураПараметровПодбора.Вставить("Подразделение"      , Объект.ПодразделениеОрганизации);
	СтруктураПараметровПодбора.Вставить("ЕстьКоличество"     , Истина);
	СтруктураПараметровПодбора.Вставить("ЕстьЦена"           , Ложь);
	СтруктураПараметровПодбора.Вставить("Заголовок"          , ЗаголовокПодбора);
	СтруктураПараметровПодбора.Вставить("СписокПодборов"     , СписокЗапросов);
	СтруктураПараметровПодбора.Вставить("ИмяТаблицы"         , ИмяТаблицы);
	СтруктураПараметровПодбора.Вставить("Услуги"             , Ложь);

	ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.Форма", СтруктураПараметровПодбора, ЭтаФорма, УникальныйИдентификатор);

КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение, ИмяТаблицы)

	ТаблицаМатериалов = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
	
	Если ИмяТаблицы <> "ИнвентарьИХозяйственныеПринадлежности" Тогда
		ДанныеОбъекта = Новый Структура("Дата, Организация");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
		
		СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
			ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаМатериалов, "Номенклатура", Истина), , ДанныеОбъекта.Дата);
	КонецЕсли;
		
	Для Каждого СтрокаМатериала Из ТаблицаМатериалов Цикл
		
		СтрокаТабличнойЧасти = Объект[ИмяТаблицы].Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаМатериала);
		
		Если ИмяТаблицы <> "ИнвентарьИХозяйственныеПринадлежности" Тогда
			СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
			Документы.СписаниеМатериаловИзЭксплуатации.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
				ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТаблицы, СчетаУчета);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Прочий функционал:

&НаСервере
Процедура ЗаполнитьСпецодеждуПоОстаткамВЭксплуатации(СИстекшимСрокомПолезногоИспользования = Ложь)

	Объект.Спецодежда.Очистить();

	УчетМатериаловВЭксплуатации.ЗаполнитьСпецодеждуПоОстаткамВЭксплуатации(
		Объект, 
		Объект.Спецодежда, 
		,
		СИстекшимСрокомПолезногоИспользования); 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпецоснасткуПоОстаткамВЭксплуатации(СИстекшимСрокомПолезногоИспользования = Ложь)

	Объект.Спецоснастка.Очистить();

	УчетМатериаловВЭксплуатации.ЗаполнитьСпецоснасткуПоОстаткамВЭксплуатации(
		Объект,
		Объект.Спецоснастка,
		,
		СИстекшимСрокомПолезногоИспользования);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнвентарьИХозяйственныеПринадлежностиПоОстаткамВЭксплуатации()

	Объект.ИнвентарьИХозяйственныеПринадлежности.Очистить();

	УчетМатериаловВЭксплуатации.ЗаполнитьИнвентарьИХозяйственныеПринадлежностиПоОстаткамВЭксплуатации(
		Объект,
		Объект.ИнвентарьИХозяйственныеПринадлежности);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СпецодеждаПриИзмененииНаСервере(СтрокаТабличнойЧасти, Знач ДанныеОбъекта)
	Перем Склад;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ПартияМатериаловВЭксплуатации)
		И ТипЗнч(СтрокаТабличнойЧасти.ПартияМатериаловВЭксплуатации) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
		
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ПартияМатериаловВЭксплуатации, "Склад");
		
	КонецЕсли;
	
	ДанныеОбъекта.Вставить("Склад", Склад);
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(
		ДанныеОбъекта.Организация, СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Документы.СписаниеМатериаловИзЭксплуатации.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		ДанныеОбъекта, СтрокаТабличнойЧасти, "Спецодежда", СчетаУчета);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СпецоснасткаПриИзмененииНаСервере(СтрокаТабличнойЧасти, Знач ДанныеОбъекта)
	Перем Склад;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ПартияМатериаловВЭксплуатации)
		И ТипЗнч(СтрокаТабличнойЧасти.ПартияМатериаловВЭксплуатации) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
		
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ПартияМатериаловВЭксплуатации, "Склад");
		
	КонецЕсли;
	
	ДанныеОбъекта.Вставить("Склад", Склад);
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(
		ДанныеОбъекта.Организация, СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Документы.СписаниеМатериаловИзЭксплуатации.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		ДанныеОбъекта, СтрокаТабличнойЧасти, "Спецоснастка", СчетаУчета);

КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьЗаполненияТабличнойЧасти()

	Если Объект.Проведен Тогда
		ПоказатьПредупреждение( , НСтр("ru='Заполнение возможно только в непроведенном документе.'"));
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ВопросПередЗаполненияИнвентаряПоОстаткамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьИнвентарьИХозяйственныеПринадлежностиПоОстаткамВЭксплуатации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриЗаполненииСпецодеждыПоОстаткамЗавершение(Результат, СИстекшимСрокомПолезногоИспользования) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьСпецодеждуПоОстаткамВЭксплуатации(СИстекшимСрокомПолезногоИспользования);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриЗаполненииСпецоснасткуПоОстаткамЗавершение(Результат, СИстекшимСрокомПолезногоИспользования) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьСпецоснасткуПоОстаткамВЭксплуатации(СИстекшимСрокомПолезногоИспользования);
	КонецЕсли;
	
КонецПроцедуры
