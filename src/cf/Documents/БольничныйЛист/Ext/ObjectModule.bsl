#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоВременнойТаблице();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 					= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода					= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода				= ДатаОкончания;
	
	КадровыйУчет.ПроверитьРаботающихСотрудников(
		Сотрудник,
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект"));
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;		
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РасчетЗарплатыДляНебольшихОрганизаций") Тогда
		МодульРасчетЗарплатыДляНебольшихОрганизаций = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("РасчетЗарплатыДляНебольшихОрганизацийСобытия");
		МодульРасчетЗарплатыДляНебольшихОрганизаций.ДокументыПередЗаписью(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	Начислено = Начисления.Итог("Результат");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	УчетНачисленнойЗарплаты.ЗарегистрироватьНачисленияУдержания(
		Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.НачисленияПоСотрудникам, Неопределено, Неопределено, Неопределено, Перечисления.ХарактерВыплатыЗарплаты.Зарплата);
			
	УчетНачисленнойЗарплаты.ЗарегистрироватьОтработанноеВремя(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.ОтработанноеВремяПоСотрудникам, Истина);	
	
	// НДФЛ
	ДатаОперацииПоНалогомИВзносам = Мин(Дата, КонецМесяца(ПериодРегистрации));
	УчетНДФЛ.СформироватьДоходыНДФЛПоНачислениям(Движения, Отказ, Организация, ДатаОперацииПоНалогомИВзносам, КонецМесяца(ПериодРегистрации), ДанныеДляПроведения.МенеджерВременныхТаблиц, ПериодРегистрации, Истина);
	
	// Страховые взносы
	УчетСтраховыхВзносов.СформироватьСведенияОДоходахСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.МенеджерВременныхТаблиц, , Истина);
	
	// - регистрация пособий
	УчетСтраховыхВзносов.СформироватьПособия(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.Пособия, Неопределено);
	
	УчетСтажаПФР.ЗарегистрироватьПериодыВУчетеСтажаПФР(Движения, ДанныеДляРегистрацииВУчетаСтажаПФР());

	Если Не Отказ Тогда
		
		// формирование проводок
		ДанныеДляПроведения = ОтражениеЗарплатыВУчете.НоваяСтруктураРезультатыРасчетаЗарплаты();
		ДанныеДляПроведения.НачисленияУдержания = Движения.НачисленияУдержанияПоСотрудникам.Выгрузить();
		СтрокаСписокТаблиц = "НачисленнаяЗарплатаИВзносы";
		ОтражениеЗарплатыВБухучете.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

// В качестве данных заполнения может принимать структуру с полями.
//		Ссылка
//		Действие
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ЭтотОбъект.ЯвляетсяПродолжениемБолезни = Истина;
		ЭтотОбъект.ПервичныйБольничныйЛист = ДанныеЗаполнения;
		ЗаполнитьПоПервичномуБольничномуЛисту(ДанныеЗаполнения);	 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = РасчетЗарплаты.СоздатьДанныеДляПроведенияНачисленияЗарплаты();
	
	РасчетЗарплаты.ЗаполнитьНачисления(ДанныеДляПроведения, Ссылка, , "ДатаНачала");
	ЗаполнитьСведенияОПособиях(ДанныеДляПроведения);
	
	ОтражениеЗарплатыВБухучете.ДополнитьНачисленияДаннымиОЕНВД(ДанныеДляПроведения, Ссылка, ПериодРегистрации, Организация);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура ЗаполнитьСведенияОПособиях(ДанныеДляПроведения)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеДляПроведения.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНачислений.Ссылка,
	|	ТаблицаНачислений.Начисление,
	|	ТаблицаНачислений.Сотрудник,
	|	ТаблицаНачислений.ОплаченоДней,
	|	ТаблицаНачислений.Результат,
	|	ТаблицаНачислений.РезультатВТомЧислеЗаСчетФБ,
	|	ТаблицаНачислений.Ссылка.ДатаНачалаСобытия
	|ПОМЕСТИТЬ ВТНачисленияДляУчетаПособий
	|ИЗ
	|	Документ.БольничныйЛист.Начисления КАК ТаблицаНачислений
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БольничныйЛистНачисления.Сотрудник,
	|	БольничныйЛистНачисления.Ссылка.ДатаНачалаСобытия КАК Период
	|ПОМЕСТИТЬ ВТСотрудникиПериоды
	|ИЗ
	|	Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Выполнить();
	
	ОписательТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	ОписательТаблиц.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковПособий";
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательТаблиц, Истина, "ВидЗанятости");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаВзрослым)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Карантин)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Протезирование)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПособиеПриДолечивании)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.БеременностьРоды)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Профзаболевание)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПустаяСсылка)
	|	КОНЕЦ КАК ВидПособияСоциальногоСтрахования,
	|	ТаблицаНачислений.Ссылка,
	|	ТаблицаНачислений.Сотрудник,
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаНачислений.ОплаченоДней
	|		КОНЕЦ) КАК ОплаченныеДни,
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаНачислений.Результат
	|		КОНЕЦ) КАК СуммаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаНачислений.РезультатВТомЧислеЗаСчетФБ
	|		КОНЕЦ) КАК СуммаСверхНорм,
	|	СУММА(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя)
	|				ТОГДА ТаблицаНачислений.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаФинансируемаяРаботодателем,
	|	ТаблицаНачислений.ДатаНачалаСобытия
	|ПОМЕСТИТЬ ВТСвернутыеНачисленияДляУчетаПособий
	|ИЗ
	|	ВТНачисленияДляУчетаПособий КАК ТаблицаНачислений
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.БеременностьРоды)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Профзаболевание)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание)
	|		КОГДА ВЫРАЗИТЬ(ТаблицаНачислений.Ссылка КАК Документ.БольничныйЛист).ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаНачислений.Ссылка,
	|	ТаблицаНачислений.Сотрудник,
	|	ТаблицаНачислений.ДатаНачалаСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачислений.ВидПособияСоциальногоСтрахования,
	|	ТаблицаНачислений.Сотрудник,
	|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадровыеДанныеСотрудников.ВидЗанятости,
	|	БольничныйЛист.ФинансированиеФедеральнымБюджетом,
	|	БольничныйЛист.ДатаНачалаСобытия КАК ДатаСтраховогоСлучая,
	|	СУММА(ВЫБОР
	|			КОГДА БольничныйЛист.ЯвляетсяПродолжениемБолезни
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СтраховыеСлучаи,
	|	СУММА(ТаблицаНачислений.ОплаченныеДни) КАК ОплаченныеДни,
	|	СУММА(ТаблицаНачислений.СуммаВсего) КАК СуммаВсего,
	|	СУММА(ТаблицаНачислений.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	СУММА(ТаблицаНачислений.СуммаФинансируемаяРаботодателем) КАК СуммаФинансируемаяРаботодателем
	|ИЗ
	|	ВТСвернутыеНачисленияДляУчетаПособий КАК ТаблицаНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|		ПО ТаблицаНачислений.Ссылка = БольничныйЛист.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудниковПособий КАК КадровыеДанныеСотрудников
	|		ПО ТаблицаНачислений.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И ТаблицаНачислений.ДатаНачалаСобытия = КадровыеДанныеСотрудников.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачислений.ВидПособияСоциальногоСтрахования,
	|	БольничныйЛист.ФинансированиеФедеральнымБюджетом,
	|	ТаблицаНачислений.Сотрудник,
	|	БольничныйЛист.ДатаНачалаСобытия,
	|	КадровыеДанныеСотрудников.ФизическоеЛицо,
	|	КадровыеДанныеСотрудников.ВидЗанятости";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеДляПроведения.МенеджерВременныхТаблиц;
	
	ДанныеДляПроведения.Вставить("Пособия", Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура ЗаполнитьПоПервичномуБольничномуЛисту(ДокументСсылка) Экспорт 
	
	ДанныеПервичногоБольничногоЛиста = Документы.БольничныйЛист.ДанныеПервичногоБольничногоЛиста(ДокументСсылка, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭтотОбъект.Ссылка));
	
	ЗаполняемыеДанные = "Организация";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "Сотрудник";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПричинаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачала";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНарушенияРежима";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НазначитьПособие";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПрименятьЛьготыПриНачисленииПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ФинансированиеФедеральнымБюджетом";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплатыБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособияБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СлучайУходаЗаБольнымРебенком";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаПоловиннойОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РайонныйКоэффициентРФНаНачалоСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаПервыйГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаВторойГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СреднийДневнойЗаработок";
	
	Если ДанныеПервичногоБольничногоЛиста <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПервичногоБольничногоЛиста, ЗаполняемыеДанные);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БольничныйЛистСреднийЗаработокФСС.ФизическоеЛицо,
		|	БольничныйЛистСреднийЗаработокФСС.Период,
		|	БольничныйЛистСреднийЗаработокФСС.Сумма
		|ИЗ
		|	Документ.БольничныйЛист.СреднийЗаработокФСС КАК БольничныйЛистСреднийЗаработокФСС
		|ГДЕ
		|	БольничныйЛистСреднийЗаработокФСС.Ссылка = &Ссылка";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.СреднийЗаработокФСС.Добавить(), Выборка);
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ФизическоеЛицо,
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.Период,
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.ДнейБолезниУходаЗаДетьми
		|ИЗ
		|	Документ.БольничныйЛист.ОтработанноеВремяДляСреднегоФСС КАК БольничныйЛистОтработанноеВремяДляСреднегоФСС
		|ГДЕ
		|	БольничныйЛистОтработанноеВремяДляСреднегоФСС.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.ОтработанноеВремяДляСреднегоФСС.Добавить(), Выборка);
	КонецЦикла;
	
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым Тогда
		
		ДлинаСуток = 24 * 60 * 60;
		
		Если ДатаНачалаСобытия <> ДатаНачала Тогда
			ОплаченоРанее = (ДатаНачала - ДатаНачалаСобытия) / ДлинаСуток;
		Иначе
			ОплаченоРанее = 0;
		КонецЕсли;
		
		// Учтем ограничение периода оплаты по одному страховому случаю.
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании Тогда
			ДнейОплаты = Макс(24 - ОплаченоРанее,0) // П.2 ст.6 Федерального закона от 29 декабря 2006 г. № 255-ФЗ.
		ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым Тогда
			ДнейОплаты = Макс(7 - ОплаченоРанее,0) // Пп. 6 п.5 ст.6 Федерального закона от 29 декабря 2006 г. № 255-ФЗ.
		КонецЕсли;
		
		Если ДнейОплаты > 0 Тогда
			НазначитьПособие		= Истина; 
		Иначе
			НазначитьПособие		= Ложь; 
		КонецЕсли;                    
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляРегистрацииВУчетаСтажаПФР()
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ДанныеДляРегистрацииВУчете = Документы.БольничныйЛист.ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок);
		
	Возврат ДанныеДляРегистрацииВУчете[Ссылка];
														
КонецФункции	

#КонецОбласти

#КонецЕсли
