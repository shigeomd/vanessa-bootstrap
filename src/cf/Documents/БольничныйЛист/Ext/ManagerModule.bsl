#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Получает данные для заполнения документа по первичному листку нетрудоспособности.
//
// Параметры:
//  ПервичныйБольничныйЛист - ДокументСсылка.БольничныйЛист
//                 первичный листок нетрудоспособности.
//  ИсключаемыеДокументы - массив из ДокументСсылка.БольничныйЛист
//                 см. описание метода ПоследнийДеньБолезни.
//
// Возвращаемое значение:
//   Дата - последний день болезни, зарегистрированной по переданному б/л.
//
Функция ДанныеПервичногоБольничногоЛиста(ПервичныйБольничныйЛист, ИсключаемыеДокументы = Неопределено) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА БольничныйЛист.ЯвляетсяПродолжениемБолезни
		|			ТОГДА БольничныйЛист.ПервичныйБольничныйЛист
		|		ИНАЧЕ БольничныйЛист.Ссылка
		|	КОНЕЦ КАК ПервичныйБольничныйЛист,
		|	БольничныйЛист.*
		|ИЗ
		|	Документ.БольничныйЛист КАК БольничныйЛист
		|ГДЕ
		|	БольничныйЛист.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ПервичныйБольничныйЛист);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ДанныеПервичногоДокумента = Новый Структура;
	Для Каждого КолонкаРезультата Из РезультатЗапроса.Колонки Цикл
		ДанныеПервичногоДокумента.Вставить(КолонкаРезультата.Имя, Выборка[КолонкаРезультата.Имя]);
	КонецЦикла;
	
	ДатаНачала = ПоследнийДеньБолезни(ПервичныйБольничныйЛист, ИсключаемыеДокументы) + 86400;
	ДанныеПервичногоДокумента.Вставить("ДатаНачала", ДатаНачала);
	
	Возврат ДанныеПервичногоДокумента;
	
КонецФункции

// Определяет последний день болезни, оформленной несколькими листками нетрудоспособности.
//
// Параметры:
//  ПервичныйБольничныйЛист - ДокументСсылка.БольничныйЛист
//                 первичный листок нетрудоспособности.
//  ИсключаемыеДокументы - массив из ДокументСсылка.БольничныйЛист
//                 массив листков нетрудоспособности, которые не нужно учитывать при определении последнего дня болезни.
//
// Возвращаемое значение:
//   Дата - последний день болезни, зарегистрированной по переданному б/л.
//
Функция ПоследнийДеньБолезни(ПервичныйБольничныйЛист, ИсключаемыеДокументы  = Неопределено) Экспорт 

	ДатаОкончанияБолезни = '00010101';
	
	Если Не ЗначениеЗаполнено(ПервичныйБольничныйЛист) Тогда
		Возврат	ДатаОкончанияБолезни;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	БольничныйЛист.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.Ссылка = &ПервичныйБольничныйЛист 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БольничныйЛист.ДатаОкончания
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.ПервичныйБольничныйЛист = &ПервичныйБольничныйЛист И НЕ БольничныйЛист.Ссылка В (&ИсключаемыеДокументы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОкончания УБЫВ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПервичныйБольничныйЛист", ПервичныйБольничныйЛист);
	Запрос.УстановитьПараметр("ИсключаемыеДокументы", ?(ИсключаемыеДокументы = Неопределено, Новый Массив, ИсключаемыеДокументы));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ДатаОкончанияБолезни = Выборка.ДатаОкончания;
	КонецЕсли;

	Возврат	ДатаОкончанияБолезни;
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРасчетаСреднегоЗаработка";
	КомандаПечати.Идентификатор = "РасчетСреднегоЗаработка";
	КомандаПечати.Представление = НСтр("ru = 'Расчет среднего заработка'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
			
КонецПроцедуры

Процедура ЗаполнитьВидПособияВПособияхСоциальногоСтрахования() Экспорт
	
	ПричиныНетрудоспособности = Новый Массив;
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым);
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Карантин);
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.Протезирование);
	ПричиныНетрудоспособности.Добавить(Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПособияПоСоциальномуСтрахованию.Регистратор
		|ИЗ
		|	РегистрНакопления.ПособияПоСоциальномуСтрахованию КАК ПособияПоСоциальномуСтрахованию
		|ГДЕ
		|	ПособияПоСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПустаяСсылка)
		|	И ПособияПоСоциальномуСтрахованию.Регистратор ССЫЛКА Документ.БольничныйЛист";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления.ПособияПоСоциальномуСтрахованию.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			
			НаборЗаписей.Прочитать();
			
			Для каждого Запись Из НаборЗаписей Цикл
				Если Не ЗначениеЗаполнено(Запись.ВидПособияСоциальногоСтрахования) Тогда
					Запись.ВидПособияСоциальногоСтрахования = Перечисления.ПереченьПособийСоциальногоСтрахования.Нетрудоспособность;
				КонецЕсли; 
			КонецЦикла;
			
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ДанныеДляРегистрацииВУчетаСтажаПФР(МассивСсылок) Экспорт
	ДанныеДляРегистрацииВУчете = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БольничныйЛист.Сотрудник,
	|	БольничныйЛист.ДатаНачала,
	|	БольничныйЛист.ДатаОкончания,
	|	БольничныйЛист.Ссылка,
	|	БольничныйЛист.ПричинаНетрудоспособности
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|ГДЕ
	|	БольничныйЛист.Ссылка В(&МассивСсылок)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеДляРегистрацииВУчетеПоДокументу = УчетСтажаПФР.ДанныеДляРегистрацииВУчетеСтажаПФР();
		ДанныеДляРегистрацииВУчете.Вставить(Выборка.Ссылка, ДанныеДляРегистрацииВУчетеПоДокументу);
		
		Если Выборка.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			ВидСтажа = Перечисления.ВидыСтажаПФР2014.Декрет;		
		Иначе	
			ВидСтажа = Перечисления.ВидыСтажаПФР2014.ВременнаяНетрудоспособность;
		КонецЕсли;	
						
		ОписаниеПериода = УчетСтажаПФР.ОписаниеРегистрируемогоПериода();
		ОписаниеПериода.Сотрудник = Выборка.Сотрудник;	
		ОписаниеПериода.ДатаНачалаПериода = Выборка.ДатаНачала;
		ОписаниеПериода.ДатаОкончанияПериода = Выборка.ДатаОкончания;
		ОписаниеПериода.Состояние = Перечисления.СостоянияСотрудника.Болезнь;
				
		РегистрируемыйПериод = УчетСтажаПФР.ДобавитьЗаписьВДанныеДляРегистрацииВУчета(ДанныеДляРегистрацииВУчетеПоДокументу, ОписаниеПериода);
												 					
		УчетСтажаПФР.УстановитьЗначениеРегистрируемогоРесурса(РегистрируемыйПериод, "ВидСтажаПФР", ВидСтажа);		
	КонецЦикла;	

	Возврат ДанныеДляРегистрацииВУчете;
														
КонецФункции	

#Область ПечатьРасчетаСреднегоЗаработка

// Заполняет структуру - описание документа для формирования печатной формы расчета среднего заработка.
//
// Параметры:
//   ОписаниеДокумента - структура, определяется в
//                       Обработки.ПечатьРасчетаСреднегоЗаработка.ОписаниеДокументаРассчитывающегоСреднийЗаработок.
//
Процедура ЗаполнитьОписаниеДокументаРассчитывающегоСреднийЗаработок(ОписаниеДокумента, ИмяМакета) Экспорт
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	ОписаниеДокумента.Вставить("ИмяДокумента", 							МетаданныеДокумента.Имя);
	ОписаниеДокумента.Вставить("СинонимДокумента", 						МетаданныеДокумента.Синоним);
	ОписаниеДокумента.Вставить("СреднийЗаработокОбщий", 				Ложь);
КонецПроцедуры 

// Заполняет таблицу значений - параметры формирования печатной формы расчета среднего заработка.
//
// Параметры:
//	 МассивСсылок 		- массив, печатаемые документы.
//   ДанныеДокумента 	- таблица значений, определяется в
//                      Обработки.ПечатьРасчетаСреднегоЗаработка.ДанныеДокументовРасчетаСреднегоЗаработка.
//   ИмяМакета          - строка, вариант печати расчета среднего заработка.
//
Процедура ЗаполнитьДанныеДокументовДляПечатиРасчетаСреднегоЗаработка(МассивСсылок, ДанныеДокументов, ИмяМакета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыМРОТОтпусков.Ссылка,
	|	МинимальнаяОплатаТрудаРФ.Размер
	|ПОМЕСТИТЬ ВТМРОТОтпусков
	|ИЗ
	|	(ВЫБРАТЬ
	|		БольничныйЛист.Ссылка КАК Ссылка,
	|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК Период
	|	ИЗ
	|		Документ.БольничныйЛист КАК БольничныйЛист
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|			ПО БольничныйЛист.ДатаНачала >= МинимальнаяОплатаТрудаРФ.Период
	|	ГДЕ
	|		БольничныйЛист.Ссылка В(&МассивСсылок)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		БольничныйЛист.Ссылка) КАК ПериодыМРОТОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|		ПО ПериодыМРОТОтпусков.Период = МинимальнаяОплатаТрудаРФ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БольничныйЛист.Ссылка,
	|	БольничныйЛист.ПериодРегистрации,
	|	БольничныйЛист.ПричинаНетрудоспособности,
	|	ВЫБОР
	|		КОГДА БольничныйЛист.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
	|				ИЛИ БольничныйЛист.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Профзаболевание)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОграничиватьЗаработок,
	|	ВЫБОР
	|		КОГДА БольничныйЛист.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|				И БольничныйЛист.ПериодРегистрации >= &ДатаОтдельногоРасчетаПособийПоМатеринству
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВыводитьИсключаемыеДни,
	|	БольничныйЛист.Организация,
	|	БольничныйЛист.Сотрудник,
	|	БольничныйЛист.Дата КАК ДатаДокумента,
	|	БольничныйЛист.Номер КАК НомерДокумента,
	|	БольничныйЛист.ДатаНачала КАК ДатаНачалаСобытия,
	|	БольничныйЛист.ДатаНачала,
	|	БольничныйЛист.ДатаОкончания,
	|	ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ГОД, БольничныйЛист.ПериодРасчетаСреднегоЗаработкаПервыйГод - 1) КАК НачалоРасчетногоПериода,
	|	ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(1, 12, 31, 0, 0, 0), ГОД, БольничныйЛист.ПериодРасчетаСреднегоЗаработкаВторойГод - 1) КАК ОкончаниеРасчетногоПериода,
	|	БольничныйЛист.ПериодРасчетаСреднегоЗаработкаПервыйГод КАК ПериодРасчетаСреднегоЗаработкаПервыйГод,
	|	БольничныйЛист.ПериодРасчетаСреднегоЗаработкаВторойГод КАК ПериодРасчетаСреднегоЗаработкаВторойГод,
	|	ЛОЖЬ КАК РасчетПоПравилам2010Года,
	|	1 КАК ДоляНеполногоВремени,
	|	БольничныйЛист.РайонныйКоэффициентРФНаНачалоСобытия КАК РайонныйКоэффициентРФ,
	|	ЕСТЬNULL(МРОТОтпусков.Размер, 0) КАК МРОТ,
	|	БольничныйЛист.МинимальныйСреднедневнойЗаработок,
	|	БольничныйЛист.ФизическоеЛицо
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМРОТОтпусков КАК МРОТОтпусков
	|		ПО БольничныйЛист.Ссылка = МРОТОтпусков.Ссылка
	|ГДЕ
	|	БольничныйЛист.Ссылка В(&МассивСсылок)";	
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ДатаОтдельногоРасчетаПособийПоМатеринству", УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству());
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ДанныеДокумента = ДанныеДокументов.Добавить(); 
			ЗаполнитьЗначенияСвойств(ДанныеДокумента, Выборка);
			ДанныеДокумента.МассивСотрудников 	= ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.Сотрудник);
			ДанныеДокумента.НеполныйРасчетныйПериод = УчетПособийСоциальногоСтрахования.ПособиеЗаНеполныйРасчетныйПериод(Выборка.ФизическоеЛицо, Выборка.ДатаНачалаСобытия);
			
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
