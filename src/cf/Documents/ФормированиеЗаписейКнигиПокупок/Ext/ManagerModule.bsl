#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();
	Результат = Запрос.Выполнить();
	ПараметрыПроведения.Вставить("Реквизиты", Результат.Выгрузить());
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.УпрощенныйУчетНДС = УчетнаяПолитика.УпрощенныйУчетНДС(Реквизиты.Организация, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("ПредъявленНДСКВычету0",		Реквизиты.ПредъявленНДСКВычету0);
	Запрос.УстановитьПараметр("ДатаДокумента",				Реквизиты.Период);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода",	НачалоКвартала(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецНалоговогоПериода",		КонецКвартала(Реквизиты.Период));
	Запрос.УстановитьПараметр("ПустыеДокументыИсправления", УчетНДСПереопределяемый.ПолучитьМассивПустыхИсправленныхСчетовФактур());
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаПоПриобретеннымЦенностям(НомераТаблиц)
				   + ТекстЗапросаПоАвансамПолученным(НомераТаблиц)
				   + ТекстЗапросаПоАвансамВыданным(НомераТаблиц)
				   + ТекстЗапросаНалоговыйАгент(НомераТаблиц)
				   + ТекстЗапросаИзменениеСтоимостиВСторонуУменьшения(НомераТаблиц)
				   + ТекстЗапросаПоФормированиюРегламентнойОперации(НомераТаблиц);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПредъявленНДСКВычету0,
	|	Неопределено КАК УпрощенныйУчетНДС,
	|	Реквизиты.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаРеквизитыДокумента()

Функция ТекстЗапросаПоПриобретеннымЦенностям(НомераТаблиц)
	                                                      	
	НомераТаблиц.Вставить("ТаблицаВычетПоПриобретеннымЦенностям", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВычетПоПриобретеннымЦенностям.Поставщик КАК Поставщик,
	|	ВЫБОР
	|		КОГДА &ПредъявленНДСКВычету0
	|			ТОГДА ВЫБОР
	|					КОГДА ВычетПоПриобретеннымЦенностям.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	ВычетПоПриобретеннымЦенностям.СчетФактура,
	|	ВычетПоПриобретеннымЦенностям.СтавкаНДС,
	|	ВычетПоПриобретеннымЦенностям.СуммаБезНДС,
	|	ВычетПоПриобретеннымЦенностям.НДС КАК НДС,
	|	ВычетПоПриобретеннымЦенностям.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ВычетПоПриобретеннымЦенностям.ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ВычетПоПриобретеннымЦенностям.ЗаписьДополнительногоЛиста
	|			ТОГДА ВычетПоПриобретеннымЦенностям.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВычетПоПриобретеннымЦенностям.Состояние,
	|	ВычетПоПриобретеннымЦенностям.ВидЦенности,
	|	ВычетПоПриобретеннымЦенностям.ДатаОплаты,
	|	ВычетПоПриобретеннымЦенностям.СчетУчетаНДС,
	|	ВЫБОР
	|		КОГДА ВычетПоПриобретеннымЦенностям.Ссылка.ПредъявленНДСКВычету0
	|				И (ВычетПоПриобретеннымЦенностям.ДокументОтгрузки.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецНалоговогоПериода)
	|			ТОГДА ВычетПоПриобретеннымЦенностям.ДокументОтгрузки.Дата
	|		КОГДА ВычетПоПриобретеннымЦенностям.Ссылка.ПредъявленНДСКВычету0
	|			ТОГДА ВычетПоПриобретеннымЦенностям.Ссылка.Дата
	|		КОГДА ВычетПоПриобретеннымЦенностям.ИсправленныйСчетФактура.Дата > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И (ВычетПоПриобретеннымЦенностям.ИсправленныйСчетФактура.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецНалоговогоПериода)
	|			ТОГДА ВычетПоПриобретеннымЦенностям.ИсправленныйСчетФактура.Дата
	|		КОГДА ВычетПоПриобретеннымЦенностям.ИсправленныйСчетФактура.Дата > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВычетПоПриобретеннымЦенностям.Ссылка.Дата
	|		КОГДА ВычетПоПриобретеннымЦенностям.СчетФактура.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецНалоговогоПериода
	|			ТОГДА ВычетПоПриобретеннымЦенностям.СчетФактура.Дата
	|		ИНАЧЕ ВычетПоПриобретеннымЦенностям.Ссылка.Дата
	|	КОНЕЦ КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ВычетПоПриобретеннымЦенностям.Ссылка.ПредъявленНДСКВычету0
	|			ТОГДА ВЫБОР
	|					КОГДА ВычетПоПриобретеннымЦенностям.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|						ТОГДА ВЫБОР
	|								КОГДА ВычетПоПриобретеннымЦенностям.ЗаписьДополнительногоЛиста
	|									ТОГДА ВычетПоПриобретеннымЦенностям.Ссылка.Дата
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ВычетПоПриобретеннымЦенностям.ДатаОплаты > ВычетПоПриобретеннымЦенностям.ДокументОтгрузки.Дата
	|											ТОГДА ВычетПоПриобретеннымЦенностям.ДатаОплаты
	|										ИНАЧЕ ВычетПоПриобретеннымЦенностям.ДокументОтгрузки.Дата
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ ВычетПоПриобретеннымЦенностям.Ссылка.Дата
	|				КОНЕЦ
	|		ИНАЧЕ ВычетПоПриобретеннымЦенностям.Ссылка.Дата
	|	КОНЕЦ КАК Период,
	|	ВычетПоПриобретеннымЦенностям.Ссылка.Организация,
	|	ВычетПоПриобретеннымЦенностям.Ссылка КАК Регистратор,
	|	""НДС"" КАК Содержание,
	|	ВычетПоПриобретеннымЦенностям.ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	ВычетПоПриобретеннымЦенностям.ИсправленныйСчетФактура,
	|	ВычетПоПриобретеннымЦенностям.НомерДокументаОплаты,
	|	ВычетПоПриобретеннымЦенностям.ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ПредъявленНДСКВычету0
	|						И ВычетПоПриобретеннымЦенностям.КодВидаОперации = """"
	|					ТОГДА ""25""
	|				ИНАЧЕ ВычетПоПриобретеннымЦенностям.КодВидаОперации
	|			КОНЕЦ
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок.ВычетПоПриобретеннымЦенностям КАК ВычетПоПриобретеннымЦенностям
	|ГДЕ
	|	ВычетПоПриобретеннымЦенностям.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВычетПоПриобретеннымЦенностям.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоАвансамПолученным(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПоАвансамПолученным", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗачетАвансовПолученных.Покупатель КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЗачетАвансовПолученных.ВозвратАвансовПолученных
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &ПредъявленНДСКВычету0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	ЗачетАвансовПолученных.ДоговорКонтрагента,
	|	ЗачетАвансовПолученных.СчетФактура,
	|	ЗачетАвансовПолученных.СтавкаНДС,
	|	ЗачетАвансовПолученных.СуммаБезНДС,
	|	ЗачетАвансовПолученных.НДС КАК СуммаНДС,
	|	ЗачетАвансовПолученных.ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ЗачетАвансовПолученных.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &ДатаДокумента
	|		ИНАЧЕ ЗачетАвансовПолученных.ДатаСобытия
	|	КОНЕЦ КАК ДатаОплаты,
	|	ЗачетАвансовПолученных.ДокументОтгрузки КАК ДокументОплаты,
	|	ЗачетАвансовПолученных.ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ЗачетАвансовПолученных.ЗаписьДополнительногоЛиста
	|			ТОГДА ЗачетАвансовПолученных.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗачетАвансовПолученных.ВалютаДокумента,
	|	ЗачетАвансовПолученных.ВалютнаяСумма,
	|	ВЫБОР
	|		КОГДА ЗачетАвансовПолученных.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗачетАвансовПолученных.ИсправленныйСчетФактура
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""22""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок.НДСсАвансов КАК ЗачетАвансовПолученных
	|ГДЕ
	|	ЗачетАвансовПолученных.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗачетАвансовПолученных.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаПоАвансамВыданным(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПоАвансамВыданным", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НДСсАвансовВыданных.Поставщик КАК Контрагент,
	|	НДСсАвансовВыданных.ДоговорКонтрагента,
	|	НДСсАвансовВыданных.СчетФактура,
	|	НДСсАвансовВыданных.СтавкаНДС,
	|	НДСсАвансовВыданных.СуммаБезНДС,
	|	НДСсАвансовВыданных.НДС КАК СуммаНДС,
	|	НДСсАвансовВыданных.ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСсАвансовВыданных.ЗаписьДополнительногоЛиста
	|			ТОГДА НДСсАвансовВыданных.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчетаНДС,
	|	ВЫБОР
	|		КОГДА НДСсАвансовВыданных.СчетФактура.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецНалоговогоПериода
	|			ТОГДА НДСсАвансовВыданных.СчетФактура.Дата
	|		ИНАЧЕ НДСсАвансовВыданных.Ссылка.Дата
	|	КОНЕЦ КАК ДатаСобытия,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	"""" КАК КодВидаОперации
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок.НДСсАвансовВыданных КАК НДСсАвансовВыданных
	|ГДЕ
	|	НДСсАвансовВыданных.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НДСсАвансовВыданных.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();	
	
КонецФункции	

Функция ТекстЗапросаНалоговыйАгент(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаВычетНДСПоНалоговомуАгенту", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВычетНДСПоНалоговомуАгенту.Поставщик,
	|	ВЫБОР
	|		КОГДА &ПредъявленНДСКВычету0
	|			ТОГДА ВЫБОР
	|					КОГДА ВычетНДСПоНалоговомуАгенту.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	ВычетНДСПоНалоговомуАгенту.СчетФактура,
	|	ВычетНДСПоНалоговомуАгенту.СтавкаНДС,
	|	ВычетНДСПоНалоговомуАгенту.СуммаБезНДС,
	|	ВычетНДСПоНалоговомуАгенту.НДС КАК НДС,
	|	ВычетНДСПоНалоговомуАгенту.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ВычетНДСПоНалоговомуАгенту.ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ВычетНДСПоНалоговомуАгенту.ЗаписьДополнительногоЛиста
	|			ТОГДА ВычетНДСПоНалоговомуАгенту.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВычетНДСПоНалоговомуАгенту.Состояние,
	|	ВычетНДСПоНалоговомуАгенту.ВидЦенности,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента >= ДАТАВРЕМЯ(2014, 10, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ВычетНДСПоНалоговомуАгенту.ДатаОплаты
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВычетНДСПоНалоговомуАгенту.СчетУчетаНДС,
	|	ВЫБОР
	|		КОГДА ВычетНДСПоНалоговомуАгенту.Ссылка.ПредъявленНДСКВычету0
	|			ТОГДА ВЫБОР
	|					КОГДА ВычетНДСПоНалоговомуАгенту.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|						ТОГДА ВЫБОР
	|								КОГДА ВычетНДСПоНалоговомуАгенту.ЗаписьДополнительногоЛиста
	|									ТОГДА ВычетНДСПоНалоговомуАгенту.Ссылка.Дата
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ВычетНДСПоНалоговомуАгенту.ДатаОплаты > ВычетНДСПоНалоговомуАгенту.ДокументОтгрузки.Дата
	|											ТОГДА ВычетНДСПоНалоговомуАгенту.ДатаОплаты
	|										ИНАЧЕ ВычетНДСПоНалоговомуАгенту.ДокументОтгрузки.Дата
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ ВычетНДСПоНалоговомуАгенту.Ссылка.Дата
	|				КОНЕЦ
	|		ИНАЧЕ ВычетНДСПоНалоговомуАгенту.Ссылка.Дата
	|	КОНЕЦ КАК Период,
	|	ВычетНДСПоНалоговомуАгенту.Ссылка.Дата КАК ДатаСобытия,
	|	""НДС"" КАК Содержание,
	|	ВычетНДСПоНалоговомуАгенту.Ссылка.Организация,
	|	ВычетНДСПоНалоговомуАгенту.Ссылка КАК Регистратор,
	|	ВычетНДСПоНалоговомуАгенту.ДокументОплаты,
	|	ВычетНДСПоНалоговомуАгенту.ДоговорКонтрагента,
	|	ВычетНДСПоНалоговомуАгенту.ИсправленныйСчетФактура,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерДокументаОплаты,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок.ВычетНДСПоНалоговомуАгенту КАК ВычетНДСПоНалоговомуАгенту
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВычетНДСПоНалоговомуАгенту.ДокументОплатыНДС = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ВычетНДСПоНалоговомуАгенту.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВычетНДСПоНалоговомуАгенту.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаИзменениеСтоимостиВСторонуУменьшения(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВычетПриИзмененииСтоимостиВСторонуУменьшения", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.СчетФактура,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Поставщик,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.НДС,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.СуммаБезНДС,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.СтавкаНДС,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.СчетУчетаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО КАК Состояние,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Ссылка.Дата КАК ДатаСобытия,
	|	НЕОПРЕДЕЛЕНО КАК ДатаОплаты,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.ВидЦенности,
	|	НЕОПРЕДЕЛЕНО КАК ЗаписьДополнительногоЛиста,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА ВычетПриИзмененииСтоимостиВСторонуУменьшения.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВычетПриИзмененииСтоимостиВСторонуУменьшения.ИсправленныйСчетФактура
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	""НДС"" КАК Содержание,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Ссылка.Дата КАК Период,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Ссылка КАК Регистратор,
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Ссылка.Организация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &ДатаДокумента < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""18""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок.ВычетПриИзмененииСтоимостиВСторонуУменьшения КАК ВычетПриИзмененииСтоимостиВСторонуУменьшения
	|ГДЕ
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВычетПриИзмененииСтоимостиВСторонуУменьшения.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаПоФормированиюРегламентнойОперации(НомераТаблиц)

	НомераТаблиц.Вставить("ДанныеРегламентнойОперации", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	НАЧАЛОПЕРИОДА(Реквизиты.Дата, КВАРТАЛ) КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ПредъявленНДСКВычету0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РегламентныеОперации.ФормированиеЗаписейКнигиПокупок)
	|	КОНЕЦ КАК РегламентнаяОперация
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ ДОКУМЕНТА

Процедура ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура;
	
	ИмяТабЧасти           = СтруктураПараметров.ИмяТабЧасти;
	УпрощенныйУчетНДС     = УчетнаяПолитика.УпрощенныйУчетНДС(СтруктураПараметров.Организация, СтруктураПараметров.Дата);
	ВерсияНДС             = УчетНДСКлиентСервер.Версия(СтруктураПараметров.Дата);
	ПредъявленНДСКВычету0 = СтруктураПараметров.ПредъявленНДСКВычету0;
	
	Если ИмяТабЧасти = Неопределено Тогда 
		
		Если ПредъявленНДСКВычету0 Тогда
			
			// НДС по приобретенным ценностям
			ДанныеДляЗаполнения.Вставить(
				"ВычетПоПриобретеннымЦенностям", ПодготовитьДанныеРазделаВычетПоПриобретеннымЦенностям(СтруктураПараметров));
			
			// НДС налоговый агент
			ДанныеДляЗаполнения.Вставить(
				"ВычетНДСПоНалоговомуАгенту", ПодготовитьДанныеРазделаВычетНДСПоНалоговомуАгенту(СтруктураПараметров));
				
		Иначе
			
			Если УпрощенныйУчетНДС Тогда
				
				// Вычет при зачете полученных авансов
				ДанныеДляЗаполнения.Вставить(
					"НДСсАвансов", ПодготовитьДанныеРазделаВычетНДССПолученныхАвансов(СтруктураПараметров));
				
			Иначе
				
				// Вычет при зачете полученных авансов
				ДанныеДляЗаполнения.Вставить(
					"НДСсАвансов", ПодготовитьДанныеРазделаВычетНДССПолученныхАвансов(СтруктураПараметров));
					
				Если УчетНДСКлиентСервер.Версия(СтруктураПараметров.Дата) = 1 Тогда
					
					// Вычет НДС при выдаче авансов
					ДанныеДляЗаполнения.Вставить(
						"НДСсАвансовВыданных", ПодготовитьДанныеРазделаВычетНДССВыданныхАвансов(СтруктураПараметров));
						
				КонецЕсли;
				
				// НДС по приобретенным ценностям
				ДанныеДляЗаполнения.Вставить(
					"ВычетПоПриобретеннымЦенностям", ПодготовитьДанныеРазделаВычетПоПриобретеннымЦенностям(СтруктураПараметров));
				
				// НДС налоговый агент
				ДанныеДляЗаполнения.Вставить(
					"ВычетНДСПоНалоговомуАгенту", ПодготовитьДанныеРазделаВычетНДСПоНалоговомуАгенту(СтруктураПараметров));
					
				Если СтруктураПараметров.Дата >= '20111001' Тогда	
				
					// Вычет при изменении стоимости в сторону уменьшения
					ДанныеДляЗаполнения.Вставить(
						"ВычетПриИзмененииСтоимостиВСторонуУменьшения", ПодготовитьДанныеРазделаВычетПриИзмененииСтоимостиВСторонуУменьшения(СтруктураПараметров));
						
				КонецЕсли;
	            			
			КонецЕсли;	
			
		КонецЕсли; 
	
	ИначеЕсли ИмяТабЧасти = "ВычетПоПриобретеннымЦенностям" Тогда
		
		ДанныеДляЗаполнения.Вставить(
			ИмяТабЧасти, ПодготовитьДанныеРазделаВычетПоПриобретеннымЦенностям(СтруктураПараметров));
		
	ИначеЕсли ИмяТабЧасти = "НДСсАвансов" Тогда
		
		ДанныеДляЗаполнения.Вставить(
			ИмяТабЧасти, ПодготовитьДанныеРазделаВычетНДССПолученныхАвансов(СтруктураПараметров));
		
	ИначеЕсли ИмяТабЧасти = "НДСсАвансовВыданных" Тогда
		
		ДанныеДляЗаполнения.Вставить(
			ИмяТабЧасти, ПодготовитьДанныеРазделаВычетНДССВыданныхАвансов(СтруктураПараметров));
		
	ИначеЕсли ИмяТабЧасти = "ВычетНДСПоНалоговомуАгенту" Тогда
		
		ДанныеДляЗаполнения.Вставить(
			ИмяТабЧасти, ПодготовитьДанныеРазделаВычетНДСПоНалоговомуАгенту(СтруктураПараметров));
		
	ИначеЕсли ИмяТабЧасти = "ВычетПриИзмененииСтоимостиВСторонуУменьшения" Тогда
		
		ДанныеДляЗаполнения.Вставить(
			ИмяТабЧасти, ПодготовитьДанныеРазделаВычетПриИзмененииСтоимостиВСторонуУменьшения(СтруктураПараметров));
		
	КонецЕсли;
		
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры


// Заполнение табличной части "Вычет по приобретенным ценностям"

Функция ПодготовитьДанныеРазделаВычетПоПриобретеннымЦенностям(СтруктураПараметров) Экспорт
	
	ВычетПоПриобретеннымЦенностям = Новый ТаблицаЗначений();
	Для Каждого КолонкаТабличнойЧасти Из Метаданные.Документы.ФормированиеЗаписейКнигиПокупок.ТабличныеЧасти.ВычетПоПриобретеннымЦенностям.Реквизиты Цикл
		ВычетПоПриобретеннымЦенностям.Колонки.Добавить(КолонкаТабличнойЧасти.Имя, КолонкаТабличнойЧасти.Тип);
	КонецЦикла; 
	
	ВычетПоПриобретеннымЦенностям.Колонки.Добавить("СчетФактураДата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	Если СтруктураПараметров.ПредъявленНДСКВычету0 Тогда
		ТаблицаНДСкВычету = ЗаполнитьНДСКВычетуПоДаннымРегистраНДСПредъявленныйРеализация0(СтруктураПараметров);
	Иначе	
		ТаблицаНДСкВычету = ЗаполнитьНДСКВычетуПоДаннымРегистраНДСПредъявленный(СтруктураПараметров);
	КонецЕсли;
	
	Если ТаблицаНДСкВычету.Количество() = 0 Тогда
		// Дальнейшая обработка не требуется, не обнаружен НДС, который может быть принят к вычету.
		Возврат ВычетПоПриобретеннымЦенностям;
	КонецЕсли;
	
	ИсключитьНДСпоНепринятымКУчетуНМА(СтруктураПараметров, ТаблицаНДСкВычету);
	
	// Получим информацию об оплатах
	ПолучитьДанныеОДокументахОплатыВвозИзТаможенногоСоюза(СтруктураПараметров, ТаблицаНДСкВычету);
	ПолучитьДанныеОДокументахОплатыИмпорт(СтруктураПараметров, ТаблицаНДСкВычету);
	
	СписокСчетовФактур = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ТаблицаНДСкВычету.ВыгрузитьКолонку("СчетФактура"), Истина);
	
	Если СтруктураПараметров.ПредъявленНДСКВычету0 И УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(СтруктураПараметров.Организация, СтруктураПараметров.Дата) Тогда
		
		 ТаблицаСФ = УчетНДСПереопределяемый.ОпределитьНаличиеСчетовФактурПолученныхЭкспорт(
		 	КонецДня(СтруктураПараметров.Дата), 
			СтруктураПараметров.Организация, 
			СписокСчетовФактур);
		
	Иначе
		
		ДатаПоискаСчетовФактур = ПолучитьДатуПоискаСчетовФактурПоПриобретеннымЦенностям(СтруктураПараметров.Дата);
		ТаблицаСФ = УчетНДСПереопределяемый.ОпределитьНаличиеСчетовФактурПолученных(
			,
			ДатаПоискаСчетовФактур, 
			СтруктураПараметров.Организация, 
			СписокСчетовФактур, 
			Ложь, 
			Истина,
			Истина, 
			ДатаПоискаСчетовФактур);
	
	КонецЕсли; 
			
	ОтфактурованныеПоступления = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ТаблицаСФ.ВыгрузитьКолонку("Документ"),Истина);
	
	СписокСчетовФактур = Новый СписокЗначений;
	СписокСчетовФактур.ЗагрузитьЗначения(ОтфактурованныеПоступления);
	
	Для Каждого СтрокаСчетФактура Из ТаблицаНДСкВычету Цикл
		
		Если СписокСчетовФактур.НайтиПоЗначению(СтрокаСчетФактура.СчетФактура) <> Неопределено 
			ИЛИ (СтрокаСчетФактура.ВидЦенности = Перечисления.ВидыЦенностей.Возврат И 
				ТипЗнч(СтрокаСчетФактура.СчетФактура) <> Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")) Тогда
			
			НоваяСтрока = ВычетПоПриобретеннымЦенностям.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСчетФактура);
			
			Если Не СтруктураПараметров.ПредъявленНДСКВычету0 Тогда
				Если СтруктураПараметров.Дата >= '20150101' Тогда  
					СчетФактураПоДокументу = ТаблицаСФ.Найти(СтрокаСчетФактура.СчетФактура, "Документ");
					Если СчетФактураПоДокументу <> Неопределено Тогда 
						НоваяСтрока.ДатаПолученияСчетаФактуры = СчетФактураПоДокументу.СчетФактураДата;
						Если НЕ ЗначениеЗаполнено(НоваяСтрока.КодВидаОперации)
							И (ТипЗнч(СчетФактураПоДокументу.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный")
							ИЛИ ТипЗнч(СчетФактураПоДокументу.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный"))Тогда 
							НоваяСтрока.КодВидаОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетФактураПоДокументу.СчетФактура, "КодВидаОперации"); 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли НоваяСтрока.Состояние = Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0 
				И НЕ КонецКвартала(НоваяСтрока.ДокументОтгрузки.Дата) = КонецКвартала(СтруктураПараметров.Дата) Тогда
				
				НоваяСтрока.ЗаписьДополнительногоЛиста = Истина;
				НоваяСтрока.КорректируемыйПериод = НоваяСтрока.ДокументОтгрузки.Дата;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтруктураПараметров.ПредъявленНДСКВычету0
		ИЛИ СтруктураПараметров.Дата < '20150101' Тогда
		КолонкиСортировки = "СчетФактураДата,СчетФактура,Поставщик,ВидЦенности,СтавкаНДС,ДокументОплаты,СчетУчетаНДС";
	Иначе
		КолонкиСортировки = "ДатаПолученияСчетаФактуры,СчетФактураДата,СчетФактура,Поставщик,ВидЦенности,СтавкаНДС,ДокументОплаты,СчетУчетаНДС";
	КонецЕсли;
	
	ВычетПоПриобретеннымЦенностям.Сортировать(КолонкиСортировки, Новый СравнениеЗначений);
	
	Возврат ВычетПоПриобретеннымЦенностям;
	
КонецФункции

Функция ПолучитьДатуПоискаСчетовФактурПоПриобретеннымЦенностям(ДатаДокумента)
	
	Если ДатаДокумента < '20150101'
		ИЛИ КонецДня(ДатаДокумента) <> КонецКвартала(ДатаДокумента) Тогда 
		Возврат КонецДня(ДатаДокумента);
	Иначе
		
		День = 24 * 60 * 60;
		ДатаПодачиДекларации = ДатаДокумента + 25 * День;
		
		// Перенесем на рабочие дни
		ПроизводственныйКалендарь = КалендарныеГрафики.ПроизводственныйКалендарьРоссийскойФедерации();
		
		Если НЕ ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
			Возврат КонецДня(ДатаПодачиДекларации);
		КонецЕсли; 
		
		ИсходныеДаты = Новый Массив;
		ИсходныеДаты.Добавить(ДатаПодачиДекларации);
		
		ГрафикПереноса = КалендарныеГрафики.ПолучитьДатыРабочихДней(
			ПроизводственныйКалендарь, 
			ИсходныеДаты, 
			Ложь,   
			Ложь, 
			Истина);
		
		ДатаПереноса = ?(ЗначениеЗаполнено(ГрафикПереноса[ДатаПодачиДекларации]), ГрафикПереноса[ДатаПодачиДекларации], ДатаПодачиДекларации);
		
		Возврат КонецДня(ДатаПереноса);
		
	КонецЕсли;
	
КонецФункции

Функция ЗаполнитьНДСКВычетуПоДаннымРегистраНДСПредъявленный(СтруктураПараметров)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДатаОплаты,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйОстатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И НЕ ВидЦенности В (&ИсключаемыеВидыЦенностей)
	|				И НЕ СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	|				И НЕ СчетФактура ССЫЛКА Документ.АвансовыйОтчет) КАК НДСПредъявленныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПоПриобретеннымЦенностям.СчетФактура,
	|	НДСПоПриобретеннымЦенностям.ВидЦенности,
	|	НДСПоПриобретеннымЦенностям.СтавкаНДС,
	|	НДСПоПриобретеннымЦенностям.СчетУчетаНДС,
	|	НДСПоПриобретеннымЦенностям.СтоимостьОстаток,
	|	НДСПоПриобретеннымЦенностям.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПоПриобретеннымЦенностям
	|ИЗ
	|	РегистрНакопления.НДСПоПриобретеннымЦенностям.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И НДСВключенВСтоимость = ЛОЖЬ
	|				И ВидЦенности В (&ВидЦенностиОС)
	|				И СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОборудованиеКУстановке)) КАК НДСПоПриобретеннымЦенностям
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПоПриобретеннымЦенностям.СчетФактура,
	|	НДСПоПриобретеннымЦенностям.ВидЦенности,
	|	НДСПоПриобретеннымЦенностям.СтавкаНДС,
	|	НДСПоПриобретеннымЦенностям.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНДС.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаНДС.СчетФактура,
	|	АналитикаУчетаНДС.ВидЦенности,
	|	АналитикаУчетаНДС.СчетУчетаНДС,
	|	АналитикаУчетаНДС.СтавкаНДС
	|ПОМЕСТИТЬ ВТАналитикаУчетаНДС
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНДС КАК АналитикаУчетаНДС
	|ГДЕ
	|	АналитикаУчетаНДС.ВидЦенности В(&ВидыЦенностейОСиНМА)
	|	И АналитикаУчетаНДС.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаЗатрат.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТАналитикаУчетаЗатрат
	|ИЗ
	|	РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат
	|ГДЕ
	|	АналитикаУчетаЗатрат.Организация = &Организация
	|	И АналитикаУчетаЗатрат.СчетЗатрат <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОборудованиеКУстановке)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАналитикаУчетаНДС.СчетФактура КАК СчетФактура,
	|	ВТАналитикаУчетаНДС.ВидЦенности КАК ВидЦенности,
	|	ВТАналитикаУчетаНДС.СтавкаНДС КАК СтавкаНДС,
	|	ВТАналитикаУчетаНДС.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСРаздельныйУчет.СуммаБезНДСОстаток,
	|	НДСРаздельныйУчет.НДСОстаток КАК НДСОстаток,
	|	НДСРаздельныйУчет.СпособУчетаНДС,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1))
	|			ИНАЧЕ ДанныеПервичныхДокументов.Дата
	|		КОНЕЦ, КВАРТАЛ) КАК ПериодПоступления
	|ПОМЕСТИТЬ ВТНДСРаздельныйУчет
	|ИЗ
	|	РегистрНакопления.НДСРаздельныйУчет.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И СпособУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
	|				И АналитикаУчетаНДС В
	|					(ВЫБРАТЬ
	|						ВТАналитикаУчетаНДС.КлючАналитики
	|					ИЗ
	|						ВТАналитикаУчетаНДС)
	|				И АналитикаУчетаЗатрат В
	|					(ВЫБРАТЬ
	|						ВТАналитикаУчетаЗатрат.КлючАналитики
	|					ИЗ
	|						ВТАналитикаУчетаЗатрат)) КАК НДСРаздельныйУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитикаУчетаНДС КАК ВТАналитикаУчетаНДС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|			ПО ВТАналитикаУчетаНДС.СчетФактура = ДанныеПервичныхДокументов.Документ
	|				И (ДанныеПервичныхДокументов.Организация = &Организация)
	|		ПО НДСРаздельныйУчет.АналитикаУчетаНДС = ВТАналитикаУчетаНДС.КлючАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНДСРаздельныйУчет.СчетФактура,
	|	ВТНДСРаздельныйУчет.ВидЦенности,
	|	ВТНДСРаздельныйУчет.СтавкаНДС,
	|	ВТНДСРаздельныйУчет.СчетУчетаНДС,
	|	ВЫБОР
	|		КОГДА ВТНДСРаздельныйУчет.СпособУчетаНДС = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен)
	|				И НЕ БазаРаспределенияНДС.ВыручкаНДС ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаЕНВД + БазаРаспределенияНДС.ВыручкаБезНДС + БазаРаспределенияНДС.ВыручкаНДС0 <> 0
	|						ТОГДА ВЫРАЗИТЬ(ВТНДСРаздельныйУчет.СуммаБезНДСОстаток * (БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаНДС0) / (БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаЕНВД + БазаРаспределенияНДС.ВыручкаБезНДС + БазаРаспределенияНДС.ВыручкаНДС0) КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВТНДСРаздельныйУчет.СуммаБезНДСОстаток
	|				КОНЕЦ
	|		ИНАЧЕ ВТНДСРаздельныйУчет.СуммаБезНДСОстаток
	|	КОНЕЦ КАК СуммаБезНДСОстаток,
	|	ВЫБОР
	|		КОГДА ВТНДСРаздельныйУчет.СпособУчетаНДС = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен)
	|				И НЕ БазаРаспределенияНДС.ВыручкаНДС ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаЕНВД + БазаРаспределенияНДС.ВыручкаБезНДС + БазаРаспределенияНДС.ВыручкаНДС0 <> 0
	|						ТОГДА ВЫРАЗИТЬ(ВТНДСРаздельныйУчет.НДСОстаток * (БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаНДС0) / (БазаРаспределенияНДС.ВыручкаНДС + БазаРаспределенияНДС.ВыручкаЕНВД + БазаРаспределенияНДС.ВыручкаБезНДС + БазаРаспределенияНДС.ВыручкаНДС0) КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВТНДСРаздельныйУчет.НДСОстаток
	|				КОНЕЦ
	|		ИНАЧЕ ВТНДСРаздельныйУчет.НДСОстаток
	|	КОНЕЦ КАК НДСОстаток
	|ПОМЕСТИТЬ НДСРаздельныйУчет
	|ИЗ
	|	ВТНДСРаздельныйУчет КАК ВТНДСРаздельныйУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БазаРаспределенияНДС КАК БазаРаспределенияНДС
	|		ПО ВТНДСРаздельныйУчет.ПериодПоступления = БазаРаспределенияНДС.Период
	|			И (БазаРаспределенияНДС.Организация = &Организация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0Остатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И НЕ ВидЦенности В (&ИсключаемыеВидыЦенностей)) КАК НДСПредъявленныйРеализация0Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДатаОплаты,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.СуммаБезНДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.СтоимостьОстаток, 0) - ЕСТЬNULL(НДСПоПриобретеннымЦенностям.НДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.НДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.НДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)
	|		КОНЕЦ) КАК НДС,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
	|	ВЫБОР
	|		КОГДА &Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		КОГДА НДСПредъявленныйОстатки.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ НДСПредъявленныйОстатки.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА ""16""
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВЫРАЗИТЬ(НДСПредъявленныйОстатки.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|								ТОГДА ""17""
	|							ИНАЧЕ ""03""
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА НДСПредъявленныйОстатки.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		КОГДА НДСПредъявленныйОстатки.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленныйОстатки.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(НДСПредъявленныйОстатки.СчетФактура КАК Документ.СчетФактураПолученный).БланкСтрогойОтчетности
	|			ТОГДА ""23""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПоПриобретеннымЦенностям КАК НДСПоПриобретеннымЦенностям
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПоПриобретеннымЦенностям.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПоПриобретеннымЦенностям.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПоПриобретеннымЦенностям.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПоПриобретеннымЦенностям.СчетУчетаНДС
	|			И (НДСПоПриобретеннымЦенностям.СтоимостьОстаток > 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйРеализация0Остатки КАК НДСПредъявленныйРеализация0Остатки
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПредъявленныйРеализация0Остатки.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПредъявленныйРеализация0Остатки.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПредъявленныйРеализация0Остатки.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
	|			И (НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток + НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И НДСПредъявленныйОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НДСРаздельныйУчет КАК НДСРаздельныйУчет
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСРаздельныйУчет.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСРаздельныйУчет.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСРаздельныйУчет.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСРаздельныйУчет.СчетУчетаНДС
	|			И (ЕСТЬNULL(НДСРаздельныйУчет.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСРаздельныйУчет.НДСОстаток, 0) > 0)
	|ГДЕ
	|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДатаОплаты,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	РеквизитыДокументовРасчетов.ДатаРегистратора
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСРаздельныйУчет.НДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.СтоимостьОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)
	|		КОНЕЦ) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураДата";

	// Исключаемые из анализа виды ценностей
	ИсключаемыеВидыЦенностей = Новый СписокЗначений;
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
		
	Запрос.УстановитьПараметр("ИсключаемыеВидыЦенностей", ИсключаемыеВидыЦенностей);
	
    ВидыЦенностейОСиНМА = Новый Массив;
	ВидыЦенностейОСиНМА.Добавить(Перечисления.ВидыЦенностей.НМА);
	ВидыЦенностейОСиНМА.Добавить(Перечисления.ВидыЦенностей.ОС);
	
	Запрос.УстановитьПараметр("ВидыЦенностейОСиНМА", 	  ВидыЦенностейОСиНМА);
	Запрос.УстановитьПараметр("ВидЦенностиОС", 			  Перечисления.ВидыЦенностей.ОС);
	Запрос.УстановитьПараметр("Организация",  			  СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", 					  КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ДатаГраница", 			  Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("РаздельныйУчетНДСНаСчете19",
		УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(СтруктураПараметров.Организация, СтруктураПараметров.Дата));

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗаполнитьНДСКВычетуПоДаннымРегистраНДСПредъявленныйРеализация0(СтруктураПараметров)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
	|	ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) КАК СуммаБезНДС,
	|	ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0) КАК НДС,
	|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
	|	НДСПредъявленныйРеализация0Остатки.Состояние,
	|	ВЫБОР
	|		КОГДА &Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ""25""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И (НЕ ВидЦенности В (&ИсключаемыеВидыЦенностей))
	|				И Состояние В (&ОтрабатываемыеСостояния)) КАК НДСПредъявленныйРеализация0Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И НДСПредъявленныйРеализация0Остатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
	|ГДЕ
	|	(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураДата";

	Запрос.УстановитьПараметр("Организация",	СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", 			КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ДатаГраница", 	Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));

	ОтрабатываемыеСостояния = Новый СписокЗначений;
	ОтрабатываемыеСостояния.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);
	ОтрабатываемыеСостояния.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);
	
	Запрос.УстановитьПараметр("ОтрабатываемыеСостояния",ОтрабатываемыеСостояния);
	
	// Исключаемые из анализа виды ценностей
	ИсключаемыеВидыЦенностей = Новый СписокЗначений;
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);	
    ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ИсключаемыеВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	
	Запрос.УстановитьПараметр("ИсключаемыеВидыЦенностей", ИсключаемыеВидыЦенностей);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("СписокСчетовФактур", ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(
		РезультатЗапроса.ВыгрузитьКолонку("СчетФактура")));
	
	Результат = РезультатЗапроса.СкопироватьКолонки();
	Результат.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Результат.Колонки.Добавить("ДатаОплаты", Новый ОписаниеТипов("Дата"));
	
	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(СтруктураПараметров.Организация, СтруктураПараметров.Дата);
	
	Если РаздельныйУчетНДСНаСчете19 Тогда
		
		// Получение поставщиков по счету-фактуре
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленный.Поставщик,
		|	НДСПредъявленный.СчетФактура
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
		|ГДЕ
		|	НДСПредъявленный.Организация = &Организация
		|	И НДСПредъявленный.СчетФактура В(&СписокСчетовФактур)
		|	И НДСПредъявленный.Поставщик <> &ПустойКонтрагент";
		
		Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	
		КонтрагентыПоСчетуФактуре = Запрос.Выполнить().Выгрузить();
	    КонтрагентыПоСчетуФактуре.Индексы.Добавить("СчетФактура");

		Для Каждого СтрокаКВычету Из РезультатЗапроса Цикл
			
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКВычету);
			
			Контрагент = КонтрагентыПоСчетуФактуре.Найти(СтрокаКВычету.СчетФактура, "СчетФактура");
			НоваяСтрока.Поставщик = ?(Контрагент <> Неопределено, Контрагент.Поставщик, Справочники.Контрагенты.ПустаяСсылка());
			
		КонецЦикла;
		
	Иначе
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.СчетФактура,
		|	НДСПредъявленныйОстатки.ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ДатаОплаты,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И (НЕ ВидЦенности В (&ИсключаемыеВидыЦенностей))
		|				И ВЫБОР
		|					КОГДА ВидЦенности В (&ВидыЦенностейОплата)
		|						ТОГДА ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК НДСПредъявленныйОстатки
		|ГДЕ
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток + НДСПредъявленныйОстатки.НДСОстаток > 0";
		
		// Виды ценностей, по которым требуется оплата
		ВидыЦенностейОплата = Новый СписокЗначений;
		ВидыЦенностейОплата.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
		ВидыЦенностейОплата.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
		
		Запрос.УстановитьПараметр("ВидыЦенностейОплата", ВидыЦенностейОплата);
		
		НДСПредъявленный = Запрос.Выполнить().Выгрузить();
		
		СтруктураОтбора = Новый структура("СчетФактура, ВидЦенности, СтавкаНДС, СчетУчетаНДС");
		
		// Отбираем строки к вычету по регистру НДСПредъявленныйРеализация0, не превышающие остаток по НДСПредъявленный.
		// Определяем поставщика и дату оплаты по остаткам НДСПредъявленный.
		
		Для Каждого СтрокаКВычету Из РезультатЗапроса Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКВычету);
			
			СтрокиНДСПредъявленный = НДСПредъявленный.НайтиСтроки(СтруктураОтбора);
			
			Если СтрокиНДСПредъявленный.Количество() = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для каждого СтрокаНДСПредъявленный Из СтрокиНДСПредъявленный Цикл
				
				Если СтрокаКВычету.СуммаБезНДС = 0 И СтрокаКВычету.НДС = 0 Тогда
					Прервать;
				КонецЕсли;	
				
				СуммаБезНДС = Мин(СтрокаКВычету.СуммаБезНДС, СтрокаНДСПредъявленный.СуммаБезНДС);
				НДС = Мин(СтрокаКВычету.НДС, СтрокаНДСПредъявленный.НДС);
				
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКВычету);
				НоваяСтрока.СуммаБезНДС = СуммаБезНДС;
				НоваяСтрока.НДС = НДС;
				НоваяСтрока.Поставщик = СтрокаНДСПредъявленный.Поставщик;
				НоваяСтрока.ДатаОплаты = СтрокаНДСПредъявленный.ДатаОплаты;
				
				СтрокаКВычету.СуммаБезНДС = СтрокаКВычету.СуммаБезНДС - СуммаБезНДС;
				СтрокаКВычету.НДС = СтрокаКВычету.НДС - НДС;
				СтрокаНДСПредъявленный.СуммаБезНДС = СтрокаНДСПредъявленный.СуммаБезНДС - СуммаБезНДС;
				СтрокаНДСПредъявленный.НДС = СтрокаНДСПредъявленный.НДС - НДС;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ИсключитьНДСпоНепринятымКУчетуНМА(СтруктураПараметров, ТаблицаНДСкВычету)

	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаНДСпоНМА = ТаблицаНДСкВычету.Скопировать(, "Поставщик, СчетФактура, СчетУчетаНДС, ВидЦенности");
	ТаблицаНДСпоНМА.Свернуть("Поставщик, СчетФактура, СчетУчетаНДС, ВидЦенности");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", 	СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", 			КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ДатаГраница", 	Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ТаблицаНДСкВычету", ТаблицаНДСпоНМА);

	Запрос.УстановитьПараметр("ВидСубконтоНМА", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	МассивВидыСубконтоКонтрагентыДокументы = Новый Массив;
	МассивВидыСубконтоКонтрагентыДокументы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	МассивВидыСубконтоКонтрагентыДокументы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);

	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентыДокументы", МассивВидыСубконтоКонтрагентыДокументы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДСкВычету.Поставщик КАК Поставщик,
	|	ТаблицаНДСкВычету.СчетФактура КАК СчетФактура,
	|	ТаблицаНДСкВычету.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаНДСкВычету.ВидЦенности КАК ВидЦенности
	|ПОМЕСТИТЬ ВТ_ТаблицаНДСкВычету
	|ИЗ
	|	&ТаблицаНДСкВычету КАК ТаблицаНДСкВычету
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Субсчета0805
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Субсчета1902
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымНематериальнымАктивам))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНДСкВычету.Поставщик,
	|	ВТ_ТаблицаНДСкВычету.СчетФактура
	|ПОМЕСТИТЬ ВТ_ТаблицаНДСпоНМА
	|ИЗ
	|	ВТ_ТаблицаНДСкВычету КАК ВТ_ТаблицаНДСкВычету
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Субсчета1902 КАК ВТ_Субсчета1902
	|		ПО ВТ_ТаблицаНДСкВычету.СчетУчетаНДС = ВТ_Субсчета1902.Ссылка
	|ГДЕ
	|	(ВТ_ТаблицаНДСкВычету.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|			ИЛИ НЕ ВТ_Субсчета1902.Ссылка ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВТ_ТаблицаНДСкВычету.Поставщик,
	|	ВТ_ТаблицаНДСкВычету.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК НМА,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК Поставщик,
	|	ХозрасчетныйОбороты.КорСубконто2 КАК СчетФактура,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаПоступленияНМА
	|ПОМЕСТИТЬ ВТ_ПоступлениеНМА
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&Дата,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_Субсчета0805.Ссылка
	|				ИЗ
	|					ВТ_Субсчета0805),
	|			&ВидСубконтоНМА,
	|			Организация = &Организация
	|				И (КорСубконто1, КорСубконто2) В
	|					(ВЫБРАТЬ
	|						ВТ_ТаблицаНДСпоНМА.Поставщик,
	|						ВТ_ТаблицаНДСпоНМА.СчетФактура
	|					ИЗ
	|						ВТ_ТаблицаНДСпоНМА),
	|			,
	|			&ВидыСубконтоКонтрагентыДокументы) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ХозрасчетныйОбороты.КорСубконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Поставщик,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК НМА,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК ОстатокНеПринятоКУчетуНМА
	|ПОМЕСТИТЬ ВТ_НеПринятоКУчетуНМА
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_Субсчета0805.Ссылка
	|				ИЗ
	|					ВТ_Субсчета0805),
	|			&ВидСубконтоНМА,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						ВТ_ПоступлениеНМА.НМА
	|					ИЗ
	|						ВТ_ПоступлениеНМА)) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот) КАК СуммаНДСПринятКвычету
	|ПОМЕСТИТЬ ВТ_ПоступлениеНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&Дата,
	|			,
	|			Организация = &Организация
	|				И (Поставщик, СчетФактура) В
	|					(ВЫБРАТЬ
	|						ВТ_ТаблицаНДСпоНМА.Поставщик,
	|						ВТ_ТаблицаНДСпоНМА.СчетФактура
	|					ИЗ
	|						ВТ_ТаблицаНДСпоНМА)) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНДСпоНМА.Поставщик КАК Поставщик,
	|	ВТ_ТаблицаНДСпоНМА.СчетФактура КАК СчетФактура,
	|	СУММА(ЕСТЬNULL(ВТ_ПоступлениеНМА.СуммаПоступленияНМА, 0)) КАК СуммаПоступленияНМА,
	|	СУММА(ЕСТЬNULL(ВТ_НеПринятоКУчетуНМА.ОстатокНеПринятоКУчетуНМА, 0)) КАК ОстатокНеПринятоКУчетуНМА
	|ПОМЕСТИТЬ ВТ_СгруппированныеДанныеПоНМА
	|ИЗ
	|	ВТ_ТаблицаНДСпоНМА КАК ВТ_ТаблицаНДСпоНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоступлениеНМА КАК ВТ_ПоступлениеНМА
	|		ПО ВТ_ТаблицаНДСпоНМА.Поставщик = ВТ_ПоступлениеНМА.Поставщик
	|			И ВТ_ТаблицаНДСпоНМА.СчетФактура = ВТ_ПоступлениеНМА.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НеПринятоКУчетуНМА КАК ВТ_НеПринятоКУчетуНМА
	|		ПО (ВТ_ПоступлениеНМА.НМА = ВТ_НеПринятоКУчетуНМА.НМА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаНДСпоНМА.Поставщик,
	|	ВТ_ТаблицаНДСпоНМА.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВТ_ТаблицаНДСпоНМА.Поставщик,
	|	ВТ_ТаблицаНДСпоНМА.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СгруппированныеДанныеПоНМА.Поставщик,
	|	ВТ_СгруппированныеДанныеПоНМА.СчетФактура,
	|	ВТ_СгруппированныеДанныеПоНМА.СуммаПоступленияНМА,
	|	ВТ_СгруппированныеДанныеПоНМА.ОстатокНеПринятоКУчетуНМА,
	|	ЕСТЬNULL(ВТ_ПоступлениеНДС.СуммаНДСПринятКвычету, 0) КАК СуммаНДСПринятКвычету
	|ИЗ
	|	ВТ_СгруппированныеДанныеПоНМА КАК ВТ_СгруппированныеДанныеПоНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоступлениеНДС КАК ВТ_ПоступлениеНДС
	|		ПО ВТ_СгруппированныеДанныеПоНМА.Поставщик = ВТ_ПоступлениеНДС.Поставщик
	|			И ВТ_СгруппированныеДанныеПоНМА.СчетФактура = ВТ_ПоступлениеНДС.СчетФактура";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	МассивКоэфСуммаБезНДС = Новый Массив;
	МассивКоэфСуммаНДС = Новый Массив;

	СтруктураПоиска = Новый Структура("Поставщик, СчетФактура");
	ТаблицаНДСкВычету.Индексы.Добавить("Поставщик, СчетФактура");
	
	Пока Выборка.Следующий() Цикл
	
		// Пропускаем позиции без суммы поступления НМА.
		Если Выборка.СуммаПоступленияНМА = 0 Тогда
			Продолжить;
		КонецЕсли;

		СтруктураПоиска.Поставщик	= Выборка.Поставщик;
		СтруктураПоиска.СчетФактура	= Выборка.СчетФактура;
		
		НайденныеСтроки = ТаблицаНДСкВычету.НайтиСтроки(СтруктураПоиска);
		
		// Рассчитаем долю НДС, которую пока нельзя принять к вычету исходя из принятых к учету НМА.
		Если Выборка.ОстатокНеПринятоКУчетуНМА = Выборка.СуммаПоступленияНМА Тогда
			// НМА еще не приняты к учету, НДС к вычету не принимается,
			// удалим строки из таблицы к вычету.
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ТаблицаНДСкВычету.Удалить(НайденнаяСтрока);
			КонецЦикла;		
			
			Продолжить;
		КонецЕсли;

		СуммаБезНДСФактическийОстаток 	= 0;
		СуммаНДСФактическийОстаток 		= 0;

		МассивКоэфСуммаБезНДС.Очистить();
		МассивКоэфСуммаНДС.Очистить();
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			СуммаБезНДСФактическийОстаток 	= СуммаБезНДСФактическийОстаток + НайденнаяСтрока.СуммаБезНДС;
			СуммаНДСФактическийОстаток 		= СуммаНДСФактическийОстаток 	+ НайденнаяСтрока.НДС;
			
			МассивКоэфСуммаНДС.Добавить(НайденнаяСтрока.НДС);
			МассивКоэфСуммаБезНДС.Добавить(НайденнаяСтрока.СуммаБезНДС);
		КонецЦикла;
		
		// Общая сумма НДС по счету-фактуре определяется как то, что осталось в НДСПредъявленном 
		// плюс то, что уже ранее было принято к вычету. Вычисляет таким образом, чтобы учесть возможные
		// исправления счета-фактуры.
		СуммаПоступленияНДС = СуммаНДСФактическийОстаток + Выборка.СуммаНДСПринятКвычету;
		
		СуммаБезНДСРасчетныйОстаток = Выборка.ОстатокНеПринятоКУчетуНМА;
		СуммаНДСРасчетныйОстаток 	= Окр(Выборка.ОстатокНеПринятоКУчетуНМА / Выборка.СуммаПоступленияНМА * СуммаПоступленияНДС, 2);

		
		СуммаБезНДСкВычету 	= СуммаБезНДСФактическийОстаток - СуммаБезНДСРасчетныйОстаток;
		СуммаНДСкВычету 	= СуммаНДСФактическийОстаток - СуммаНДСРасчетныйОстаток;
		
		МассивРаспределеннаяСуммаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаБезНДСкВычету, МассивКоэфСуммаБезНДС);
		МассивРаспределеннаяСуммаНДС 	= ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаНДСкВычету, МассивКоэфСуммаНДС);

		Для Инд = 0 По НайденныеСтроки.ВГраница() Цикл

			Если СуммаБезНДСкВычету <= 0 И СуммаНДСкВычету <= 0 Тогда
				// По счету-фактуре нельзя принимать НДС к вычету, надо удалить строку.
				ТаблицаНДСкВычету.Удалить(НайденныеСтроки[Инд]);
				Продолжить;
			КонецЕсли;
		
			Если МассивРаспределеннаяСуммаБезНДС <> Неопределено Тогда
				НайденныеСтроки[Инд].СуммаБезНДС = МассивРаспределеннаяСуммаБезНДС[Инд];
			КонецЕсли;
			
			Если МассивРаспределеннаяСуммаНДС <> Неопределено Тогда
				НайденныеСтроки[Инд].НДС = МассивРаспределеннаяСуммаНДС[Инд];
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;

КонецПроцедуры

Процедура ПолучитьДанныеОДокументахОплатыВвозИзТаможенногоСоюза(СтруктураПараметров, ТаблицаРезультатов)
	
	Если УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(СтруктураПараметров.Дата) = 3 Тогда
		ТаблицаРезультатов.Колонки.Добавить("НомерДокументаОплаты", ОбщегоНазначения.ОписаниеТипаСтрока(30));
		ТаблицаРезультатов.Колонки.Добавить("ДатаДокументаОплаты",  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.Дата));
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыОплатВКнигеПокупок.СчетФактура КАК СчетФактура,
	|	ДатыОплатВКнигеПокупок.ДатаДокументаОплаты КАК ДатаОплаты,
	|	ДатыОплатВКнигеПокупок.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ДатыОплатВКнигеПокупок.НомерДокументаОплаты КАК НомерДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК ДатыОплатВКнигеПокупок
	|ГДЕ
	|	ДатыОплатВКнигеПокупок.Организация = &Организация
	|	И ДатыОплатВКнигеПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|	И ДатыОплатВКнигеПокупок.Период <= &КонецПериода
	|	И ДатыОплатВКнигеПокупок.ДатаДокументаОплаты <= &КонецПериода";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	ОплаченныйНДС = Результат.Выгрузить();
	ОплаченныйНДС.Индексы.Добавить("СчетФактура");
		
	Отбор = Новый Структура("СчетФактура");

	Для каждого СтрокаТаблицы Из ТаблицаРезультатов Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		СтрокиОтбора = ОплаченныйНДС.НайтиСтроки(Отбор);
		
		Для каждого СтрокаОтбора Из СтрокиОтбора Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОтбора);
			Прервать;
		КонецЦикла;
			
	КонецЦикла;

КонецПроцедуры

Процедура ПолучитьДанныеОДокументахОплатыИмпорт(СтруктураПараметров, ТаблицаРезультатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаРезультатов", 	ТаблицаРезультатов);
	Запрос.УстановитьПараметр("Организация", 			СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("КонецПериода", 			Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", 			ВидыСубконто);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРезультатов.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ТаблицаРезультатов
	|ИЗ
	|	&ТаблицаРезультатов КАК ТаблицаРезультатов
	|ГДЕ
	|	ТаблицаРезультатов.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто3 КАК СчетФактура,
	|	МАКСИМУМ(ХозрасчетныйОбороты.КорСубконто3) КАК ДокументОплаты
	|ПОМЕСТИТЬ ДокументыОплаты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&КонецПериода,
	|			День,
	|			,
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто3 В
	|					(ВЫБРАТЬ
	|						ТаблицаРезультатов.СчетФактура
	|					ИЗ
	|						ТаблицаРезультатов),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто3
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОплаты.ДокументОплаты,
	|	ДокументыОплаты.СчетФактура,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОплаты,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокументаОплаты,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.Номер, ДАТАВРЕМЯ(1, 1, 1)) КАК НомерДокументаОплаты
	|ИЗ
	|	ДокументыОплаты КАК ДокументыОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И ДокументыОплаты.ДокументОплаты = РеквизитыДокументовРасчетов.Документ";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	ОплаченныйНДС = Результат.Выгрузить();
	
	Отбор = Новый Структура("СчетФактура");

	Для каждого СтрокаТаблицы Из ТаблицаРезультатов Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		СтрокиОтбора = ОплаченныйНДС.НайтиСтроки(Отбор);
		
		Для каждого СтрокаОтбора Из СтрокиОтбора Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОтбора);
			Прервать;
		КонецЦикла;
			
	КонецЦикла;

КонецПроцедуры

// Заполнение табличной части "Вычет НДС с полученных авансов"

Функция ПодготовитьДанныеРазделаВычетНДССПолученныхАвансов(СтруктураПараметров) Экспорт

	НДСсАвансов = Новый ТаблицаЗначений();
	Для Каждого КолонкаТабличнойЧасти Из Метаданные.Документы.ФормированиеЗаписейКнигиПокупок.ТабличныеЧасти.НДСсАвансов.Реквизиты Цикл
		НДСсАвансов.Колонки.Добавить(КолонкаТабличнойЧасти.Имя, КолонкаТабличнойЧасти.Тип);
	КонецЦикла; 
	НДСсАвансов.Колонки.Добавить("СчетФактураВыданныйДата");
	НДСсАвансов.Колонки.Добавить("СчетФактураДата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));	

	Если УчетнаяПолитика.УпрощенныйУчетНДС(СтруктураПараметров.Организация, СтруктураПараметров.Дата)
		ИЛИ СтруктураПараметров.Дата >= '20120101' Тогда
	
		ТаблицаАвансов = ЗаполнитьНДСсАвансовПоДаннымРегистраНДСсАвансовУпрощенныйУчет(СтруктураПараметров);
		
		Если ТаблицаАвансов.Количество() = 0 Тогда
			Возврат НДСсАвансов;
		КонецЕсли;
		
		СписокСчетовФактур = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ТаблицаАвансов.ВыгрузитьКолонку("СчетФактура"),Истина);
		ТаблицаЗачетовАвансов = ПолучитьДанныеОЗачтенныхАвансахПоСпискуСФ_УпрощенныйУчетНДС(СтруктураПараметров, СписокСчетовФактур);
		РаспределитьЗачетыАвансаПоСФ_УпрощенныйУчетНДС(СтруктураПараметров, ТаблицаАвансов, НДсСАвансов, СписокСчетовФактур, ТаблицаЗачетовАвансов);
		
	Иначе
		
		ДеревоНДСсАвансов = ЗаполнитьНДСсАвансовПоДаннымРегистраНДСсАвансов(СтруктураПараметров);
		Если ДеревоНДСсАвансов.Строки.Количество() = 0 Тогда
			// Дальнейшая обработка не требуется, не обнаружен НДС, который может быть принят к вычету.
			Возврат НДСсАвансов;
		КонецЕсли;
		
		СписокСчетовФактур = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ДеревоНДСсАвансов.Строки.ВыгрузитьКолонку("СчетФактура"),Истина);
		ТаблицаЗачетовАвансов = ПолучитьДанныеОЗачтенныхАвансахПоСпискуСФ(СтруктураПараметров, СписокСчетовФактур);
		РаспределитьЗачетыАвансаПоСФ(СтруктураПараметров, ДеревоНДСсАвансов, НДСсАвансов, СписокСчетовФактур, ТаблицаЗачетовАвансов);
		
		СтрокиКУдалению = НДсСАвансов.НайтиСтроки(Новый Структура("СуммаБезНДС,НДС,ВалютнаяСумма", 0, 0, 0));
		
		Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			НДсСАвансов.Удалить(СтрокаКУдалению);
		КонецЦикла;

	КонецЕсли;

	НДСсАвансов.Сортировать("СчетФактураДата,СчетФактура,Покупатель,ДоговорКонтрагента,ДатаСобытия,СтавкаНДС,ВалютаДокумента,ДокументОтгрузки,Состояние",
		Новый СравнениеЗначений);
	
	Возврат НДСсАвансов;
	
КонецФункции

Функция ЗаполнитьНДСсАвансовПоДаннымРегистраНДСсАвансовУпрощенныйУчет(СтруктураПараметров)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	ВидыСубконто = Новый Массив;
	
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные);
	
	Запрос.УстановитьПараметр("Организация",  СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Покупатель,
	|	ХозрасчетныйОстатки.Субконто2 КАК СчетФактура,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаНДСАванса
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаГраница, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоАвансамИПредоплатам), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	ОстаткиПоСчету = Запрос.Выполнить().Выгрузить();
	
	СписокСчетовФактур = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ОстаткиПоСчету.ВыгрузитьКолонку("СчетФактура"));
	
	Запрос.УстановитьПараметр("Организация",  СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	ВидыЦенностейАванс = Новый СписокЗначений;
	ВидыЦенностейАванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейАванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностейАванс.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	Запрос.УстановитьПараметр("ВидыЦенностейАванс", ВидыЦенностейАванс);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&ДатаГраница,
	|			,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И ВидЦенности В (&ВидыЦенностейАванс)) КАК НДСЗаписиКнигиПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И НДСЗаписиКнигиПродажОбороты.СчетФактура = РеквизитыДокументовРасчетов.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ДоговорКонтрагента,
	|	ИсправленныйСчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупокОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|		ИНАЧЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности
	|	КОНЕЦ КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПокупокОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&ДатаГраница,
	|			,
	|			Организация = &Организация
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И ВидЦенности В (&ВидыЦенностейАванс)) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупокОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|		ИНАЧЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	ДоговорКонтрагента,
	|	ИсправленныйСчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ВидЦенности КАК ВидЦенности,
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДСОборот) КАК СуммаБезНДСОборот,
	|	СУММА(НДСЗаписиКнигиПокупок.НДСОборот) КАК НДСОборот,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ПОМЕСТИТЬ ЗаписиКнигиПокупокОбъедененная
	|ИЗ
	|	ВТНДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ДоговорКонтрагента,
	|	ИсправленныйСчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактураДата,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот, 0)) КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0)) КАК НДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаписиКнигиПокупокОбъедененная КАК НДСЗаписиКнигиПокупокОбороты
	|		ПО (НДСЗаписиКнигиПокупокОбороты.СчетФактура = НДСЗаписиКнигиПродажОбороты.СчетФактура)
	|			И (НДСЗаписиКнигиПокупокОбороты.ВидЦенности = НДСЗаписиКнигиПродажОбороты.ВидЦенности)
	|			И (НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = НДСЗаписиКнигиПродажОбороты.СтавкаНДС)
	|			И (НДСЗаписиКнигиПокупокОбороты.ИсправленныйСчетФактура = НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура)
	|			И (НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента = НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента)
	|ГДЕ
	|	ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот, 0) > 0
	|	И ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактураДата";
	
	ОстаткиПоРегистру = Запрос.Выполнить().Выгрузить();
	
	Если ОстаткиПоРегистру.Количество() = 0 Тогда
		Возврат ОстаткиПоРегистру;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("СчетФактура, Покупатель");
	
	СтрокиКУдалению = Новый Массив;
	
	Для каждого СтрокаОстаткаПоСчету Из ОстаткиПоСчету Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаОстаткаПоСчету);
		
		СтрокиОстаткаПоРегистру = ОстаткиПоРегистру.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого СтрокаОстаткаПоРегистру Из СтрокиОстаткаПоРегистру Цикл
			
			Если СтрокаОстаткаПоСчету.СуммаНДСАванса = 0 Тогда
				СтрокиКУдалению.Добавить(СтрокаОстаткаПоРегистру);
				Продолжить;
			КонецЕсли;
			
			Если СтрокаОстаткаПоСчету.СуммаНДСАванса >= СтрокаОстаткаПоРегистру.НДС Тогда
				СтрокаОстаткаПоСчету.СуммаНДСАванса = СтрокаОстаткаПоСчету.СуммаНДСАванса - СтрокаОстаткаПоРегистру.НДС;
			Иначе				
				СтрокаОстаткаПоРегистру.СуммаБезНДС = СтрокаОстаткаПоРегистру.СуммаБезНДС - (СтрокаОстаткаПоРегистру.СуммаБезНДС/СтрокаОстаткаПоРегистру.НДС) * СтрокаОстаткаПоСчету.СуммаНДСАванса;
				СтрокаОстаткаПоРегистру.НДС = СтрокаОстаткаПоРегистру.НДС - СтрокаОстаткаПоСчету.СуммаНДСАванса;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ОстаткиПоРегистру.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	Если ОстаткиПоРегистру.Количество() = 0 Тогда
		Возврат ОстаткиПоРегистру;
	КонецЕсли;
	
	МассивСчетовАвансов = Новый Массив();
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); // 62.02
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал); // 62.22
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ); // 62.32
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	
	// Движения по курсовым разницам не должны вызывать регистрации аванса
	Запрос.УстановитьПараметр("МассивСчетовАвансов", МассивСчетовАвансов);
	
	СубконтоСчетаРасчетов_ЕстьДР = Новый Массив();
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("СубконтоСчетаРасчетов_ЕстьДР",  СубконтоСчетаРасчетов_ЕстьДР);
	
	// Получим остатки по авансам для определения суммы незачтенного аванса.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаАвансов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетовАвансов)
	|	И Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСконтрагентами)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Покупатель,
	|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОстатки.Субконто3 КАК СчетФактура,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаАвансов.Счет
	|				ИЗ
	|					СчетаАвансов КАК СчетаАвансов),
	|			&СубконтоСчетаРасчетов_ЕстьДР,
	|			Организация = &Организация
	|				И Субконто3 В (&СписокСчетовФактур)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3";
	
	НепогашенныеАвансы = Запрос.Выполнить().Выгрузить();
	
	СтруктураОтбора = Новый Структура("Покупатель, ДоговорКонтрагента");
	
	Для каждого НепогашенныйАвансПоСФ Из НепогашенныеАвансы Цикл
		
		Если НепогашенныйАвансПоСФ.СчетФактура = Неопределено Тогда
			Если СтруктураОтбора.Свойство("СчетФактура") Тогда
				СтруктураОтбора.Удалить("СчетФактура");
			КонецЕсли;
		Иначе
			Если НЕ СтруктураОтбора.Свойство("СчетФактура") Тогда
				СтруктураОтбора.Вставить("СчетФактура");
			КонецЕсли;
		КонецЕсли;
		// Отбор строк зачета авансов с документом расчетов
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, НепогашенныйАвансПоСФ);
		
		СтрокиАвансаПоОтбору = ОстаткиПоРегистру.НайтиСтроки(СтруктураОтбора);
		
		МассивСуммаБезНДС = Новый Массив();
		МассивСуммаНДС = Новый Массив();
		
		СуммаБезНДС = 0;
		СуммаНДС = 0;
		Для каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
			МассивСуммаБезНДС.Добавить(СтрокаАвансаПоОтбору.СуммаБезНДС);
			МассивСуммаНДС.Добавить(СтрокаАвансаПоОтбору.НДС);
			
			СуммаБезНДС = СуммаБезНДС + СтрокаАвансаПоОтбору.СуммаБезНДС;
			СуммаНДС = СуммаНДС + СтрокаАвансаПоОтбору.НДС;
		КонецЦикла; 
		
		СуммаСНДС = Мин(НепогашенныйАвансПоСФ.Сумма, (СуммаБезНДС+СуммаНДС));
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС = Окр(СуммаБезНДС * СуммаСНДС/(СуммаБезНДС+СуммаНДС),2);
		СуммаНДС = СуммаСНДС - СуммаБезНДС;
		
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаБезНДС,МассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаНДС,МассивСуммаНДС);
		КонецЕсли; 
		
		Счетчик = 0;
		Для каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
			СтрокаАвансаПоОтбору.СуммаБезНДС = СтрокаАвансаПоОтбору.СуммаБезНДС - ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0);
			СтрокаАвансаПоОтбору.НДС = СтрокаАвансаПоОтбору.НДС - ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
			Счетчик = Счетчик + 1;
		КонецЦикла; 
	КонецЦикла;
	
	СтрокиКУдалению = Новый Массив();
	Для каждого СтрокаПоСФ Из ОстаткиПоРегистру Цикл
		Если СтрокаПоСФ.СуммаБезНДС = 0 И СтрокаПоСФ.НДС = 0 Тогда
			СтрокиКУдалению.Добавить(СтрокаПоСФ);
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ОстаткиПоРегистру.Удалить(СтрокаКУдалению);
	КонецЦикла; 
	
	Возврат ОстаткиПоРегистру;
	
КонецФункции

Функция ПолучитьДанныеОЗачтенныхАвансахПоСпискуСФ_УпрощенныйУчетНДС(СтруктураПараметров, СписокСчетовФактур)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивСчетовАвансов = Новый Массив();
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); 	  // 62.02
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал); // 62.22
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);  // 62.32
	
	СубконтоСчетаРасчетов = Новый Массив();
	СубконтоСчетаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоСчетаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СубконтоСчетаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	СчетаУчетаДенежныхСредствОрганизации = Новый Массив();
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.ОперационнаяКасса);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);

	МассивСчетаВекселейПолученных = БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ВекселяПолученные);
	МассивСчетаПрочихДоходов = БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	
	КоррСчетаИсключения = МассивСчетаВекселейПолученных;
	
	Для каждого ЭлементМассива Из МассивСчетаПрочихДоходов Цикл
		КоррСчетаИсключения.Добавить(ЭлементМассива);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", 		СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	Запрос.УстановитьПараметр("ДатаГраница", 		Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("МассивСчетовАвансов", 					МассивСчетовАвансов);
	Запрос.УстановитьПараметр("СубконтоСчетаРасчетов",  				СубконтоСчетаРасчетов);
	Запрос.УстановитьПараметр("СчетаУчетаДенежныхСредствОрганизации",	СчетаУчетаДенежныхСредствОрганизации);
	Запрос.УстановитьПараметр("КоррСчетаИсключения", 					КоррСчетаИсключения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ МассивСчетовАвансов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетовАвансов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Субконто1 КАК Покупатель,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.Субконто3 КАК СчетФактура,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаАванса,
	|	ХозрасчетныйОбороты.Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&СчетаУчетаДенежныхСредствОрганизации)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратАвансовПолученных
	|ПОМЕСТИТЬ ОборотыПоДебету62
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ДатаГраница,
	|			День,
	|			Счет В
	|				(ВЫБРАТЬ
	|					МассивСчетовАвансов.Счет
	|				ИЗ
	|					МассивСчетовАвансов),
	|			&СубконтоСчетаРасчетов,
	|			Организация = &Организация
	|				И Субконто3 В (&СписокСчетовФактур),
	|			НЕ КорСчет В (&КоррСчетаИсключения),
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	ХозрасчетныйОбороты.Период,
	|	ХозрасчетныйОбороты.Субконто3,
	|	ХозрасчетныйОбороты.Организация,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&СчетаУчетаДенежныхСредствОрганизации)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	Покупатель,
	|	ДоговорКонтрагента,
	|	СчетФактура,
	|	ДатаСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОборотыПоДебету62.Организация,
	|	ОборотыПоДебету62.Покупатель,
	|	ОборотыПоДебету62.ДоговорКонтрагента,
	|	ОборотыПоДебету62.СчетФактура
	|ПОМЕСТИТЬ АналитикаСчета62
	|ИЗ
	|	ОборотыПоДебету62 КАК ОборотыПоДебету62
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОборотыПоДебету62.Организация,
	|	ОборотыПоДебету62.Покупатель,
	|	ОборотыПоДебету62.ДоговорКонтрагента,
	|	ОборотыПоДебету62.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПокупки.Организация КАК Организация,
	|	НДСПокупки.Поставщик КАК Покупатель,
	|	НДСПокупки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСПокупки.СчетФактура КАК СчетФактура,
	|	НАЧАЛОПЕРИОДА(НДСПокупки.ДатаСобытия, ДЕНЬ) КАК ДатаСобытия,
	|	СУММА(НДСПокупки.СуммаБезНДСОборот + НДСПокупки.НДСОборот) КАК СуммаВсего
	|ПОМЕСТИТЬ ОборотыКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&ДатаГраница,
	|			,
	|			(Организация, Поставщик, ДоговорКонтрагента, СчетФактура) В
	|				(ВЫБРАТЬ
	|					АналитикаСчета62.Организация,
	|					АналитикаСчета62.Покупатель,
	|					АналитикаСчета62.ДоговорКонтрагента,
	|					АналитикаСчета62.СчетФактура
	|				ИЗ
	|					АналитикаСчета62 КАК АналитикаСчета62)) КАК НДСПокупки
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПокупки.Организация,
	|	НДСПокупки.Поставщик,
	|	НДСПокупки.ДоговорКонтрагента,
	|	НДСПокупки.СчетФактура,
	|	НАЧАЛОПЕРИОДА(НДСПокупки.ДатаСобытия, ДЕНЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	Покупатель,
	|	Организация,
	|	ДатаСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыПоДебету62.Организация КАК Организация,
	|	ОборотыПоДебету62.Покупатель КАК Покупатель,
	|	ОборотыПоДебету62.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОборотыПоДебету62.СчетФактура КАК СчетФактура,
	|	ОборотыПоДебету62.ДатаСобытия КАК ДатаСобытия,
	|	ОборотыПоДебету62.ВозвратАвансовПолученных КАК ВозвратАвансовПолученных,
	|	ОборотыПоДебету62.СуммаАванса - ЕСТЬNULL(ОборотыКнигиПокупок.СуммаВсего, 0) КАК СуммаАванса
	|ИЗ
	|	ОборотыПоДебету62 КАК ОборотыПоДебету62
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКнигиПокупок КАК ОборотыКнигиПокупок
	|		ПО ОборотыПоДебету62.Организация = ОборотыКнигиПокупок.Организация
	|			И ОборотыПоДебету62.Покупатель = ОборотыКнигиПокупок.Покупатель
	|			И ОборотыПоДебету62.ДоговорКонтрагента = ОборотыКнигиПокупок.ДоговорКонтрагента
	|			И ОборотыПоДебету62.СчетФактура = ОборотыКнигиПокупок.СчетФактура
	|			И ОборотыПоДебету62.ДатаСобытия = ОборотыКнигиПокупок.ДатаСобытия
	|ГДЕ
	|	ОборотыПоДебету62.СуммаАванса - ЕСТЬNULL(ОборотыКнигиПокупок.СуммаВсего, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия";
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции

Процедура РаспределитьЗачетыАвансаПоСФ_УпрощенныйУчетНДС(СтруктураПараметров, ТаблицаАвансов, ТаблицаРезультатов,СписокСчетовФактур,ТаблицаЗачетовАвансов)
	
	СтруктураОтбора = Новый Структура("Покупатель, ДоговорКонтрагента");

	Для каждого ПогашенныйАвансПоСФ Из ТаблицаЗачетовАвансов Цикл
		
		Если ПогашенныйАвансПоСФ.СчетФактура = Неопределено Тогда
			Если СтруктураОтбора.Свойство("СчетФактура") Тогда
				СтруктураОтбора.Удалить("СчетФактура");
			КонецЕсли;
		Иначе
			Если Не СтруктураОтбора.Свойство("СчетФактура") Тогда
				СтруктураОтбора.Вставить("СчетФактура");
			КонецЕсли;
		КонецЕсли;
		// Отбор строк зачета авансов с документом расчетов
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, ПогашенныйАвансПоСФ);
		
		СтрокиАвансаПоОтбору = ТаблицаАвансов.НайтиСтроки(СтруктураОтбора);

		Если СтрокиАвансаПоОтбору.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		МассивСуммаБезНДС = Новый Массив();
		МассивСуммаНДС = Новый Массив();
		
		СуммаБезНДС = 0;
		СуммаНДС = 0;
		
		Для каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
			
			МассивСуммаБезНДС.Добавить(СтрокаАвансаПоОтбору.СуммаБезНДС);
			МассивСуммаНДС.Добавить(СтрокаАвансаПоОтбору.НДС);

			СуммаБезНДС = СуммаБезНДС + СтрокаАвансаПоОтбору.СуммаБезНДС;
			СуммаНДС = СуммаНДС + СтрокаАвансаПоОтбору.НДС;
			
		КонецЦикла;

		Если СуммаБезНДС + СуммаНДС = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		СуммаСНДС = Мин(ПогашенныйАвансПоСФ.СуммаАванса, (СуммаБезНДС+СуммаНДС));
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;

		СуммаБезНДС = Окр(СуммаБезНДС * СуммаСНДС/(СуммаБезНДС+СуммаНДС),2);
		СуммаНДС = Окр(СуммаСНДС - СуммаБезНДС, 2);
			
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, МассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаНДС, МассивСуммаНДС);
		КонецЕсли; 
		
		Счетчик = 0;
			
		Для Каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
			
			Если ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0) = 0 
				И ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0) = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаРезультатов.Добавить();
			
			СтрокаРезультата.СчетФактура		= СтрокаАвансаПоОтбору.СчетФактура;
			СтрокаРезультата.СчетФактураДата	= СтрокаАвансаПоОтбору.СчетФактураДата;
			СтрокаРезультата.Покупатель			= СтрокаАвансаПоОтбору.Покупатель;
			СтрокаРезультата.ДоговорКонтрагента	= СтрокаАвансаПоОтбору.ДоговорКонтрагента;
			СтрокаРезультата.СтавкаНДС			= СтрокаАвансаПоОтбору.СтавкаНДС;

			СтрокаРезультата.ДатаСобытия 			  = ПогашенныйАвансПоСФ.ДатаСобытия;
			СтрокаРезультата.ВозвратАвансовПолученных = ПогашенныйАвансПоСФ.ВозвратАвансовПолученных;
			СтрокаРезультата.СуммаБезНДС			  = ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик],0);
			СтрокаРезультата.НДС					  = ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик],0);

			СтрокаАвансаПоОтбору.СуммаБезНДС = СтрокаАвансаПоОтбору.СуммаБезНДС - ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0);
			СтрокаАвансаПоОтбору.НДС = СтрокаАвансаПоОтбору.НДС - ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
			
			Счетчик = Счетчик + 1;
			
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаполнитьНДСсАвансовПоДаннымРегистраНДСсАвансов(СтруктураПараметров)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСсАвансовОстатки.СчетФактура КАК СчетФактура,
	|	НДСсАвансовОстатки.СтавкаНДС,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
	|	НДСсАвансовОстатки.Покупатель,
	|	НДСсАвансовОстатки.ДоговорКонтрагента,
	|	НДСсАвансовОстатки.ВалютаАванса,
	|	СУММА(НДСсАвансовОстатки.СуммаБезНДСОстаток) КАК СуммаБезНДС,
	|	СУММА(НДСсАвансовОстатки.НДСОстаток) КАК НДС,
	|	СУММА(ВЫРАЗИТЬ(НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток * НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток / ВЫБОР
	|				КОГДА НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток > 0
	|					ТОГДА НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ВалютнаяСуммаСНДС
	|ИЗ
	|	РегистрНакопления.НДСсАвансов.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)) КАК НДСсАвансовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И НДСсАвансовОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
	|ГДЕ
	|	(НДСсАвансовОстатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСсАвансовОстатки.НДСОстаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеквизитыДокументовРасчетов.ДатаРегистратора,
	|	НДСсАвансовОстатки.СчетФактура,
	|	НДСсАвансовОстатки.СтавкаНДС,
	|	НДСсАвансовОстатки.ВалютаАванса,
	|	НДСсАвансовОстатки.ДоговорКонтрагента,
	|	НДСсАвансовОстатки.Покупатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураДата
	|ИТОГИ ПО
	|	СчетФактура";

	Запрос.УстановитьПараметр("Организация",  СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ДатаГраница", новый Граница(КонецДня(СтруктураПараметров.Дата),ВидГраницы.Включая));
	
	// Анализируемые виды ценностей
	ВидыЦенностейАванс = Новый СписокЗначений;
	ВидыЦенностейАванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейАванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностейАванс.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	Запрос.УстановитьПараметр("ВидыЦенностейАванс", ВидыЦенностейАванс);

	ДеревоНДСсАвансов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ДеревоНДСсАвансов.Строки.Количество() = 0 тогда 
		Возврат ДеревоНДСсАвансов;
	КонецЕсли;
	
	СписокСчетовФактур = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(ДеревоНДСсАвансов.Строки.ВыгрузитьКолонку("СчетФактура"), Истина);
	
	// Получим остатки по авансам для определения суммы незачтенного аванса.
	МассивСчетовАвансов = Новый Массив();
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); // 62.02
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал); // 62.22
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ); // 62.32
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	
	// Движения по курсовым разницам не должны вызывать регистрации аванса
	Запрос.УстановитьПараметр("МассивСчетовАвансов", МассивСчетовАвансов);
	
	СубконтоСчетаРасчетов_ЕстьДР = Новый Массив();
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("СубконтоСчетаРасчетов_ЕстьДР",  СубконтоСчетаРасчетов_ЕстьДР);

	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	// Получим остатки по авансам для определения суммы незачтенного аванса.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаАвансов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетовАвансов)
	|	И Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСконтрагентами)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Покупатель,
	|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОстатки.Субконто3 КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет.Валютный
	|			ТОГДА ХозрасчетныйОстатки.Валюта
	|		ИНАЧЕ &ВалютаРегламентированногоУчета
	|	КОНЕЦ КАК ВалютаРасчетов,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОстатки.Счет.Валютный
	|					И ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах, ЛОЖЬ) = ЛОЖЬ
	|				ТОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|		КОНЕЦ) КАК ВалютнаяСумма,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаАвансов.Счет
	|				ИЗ
	|					СчетаАвансов КАК СчетаАвансов),
	|			&СубконтоСчетаРасчетов_ЕстьДР,
	|			Организация = &Организация
	|				И Субконто3 В (&СписокСчетовФактур)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет.Валютный
	|			ТОГДА ХозрасчетныйОстатки.Валюта
	|		ИНАЧЕ &ВалютаРегламентированногоУчета
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|ИТОГИ ПО
	|	ДокументОплаты";
	
	Запрос.Текст = СтрЗаменить(	Запрос.Текст, 
								"ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("ХозрасчетныйОстатки.Субконто2"));
	
	НепогашенныеАвансы = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого НепогашенныйАвансПоСФ Из НепогашенныеАвансы.Строки Цикл
		
		ЗафиксированныйАвансПоСФ = ДеревоНДСсАвансов.Строки.Найти(НепогашенныйАвансПоСФ.ДокументОплаты,"СчетФактура");
		Если ЗафиксированныйАвансПоСФ = Неопределено Тогда
		    Продолжить;
		КонецЕсли; 
		
		Для каждого СтрокаЗафиксированногоАванса Из НепогашенныйАвансПоСФ.Строки Цикл
			
			ВалютаАванса = ?(СтрокаЗафиксированногоАванса.РасчетыВУсловныхЕдиницах 
				ИЛИ НЕ ЗначениеЗаполнено(СтрокаЗафиксированногоАванса.ВалютаРасчетов),Константы.ВалютаРегламентированногоУчета.Получить(),СтрокаЗафиксированногоАванса.ВалютаРасчетов);
						
			Отбор = Новый Структура("Покупатель, ДоговорКонтрагента, ВалютаАванса", СтрокаЗафиксированногоАванса.Покупатель, СтрокаЗафиксированногоАванса.ДоговорКонтрагента, ВалютаАванса);
			
			СтрокиАвансаПоОтбору = ЗафиксированныйАвансПоСФ.Строки.НайтиСтроки(Отбор);
			Если СтрокиАвансаПоОтбору.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			МассивСуммаБезНДС = Новый Массив();
			МассивСуммаНДС = Новый Массив();
			МассивВалютнаяСуммаСНДС = Новый Массив();
			
			СуммаБезНДС = 0;
			СуммаНДС = 0;
			ВалютнаяСуммаСНДС = 0;
			Для каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
				МассивСуммаБезНДС.Добавить(СтрокаАвансаПоОтбору.СуммаБезНДС);
				МассивСуммаНДС.Добавить(СтрокаАвансаПоОтбору.НДС);
				МассивВалютнаяСуммаСНДС.Добавить(СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС);
				
				СуммаБезНДС = СуммаБезНДС + СтрокаАвансаПоОтбору.СуммаБезНДС;
				СуммаНДС = СуммаНДС + СтрокаАвансаПоОтбору.НДС;
				ВалютнаяСуммаСНДС = ВалютнаяСуммаСНДС + СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС
			КонецЦикла; 
			
			Если ВалютнаяСуммаСНДС = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			Если СтрокаЗафиксированногоАванса.ВалютаРасчетов = Константы.ВалютаРегламентированногоУчета.Получить() 
				ИЛИ НЕ ЗначениеЗаполнено(СтрокаЗафиксированногоАванса.ВалютаРасчетов) Тогда
				// Сопоставление по рублевой сумме
				ВалютнаяСуммаСНДС = Окр(ВалютнаяСуммаСНДС*Мин(СтрокаЗафиксированногоАванса.Сумма, (СуммаБезНДС+СуммаНДС))/(СуммаБезНДС+СуммаНДС), 2);
				СуммаСНДС = Мин(СтрокаЗафиксированногоАванса.Сумма, (СуммаБезНДС+СуммаНДС));
				Если СуммаСНДС = 0 Тогда
					Продолжить;
				КонецЕсли;
				
			Иначе
				// Сопоставление по валютной сумме
				СуммаСНДС = Окр((СуммаБезНДС+СуммаНДС)*Мин(СтрокаЗафиксированногоАванса.ВалютнаяСумма, ВалютнаяСуммаСНДС)/ВалютнаяСуммаСНДС,2);
				ВалютнаяСуммаСНДС = Мин(СтрокаЗафиксированногоАванса.ВалютнаяСумма, ВалютнаяСуммаСНДС);
				
				Если ВалютнаяСуммаСНДС = 0 Тогда
					Продолжить;
				КонецЕсли; 
				
			КонецЕсли; 
			
			СуммаБезНДС = Окр(СуммаБезНДС * СуммаСНДС/(СуммаБезНДС+СуммаНДС),2);
			СуммаНДС = СуммаСНДС - СуммаБезНДС;
			
			Если СуммаБезНДС > 0 Тогда
				МассивСуммаБезНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаБезНДС,МассивСуммаБезНДС);
			КонецЕсли;
			
			Если СуммаНДС > 0 Тогда
				МассивСуммаНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаНДС,МассивСуммаНДС);
			КонецЕсли; 
			
			Если ВалютнаяСуммаСНДС > 0 Тогда
				МассивВалютнаяСуммаСНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ВалютнаяСуммаСНДС,МассивВалютнаяСуммаСНДС);
			КонецЕсли; 
			
			Счетчик = 0;
			Для каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
				СтрокаАвансаПоОтбору.СуммаБезНДС = СтрокаАвансаПоОтбору.СуммаБезНДС - ?(СуммаБезНДС > 0,МассивСуммаБезНДС[Счетчик], 0);
				СтрокаАвансаПоОтбору.НДС = СтрокаАвансаПоОтбору.НДС - ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
				СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС = СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС - ?(ВалютнаяСуммаСНДС > 0, МассивВалютнаяСуммаСНДС[Счетчик], 0);
				Счетчик = Счетчик + 1;
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
 	КУдалениюСФ = Новый Массив();
	Для каждого СтрокаПоСФ Из ДеревоНДСсАвансов.Строки Цикл
		СтрокиКУдалению = Новый Массив();
		Для каждого СтрокаАванса Из СтрокаПоСФ.Строки Цикл
			Если СтрокаАванса.СуммаБезНДС = 0 И СтрокаАванса.НДС = 0 И СтрокаАванса.ВалютнаяСуммаСНДС = 0 Тогда
				СтрокиКУдалению.Добавить(СтрокаАванса);
			КонецЕсли; 
		КонецЦикла; 
		
		Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			СтрокаПоСФ.Строки.Удалить(СтрокаКУдалению);
		КонецЦикла; 
		Если СтрокаПоСФ.Строки.Количество() = 0 тогда
			КУдалениюСФ.Добавить(СтрокаПоСФ);
		Иначе
			СтрокаПоСФ.СуммаБезНДС = СтрокаПоСФ.Строки.Итог("СуммаБезНДС");
			СтрокаПоСФ.НДС = СтрокаПоСФ.Строки.Итог("НДС");
			СтрокаПоСФ.ВалютнаяСуммаСНДС = СтрокаПоСФ.Строки.Итог("ВалютнаяСуммаСНДС");
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого СтрокаКУдалению Из КУдалениюСФ Цикл
		ДеревоНДСсАвансов.Строки.Удалить(СтрокаКУдалению);
	КонецЦикла; 
	
	Возврат ДеревоНДСсАвансов;
	
КонецФункции

Функция ПолучитьДанныеОЗачтенныхАвансахПоСпискуСФ(СтруктураПараметров, СписокСчетовФактур)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", 		СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	Запрос.УстановитьПараметр("ДатаГраница", новый Граница(КонецДня(СтруктураПараметров.Дата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	 
	МассивСчетовАвансов = Новый Массив();
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); // 62.02
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал); // 62.22
	МассивСчетовАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ); // 62.32
	
	// Движения по курсовым разницам не должны вызывать регистрации аванса
	Запрос.УстановитьПараметр("МассивСчетовАвансов", МассивСчетовАвансов);
	
	СубконтоСчетаРасчетов_ЕстьДР = Новый Массив();
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СубконтоСчетаРасчетов_ЕстьДР.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("СубконтоСчетаРасчетов_ЕстьДР",  СубконтоСчетаРасчетов_ЕстьДР);
	
	Запрос.УстановитьПараметр("СчетаВекселяПолученные", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ВекселяПолученные));
	Запрос.УстановитьПараметр("СчетаПрочиеДоходыИРасходы", 
		БухгалтерскийУчетВызовСервераПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_МассивСчетовАвансов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетовАвансов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_МассивСчетовАвансов.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаАвансов
	|ИЗ
	|	ВТ_МассивСчетовАвансов КАК ВТ_МассивСчетовАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ВТ_МассивСчетовАвансов.Счет = ХозрасчетныйВидыСубконто.Ссылка
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСконтрагентами)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Субконто1 КАК Покупатель,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.Субконто3 КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Счет.Валютный
	|				И НЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйОбороты.Валюта
	|		ИНАЧЕ &ВалютаРегламентированногоУчета
	|	КОНЕЦ КАК ВалютаРасчетов,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Счет.Валютный
	|					И НЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт ЕСТЬ NULL 
	|				ТОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	|		КОНЕЦ) КАК ВалютнаяСумма,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ХозрасчетныйОбороты.Период КАК Дата
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ДатаГраница,
	|			День,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаАвансов.Счет
	|				ИЗ
	|					СчетаАвансов КАК СчетаАвансов),
	|			&СубконтоСчетаРасчетов_ЕстьДР,
	|			Организация = &Организация
	|				И Субконто3 В (&СписокСчетовФактур),
	|			НЕ КорСчет В (&СчетаВекселяПолученные)
	|				И НЕ КорСчет В
	|						(ВЫБРАТЬ
	|							ВТ_МассивСчетовАвансов.Счет
	|						ИЗ
	|							ВТ_МассивСчетовАвансов),
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&СчетаПрочиеДоходыИРасходы)
	|				ТОГДА НЕ ХозрасчетныйОбороты.КорСубконто1 В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Справочник.ПрочиеДоходыИРасходы.Ссылка
	|							ИЗ
	|								Справочник.ПрочиеДоходыИРасходы
	|							ГДЕ
	|								Справочник.ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	ХозрасчетныйОбороты.Период,
	|	ХозрасчетныйОбороты.Субконто3,
	|	ХозрасчетныйОбороты.Организация,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Счет.Валютный
	|				И НЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйОбороты.Валюта
	|		ИНАЧЕ &ВалютаРегламентированногоУчета
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ
	|ИТОГИ ПО
	|	ДокументОплаты";
	
	Запрос.Текст = СтрЗаменить(	Запрос.Текст,
								"ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("ХозрасчетныйОбороты.Субконто2"));
	
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);	

КонецФункции

Процедура РаспределитьЗачетыАвансаПоСФ(СтруктураПараметров, ДеревоНДСсАвансов, ТаблицаРезультатов, СписокСчетовФактур, ТаблицаЗачетовАвансов)
	
	СчетаФактурыВыданные = ПолучитьСписокСчетовФактурВыданныхНаАванс(СписокСчетовФактур);
	
	Для каждого ПогашенныйАвансПоСФ Из ТаблицаЗачетовАвансов.Строки Цикл
		
		ЗафиксированныйАвансПоСФ = ДеревоНДСсАвансов.Строки.Найти(ПогашенныйАвансПоСФ.ДокументОплаты, "СчетФактура");
		Если ЗафиксированныйАвансПоСФ = Неопределено Тогда
		    Продолжить;
		КонецЕсли; 
		
		СчетФактураВыданныйДата = '00010101';
		СчетФактураВыданный = СчетаФактурыВыданные.Найти(ПогашенныйАвансПоСФ.ДокументОплаты, "СчетФактура");
		Если СчетФактураВыданный <> Неопределено Тогда
			СчетФактураВыданныйДата = СчетФактураВыданный.СчетФактураВыданныйДата;
		КонецЕсли;
		
		Для Каждого СтрокаПогашенияАванса Из ПогашенныйАвансПоСФ.Строки Цикл
			
			Если НачалоДня(СтрокаПогашенияАванса.Дата) < НачалоДня(СчетФактураВыданныйДата) Тогда
				Продолжить;
			КонецЕсли;
			
			ВалютаАванса = ?(СтрокаПогашенияАванса.РасчетыВУсловныхЕдиницах 
				ИЛИ НЕ ЗначениеЗаполнено(СтрокаПогашенияАванса.ВалютаРасчетов), Константы.ВалютаРегламентированногоУчета.Получить(),СтрокаПогашенияАванса.ВалютаРасчетов);
			
			Отбор = Новый Структура("Покупатель, ДоговорКонтрагента, ВалютаАванса", СтрокаПогашенияАванса.Покупатель, СтрокаПогашенияАванса.ДоговорКонтрагента, ВалютаАванса);
			
			СтрокиАвансаПоОтбору = ЗафиксированныйАвансПоСФ.Строки.НайтиСтроки(Отбор);
			Если СтрокиАвансаПоОтбору.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			МассивСуммаБезНДС = новый Массив();
			МассивСуммаНДС = новый Массив();
			МассивВалютнаяСуммаСНДС = новый Массив();
			
			СуммаБезНДС = 0;
			СуммаНДС = 0;
			ВалютнаяСуммаСНДС = 0;
			Для Каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
				
				МассивСуммаБезНДС.Добавить(СтрокаАвансаПоОтбору.СуммаБезНДС);
				МассивСуммаНДС.Добавить(СтрокаАвансаПоОтбору.НДС);
				МассивВалютнаяСуммаСНДС.Добавить(СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС);
				
				СуммаБезНДС = СуммаБезНДС + СтрокаАвансаПоОтбору.СуммаБезНДС;
				СуммаНДС = СуммаНДС + СтрокаАвансаПоОтбору.НДС;
				ВалютнаяСуммаСНДС = ВалютнаяСуммаСНДС + СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС
				
			КонецЦикла; 
			
			Если ВалютаАванса = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
				Если СуммаБезНДС+СуммаНДС = 0 тогда
					Продолжить;
				КонецЕсли; 
				// Сопоставление по рублевой сумме
				ВалютнаяСуммаСНДС = Окр(ВалютнаяСуммаСНДС * Мин(СтрокаПогашенияАванса.Сумма, (СуммаБезНДС + СуммаНДС))/(СуммаБезНДС + СуммаНДС), 2);
				СуммаСНДС = Мин(СтрокаПогашенияАванса.Сумма, (СуммаБезНДС + СуммаНДС));
				Если СуммаСНДС = 0 Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если ВалютнаяСуммаСНДС = 0 Тогда
					Продолжить;
				КонецЕсли; 
				// Сопоставление по валютной сумме
				СуммаСНДС = Окр((СуммаБезНДС + СуммаНДС) * Мин(СтрокаПогашенияАванса.ВалютнаяСумма, ВалютнаяСуммаСНДС)/ВалютнаяСуммаСНДС,2);
				ВалютнаяСуммаСНДС = Мин(СтрокаПогашенияАванса.ВалютнаяСумма, ВалютнаяСуммаСНДС);
				
				Если ВалютнаяСуммаСНДС = 0 Тогда
					Продолжить;
				КонецЕсли; 
				
			КонецЕсли; 
			
			СуммаБезНДС = Окр(СуммаБезНДС * СуммаСНДС/(СуммаБезНДС+СуммаНДС),2);
			СуммаНДС = СуммаСНДС - СуммаБезНДС;
			
			Если СуммаБезНДС > 0 Тогда
				МассивСуммаБезНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаБезНДС,МассивСуммаБезНДС);
			КонецЕсли;
			
			Если СуммаНДС > 0 Тогда
				МассивСуммаНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаНДС,МассивСуммаНДС);
			КонецЕсли; 
			
			Если ВалютнаяСуммаСНДС > 0 Тогда
				МассивВалютнаяСуммаСНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ВалютнаяСуммаСНДС,МассивВалютнаяСуммаСНДС);
			КонецЕсли; 
			
			Счетчик = 0;
			Для каждого СтрокаАвансаПоОтбору Из СтрокиАвансаПоОтбору Цикл
				
				Если ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик],0) = 0 
					И ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0) = 0 
					И ?(ВалютнаяСуммаСНДС > 0,МассивВалютнаяСуммаСНДС[Счетчик], 0)= 0  Тогда
					Продолжить;
				КонецЕсли; 
				
				СтрокаРезультата = ТаблицаРезультатов.Добавить();
				СтрокаРезультата.СчетФактура		= СтрокаАвансаПоОтбору.СчетФактура;
				СтрокаРезультата.СчетФактураДата	= СтрокаАвансаПоОтбору.СчетФактураДата;
				СтрокаРезультата.Покупатель			= СтрокаАвансаПоОтбору.Покупатель;
				СтрокаРезультата.ДоговорКонтрагента	= СтрокаАвансаПоОтбору.ДоговорКонтрагента;
				СтрокаРезультата.ВалютаДокумента	= СтрокаАвансаПоОтбору.ВалютаАванса;
				СтрокаРезультата.СтавкаНДС			= СтрокаАвансаПоОтбору.СтавкаНДС;
				СтрокаРезультата.ДатаСобытия		= СтрокаПогашенияАванса.Дата;
				СтрокаРезультата.СуммаБезНДС		= ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0);
				СтрокаРезультата.НДС				= ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
				СтрокаРезультата.ВалютнаяСумма		= ?(ВалютнаяСуммаСНДС > 0, МассивВалютнаяСуммаСНДС[Счетчик], 0);
				
				СтрокаАвансаПоОтбору.СуммаБезНДС 	   = СтрокаАвансаПоОтбору.СуммаБезНДС - ?(СуммаБезНДС > 0,МассивСуммаБезНДС[Счетчик], 0);
				СтрокаАвансаПоОтбору.НДС 			   = СтрокаАвансаПоОтбору.НДС - ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
				СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС = СтрокаАвансаПоОтбору.ВалютнаяСуммаСНДС - ?(ВалютнаяСуммаСНДС > 0, МассивВалютнаяСуммаСНДС[Счетчик], 0);
				
				Счетчик = Счетчик + 1;
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСписокСчетовФактурВыданныхНаАванс(СписокСчетовФактур)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК СчетФактураВыданный,
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК СчетФактура,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.Дата КАК СчетФактураВыданныйДата
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|ГДЕ
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование В(&СписокСчетовФактур)
	|	И СчетФактураВыданныйДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)";
				   
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Заполнение ТЧ "НДС с авансов выданных"

Процедура ПолучитьНДССАвансовВыданныхПоДаннымРегистраНДСПредъявленный(СтруктураПараметров, ТаблицаРезультатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если УчетНДСКлиентСервер.Версия(СтруктураПараметров.Дата) > 1 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)) КАК НДСПредъявленныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И НДСПредъявленныйОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), ТаблицаРезультатов);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьДанныеРазделаВычетНДССВыданныхАвансов(СтруктураПараметров) Экспорт 
	
	НДСсАвансовВыданных = Новый ТаблицаЗначений();
	Для Каждого КолонкаТабличнойЧасти Из Метаданные.Документы.ФормированиеЗаписейКнигиПокупок.ТабличныеЧасти.НДСсАвансовВыданных.Реквизиты Цикл
		НДСсАвансовВыданных.Колонки.Добавить(КолонкаТабличнойЧасти.Имя, КолонкаТабличнойЧасти.Тип);
	КонецЦикла; 
	
	НДСсАвансовВыданных.Колонки.Добавить("СчетФактураДата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));		
	
	ПолучитьНДССАвансовВыданныхПоДаннымРегистраНДСПредъявленный(СтруктураПараметров, НДСсАвансовВыданных);
	
	НДСсАвансовВыданных.Сортировать("СчетФактураДата,СчетФактура,Поставщик,ДоговорКонтрагента,СтавкаНДС",
		Новый СравнениеЗначений);
	
	Возврат НДСсАвансовВыданных;
		
КонецФункции

// Заполнение ТЧ "Вычет НДС по налоговому агенту"

Функция ПодготовитьДанныеРазделаВычетНДСПоНалоговомуАгенту(СтруктураПараметров) Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ФормированиеЗаписейКнигиПокупок;
	ВычетНДСПоНалоговомуАгенту = Новый ТаблицаЗначений();
	Для Каждого КолонкаТабличнойЧасти Из МетаданныеДокумента.ТабличныеЧасти.ВычетНДСПоНалоговомуАгенту.Реквизиты Цикл
		ВычетНДСПоНалоговомуАгенту.Колонки.Добавить(КолонкаТабличнойЧасти.Имя, КолонкаТабличнойЧасти.Тип);
	КонецЦикла; 
	
	Если НЕ СтруктураПараметров.ПредъявленНДСКВычету0 Тогда
		ТаблицаРезультатов = ЗаполнитьНДСПоНалоговомуАгентуКВычетуПоДаннымРегистраНДСПредъявленный(СтруктураПараметров);
	Иначе
		ТаблицаРезультатов = ЗаполнитьНДСПоНалоговомуАгентуКВычетуПоДаннымРегистраНДСПредъявленныйРеализация0(СтруктураПараметров);
	КонецЕсли;
	
	Если ТаблицаРезультатов.Количество() = 0 Тогда
		// Дальнейшая обработка не требуется, не обнаружен НДС, который может быть принят к вычету.
		Возврат ВычетНДСПоНалоговомуАгенту;
	КонецЕсли;
	
	ТаблицаРезультатов.Колонки.Добавить("ДокументОплаты", Новый ОписаниеТипов(МетаданныеДокумента.ТабличныеЧасти.ВычетНДСПоНалоговомуАгенту.Реквизиты.ДокументОплаты.Тип.Типы()));
	ТаблицаРезультатов.Колонки.Добавить("ДатаОплаты", Новый ОписаниеТипов("Дата"));
	
	ИсключитьНДСНалоговогоАгентаНеоплаченныйПоставщику(СтруктураПараметров, ТаблицаРезультатов);
	
	ИсключитьНДСпоНепринятымКУчетуНМА(СтруктураПараметров, ТаблицаРезультатов);
	
	ПолучитьДанныеОДокументахОплаты(СтруктураПараметров, ТаблицаРезультатов);
	
	ИсключитьНДСНалоговогоАгентаНеоплаченныйВБюджет(СтруктураПараметров, ТаблицаРезультатов);
	
	ОтфактурованныеВычеты = ОпределитьНаличиеСчетовФактурНалоговогоАгента(СтруктураПараметров, ТаблицаРезультатов);
	
	ТаблицаРезультатов.Сортировать("СчетФактураДата,СчетФактура,ДатаОплаты",
		Новый СравнениеЗначений);
	
	СтруктураОтбора = Новый Структура("ДокументОплаты, ДоговорКонтрагента");
	
	ВычетНДСПоНалоговомуАгенту.Очистить();
	ВычетНДСПоНалоговомуАгенту.Колонки.Добавить("СчетФактураДата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	ПолучитьДанныеОДокументахОплатыАгентскогоНДСВБюджет(СтруктураПараметров, ТаблицаРезультатов);
	
	Для Каждого СтрокаТаблицы Из ТаблицаРезультатов Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТаблицы);
		МассивСчетовФактур = ОтфактурованныеВычеты.НайтиСтроки(СтруктураОтбора);
		Если МассивСчетовФактур.Количество() <> 0 Тогда
			
			НоваяСтрока = ВычетНДСПоНалоговомуАгенту.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
			Если МассивСчетовФактур[0].Исправление Тогда
				НоваяСтрока.ИсправленныйСчетФактура = МассивСчетовФактур[0].Ссылка;
			КонецЕсли;	
				
		КонецЕсли;
		
	КонецЦикла;
			
	ВычетНДСПоНалоговомуАгенту.Свернуть("СчетФактураДата,ВидЦенности,Поставщик,ДоговорКонтрагента,СчетФактура,СтавкаНДС,ДокументОплаты,
		|ДатаОплаты,ДокументОплатыНДС,ДокументОтгрузки,Состояние,ЗаписьДополнительногоЛиста,КорректируемыйПериод,СчетУчетаНДС,ИсправленныйСчетФактура",
		"СуммаБезНДС,НДС");
	
	ВычетНДСПоНалоговомуАгенту.Сортировать("СчетФактураДата,СчетФактура,Поставщик,ДоговорКонтрагента,ВидЦенности,СтавкаНДС,
		|ДокументОплаты,ДатаОплаты,ДокументОплатыНДС,ДокументОтгрузки,Состояние,СчетУчетаНДС",
		Новый СравнениеЗначений);
		
	Возврат ВычетНДСПоНалоговомуАгенту;

КонецФункции

Функция ОпределитьНаличиеСчетовФактурНалоговогоАгента(СтруктураПараметров, ТаблицаДокументов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОплаты", ТаблицаДокументов.ВыгрузитьКолонку("ДокументОплаты"));
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ТаблицаДокументов.ВыгрузитьКолонку("ДоговорКонтрагента"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданный.ДокументОснование КАК ДокументОплаты,
	|	СчетФактураВыданный.Ссылка КАК Ссылка,
	|	СчетФактураВыданный.НомерИсправления КАК НомерИсправления,
	|	СчетФактураВыданный.Исправление КАК Исправление,
	|	СчетФактураВыданный.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование В(&ДокументОплаты)
	|	И СчетФактураВыданный.ДоговорКонтрагента В(&ДоговорКонтрагента)
	|	И СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент)
	|	И СчетФактураВыданный.Проведен = ИСТИНА";
				 
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗаполнитьНДСПоНалоговомуАгентуКВычетуПоДаннымРегистраНДСПредъявленный(СтруктураПараметров)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.ДатаОплаты,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйОстатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйОстатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК НДСПредъявленныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
	|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0Остатки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)) КАК НДСПредъявленныйРеализация0Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПоПриобретеннымЦенностям.СчетФактура КАК СчетФактура,
	|	НДСПоПриобретеннымЦенностям.ВидЦенности КАК ВидЦенности,
	|	НДСПоПриобретеннымЦенностям.СтавкаНДС КАК СтавкаНДС,
	|	НДСПоПриобретеннымЦенностям.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСПоПриобретеннымЦенностям.СтоимостьОстаток,
	|	НДСПоПриобретеннымЦенностям.НДСОстаток
	|ПОМЕСТИТЬ ВТНДСПоПриобретеннымЦенностям
	|ИЗ
	|	РегистрНакопления.НДСПоПриобретеннымЦенностям.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И НДСВключенВСтоимость = ЛОЖЬ
	|				И ВидЦенности В (&ВидЦенностиОС)
	|				И СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОборудованиеКУстановке)) КАК НДСПоПриобретеннымЦенностям
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНДС.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаНДС.СчетФактура,
	|	АналитикаУчетаНДС.ВидЦенности,
	|	АналитикаУчетаНДС.СчетУчетаНДС,
	|	АналитикаУчетаНДС.СтавкаНДС
	|ПОМЕСТИТЬ ВТАналитикаУчетаНДС
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНДС КАК АналитикаУчетаНДС
	|ГДЕ
	|	АналитикаУчетаНДС.ВидЦенности В(&ВидыЦенностейОСиНМА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАналитикаУчетаНДС.СчетФактура КАК СчетФактура,
	|	ВТАналитикаУчетаНДС.ВидЦенности КАК ВидЦенности,
	|	ВТАналитикаУчетаНДС.СтавкаНДС КАК СтавкаНДС,
	|	ВТАналитикаУчетаНДС.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСРаздельныйУчет.СуммаБезНДСОстаток,
	|	НДСРаздельныйУчет.НДСОстаток КАК НДСОстаток
	|ПОМЕСТИТЬ ВТНДСРаздельныйУчет
	|ИЗ
	|	РегистрНакопления.НДСРаздельныйУчет.Остатки(
	|			&ДатаГраница,
	|			Организация = &Организация
	|				И СпособУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
	|				И АналитикаУчетаНДС В
	|					(ВЫБРАТЬ
	|						ВТАналитикаУчетаНДС.КлючАналитики
	|					ИЗ
	|						ВТАналитикаУчетаНДС)) КАК НДСРаздельныйУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитикаУчетаНДС КАК ВТАналитикаУчетаНДС
	|		ПО НДСРаздельныйУчет.АналитикаУчетаНДС = ВТАналитикаУчетаНДС.КлючАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	СчетУчетаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.СуммаБезНДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.СтоимостьОстаток, 0) - ЕСТЬNULL(НДСПоПриобретеннымЦенностям.НДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.НДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.НДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)
	|		КОНЕЦ) КАК НДС,
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСРаздельныйУчет.НДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.СтоимостьОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)
	|		КОНЕЦ) КАК СНДС,
	|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата
	|ИЗ
	|	ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПоПриобретеннымЦенностям КАК НДСПоПриобретеннымЦенностям
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПоПриобретеннымЦенностям.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПоПриобретеннымЦенностям.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПоПриобретеннымЦенностям.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПоПриобретеннымЦенностям.СчетУчетаНДС
	|			И (НДСПоПриобретеннымЦенностям.СтоимостьОстаток > 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйРеализация0Остатки КАК НДСПредъявленныйРеализация0Остатки
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСПредъявленныйРеализация0Остатки.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСПредъявленныйРеализация0Остатки.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСПредъявленныйРеализация0Остатки.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС
	|			И (НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток + НДСПредъявленныйРеализация0Остатки.НДСОстаток > 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
	|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
	|			И НДСПредъявленныйОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСРаздельныйУчет КАК НДСРаздельныйУчет
	|		ПО НДСПредъявленныйОстатки.СчетФактура = НДСРаздельныйУчет.СчетФактура
	|			И НДСПредъявленныйОстатки.ВидЦенности = НДСРаздельныйУчет.ВидЦенности
	|			И НДСПредъявленныйОстатки.СтавкаНДС = НДСРаздельныйУчет.СтавкаНДС
	|			И НДСПредъявленныйОстатки.СчетУчетаНДС = НДСРаздельныйУчет.СчетУчетаНДС
	|			И (НДСРаздельныйУчет.СуммаБезНДСОстаток + НДСРаздельныйУчет.НДСОстаток > 0)
	|ГДЕ
	|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
	|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.ДатаОплаты,
	|	РеквизитыДокументовРасчетов.ДатаРегистратора
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(НДСПредъявленныйОстатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйОстатки.НДСОстаток, 0) - ВЫБОР
	|			КОГДА &РаздельныйУчетНДСНаСчете19
	|				ТОГДА ЕСТЬNULL(НДСРаздельныйУчет.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСРаздельныйУчет.НДСОстаток, 0)
	|			ИНАЧЕ ЕСТЬNULL(НДСПоПриобретеннымЦенностям.СтоимостьОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)
	|		КОНЕЦ) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураДата";

	
	ВидыЦенностейНалоговыйАгент = Новый СписокЗначений;
	ВидыЦенностейНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностейНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностейНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	
    ВидыЦенностейОСиНМА = Новый Массив;
	ВидыЦенностейОСиНМА.Добавить(Перечисления.ВидыЦенностей.НМА);
	ВидыЦенностейОСиНМА.Добавить(Перечисления.ВидыЦенностей.ОС);
	
	Запрос.УстановитьПараметр("ВидыЦенностейОСиНМА", ВидыЦенностейОСиНМА);
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
    Запрос.УстановитьПараметр("ВидыЦенностейНалоговыйАгент", ВидыЦенностейНалоговыйАгент);
	Запрос.УстановитьПараметр("ВидЦенностиОС", Перечисления.ВидыЦенностей.ОС);
	Запрос.УстановитьПараметр("РаздельныйУчетНДСНаСчете19",
		УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(СтруктураПараметров.Организация, СтруктураПараметров.Дата));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗаполнитьНДСПоНалоговомуАгентуКВычетуПоДаннымРегистраНДСПредъявленныйРеализация0(СтруктураПараметров)

	РаздельныйУчетНДСНаСчете19 = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(СтруктураПараметров.Организация, СтруктураПараметров.Дата);
	
	Запрос = Новый Запрос;
	
	Если РаздельныйУчетНДСНаСчете19 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйРеализация0Остатки.Организация,
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
		|	НДСПредъявленныйРеализация0Остатки.Состояние,
		|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
		|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0Остатки
		|ИЗ
		|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
		|				И Состояние В (&ОтрабатываемыеСостояния)) КАК НДСПредъявленныйРеализация0Остатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленный.Поставщик,
		|	НДСПредъявленный.ДоговорКонтрагента,
		|	НДСПредъявленный.ДатаОплаты,
		|	НДСПредъявленный.СчетФактура
		|ПОМЕСТИТЬ ВТНДСПредъявленный
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
		|ГДЕ
		|	НДСПредъявленный.Организация = &Организация
		|	И НДСПредъявленный.ВидЦенности В(&ВидыЦенностейНалоговыйАгент)
		|	И НДСПредъявленный.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И НДСПредъявленный.СчетФактура В
		|			(ВЫБРАТЬ
		|				ВТНДСПредъявленныйРеализация0Остатки.СчетФактура
		|			ИЗ
		|				ВТНДСПредъявленныйРеализация0Остатки)
		|	И НДСПредъявленный.Поставщик <> &ПустойКонтрагент
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НДСПредъявленный.СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйРеализация0Остатки.Организация,
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
		|	НДСПредъявленный.Поставщик,
		|	НДСПредъявленный.ДоговорКонтрагента,
		|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
		|	НДСПредъявленныйРеализация0Остатки.Состояние,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)) КАК СуммаБезНДС,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК НДС,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК СНДС,
		|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата
		|ИЗ
		|	ВТНДСПредъявленныйРеализация0Остатки КАК НДСПредъявленныйРеализация0Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
		|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
		|			И НДСПредъявленныйРеализация0Остатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНДСПредъявленный КАК НДСПредъявленный
		|		ПО НДСПредъявленныйРеализация0Остатки.СчетФактура = НДСПредъявленный.СчетФактура
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСПредъявленныйРеализация0Остатки.Организация,
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
		|	НДСПредъявленный.Поставщик,
		|	НДСПредъявленный.ДоговорКонтрагента,
		|	НДСПредъявленный.ДатаОплаты,
		|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
		|	НДСПредъявленныйРеализация0Остатки.Состояние,
		|	РеквизитыДокументовРасчетов.ДатаРегистратора
		|
		|ИМЕЮЩИЕ
		|	(СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)) > 0
		|		ИЛИ СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) > 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетФактураДата";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйРеализация0Остатки.Организация,
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
		|	НДСПредъявленныйРеализация0Остатки.Состояние,
		|	НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйРеализация0Остатки.НДСОстаток
		|ПОМЕСТИТЬ ВТНДСПредъявленныйРеализация0Остатки
		|ИЗ
		|	РегистрНакопления.НДСПредъявленныйРеализация0.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
		|				И Состояние В (&ОтрабатываемыеСостояния)) КАК НДСПредъявленныйРеализация0Остатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
		|	НДСПредъявленныйОстатки.ДатаОплаты,
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйОстатки.НДСОстаток
		|ПОМЕСТИТЬ ВТНДСПредъявленныйОстатки
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
		|				И ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК НДСПредъявленныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура,
		|	ВидЦенности,
		|	СтавкаНДС,
		|	СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйРеализация0Остатки.Организация,
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура КАК СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
		|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
		|	НДСПредъявленныйРеализация0Остатки.Состояние,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0)) КАК СуммаБезНДС,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК НДС,
		|	СУММА(ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.СуммаБезНДСОстаток, 0) + ЕСТЬNULL(НДСПредъявленныйРеализация0Остатки.НДСОстаток, 0)) КАК СНДС,
		|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата
		|ИЗ
		|	ВТНДСПредъявленныйРеализация0Остатки КАК НДСПредъявленныйРеализация0Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки
		|		ПО НДСПредъявленныйРеализация0Остатки.СчетФактура = НДСПредъявленныйОстатки.СчетФактура
		|			И НДСПредъявленныйРеализация0Остатки.ВидЦенности = НДСПредъявленныйОстатки.ВидЦенности
		|			И НДСПредъявленныйРеализация0Остатки.СтавкаНДС = НДСПредъявленныйОстатки.СтавкаНДС
		|			И НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС = НДСПредъявленныйОстатки.СчетУчетаНДС
		|			И (НДСПредъявленныйОстатки.СуммаБезНДСОстаток + НДСПредъявленныйОстатки.НДСОстаток > 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
		|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
		|			И НДСПредъявленныйРеализация0Остатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
		|ГДЕ
		|	(НДСПредъявленныйОстатки.СуммаБезНДСОстаток > 0
		|			ИЛИ НДСПредъявленныйОстатки.НДСОстаток > 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСПредъявленныйРеализация0Остатки.Организация,
		|	НДСПредъявленныйРеализация0Остатки.СчетФактура,
		|	НДСПредъявленныйРеализация0Остатки.ВидЦенности,
		|	НДСПредъявленныйРеализация0Остатки.СтавкаНДС,
		|	НДСПредъявленныйРеализация0Остатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
		|	НДСПредъявленныйОстатки.ДатаОплаты,
		|	НДСПредъявленныйРеализация0Остатки.ДокументОтгрузки,
		|	НДСПредъявленныйРеализация0Остатки.Состояние,
		|	РеквизитыДокументовРасчетов.ДатаРегистратора
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетФактураДата";
		
	КонецЕсли;

	Запрос.УстановитьПараметр("Организация",  СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	

	ВидыЦенностейНалоговыйАгент = Новый СписокЗначений;
	ВидыЦенностейНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностейНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностейНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
    	
	Запрос.УстановитьПараметр("ВидыЦенностейНалоговыйАгент", ВидыЦенностейНалоговыйАгент);
	
	ОтрабатываемыеСостояния = Новый СписокЗначений;
	ОтрабатываемыеСостояния.Добавить(Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0);
	ОтрабатываемыеСостояния.Добавить(Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0);
	
	Запрос.УстановитьПараметр("ОтрабатываемыеСостояния",ОтрабатываемыеСостояния);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПолучитьДанныеОДокументахОплаты(СтруктураПараметров, ТаблицаРезультатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);

	СчетаИсключения = Новый Массив;
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаРезультатов", ТаблицаРезультатов);
	Запрос.УстановитьПараметр("Организация", 		СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", 				Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", 		КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ВидыСубконто", 		ВидыСубконто);
	Запрос.УстановитьПараметр("СчетаИсключения", 	СчетаИсключения);
	Запрос.УстановитьПараметр("СчетПереоценки", 	ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРезультатов.СчетФактура КАК СчетФактура,
	|	ТаблицаРезультатов.Поставщик КАК Поставщик,
	|	ТаблицаРезультатов.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ТаблицаРезультатов
	|ИЗ
	|	&ТаблицаРезультатов КАК ТаблицаРезультатов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Поставщик,
	|	ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Поставщик,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.Субконто3 КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСубконто3 ЕСТЬ NULL 
	|				ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КорректировкаДолга
	|			ТОГДА ХозрасчетныйОбороты.Регистратор
	|		ИНАЧЕ ХозрасчетныйОбороты.КорСубконто3
	|	КОНЕЦ КАК ДокументОплаты,
	|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаБезНДС
	|ПОМЕСТИТЬ ТаблицаОборотыХозрасчетный
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&Дата,
	|			Регистратор,
	|			НЕ Счет В (&СчетаИсключения),
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаРезультатов.Поставщик
	|					ИЗ
	|						ТаблицаРезультатов)
	|				И Субконто2 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаРезультатов.ДоговорКонтрагента
	|					ИЗ
	|						ТаблицаРезультатов)
	|				И Субконто3 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаРезультатов.СчетФактура
	|					ИЗ
	|						ТаблицаРезультатов),
	|			КорСчет <> &СчетПереоценки,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ЕСТЬNULL(ХозрасчетныйОбороты.КорСубконто3, ХозрасчетныйОбороты.Регистратор) <> ХозрасчетныйОбороты.Субконто3
	|	И ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Поставщик,
	|	ХозрасчетныйОбороты.ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.СчетФактура,
	|	ХозрасчетныйОбороты.ДокументОплаты,
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаОплаты,
	|	ХозрасчетныйОбороты.СуммаБезНДС
	|ПОМЕСТИТЬ ОборотыРасчеты
	|ИЗ
	|	ТаблицаОборотыХозрасчетный КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Организация = &Организация)
	|			И ХозрасчетныйОбороты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВводНачальныхОстатковДанныеПоСФНДС.Контрагент,
	|	ВводНачальныхОстатковДанныеПоСФНДС.ДоговорКонтрагента,
	|	ВводНачальныхОстатковДанныеПоСФНДС.СчетФактура,
	|	ВводНачальныхОстатковДанныеПоСФНДС.ДокументОплаты,
	|	ВводНачальныхОстатковДанныеПоСФНДС.ДатаСФ,
	|	ВводНачальныхОстатковДанныеПоСФНДС.СуммаБезНДСОплата
	|ИЗ
	|	Документ.ВводНачальныхОстатков.ДанныеПоНДС КАК ВводНачальныхОстатковДанныеПоСФНДС
	|ГДЕ
	|	ВводНачальныхОстатковДанныеПоСФНДС.Ссылка.Дата <= &КонецПериода
	|	И ВводНачальныхОстатковДанныеПоСФНДС.Ссылка.Организация = &Организация
	|	И ВводНачальныхОстатковДанныеПоСФНДС.Ссылка.Проведен
	|	И ВводНачальныхОстатковДанныеПоСФНДС.ПредъявленСФ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.СчетФактура,
	|	ХозрасчетныйОбороты.Поставщик,
	|	ХозрасчетныйОбороты.ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДСОборот КАК СуммаОплаты
	|ПОМЕСТИТЬ ДокументыОплатыКнигаПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&Дата,
	|			,
	|			Организация = &Организация
	|				И СчетФактура В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ОборотыРасчеты.СчетФактура
	|					ИЗ
	|						ОборотыРасчеты)
	|				И Поставщик В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ОборотыРасчеты.Поставщик
	|					ИЗ
	|						ОборотыРасчеты)
	|				И ДоговорКонтрагента В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ОборотыРасчеты.ДоговорКонтрагента
	|					ИЗ
	|						ОборотыРасчеты)
	|				И ДокументОплаты В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ОборотыРасчеты.ДокументОплаты
	|					ИЗ
	|						ОборотыРасчеты)) КАК НДСЗаписиКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Поставщик,
	|	ДоговорКонтрагента,
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыРасчеты.СчетФактура,
	|	ОборотыРасчеты.Поставщик,
	|	ОборотыРасчеты.ДоговорКонтрагента,
	|	ОборотыРасчеты.ДокументОплаты,
	|	ОборотыРасчеты.ДатаОплаты КАК ДатаОплаты,
	|	ОборотыРасчеты.СуммаБезНДС - ЕСТЬNULL(ДокументыОплатыКнигаПокупок.СуммаОплаты, 0) КАК СуммаБезНДС
	|ПОМЕСТИТЬ ОборотыРасчетыДокументыОплаты
	|ИЗ
	|	ОборотыРасчеты КАК ОборотыРасчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыОплатыКнигаПокупок КАК ДокументыОплатыКнигаПокупок
	|		ПО ОборотыРасчеты.СчетФактура = ДокументыОплатыКнигаПокупок.СчетФактура
	|			И ОборотыРасчеты.Поставщик = ДокументыОплатыКнигаПокупок.Поставщик
	|			И ОборотыРасчеты.ДоговорКонтрагента = ДокументыОплатыКнигаПокупок.ДоговорКонтрагента
	|			И ОборотыРасчеты.ДокументОплаты = ДокументыОплатыКнигаПокупок.ДокументОплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОборотыРасчеты.СчетФактура,
	|	ОборотыРасчеты.Поставщик,
	|	ОборотыРасчеты.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРезультатов.СчетФактура,
	|	ТаблицаРезультатов.Поставщик,
	|	ТаблицаРезультатов.ДоговорКонтрагента,
	|	ОборотыРасчеты.ДокументОплаты,
	|	ОборотыРасчеты.ДатаОплаты,
	|	ОборотыРасчеты.СуммаБезНДС
	|ИЗ
	|	ТаблицаРезультатов КАК ТаблицаРезультатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыРасчетыДокументыОплаты КАК ОборотыРасчеты
	|		ПО ТаблицаРезультатов.СчетФактура = ОборотыРасчеты.СчетФактура
	|			И ТаблицаРезультатов.Поставщик = ОборотыРасчеты.Поставщик
	|			И ТаблицаРезультатов.ДоговорКонтрагента = ОборотыРасчеты.ДоговорКонтрагента
	|ГДЕ
	|	НЕ ОборотыРасчеты.ДокументОплаты ЕСТЬ NULL 
	|	И НЕ ОборотыРасчеты.ДокументОплаты = НЕОПРЕДЕЛЕНО
	|	И ОборотыРасчеты.СуммаБезНДС > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОборотыРасчеты.ДатаОплаты";

	ОплаченныйНДС = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("СчетФактура, Поставщик, ДоговорКонтрагента");

	СтрокиКУдалению = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТаблицаРезультатов Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		СтрокиОтбора = ОплаченныйНДС.НайтиСтроки(Отбор);
		
		Для каждого СтрокаОтбора Из СтрокиОтбора Цикл
			
			Если СтрокаОтбора.СуммаБезНДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(СтрокаОтбора.ДокументОплаты) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				// Вычет по поступлениям, по которым отражен возврат, уже отсторнирован
				Продолжить;
			КонецЕсли;
			
			СуммаБезНДССтроки = Мин(СтрокаТаблицы.СуммаБезНДС, СтрокаОтбора.СуммаБезНДС);
			
			Если СтрокаТаблицы.СуммаБезНДС = 0 Тогда
				НДССтроки = СтрокаТаблицы.НДС;
			Иначе	
				НДССтроки = Окр(СтрокаТаблицы.НДС * СуммаБезНДССтроки / СтрокаТаблицы.СуммаБезНДС, 2);
			КонецЕсли;
			
			Если СуммаБезНДССтроки < СтрокаТаблицы.СуммаБезНДС
				ИЛИ НДССтроки < СтрокаТаблицы.НДС Тогда
				
				НоваяСтрока = ТаблицаРезультатов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				НоваяСтрока.СуммаБезНДС = НоваяСтрока.СуммаБезНДС - СуммаБезНДССтроки;
				НоваяСтрока.НДС = НоваяСтрока.НДС - НДССтроки;
				
			КонецЕсли;
				
			СтрокаТаблицы.СуммаБезНДС = СуммаБезНДССтроки;
			СтрокаТаблицы.НДС = НДССтроки;
			СтрокаТаблицы.ДокументОплаты = СтрокаОтбора.ДокументОплаты;
			СтрокаТаблицы.ДатаОплаты = СтрокаОтбора.ДатаОплаты;
			
			СтрокаОтбора.СуммаБезНДС = СтрокаОтбора.СуммаБезНДС - СуммаБезНДССтроки;
			
			Прервать;
			
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументОплаты) Тогда 
			СтрокиКУдалению.Добавить(СтрокаТаблицы);
		КонецЕсли;
		
	КонецЦикла;	
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаРезультатов.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИсключитьНДСНалоговогоАгентаНеоплаченныйПоставщику(СтруктураПараметров, ТаблицаРезультатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Поставщики", ТаблицаРезультатов.ВыгрузитьКолонку("Поставщик"));
	Запрос.УстановитьПараметр("ДоговорыКонтрагентов", ТаблицаРезультатов.ВыгрузитьКолонку("ДоговорКонтрагента"));
	Запрос.УстановитьПараметр("СчетаФактуры", ТаблицаРезультатов.ВыгрузитьКолонку("СчетФактура"));

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Поставщик,
	|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОстатки.Субконто3 КАК СчетФактура,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаБезНДС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			,
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 В (&Поставщики)
	|				И Субконто2 В (&ДоговорыКонтрагентов)
	|				И Субконто3 В (&СчетаФактуры)) КАК ХозрасчетныйОстатки";
				   
	НеоплаченныйНДС = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("Поставщик, ДоговорКонтрагента, СчетФактура");

	СтрокиКУдалению = Новый Массив;
	
	Для каждого СтрокаТаблицы Из НеоплаченныйНДС Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		СтрокиОтбора = ТаблицаРезультатов.НайтиСтроки(Отбор);
		
		Для каждого СтрокаОтбора Из СтрокиОтбора Цикл
			
			Если СтрокаОтбора.НДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаБезНДС = Мин(СтрокаТаблицы.СуммаБезНДС, СтрокаОтбора.СуммаБезНДС);
			СтрокаОтбора.НДС = СтрокаОтбора.НДС - Окр(СтрокаОтбора.НДС * СуммаБезНДС / СтрокаОтбора.СуммаБезНДС, 2);
			СтрокаОтбора.СуммаБезНДС = СтрокаОтбора.СуммаБезНДС - СуммаБезНДС;
			
			Если СтрокаОтбора.СуммаБезНДС = 0 Или СтрокаОтбора.НДС = 0 Тогда
				СтрокиКУдалению.Добавить(СтрокаОтбора);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаРезультатов.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИсключитьНДСНалоговогоАгентаНеоплаченныйВБюджет(СтруктураПараметров, ТаблицаРезультатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаРезультатов", ТаблицаРезультатов);
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Поставщик,
	|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОстатки.Субконто3 КАК ДокументОплаты,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК НДС
	|ПОМЕСТИТЬ Остаток68_32
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРезультатов.Поставщик,
	|	ТаблицаРезультатов.ДоговорКонтрагента,
	|	ТаблицаРезультатов.ДокументОплаты
	|ПОМЕСТИТЬ ТаблицаРезультатов
	|ИЗ
	|	&ТаблицаРезультатов КАК ТаблицаРезультатов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРезультатов.Поставщик,
	|	ТаблицаРезультатов.ДоговорКонтрагента,
	|	ТаблицаРезультатов.ДокументОплаты,
	|	ЕСТЬNULL(Остаток68_32.НДС, 0) КАК НДС
	|ИЗ
	|	ТаблицаРезультатов КАК ТаблицаРезультатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остаток68_32 КАК Остаток68_32
	|		ПО ТаблицаРезультатов.Поставщик = Остаток68_32.Поставщик
	|			И ТаблицаРезультатов.ДоговорКонтрагента = Остаток68_32.ДоговорКонтрагента
	|			И ТаблицаРезультатов.ДокументОплаты = Остаток68_32.ДокументОплаты
	|ГДЕ
	|	ЕСТЬNULL(Остаток68_32.НДС, 0) > 0";
				   
	НеоплаченныйНДС = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("Поставщик, ДоговорКонтрагента, ДокументОплаты");

	СтрокиКУдалению = Новый Массив;
	
	Для каждого СтрокаТаблицы Из НеоплаченныйНДС Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		СтрокиОтбора = ТаблицаРезультатов.НайтиСтроки(Отбор);
		
		Для каждого СтрокаОтбора Из СтрокиОтбора Цикл
			
			Если СтрокаОтбора.НДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НДС = Мин(СтрокаТаблицы.НДС, СтрокаОтбора.НДС);
			СтрокаОтбора.СуммаБезНДС = СтрокаОтбора.СуммаБезНДС - Окр(СтрокаОтбора.СуммаБезНДС * НДС / СтрокаОтбора.НДС, 2);
			СтрокаОтбора.НДС = СтрокаОтбора.НДС - НДС;
			
			СтрокаТаблицы.НДС = СтрокаТаблицы.НДС - НДС;
			
			Если СтрокаОтбора.СуммаБезНДС = 0 Или СтрокаОтбора.НДС = 0 Тогда
				СтрокиКУдалению.Добавить(СтрокаОтбора);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаРезультатов.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьДанныеОДокументахОплатыАгентскогоНДСВБюджет(СтруктураПараметров, ТаблицаРезультатов)
	
	Если УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(СтруктураПараметров.Дата) < 3 Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеДокумента = Метаданные.Документы.ФормированиеЗаписейКнигиПокупок;
	ТипыДокументовОплатыНДС = МетаданныеДокумента.ТабличныеЧасти.ВычетНДСПоНалоговомуАгенту.Реквизиты.ДокументОплатыНДС.Тип.Типы();
	
	ТаблицаРезультатов.Колонки.Добавить("ДокументОплатыНДС", Новый ОписаниеТипов(ТипыДокументовОплатыНДС));
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаРезультатов", 	ТаблицаРезультатов);
	Запрос.УстановитьПараметр("Организация", 			СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Дата", 					Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", 			КонецДня(СтруктураПараметров.Дата));
	Запрос.УстановитьПараметр("ВидыСубконто", 			ВидыСубконто);
	Запрос.УстановитьПараметр("НДСНалоговогоАгента",	ПланыСчетов.Хозрасчетный.НДСНалоговогоАгента);
	Запрос.УстановитьПараметр("СчетПереоценки", 		ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРезультатов.ДокументОплаты КАК ДокументОплаты,
	|	ТаблицаРезультатов.Поставщик КАК Поставщик,
	|	ТаблицаРезультатов.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ТаблицаРезультатов
	|ИЗ
	|	&ТаблицаРезультатов КАК ТаблицаРезультатов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты,
	|	Поставщик,
	|	ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Поставщик,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	ХозрасчетныйОбороты.Субконто3 КАК ДокументОплаты,
	|	ХозрасчетныйОбороты.Регистратор КАК ДокументОплатыНДС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&Дата,
	|			Регистратор,
	|			Счет = &НДСНалоговогоАгента,
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаРезультатов.Поставщик
	|					ИЗ
	|						ТаблицаРезультатов)
	|				И Субконто2 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаРезультатов.ДоговорКонтрагента
	|					ИЗ
	|						ТаблицаРезультатов)
	|				И Субконто3 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаРезультатов.ДокументОплаты
	|					ИЗ
	|						ТаблицаРезультатов),
	|			КорСчет <> &СчетПереоценки,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ЕСТЬNULL(ХозрасчетныйОбороты.КорСубконто3, ХозрасчетныйОбороты.Регистратор) <> ХозрасчетныйОбороты.Субконто3
	|	И ХозрасчетныйОбороты.СуммаОборотДт > 0";
	
	ОплаченныйНДС = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("ДокументОплаты, Поставщик, ДоговорКонтрагента");

	Для каждого СтрокаТаблицы Из ТаблицаРезультатов Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		СтрокиОтбора = ОплаченныйНДС.НайтиСтроки(Отбор);
		
		Для каждого СтрокаОтбора Из СтрокиОтбора Цикл
			СтрокаТаблицы.ДокументОплатыНДС = СтрокаОтбора.ДокументОплатыНДС;
			Прервать;
		КонецЦикла;
			
	КонецЦикла;

КонецПроцедуры	

// Заполнение ТЧ "Вычет при изменении стоимости в сторону уменьшения"

Процедура ПолучитьВычетПриИзмененииСтоимостиВСторонуУменьшенияПоДаннымРегистраНДСПредъявленный(СтруктураПараметров, ТаблицаРезультатов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДатаГраница", Новый Граница(КонецДня(СтруктураПараметров.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаСФНеБолее", КонецДня(СтруктураПараметров.Дата));

	Если НЕ УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(СтруктураПараметров.Дата) Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Организация,
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
		|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
		|	НДСПредъявленныйОстатки.ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И СчетФактура ССЫЛКА Документ.КорректировкаРеализации) КАК НДСПредъявленныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
		|		ПО НДСПредъявленныйОстатки.СчетФактура = СчетФактураВыданный.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
		|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
		|			И НДСПредъявленныйОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
		|ГДЕ
		|	НЕ СчетФактураВыданный.Ссылка ЕСТЬ NULL 
		|	И СчетФактураВыданный.Ссылка.Дата <= &ДатаСФНеБолее"; 
		
	ИначеЕсли СтруктураПараметров.Дата < '20150101' Тогда 
			
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Организация,
		|	НДСПредъявленныйОстатки.СчетФактура,
		|	НДСПредъявленныйОстатки.ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
		|	ВЫБОР
		|		КОГДА НДСПредъявленныйОстатки.ИсправленныйСчетФактура ССЫЛКА Документ.КорректировкаРеализации
		|			ТОГДА НДСПредъявленныйОстатки.ИсправленныйСчетФактура
		|		ИНАЧЕ НДСПредъявленныйОстатки.СчетФактура
		|	КОНЕЦ КАК ДокументОснование,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйОстатки.НДСОстаток
		|ПОМЕСТИТЬ НДСПредъявленныйОстатки
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И СчетФактура ССЫЛКА Документ.КорректировкаРеализации) КАК НДСПредъявленныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Организация КАК Организация,
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
		|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
		|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик КАК Поставщик,
		|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС
		|ИЗ
		|	НДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
		|		ПО НДСПредъявленныйОстатки.ДокументОснование = СчетФактураВыданный.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
		|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
		|			И НДСПредъявленныйОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ
		|ГДЕ
		|	НЕ СчетФактураВыданный.Ссылка ЕСТЬ NULL 
		|	И НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления
		|	И СчетФактураВыданный.Ссылка.ВидСчетаФактуры <> ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
		|	И СчетФактураВыданный.Ссылка.Выставлен
		|	И СчетФактураВыданный.Ссылка.ДатаВыставления <= &ДатаСФНеБолее
		|	И (СчетФактураВыданный.Ссылка.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ИЛИ СчетФактураВыданный.Ссылка.Продавец = СчетФактураВыданный.Ссылка.Контрагент)";
		
	Иначе
		
		// В соответствии с письмом Минфина от 20 января 2015 г. N 03-07-05/1271
		// при уменьшении стоимости отгруженных товаров (выполненных работ, оказанных услуг) продавец, 
		// имеет право принять к вычету налог на добавленную стоимость в сумме разницы между суммами налога, 
		// на основании первичных учетных документов, подтверждающих согласие (факт уведомления) покупателя на уменьшение стоимости 
		// товаров (работ, услуг). При этом указанные первичные документы подлежат регистрации продавцом в книге покупок
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Организация,
		|	НДСПредъявленныйОстатки.СчетФактура,
		|	НДСПредъявленныйОстатки.ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик,
		|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
		|	ВЫБОР
		|		КОГДА НДСПредъявленныйОстатки.ИсправленныйСчетФактура ССЫЛКА Документ.КорректировкаРеализации
		|			ТОГДА НДСПредъявленныйОстатки.ИсправленныйСчетФактура
		|		ИНАЧЕ НДСПредъявленныйОстатки.СчетФактура
		|	КОНЕЦ КАК ДокументОснование,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток,
		|	НДСПредъявленныйОстатки.НДСОстаток
		|ПОМЕСТИТЬ НДСПредъявленныйОстатки
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный.Остатки(
		|			&ДатаГраница,
		|			Организация = &Организация
		|				И СчетФактура ССЫЛКА Документ.КорректировкаРеализации) КАК НДСПредъявленныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДСПредъявленныйОстатки.Организация КАК Организация,
		|	НДСПредъявленныйОстатки.СчетФактура КАК СчетФактура,
		|	ЕСТЬNULL(РеквизитыДокументовРасчетов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
		|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
		|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
		|	НДСПредъявленныйОстатки.СчетУчетаНДС КАК СчетУчетаНДС,
		|	НДСПредъявленныйОстатки.Поставщик КАК Поставщик,
		|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
		|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС
		|ИЗ
		|	НДСПредъявленныйОстатки КАК НДСПредъявленныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК РеквизитыДокументовРасчетов
		|		ПО (РеквизитыДокументовРасчетов.Организация = &Организация)
		|			И НДСПредъявленныйОстатки.СчетФактура = РеквизитыДокументовРасчетов.Документ";
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), ТаблицаРезультатов);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьДанныеРазделаВычетПриИзмененииСтоимостиВСторонуУменьшения(СтруктураПараметров) Экспорт 
	
	ВычетПриИзмененииСтоимостиВСторонуУменьшения = Новый ТаблицаЗначений();
	Для каждого КолонкаТабличнойЧасти Из Метаданные.Документы.ФормированиеЗаписейКнигиПокупок.ТабличныеЧасти.ВычетПриИзмененииСтоимостиВСторонуУменьшения.Реквизиты Цикл
		ВычетПриИзмененииСтоимостиВСторонуУменьшения.Колонки.Добавить(КолонкаТабличнойЧасти.Имя, КолонкаТабличнойЧасти.Тип);
	КонецЦикла; 
	
	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Колонки.Добавить("СчетФактураДата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	ПолучитьВычетПриИзмененииСтоимостиВСторонуУменьшенияПоДаннымРегистраНДСПредъявленный(СтруктураПараметров, ВычетПриИзмененииСтоимостиВСторонуУменьшения);
	
	ВычетПриИзмененииСтоимостиВСторонуУменьшения.Сортировать("СчетФактураДата,СчетФактура,Поставщик,ВидЦенности,СтавкаНДС,СчетУчетаНДС",
		Новый СравнениеЗначений);
	
	Возврат ВычетПриИзмененииСтоимостиВСторонуУменьшения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ОБНОВЛЕНИЯ

// Обработчик обновления
//
//Устанавливает новый код вида операции для сводных счетов-фактур по комиссии
Процедура УстановитьКодВидаОперации() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_СводныеКомиссионныеСФ
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученныйДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|	И СчетФактураПолученныйДокументыОснования.Ссылка.СводныйКомиссионный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.Ссылка КАК Ссылка,
	|	ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.НомерСтроки - 1 КАК ИндексСтроки,
	|	ВЫБОР
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.КодВидаОперации <> """"
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КодЗаполнен,
	|	ВЫБОР
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.Ссылка.ПредъявленНДСКВычету0
	|			ТОГДА ""25""
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА ""16""
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВЫРАЗИТЬ(ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|								ТОГДА ""17""
	|							ИНАЧЕ ""03""
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура КАК Документ.СчетФактураПолученный).БланкСтрогойОтчетности
	|			ТОГДА ""23""
	|		КОГДА НЕ ВТ_СводныеКомиссионныеСФ.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА ""27""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.ФормированиеЗаписейКнигиПокупок.ВычетПоПриобретеннымЦенностям КАК ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СводныеКомиссионныеСФ КАК ВТ_СводныеКомиссионныеСФ
	|		ПО ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура = ВТ_СводныеКомиссионныеСФ.ДокументОснование
	|ГДЕ
	|	ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.Ссылка.Дата >= ДАТАВРЕМЯ(2015, 1, 1)
	|	И ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.Ссылка,
	|	ВЫБОР
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.КодВидаОперации <> """"
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.НомерСтроки - 1,
	|	ВЫБОР
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.Ссылка.ПредъявленНДСКВычету0
	|			ТОГДА ""25""
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА ""16""
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВЫРАЗИТЬ(ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).Сделка ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|								ТОГДА ""17""
	|							ИНАЧЕ ""03""
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(ФормированиеЗаписейКнигиПокупокВычетПоПриобретеннымЦенностям.СчетФактура КАК Документ.СчетФактураПолученный).БланкСтрогойОтчетности
	|			ТОГДА ""23""
	|		КОГДА НЕ ВТ_СводныеКомиссионныеСФ.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА ""27""
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|ИТОГИ
	|	СУММА(КодЗаполнен)
	|ПО
	|	ОБЩИЕ,
	|	Ссылка";
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаИтоги.Следующий()
		И ВыборкаИтоги.КодЗаполнен = 0 Тогда
		ВыборкаДокументы = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокументы.Следующий() Цикл
			ФормированиеЗаписейДокумент = ВыборкаДокументы.Ссылка.ПолучитьОбъект();
			ВыборкаСтроки = ВыборкаДокументы.Выбрать();
			Пока ВыборкаСтроки.Следующий() Цикл
				ФормированиеЗаписейДокумент.ВычетПоПриобретеннымЦенностям[ВыборкаСтроки.ИндексСтроки].КодВидаОперации = ВыборкаСтроки.КодВидаОперации;
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ФормированиеЗаписейДокумент);
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецЕсли