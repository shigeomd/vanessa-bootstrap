&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	НастройкиУсловногоОформления = Новый Структура;

	УсловноеОформление.Элементы.Очистить();

	УстановитьУсловноеОформлениеВидимость();
	
	ОбновитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеВидимость()

	// Используются только при формировании книги покупок по ставке 0%

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямДокументОтгрузки");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямСостояние");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуДокументОтгрузки");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуСостояние");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ПредъявленНДСКВычету0", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// НДСсАвансовВалютнаяСумма, НДСсАвансовВалютаДокумента

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовВалютнаяСумма");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовВалютаДокумента");

	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"УпрощенныйУчетНДС", ВидСравненияКомпоновкиДанных.Равно, Истина);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"ВерсияНДС", ВидСравненияКомпоновкиДанных.Равно, 2);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// Используются только при формировании книги покупок по ставке 0% до 01.01.2012

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямИсправленныйСчетФактура");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовИсправленныйСчетФактура");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуИсправленныйСчетФактура");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПриИзмененииСтоимостиВСторонуУменьшенияИсправленныйСчетФактура");
		
	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ПредъявленНДСКВычету0", ВидСравненияКомпоновкиДанных.Равно, Истина);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"ВерсияНДС", ВидСравненияКомпоновкиДанных.Равно, 1);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// ВычетНДСПоНалоговомуАгентуДатаОплаты, ВычетПоПриобретеннымЦенностямДатаОплаты

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуДатаОплаты");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямДатаОплаты");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Равно, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// Используются, начиная с 01.01.2014.

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямНомерДокументаОплаты");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямДатаДокументаОплаты");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуДокументОплатыНДС");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Меньше, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьУсловноеОформление(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаВычетПоПриобретеннымЦенностям
		И НЕ Форма.НастройкиУсловногоОформления.Свойство("ВычетПоПриобретеннымЦенностямПроинициализировано") Тогда

		Форма.УстановитьУсловноеОформлениеВычетПоПриобретеннымЦенностям();
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаНДСсАвансов
		И НЕ Форма.НастройкиУсловногоОформления.Свойство("НДССАвансовПроинициализировано") Тогда

		Форма.УстановитьУсловноеОформлениеНДССАвансов();
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаНДСсАвансовВыданных
			И НЕ Форма.НастройкиУсловногоОформления.Свойство("НДССАвансовВыданныхПроинициализировано") Тогда
		
		Форма.УстановитьУсловноеОформлениеНДССАвансовВыданных();
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаВычетНДСПоНалоговомуАгенту
			И НЕ Форма.НастройкиУсловногоОформления.Свойство("ВычетНДСПоНалоговомуАгентуПроинициализировано") Тогда
		
		Форма.УстановитьУсловноеОформлениеВычетНДСПоНалоговомуАгенту();
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаВычетПриИзмененииСтоимостиВСторонуУменьшения
			И НЕ Форма.НастройкиУсловногоОформления.Свойство("ВычетПриИзмененииСтоимостиВСторонуУменьшенияПроинициализировано") Тогда

		Форма.УстановитьУсловноеОформлениеВычетПриИзмененииСтоимостиВСторонуУменьшения();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеВычетПоПриобретеннымЦенностям() Экспорт

	НастройкиУсловногоОформления.Вставить("ВычетПоПриобретеннымЦенностямПроинициализировано", Истина);


	// ВычетПоПриобретеннымЦенностямКорректируемыйПериод

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямКорректируемыйПериод");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетПоПриобретеннымЦенностям.ЗаписьДополнительногоЛиста", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетПоПриобретеннымЦенностям.КорректируемыйПериод", ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);


	// ВычетПоПриобретеннымЦенностямПоставщик

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямПоставщик");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетПоПриобретеннымЦенностям.ВидЦенности", ВидСравненияКомпоновкиДанных.Равно, Перечисления.ВидыЦенностей.СМРСобственнымиСилами);

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетПоПриобретеннымЦенностям.Поставщик", ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>'"));

	
	// ВычетПоПриобретеннымЦенностямНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПоПриобретеннымЦенностямНДС");

	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ВычетПоПриобретеннымЦенностям.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.НДС0);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ВычетПоПриобретеннымЦенностям.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.БезНДС);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеНДССАвансов() Экспорт

	НастройкиУсловногоОформления.Вставить("НДССАвансовПроинициализировано", Истина);


	// НДСсАвансовКорректируемыйПериод

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовКорректируемыйПериод");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НДСсАвансов.ЗаписьДополнительногоЛиста", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НДСсАвансов.КорректируемыйПериод", ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);


	// НДСсАвансовНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовНДС");

	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.НДСсАвансов.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.НДС0);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.НДСсАвансов.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.БезНДС);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеНДССАвансовВыданных() Экспорт

	НастройкиУсловногоОформления.Вставить("НДССАвансовВыданныхПроинициализировано", Истина);


	// НДСсАвансовВыданныхКорректируемыйПериод

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовВыданныхКорректируемыйПериод");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НДСсАвансовВыданных.ЗаписьДополнительногоЛиста", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НДСсАвансовВыданных.КорректируемыйПериод", ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);


	// НДСсАвансовВыданныхНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НДСсАвансовВыданныхНДС");

	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.НДСсАвансовВыданных.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.НДС0);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.НДСсАвансовВыданных.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.БезНДС);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеВычетНДСПоНалоговомуАгенту() Экспорт

	НастройкиУсловногоОформления.Вставить("ВычетНДСПоНалоговомуАгентуПроинициализировано", Истина);


	// ВычетНДСПоНалоговомуАгентуКорректируемыйПериод

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуКорректируемыйПериод");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетНДСПоНалоговомуАгенту.ЗаписьДополнительногоЛиста", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетНДСПоНалоговомуАгенту.КорректируемыйПериод", ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);


	// ВычетНДСПоНалоговомуАгентуНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетНДСПоНалоговомуАгентуНДС");

	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ВычетНДСПоНалоговомуАгенту.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.НДС0);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ВычетНДСПоНалоговомуАгенту.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.БезНДС);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеВычетПриИзмененииСтоимостиВСторонуУменьшения() Экспорт

	НастройкиУсловногоОформления.Вставить("ВычетПриИзмененииСтоимостиВСторонуУменьшенияПроинициализировано", Истина);


	// ВычетПриИзмененииСтоимостиВСторонуУменьшенияСчетУчетаНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПриИзмененииСтоимостиВСторонуУменьшенияСчетУчетаНДС");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.НДС", ВидСравненияКомпоновкиДанных.Равно, 0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);


	// ВычетПриИзмененииСтоимостиВСторонуУменьшенияПоставщик

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПриИзмененииСтоимостиВСторонуУменьшенияПоставщик");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ВидЦенности", ВидСравненияКомпоновкиДанных.Равно, Перечисления.ВидыЦенностей.СМРСобственнымиСилами);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>'"));

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);


	// ВычетПриИзмененииСтоимостиВСторонуУменьшенияНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ВычетПриИзмененииСтоимостиВСторонуУменьшенияНДС");

	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.НДС0);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.СтавкаНДС", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтавкиНДС.БезНДС);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ПредъявленНДСКВычету0.Видимость = НЕ Форма.УпрощенныйУчетНДС;
	
	Элементы.ГруппаВычетПоПриобретеннымЦенностям.Видимость = НЕ Форма.УпрощенныйУчетНДС;
	Элементы.ГруппаНДССАвансовВыданных.Видимость = НЕ Форма.УпрощенныйУчетНДС И НЕ Объект.ПредъявленНДСКВычету0 И УчетНДСКлиентСервер.Версия(Объект.Дата) = 1;
	Элементы.ГруппаВычетНДСПоНалоговомуАгенту.Видимость = НЕ Форма.УпрощенныйУчетНДС;
	
	Элементы.ГруппаВычетПриИзмененииСтоимостиВСторонуУменьшения.Видимость = НЕ Объект.ПредъявленНДСКВычету0 И Объект.Дата >= '20111001';
	Элементы.ВычетПоПриобретеннымЦенностямДатаПолученияСчетаФактуры.Видимость = НЕ Объект.ПредъявленНДСКВычету0 И Объект.Дата >= '20150101';
	Элементы.ВычетПоПриобретеннымЦенностямКодВидаОперации.Видимость = Объект.Дата >= '20150101';
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтогиВПодвале(Форма)

	Объект = Форма.Объект;

	Форма.ИтогиВсегоНДС     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Объект.ВычетПоПриобретеннымЦенностям.Итог("НДС")
										+ Объект.НДСсАвансов.Итог("НДС")
										+ Объект.НДСсАвансовВыданных.Итог("НДС")
										+ Объект.ВычетНДСПоНалоговомуАгенту.Итог("НДС")
										+ Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.Итог("НДС"));

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			ЗагрузитьПодготовленныеДанные();
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания", 
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
				Истина);
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументНаКлиенте(ИмяТабЧасти)

	Если ИмяТабЧасти = Неопределено Тогда
		ЕстьДанные = Объект.ВычетНДСПоНалоговомуАгенту.Количество() > 0 
			ИЛИ Объект.ВычетПоПриобретеннымЦенностям.Количество() > 0
			ИЛИ Объект.НДСсАвансов.Количество() > 0
			ИЛИ Объект.НДСсАвансовВыданных.Количество() > 0;
	Иначе
		ЕстьДанные = Объект[ИмяТабЧасти].Количество() > 0;
	КонецЕсли;
		
	Если ЕстьДанные Тогда
		Если Объект.Проведен Тогда
			Если ИмяТабЧасти = Неопределено Тогда
				ТекстВопроса = НСтр("ru = 'Перед заполнением проведение документа будет отменено, а табличные части будут очищены. Заполнить?'");
			Иначе
				ТекстВопроса = НСтр("ru = 'Перед заполнением проведение документа будет отменено, а табличная часть будет очищена. Заполнить?'");
			КонецЕсли;
		Иначе
			Если ИмяТабЧасти = Неопределено Тогда
				ТекстВопроса = НСтр("ru = 'Табличные части будут очищены. Заполнить?'");
			Иначе
				ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена. Заполнить?'");
			КонецЕсли;
		КонецЕсли;
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьДокументЗавершение", ЭтотОбъект, ИмяТабЧасти);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьЗаполнениеДокумента(ИмяТабЧасти);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьДокументЗавершение(Результат, ИмяТабЧасти) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполнитьЗаполнениеДокумента(ИмяТабЧасти);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаполнениеДокумента(ИмяТабЧасти)

	ИБФайловая = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая;
	Результат = ЗаполнитьДокументНаСервере(ИмяТабЧасти, ИБФайловая);
	
	Если Результат.ЗаданиеВыполнено Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
	Иначе
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДокументНаСервере(ИмяТабЧасти, ИБФайловая)
	
	Если ИмяТабЧасти = Неопределено Тогда
		Объект.ВычетПоПриобретеннымЦенностям.Очистить();
		Объект.НДСсАвансов.Очистить();
		Объект.НДСсАвансовВыданных.Очистить();
		Объект.ВычетНДСПоНалоговомуАгенту.Очистить();
		Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.Очистить();
	Иначе
		Объект[ИмяТабЧасти].Очистить();
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Организация, Дата, ПредъявленНДСКВычету0, ИмяТабЧасти",
			Объект.Организация, Объект.Дата, Объект.ПредъявленНДСКВычету0, ИмяТабЧасти);
	
	Если ИБФайловая Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Документы.ФормированиеЗаписейКнигиПокупок.ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		Если ИмяТабЧасти = Неопределено Тогда
			НаименованиеЗадания = НСтр("ru = 'Заполнение документа ""Формирование записей книги покупок""'");
		ИначеЕсли ИмяТабЧасти = "ВычетПоПриобретеннымЦенностям" Тогда
			НаименованиеЗадания = НСтр("ru = 'Заполнение раздела ""Вычет НДС по приобретенным ценностям"" документа ""Формирование записей книги покупок""'");
		ИначеЕсли ИмяТабЧасти = "НДСсАвансов" Тогда
			НаименованиеЗадания = НСтр("ru = 'Заполнение раздела ""Вычет НДС с полученных авансов"" документа ""Формирование записей книги покупок""'");
		ИначеЕсли ИмяТабЧасти = "НДСсАвансовВыданных" Тогда
			НаименованиеЗадания = НСтр("ru = 'Заполнение раздела ""Вычет НДС с выданных авансов"" документа ""Формирование записей книги покупок""'");
		ИначеЕсли ИмяТабЧасти = "ВычетНДСПоНалоговомуАгенту" Тогда
			НаименованиеЗадания = НСтр("ru = 'Заполнение раздела ""Вычет НДС по налоговому агенту"" документа ""Формирование записей книги покупок""'");
		ИначеЕсли ИмяТабЧасти = "ВычетПриИзмененииСтоимостиВСторонуУменьшения" Тогда
			НаименованиеЗадания = НСтр("ru = 'Заполнение раздела ""Вычет НДС по уменьшению стоимости реализации"" документа ""Формирование записей книги покупок""'");
		КонецЕсли;
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор, 
			"Документы.ФормированиеЗаписейКнигиПокупок.ПодготовитьДанныеДляЗаполнения", 
			СтруктураПараметров, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("ВычетПоПриобретеннымЦенностям") Тогда
		Объект.ВычетПоПриобретеннымЦенностям.Загрузить(СтруктураДанных.ВычетПоПриобретеннымЦенностям);
	КонецЕсли;
	Если СтруктураДанных.Свойство("НДСсАвансов") Тогда
		Объект.НДСсАвансов.Загрузить(СтруктураДанных.НДСсАвансов);
	КонецЕсли;
	Если СтруктураДанных.Свойство("НДСсАвансовВыданных") Тогда
		Объект.НДСсАвансовВыданных.Загрузить(СтруктураДанных.НДСсАвансовВыданных);
	КонецЕсли;
	Если СтруктураДанных.Свойство("ВычетНДСПоНалоговомуАгенту") Тогда
		Объект.ВычетНДСПоНалоговомуАгенту.Загрузить(СтруктураДанных.ВычетНДСПоНалоговомуАгенту);
	КонецЕсли;
	Если СтруктураДанных.Свойство("ВычетПриИзмененииСтоимостиВСторонуУменьшения") Тогда
		Объект.ВычетПриИзмененииСтоимостиВСторонуУменьшения.Загрузить(СтруктураДанных.ВычетПриИзмененииСтоимостиВСторонуУменьшения);
	КонецЕсли;
	
	ТекущаяСтраницаПустая = Ложь;
	ПерваяНепустаяСтраница = Неопределено;
	
	Для Каждого Страница Из Элементы.Страницы.ПодчиненныеЭлементы Цикл
		Данные = СтрЗаменить(Страница.Имя,"Группа","");
		КоличествоСтрок = Объект[Данные].Количество();
		Если Не ЗначениеЗаполнено(ПерваяНепустаяСтраница) И КоличествоСтрок > 0 И Страница.Видимость = Истина Тогда 
			ПерваяНепустаяСтраница = Страница.Имя;
		КонецЕсли;
		Если КоличествоСтрок = 0 И Страница = Элементы.Страницы.ТекущаяСтраница Тогда
			ТекущаяСтраницаПустая = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекущаяСтраницаПустая И ЗначениеЗаполнено(ПерваяНепустаяСтраница) Тогда 
		Элементы.Страницы.ТекущаяСтраница = Элементы[ПерваяНепустаяСтраница];
	КонецЕсли;
	
	ОбновитьИтогиВПодвале(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УпрощенныйУчетНДС(Знач Организация, Знач Дата)
	
	Возврат УчетнаяПолитика.УпрощенныйУчетНДС(Организация, Дата);
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьДоговорКонтрагента(ДоговорКонтрагента, Знач Контрагент, Знач Организация, Знач СписокВидовДоговоров = Неопределено, Знач Отбор = Неопределено)

	БухгалтерскийУчетПереопределяемый.УстановитьДоговорКонтрагента(
		ДоговорКонтрагента, Контрагент, Организация, СписокВидовДоговоров, Отбор);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыИзПараметровФормы(Форма)
	
	ПараметрыЗаполненияФормы = Неопределено;
	
	Если Форма.Параметры.Свойство("ПараметрыЗаполненияФормы",ПараметрыЗаполненияФормы) Тогда
	
		ЗаполнитьЗначенияСвойств(Форма.Объект,ПараметрыЗаполненияФормы);			
	
	КонецЕсли; 		

КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	УпрощенныйУчетНДС = УпрощенныйУчетНДС(Объект.Организация, Объект.Дата);
	ВерсияНДС = УчетНДСКлиентСервер.Версия(Объект.Дата);
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
		
	Если ВерсияНДС = 2 И Объект.НДСсАвансовВыданных.Количество() > 0 Тогда
		Объект.НДСсАвансовВыданных.Очистить();
	КонецЕсли;
	
	Если ТекущаяДатаДокумента < '20150101'
		И Объект.Дата >= '20150101' Тогда 
		ЗаполнитьСписокКодовОпераций();
	КонецЕсли;	
	
	УправлениеФормой(ЭтаФорма);
	ОбновитьУсловноеОформление(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокКодовОпераций()
	
	СписокВыбораКодов = Элементы.ВычетПоПриобретеннымЦенностямКодВидаОперации.СписокВыбора;
	
	ИспользоватьКоды2015 = Ложь;
	ИспользоватьДополнительныеКоды = Ложь;
	Если Объект.Дата >= '20150101' Тогда 
		ИспользоватьКоды2015 = Истина;
		ИспользоватьДополнительныеКоды = Истина;	
	КонецЕсли;

	УчетНДС.ЗаполнитьСписокКодовВидовОпераций(
		Перечисления.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры, 
		СписокВыбораКодов,
		ИспользоватьКоды2015,
		ИспользоватьДополнительныеКоды);
		
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ПолучитьДатуДокумента(Документ)
	
	Если ЗначениеЗаполнено(Документ) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Дата");
	Иначе
		Возврат '00010101';
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВопросПредъявленНДСКВычету0Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ВычетПоПриобретеннымЦенностям.Очистить();
		Объект.НДСсАвансов.Очистить();
		Объект.НДСсАвансовВыданных.Очистить();
		Объект.ВычетНДСПоНалоговомуАгенту.Очистить();
	Иначе
		Объект.ПредъявленНДСКВычету0 = НЕ Объект.ПредъявленНДСКВычету0;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	ОбновитьУсловноеОформление(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииОрганизацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ВычетПоПриобретеннымЦенностям.Очистить();
		Объект.НДСсАвансов.Очистить();
		Объект.НДСсАвансовВыданных.Очистить();
		Объект.ВычетНДСПоНалоговомуАгенту.Очистить();
	Иначе
		Объект.Организация = ТекущаяОрганизация;
		
	КонецЕсли;
	
	ПриИзмененииОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОрганизации()
	
	ТекущаяОрганизация = Объект.Организация;
	УпрощенныйУчетНДС = УпрощенныйУчетНДС(Объект.Организация, Объект.Дата);
	ВерсияНДС = УчетНДСКлиентСервер.Версия(Объект.Дата);
	Если УпрощенныйУчетНДС Тогда
		Объект.ПредъявленНДСКВычету0 = Ложь;
	КонецЕсли;	
	
	УправлениеФормой(ЭтаФорма);
	ОбновитьУсловноеОформление(ЭтотОбъект);	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)

	ЗаполнитьДокументНаКлиенте(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделПриобретенныеЦенности(Команда)

	ЗаполнитьДокументНаКлиенте("ВычетПоПриобретеннымЦенностям");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделПолученныеАвансы(Команда)

	ЗаполнитьДокументНаКлиенте("НДСсАвансов");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделВыданныеАвансы(Команда)

	ЗаполнитьДокументНаКлиенте("НДСсАвансовВыданных");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделНалоговыйАгент(Команда)

	ЗаполнитьДокументНаКлиенте("ВычетНДСПоНалоговомуАгенту");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделУменьшениеСтоимостиРеализации(Команда)

	ЗаполнитьДокументНаКлиенте("ВычетПриИзмененииСтоимостиВСторонуУменьшения");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПредъявленНДСКВычету0ПриИзменении(Элемент)

	Если Объект.ВычетПоПриобретеннымЦенностям.Количество() <> 0
		ИЛИ Объект.НДСсАвансов.Количество() <> 0
		ИЛИ Объект.НДСсАвансовВыданных.Количество() <> 0
		ИЛИ Объект.ВычетНДСПоНалоговомуАгенту.Количество() <> 0
		Тогда

		ТекстВопроса = НСтр("ru = 'Необходимо очистить табличные части. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПредъявленНДСКВычету0Завершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		УправлениеФормой(ЭтаФорма);
		ОбновитьУсловноеОформление(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если Объект.ВычетПоПриобретеннымЦенностям.Количество() <> 0
		ИЛИ Объект.НДСсАвансов.Количество() <> 0
		ИЛИ Объект.НДСсАвансовВыданных.Количество() <> 0
		ИЛИ Объект.ВычетНДСПоНалоговомуАгенту.Количество() <> 0 Тогда

		ТекстВопроса = НСтр("ru = 'Необходимо очистить табличные части. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПриИзмененииОрганизацииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ПриИзмененииОрганизации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
			
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <ВЫЧЕТ НДС ПО ПРИОБРЕТЕННЫМ ЦЕННОСТЯМ>

&НаКлиенте
Процедура ВычетПоПриобретеннымЦенностямДокументОплатыПриИзменении(Элемент)

	ТД = Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТД.ДокументОплаты) Тогда
		ТД.ДатаОплаты = ПолучитьДатуДокумента(ТД.ДокументОплаты);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВычетПоПриобретеннымЦенностямСуммаБезНДСПриИзменении(Элемент)

	// Рассчитать реквизиты табличной части.
	Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетПоПриобретеннымЦенностямСтавкаНДСПриИзменении(Элемент)

	// Рассчитать реквизиты табличной части.
	Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СуммаБезНДС,
						Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.ВычетПоПриобретеннымЦенностям.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетПоПриобретеннымЦенностямПослеУдаления(Элемент)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетПоПриобретеннымЦенностямПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <НДС С АВАНСОВ>

&НаКлиенте
Процедура НДСсАвансовПокупательПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.НДСсАвансов.ТекущиеДанные;
	УстановитьДоговорКонтрагента(СтрокаТабличнойЧасти.ДоговорКонтрагента, СтрокаТабличнойЧасти.Покупатель, Объект.Организация);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовСтавкаНДСПриИзменении(Элемент)

	Элементы.НДСсАвансов.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.НДСсАвансов.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.НДСсАвансов.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовСуммаБезНДСПриИзменении(Элемент)

	Элементы.НДСсАвансов.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.НДСсАвансов.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.НДСсАвансов.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовПослеУдаления(Элемент)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <НДС С АВАНСОВ ВЫДАННЫХ>

&НаКлиенте
Процедура НДСсАвансовВыданныхПоставщикПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.НДСсАвансовВыданных.ТекущиеДанные;
	УстановитьДоговорКонтрагента(СтрокаТабличнойЧасти.ДоговорКонтрагента, СтрокаТабличнойЧасти.Поставщик, Объект.Организация);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовВыданныхСтавкаНДСПриИзменении(Элемент)

	Элементы.НДСсАвансовВыданных.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.НДСсАвансовВыданных.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.НДСсАвансовВыданных.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовВыданныхСуммаБезНДСПриИзменении(Элемент)

	Элементы.НДСсАвансовВыданных.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.НДСсАвансовВыданных.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.НДСсАвансовВыданных.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовВыданныхПослеУдаления(Элемент)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НДСсАвансовВыданныхПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <ВЫЧЕТ НДС ПО НАЛОГОВОМУ АГЕНТУ>

&НаКлиенте
Процедура ВычетНДСПоНалоговомуАгентуДокументОплатыПриИзменении(Элемент)

	ТД = Элементы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТД.ДокументОплаты) Тогда
		ТД.ДатаОплаты = ПолучитьДатуДокумента(ТД.ДокументОплаты);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВычетНДСПоНалоговомуАгентуСуммаБезНДСПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.СтавкаНДС) Тогда
		ТекущиеДанные.НДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	КонецЕсли;

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетНДСПоНалоговомуАгентуСтавкаНДСПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ВычетНДСПоНалоговомуАгенту.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.СтавкаНДС) Тогда
		ТекущиеДанные.НДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущиеДанные.СтавкаНДС));
	КонецЕсли;

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетНДСПоНалоговомуАгентуПослеУдаления(Элемент)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетНДСПоНалоговомуАгентуПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <ВЫЧЕТ ПРИ ИЗМЕНЕНИИ СТОИМОСТИ В СТОРОНУ УМЕНЬШЕНИЯ>

&НаКлиенте
Процедура ВычетПриИзмененииСтоимостиВСторонуУменьшенияСтавкаНДСПриИзменении(Элемент)

	Элементы.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетПриИзмененииСтоимостиВСторонуУменьшенияСуммаБезНДСПриИзменении(Элемент)

	Элементы.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ТекущиеДанные.НДС =
						УчетНДСКлиентСервер.РассчитатьСуммуНДС(Элементы.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ТекущиеДанные.СуммаБезНДС,
							Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Элементы.ВычетПриИзмененииСтоимостиВСторонуУменьшения.ТекущиеДанные.СтавкаНДС));

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетПриИзмененииСтоимостиВСторонуУменьшенияПослеУдаления(Элемент)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВычетПриИзмененииСтоимостиВСторонуУменьшенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ОбновитьИтогиВПодвале(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьРеквизитыИзПараметровФормы(ЭтаФорма);
		Если Объект.Дата >= '20150101' Тогда 
			ЗаполнитьСписокКодовОпераций();
		КонецЕсли;
		УстановитьСостояниеДокумента();
	КонецЕсли;

	ТекущаяДатаДокумента = Объект.Дата;
	
	УпрощенныйУчетНДС = УчетнаяПолитика.УпрощенныйУчетНДС(Объект.Организация, Объект.Дата);
	ВерсияНДС = УчетНДСКлиентСервер.Версия(Объект.Дата);
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	
	ТекущаяОрганизация = Объект.Организация;

	УправлениеФормой(ЭтаФорма);
	ОбновитьИтогиВПодвале(ЭтаФорма);

	// Активизировать первую непустую табличную часть
	СписокТабличныхЧастей = Новый СписокЗначений;
	СписокТабличныхЧастей.Добавить("ВычетПоПриобретеннымЦенностям",                "ВычетПоПриобретеннымЦенностям");
	СписокТабличныхЧастей.Добавить("НДСсАвансов",                                  "НДСсАвансов");
	СписокТабличныхЧастей.Добавить("НДСсАвансовВыданных",                          "НДСсАвансовВыданных");
	СписокТабличныхЧастей.Добавить("ВычетНДСПоНалоговомуАгенту",                   "ВычетНДСПоНалоговомуАгенту");
	СписокТабличныхЧастей.Добавить("ВычетПриИзмененииСтоимостиВСторонуУменьшения", "ВычетПриИзмененииСтоимостиВСторонуУменьшения");

	АктивизироватьТабличнуюЧасть = ОбщегоНазначенияБПВызовСервера.ПолучитьПервуюНепустуюВидимуюТабличнуюЧасть(
		ЭтаФорма, СписокТабличныхЧастей);
	ОбщегоНазначенияБПВызовСервера.АктивизироватьЭлементФормы(ЭтаФорма, АктивизироватьТабличнуюЧасть);

	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("УведомитьОбИзмененияхСроковПринятияКВычетуНДС,УведомитьОнеобходимостиПерепроведенияДокументов");
	
	УстановитьУсловноеОформление();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("УведомитьОбИзмененияхСроковПринятияКВычетуНДС", 0.60, Истина);
	ПодключитьОбработчикОжидания("УведомитьОнеобходимостиПерепроведенияДокументов", 0.60, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("СостояниеРегламентнойОперации", 
		?(Объект.Проведен, ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено"), 
						   ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.НеВыполнено")));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ЗаполнитьСписокКодовОпераций();
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеФормированиеЗаписейКнигиПокупок";
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

&НаКлиенте
Процедура УведомитьОбИзмененияхСроковПринятияКВычетуНДС()
	
	ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("ИзмененияСроковПринятияКВычетуНДС", , НастройкиПредупреждений);
		
КонецПроцедуры

&НаКлиенте
Процедура УведомитьОнеобходимостиПерепроведенияДокументов()
	
	ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("КодыВидовОпераций2015", , НастройкиПредупреждений);
		
КонецПроцедуры	

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

