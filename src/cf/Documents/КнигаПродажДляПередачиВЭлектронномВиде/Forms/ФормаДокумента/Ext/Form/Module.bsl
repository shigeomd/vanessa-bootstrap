&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтаФорма, "Объект.Комментарий");

КонецПроцедуры

&НаКлиенте
Процедура РеорганизацияПриИзменении(Элемент)
	
	УстановитьПериодПоСКНП();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)

	ЗаполнитьДокументНаКлиенте();

КонецПроцедуры

&НаКлиенте
Процедура ПредыдущийПериод(Команда)

	ИзменитьПериод(-1);

КонецПроцедуры

&НаКлиенте
Процедура СледующийПериод(Команда)

	ИзменитьПериод(1);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	Форма.ПредставлениеНалоговогоПериода	= ПредставлениеПериода(Объект.НалоговыйПериод, КонецКвартала(Объект.НалоговыйПериод), "ФП = Истина" );
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПериод(Шаг)
	
	Если Шаг > 0 Тогда 
		
		Число	= КонецДня(КонецКвартала(Объект.НалоговыйПериод));
		
		Число	= Число + 1;
		Объект.НалоговыйПериод	= НачалоКвартала(Число);
		
	ИначеЕсли Шаг < 0 Тогда 
		
		Число	= НачалоДня(Объект.НалоговыйПериод);
		
		Если Число = Дата(2012, 04, 01) Тогда
			ТекстСообщения	= НСтр("ru = 'Документ может быть составлен только в соответствии с постановлением Правительства Российской Федерации от 26 декабря 2011 г. № 1137'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ПредставлениеНалоговогоПериода");
			Возврат;
		КонецЕсли;
		
		Число	= Число - 1;
		Объект.НалоговыйПериод	= НачалоКвартала(Число);
		
	КонецЕсли;
	
	Объект.Дата	= КонецКвартала(Объект.НалоговыйПериод);
	
	УстановитьПериодПоСКНП();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодПоСКНП()
	
	ПериодПоСКНПНовый = УчетНДСКлиентСервер.ПолучитьКодПоСКНП(Объект.НалоговыйПериод, Объект.Реорганизация);
	
	Если ПериодПоСКНПНовый <> Объект.ПериодПоСКНП Тогда 
		Объект.ПериодПоСКНП = ПериодПоСКНПНовый;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументНаКлиенте()
	
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
		
		ТекстВопроса	= НСтр("ru='Табличное поле будет очищено. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьДокументЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

	Иначе
		
		Результат = ЗаполнитьДокументНаСервере();
		
		Если НЕ Результат.ЗаданиеВыполнено Тогда
			ИдентификаторЗадания = Результат.ИдентификаторЗадания;
			АдресХранилища       = Результат.АдресХранилища;
			
			ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
			ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьДокументЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Результат = ЗаполнитьДокументНаСервере();
		
		Если НЕ Результат.ЗаданиеВыполнено Тогда
			ИдентификаторЗадания = Результат.ИдентификаторЗадания;
			АдресХранилища       = Результат.АдресХранилища;
			
			ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
			ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДокументНаСервере()

	Если УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.НалоговыйПериод) = 3 Тогда 
		ВызватьИсключение НСтр("ru = 'Начиная с 4 квартала 2014 г. возможность заполнения, печати и выгрузки документа отсутствует (до утверждения формата выгрузки ФНС)'");
	КонецЕсли;
	
	Объект.ТабличнаяЧасть.Очистить();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НалоговыйПериод", Объект.НалоговыйПериод);
	СтруктураПараметров.Вставить("Организация", Объект.Организация);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища	= ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Документы.КнигаПродажДляПередачиВЭлектронномВиде.ПодготовитьДанныеДляЗаполнения(СтруктураПараметров, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		
		НаименованиеЗадания = НСтр("ru = 'Заполнение документа ""Книга продаж для передачи в электронном виде""'");
					
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор, 
			"Документы.КнигаПродажДляПередачиВЭлектронномВиде.ПодготовитьДанныеДляЗаполнения", 
			СтруктураПараметров, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
		
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()

	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("ОшибкаЗаполнения") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("РеквизитыДокумента") Тогда
		ЗаполнитьЗначенияСвойств(Объект, СтруктураДанных.РеквизитыДокумента);
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("ТабличнаяЧасть") Тогда
		Объект.ТабличнаяЧасть.Загрузить(СтруктураДанных.ТабличнаяЧасть);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДокумент(Команда)
	
	Если Не ПроверитьЗаполнениеНаСервере() Тогда
		Возврат;
	КонецЕсли;
	
	ВыгружаемыеДанные = ВыгрузитьНаСервере(УникальныйИдентификатор);
	
	#Если НЕ ВебКлиент Тогда
		ПутьВыгрузки = РегламентированнаяОтчетностьКлиент.ПолучитьПутьВыгрузки();
		Если ПутьВыгрузки = Ложь Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	Для Каждого ФайлВыгрузки Из ВыгружаемыеДанные Цикл
		
		#Если ВебКлиент Тогда
			Попытка
				ПолучитьФайл(ФайлВыгрузки.АдресФайлаВыгрузки, ФайлВыгрузки.ИмяФайлаВыгрузки);
			Исключение
				ТекстСообщения = НСтр("ru='Не удалось записать файл ""%1"". Возможно, недостаточно места на диске, диск защищен от записи или не подключено расширение для работы с файлами.'");
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ФайлВыгрузки.ИмяФайлаВыгрузки);
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ТекстСообщения;
				Сообщение.Сообщить();
			КонецПопытки;
		#Иначе
			ДвоичныйФайл = ПолучитьИзВременногоХранилища(ФайлВыгрузки.АдресФайлаВыгрузки);
			Попытка
				ДвоичныйФайл.Записать(ПутьВыгрузки + ФайлВыгрузки.ИмяФайлаВыгрузки);
				
				ТекстСообщения = НСтр("ru='Файл выгрузки регламентированного отчета ""%1"" сохранен в каталог ""%2"".'");
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ФайлВыгрузки.ИмяФайлаВыгрузки, ПутьВыгрузки);
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ТекстСообщения;
				Сообщение.Сообщить();
			Исключение
				ТекстСообщения = НСтр("ru='Не удалось записать файл ""%1"". Возможно, недостаточно места на диске или диск защищен от записи.'");
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ФайлВыгрузки.ИмяФайлаВыгрузки);
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ТекстСообщения;
				Сообщение.Сообщить();
			КонецПопытки;
		#КонецЕсли
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеНаСервере()

	Если УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.НалоговыйПериод) = 3 Тогда 
		ВызватьИсключение НСтр("ru = 'Начиная с 4 квартала 2014 г. возможность заполнения, печати и выгрузки документа отсутствует (до утверждения формата выгрузки ФНС)'");
	Иначе
		Возврат ПроверитьЗаполнение();
	КонецЕсли;
		
КонецФункции

&НаСервере
Функция ВыгрузитьНаСервере(УникальныйИдентификатор)
	
	ОбъектДокумента = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектДокумента.ВыгрузитьДокумент(УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			ЗагрузитьПодготовленныеДанные();
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания", 
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
				Истина);
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции
