#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
	
Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ОтражениеНДСКВычетуТоварыИУслуги.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ОтражениеНДСКВычету.ТоварыИУслуги КАК ОтражениеНДСКВычетуТоварыИУслуги
	|ГДЕ
	|	ОтражениеНДСКВычетуТоварыИУслуги.Ссылка = &Ссылка
	|	И ОтражениеНДСКВычетуТоварыИУслуги.Номенклатура ССЫЛКА Справочник.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("Реквизиты",                 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	&ПустоеПодразделение КАК Подразделение,
	|	"""" КАК ЦифровойИндексОбособленногоПодразделения,
	|	Реквизиты.Организация КАК Поставщик,
	|	Реквизиты.Организация.ИНН КАК ИННпоставщика,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПоставщика,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	Реквизиты.Организация КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаВзаиморасчетов,
	|	ЛОЖЬ КАК РасчетыВУсловныхЕдиницах,
	|	НЕОПРЕДЕЛЕНО КАК ВидДоговора,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки
	|ИЗ
	|	Документ.ОтражениеНДСКВычету КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	"""" КАК Товар,
	|	"""" КАК ТоварКод,
	|	"""" КАК ТоварАртикул,
	|	"""" КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК ЕдиницаИзмерения,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	0 КАК Сумма,
	|	0 КАК СуммаНДС,
	|	0 КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	&ДокументОснование КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	0 КАК ВсегоРуб,
	|	0 КАК НДСРуб,
	|	0 КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтражениеНДСКВычету.ТоварыИУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьПредъявленСчетФактура");
	МассивРеквизитов.Добавить("УдалитьНомерВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьДатаВходящегоСчетаФактуры");
	МассивРеквизитов.Добавить("УдалитьНДСПредъявленКВычету");
	МассивРеквизитов.Добавить("УдалитьКодСпособаПолучения");
	
	Возврат МассивРеквизитов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру,
	|	Реквизиты.ЗаписьДополнительногоЛиста,
	|	Реквизиты.Представление,
	|	Реквизиты.РасчетныйДокумент,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ПрямаяЗаписьВКнигу,
	|	Реквизиты.Контрагент,
	|	Реквизиты.Ссылка,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.КорректируемыйПериод,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.ФормироватьПроводки
	|ИЗ
	|	Документ.ОтражениеНДСКВычету КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"Реквизиты.ДоговорКонтрагента.ВидДоговора",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаВидДоговора("Реквизиты.ДоговорКонтрагента"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаУчетАгентскогоНДС("Реквизиты.ДоговорКонтрагента"));

	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
	
	Результат = Запрос.Выполнить();
		
	ПараметрыПроведения.Вставить("Реквизиты", Результат.Выгрузить());
	
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	
	СтруктураРеквизиты = Новый Структура("ВалютаРеглУчета,ВалютаДокумента,ВалютаВзаиморасчетов,ДоговорКонтрагента,ВидДоговора,Ссылка,СуммаВключаетНДС,
		|КурсВзаиморасчетов,КратностьВзаиморасчетов,КурсДокумента,КратностьДокумента,РасчетыВУсловныхЕдиницах,ОрганизацияПрименяетУСН,НачислятьНДСПоОтгрузке");
	
	ЗаполнитьЗначенияСвойств(СтруктураРеквизиты, Реквизиты);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	СтруктураРеквизиты.ОрганизацияПрименяетУСН = УчетнаяПолитика.СистемаНалогообложения(Реквизиты.Организация, Реквизиты.Период) = Перечисления.СистемыНалогообложения.Упрощенная;
	СтруктураРеквизиты.НачислятьНДСПоОтгрузке = УчетнаяПолитика.НачислятьНДСПоОтгрузке(Реквизиты.Организация, Реквизиты.Период);
	СтруктураРеквизиты.ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если СтруктураРеквизиты.ВалютаВзаиморасчетов = СтруктураРеквизиты.ВалютаРеглУчета Тогда
		СтруктураРеквизиты.КурсДокумента		= 1;
		СтруктураРеквизиты.КратностьДокумента	= 1;
	Иначе
		СтруктураРеквизиты.КурсДокумента		= СтруктураРеквизиты.КурсВзаиморасчетов;
		СтруктураРеквизиты.КратностьДокумента	= СтруктураРеквизиты.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Если СтруктураРеквизиты.ВалютаВзаиморасчетов = СтруктураРеквизиты.ВалютаДокумента Тогда
		СтруктураРеквизиты.КурсВзаиморасчетов		= 1;
		СтруктураРеквизиты.КратностьВзаиморасчетов	= 1;
	Иначе
		СтруктураРеквизиты.КурсВзаиморасчетов		= СтруктураРеквизиты.КурсВзаиморасчетов; 
		СтруктураРеквизиты.КратностьВзаиморасчетов	= СтруктураРеквизиты.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",		СтруктураРеквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ПрямаяЗаписьВКнигу",		Реквизиты.ПрямаяЗаписьВКнигу);
	Запрос.УстановитьПараметр("ФормироватьПроводки",	Реквизиты.ФормироватьПроводки);
	Запрос.УстановитьПараметр("СуммаВключаетНДС",		СтруктураРеквизиты.СуммаВключаетНДС);
	Запрос.УстановитьПараметр("РасчетныйДокументКакСчетФактура",
		УчетНДСПереопределяемый.ПолучитьСчетФактуруДляЗаписиВРегистрыНДС(Реквизиты.РасчетныйДокумент));
	
	ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, СтруктураРеквизиты);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаТоварыИУслуги(НомераТаблиц)
		+ ТекстЗапросаДокументыОплаты(НомераТаблиц)
		+ ТекстЗапросаПрямаяЗаписьВКнигуПокупок(НомераТаблиц)
		+ ТекстЗапросаХозрасчетный(НомераТаблиц)
		+ ТекстЗапросаНДСПредъявленный(НомераТаблиц)
		+ ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Процедура ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыИУслуги.Ссылка,
	|	ТоварыИУслуги.НомерСтроки,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.ВидЦенности КАК ВидЦенности,
	|	ТоварыИУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыИУслуги.Сумма,
	|	ТоварыИУслуги.СуммаНДС КАК НДС,
	|	ТоварыИУслуги.СчетЗатрат,
	|	ТоварыИУслуги.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТоварыИУслуги.Субконто1,
	|	ТоварыИУслуги.Субконто2,
	|	ТоварыИУслуги.Субконто3,
	|	ТоварыИУслуги.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА ТоварыИУслуги.Ссылка.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ТоварыИУслуги.Ссылка.КодВидаОперации
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.ОтражениеНДСКВычету.ТоварыИУслуги КАК ТоварыИУслуги";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаТоварыУслуги = РезультатЗапроса[0].Выгрузить();

	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаТоварыУслуги, Реквизиты);
	
	Запрос.УстановитьПараметр("ТаблицаТоварыУслуги", ТаблицаТоварыУслуги);
		
КонецПроцедуры	

Функция ТекстЗапросаТоварыИУслуги(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыИУслугиИзОбъекта", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыИУслуги", НомераТаблиц.Количество());
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТоварыИУслуги.Ссылка,
	|	ТоварыИУслуги.НомерСтроки,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.ВидЦенности,
	|	ТоварыИУслуги.КодВидаОперации,
	|	ТоварыИУслуги.СтавкаНДС,
	|	ТоварыИУслуги.Сумма,
	|	ТоварыИУслуги.СуммаБезНДС,
	|	ТоварыИУслуги.СуммаВал,
	|	ТоварыИУслуги.СуммаБезНДСВал,
	|	ТоварыИУслуги.НДС,
	|	ТоварыИУслуги.НДСВал,
	|	ТоварыИУслуги.СуммаБУ,
	|	ТоварыИУслуги.НДС КАК СуммаНДСРуб,
	|	ТоварыИУслуги.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТоварыИУслуги.СчетЗатрат,
	|	ТоварыИУслуги.СчетУчетаНДС,
	|	ТоварыИУслуги.Субконто1,
	|	ТоварыИУслуги.Субконто2,
	|	ТоварыИУслуги.Субконто3,
	|	ТоварыИУслуги.Событие
	|ПОМЕСТИТЬ ТаблицаТоварыУслуги
	|ИЗ
	|	&ТаблицаТоварыУслуги КАК ТоварыИУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеНДСКВычетуТоварыИУслуги.НомерСтроки,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Номенклатура,
	|	ОтражениеНДСКВычетуТоварыИУслуги.ВидЦенности КАК ВидЦенности,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Сумма КАК СуммаСНДС,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Сумма КАК СуммаБУ,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СуммаВал КАК СуммаВзаиморасчетов,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СуммаБезНДС,
	|	ОтражениеНДСКВычетуТоварыИУслуги.НДС КАК СуммаНДС,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СуммаВал,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Сумма КАК СуммаРУБ,
	|	ОтражениеНДСКВычетуТоварыИУслуги.НДС КАК СуммаНДСРуб,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СчетЗатрат,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Субконто1,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Субконто2,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Субконто3,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период2,
	|	ОтражениеНДСКВычету.Организация,
	|	ОтражениеНДСКВычету.Контрагент КАК Поставщик,
	|	ОтражениеНДСКВычету.ДоговорКонтрагента,
	|	ОтражениеНДСКВычету.Ссылка КАК Регистратор,
	|	ОтражениеНДСКВычету.ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ОтражениеНДСКВычету.ИспользоватьДокументРасчетовКакСчетФактуру
	|			ТОГДА &РасчетныйДокументКакСчетФактура
	|		ИНАЧЕ ОтражениеНДСКВычету.Ссылка
	|	КОНЕЦ КАК СчетФактура,
	|	ОтражениеНДСКВычету.Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ОтражениеНДСКВычетуТоварыИУслуги.Событие ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ОтражениеНДСКВычету.ПрямаяЗаписьВКнигу
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком)
	|				КОНЕЦ
	|		ИНАЧЕ ОтражениеНДСКВычетуТоварыИУслуги.Событие
	|	КОНЕЦ КАК Событие,
	|	ВЫБОР
	|		КОГДА ОтражениеНДСКВычету.ПрямаяЗаписьВКнигу
	|					И ОтражениеНДСКВычетуТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|				ИЛИ ОтражениеНДСКВычетуТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные0)
	|				ИЛИ ОтражениеНДСКВычетуТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|			ТОГДА ОтражениеНДСКВычету.Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ОтражениеНДСКВычету.ПрямаяЗаписьВКнигу
	|			ТОГДА ОтражениеНДСКВычету.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	"""" КАК ДокументОплаты,
	|	ОтражениеНДСКВычету.Ссылка КАК Ссылка,
	|	ОтражениеНДСКВычетуТоварыИУслуги.КодВидаОперации
	|ПОМЕСТИТЬ ТоварыИУслуги
	|ИЗ
	|	ТаблицаТоварыУслуги КАК ОтражениеНДСКВычетуТоварыИУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеНДСКВычету КАК ОтражениеНДСКВычету
	|		ПО ОтражениеНДСКВычетуТоварыИУслуги.Ссылка = ОтражениеНДСКВычету.Ссылка
	|ГДЕ
	|	ОтражениеНДСКВычетуТоварыИУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаДокументыОплаты(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаДокументыОплаты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОтражениеНДСКВычетуДокументыОплаты.ДокументОплаты,
	|	ОтражениеНДСКВычетуДокументыОплаты.ДатаОплаты,
	|	ОтражениеНДСКВычетуДокументыОплаты.СуммаОплаты,
	|	ОтражениеНДСКВычетуДокументыОплаты.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ОтражениеНДСКВычету.ДокументыОплаты КАК ОтражениеНДСКВычетуДокументыОплаты
	|ГДЕ
	|	ОтражениеНДСКВычетуДокументыОплаты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПрямаяЗаписьВКнигуПокупок(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПрямаяЗаписьВКнигуПокупок", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыИУслуги.НомерСтроки КАК НомерСтроки,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.ВидЦенности,
	|	ТоварыИУслуги.СтавкаНДС,
	|	ТоварыИУслуги.СуммаСНДС,
	|	ТоварыИУслуги.СуммаБезНДС,
	|	ТоварыИУслуги.СуммаНДС,
	|	ТоварыИУслуги.СчетЗатрат,
	|	ТоварыИУслуги.СчетУчетаНДС,
	|	ТоварыИУслуги.Субконто1,
	|	ТоварыИУслуги.Субконто2,
	|	ТоварыИУслуги.Субконто3,
	|	ТоварыИУслуги.Период,
	|	ТоварыИУслуги.Организация,
	|	ТоварыИУслуги.Поставщик,
	|	ВЫБОР
	|		КОГДА ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|				ИЛИ ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные0)
	|				ИЛИ ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|				ИЛИ ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентКомитент)
	|			ТОГДА ТоварыИУслуги.ДоговорКонтрагента
	|		КОГДА ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|				ИЛИ ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|				ИЛИ ТоварыИУслуги.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|			ТОГДА ТоварыИУслуги.ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ТоварыИУслуги.ЗаписьДополнительногоЛиста,
	|	ТоварыИУслуги.СуммаВзаиморасчетов,
	|	ТоварыИУслуги.СуммаРУБ,
	|	ТоварыИУслуги.СуммаНДСРуб,
	|	ТоварыИУслуги.СуммаБезНДСРуб,
	|	ТоварыИУслуги.Регистратор,
	|	ТоварыИУслуги.СчетФактура,
	|	ТоварыИУслуги.Событие КАК Событие,
	|	ТоварыИУслуги.ДатаОплаты КАК ДатаОплаты,
	|	ТоварыИУслуги.ДокументОплаты КАК ДокументОплаты,
	|	ТоварыИУслуги.КорректируемыйПериод КАК КорректируемыйПериод,
	|	ТоварыИУслуги.КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	ТоварыИУслуги КАК ТоварыИУслуги
	|ГДЕ
	|	ТоварыИУслуги.Ссылка = &Ссылка
	|	И &ПрямаяЗаписьВКнигу = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаХозрасчетный(НомераТаблиц)
	
	НомераТаблиц.Вставить("ОтражениеНДСХозрасчетный", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыИУслуги.НомерСтроки КАК НомерСтроки,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.ВидЦенности,
	|	ТоварыИУслуги.СтавкаНДС,
	|	ТоварыИУслуги.СуммаСНДС,
	|	ТоварыИУслуги.СуммаБезНДС,
	|	ТоварыИУслуги.СуммаНДС,
	|	ТоварыИУслуги.СчетЗатрат,
	|	ТоварыИУслуги.СчетУчетаНДС,
	|	ТоварыИУслуги.Субконто1,
	|	ТоварыИУслуги.Субконто2,
	|	ТоварыИУслуги.Субконто3,
	|	ТоварыИУслуги.Период,
	|	ТоварыИУслуги.Организация,
	|	ТоварыИУслуги.Поставщик,
	|	ТоварыИУслуги.ДоговорКонтрагента,
	|	ТоварыИУслуги.ЗаписьДополнительногоЛиста,
	|	ТоварыИУслуги.СуммаВзаиморасчетов,
	|	ТоварыИУслуги.СуммаРуб,
	|	ТоварыИУслуги.СуммаНДСРуб,
	|	ТоварыИУслуги.СуммаБезНДСРуб,
	|	ТоварыИУслуги.Регистратор,
	|	ТоварыИУслуги.СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК Налог,
	|	ТоварыИУслуги.Событие,
	|	ТоварыИУслуги.ДатаОплаты,
	|	ТоварыИУслуги.ДокументОплаты,
	|	ТоварыИУслуги.КорректируемыйПериод
	|ИЗ
	|	ТоварыИУслуги КАК ТоварыИУслуги
	|ГДЕ
	|	ТоварыИУслуги.Ссылка = &Ссылка
	|	И &ПрямаяЗаписьВКнигу = ИСТИНА
	|	И &ФормироватьПроводки = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаНДСПредъявленный(НомераТаблиц)
	
	НомераТаблиц.Вставить("ОтражениеНДСПредъявленный", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыИУслуги.НомерСтроки КАК НомерСтроки,
	|	ТоварыИУслуги.Номенклатура,
	|	ТоварыИУслуги.ВидЦенности,
	|	ТоварыИУслуги.СтавкаНДС,
	|	ТоварыИУслуги.СуммаСНДС,
	|	ТоварыИУслуги.СуммаБезНДС,
	|	ТоварыИУслуги.СуммаНДС,
	|	ТоварыИУслуги.СчетЗатрат,
	|	ТоварыИУслуги.СчетУчетаНДС,
	|	ТоварыИУслуги.Субконто1,
	|	ТоварыИУслуги.Субконто2,
	|	ТоварыИУслуги.Субконто3,
	|	ТоварыИУслуги.Период,
	|	ТоварыИУслуги.Организация,
	|	ТоварыИУслуги.Поставщик,
	|	ТоварыИУслуги.ДоговорКонтрагента,
	|	ТоварыИУслуги.ЗаписьДополнительногоЛиста,
	|	ТоварыИУслуги.СуммаВзаиморасчетов,
	|	ТоварыИУслуги.СуммаРУБ,
	|	ТоварыИУслуги.СуммаНДСРуб,
	|	ТоварыИУслуги.СуммаБезНДСРуб,
	|	ТоварыИУслуги.Регистратор,
	|	ТоварыИУслуги.СчетФактура,
	|	ТоварыИУслуги.Событие КАК Событие,
	|	ТоварыИУслуги.ДатаОплаты КАК ДатаОплаты,
	|	ТоварыИУслуги.ДокументОплаты КАК ДокументОплаты,
	|	ТоварыИУслуги.КорректируемыйПериод КАК КорректируемыйПериод
	|ИЗ
	|	ТоварыИУслуги КАК ТоварыИУслуги
	|ГДЕ
	|	ТоварыИУслуги.Ссылка = &Ссылка
	|	И &ПрямаяЗаписьВКнигу = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц)
	
	НомераТаблиц.Вставить("РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""ТоварыИУслуги"" КАК ИмяСписка,
	|	ТоварыИУслуги.Ссылка,
	|	ТоварыИУслуги.НомерСтроки,
	|	ТоварыИУслуги.СуммаБУ,
	|	ТоварыИУслуги.СуммаНДСРуб,
	|	ТоварыИУслуги.СуммаБезНДСРуб
	|ИЗ
	|	ТоварыИУслуги КАК ТоварыИУслуги";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ

Процедура СформироватьДвиженияКнигиПокупок(ТаблицаПрямаяЗаписьВКнигуПокупок, ТаблицаДокументыОплаты,  ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыДвиженияКнигиПокупок(ТаблицаПрямаяЗаписьВКнигуПокупок, ТаблицаРеквизиты);
	
	Если Параметры.КнигаПокупок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	РаспределитьОплатыПоТаблицеТоваров(Параметры.КнигаПокупок, ТаблицаДокументыОплаты);
	
	Для Каждого СтрокаТаблицы Из Параметры.КнигаПокупок Цикл
		
		Движение = Движения.НДСЗаписиКнигиПокупок.Добавить();
		
		Движение.Период      = Реквизиты.Период;
		Движение.Организация = Реквизиты.Организация;
		Движение.ДатаСобытия = Реквизиты.Период;
		
		Движение.Событие     = ?(СтрокаТаблицы.Событие = Перечисления.СобытияПоНДСПокупки.ПустаяСсылка(), 
			Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком, СтрокаТаблицы.Событие);
				
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы, ,"КорректируемыйПериод");

		Если СтрокаТаблицы.ЗаписьДополнительногоЛиста Тогда 
			Движение.КорректируемыйПериод = СтрокаТаблицы.КорректируемыйПериод;
		КонецЕсли;
		
		Движение.СуммаБезНДС = СтрокаТаблицы.СуммаБезНДСРуб;
		Движение.НДС         = СтрокаТаблицы.СуммаНДСРуб;
		
	КонецЦикла;
	
	Движения.НДСЗаписиКнигиПокупок.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияОтраженияНДСХозрасчетный(ТаблицаНДСХозрасчетный, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыДвиженияОтраженияНДСХозрасчетный(ТаблицаНДСХозрасчетный, ТаблицаРеквизиты);
	
	Если Параметры.НДСХозрасчетный.Количество() = 0 
		ИЛИ Параметры.НДСХозрасчетный.Итог("СуммаНДСРуб") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	// Проводки Дт 68.02 Кт 19.х
	
	Содержание = "Вычет НДС";
		
	Для каждого СтрокаТаблицы Из Параметры.НДСХозрасчетный Цикл
		
		Если (СтрокаТаблицы.СуммаНДСРуб = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = Содержание;
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НДС;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 
		"ВидыПлатежейВГосБюджет", СтрокаТаблицы.Налог);
		
		Проводка.СчетКт = СтрокаТаблицы.СчетУчетаНДС;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 
		"Контрагенты", СтрокаТаблицы.Поставщик);
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 
		"СФПолученные", СтрокаТаблицы.СчетФактура);
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 
		"СФВыданные", СтрокаТаблицы.СчетФактура);
		
		Проводка.Сумма = СтрокаТаблицы.СуммаНДСРуб;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструНДСПредъявленный(ТаблицаДокументыОплаты, ТаблицаНДСПредъявленный, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	ДокументыОплаты = ПодготовитьТаблицуДокументовОплаты(ТаблицаДокументыОплаты, ТаблицаРеквизиты[0]);
	Параметры 		= ПодготовитьПараметрыДвиженияНДСПредъявленный(ТаблицаНДСПредъявленный, ТаблицаРеквизиты);
	
	Реквизиты = ТаблицаРеквизиты[0];
	                                	
	РаспределитьОплатыПоТаблице(ТаблицаНДСПредъявленный, ТаблицаДокументыОплаты, Реквизиты);
		
	Для Каждого СтрокаДок Из ТаблицаНДСПредъявленный Цикл
		
		СтрокаДвижения = Движения.НДСПредъявленный.Добавить();
		
		СтрокаДвижения.Период      = Реквизиты.Период;
		СтрокаДвижения.Организация = Реквизиты.Организация;
		СтрокаДвижения.Поставщик   = Реквизиты.Контрагент;
		
		СтрокаДвижения.ВидЦенности = СтрокаДок.ВидЦенности;
		СтрокаДвижения.СчетФактура = ?(Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру, Реквизиты.РасчетныйДокумент,
			Реквизиты.Ссылка);
					
		СтрокаДвижения.СуммаБезНДС = СтрокаДок.СуммаБезНДС;
		СтрокаДвижения.НДС         = СтрокаДок.СуммаНДС;
		СтрокаДвижения.ДатаОплаты  = СтрокаДок.ДатаОплаты;
		
		СтрокаДвижения.СтавкаНДС = СтрокаДок.СтавкаНДС;
		СтрокаДвижения.СчетУчетаНДС = СтрокаДок.СчетУчетаНДС;
	
		Если Реквизиты.УчетАгентскогоНДС Тогда
			СтрокаДвижения.ДоговорКонтрагента = СтрокаДок.ДоговорКонтрагента; 
		КонецЕсли;
		СтрокаДвижения.ВидДвижения = ВидДвиженияНакопления.Приход;
		СтрокаДвижения.Событие = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком;
		
	КонецЦикла;
	
	Движения.НДСПредъявленный.Записывать = Истина;
	
КонецПроцедуры

// Подготовка параметров для процедуры СформироватьДвиженияКнигиПокупок
//
// Параметры
//  ТаблицаКнигиПокупок   - <ТаблицаЗначений> - данные табличной части документа, по которым определяется, какие движения будут сформированы.
//                          Создается функцией ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности
//  ТаблицаРеквизиты      - <ТаблицаЗначений> - реквизиты, необходимые для формирования движений.
//                          Создается в модуле менеджера документа
//
// Возвращаемое значение:
//   <Структура>   - структура из 2 таблиц: КнигаПокупок и Реквизиты
//
Функция ПодготовитьПараметрыДвиженияКнигиПокупок(ТаблицаКнигиПокупок, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                     // <Дата> - период движений - дата документа
	+ "Организация,"                // <СправочникСсылка.Организации>
	+ "ВалютаДокумента,";           // <СправочникСсылка.Валюты>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
	ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.КнигаПокупок
	
	СписокОбязательныхКолонок = ""
	+ "Организация,"                        // <СправочникСсылка.Организация>  - Организация
	+ "Поставщик,"                          // <СправочникСсылка.Контрагенты> - контрагент, 
	+ "ДоговорКонтрагента,"                 // <СправочникСсылка.ДоговорыКонтрагетов> - договор,
	+ "СчетФактура,"            			// <ДокументСсылка> - документ регистрации НДС
	+ "ВидЦенности,"              			// <ПеречислениеСсылка.ВидыЦенностей> 
	+ "КодВидаОперации,"              		// <Строка> 
	+ "СтавкаНДС,"                          // <ПеречислениеСсылка.СтавкиНДС> - Ставка НДС
	+ "СчетУчетаНДС,"                       // <ПланСчетовСсылка.Хозрасчетный> - счет учета НДС
	+ "ДатаОплаты,"                         // <Дата> - дата документа оплаты
	+ "Событие,"                            // <ПеречислениеСсылка.СобытияПоНДСПокупки>
	+ "Период,"                             // <Дата> - период движений
	+ "ЗаписьДополнительногоЛиста,"         // <Булево> - Запись Доп. листа
	+ "КорректируемыйПериод,"               // <Дата> 
	+ "СуммаБезНДСРуб,"                     // <Число,15,2> - сумма в рублях Без НДС
	+ "СуммаНДСРуб";                        // <Число,15,2> - сумма в рублях НДС	
	Параметры.Вставить("КнигаПокупок", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
	ТаблицаКнигиПокупок, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьТаблицуДокументовОплаты(ТаблицаДокументовОплаты, Реквизиты)
	
	ТаблицаДокументовОплаты.Колонки.Добавить("Период");
	ТаблицаДокументовОплаты.Колонки.Добавить("Активность");
	ТаблицаДокументовОплаты.Колонки.Добавить("Организация");
	ТаблицаДокументовОплаты.Колонки.Добавить("Поставщик");
	ТаблицаДокументовОплаты.Колонки.Добавить("ДоговорКонтрагента");
	ТаблицаДокументовОплаты.Колонки.Добавить("Событие");
	ТаблицаДокументовОплаты.Колонки.Добавить("СчетФактура");
	ТаблицаДокументовОплаты.Колонки.Добавить("ДокументРасчетов");
	ТаблицаДокументовОплаты.Колонки.Добавить("ДатаДокументаРасчетов");
	ТаблицаДокументовОплаты.Колонки.Добавить("ЗаписьДополнительногоЛиста");
	ТаблицаДокументовОплаты.Колонки.Добавить("КорректируемыйПериод");
	ТаблицаДокументовОплаты.Колонки.Добавить("СуммаБУ");
	
	ТаблицаДокументовОплаты.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	ТаблицаДокументовОплаты.ЗаполнитьЗначения(Реквизиты.Контрагент, "Поставщик");
	Если Реквизиты.ИспользоватьДокументРасчетовКакСчетФактуру Тогда

		РасчетныйДокументКакСчетФактура = УчетНДСПереопределяемый.ПолучитьСчетФактуруДляЗаписиВРегистрыНДС(Реквизиты.РасчетныйДокумент);
	    ТаблицаДокументовОплаты.ЗаполнитьЗначения(РасчетныйДокументКакСчетФактура, "СчетФактура");

	Иначе
		ТаблицаДокументовОплаты.ЗаполнитьЗначения(Реквизиты.Ссылка, "СчетФактура");
	КонецЕсли;
	ТаблицаДокументовОплаты.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету, "Событие");
	ТаблицаДокументовОплаты.ЗаполнитьЗначения(Реквизиты.ЗаписьДополнительногоЛиста, "ЗаписьДополнительногоЛиста");
	ТаблицаДокументовОплаты.ЗаполнитьЗначения(Реквизиты.КорректируемыйПериод, "КорректируемыйПериод");
	
	Если Реквизиты.УчетАгентскогоНДС Тогда
		ТаблицаДокументовОплаты.ЗаполнитьЗначения(Реквизиты.ДоговорКонтрагента, "ДоговорКонтрагента");
	КонецЕсли;
	
	ТаблицаДокументовОплаты.ЗагрузитьКолонку(ТаблицаДокументовОплаты.ВыгрузитьКолонку("ДокументОплаты"), 
		"ДокументРасчетов");
	ТаблицаДокументовОплаты.ЗагрузитьКолонку(ТаблицаДокументовОплаты.ВыгрузитьКолонку("ДатаОплаты"), 
		"ДатаДокументаРасчетов");
	ТаблицаДокументовОплаты.ЗагрузитьКолонку(ТаблицаДокументовОплаты.ВыгрузитьКолонку("СуммаОплаты"), "СуммаБУ");
	
	ТаблицаДокументовОплаты.Свернуть("Период, Активность, Организация, Поставщик, ДоговорКонтрагента, Событие, 
		|СчетФактура, ДокументРасчетов, ДатаОплаты, ДатаДокументаРасчетов, ДокументОплаты, ЗаписьДополнительногоЛиста,
			|КорректируемыйПериод", "СуммаОплаты, СуммаБУ");
	
	Возврат ТаблицаДокументовОплаты;
	
КонецФункции

// Подготовка параметров для процедуры СформироватьДвиженияОтраженияНДСХозрасчетный
//
// Параметры
//  ТаблицаНДСХозрасчетный - <ТаблицаЗначений> - данные табличной части документа, по которым определяется, какие движения будут сформированы.
//                          Создается функцией ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности
//  ТаблицаРеквизиты      - <ТаблицаЗначений> - реквизиты, необходимые для формирования движений.
//                          Создается в модуле менеджера документа
//
// Возвращаемое значение:
//   <Структура>   - структура из 2 таблиц: НДСХозрасчетный и Реквизиты
//
Функция ПодготовитьПараметрыДвиженияОтраженияНДСХозрасчетный(ТаблицаНДСХозрасчетный, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                     // <Дата> - период движений - дата документа
	+ "Организация,"                // <СправочникСсылка.Организации>
	+ "ВалютаДокумента,";           // <СправочникСсылка.Валюты>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.КнигаПокупок
	
	СписокОбязательныхКолонок = ""
	+ "Организация,"                   // <СправочникСсылка.Организация>  
	+ "СчетУчетаНДС,"                  // <ПланСчетовСсылка.Хозрасчетный> - счет Учета НДС
	+ "Поставщик,"                     // <СправочникСсылка.Контрагенты> - контрагент, 
	+ "СчетФактура,"       	           // <ДокументСсылка> - документ регистрации НДС
	+ "Налог,"                         // <Перечисление.ВидыПлатежейВГосБюджет>  
	+ "СуммаНДСРуб";                   // <Число,15,2> - сумма в рублях НДС	
	
	Параметры.Вставить("НДСХозрасчетный", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаНДСХозрасчетный, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// Подготовка параметров для процедуры СформироватьДвиженияКнигиПокупок
//
// Параметры
//  ТаблицаКнигиПокупок   - <ТаблицаЗначений> - данные табличной части документа, по которым определяется, какие движения будут сформированы.
//                          Создается функцией ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности
//  ТаблицаРеквизиты      - <ТаблицаЗначений> - реквизиты, необходимые для формирования движений.
//                          Создается в модуле менеджера документа
//
// Возвращаемое значение:
//   <Структура>   - структура из 2 таблиц: КнигаПокупок и Реквизиты
//
Функция ПодготовитьПараметрыДвиженияНДСПредъявленный(ТаблицаНДСПредъявленный, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                     // <Дата> - период движений - дата документа
	+ "Организация,"                // <СправочникСсылка.Организации>
	+ "ВалютаДокумента,";           // <СправочникСсылка.Валюты>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.КнигаПокупок
	
	СписокОбязательныхКолонок = ""
	+ "Организация,"                        // <СправочникСсылка.Организация>  - Организация
	+ "Поставщик,"                          // <СправочникСсылка.Контрагенты> - контрагент, 
	+ "СчетФактура,"            			// <ДокументСсылка> - документ регистрации НДС
	+ "ВидЦенности,"              			// <ПеречислениеСсылка.ВидыЦенностей> 
	+ "СтавкаНДС,"                          // <ПеречислениеСсылка.СтавкиНДС> - Ставка НДС
	+ "СчетУчетаНДС,"                       // <ПланСчетовСсылка.Хозрасчетный> - счет учета НДС
	+ "ДатаОплаты,"                         // <Дата> - дата документа оплаты
	+ "ДокументОплаты,"                     // <ДокументСсылка> - документ оплаты
	+ "Событие,"                            // <ПеречислениеСсылка.СобытияПоНДСПокупки>
	+ "Период,"                             // <Дата> - период движений
	+ "ЗаписьДополнительногоЛиста,"         // <Булево> - Запись Доп. листа
	+ "КорректируемыйПериод,"               // <Дата> 
	+ "СуммаБезНДСРуб,"                     // <Число,15,2> - сумма в рублях Без НДС
	+ "СуммаНДСРуб";                        // <Число,15,2> - сумма в рублях НДС	
	Параметры.Вставить("НДСПредъявленный", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаНДСПредъявленный, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

//Процедура распределяет таблицыНДС и таблицу оплат для движений
//по регистру НДСЗаписиКнигиПокупок
Процедура РаспределитьОплатыПоТаблицеТоваров(ТаблицаПоТоварам, ТаблицаПоДокументамОплаты)
	
	СтрокиКУдалению = Новый Массив;
	ТаблицаПоТоварам.Колонки.Добавить("СуммаОплаты", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаПоТоварам.Колонки.Добавить("ДокументОплаты");
	
	МассивВидовЦенностиНалоговыйАгент = Новый Массив;
	МассивВидовЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	МассивВидовЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	МассивВидовЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	
	Для Каждого СтрокаДокументОплаты Из ТаблицаПоДокументамОплаты Цикл
		
		Если СтрокаДокументОплаты.СуммаОплаты = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаТовар Из ТаблицаПоТоварам Цикл
			
			НалоговыйАгент = МассивВидовЦенностиНалоговыйАгент.Найти(СтрокаТовар.ВидЦенности) <> Неопределено;
			
			Если НЕ СтрокаТовар.ВидЦенности = Перечисления.ВидыЦенностей.АвансыВыданные И Не НалоговыйАгент Тогда 
				СтрокаТовар.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			КонецЕсли;
			
			Если НалоговыйАгент Тогда
				СуммаПоСтроке = СтрокаТовар.СуммаБезНДСРуб;
			Иначе
				СуммаПоСтроке = СтрокаТовар.СуммаБезНДСРуб + СтрокаТовар.СуммаНДСРуб;
			КонецЕсли;
			
			Если СуммаПоСтроке = СтрокаТовар.СуммаОплаты Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаОплаты = Мин(СтрокаДокументОплаты.СуммаОплаты, СуммаПоСтроке - СтрокаТовар.СуммаОплаты);
			СтрокаТовар.СуммаОплаты = СтрокаТовар.СуммаОплаты + СуммаОплаты;
			СтрокаДокументОплаты.СуммаОплаты = СтрокаДокументОплаты.СуммаОплаты - СуммаОплаты;
			СтрокаТовар.ДатаОплаты = СтрокаДокументОплаты.ДатаОплаты;
			СтрокаТовар.ДокументОплаты = СтрокаДокументОплаты.ДокументОплаты;
			
		КонецЦикла;
		
		Если СтрокаДокументОплаты.СуммаОплаты = 0 Тогда
			СтрокиКУдалению.Добавить(СтрокаДокументОплаты);
		КонецЕсли;	
		
	КонецЦикла;
	
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаПоДокументамОплаты.Удалить(СтрокаКУдалению);
	КонецЦикла;		
	
	ТаблицаПоТоварам.Колонки.Удалить("СуммаОплаты");
	
КонецПроцедуры //РаспределитьОплатыПоТаблицеТоваров()

//Процедура распределяет таблицыНДС и таблицу оплат для движений
//по регистру НДСПредъявленный
Процедура РаспределитьОплатыПоТаблице(ТаблицаНДС, ТаблицаОплат, Реквизиты)
	
	Если ТаблицаОплат = Неопределено
		ИЛИ ТаблицаОплат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаОплат.Колонки.Найти("РаспределеннаяСуммаДляНДС") = Неопределено Тогда
		ТаблицаОплат.Колонки.Добавить("РаспределеннаяСуммаДляНДС", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	КонецЕсли;
	
	МассивСумм = Новый Массив;
	
	СтруктураОтбора = Новый Структура("ДокументРасчетов, ВидЦенности, СтавкаНДС, СчетУчетаНДС"); 
	
	МассивВидовЦенностиНалоговыйАгент = Новый Массив;
	МассивВидовЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	МассивВидовЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	МассивВидовЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	
	Для Каждого СтрокаНДС Из ТаблицаНДС Цикл
		
		НалоговыйАгент = МассивВидовЦенностиНалоговыйАгент.Найти(СтрокаНДС.ВидЦенности) <> Неопределено;
		
		Если НЕ СтрокаНДС.ВидЦенности = Перечисления.ВидыЦенностей.АвансыВыданные И НЕ НалоговыйАгент Тогда 
			СтрокаНДС.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
		
		Если НалоговыйАгент Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТаблицаОплат.Колонки.Найти("Контрагент") <> Неопределено
			И ТаблицаНДС.Колонки.Найти("Покупатель") <> Неопределено Тогда
			ОплатыСОтбором = ТаблицаОплат.НайтиСтроки(Новый Структура("Контрагент", СтрокаНДС.Покупатель));
		Иначе
			ОплатыСОтбором = ТаблицаОплат;
		КонецЕсли;
		
		Для Каждого СтрокаОплаты Из ОплатыСОтбором Цикл
			
			Если (СтрокаОплаты.ДокументРасчетов = СтрокаНДС.СчетФактура) Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаОплаты.СуммаБУ - СтрокаОплаты.РаспределеннаяСуммаДляНДС = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			СуммаТаблицыНДС = ?(НалоговыйАгент, СтрокаНДС.СуммаБезНДС, СтрокаНДС.СуммаБезНДС + СтрокаНДС.СуммаНДС);
			СуммаОплаты = ?(СуммаТаблицыНДС > СтрокаОплаты.СуммаБУ - СтрокаОплаты.РаспределеннаяСуммаДляНДС, 
				СтрокаОплаты.СуммаБУ - СтрокаОплаты.РаспределеннаяСуммаДляНДС, 
				СуммаТаблицыНДС);
			СтрокаОплаты.РаспределеннаяСуммаДляНДС = СтрокаОплаты.РаспределеннаяСуммаДляНДС + СуммаОплаты;
			
			Если СуммаОплаты < СуммаТаблицыНДС Тогда
				
				// Распределение колонок СуммаБезНДС, НДС
				МассивСумм.Очистить();
				МассивСумм.Добавить(СтрокаНДС.СуммаБезНДС);
				Если НЕ НалоговыйАгент Тогда
					МассивСумм.Добавить(СтрокаНДС.СуммаНДС);
				КонецЕсли;
				МассивРаспределенныхСумм = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаОплаты, МассивСумм);
				
				НоваяСтрока = ТаблицаНДС.Вставить(ТаблицаНДС.Индекс(СтрокаНДС) + 1);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНДС);
				Если НЕ НалоговыйАгент Тогда
					НоваяСтрока.СуммаНДС = СтрокаНДС.СуммаНДС - МассивРаспределенныхСумм[1];
				Иначе
					НоваяСтрока.СуммаНДС = СтрокаНДС.СуммаНДС / СтрокаНДС.СуммаБезНДС * (СтрокаНДС.СуммаБезНДС -
						МассивРаспределенныхСумм[0]);
				КонецЕсли;
				НоваяСтрока.СуммаБезНДС = СтрокаНДС.СуммаБезНДС - МассивРаспределенныхСумм[0];
				
				СтрокаНДС.СуммаБезНДС = СтрокаНДС.СуммаБезНДС - НоваяСтрока.СуммаБезНДС;
				СтрокаНДС.СуммаНДС = СтрокаНДС.СуммаНДС - НоваяСтрока.СуммаНДС;
				
			КонецЕсли;
			
			СтрокаНДС.ДатаОплаты = СтрокаОплаты.ДатаДокументаРасчетов;
			
			Прервать;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
КонецПроцедуры

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ОтражениеНДСКВычету КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеНДСКВычетуТоварыИУслуги.Ссылка КАК Ссылка,
	|	ОтражениеНДСКВычетуТоварыИУслуги.НомерСтроки КАК НомерСтроки,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Номенклатура КАК Товар,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Номенклатура.Наименование КАК ТоварНаименование,
	|	ОтражениеНДСКВычетуТоварыИУслуги.Сумма КАК ВсегоВал,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СуммаНДС КАК НДСВал,
	|	ОтражениеНДСКВычетуТоварыИУслуги.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.ОтражениеНДСКВычету.ТоварыИУслуги КАК ОтражениеНДСКВычетуТоварыИУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ОтражениеНДСКВычетуТоварыИУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ОтражениеНДСКВычетуТоварыИУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|ГДЕ
	|	ОтражениеНДСКВычетуТоварыИУслуги.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

#КонецЕсли