#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Подсистема "Управление доступом"

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическиеЛица.ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом"

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	НалоговыйПериодДата = Дата(?(НалоговыйПериод <= 0, 1, НалоговыйПериод), 12, 31);
	
	ИдентификаторФайла =  Новый УникальныйИдентификатор();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если  Не ПометкаУдаления Тогда
		СформироватьВыходнойФайл();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)	
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
		
		УчетНДФЛ.СформироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, Дата, ДанныеДляПроведения.Налоги);
		УчетНачисленнойЗарплаты.ЗарегистрироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, НачалоМесяца(Дата), ДанныеДляПроведения.НалогиСотрудников, Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛПередачаЗадолженностиВНалоговыйОрган);
		
		ДанныеДляПроведения = ОтражениеЗарплатыВУчете.НоваяСтруктураРезультатыРасчетаЗарплаты();
		ДанныеДляПроведения.НачисленияУдержания = Движения.НачисленияУдержанияПоСотрудникам.Выгрузить();
		СтрокаСписокТаблиц = "НачисленныйНДФЛ";
		ОтражениеЗарплатыВБухучете.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, НачалоМесяца(Дата), ДанныеДляПроведения, СтрокаСписокТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИдентификаторФайла = Новый УникальныйИдентификатор();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ДанныеДляПроведения()
	
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка13, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка09, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка30, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	СоответствиеСтавок.Вставить(Перечисления.НДФЛСтавки.Ставка15, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	
	ДанныеОЗадолженности = Новый ТаблицаЗначений;
	ДанныеОЗадолженности.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ДанныеОЗадолженности.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ДанныеОЗадолженности.Колонки.Добавить("Ставка", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ДанныеОЗадолженности.Колонки.Добавить("СтавкаНалогообложенияРезидента", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	ДанныеОЗадолженности.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	ДанныеОЗадолженности.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ДанныеОЗадолженности.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДанныеСправкиПоСотруднику Из Сотрудники Цикл 
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			Задолженность = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(ДанныеСправкиПоСотруднику, "Задолженность", СтавкаНДФЛ);	
			Если Задолженность <> 0 Тогда
				СтрокаЗадолженности = ДанныеОЗадолженности.Добавить();
				СтрокаЗадолженности.ФизическоеЛицо = ДанныеСправкиПоСотруднику.Сотрудник;
				СтрокаЗадолженности.Ставка = СтавкаНДФЛ;
				СтрокаЗадолженности.СтавкаНалогообложенияРезидента = СоответствиеСтавок[СтавкаНДФЛ];
				СтрокаЗадолженности.МесяцНалоговогоПериода =  Мин(Дата(НалоговыйПериод, 12, 1), НачалоМесяца(Дата));
				СтрокаЗадолженности.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане;
				СтрокаЗадолженности.Сумма = Задолженность;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;	

	ЗадолженностьФизлиц = ДанныеОЗадолженности.Скопировать(,"ФизическоеЛицо,Сумма");
	ЗадолженностьФизлиц.Свернуть("ФизическоеЛицо","Сумма");
	ДанныеДляПроведения = Новый Структура("Налоги, НалогиСотрудников", ДанныеОЗадолженности, ЗадолженностьФизлиц);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Функция СформироватьЗапросПоСтрокамДокументаДляПроверки(Сотрудники)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", Сотрудники);
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСтроки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Сотрудник,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИНН,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерСправки,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Фамилия,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Имя,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Отчество,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Адрес,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ВидДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СерияДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерДокумента,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.Гражданство,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ДатаРождения,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.СтатусНалогоплательщика,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ДатаУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.НомерУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.КодНалоговогоОрганаУведомления,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.АдресЗарубежом,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке13,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке30,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке9,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке15,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОбщаяСуммаДоходаПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ОблагаемаяСуммаДоходаПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИсчисленоПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.УдержаноПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ЗадолженностьПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ИзлишнеУдержаноПоСтавке35,
	|	СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники.ПеречисленоПоСтавке35
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК СправкиНДФЛДляПередачиВНалоговыйОрганСотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ПовторяющиесяНомераСправок.НомерСтроки) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяНомераСправок,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ПовторяющиесяСправки.НомерСтроки) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяСправки,
	|	Сотрудники.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТДублиСтрок
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ПовторяющиесяНомераСправок
	|		ПО Сотрудники.НомерСтроки < ПовторяющиесяНомераСправок.НомерСтроки
	|			И Сотрудники.НомерСправки = ПовторяющиесяНомераСправок.НомерСправки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК ПовторяющиесяСправки
	|		ПО Сотрудники.НомерСтроки < ПовторяющиесяСправки.НомерСтроки
	|			И Сотрудники.Сотрудник = ПовторяющиесяСправки.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Сотрудники.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДублиНомеров.НомерСтроки
	|ПОМЕСТИТЬ ВТДублиНомероваСправок
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДублиНомеров
	|		ПО Сотрудники.НомерСтроки < СотрудникиДублиНомеров.НомерСтроки
	|			И Сотрудники.НомерСправки = СотрудникиДублиНомеров.НомерСправки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиДубли.НомерСтроки
	|ПОМЕСТИТЬ ВТСотрудникиДубли
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДубли
	|		ПО Сотрудники.Сотрудник = СотрудникиДубли.Сотрудник
	|			И Сотрудники.НомерСтроки < СотрудникиДубли.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДублиНомероваСправок.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяНомераСправок,
	|	ВЫБОР
	|		КОГДА СотрудникиДубли.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПовторяющиесяСправки,
	|	Сотрудники.НомерСтроки КАК НомерСтроки,
	|	&НалоговыйПериод КАК НалоговыйПериод,
	|	Сотрудники.Сотрудник,
	|	Сотрудники.ИНН,
	|	Сотрудники.НомерСправки,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество,
	|	Сотрудники.Адрес,
	|	Сотрудники.ВидДокумента,
	|	Сотрудники.СерияДокумента,
	|	Сотрудники.НомерДокумента,
	|	Сотрудники.Гражданство,
	|	Сотрудники.ДатаРождения,
	|	Сотрудники.СтатусНалогоплательщика,
	|	Сотрудники.ДатаУведомления,
	|	Сотрудники.НомерУведомления,
	|	Сотрудники.КодНалоговогоОрганаУведомления,
	|	Сотрудники.АдресЗарубежом,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке13,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке13,
	|	Сотрудники.ИсчисленоПоСтавке13,
	|	Сотрудники.УдержаноПоСтавке13,
	|	Сотрудники.ЗадолженностьПоСтавке13,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке13,
	|	Сотрудники.ПеречисленоПоСтавке13,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке30,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке30,
	|	Сотрудники.ИсчисленоПоСтавке30,
	|	Сотрудники.УдержаноПоСтавке30,
	|	Сотрудники.ЗадолженностьПоСтавке30,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке30,
	|	Сотрудники.ПеречисленоПоСтавке30,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке9,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке9,
	|	Сотрудники.ИсчисленоПоСтавке9,
	|	Сотрудники.УдержаноПоСтавке9,
	|	Сотрудники.ЗадолженностьПоСтавке9,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке9,
	|	Сотрудники.ПеречисленоПоСтавке9,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке15,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке15,
	|	Сотрудники.ИсчисленоПоСтавке15,
	|	Сотрудники.УдержаноПоСтавке15,
	|	Сотрудники.ЗадолженностьПоСтавке15,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке15,
	|	Сотрудники.ПеречисленоПоСтавке15,
	|	Сотрудники.ОбщаяСуммаДоходаПоСтавке35,
	|	Сотрудники.ОблагаемаяСуммаДоходаПоСтавке35,
	|	Сотрудники.ИсчисленоПоСтавке35,
	|	Сотрудники.УдержаноПоСтавке35,
	|	Сотрудники.ЗадолженностьПоСтавке35,
	|	Сотрудники.ИзлишнеУдержаноПоСтавке35,
	|	Сотрудники.ПеречисленоПоСтавке35,
	|	ФизическиеЛица.Наименование КАК СотрудникНаименование
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Сотрудники.Сотрудник = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиДубли КАК СотрудникиДубли
	|		ПО Сотрудники.НомерСтроки = СотрудникиДубли.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДублиНомероваСправок КАК ДублиНомероваСправок
	|		ПО Сотрудники.НомерСтроки = ДублиНомероваСправок.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();				   
	
КонецФункции

Процедура ПроверитьДанныеДокумента(Отказ) Экспорт 		
		
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
		
	ВыборкаСотрудниковДляПроверки = СформироватьЗапросПоСтрокамДокументаДляПроверки(Сотрудники.Выгрузить()).Выбрать();
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);	
		СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
		УчетНДФЛ.СправкиНДФЛПроверитьДанныеНалоговогоАгента(
			ЭтотОбъект, 
			СтруктураДанныхНА, 
			Перечисления.ПорядокФормированияСправкиОДоходахФизическогоЛица.ВРазрезеКодовОКАТО,
			Отказ);
	КонецЕсли;	
	
	Пока ВыборкаСотрудниковДляПроверки.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
		Документы.СправкаНДФЛ.ПроверитьДанныеФизическогоЛица(
			Ссылка,
			ВыборкаСотрудниковДляПроверки,
			Дата,
			"Сотрудники",
			ВыборкаСотрудниковДляПроверки.НомерСтроки,
			Отказ);
		
		Если ВыборкаСотрудниковДляПроверки.ЕстьПовторяющиесяСправки Тогда
			ТекстСообщения = НСтр("ru = 'Данные по сотруднику были введены в документе ранее'");
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Сотрудники", ВыборкаСотрудниковДляПроверки.НомерСтроки, "Сотрудник");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, ПутьКДанным, ,Отказ);   
		КонецЕсли;
		
		Если ВыборкаСотрудниковДляПроверки.ЕстьПовторяющиесяНомераСправок Тогда
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Сотрудники", ВыборкаСотрудниковДляПроверки.НомерСтроки, "НомерСправки");
			
			ТекстСообщения = НСтр("ru = 'Номер справки был введен в документе ранее'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка,  ПутьКДанным, ,Отказ); 	
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура("Сотрудник", ВыборкаСотрудниковДляПроверки.Сотрудник);
	
		Доходы = СведенияОДоходах.Выгрузить(СтруктураОтбора);
		Вычеты = СведенияОВычетах.Выгрузить(СтруктураОтбора);

		НачалоСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Нстр("ru = 'Сотрудник %1, справка № %2:'"), ВыборкаСотрудниковДляПроверки.СотрудникНаименование, ВыборкаСотрудниковДляПроверки.НомерСправки) + " ";
		
		ПутьКДаннымСотрудника = "Сотрудники[" + Формат(ВыборкаСотрудниковДляПроверки.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]";
		
		УчетНДФЛ.СправкиНДФЛПроверитьДанныеОДоходахНалогахВычетах(
			Ссылка,
			Дата,
			ВыборкаСотрудниковДляПроверки,
			ПутьКДаннымСотрудника,
			Доходы,
			Вычеты,
			СоответствиеСтавокДоходов,
			НачалоСообщения,
			Отказ,
			Ложь);
			
	КонецЦикла;		
	
КонецПроцедуры

//ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ФОРМИРОВАНИЯ ФАЙЛА

Процедура СформироватьВыходнойФайл()
	ИмяСформированногоФайла = "";
	Если УчетНДФЛКлиентСервер.СправкиНДФЛДокументИспользуетКодОКТМО(ЭтотОбъект) Тогда
		ТекстФайла = ТекстВыходногоФайла2014(ИмяСформированногоФайла);	
	Иначе	
		ТекстФайла = ТекстВыходногоФайла2011(ИмяСформированногоФайла);
	КонецЕсли;	
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Ссылка, ИмяСформированногоФайла + ".xml", ТекстФайла, ,КодировкаТекста.ANSI);	
КонецПроцедуры	

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция ТекстВыходногоФайла2011(ИмяФайла)
		
	СоответствиеКодовФНССтатусамНДФЛ = УчетНДФЛ.ПолучитьСоответствиеКодовФНССтатусамНДФЛ();
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовВычетов = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность, 
											СоответствиеКодовДоходов, 
											СоответствиеКодовВычетов);
	
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	СтруктураДанныхНА.Признак = ?(ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ,"2","1");	
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
		
		// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2011XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();

	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);	
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	                                                              
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					СтруктураДанныхНА.КПП,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", "1С:Предприятие 8");
	Атрибуты.Вставить("ВерсФорм", "5.02");

	
	Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	Если СтруктураДанныхНА.ЭтоЮрЛицо Тогда
		НомерВыбираемогоЭлемента = 1;
	Иначе
		НомерВыбираемогоЭлемента = 2;
	КонецЕсли;	
	
	// Информационная часть
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл", НомерВыбираемогоЭлемента);
	
	// Общие сведения служебной части
	НаборЗаписейОбщСвСЧ = ФорматФайла.СвРекв.Значение;
	НаборЗаписейОбщСвСЧ.ОКАТО.Значение = СтруктураДанныхНА.ОКАТО;
	НаборЗаписейОбщСвСЧ.ПризнакФ.Значение = СтруктураДанныхНА.Признак;
	НаборЗаписейОбщСвСЧ.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	
	ФорматСправка = ФорматФайла.Документ.Значение;
	ФорматСправка.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматСправка.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматСправка.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматСправка.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	// Сведения об отправителе
	ФорматСправка.СвНА.Значение.ОКАТО.Значение = СтруктураДанныхНА.ОКАТО;
	Если НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон) Тогда
		ФорматСправка.СвНА.Значение.Удалить("Тлф");
	Иначе
		ФорматСправка.СвНА.Значение.Тлф.Значение = СтруктураДанныхНА.Телефон;
	КонецЕсли;
	
	Если ОрганизацияЭтоФизЛицо Тогда
		
		НаборЗаписейОбщСвСЧ.СвФЛ.Значение.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		
	Иначе
		
		// Сведения об отправителе
		НаборЗаписейОтправитель = НаборЗаписейОбщСвСЧ.СвЮЛ.Значение;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = СтруктураДанныхНА.КПП;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = СтруктураДанныхНА.КПП;
		
	КонецЕсли;
	
	Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейОбщСвСЧ);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СвРекв", "", Атрибуты), НаборЗаписейОбщСвСЧ);
			
	СтруктураОтбора = Новый Структура("НомерСправки");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	Для каждого СтрокаДанных Из Сотрудники Цикл 
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходах.Выгрузить(СведенияОДоходах.НайтиСтроки(СтруктураОтбора));
		ВычетыПоВидам = СведенияОВычетах.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
					
		ДоходыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
			СтрокаТЗ.КодВычетаСтрокой = СоответствиеКодовВычетов[СтрокаТЗ.КодВычета];
		КонецЦикла;
		
		СтруктураДанныхСправки = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСправка);
		
		СтруктураДанныхСправки.НомСпр.Значение = СтрокаДанных.НомерСправки;
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейФизЛицо = СтруктураДанныхСправки.ПолучДох.Значение;
		
		//  Фамилия, Имя, Отчество
		НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = СтрокаДанных.Фамилия;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Имя = СтрокаДанных.Имя;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Отчество = СтрокаДанных.Отчество;
		Если ПустаяСтрока(СтрокаДанных.ИНН) Тогда
			НаборЗаписейФизЛицо.Удалить("ИННФЛ");
		Иначе
			НаборЗаписейФизЛицо.ИННФЛ.Значение = СтрокаДанных.ИНН;
		КонецЕсли;
		НаборЗаписейФизЛицо.Статус.Значение = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейФизЛицо.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейФизЛицо.Гражд.Значение = СоответствиеКодовСтран[СтрокаДанных.Гражданство];
		
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейФизЛицо.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		НаборЗаписейДокУдЛичности.КодУдЛичн = СоответствиеДокументовУдостоверяющихЛичность[СтрокаДанных.ВидДокумента];
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		// Адреса
		Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
			СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрМЖРФ.Значение,СтруктураАдреса); //  Индекс, КодРегион, Район, Город, Улица, Дом, Корп,
			Если СтруктураАдреса.Свойство("Регион") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.КодРегион = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
			КонецЕсли;	
			Если СтруктураАдреса.Свойство("НаселенныйПункт") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.НаселПункт = СтруктураАдреса.НаселенныйПункт;
			КонецЕсли;	
			Если СтруктураАдреса.Свойство("Квартира") Тогда 
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.Кварт = СтруктураАдреса.Квартира;
			КонецЕсли;	
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрМЖРФ");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
			СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.АдресЗарубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
			НаборЗаписейФизЛицо.АдрИНО.Значение.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
			НаборЗаписейФизЛицо.АдрИНО.Значение.АдрТекст = СтруктураАдреса.Представление;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрИНО");
		КонецЕсли;
		
		// Сведения об облагаемых доходах
		ФорматНаборЗаписейСведенияОДоходах = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(СтруктураДанныхСправки.СведДох.Значение);
		СтруктураДанныхСправки.Удалить("СведДох");
		
		Атрибуты = ДанныеВыгружаемыеКакАтрибуты(СтруктураДанныхСправки);
		
		УзелСправки = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Документ", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСправки, СтруктураДанныхСправки);
		
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;	
			
			НаборЗаписейСведенияОДоходах = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматНаборЗаписейСведенияОДоходах);
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);	
						КонецЕсли;	
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						ОписаниеФормата = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
						ОписаниеФормата.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", ОписаниеФормата);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
				
			// Налоговые вычеты
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 Тогда
				
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = СоответствиеКодовВычетов[СтрокаВычетов.КодВычета];
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				Если (ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код311, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код312, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код318, "КодВычета") <> Неопределено) Тогда
					Уведомление = НаборЗаписейВычет.УведИмущВыч.Значение;
					Уведомление.НомерУвед = СтрокаДанных.НомерУведомления;
					Уведомление.ДатаУвед = СтрокаДанных.ДатаУведомления;
					Уведомление.ИФНСУвед = СтрокаДанных.КодНалоговогоОрганаУведомления;
				Иначе
					НаборЗаписейВычет.Удалить("УведИмущВыч");
				КонецЕсли;
				
			Иначе
				НаборЗаписейСведенияОДоходах.Удалить("НалВычССИ");
			КонецЕсли;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СГДНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
				ОписаниеПолей = НаборЗаписейСведенияОДоходах.СГДНалПер.Поля;
				СтруктураСГДНалПер.Удалить("НалУдерж");
				СтруктураСГДНалПер.Удалить("НалПеречисл");
				СтруктураСГДНалПер.Удалить("НалУдержЛиш");
				СтрокаОписания = ОписаниеПолей.Найти("НалУдерж","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалПеречисл","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалУдержЛиш","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
			Иначе
				СтруктураСГДНалПер.НалУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалПеречисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалУдержЛиш = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			
			Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСправки, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
			
		КонецЦикла;
		
	КонецЦикла;
		
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML

КонецФункции

Функция ТекстВыходногоФайла2014(ИмяФайла)
		
	СоответствиеКодовФНССтатусамНДФЛ = УчетНДФЛ.ПолучитьСоответствиеКодовФНССтатусамНДФЛ();
	СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
	СоответствиеКодовСтран = Новый Соответствие;
	СоответствиеИменСтран = Новый Соответствие;
	СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
	СоответствиеСтавок = Новый Соответствие;
	СоответствиеКодовДоходов = Новый Соответствие;
	СоответствиеКодовВычетов = Новый Соответствие;
	УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
											СоответствиеИменСтран, 
											СоответствиеДокументовУдостоверяющихЛичность, 
											СоответствиеКодовДоходов, 
											СоответствиеКодовВычетов);
	
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
	СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	СтруктураДанныхНА = УчетНДФЛ.СправкиНДФЛДанныеНалоговогоАгента(Организация, НалоговыйПериод, РегистрацияВНалоговомОргане, Дата, Телефон, ДолжностьПодписавшегоЛица, СправкуПодписал);
	СтруктураДанныхНА.КодНалоговогоОргана = КодИФНС;
	СтруктураДанныхНА.Признак = ?(ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ,"2","1");	
	ОрганизацияЭтоФизЛицо = Не СтруктураДанныхНА.ЭтоЮрЛицо;
		
		// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьМакет("ФорматНДФЛ2014XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();

	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);	
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	                                                              
	ИмяФайла = Документы.СправкиНДФЛДляПередачиВНалоговыйОрган.ИмяФайла2НДФЛ(
					Дата, 
					СтруктураДанныхНА.ЭтоЮрЛицо, 
					СтруктураДанныхНА.КодНалоговогоОргана, 
					СтруктураДанныхНА.ИННорг, 
					СтруктураДанныхНА.КПП,
					ИдентификаторФайла);
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("ИдФайл", ИмяФайла);
	Атрибуты.Вставить("ВерсПрог", "1С:Предприятие 8");
	Атрибуты.Вставить("ВерсФорм", "5.03");

	
	Узел2НДФЛ = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "Файл", "", Атрибуты);
	
	Если СтруктураДанныхНА.ЭтоЮрЛицо Тогда
		НомерВыбираемогоЭлемента = 1;
	Иначе
		НомерВыбираемогоЭлемента = 2;
	КонецЕсли;	
	
	// Информационная часть
	ФорматФайла = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "Файл", НомерВыбираемогоЭлемента);
	
	// Общие сведения служебной части
	НаборЗаписейОбщСвСЧ = ФорматФайла.СвРекв.Значение;
	НаборЗаписейОбщСвСЧ.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	НаборЗаписейОбщСвСЧ.ПризнакФ.Значение = СтруктураДанныхНА.Признак;
	НаборЗаписейОбщСвСЧ.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	
	ФорматСправка = ФорматФайла.Документ.Значение;
	ФорматСправка.ОтчетГод.Значение = СтруктураДанныхНА.НалоговыйПериодСтрокой;
	ФорматСправка.ДатаДок.Значение = СтруктураДанныхНА.Дата;
	ФорматСправка.Признак.Значение = СтруктураДанныхНА.Признак;
	ФорматСправка.КодНО.Значение = СтруктураДанныхНА.КодНалоговогоОргана;
	
	// Сведения об отправителе
	ФорматСправка.СвНА.Значение.ОКТМО.Значение = СтруктураДанныхНА.ОКТМО;
	Если НЕ ЗначениеЗаполнено(СтруктураДанныхНА.Телефон) Тогда
		ФорматСправка.СвНА.Значение.Удалить("Тлф");
	Иначе
		ФорматСправка.СвНА.Значение.Тлф.Значение = СтруктураДанныхНА.Телефон;
	КонецЕсли;
	
	Если ОрганизацияЭтоФизЛицо Тогда
		
		НаборЗаписейОбщСвСЧ.СвФЛ.Значение.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАФЛ.Значение;
		НаборЗаписейОтправитель.ИННФЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.ФИО.Значение.Фамилия = СтруктураДанныхНА.Фамилия;
		НаборЗаписейОтправитель.ФИО.Значение.Имя = СтруктураДанныхНА.Имя;
		НаборЗаписейОтправитель.ФИО.Значение.Отчество = СтруктураДанныхНА.Отчество;
		
	Иначе
		
		// Сведения об отправителе
		НаборЗаписейОтправитель = НаборЗаписейОбщСвСЧ.СвЮЛ.Значение;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = СтруктураДанныхНА.КПП;
		
		НаборЗаписейОтправитель = ФорматСправка.СвНА.Значение.СвНАЮЛ.Значение;
		НаборЗаписейОтправитель.НаимОрг.Значение = СтруктураДанныхНА.НазваниеОрганизации;
		НаборЗаписейОтправитель.ИННЮЛ.Значение = СтруктураДанныхНА.ИННорг;
		НаборЗаписейОтправитель.КПП.Значение = СтруктураДанныхНА.КПП;
		
	КонецЕсли;
	
	Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейОбщСвСЧ);
	
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "СвРекв", "", Атрибуты), НаборЗаписейОбщСвСЧ);
			
	СтруктураОтбора = Новый Структура("Сотрудник");
	СтруктураОтбораДохода = Новый Структура("МесяцНалоговогоПериода,КодДохода");
	ТаблицаВычетовКДоходам = СведенияОВычетах.ВыгрузитьКолонки("СуммаВычета");
	ТаблицаВычетовКДоходам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	Для каждого СтрокаДанных Из Сотрудники Цикл 
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДанных);
		ДоходыПоВидам = СведенияОДоходах.Выгрузить(СведенияОДоходах.НайтиСтроки(СтруктураОтбора));
		ВычетыПоВидам = СведенияОВычетах.Выгрузить(СведенияОВычетах.НайтиСтроки(СтруктураОтбора));
					
		ДоходыПоВидам.Колонки.Добавить("КодВычетаСтрокой", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		Для каждого СтрокаТЗ Из ДоходыПоВидам Цикл
			СтрокаТЗ.КодВычетаСтрокой = СоответствиеКодовВычетов[СтрокаТЗ.КодВычета];
		КонецЦикла;
		
		СтруктураДанныхСправки = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматСправка);
		
		СтруктураДанныхСправки.НомСпр.Значение = СтрокаДанных.НомерСправки;
		
		// Данные о физическом лице - получателе дохода
		НаборЗаписейФизЛицо = СтруктураДанныхСправки.ПолучДох.Значение;
		
		//  Фамилия, Имя, Отчество
		НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = СтрокаДанных.Фамилия;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Имя = СтрокаДанных.Имя;                     
		НаборЗаписейФизЛицо.ФИО.Значение.Отчество = СтрокаДанных.Отчество;
		Если ПустаяСтрока(СтрокаДанных.ИНН) Тогда
			НаборЗаписейФизЛицо.Удалить("ИННФЛ");
		Иначе
			НаборЗаписейФизЛицо.ИННФЛ.Значение = СтрокаДанных.ИНН;
		КонецЕсли;
		НаборЗаписейФизЛицо.Статус.Значение = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
		НаборЗаписейФизЛицо.ДатаРожд.Значение = СтрокаДанных.ДатаРождения;
		НаборЗаписейФизЛицо.Гражд.Значение = СоответствиеКодовСтран[СтрокаДанных.Гражданство];
		
		// Удостоверение личности
		НаборЗаписейДокУдЛичности = НаборЗаписейФизЛицо.УдЛичнФЛ.Значение;//  КодУдЛичн, СерНомДок 
		НаборЗаписейДокУдЛичности.КодУдЛичн = СоответствиеДокументовУдостоверяющихЛичность[СтрокаДанных.ВидДокумента];
		НаборЗаписейДокУдЛичности.СерНомДок = СокрЛП(СтрокаДанных.СерияДокумента) + " " + СокрЛП(СтрокаДанных.НомерДокумента);
		
		// Адреса
		Если ЗначениеЗаполнено(СтрокаДанных.Адрес) Тогда
			СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.Адрес, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрМЖРФ.Значение,СтруктураАдреса); //  Индекс, КодРегион, Район, Город, Улица, Дом, Корп,
			Если СтруктураАдреса.Свойство("Регион") Тогда
				КодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
				Если КодРегиона <> Неопределено Тогда
					КодРегионаСтрокой = "";
					Если ТипЗнч(КодРегиона) = Тип("Число") Тогда
						КодРегионаСтрокой = Формат(КодРегиона, "ЧЦ=2; ЧВН=; ЧГ=");		
					ИначеЕсли ТипЗнч(КодРегиона) = Тип("Строка") Тогда 	
						КодРегионаСтрокой = КодРегиона;	
					КонецЕсли;	
				КонецЕсли;	
				
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.КодРегион = КодРегионаСтрокой;
			КонецЕсли;	
			Если СтруктураАдреса.Свойство("НаселенныйПункт") Тогда
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.НаселПункт = СтруктураАдреса.НаселенныйПункт;
			КонецЕсли;	
			Если СтруктураАдреса.Свойство("Квартира") Тогда 
				НаборЗаписейФизЛицо.АдрМЖРФ.Значение.Кварт = СтруктураАдреса.Квартира;
			КонецЕсли;	
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрМЖРФ");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДанных.АдресЗарубежом) Тогда
			СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
					СтрокаДанных.АдресЗарубежом, Справочники.ВидыКонтактнойИнформации.АдресЗаПределамиРФФизическиеЛица);
			НаборЗаписейФизЛицо.АдрИНО.Значение.КодСтр = СоответствиеИменСтран[СтруктураАдреса.Страна];
			НаборЗаписейФизЛицо.АдрИНО.Значение.АдрТекст = СтруктураАдреса.Представление;
		Иначе // очищаем адресные данные
			НаборЗаписейФизЛицо.Удалить("АдрИНО");
		КонецЕсли;
		
		// Сведения об облагаемых доходах
		ФорматНаборЗаписейСведенияОДоходах = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(СтруктураДанныхСправки.СведДох.Значение);
		СтруктураДанныхСправки.Удалить("СведДох");
		
		Атрибуты = ДанныеВыгружаемыеКакАтрибуты(СтруктураДанныхСправки);
		
		УзелСправки = ЗарплатаКадры.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Документ", "", Атрибуты);
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСправки, СтруктураДанныхСправки);
		
		
		Для Каждого СтавкаНДФЛ Из Перечисления.НДФЛСтавки Цикл
			
			Если Не УчетНДФЛКлиентСервер.СправкиНДФЛЕстьИтогиПоСтавке(СтрокаДанных, СтавкаНДФЛ) Тогда
				Продолжить;
			КонецЕсли;	
			
			НаборЗаписейСведенияОДоходах = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ФорматНаборЗаписейСведенияОДоходах);
			НаборЗаписейСведенияОДоходах.Ставка.Значение = СоответствиеСтавок[СтавкаНДФЛ];
			
			НаборЗаписейДоходы = НаборЗаписейСведенияОДоходах.ДохВыч.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.СвСумДох.Значение;
			
			Если УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ) <> 0 Тогда
				ТаблицаСтрок = УчетНДФЛ.СправкиНДФЛИзвлечьДоходыПоСтавке(СтавкаНДФЛ, НалоговыйПериод, СтрокаДанных.СтатусНалогоплательщика, ДоходыПоВидам, СоответствиеСтавокДоходов);
				ТаблицаСтрок.Свернуть("МесяцНалоговогоПериода,КодДохода");
				ТаблицаСтрок.Сортировать("МесяцНалоговогоПериода,КодДохода");
				Для каждого СтрокаДоходов Из ТаблицаСтрок Цикл // Доходы
					
					ЗаполнитьЗначенияСвойств(СтруктураОтбораДохода, СтрокаДоходов);
					Строки = ДоходыПоВидам.НайтиСтроки(СтруктураОтбораДохода);
					СуммаДохода = 0;
					ТаблицаВычетовКДоходам.Очистить();
					Для каждого ОтобраннаяСтрока Из Строки Цикл
						СуммаДохода = СуммаДохода + ОтобраннаяСтрока.СуммаДохода;
						Если ЗначениеЗаполнено(ОтобраннаяСтрока.КодВычета) И ЗначениеЗаполнено(ОтобраннаяСтрока.СуммаВычета) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетовКДоходам.Добавить(), ОтобраннаяСтрока);	
						КонецЕсли;	
					КонецЦикла;
					
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					СтрокаТЗ.Месяц = ?(СтрДлина(СтрокаДоходов.МесяцНалоговогоПериода) = 1,"0","") + СтрокаДоходов.МесяцНалоговогоПериода;
					СтрокаТЗ.КодДоход = СоответствиеКодовДоходов[СтрокаДоходов.КодДохода];
					СтрокаТЗ.СумДоход = СуммаДохода;
					Если ТаблицаВычетовКДоходам.Количество() > 0 Тогда
						ТаблицаДляСтроки = ТаблицаВычетовКДоходам.Скопировать();
						ТаблицаДляСтроки.Колонки.КодВычетаСтрокой.Имя = "КодВычет";
						ТаблицаДляСтроки.Колонки.СуммаВычета.Имя = "СумВычет";
						ОписаниеФормата = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НаборЗаписейСведенияОДоходах.НалВычССИ.Значение.ПредВычССИ);
						ОписаниеФормата.Значение = ТаблицаДляСтроки;
						СтрокаТЗ.СвСумВыч = Новый Структура("СвСумВыч", ОписаниеФормата);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
				
			// Налоговые вычеты
			Если ВычетыПоВидам.Количество() > 0 И СтавкаНДФЛ = Перечисления.НДФЛСтавки.Ставка13 Тогда
				
				НаборЗаписейВычет = НаборЗаписейСведенияОДоходах.НалВычССИ.Значение;
				ТаблицаВычетов = НаборЗаписейВычет.ПредВычССИ.Значение;
				Для каждого СтрокаВычетов Из ВычетыПоВидам Цикл // Вычеты
					СтрокаТЗ = ТаблицаВычетов.Добавить();
					СтрокаТЗ.КодВычет = СоответствиеКодовВычетов[СтрокаВычетов.КодВычета];
					СтрокаТЗ.СумВычет = СтрокаВычетов.СуммаВычета;
				КонецЦикла;
				
				Если (ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код311, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код312, "КодВычета") <> Неопределено Или ВычетыПоВидам.Найти(Справочники.ВидыВычетовНДФЛ.Код318, "КодВычета") <> Неопределено) Тогда
					Уведомление = НаборЗаписейВычет.УведИмущВыч.Значение;
					Уведомление.НомерУвед = СтрокаДанных.НомерУведомления;
					Уведомление.ДатаУвед = СтрокаДанных.ДатаУведомления;
					Уведомление.ИФНСУвед = СтрокаДанных.КодНалоговогоОрганаУведомления;
				Иначе
					НаборЗаписейВычет.Удалить("УведИмущВыч");
				КонецЕсли;
				
			Иначе
				НаборЗаписейСведенияОДоходах.Удалить("НалВычССИ");
			КонецЕсли;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			СтруктураСГДНалПер = НаборЗаписейСведенияОДоходах.СГДНалПер.Значение;
			СтруктураСГДНалПер.СумДохОбщ = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОбщаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалБаза = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ОблагаемаяСуммаДохода", СтавкаНДФЛ);
			СтруктураСГДНалПер.НалИсчисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Исчислено", СтавкаНДФЛ);
			Если ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ Тогда
				ОписаниеПолей = НаборЗаписейСведенияОДоходах.СГДНалПер.Поля;
				СтруктураСГДНалПер.Удалить("НалУдерж");
				СтруктураСГДНалПер.Удалить("НалПеречисл");
				СтруктураСГДНалПер.Удалить("НалУдержЛиш");
				СтрокаОписания = ОписаниеПолей.Найти("НалУдерж","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалПеречисл","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
				СтрокаОписания = ОписаниеПолей.Найти("НалУдержЛиш","ИмяПоля");
				Если СтрокаОписания <> Неопределено Тогда
					ОписаниеПолей.Удалить(СтрокаОписания);
				КонецЕсли;
			Иначе
				СтруктураСГДНалПер.НалУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Удержано", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалПеречисл = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Перечислено", СтавкаНДФЛ);
				
				СтруктураСГДНалПер.НалУдержЛиш = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "ИзлишнеУдержано", СтавкаНДФЛ);
			КонецЕсли;
			СтруктураСГДНалПер.НалНеУдерж = УчетНДФЛКлиентСервер.СправкиНДФЛЗначениеИтоговПоСтавке(СтрокаДанных, "Задолженность", СтавкаНДФЛ);
			
			Атрибуты = ДанныеВыгружаемыеКакАтрибуты(НаборЗаписейСведенияОДоходах);
			УзелСведенияОДоходах = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСправки, "СведДох","", Атрибуты);
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСведенияОДоходах, НаборЗаписейСведенияОДоходах);
			
		КонецЦикла;
		
	КонецЦикла;
		
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML();
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	// получаем содержимое файла в виде строки
	СтрокаXML = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрокаXML

КонецФункции

Функция ДанныеВыгружаемыеКакАтрибуты(СтруктураДанных)

	Атрибуты = Новый Структура;
	Для каждого Поле Из СтруктураДанных Цикл
		Если Поле.Значение.ТипЭлемента = "А" Тогда
			Данные = Поле.Значение.Значение;
			Если Поле.Значение.ТипДанных = "ЧИСЛО" Тогда
				Данные = Формат(Данные,"ЧЦ=" + Поле.Значение.Размер + "; ЧДЦ=" + Поле.Значение.РазрядностьДробнойЧасти + "; ЧРД=.; ЧН=; ЧГ=0")
			ИначеЕсли Поле.Значение.ТипДанных = "ДАТА" Тогда
				Если Не ЗначениеЗаполнено(Данные) Тогда
					Данные = ""
				Иначе
					Данные = Формат(Данные,"ДЛФ=D");
				КонецЕсли;
			КонецЕсли;
			Атрибуты.Вставить(Поле.Ключ, Данные);
			СтруктураДанных.Удалить(Поле.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Атрибуты
	
КонецФункции

#КонецЕсли