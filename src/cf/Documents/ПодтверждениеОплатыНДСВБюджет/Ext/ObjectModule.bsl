#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект, Ложь);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ПодтверждениеОплатыНДСВБюджет.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИБ

	ТаблицаСнятиеБлокировкиВычета = УчетНДС.ПодготовитьТаблицуСнятиеБлокировкиВычетаПриВвозеТоваров(
		ПараметрыПроведения.ТаблицаОплатаПодтверждена,
		ПараметрыПроведения.ТаблицаРеквизиты);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	УчетНДС.СформироватьДвиженияПодтвержденаОплатаНДСПоВвезеннымТоварам(
		ПараметрыПроведения.ТаблицаРеквизиты,
		ТаблицаСнятиеБлокировкиВычета,
		Движения, Отказ);
		
	РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.СформироватьДвиженияФактВыполненияРегламентнойОперации(
		ПараметрыПроведения.ДанныеРегламентнойОперации, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.СброситьФактВыполненияОперации(Ссылка);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьДокумент() Экспорт

	ЗаполнитьСтрокиДокумента();

КонецПроцедуры

Процедура ЗаполнитьСтрокиДокумента(Основание = Неопределено) Экспорт

	ТаблицаРезультата = Состав.ВыгрузитьКолонки();

	СчетаУчетаДенежныхСредствОрганизации = Новый Массив;
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.ОперационнаяКасса);
	СчетаУчетаДенежныхСредствОрганизации.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);

	СубконтоЗаявленияОВвозе = Новый Массив;
	СубконтоЗаявленияОВвозе.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоЗаявленияОВвозе.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СубконтоЗаявленияОВвозе.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода", 					КонецДня(Дата));
	Запрос.УстановитьПараметр("КонецПериодаГраница",			Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетУчетаКосвенногоНалога",		ПланыСчетов.Хозрасчетный.НДСТаможенныйСоюзКУплате);
	Запрос.УстановитьПараметр("СубконтоЗаявлениеОВвозе",		СубконтоЗаявленияОВвозе);
	Запрос.УстановитьПараметр("Организация", 					Организация);
	Запрос.УстановитьПараметр("СчетаУчетаДенежныхСредств",		СчетаУчетаДенежныхСредствОрганизации);
	Запрос.УстановитьПараметр("Основание", 						Основание);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленныйОбороты.СчетФактура КАК ЗаявлениеОВвозе
	|ПОМЕСТИТЬ ВсеЗаявленияОВвозе
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			Организация = &Организация
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|				И &УсловиеОснованиеСчетФактура) КАК НДСПредъявленныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленныйОбороты.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КнигаПокупок.СчетФактура КАК ЗаявлениеОВвозе
	|ПОМЕСТИТЬ КнигаПокупокВЧастиЗаявленийОВвозе
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК КнигаПокупок
	|ГДЕ
	|	КнигаПокупок.Организация = &Организация
	|	И КнигаПокупок.Период <= &КонецПериода
	|	И КнигаПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|	И &УсловиеОснованиеКнигаПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КнигаПокупок.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеЗаявленияОВвозе.ЗаявлениеОВвозе КАК ЗаявлениеОВвозе,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаЗаявления
	|ПОМЕСТИТЬ НеподтвержденныеЗаявленияОВвозе
	|ИЗ
	|	ВсеЗаявленияОВвозе КАК ВсеЗаявленияОВвозе
	|		ЛЕВОЕ СОЕДИНЕНИЕ КнигаПокупокВЧастиЗаявленийОВвозе КАК КнигаПокупокВЧастиЗаявленийОВвозе
	|		ПО (КнигаПокупокВЧастиЗаявленийОВвозе.ЗаявлениеОВвозе = ВсеЗаявленияОВвозе.ЗаявлениеОВвозе)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВсеЗаявленияОВвозе.ЗаявлениеОВвозе = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	КнигаПокупокВЧастиЗаявленийОВвозе.ЗаявлениеОВвозе ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВсеЗаявленияОВвозе.ЗаявлениеОВвозе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто3 КАК ЗаявлениеОВвозе,
	|	ХозрасчетныйОбороты.Регистратор КАК ДокументОплаты
	|ПОМЕСТИТЬ ВТ_ДатыОплат
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&КонецПериода,
	|			Регистратор,
	|			Счет = &СчетУчетаКосвенногоНалога,
	|			&СубконтоЗаявлениеОВвозе,
	|			Организация = &Организация
	|				И &УсловиеОснованиеСубконто3,
	|			КорСчет В (&СчетаУчетаДенежныхСредств),
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявленияОВвозе.ЗаявлениеОВвозе КАК ЗаявлениеОВвозе,
	|	ДатыОплат.ДокументОплаты КАК ДокументОплаты,
	|	ЗаявленияОВвозе.ДатаЗаявления КАК ДатаЗаявления,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокументаОплаты,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокументаОплаты
	|ИЗ
	|	НеподтвержденныеЗаявленияОВвозе КАК ЗаявленияОВвозе
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДатыОплат КАК ДатыОплат
	|		ПО ЗаявленияОВвозе.ЗаявлениеОВвозе = ДатыОплат.ЗаявлениеОВвозе
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДатыОплат.ДокументОплаты = ДанныеПервичныхДокументов.Документ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаЗаявления";
	
	Если Основание = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОснованиеСчетФактура", "Истина");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОснованиеКнигаПокупок", "Истина");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОснованиеСубконто3", 	 "Истина");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОснованиеСчетФактура", "СчетФактура = &Основание");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОснованиеКнигаПокупок", "КнигаПокупок.СчетФактура = &Основание");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОснованиеСубконто3", 	 "Субконто3 = &Основание");
	КонецЕсли; 
	
	ТаблицаСДатамиОплат = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаСДатамиОплат, ТаблицаРезультата);
	Состав.Загрузить(ТаблицаРезультата);

КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		ДанныеОбъекта = Новый Структура("Дата, Организация");
		
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		ЗаполнитьСтрокиДокумента(Основание);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Дата) < 3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Состав.НомерДокументаОплаты");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецЕсли
