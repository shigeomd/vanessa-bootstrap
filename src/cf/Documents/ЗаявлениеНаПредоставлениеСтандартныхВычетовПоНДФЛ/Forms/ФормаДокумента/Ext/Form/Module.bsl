
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Ответственный", 
		"Объект.Месяц",
		"Объект.Организация",
		"Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПрочитатьСтандартныеВычетыПредыдущегоМесяца();
		
		ПриПолученииДанныхНаСервере();
		
	Иначе
		ВычетыНаДетейБылиИзменены = Истина;
	КонецЕсли;
	
	Если Параметры.ИзФормыСотрудника Тогда
		Элементы.Организация.ТолькоПросмотр		= Истина;
		Элементы.ФизическоеЛицо.ТолькоПросмотр	= Истина;
	КонецЕсли;
	
	Элементы.ВычетыНаДетей.Доступность		= Объект.ИзменитьВычетыНаДетей;
	Элементы.КодВычетаЛичный.Доступность	= Объект.ИзменитьЛичныйВычет;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	Для Каждого Сообщение Из Сообщения Цикл
		Если Найти(Сообщение.Поле, "ВычетыНаДетей") <> 0 И Найти(Сообщение.Поле, "ДействуетДо") <> 0 Тогда
			Сообщение.Поле			= Сообщение.Поле + "Строкой";
			
		ИначеЕсли Сообщение.Поле = "Месяц" Тогда
			Сообщение.ПутьКДанным	= Сообщение.Поле + "Строкой";
			Сообщение.Поле			= "";
			
		КонецЕсли;
		
		Отказ = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьОписаниеВычетовНаДетей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененыВычеты", Объект.Сотрудник, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИзменитьВычетыНаДетейПриИзменении(Элемент)
	
	Элементы.ВычетыНаДетей.Доступность		= Объект.ИзменитьВычетыНаДетей;
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейКодВычетаПриИзменении(Элемент)
	
	Элементы.ВычетыНаДетей.ТекущиеДанные.КодВычетаИнфо = УчетНДФЛВызовСервера.ПолучитьОписаниеВычета(Элементы.ВычетыНаДетей.ТекущиеДанные.КодВычета);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЛичныйВычетПриИзменении(Элемент)
	
	Элементы.КодВычетаЛичный.Доступность	= Объект.ИзменитьЛичныйВычет;
	
КонецПроцедуры

&НаКлиенте
Процедура КодВычетаЛичныйПриИзменении(Элемент)
	
	ОбновитьОписаниеЛичногоВычета();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ПрочитатьСтандартныеВычетыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОВозможностиПроведенияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "ОтменаЗаявления" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОтменитьЗаявлениеОПрекращенииВычетов();
		
		ПоказатьПредупреждение(, НСтр("ru='Заявление о прекращении предоставления вычетов отменено'"));
		
	КонецЕсли; 
	
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Модифицированность);
	
	ПрочитатьСтандартныеВычетыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт 
	
	ПрочитатьСтандартныеВычетыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Направление, Модифицированность);
	
	ПрочитатьСтандартныеВычетыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
	ПрочитатьСтандартныеВычетыПредыдущегоМесяца();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТабличногоПоляВычетыНаДетей

&НаКлиенте
Процедура ВычетыНаДетейПриИзменении(Элемент)
	
	ВычетыНаДетейБылиИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейДействуетДоСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.ВычетыНаДетей.ТекущиеДанные, "ДействуетДо", "ДействуетДоСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейДействуетДоСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.ВычетыНаДетей.ТекущиеДанные, "ДействуетДо", "ДействуетДоСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейДействуетДоСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.ВычетыНаДетей.ТекущиеДанные, "ДействуетДо", "ДействуетДоСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейДействуетДоСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейДействуетДоСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВычетыНаДетейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущиеДанные.ДействуетДо = НачалоМесяца(КонецГода(Объект.Дата));
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.ВычетыНаДетей, "ДействуетДо", "ДействуетДоСтрокой");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой");
	
	ОбновитьОписаниеВычетовНаДетей();
	ОбновитьОписаниеЛичногоВычета();
	УстановитьИнформационнуюНадписьОВозможностиПроведения();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеВычетовНаДетей()
	
	Для Каждого Строка Из Объект.ВычетыНаДетей Цикл
		Строка.КодВычетаИнфо = УчетНДФЛВызовСервера.ПолучитьОписаниеВычета(Строка.КодВычета);
	КонецЦикла;
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.ВычетыНаДетей, "ДействуетДо", "ДействуетДоСтрокой");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеЛичногоВычета()
	
	Элементы.КодВычетаЛичный.Подсказка = УчетНДФЛВызовСервера.ПолучитьОписаниеВычета(Объект.КодВычетаЛичный);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСтандартныеВычетыПредыдущегоМесяца()
	
	Если ВычетыНаДетейБылиИзменены Или Объект.Сотрудник.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Месяц",			Объект.Месяц);
	Запрос.УстановитьПараметр("ФизическоеЛицо",	Объект.Сотрудник);
	Запрос.УстановитьПараметр("Ссылка",			Объект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтандартныеВычетыФизическихЛицНДФЛСрезПоследних.КодВычетаЛичный
	|ИЗ
	|	РегистрСведений.СтандартныеВычетыФизическихЛицНДФЛ.СрезПоследних(
	|			&Месяц,
	|			Регистратор <> &Ссылка
	|				И ФизическоеЛицо = &ФизическоеЛицо) КАК СтандартныеВычетыФизическихЛицНДФЛСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.КодВычетаЛичный = Выборка.КодВычетаЛичный;
	КонецЕсли;
	ОбновитьОписаниеЛичногоВычета();
	Объект.ИзменитьЛичныйВычет = Не Объект.КодВычетаЛичный.Пустая();
	
	Запрос.УстановитьПараметр("ПредыдущийМесяц",	ДобавитьМесяц(Объект.Месяц, -1));
	Запрос.УстановитьПараметр("КонецГода",			НачалоМесяца(КонецГода(Объект.Месяц)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо,
	|	МАКСИМУМ(СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации) КАК МесяцРегистрации
	|ПОМЕСТИТЬ ВТСтандартныеВычетыНаДетейНДФЛСрезПоследних
	|ИЗ
	|	РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|ГДЕ
	|	СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации < &Месяц
	|	И СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо = &ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтандартныеВычетыНаДетейНДФЛ.КодВычета,
	|	ВЫБОР
	|		КОГДА СтандартныеВычетыНаДетейНДФЛ.ДействуетДо = &ПредыдущийМесяц
	|			ТОГДА &КонецГода
	|		ИНАЧЕ СтандартныеВычетыНаДетейНДФЛ.ДействуетДо
	|	КОНЕЦ КАК ДействуетДо,
	|	СтандартныеВычетыНаДетейНДФЛ.КоличествоДетей
	|ИЗ
	|	РегистрСведений.СтандартныеВычетыНаДетейНДФЛ КАК СтандартныеВычетыНаДетейНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтандартныеВычетыНаДетейНДФЛСрезПоследних КАК СтандартныеВычетыНаДетейНДФЛСрезПоследних
	|		ПО СтандартныеВычетыНаДетейНДФЛ.МесяцРегистрации = СтандартныеВычетыНаДетейНДФЛСрезПоследних.МесяцРегистрации
	|			И СтандартныеВычетыНаДетейНДФЛ.ФизическоеЛицо = СтандартныеВычетыНаДетейНДФЛСрезПоследних.ФизическоеЛицо
	|ГДЕ
	|	СтандартныеВычетыНаДетейНДФЛ.КоличествоДетей > 0
	|	И СтандартныеВычетыНаДетейНДФЛ.ДействуетДо >= &ПредыдущийМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтандартныеВычетыНаДетейНДФЛ.КодВычета.Код,
	|	ДействуетДо";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Объект.ВычетыНаДетей.Очистить();
	Пока Выборка.Следующий() Цикл
		Для Номер = 1 По Выборка.КоличествоДетей Цикл
			ЗаполнитьЗначенияСвойств(Объект.ВычетыНаДетей.Добавить(), Выборка);
		КонецЦикла;
	КонецЦикла;
	Объект.ИзменитьВычетыНаДетей = Не Объект.ИзменитьЛичныйВычет Или Объект.ВычетыНаДетей.Количество() <> 0;
	
	Элементы.ВычетыНаДетей.Доступность		= Объект.ИзменитьВычетыНаДетей;
	Элементы.КодВычетаЛичный.Доступность	= Объект.ИзменитьЛичныйВычет;
	
	ОбновитьОписаниеВычетовНаДетей();
	УстановитьИнформационнуюНадписьОВозможностиПроведения();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнформационнуюНадписьОВозможностиПроведения()
	
	ИнформацияОВозможностиПроведения = "";
	
	МассивВычетов = Новый Массив;
	Для Каждого СтрокаВычет Из Объект.ВычетыНаДетей Цикл
		МассивВычетов.Добавить(СтрокаВычет.КодВычета);
	КонецЦикла;
	
	Запрос = Документы.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ.КонфликтующиеРегистраторы(
		Объект.Ссылка, Объект.Месяц, Объект.Сотрудник, МассивВычетов);
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
			НСтр("ru='Документ не может быть проведен. На'") + " ",
			НРег(Формат(Объект.Месяц, "ДФ='ММММ гггг'")) + " ",
			НСтр("ru='уже введено заявление'")
		);
			
		Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ") Тогда
			
			ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
				ИнформацияОВозможностиПроведения,
				" " + НСтр("ru='на вычеты'"),
				" (",
				Новый ФорматированнаяСтрока(Выборка.ПредставлениеРегистратора, , , , ПолучитьНавигационнуюСсылку(Выборка.Регистратор)),
				")"
			);
			
		Иначе
			
			ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
				ИнформацияОВозможностиПроведения,
				" " + НСтр("ru='о прекращении вычетов'")
			);
			
			ОрганизацияРегистратора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Регистратор, "Организация");
			Если Объект.Организация = ОрганизацияРегистратора Тогда

				ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
					ИнформацияОВозможностиПроведения,
					" (",
					Новый ФорматированнаяСтрока(Выборка.ПредставлениеРегистратора, , , , ПолучитьНавигационнуюСсылку(Выборка.Регистратор)),
					")"
				);
				
			Иначе
				
				ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
					ИнформацияОВозможностиПроведения,
					" " + НСтр("ru='в другой организации. Если необходимо перенести применение вычетов в'") + " ",
					Строка(Объект.Организация) + ", ",
					Новый ФорматированнаяСтрока("отмените заявление", , , , "ОтменаЗаявления"),
					" " + НСтр("ru='о прекращении вычетов и проведите это заявление'") + "."
				);
				
			КонецЕсли;
			
		КонецЕсли; 
		
		
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИнформацияОВозможностиПроведения",
		"Заголовок",
		ИнформацияОВозможностиПроведения
	);
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗаявлениеОПрекращенииВычетов()
	
	МассивВычетов = Новый Массив;
	Для Каждого СтрокаВычет Из Объект.ВычетыНаДетей Цикл
		МассивВычетов.Добавить(СтрокаВычет.КодВычета);
	КонецЦикла;
	
	Запрос = Документы.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ.КонфликтующиеРегистраторы(
		Объект.Ссылка, Объект.Месяц, Объект.Сотрудник, МассивВычетов);
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Заявление = Выборка.Регистратор.ПолучитьОбъект();
		Заявление.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЕсли;
	
	УстановитьИнформационнуюНадписьОВозможностиПроведения();
	
КонецПроцедуры

#КонецОбласти
