
&НаСервере
Процедура ЗагрузитьДанные()
	
	ПредставлениеУведомления.Области["КОД_НО"].Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Код");
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, Объект.ДатаПодписи, СтрокаСведений);
		ПредставлениеУведомления.Области["П_ИНН"].Значение = СведенияОбОрганизации.ИННЮЛ;
		ПредставлениеУведомления.Области["ОРГАНИЗАЦИЯ"].Значение = СведенияОбОрганизации.НаимЮЛПол;
		ПредставлениеУведомления.Области["П_КПП"].Значение = СведенияОбОрганизации.КППЮЛ;
		ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение = СведенияОбОрганизации.ТелОрганизации;
	Иначе
		СтрокаСведений = "ИННФЛ,ФИО,ТелДом";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, Объект.ДатаПодписи, СтрокаСведений);
		ПредставлениеУведомления.Области["П_ИНН"].Значение = СведенияОбОрганизации.ИННФЛ;
		ПредставлениеУведомления.Области["ОРГАНИЗАЦИЯ"].Значение = СведенияОбОрганизации.ФИО;
		ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение = СведенияОбОрганизации.ТелДом;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		УстановитьДанныеПоРегистрацииВИФНС();
		Объект.ДатаПодписи = ТекущаяДатаСеанса();
		ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение = Объект.ДатаПодписи;
		Возврат;
	КонецЕсли;
	
	Фамилия = Объект.ПодписантФамилия;
	Имя = Объект.ПодписантИмя;
	Отчество = Объект.ПодписантОтчество;
	ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = Фамилия + " " + Имя + " " + Отчество;
	
	ПризнакПодписанта = Объект.ПодписантПризнак;
	ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = ПризнакПодписанта;
	
	Если ЗначениеЗаполнено(Объект.ДатаПодписи) Тогда 
		ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение = Объект.ДатаПодписи;
	КонецЕсли;
	
	ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = Объект.ПодписантДокумент;
	ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение = Объект.ПодписантТелефон;
	
	УстановитьДанныеПоРегистрацииВИФНС();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	Если ЗначениеЗаполнено(СтруктураПараметров) Тогда 
		Для Каждого КлючИЗначение Из СтруктураПараметров Цикл
			Если ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
				ПредставлениеУведомления.Области[КлючИЗначение.Ключ].Значение = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииОбъектаНалогообложенияПоУСН;
		Объект.Организация = Организация;
		Объект.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Объект.РегистрацияВИФНС = РегистрацияВИФНС;
	Объект.ПодписантФамилия = Фамилия;
	Объект.ПодписантИмя = Имя;
	Объект.ПодписантОтчество = Отчество;
	Объект.ПодписантПризнак = ПризнакПодписанта;
	Объект.ПодписантДокумент = ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение;
	Объект.ПодписантТелефон = ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ГОД_ИЗМЕНЕНИЯ", ПредставлениеУведомления.Области["ГОД_ИЗМЕНЕНИЯ"].Значение);
	СтруктураПараметров.Вставить("КОД_ОБЪЕКТА_НАЛОГООБЛОЖЕНИЯ", ПредставлениеУведомления.Области["КОД_ОБЪЕКТА_НАЛОГООБЛОЖЕНИЯ"].Значение);
	СтруктураПараметров.Вставить("ПРИЛОЖЕНО_ЛИСТОВ", ПредставлениеУведомления.Области["ПРИЛОЖЕНО_ЛИСТОВ"].Значение);
	СтруктураПараметров.Вставить("П_КПП", ПредставлениеУведомления.Области["П_КПП"].Значение);
	СтруктураПараметров.Вставить("КОД_НО", ПредставлениеУведомления.Области["КОД_НО"].Значение);
	СтруктураПараметров.Вставить("П_ИНН", ПредставлениеУведомления.Области["П_ИНН"].Значение);
	СтруктураПараметров.Вставить("ОРГАНИЗАЦИЯ", ПредставлениеУведомления.Области["ОРГАНИЗАЦИЯ"].Значение);
	СтруктураПараметров.Вставить("ТЕЛЕФОН", ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение);
	
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	Модифицированность = Ложь;
	ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок, " (создание)", "");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Организация = Объект.Организация;
		РегистрацияВИФНС = Объект.РегистрацияВИФНС;
	Иначе
		Организация = Параметры.Организация;
		Объект.Организация = Параметры.Организация;
		Если Параметры.Свойство("НалоговыйОрган") И ЗначениеЗаполнено(Параметры.НалоговыйОрган) Тогда 
			РегистрацияВИФНС = Параметры.НалоговыйОрган;
		Иначе
			РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " (создание)";
	КонецЕсли;
	
	Макет = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("УведомлениеОбИзмененииОбъектаУСН");
	
	ПредставлениеУведомления = Новый ТабличныйДокумент;
	ПредставлениеУведомления.Вывести(Макет);
	
	ЗагрузитьДанные();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыПростойФормы(ЭтаФорма, "УведомлениеОбИзмененииОбъектаУСНПараметры");
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	ОсобаяОбласть = СписокОбластейСОсобойОбработкой.НайтиПоЗначению(Область.Имя);
	Если ОсобаяОбласть = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ОсобаяОбласть.Значение = "ДАТА_ПОДПИСИ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_ДАТА_ПОДПИСИ();
		
	ИначеЕсли ОсобаяОбласть.Значение = "КОД_НО" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_КОД_НО();
		
	ИначеЕсли ОсобаяОбласть.Значение = "КОД_ОБЪЕКТА_НАЛОГООБЛОЖЕНИЯ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_КОД_ОБЪЕКТА_НАЛОГООБЛОЖЕНИЯ();
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если Модифицированность Тогда
		СохранитьДанные();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ПриЗакрытииНаСервере();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Уведомление изменено. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоФизЛицу(Физлицо)
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		Фамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Имя = СокрЛП(ДанныеПредставителя.Имя);
		Отчество = СокрЛП(ДанныеПредставителя.Отчество);
		ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
	Иначе
		Фамилия = "";
		Имя = "";
		Отчество = "";
		ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоОрганизации()
	ДатаДанных = ?(ЗначениеЗаполнено(Объект.ДатаПодписи), Объект.ДатаПодписи, ТекущаяДатаСеанса());
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда 
		СтрокаСведений = "ФамилияРук,ИмяРук,ОтчествоРук";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаДанных, СтрокаСведений);
		Фамилия = СокрЛП(СведенияОбОрганизации.ФамилияРук);
		Имя = СокрЛП(СведенияОбОрганизации.ИмяРук);
		Отчество = СокрЛП(СведенияОбОрганизации.ОтчествоРук);
	Иначе
		СтрокаСведений = "ФамилияИП,ИмяИП,ОтчествоИП";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаДанных, СтрокаСведений);
		Фамилия = СокрЛП(СведенияОбОрганизации.ФамилияИП);
		Имя = СокрЛП(СведенияОбОрганизации.ИмяИП);
		Отчество = СокрЛП(СведенияОбОрганизации.ОтчествоИП);
	КонецЕсли;
	ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	
	Представитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Представитель");
	Если ЗначениеЗаполнено(Представитель) Тогда
		ПризнакПодписанта = "2";
		УстановитьПредставителяПоФизЛицу(Представитель);
		ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "2";
		ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "ДокументПредставителя");
	Иначе
		УстановитьПредставителяПоОрганизации();
		ПризнакПодписанта = "1";
		ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "1";
		ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КодНалоговогоОргана()
	УстановитьДанныеПоРегистрацииВИФНС();
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Код");
КонецФункции

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_НО()
	
	ПараметрыРегистрации = Новый Структура("Владелец", Организация);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыРегистрации);
	
	Форма = ПолучитьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработка_КОД_НОЗавершение", ЭтотОбъект);
	Форма.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_НОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда 
		РегистрацияВИФНС = Результат;
		ПредставлениеУведомления.Области["КОД_НО"].Значение = КодНалоговогоОргана();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_ДАТА_ПОДПИСИ()
	НестандартнаяОбработкаДаты("Дата подписи уведомления");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаДаты(ИмяФормы)
	
	ПараметрыДаты = Новый Структура("ДатаПодписи", Объект.ДатаПодписи);
	ФормаДаты = ПолучитьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораДаты", ПараметрыДаты, ЭтаФорма, ЭтаФорма);
	ФормаДаты.Заголовок = ИмяФормы;
	ДополнительныеПараметры = Новый Структура("ФормаДаты", ФормаДаты);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработкаДатыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаДаты.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаДаты.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаДаты.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаДатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаДаты = ДополнительныеПараметры.ФормаДаты;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ДатаПодписи = ФормаДаты.Дата;
		ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение = ФормаДаты.Дата;
		Модифицированность = Истина;
	КонецЕсли;
	
	УстановитьДанныеПоРегистрацииВИФНС();

КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_ОБЪЕКТА_НАЛОГООБЛОЖЕНИЯ()
	НестандартнаяОбработкаОбработкаСпискаВыбора("КОД_ОБЪЕКТА_НАЛОГООБЛОЖЕНИЯ");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаОбработкаСпискаВыбора(ИмяНестандартнойОбласти)
	
	СтруктураОтбора = Новый Структура("ИмяОсобогоПоля", ИмяНестандартнойОбласти);
	Строки = ТаблицаЗначенийПредопределенныхРеквизитов.НайтиСтроки(СтруктураОтбора);
	ЗагружаемыеКоды.Очистить();
	Для Каждого Строка Из Строки Цикл 
		НоваяСтрока = ЗагружаемыеКоды.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          "Выбор кода объекта налогообложения");
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ЗагружаемыеКоды);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", ПредставлениеУведомления.Области[ИмяНестандартнойОбласти].Значение));
	
	ДополнительныеПараметры = Новый Структура("ИмяНестандартнойОбласти", ИмяНестандартнойОбласти);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработкаОбработкаСпискаВыбораЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаОбработкаСпискаВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИмяНестандартнойОбласти = ДополнительныеПараметры.ИмяНестандартнойОбласти;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеУведомления.Области[ИмяНестандартнойОбласти].Значение = РезультатВыбора.Код;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительныйПросмотрЗавершение", ЭтотОбъект);
		ТекстВопроса = "Уведомление изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	ИначеЕсли Модифицированность Тогда
		СохранитьДанные();
	КонецЕсли;

	МассивПечати = Новый Массив;
	МассивПечати.Добавить(Объект.Ссылка);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОСпецрежимахНалогообложения",
		"Уведомление", МассивПечати, Неопределено);
КонецПроцедуры
	
&НаКлиенте
Процедура ПредварительныйПросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
		
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(Объект.Ссылка);
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.УведомлениеОСпецрежимахНалогообложения",
			"Уведомление", МассивПечати, Неопределено);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ПечатьСразу()
КонецФункции

&НаКлиенте
Процедура ПечатьУведомления(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьУведомленияЗавершение", ЭтотОбъект);
		ТекстВопроса = "Уведомление изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	ИначеЕсли Модифицированность Тогда
		СохранитьДанные();
	КонецЕсли;
	
	ПФ = СформироватьПечатнуюФорму();
	Если ПФ <> Неопределено Тогда 
		ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУведомленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

#КонецОбласти