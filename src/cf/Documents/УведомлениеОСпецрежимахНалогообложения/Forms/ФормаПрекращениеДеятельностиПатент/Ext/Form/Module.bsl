
&НаСервере
Процедура ЗагрузитьДанные()
	ПредставлениеУведомления.Области["КОД_НО"].Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Код");
	
	СтрокаСведений = "ИННФЛ,ФИО,ТелДом,ФамилияИП,ИмяИП,ОтчествоИП";
	ДП = ?(ЗначениеЗаполнено(Объект.ДатаПодписи), Объект.ДатаПодписи, ТекущаяДата());
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДП, СтрокаСведений);
	ПредставлениеУведомления.Области["П_ИНН"].Значение = СведенияОбОрганизации.ИННФЛ;
	ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение = СведенияОбОрганизации.ТелДом;
	
	ПредставлениеУведомления.Области["ФАМИЛИЯ_ИП"].Значение = СведенияОбОрганизации.ФамилияИП;
	ПредставлениеУведомления.Области["ИМЯ_ИП"].Значение = СведенияОбОрганизации.ИмяИП;
	ПредставлениеУведомления.Области["ОТЧЕСТВО_ИП"].Значение = СведенияОбОрганизации.ОтчествоИП;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьДанныеПоРегистрацииВИФНС();
		Объект.ДатаПодписи = ТекущаяДатаСеанса();
		ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение = Объект.ДатаПодписи;
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	Если ЗначениеЗаполнено(СтруктураПараметров) Тогда 
		Для Каждого КлючИЗначение Из СтруктураПараметров Цикл
			Если ЗначениеЗаполнено(КлючИЗначение.Значение)
				И ПредставлениеУведомления.Области.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
				ПредставлениеУведомления.Области[КлючИЗначение.Ключ].Значение = КлючИЗначение.Значение;
			КонецЕсли;
			
			Если КлючИЗначение.Ключ = "ДАТА_ВЫДАЧИ" Тогда
				ДатаВыдачи = КлючИЗначение.Значение;
			ИначеЕсли КлючИЗначение.Ключ = "ДАТА_ПРЕКРАЩЕНИЯ" Тогда 
				ДатаПрекращения = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаПодписи) Тогда 
		ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение = Объект.ДатаПодписи;
	КонецЕсли;
	УстановитьДанныеПоРегистрацииВИФНС();
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПрекращенииДеятельностиПоПатентнойСистеме;
		Объект.Организация = Организация;
		Объект.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Объект.РегистрацияВИФНС = РегистрацияВИФНС;
	Объект.ПодписантФамилия = Фамилия;
	Объект.ПодписантИмя = Имя;
	Объект.ПодписантОтчество = Отчество;
	Объект.ПодписантПризнак = ПризнакПодписанта;
	Объект.ПодписантДокумент = ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение;
	Объект.ПодписантТелефон = ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НОМЕР_ПАТЕНТА", ПредставлениеУведомления.Области["НОМЕР_ПАТЕНТА"].Значение);
	СтруктураПараметров.Вставить("ДАТА_ВЫДАЧИ", ДатаВыдачи);
	СтруктураПараметров.Вставить("ДАТА_ПРЕКРАЩЕНИЯ", ДатаПрекращения);
	СтруктураПараметров.Вставить("ПРИЛОЖЕНО_ЛИСТОВ", ПредставлениеУведомления.Области["ПРИЛОЖЕНО_ЛИСТОВ"].Значение);
	СтруктураПараметров.Вставить("КОД_НО", ПредставлениеУведомления.Области["КОД_НО"].Значение);
	СтруктураПараметров.Вставить("П_ИНН", ПредставлениеУведомления.Области["П_ИНН"].Значение);
	СтруктураПараметров.Вставить("ТЕЛЕФОН", ПредставлениеУведомления.Области["ТЕЛЕФОН"].Значение);
	СтруктураПараметров.Вставить("ФАМИЛИЯ_ИП", ПредставлениеУведомления.Области["ФАМИЛИЯ_ИП"].Значение);
	СтруктураПараметров.Вставить("ИМЯ_ИП", ПредставлениеУведомления.Области["ИМЯ_ИП"].Значение);
	СтруктураПараметров.Вставить("ОТЧЕСТВО_ИП", ПредставлениеУведомления.Области["ОТЧЕСТВО_ИП"].Значение);
	
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	Модифицированность = Ложь;
	ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок, " (создание)", "");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Организация = Объект.Организация;
		РегистрацияВИФНС = Объект.РегистрацияВИФНС;
	Иначе
		Организация = Параметры.Организация;
		Если Параметры.Свойство("НалоговыйОрган") И ЗначениеЗаполнено(Параметры.НалоговыйОрган) Тогда 
			РегистрацияВИФНС = Параметры.НалоговыйОрган;
		Иначе
			РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " (создание)";
	КонецЕсли;
	
	Если Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда 
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Сообщение по форме 26.5-4 можно создавать только для индивидуальных предпринимателей";
		СообщениеПользователю.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " (создание)";
	КонецЕсли;
	
	Макет = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("ЗаявлениеОПрекращенииДеятельностиПатент");
	ПредставлениеУведомления.Вывести(Макет);
	
	ЗагрузитьДанные();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыПростойФормы(ЭтаФорма, "ЗаявлениеОПрекращенииДеятельностиПатентПараметры");
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	ОсобаяОбласть = СписокОбластейСОсобойОбработкой.НайтиПоЗначению(Область.Имя);
	Если ОсобаяОбласть = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ОсобаяОбласть.Значение = "ДАТА_ПРЕКРАЩЕНИЯ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_ДАТА_ПРЕКРАЩЕНИЯ();
		
	ИначеЕсли ОсобаяОбласть.Значение = "КОД_НО" Тогда 

		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_КОД_НО();
		
	ИначеЕсли ОсобаяОбласть.Значение = "ДАТА_ВЫДАЧИ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_ДАТА_ВЫДАЧИ();
		
	ИначеЕсли ОсобаяОбласть.Значение = "ДАТА_ПОДПИСИ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_ДАТА_ПОДПИСИ();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если Модифицированность Тогда
		СохранитьДанные();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ПриЗакрытииНаСервере();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Заявление изменено. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоФизЛицу(Физлицо)
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		Фамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Имя = СокрЛП(ДанныеПредставителя.Имя);
		Отчество = СокрЛП(ДанныеПредставителя.Отчество);
		ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
	Иначе
		Фамилия = "";
		Имя = "";
		Отчество = "";
		ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоОрганизации()
	ДатаДанных = ?(ЗначениеЗаполнено(Объект.ДатаПодписи), Объект.ДатаПодписи, ТекущаяДатаСеанса());
	СтрокаСведений = "ФамилияИП,ИмяИП,ОтчествоИП";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаДанных, СтрокаСведений);
	Фамилия = СокрЛП(СведенияОбОрганизации.ФамилияИП);
	Имя = СокрЛП(СведенияОбОрганизации.ИмяИП);
	Отчество = СокрЛП(СведенияОбОрганизации.ОтчествоИП);
	ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	
	Представитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Представитель");
	Если ЗначениеЗаполнено(Представитель) Тогда
		ПризнакПодписанта = "2";
		УстановитьПредставителяПоФизЛицу(Представитель);
		ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "2";
		ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "ДокументПредставителя");
	Иначе
		УстановитьПредставителяПоОрганизации();
		ПризнакПодписанта = "1";
		ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "1";
		ПредставлениеУведомления.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КодНалоговогоОргана()
	УстановитьДанныеПоРегистрацииВИФНС();
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Код");
КонецФункции

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_НО()
	
	ПараметрыРегистрации = Новый Структура("Владелец", Организация);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыРегистрации);
	
	Форма = ПолучитьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработка_КОД_НОЗавершение", ЭтотОбъект);
	Форма.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_НОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда 
		РегистрацияВИФНС = Результат;
		ПредставлениеУведомления.Области["КОД_НО"].Значение = КодНалоговогоОргана();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_ДАТА_ПРЕКРАЩЕНИЯ()
	НестандартнаяОбработкаДаты("Дата прекращения деятельности по патенту", ДатаПрекращения, "ДАТА_ПРЕКРАЩЕНИЯ");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_ДАТА_ВЫДАЧИ()
	НестандартнаяОбработкаДаты("Дата выдачи патента", ДатаВыдачи, "ДАТА_ВЫДАЧИ");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_ДАТА_ПОДПИСИ()
	НестандартнаяОбработкаДаты("Дата подписи заявления", Объект.ДатаПодписи, "ДАТА_ПОДПИСИ");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаДаты(ИмяФормы, ДатаПодписи, ИмяОбласти)
	
	ПараметрыДаты = Новый Структура("ДатаПодписи", ДатаПодписи);
	ФормаДаты = ПолучитьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораДаты", ПараметрыДаты, ЭтаФорма, ЭтаФорма);
	ФормаДаты.Заголовок = ИмяФормы;
	Результат = Неопределено;
	ДополнительныеПараметры = Новый Структура("ИмяОбласти, ФормаДаты", ИмяОбласти, ФормаДаты);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработкаДатыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаДаты.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаДаты.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаДаты.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаДатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяОбласти = ДополнительныеПараметры.ИмяОбласти;
	ФормаДаты = ДополнительныеПараметры.ФормаДаты;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ИмяОбласти = "ДАТА_ПРЕКРАЩЕНИЯ" Тогда
			ДатаПрекращения = ФормаДаты.Дата;
		ИначеЕсли ИмяОбласти = "ДАТА_ВЫДАЧИ" Тогда
			ДатаВыдачи = ФормаДаты.Дата;
		ИначеЕсли ИмяОбласти = "ДАТА_ПОДПИСИ" Тогда
			Объект.ДатаПодписи = ФормаДаты.Дата;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ФормаДаты.Дата) Тогда 
			ПредставлениеУведомления.Области[ИмяОбласти].Значение = ФормаДаты.Дата;
		Иначе
			ПредставлениеУведомления.Области[ИмяОбласти].Значение = "";
		КонецЕсли;
		
		Модифицированность = Истина;
	КонецЕсли;
	Если ИмяОбласти = "ДАТА_ПОДПИСИ" Тогда
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ПечатьСразу();
КонецФункции

&НаКлиенте
Процедура ПечатьУведомления(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ТекстВопроса = "Заявление изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьУведомленияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
	Иначе
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУведомленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = "Заявление изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительныйПросмотрЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	ИначеЕсли Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	
	МассивПечати = Новый Массив;
	МассивПечати.Добавить(Объект.Ссылка);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОСпецрежимахНалогообложения",
		"Уведомление", МассивПечати, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(Объект.Ссылка);
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.УведомлениеОСпецрежимахНалогообложения",
			"Уведомление", МассивПечати, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

#Область ОтправкаВФНС
////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС
&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
	
КонецПроцедуры
#КонецОбласти

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

#КонецОбласти