
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ (Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка)) Тогда 
		Объект.Организация = Параметры.Организация;
		Если Параметры.Свойство("НалоговыйОрган") И ЗначениеЗаполнено(Параметры.НалоговыйОрган) Тогда 
			Объект.РегистрацияВИФНС = Параметры.НалоговыйОрган;
		Иначе
			Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		КонецЕсли;
	КонецЕсли;;
	
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Сообщение по форме С-09-4 можно создавать только для организаций";
		СообщениеПользователю.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " (создание)";
	КонецЕсли;
	
	Макет = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("ФормаС_09_4");
	
	ПредставлениеСообщения = Новый ТабличныйДокумент;
	ПредставлениеСообщения.Вывести(Макет);
	
	ЗагрузитьДанные();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыПростойФормы(ЭтаФорма, "ФормаС_09_4Параметры");
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСообщенияВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ОсобаяОбласть = СписокОбластейСОсобойОбработкой.НайтиПоЗначению(Область.Имя);
	Если ОсобаяОбласть = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ОсобаяОбласть.Значение = "ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ();
		
	ИначеЕсли ОсобаяОбласть.Значение = "КОД_НО" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_КОД_НО();
		
	ИначеЕсли ОсобаяОбласть.Значение = "ДАТА_ПОДПИСИ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_ДАТА_ПОДПИСИ();
		
	ИначеЕсли ОсобаяОбласть.Значение = "КОД_ПРИНЯТОЕ_РЕШЕНИЕ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_КОД_ПРИНЯТОЕ_РЕШЕНИЕ();
		
	ИначеЕсли ОсобаяОбласть.Значение = "КОД_ФОРМА_РЕОРГАНИЗАЦИИ" Тогда 
		
		СтандартнаяОбработка = Ложь;
		НестандартнаяОбработка_КОД_ФОРМА_РЕОРГАНИЗАЦИИ();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСообщенияПриИзмененииСодержимогоОбласти(Элемент, Область)
	Модифицированность = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сохранить(Команда)
	
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СохранитьДанные() Экспорт
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_4;
		Объект.Дата = ТекущаяДатаСеанса() 
	КонецЕсли;
	
	Объект.ПодписантФамилия	 = Фамилия;
	Объект.ПодписантИмя		 = Имя;
	Объект.ПодписантОтчество = Отчество;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ", 	ПредставлениеСообщения.Области["ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ"].Значение);
	СтруктураПараметров.Вставить("ПРИЛОЖЕНО_ЛИСТОВ", 		ПредставлениеСообщения.Области["ПРИЛОЖЕНО_ЛИСТОВ"].Значение);
	СтруктураПараметров.Вставить("ДАТА_ПОДПИСИ", 			ПредставлениеСообщения.Области["ДАТА_ПОДПИСИ"].Значение);
	СтруктураПараметров.Вставить("КОД_ПРИНЯТОЕ_РЕШЕНИЕ", 	ПредставлениеСообщения.Области["КОД_ПРИНЯТОЕ_РЕШЕНИЕ"].Значение);
	СтруктураПараметров.Вставить("КОД_ФОРМА_РЕОРГАНИЗАЦИИ", ПредставлениеСообщения.Области["КОД_ФОРМА_РЕОРГАНИЗАЦИИ"].Значение);
	СтруктураПараметров.Вставить("КОД_НО", 					ПредставлениеСообщения.Области["КОД_НО"].Значение);
	СтруктураПараметров.Вставить("ОГРН", 					ПредставлениеСообщения.Области["ОГРН"].Значение);
	СтруктураПараметров.Вставить("ПРИЗНАК_НП_ПОДВАЛ", 		ПредставлениеСообщения.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	СтруктураПараметров.Вставить("ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ",	ПредставлениеСообщения.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение);
	СтруктураПараметров.Вставить("ТЕЛЕФОН", 				ПредставлениеСообщения.Области["ТЕЛЕФОН"].Значение);
	СтруктураПараметров.Вставить("EMAIL_ПОДПИСАНТА", 		ПредставлениеСообщения.Области["EMAIL_ПОДПИСАНТА"].Значение);
	СтруктураПараметров.Вставить("ИНН_ПОДПИСАНТА", 			ПредставлениеСообщения.Области["ИНН_ПОДПИСАНТА"].Значение);
	
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	Модифицированность = Ложь;
	ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок, " (создание)", "");

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные()
	
	СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации,ОГРН, АдресЭлектроннойПочтыОрганизации";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
	
	СведенияОбОрганизации.Свойство("НаимЮЛПол",							ПредставлениеСообщения.Области["НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ"].Значение);
	СведенияОбОрганизации.Свойство("ИННЮЛ",								ПредставлениеСообщения.Области["ИНН"].Значение);
	СведенияОбОрганизации.Свойство("КППЮЛ",								ПредставлениеСообщения.Области["КПП"].Значение);
	СведенияОбОрганизации.Свойство("ОГРН",								ПредставлениеСообщения.Области["ОГРН"].Значение);
	СведенияОбОрганизации.Свойство("ТелОрганизации",					ПредставлениеСообщения.Области["ТЕЛЕФОН"].Значение);
	СведенияОбОрганизации.Свойство("АдресЭлектроннойПочтыОрганизации",	ПредставлениеСообщения.Области["EMAIL_ПОДПИСАНТА"].Значение);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДатаПодписиУведомления = ТекущаяДатаСеанса(); 
		ПредставлениеСообщения.Области["ДАТА_ПОДПИСИ"].Значение = ДатаПодписиУведомления;
		Объект.ДатаПодписи = ДатаПодписиУведомления;
	КонецЕсли;
	
	УстановитьДанныеПоРегистрацииВИФНС();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	Если ЗначениеЗаполнено(СтруктураПараметров) Тогда 
		Для Каждого КлючИЗначение Из СтруктураПараметров Цикл
			Если ЗначениеЗаполнено(КлючИЗначение.Значение)
				И ПредставлениеСообщения.Области.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
				ПредставлениеСообщения.Области[КлючИЗначение.Ключ].Значение = КлючИЗначение.Значение;
			КонецЕсли;
			
			Если КлючИЗначение.Ключ = "ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ" Тогда 
				ДатаПринятияРешения = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаПодписи) Тогда 
		ПредставлениеСообщения.Области["ДАТА_ПОДПИСИ"].Значение = Объект.ДатаПодписи;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура УстановитьПредставителяПоФизЛицу(Физлицо)
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		Фамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Имя = СокрЛП(ДанныеПредставителя.Имя);
		Отчество = СокрЛП(ДанныеПредставителя.Отчество);
		ПредставлениеСообщения.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
		ПредставлениеСообщения.Области["ИНН_ПОДПИСАНТА"].Значение = ДанныеПредставителя.ИНН;
	Иначе
		Фамилия = "";
		Имя = "";
		Отчество = "";
		ПредставлениеСообщения.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
		ПредставлениеСообщения.Области["ИНН_ПОДПИСАНТА"].Значение = "";
	КонецЕсли;
	
	Объект.ПодписантФамилия = Фамилия;
	Объект.ПодписантИмя = Имя;
	Объект.ПодписантОтчество = Отчество;
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставителяПоОрганизации()
	Организация = Объект.Организация;
	ДатаДанных = ?(ЗначениеЗаполнено(Объект.ДатаПодписи), Объект.ДатаПодписи, ТекущаяДата());
	СтрокаСведений = "ФамилияРук,ИмяРук,ОтчествоРук";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаДанных, СтрокаСведений);
	Фамилия = СокрЛП(СведенияОбОрганизации.ФамилияРук);
	Имя = СокрЛП(СведенияОбОрганизации.ИмяРук);
	Отчество = СокрЛП(СведенияОбОрганизации.ОтчествоРук);
	ПредставлениеСообщения.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
	ПредставлениеСообщения.Области["ИНН_ПОДПИСАНТА"].Значение = "";
	Объект.ПодписантФамилия = Фамилия;
	Объект.ПодписантИмя = Имя;
	Объект.ПодписантОтчество = Отчество;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	
	Организация = Объект.Организация;
	РегистрацияВИФНС = Объект.РегистрацияВИФНС;
	
	ПредставлениеСообщения.Область("КОД_НО").Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Код");
	ПредставлениеСообщения.Области["EMAIL_ПОДПИСАНТА"].Значение = "";
	Представитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВИФНС, "Представитель");
	Если ЗначениеЗаполнено(Представитель) Тогда
		ПризнакПодписанта = "4";
		ПредставлениеСообщения.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = ПризнакПодписанта;
		ПредставлениеСообщения.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = Объект.РегистрацияВИФНС.ДокументПредставителя;
		УстановитьПредставителяПоФизЛицу(Представитель);
	Иначе
		УстановитьПредставителяПоОрганизации();
		ПризнакПодписанта = "3";
		ПредставлениеСообщения.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = ПризнакПодписанта;
		ПредставлениеСообщения.Области["ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ"].Значение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ()
	НестандартнаяОбработкаДаты("Дата принятия решения", ДатаПринятияРешения, "ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_ПРИНЯТОЕ_РЕШЕНИЕ()
	НестандартнаяОбработкаОбработкаСпискаВыбора("КОД_ПРИНЯТОЕ_РЕШЕНИЕ", "Код принятия решения");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_ФОРМА_РЕОРГАНИЗАЦИИ()
	НестандартнаяОбработкаОбработкаСпискаВыбора("КОД_ФОРМА_РЕОРГАНИЗАЦИИ", "Код формы регистрации");
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаОбработкаСпискаВыбора(ИмяНестандартнойОбласти, НазваниеСписка, Результат = Неопределено, НужноЗаполнятьРезультат = Ложь)
	СтруктураОтбора = Новый Структура("ИмяОсобогоПоля", ИмяНестандартнойОбласти);
	Строки = ТаблицаЗначенийПредопределенныхРеквизитов.НайтиСтроки(СтруктураОтбора);
	ЗагружаемыеКоды.Очистить();
	Для Каждого Строка Из Строки Цикл 
		НоваяСтрока = ЗагружаемыеКоды.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          НазваниеСписка);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ЗагружаемыеКоды);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", ПредставлениеСообщения.Области[ИмяНестандартнойОбласти].Значение));
	
	ДополнительныеПараметры = Новый Структура("ИмяНестандартнойОбласти", ИмяНестандартнойОбласти);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработкаОбработкаСпискаВыбораЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаОбработкаСпискаВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИмяНестандартнойОбласти = ДополнительныеПараметры.ИмяНестандартнойОбласти;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеСообщения.Области[ИмяНестандартнойОбласти].Значение = РезультатВыбора.Код;
	
	Если ИмяНестандартнойОбласти = "КОД_ПРИНЯТОЕ_РЕШЕНИЕ" И РезультатВыбора.Код = "2" Тогда
		ПредставлениеСообщения.Области["КОД_ФОРМА_РЕОРГАНИЗАЦИИ"].Значение = "";
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция КодНалоговогоОргана()
	УстановитьДанныеПоРегистрацииВИФНС();
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код");
КонецФункции

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_НО()
	
	ПараметрыРегистрации = Новый Структура("Владелец", Объект.Организация);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыРегистрации);
	
	Форма = ПолучитьФорму("Справочник.РегистрацииВНалоговомОргане.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработка_КОД_НОЗавершение", ЭтотОбъект);
	Форма.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_КОД_НОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		ПредставлениеСообщения.Области["КОД_НО"].Значение = КодНалоговогоОргана();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработка_ДАТА_ПОДПИСИ()
	НестандартнаяОбработкаДаты("Дата подписи заявления", Объект.ДатаПодписи, "ДАТА_ПОДПИСИ", Истина);
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаДаты(ИмяФормы, ДатаПодписи, ИмяОбласти, МодифицированаДатаПодписи = Ложь)
	
	ПараметрыДаты = Новый Структура("ДатаПодписи", ДатаПодписи);
	ФормаДаты = ПолучитьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораДаты", ПараметрыДаты, ЭтаФорма, ЭтаФорма);
	ФормаДаты.Заголовок = ИмяФормы;
	ДополнительныеПараметры = Новый Структура("ИмяОбласти, МодифицированаДатаПодписи, ФормаДаты", ИмяОбласти, МодифицированаДатаПодписи, ФормаДаты);
	ОписаниеОповещения = Новый ОписаниеОповещения("НестандартнаяОбработкаДатыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаДаты.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаДаты.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаДаты.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартнаяОбработкаДатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяОбласти = ДополнительныеПараметры.ИмяОбласти;
	МодифицированаДатаПодписи = ДополнительныеПараметры.МодифицированаДатаПодписи;
	ФормаДаты = ДополнительныеПараметры.ФормаДаты;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДатаРезультат = ФормаДаты.Дата;
		
		Если ЗначениеЗаполнено(ДатаРезультат) Тогда 
			ПредставлениеСообщения.Области[ИмяОбласти].Значение = ДатаРезультат;
		Иначе
			ПредставлениеСообщения.Области[ИмяОбласти].Значение = "";
		КонецЕсли;
		
		Если МодифицированаДатаПодписи Тогда 
			Объект.ДатаПодписи = ДатаРезультат;
		Иначе
			ДатаПринятияРешения = ДатаРезультат;
		КонецЕсли;
		
		Если ИмяОбласти = "ДАТА_ПОДПИСИ" Тогда
			Объект.ДатаПодписи = ДатаРезультат;
			УстановитьДанныеПоРегистрацииВИФНС();
		КонецЕсли;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	СохранитьДанные();
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Возврат Документ.ПечатьСразу();
КонецФункции

&НаКлиенте
Процедура ПечатьУведомления(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ТекстВопроса = "Сообщение изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьУведомленияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
	Иначе
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУведомленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПФ = СформироватьПечатнуюФорму();
		Если ПФ <> Неопределено Тогда 
			ПФ.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = "Сообщение изменено. Перед печатью необходимо сохранить изменения. Сохранить изменения?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительныйПросмотрЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		Возврат;
	ИначеЕсли Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	
	МассивПечати = Новый Массив;
	МассивПечати.Добавить(Объект.Ссылка);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОСпецрежимахНалогообложения",
		"Уведомление", МассивПечати, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(Объект.Ссылка);
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.УведомлениеОСпецрежимахНалогообложения",
			"Уведомление", МассивПечати, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Сообщение изменено. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если Модифицированность Тогда
		СохранитьДанные();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

#КонецОбласти