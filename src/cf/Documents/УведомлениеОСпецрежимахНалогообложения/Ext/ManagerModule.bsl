#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьПолноеИмяФормыПоВиду(Вид) Экспорт
	Если Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатента Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаЗаявлениеНаПолучениеПатента";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОбУтратеПраваНаПатент Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаУтратыПраваПатент";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОПрекращенииДеятельностиПоПатентнойСистеме Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаПрекращениеДеятельностиПатент";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииОбъектаНалогообложенияПоУСН Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаИзмененияОбъектаНалогообложенияУСН";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбОтказеОтУСН Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаОтказаОтУСН";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбУтратеПраваНаУСН Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаУведомленияОбУтратеПраваНаУСН";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПереходеНаУСН Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаПросмотраУведомленияПереходНаУСН";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОПрекращенииДеятельностиПоУСН Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаПрекращениеДеятельностиУСН";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Форма_1_6_Учет Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.Форма1_6_Учет";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД1 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаЕНВД1";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД2 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаЕНВД2";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД3 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаЕНВД3";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаЕНВД4 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаЕНВД4";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_1 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаС_09_1";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_2 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаС_09_2";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_3_1 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаС_09_3_1";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_3_2 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаС_09_3_2";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_4 Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаС_09_4";
	ИначеЕсли Вид = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатентаРекомендованнаяФорма Тогда 
		Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаЗаявлениеНаПолучениеПатентаРекомендованнаяФорма";
	КонецЕсли;
	Возврат "";
КонецФункции

Функция ПечатьУведомления(МассивОбъектов, ОбъектыПечати, ПФР_ФСС = 0)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = МассивОбъектов[0].ПолучитьОбъект();
	ПФ = ДокОбъект.СформироватьМакет(ПФР_ФСС);
	ПФ.АвтоМасштаб = Истина;
	ПФ.ПолеСверху = 0;
	ПФ.ПолеСнизу = 0;
	ПФ.ПолеСлева = 0;
	ПФ.ПолеСправа = 0;
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ПФ, 1, ОбъектыПечати, ДокОбъект.Ссылка);
	
	Возврат ПФ;
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Уведомление") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Уведомление", МассивОбъектов[0].ВидУведомления, 
			ПечатьУведомления(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Уведомление_ПФР") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Уведомление_ПФР", Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_1, 
			ПечатьУведомления(МассивОбъектов, ОбъектыПечати, 1));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Уведомление_ФСС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Уведомление_ФСС", Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаС09_1, 
			ПечатьУведомления(МассивОбъектов, ОбъектыПечати, 2));
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	Если ВидФормы = "ФормаВыбора" Или ВидФормы = "ФормаСписка" Тогда 
		Возврат;
	КонецЕсли;
	
	ВидСообщения = Неопределено;
	Организация = Неопределено;

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидСообщения = Параметры.Ключ.ВидУведомления;
		Организация = Параметры.Ключ.Организация;
	Иначе
		Если Параметры.Свойство("ВидУведомления") И ЗначениеЗаполнено(Параметры.ВидУведомления) Тогда
			ВидСообщения = Параметры.ВидУведомления;
		КонецЕсли;
		Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда
			Организация = Параметры.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидСообщения) И ЗначениеЗаполнено(Организация) Тогда
		СтандартнаяОбработка = Ложь;
		ИмяФормы = ПолучитьПолноеИмяФормыПоВиду(ВидСообщения);
		ВыбраннаяФорма = Прав(ИмяФормы, СтрДлина(ИмяФормы) - СтрДлина("Документ.УведомлениеОСпецрежимахНалогообложения.Форма."));
		Параметры.Вставить("Организация", Организация);
	Иначе
		Если ЗначениеЗаполнено(Организация) Тогда 
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаВыбораВидаСообщения";
			Параметры.Вставить("Организация", Организация);
			Параметры.Вставить("Создание_УведомлениеОСпецрежимахНалогообложения", Истина);
		ИначеЕсли ЗначениеЗаполнено(ВидСообщения) Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаВыбораУведомления";
			Параметры.Вставить("Тип", ВидСообщения);
			Параметры.Вставить("Создание_УведомлениеОСпецрежимахНалогообложения", Истина);
		Иначе
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаВыбораВидаСообщения";
			Параметры.Вставить("Создание_УведомлениеОСпецрежимахНалогообложения", Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция АдресСтрокой(Данные, Постфикс) Экспорт 
	Результат = "";
	
	РоссийскийАдрес = Новый Соответствие;
	РоссийскийАдрес.Вставить("Индекс",	        Данные["ИНДЕКС"+Постфикс]);
	РоссийскийАдрес.Вставить("КодРегиона",      Данные["КОД_РЕГИОНА"+Постфикс]);
	РоссийскийАдрес.Вставить("Район",           Данные["РАЙОН"+Постфикс]);
	РоссийскийАдрес.Вставить("Город",           Данные["ГОРОД"+Постфикс]);
	РоссийскийАдрес.Вставить("НаселенныйПункт", Данные["НАСЕЛЕННЫЙ_ПУНКТ"+Постфикс]);
	РоссийскийАдрес.Вставить("Улица",           Данные["УЛИЦА"+Постфикс]);
	РоссийскийАдрес.Вставить("Дом",             Данные["ДОМ"+Постфикс]);
	РоссийскийАдрес.Вставить("Корпус",          Данные["КОРПУС"+Постфикс]);
	РоссийскийАдрес.Вставить("Квартира",        Данные["КВАРТИРА"+Постфикс]);
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Индекс"]) Тогда
		Результат = Результат + РоссийскийАдрес["Индекс"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Данные.РЕГИОН) Тогда
		Результат = Результат + Данные.РЕГИОН + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Район"]) Тогда
		Результат = Результат + РоссийскийАдрес["Район"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Город"]) Тогда
		Результат = Результат + РоссийскийАдрес["Город"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["НаселенныйПункт"]) Тогда
		Результат = Результат + РоссийскийАдрес["НаселенныйПункт"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Улица"]) Тогда
		Результат = Результат + РоссийскийАдрес["Улица"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Дом"]) Тогда
		Результат = Результат + "д. " + РоссийскийАдрес["Дом"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Корпус"]) Тогда
		Результат = Результат + "корп. " + РоссийскийАдрес["Корпус"] + ", ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РоссийскийАдрес["Квартира"]) Тогда 
		Результат = Результат + "кв. " + РоссийскийАдрес["Квартира"] + ", ";
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция РегистрацияВФНСОрганизации(Организация, ДатаПодписи = Неопределено) Экспорт
	
	Если Организация.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане") <> Неопределено Тогда 
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "РегистрацияВНалоговомОргане");
	КонецЕсли;
	
	СтрокаСведений = "КодНО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, СтрокаСведений);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КодНО", СведенияОбОрганизации.КодНО);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегистрацииВНалоговомОргане.Ссылка КАК РегистрацияВИФНС
		|ИЗ
		|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|ГДЕ
		|	РегистрацииВНалоговомОргане.Код = &КодНО
		|	И РегистрацииВНалоговомОргане.Владелец = &Организация";
		
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда 
		Возврат Результат[0].РегистрацияВИФНС;
	Иначе
		Возврат Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Процедура УстановитьДанныеРуководителя(Объект) Экспорт 
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		СтрокаСведений = "ФамилияРук,ИмяРук,ОтчествоРук";
		ДатаДанных = ?(ЗначениеЗаполнено(Объект.ДатаПодписи), Объект.ДатаПодписи, ТекущаяДатаСеанса());
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, ДатаДанных, СтрокаСведений);
		Объект.ПодписантФамилия = СведенияОбОрганизации.ФамилияРук;
		Объект.ПодписантИмя = СведенияОбОрганизации.ИмяРук;
		Объект.ПодписантОтчество = СведенияОбОрганизации.ОтчествоРук;
	Иначе
		СтрокаСведений = "ФамилияИП,ИмяИП,ОтчествоИП";
		ДатаДанных = ?(ЗначениеЗаполнено(Объект.ДатаПодписи), Объект.ДатаПодписи, ТекущаяДатаСеанса());
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, ДатаДанных, СтрокаСведений);
		Объект.ПодписантФамилия = СведенияОбОрганизации.ФамилияИП;
		Объект.ПодписантИмя = СведенияОбОрганизации.ИмяИП;
		Объект.ПодписантОтчество = СведенияОбОрганизации.ОтчествоИП;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьМакеты(Форма, ИмяМакета) Экспорт 
	
	Макет = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет(ИмяМакета);
	ОбластьОсобыхПолей = Макет.Область("ПоляСОсобымПорядкомОбработки");
	ТекущаяСтрока = ОбластьОсобыхПолей.Верх;
	Пока ТекущаяСтрока <= ОбластьОсобыхПолей.Низ Цикл
		Ячейка = Макет.Область(ТекущаяСтрока, 1, ТекущаяСтрока, 1);
		Если Не ЗначениеЗаполнено(Ячейка.Текст) Тогда 
			Прервать;
		КонецЕсли;
		НовыйЭлемент = Форма.ПоляСОсобымПорядкомЗаполнения.Добавить();
		НовыйЭлемент.Имя = Ячейка.Текст;
		НовыйЭлемент.Обработчик = Макет.Область(ТекущаяСтрока, 2, ТекущаяСтрока, 2).Текст;
		НовыйЭлемент.ИмяСписка = Макет.Область(ТекущаяСтрока, 3, ТекущаяСтрока, 3).Текст;
		НовыйЭлемент.ИмяФормы = Макет.Область(ТекущаяСтрока, 4, ТекущаяСтрока, 4).Текст;
		ТекущаяСтрока = ТекущаяСтрока + 1;
	КонецЦикла;

	ОбластьОсобыхПолей = Макет.Область("ПоляСОсобымПорядкомОбработкиЗначения");
	ТекущаяСтрока = ОбластьОсобыхПолей.Верх;
	Пока ТекущаяСтрока <= ОбластьОсобыхПолей.Низ Цикл
		ИмяОбласти = Макет.Область(ТекущаяСтрока, 1, ТекущаяСтрока, 1).Текст;
		Если Не ЗначениеЗаполнено(ИмяОбласти) Тогда 
			Прервать;
		КонецЕсли;
		
		Код = Макет.Область(ТекущаяСтрока, 2, ТекущаяСтрока, 2).Текст;
		Название = Макет.Область(ТекущаяСтрока, 3, ТекущаяСтрока, 3).Текст;
		Строка = Форма.ТаблицаЗначенийПредопределенныхРеквизитов.Добавить();
		Строка.ИмяСписка = ИмяОбласти;
		Строка.Код = Код;
		Строка.Название = Название;
		ТекущаяСтрока = ТекущаяСтрока + 1;
	КонецЦикла;

КонецПроцедуры

Процедура ЗагрузитьМакетыПростойФормы(Форма, ИмяМакета) Экспорт
	ПараметрыЗаявления = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет(ИмяМакета);
	ОбластьОсобыхПолей = ПараметрыЗаявления.Область("ПоляСОсобымПорядкомОбработки");
	
	ТекущаяСтрока = ОбластьОсобыхПолей.Верх;
	Пока ТекущаяСтрока <= ОбластьОсобыхПолей.Низ Цикл
		Ячейка = ПараметрыЗаявления.Область(ТекущаяСтрока, 1, ТекущаяСтрока, 1);
		Форма.СписокОбластейСОсобойОбработкой.Вставить(ТекущаяСтрока - ОбластьОсобыхПолей.Верх, Ячейка.Текст);
		ТекущаяСтрока = ТекущаяСтрока + 1;
	КонецЦикла;
	
	ОбластьОсобыхПолей = ПараметрыЗаявления.Область("ПоляСОсобымПорядкомОбработкиЗначения");
	ТекущаяСтрока = ОбластьОсобыхПолей.Верх;
	Пока ТекущаяСтрока <= ОбластьОсобыхПолей.Низ Цикл
		ИмяОбласти = ПараметрыЗаявления.Область(ТекущаяСтрока, 1, ТекущаяСтрока, 1).Текст;
		Код = ПараметрыЗаявления.Область(ТекущаяСтрока, 2, ТекущаяСтрока, 2).Текст;
		Название = ПараметрыЗаявления.Область(ТекущаяСтрока, 3, ТекущаяСтрока, 3).Текст;
		Строка = Форма.ТаблицаЗначенийПредопределенныхРеквизитов.Добавить();
		Строка.ИмяОсобогоПоля = ИмяОбласти;
		Строка.Код = Код;
		Строка.Название = Название;
		ТекущаяСтрока = ТекущаяСтрока + 1;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДеревоЛистовЕНВД(Форма) Экспорт 
	
	КорневойУровень = Форма.РазделыЗаявления.ПолучитьЭлементы();
	Если Форма.ТитульныйЛист.Количество() = 0 Тогда
		НовыйЛист = Форма.ТитульныйЛист.Добавить();
		Форма.ЗаполнитьТитульныйЛист(НовыйЛист);
	КонецЕсли;
	Титульный = КорневойУровень.Добавить();
	Титульный.Наименование = "Титульный лист";
	Титульный.ИндексКартинки = 1;
	Титульный.ТипСтраницы = 1;
	Титульный.UID = Форма.ТитульныйЛист[0].UID;
	
	Листы2 = КорневойУровень.Добавить();
	Листы2.Наименование = "Сведения о видах деятельности";
	СписокЛистов2 = Листы2.ПолучитьЭлементы();
	
	Если Форма.СтраницыЛиста2.Количество() = 0 Тогда
		НовыйЛист = Форма.СтраницыЛиста2.Добавить();
		Форма.ЗаполнитьЛист2(НовыйЛист);
	КонецЕсли;
	
	Номер = 1;
	Для Каждого Страница2 Из Форма.СтраницыЛиста2 Цикл 
		Лист2 = СписокЛистов2.Добавить();
		Лист2.ИндексКартинки = 1;
		Лист2.ТипСтраницы = 2;
		Лист2.Наименование = "Стр. " + Номер;
		Лист2.UID = Страница2.UID;
		Номер = Номер + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗагрузитьДанныеЕНВД(Форма) Экспорт 
	Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Форма.Объект.Ссылка.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.ТитульныйЛист;
	НоваяСтрока = Форма.ТитульныйЛист.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Титульный[0]);
	
	Стр2 = СтруктураПараметров.Лист2;
	Для Каждого Строка Из Стр2 Цикл
		НоваяСтрока = Форма.СтраницыЛиста2.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
		
КонецПроцедуры

Процедура УстановитьПредставителяПоФизЛицу(Объект, Физлицо, Титульный, ИмяПоляИННПодписанта) Экспорт 
	Если ЗначениеЗаполнено(Физлицо) Тогда 
		ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Физлицо, , Объект.ДатаПодписи);
		Фамилия = СокрЛП(ДанныеПредставителя.Фамилия);
		Имя = СокрЛП(ДанныеПредставителя.Имя);
		Отчество = СокрЛП(ДанныеПредставителя.Отчество);
		Титульный.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
		Титульный[ИмяПоляИННПодписанта] = ДанныеПредставителя.ИНН;
	Иначе
		Фамилия = "";
		Имя = "";
		Отчество = "";
		Титульный[ИмяПоляИННПодписанта] = ""; 
		Титульный.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ = "";
	КонецЕсли;
	
	Объект.ПодписантФамилия = Фамилия;
	Объект.ПодписантИмя = Имя;
	Объект.ПодписантОтчество = Отчество;
КонецПроцедуры

Процедура СохранитьДанныеЕНВД(Форма, ВидУведомления) Экспорт 
	
	Объект = Форма.Объект;
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Форма.Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидУведомления = ВидУведомления;
		Объект.Дата = ТекущаяДатаСеанса() 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ТитульныйЛист[0].ДАТА_ПОДПИСИ) Тогда
		Объект.ДатаПодписи = Форма.ТитульныйЛист[0].ДАТА_ПОДПИСИ;
	Иначе
		Объект.ДатаПодписи = Неопределено;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ТитульныйЛист, Лист2",
			Форма.ТитульныйЛист.Выгрузить(),
			Форма.СтраницыЛиста2.Выгрузить());
	
	Документ = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения"));
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	Форма.Модифицированность = Ложь;
	Форма.Заголовок = СтрЗаменить(Форма.Заголовок, " (создание)", "");

КонецПроцедуры

Процедура СформироватьМакетНаСервере(Форма, ИмяМакета, ИмяОбласти, ИмяТаблицы) Экспорт 
	Если Не ЗначениеЗаполнено(ИмяОбласти) Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("UID", Форма.ТекущийИдентификаторСтраницы);
	Данные = Форма[ИмяТаблицы].НайтиСтроки(ПараметрыОтбора);
	
	Макет = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет(ИмяМакета);
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	
	Если Данные.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Область.Параметры, Данные[0]);
	КонецЕсли;
	
	Форма.ПредставлениеУведомления = Новый ТабличныйДокумент;
	Форма.ПредставлениеУведомления.Вывести(Область);
	Форма.ПредставлениеУведомления.ВыделенныеОбласти.Очистить();
	Форма.ПредставлениеУведомления.ТекущаяОбласть = Форма.ПредставлениеУведомления.Область(0,0,0,0);
КонецПроцедуры

// Обработчик обновления БРО.
//
// Вызывается при первом заполнении либо в случае необходимости обновления справочника регламентированных отчетов.
//
Процедура ПереименоватьОтправкиНаПолучениеПатентаВЖурнале() Экспорт
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Выполняется обработка ПереименоватьОтправкиНаПолучениеПатентаВЖурнале'"), 
		УровеньЖурналаРегистрации.Информация);
	
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
						|	ЖурналОтправокВКонтролирующиеОрганы.Ссылка,
						|	ЖурналОтправокВКонтролирующиеОрганы.Организация,
						|	ЖурналОтправокВКонтролирующиеОрганы.СтраницаЖурнала,
						|	УведомлениеОСпецрежимахНалогообложения.ВидУведомления
						|ИЗ
						|	Документ.УведомлениеОСпецрежимахНалогообложения КАК УведомлениеОСпецрежимахНалогообложения
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналОтправокВКонтролирующиеОрганы КАК ЖурналОтправокВКонтролирующиеОрганы
						|		ПО УведомлениеОСпецрежимахНалогообложения.Ссылка = ЖурналОтправокВКонтролирующиеОрганы.Ссылка
						|ГДЕ
						|	ЖурналОтправокВКонтролирующиеОрганы.СтраницаЖурнала = &СтраницаЖурнала
						|	И УведомлениеОСпецрежимахНалогообложения.ВидУведомления В(&ВидУведомления)";
		
		Запрос.УстановитьПараметр("СтраницаЖурнала", Перечисления.СтраницыЖурналаОтчетность.Уведомления);
		ВидУведомления = Новый Массив;
		ВидУведомления.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатента);
		ВидУведомления.Добавить(Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПолучениеПатентаРекомендованнаяФорма);
		Запрос.УстановитьПараметр("ВидУведомления", ВидУведомления);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда 
				Продолжить;
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.ЖурналОтправокВКонтролирующиеОрганы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Ссылка.Установить(Выборка.Ссылка);
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Отбор.СтраницаЖурнала.Установить(Выборка.СтраницаЖурнала);
			НаборЗаписей.Прочитать();
			Для Каждого ЭлементНабораЗаписей Из НаборЗаписей Цикл 
				ЭлементНабораЗаписей.Наименование = Строка(Выборка.ВидУведомления);
			КонецЦикла;
			
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать(Истина);
		КонецЦикла;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при исполнении ПереименоватьОтправкиНаПолучениеПатентаВЖурнале '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	
КонецПроцедуры

#КонецЕсли
