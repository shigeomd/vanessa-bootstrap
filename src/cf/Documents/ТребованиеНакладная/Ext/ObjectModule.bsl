#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();
	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Документ без данных о движении материалов не считаем заполненным корректно.
	// Следует заполнить данные в любой из табличных частей.
	ОбщегоНазначенияБП.ИсключитьИзПроверкиОсновныеТабличныеЧасти(
		ЭтотОбъект, 
		"Материалы,МатериалыЗаказчика",
		ПроверяемыеРеквизиты);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если МатериалыЗаказчика.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;
	
	// Проверка табличных частей:
	
	МассивНепроверяемыхРеквизитов.Добавить("Материалы.СтранаПроисхождения");

	Для Каждого СтрокаТаблицы Из Материалы Цикл
		Префикс = "Материалы[%1].";
		Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Префикс, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));

		ИмяСписка = НСтр("ru = 'Материалы'");

		// Проверка страны происхождения
		Если УчетТоваров.НеУказанаСтранаПроисхождения(СтрокаТаблицы.НомерГТД, СтрокаТаблицы.СтранаПроисхождения) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Страна происхождения'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка);
			Поле = Префикс + "СтранаПроисхождения";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

	КонецЦикла;
	
	РаздельныйУчетНДСДо2014Года = УчетнаяПолитика.РаздельныйУчетНДСДо2014Года(Организация, Дата);
	
	Если НЕ РаздельныйУчетНДСДо2014Года Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НДСвСтоимостиТоваров");
	КонецЕсли; 

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ТребованиеНакладная.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// Таблица списанных материалов
	ТаблицаСписанныеМатериалы = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.ТаблицаМатериалы, ПараметрыПроведения.МатериалыРеквизиты, Отказ);

	// Таблица списанных материалов заказчика
	ТаблицаСписанныеМатериалыЗаказчика = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.ТаблицаМатериалыЗаказчика, ПараметрыПроведения.МатериалыЗаказчикаРеквизиты, Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаТМЦ", ТаблицаСписанныеМатериалы);
	
	// Учет доходов и расходов ИП
	ТаблицыМатериаловПродукцииИП = Документы.ТребованиеНакладная.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписанныеМатериалы, ПараметрыПроведения.ИПРеквизиты);
	
	ТаблицыСписанияМПЗИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП.ТаблицаМатериалов, ПараметрыПроведения.ИПРеквизиты, Отказ);
	
	ТаблицаПоступлениеПродукцииИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП.ПолученоПродукции, ПараметрыПроведения.ИПРеквизиты);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Списание материалов
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныеМатериалы, ПараметрыПроведения.МатериалыРеквизиты, Движения, Отказ);
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныеМатериалыЗаказчика, ПараметрыПроведения.МатериалыЗаказчикаРеквизиты, Движения, Отказ);
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
		
	// Учет НДС
	УчетНДСБП.СформироватьДвиженияСписаниеТоваровНаРасходы(
		ПараметрыПроведения.НДСМатериалы, ТаблицаСписанныеМатериалы, ПараметрыПроведения.НДСРеквизиты, Движения, Отказ);
		
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП, ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП, ТаблицыСписанияМПЗИП.СтоимостьПродукции, 
		ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка 
		ИЛИ ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проверка заполнения

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		мДокументОснование 		 = Основание;
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		Если Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
			Контрагент = Основание.Контрагент;
			ИмяТаблицы	= "МатериалыЗаказчика";
		Иначе
			ИмяТаблицы	= "Материалы";
		КонецЕсли;
		
		ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары Цикл
			
			СтрокаТабличнойЧасти                  = ЭтотОбъект[ИмяТаблицы].Добавить();
			СтрокаТабличнойЧасти.Номенклатура     = ТекСтрокаТовары.Номенклатура;
			СтрокаТабличнойЧасти.Количество       = ТекСтрокаТовары.Количество;
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.КоличествоМест   = ТекСтрокаТовары.КоличествоМест;
			СтрокаТабличнойЧасти.Коэффициент      = ТекСтрокаТовары.Коэффициент;
			
			Если ИмяТаблицы	= "Материалы" Тогда
				СтрокаТабличнойЧасти.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ СчетаПроизводствоИзДавальческогоСырья
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СчетаПроизводствоИзДавальческогоСырья.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПроизводствоИзМатериаловЗаказчика,
		|	ОтчетПроизводстваЗаСменуПродукция.Спецификация КАК Спецификация,
		|	ОтчетПроизводстваЗаСменуПродукция.Количество КАК КоличествоПродукции,
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ОтчетПроизводстваЗаСменуПродукция.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.СчетЗатрат КАК СчетЗатрат
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаПроизводствоИзДавальческогоСырья КАК СчетаПроизводствоИзДавальческогоСырья
		|		ПО ОтчетПроизводстваЗаСменуПродукция.Счет = СчетаПроизводствоИзДавальческогоСырья.Счет
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка = &Основание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	ОтчетПроизводстваЗаСменуУслуги.Спецификация,
		|	ОтчетПроизводстваЗаСменуУслуги.Количество,
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка.ПодразделениеЗатрат,
		|	ОтчетПроизводстваЗаСменуУслуги.НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка.СчетЗатрат
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ОтчетПроизводстваЗаСменуУслуги
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка = &Основание
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СчетаПроизводствоИзДавальческогоСырья";
		
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛОЖЬ КАК ПроизводствоИзМатериаловЗаказчика,
		|	АктОбОказанииПроизводственныхУслугУслуги.Спецификация КАК Спецификация,
		|	АктОбОказанииПроизводственныхУслугУслуги.Количество КАК КоличествоПродукции,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.СчетЗатрат КАК СчетЗатрат
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
		|ГДЕ
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Основание
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация";
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
		// Заполнение шапки
		Комментарий        = Основание.Комментарий;
		Контрагент         = Основание.Контрагент;
		Организация        = Основание.Организация;
		мДокументОснование = Основание;
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		Для Каждого ТекСтрокаМатериалыЗаказчика ИЗ Основание.МатериалыЗаказчика Цикл
			НоваяСтрока              = МатериалыЗаказчика.Добавить();
			НоваяСтрока.Количество   = ТекСтрокаМатериалыЗаказчика.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
			НоваяСтрока.СчетПередачи = ТекСтрокаМатериалыЗаказчика.СчетУчета;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		Склад                    = Основание.СкладПолучатель;
		ПодразделениеОрганизации = Основание.ПодразделениеПолучатель;
		
		Для Каждого СтрокаОснования Из Основание.Товары Цикл
			
			НоваяСтрока = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОснования, "Номенклатура, КоличествоМест, ЕдиницаИзмерения, Коэффициент, Количество");
			НоваяСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			
		КонецЦикла;
		
		// Не поддерживается перемещение материалов, принятых в переработку
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;

	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	// Данные о расходе сырья
	УправлениеПроизводством.ТекстЗапросаВременнаяТаблицаЗатратыСырья() 
	+ 
	// Преобразуем в формат получателя
	"ВЫБРАТЬ
	|	ЗатратыСырья.ПроизводствоИзМатериаловЗаказчика КАК ПроизводствоИзМатериаловЗаказчика,
	|	ЗатратыСырья.СчетЗатрат КАК СчетЗатрат,
	|	ЗатратыСырья.СчетЗатрат.Представление КАК СчетЗатратПредставление,
	|	ЗатратыСырья.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ЗатратыСырья.ПодразделениеЗатрат.Представление КАК ПодразделениеЗатратПредставление,
	|	ЗатратыСырья.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗатратыСырья.НоменклатурнаяГруппа.Представление КАК НоменклатурнаяГруппаПредставление,
	|	ЗатратыСырья.Номенклатура КАК Номенклатура,
	|	ЗатратыСырья.Номенклатура.Представление КАК НоменклатураПредставление,
	|	СУММА(ЗатратыСырья.Количество) КАК Количество,
	|	ЗатратыСырья.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	1 КАК Коэффициент,
	|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН,
	|	ЗатратыСырья.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	ЗатратыСырья КАК ЗатратыСырья
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗатратыСырья.ПроизводствоИзМатериаловЗаказчика,
	|	ЗатратыСырья.Номенклатура,
	|	ЗатратыСырья.Номенклатура.Представление,
	|	ЗатратыСырья.НоменклатурнаяГруппа,
	|	ЗатратыСырья.НоменклатурнаяГруппа.Представление,
	|	ЗатратыСырья.СчетЗатрат,
	|	ЗатратыСырья.СчетЗатрат.Представление,
	|	ЗатратыСырья.ПодразделениеЗатрат,
	|	ЗатратыСырья.ПодразделениеЗатрат.Представление,
	|	ЗатратыСырья.ЕдиницаИзмерения,
	|	ЗатратыСырья.СтатьяЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетЗатратПредставление,
	|	ПодразделениеЗатратПредставление,
	|	НоменклатурнаяГруппаПредставление,
	|	НоменклатураПредставление";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПроизводствоИзМатериаловЗаказчика Тогда
			НоваяСтрока = МатериалыЗаказчика.Добавить();
		Иначе
			НоваяСтрока = Материалы.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
