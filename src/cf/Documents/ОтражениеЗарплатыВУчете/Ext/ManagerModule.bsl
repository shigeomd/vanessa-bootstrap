#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт 
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СчетРасчетыПоОплате",ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
			
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.ОтражениеЗарплатыВУчете КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, Ссылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	МассивСчетовУчетаЗарплаты = Новый Массив;
	МассивСчетовУчетаЗарплаты.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	МассивСчетовУчетаЗарплаты.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам);
	МассивСчетовУчетаЗарплаты.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	
	Запрос.УстановитьПараметр("СводныйУчетРасчетов", БухгалтерскийУчетПереопределяемый.ВедетсяУчетРасчетовПоЗарплатеСводно());
	Запрос.УстановитьПараметр("МассивСчетовУчетаЗарплаты", МассивСчетовУчетаЗарплаты);	
	
	НомераТаблиц = Новый Структура();
	   	
	Запрос.Текст = ТекстЗапросаРеквизиты(НомераТаблиц)
		+ ТекстЗапросаОтражениеВУчете(НомераТаблиц)
		+ ТекстЗапросаОтражениеВУчетеУСН(НомераТаблиц)
		+ ТекстЗапросаОтражениеВУчетеИП(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизиты(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПериодРегистрации
	|ИЗ
	|	Документ.ОтражениеЗарплатыВУчете КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОтражениеВУчете(НомераТаблиц)
	НомераТаблиц.Вставить("ТаблицаОтраженияВУчете",   НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОтражениеВУчете.Ссылка,
	|	ОтражениеВУчете.СчетДт,
	|	ОтражениеВУчете.СубконтоДт1,
	|	ОтражениеВУчете.СубконтоДт2,
	|	ОтражениеВУчете.СубконтоДт3,
	|	ОтражениеВУчете.СчетКт,
	|	ОтражениеВУчете.СубконтоКт1,
	|	ОтражениеВУчете.СубконтоКт2,
	|	ОтражениеВУчете.СубконтоКт3,
	|	ОтражениеВУчете.Сумма,
	|	ОтражениеВУчете.ПодразделениеДт,
	|	ОтражениеВУчете.ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетДт = &СчетРасчетыПоОплате
	|			ТОГДА ОтражениеВУчете.Сумма
	|		ИНАЧЕ ОтражениеВУчете.СуммаНУ
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетДт = &СчетРасчетыПоОплате
	|			ТОГДА 0
	|		ИНАЧЕ ОтражениеВУчете.СуммаПР
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетДт = &СчетРасчетыПоОплате
	|			ТОГДА 0
	|		ИНАЧЕ ОтражениеВУчете.СуммаВР
	|	КОНЕЦ КАК СуммаВРДт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетКт = &СчетРасчетыПоОплате
	|			ТОГДА ОтражениеВУчете.Сумма
	|		ИНАЧЕ ОтражениеВУчете.СуммаНУ
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетКт = &СчетРасчетыПоОплате
	|			ТОГДА 0
	|		ИНАЧЕ ОтражениеВУчете.СуммаПР
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетКт = &СчетРасчетыПоОплате
	|			ТОГДА 0
	|		ИНАЧЕ ОтражениеВУчете.СуммаВР
	|	КОНЕЦ КАК СуммаВРКт,
	|	ОтражениеВУчете.СчетДт.УчетПоПодразделениям КАК УчетПоПодразделениямДт,
	|	ОтражениеВУчете.СчетКт.УчетПоПодразделениям КАК УчетПоПодразделениямКт,
	|	ВЫБОР
	|		КОГДА ОтражениеВУчете.СчетКт = &СчетРасчетыПоОплате
	|			ТОГДА ""Оплата труда""
	|		ИНАЧЕ ОтражениеВУчете.СчетКт.Наименование
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	Документ.ОтражениеЗарплатыВУчете.ОтражениеВУчете КАК ОтражениеВУчете
	|ГДЕ
	|	ОтражениеВУчете.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаОтражениеВУчетеУСН(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОтраженияВУчетеУСН",   НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОтражениеВУчете.СчетДт КАК Счет,
	|	ОтражениеВУчете.СубконтоДт1 КАК Субконто1,
	|	ОтражениеВУчете.СубконтоДт2 КАК Субконто2,
	|	ОтражениеВУчете.СубконтоДт3 КАК Субконто3,
	|	ОтражениеВУчете.СчетКт КАК КорСчет,
	|	ОтражениеВУчете.СубконтоКт1 КАК КорСубконто1,
	|	ОтражениеВУчете.СубконтоКт2 КАК КорСубконто2,
	|	ОтражениеВУчете.СубконтоКт3 КАК КорСубконто3,
	|	ОтражениеВУчете.Сумма,
	|	ОтражениеВУчете.ОтражениеВУСН
	|ИЗ
	|	Документ.ОтражениеЗарплатыВУчете.ОтражениеВУчете КАК ОтражениеВУчете
	|ГДЕ
	|	ОтражениеВУчете.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();	
	
КонецФункции

Функция ТекстЗапросаОтражениеВУчетеИП(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОтраженияВУчетеИП", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОтражениеВУчете.СчетДт КАК Счет,
	|	ОтражениеВУчете.СубконтоДт1 КАК Субконто1,
	|	ОтражениеВУчете.СубконтоДт2 КАК Субконто2,
	|	ОтражениеВУчете.СубконтоДт3 КАК Субконто3,
	|	ОтражениеВУчете.СчетКт КАК КорСчет,
	|	ОтражениеВУчете.СубконтоКт1 КАК КорСубконто1,
	|	ОтражениеВУчете.СубконтоКт2 КАК КорСубконто2,
	|	ОтражениеВУчете.СубконтоКт3 КАК КорСубконто3,
	|	ОтражениеВУчете.ВидНачисленияУдержания,
	|	ОтражениеВУчете.Сумма
	|ИЗ
	|	Документ.ОтражениеЗарплатыВУчете.ОтражениеВУчете КАК ОтражениеВУчете
	|ГДЕ
	|	ОтражениеВУчете.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры


// ОБРАБОТЧИКИ ОБНОВЛЕНИЯ ИБ

Процедура ЗаполнитьСуммыНалоговогоУчета() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтражениеЗарплатыВУчете.Ссылка
	|ИЗ
	|	Документ.ОтражениеЗарплатыВУчете КАК ОтражениеЗарплатыВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВУчете.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)";
	
	ВыборкаИзРезультатовЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаИзРезультатовЗапроса.Следующий() Цикл
		
		ДокументОбъект = ВыборкаИзРезультатовЗапроса.Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаДокумента ИЗ ДокументОбъект.ОтражениеВУчете Цикл
			
			Если СтрокаДокумента.Сумма = 0 Тогда
				Если СтрокаДокумента.СуммаНУ = 0 Тогда
					Если СтрокаДокумента.СуммаНУ + СтрокаДокумента.СуммаПР + СтрокаДокумента.СуммаВР <> 0 Тогда
						СтрокаДокумента.СуммаНУ = СтрокаДокумента.СуммаНУ - СтрокаДокумента.СуммаПР - СтрокаДокумента.СуммаВР;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если СтрокаДокумента.Сумма - СтрокаДокумента.СуммаНУ - СтрокаДокумента.СуммаПР - СтрокаДокумента.СуммаВР = СтрокаДокумента.Сумма Тогда
					СтрокаДокумента.СуммаНУ = СтрокаДокумента.Сумма;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ДокументОбъект.Модифицированность() Тогда
			Попытка
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				
			Исключение
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось заполнить сумму для налогового учета в документе ""Зарплата (ЗУП 2.5, ЗиК 7.7)""'"),
				УровеньЖурналаРегистрации.Ошибка, ,ВыборкаИзРезультатовЗапроса.Ссылка , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецЕсли