////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
		ОтборОрганизацияИспользование = ?(Параметры.Отбор.Свойство("ОрганизацияИспользование"),
			Параметры.Отбор.ОрганизацияИспользование, Истина);
		НовоеПолеОтбора = ПоляОтбора.Добавить();
		НовоеПолеОтбора.ИмяПоля			= "Организация";
		НовоеПолеОтбора.Значение		= ОтборОрганизация;
		НовоеПолеОтбора.Использование	= ОтборОрганизацияИспользование;
		Параметры.Отбор.Удалить("Организация");
	КонецЕсли;

	Если Параметры.Отбор.Свойство("Контрагент") Тогда
		ОтборКонтрагент = Параметры.Отбор.Контрагент;
		ОтборКонтрагентИспользование = ?(Параметры.Отбор.Свойство("КонтрагентИспользование"),
			Параметры.Отбор.КонтрагентИспользование, Истина);
		НовоеПолеОтбора = ПоляОтбора.Добавить();
		НовоеПолеОтбора.ИмяПоля			= "Контрагент";
		НовоеПолеОтбора.Значение 		= ОтборКонтрагент;
		НовоеПолеОтбора.Использование	= ОтборКонтрагентИспользование;
		Параметры.Отбор.Удалить("Контрагент");
	КонецЕсли;
		
	УстановитьОтборСпискаПоПолю(Список.КомпоновщикНастроек.ПользовательскиеНастройки);
	
	ЭтоИсправление = Ложь;
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Если Параметры.ЗначенияЗаполнения.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда 
			Элементы.ГруппаКоманднаяПанельСОтбором.Заголовок = НСтр("ru='Выберите счет-фактуру, который нужно откорректировать'");
			УстановитьДополнительныйОтборДляКорректировки();
		ИначеЕсли Параметры.ЗначенияЗаполнения.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.ПустаяСсылка() Тогда
			ЭтаФорма.Элементы.ГруппаКоманднаяПанельСОтбором.Заголовок = НСтр("ru='Выберите счет-фактуру, который нужно исправить'");
			УстановитьПорядокИсправления();
			ЭтоИсправление = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)

	УстановитьОтборСпискаПоПолю(Настройки);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	
	СтрокаТаблицы = Элементы.Список.ТекущиеДанные;
	
	Если СтрокаТаблицы <> Неопределено Тогда 
		ОткрытьДокумент(СтрокаТаблицы.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьДокумент(ВыбраннаяСтрока);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьОтборСпискаПоПолю(Настройки)
	
	Для Каждого ПолеОтбора Из ПоляОтбора Цикл
		
		ОтборыПоПолю = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор, ПолеОтбора.ИмяПоля);
		
		Если ОтборыПоПолю.Количество() > 0 Тогда
			ИдентификаторНастройкиПоПолю = Настройки.ПолучитьИдентификаторПоОбъекту(ОтборыПоПолю[0]);
		Иначе
			Возврат;
		КонецЕсли;
		
		ЭлементНастроек = Настройки.ПолучитьОбъектПоИдентификатору(ИдентификаторНастройкиПоПолю);
		
		Если ЭлементНастроек <> Неопределено Тогда
			ЭлементНастроек.ПравоеЗначение = ПолеОтбора.Значение;
			ЭлементНастроек.Использование  = ПолеОтбора.Использование;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДополнительныйОтборДляКорректировки()
	
	ОтборПоВидуСчетаФактуры = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоВидуСчетаФактуры.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидСчетаФактуры");
	ОтборПоВидуСчетаФактуры.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ОтборПоВидуСчетаФактуры.Использование = Истина;
	ОтборПоВидуСчетаФактуры.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ОтборПоВидуСчетаФактуры.ПравоеЗначение = ПолучитьСчетаФактурыИсключения();
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСчетаФактурыИсключения()
	
	СчетаФактурыИсключения = Новый СписокЗначений;
	
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАванс);
	СчетаФактурыИсключения.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента);
		
	Возврат СчетаФактурыИсключения;
	
КонецФункции

&НаСервере
Процедура УстановитьПорядокИсправления()
	
	ПорядокИсправления = Новый ФиксированноеСоответствие(
		Документы.СчетФактураПолученный.ПолучитьСоответствиеВидовСчетаФактурыПорядкуИсправления());
		
КонецПроцедуры

&НаСервере
Функция  ПолучитьСтруктуруРеквизитовДляОбработки(ДокументСсылка)
	
	СтруктураРекизитов = Новый Структура;
	
	РеквизитыСчетаФактуры =  ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ВидСчетаФактуры, ДокументОснование, ДоговорКонтрагента");
	
	ВидСчетаФактуры = РеквизитыСчетаФактуры.ВидСчетаФактуры;
	ДокументОснование = РеквизитыСчетаФактуры.ДокументОснование;
    ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыСчетаФактуры.ДоговорКонтрагента, "ВидДоговора");
	ПоследнееИсправление = УчетНДСПереопределяемый.ПолучитьПоследнееИсправлениеСчетаФактурыПолученного(ДокументСсылка);
	
	Основание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоследнееИсправление, "ДокументОснование");
	
	ОснованиеСчетФактура = Ложь;
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет")
		ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		
		ОснованиеСчетФактура = Истина;
		
	КонецЕсли;

	СтруктураРекизитов.Вставить("ВидСчетаФактуры", ВидСчетаФактуры);
	СтруктураРекизитов.Вставить("ПоследнееИсправление", ПоследнееИсправление);
	СтруктураРекизитов.Вставить("Основание", Основание);
	СтруктураРекизитов.Вставить("ОснованиеСчетФактура", ОснованиеСчетФактура);
	
	Возврат СтруктураРекизитов;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьДокумент(СтрокаТаблицы)
	
	РеквизитыДляОбработки	= ПолучитьСтруктуруРеквизитовДляОбработки(СтрокаТаблицы);
	ОснованиеСчетФактура	= РеквизитыДляОбработки.ОснованиеСчетФактура;
	Основание 				= ?(ОснованиеСчетФактура, РеквизитыДляОбработки.ПоследнееИсправление, РеквизитыДляОбработки.Основание);
	
	Закрыть();
	
	Если ЭтоИсправление Тогда
		
		Если НЕ ПорядокИсправления[РеквизитыДляОбработки.ВидСчетаФактуры] Тогда
			
			ПараметрыФормы = Новый Структура("Основание", РеквизитыДляОбработки.ПоследнееИсправление);
			ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ОткрытиеФормыСчетФактураПолученный");
			ОткрытьФорму("Документ.СчетФактураПолученный.ФормаОбъекта", ПараметрыФормы, ВладелецФормы);
			
		Иначе
			
			ПараметрыЗаполнения = Новый Структура("ДокументОснование, Видоперации",Основание, 
				ПредопределенноеЗначение("Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки"));
			ПараметрыФормы      = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
			
			ОткрытьФорму("Документ.КорректировкаПоступления.ФормаОбъекта", ПараметрыФормы, ВладелецФормы); 
			
		КонецЕсли;
		
	Иначе
		
		ПараметрыЗаполнения = Новый Структура("ДокументОснование, Видоперации", Основание,
			ПредопределенноеЗначение("Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение"));
		ПараметрыФормы      = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
		
		ОткрытьФорму("Документ.КорректировкаПоступления.ФормаОбъекта", ПараметрыФормы, ВладелецФормы); 
		
	КонецЕсли;

КонецПроцедуры