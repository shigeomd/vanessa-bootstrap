#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПолучитьСоответствиеВидовСчетаФактурыФормам() Экспорт

	ФормыСчетовФактур = Новый Соответствие;
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление,		"ФормаДокументаНаПоступление");
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаАванс,				"ФормаДокументаНаАванс");
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента,	"ФормаДокументаНаАванс");
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный,	"ФормаПодбора");
	
	//Исправление счета-фактуры
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.ПустаяСсылка(),	"ФормаПодбора");
	
	Возврат ФормыСчетовФактур;

КонецФункции 

Функция ПолучитьКодВидаОперации(СтруктураПараметров) Экспорт
	
	Дата				= СтруктураПараметров.Дата;
	ВидСчетаФактуры		= СтруктураПараметров.ВидСчетаФактуры;
	Исправление			= СтруктураПараметров.Исправление;
	СчетФактураБезНДС	= СтруктураПараметров.СчетФактураБезНДС;
		
	Если ТипЗнч(СтруктураПараметров) = Тип("ДокументОбъект.СчетФактураПолученный") Тогда
		КодВидаОперацииОснования	= Неопределено;
		ДокументыОснования			= СтруктураПараметров.ДокументыОснования.Выгрузить(,"ДокументОснование");
	Иначе
		КодВидаОперацииОснования	= СтруктураПараметров.КодВидаОперацииОснования;
		ДокументыОснования			= СтруктураПараметров.ДокументыОснования;
	КонецЕсли;
	
	КодВидаОперации	= "";
	
	Если НЕ УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(Дата) Тогда
		Возврат КодВидаОперации;
	КонецЕсли;
	
	Если Исправление ИЛИ ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		Если КодВидаОперацииОснования <> Неопределено Тогда
			КодВидаОперации = КодВидаОперацииОснования;
			Возврат КодВидаОперации;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление Тогда
		
		МассивКомиссияПоЗакупке	= Новый Массив;
		
		КодВидаОперации	= "01";
		Для Каждого СтрокаТабличнойЧасти ИЗ ДокументыОснования Цикл
			
			Если ТипЗнч(СтрокаТабличнойЧасти.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
				КодВидаОперации	= "03";
			ИначеЕсли ТипЗнч(СтрокаТабличнойЧасти.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
				КодВидаОперации	= "04";
			ИначеЕсли ТипЗнч(СтрокаТабличнойЧасти.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
				МассивКомиссияПоЗакупке.Добавить(СтрокаТабличнойЧасти.ДокументОснование);
			ИначеЕсли ТипЗнч(СтрокаТабличнойЧасти.ДокументОснование) = Тип("ДокументСсылка.ОтражениеНДСКВычету")
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ДокументОснование, "Дата") >= '20150101' Тогда
				КодВидаОперацииПоОснованию = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ДокументОснование, "КодВидаОперации");
				КодВидаОперации = ?(ЗначениеЗаполнено(КодВидаОперацииПоОснованию), КодВидаОперацииПоОснованию, "01");	
			КонецЕсли;
			
		КонецЦикла;
		
		Если МассивКомиссияПоЗакупке.Количество() > 0 Тогда
			
			СчетаУчетаКомиссионногоТовара = Новый Массив;
			СчетаУчетаКомиссионногоТовара.Добавить(ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДокументыОснования", МассивКомиссияПоЗакупке);
			Запрос.УстановитьПараметр("СчетаУчетаКомиссионногоТовара", СчетаУчетаКомиссионногоТовара);
			
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
			|	1 КАК ЕстьКомиссионныеТоварыИУслуги,
			|	0 КАК ЕстьСобственныеТоварыИУслуги
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.Ссылка В(&ДокументыОснования)
			|	И ПоступлениеТоваровУслугТовары.СчетУчета В(&СчетаУчетаКомиссионногоТовара)
			|	И ПоступлениеТоваровУслугТовары.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПоступлениеТоваровУслугТовары.Ссылка,
			|	0,
			|	1
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.Ссылка В(&ДокументыОснования)
			|	И НЕ(ПоступлениеТоваровУслугТовары.СчетУчета В (&СчетаУчетаКомиссионногоТовара)
			|				И ПоступлениеТоваровУслугТовары.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПоступлениеТоваровУслугУслуги.Ссылка,
			|	0,
			|	1
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
			|ГДЕ
			|	ПоступлениеТоваровУслугУслуги.Ссылка В(&ДокументыОснования)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка,
			|	1,
			|	0
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
			|ГДЕ
			|	ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка В(&ДокументыОснования)
			|ИТОГИ
			|	СУММА(ЕстьКомиссионныеТоварыИУслуги),
			|	СУММА(ЕстьСобственныеТоварыИУслуги)
			|ПО
			|	Ссылка";
			
			Результат = Запрос.Выполнить();
			Если НЕ Результат.Пустой() Тогда
				
				КодВидаОперации = "";
				
				Выборка = Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					
					Если Выборка.ЕстьСобственныеТоварыИУслуги > 0 Тогда
						Если Найти(КодВидаОперации, "01") = 0 Тогда
							КодВидаОперации = КодВидаОперации + ?(КодВидаОперации = "","",";") + "01";
						КонецЕсли;
					КонецЕсли;
					
					Если Выборка.ЕстьКомиссионныеТоварыИУслуги > 0 Тогда
						Если Найти(КодВидаОперации, "04") = 0 Тогда
							КодВидаОперации = КодВидаОперации + ?(КодВидаОперации = "","",";") + "04";
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
				Если КодВидаОперации = "" Тогда
					КодВидаОперации = "01";
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
		КодВидаОперации	= "02";
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда
		КодВидаОперации	= "05";
	Иначе
		КодВидаОперации	= "01";
	КонецЕсли;
	
	Возврат КодВидаОперации;
	
КонецФункции

Функция ПолучитьПорядокОтраженияВычетаПоУмолчанию(СтруктураПараметров) Экспорт
	
	НДСПредъявленКВычету	= Ложь;
	
	Если УчетНДСКлиентСервер.Версия(СтруктураПараметров.Дата) > 1 Тогда
		
		Если СтруктураПараметров.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление Тогда
			
			СчетФактураКомитента	= (ТипЗнч(СтруктураПараметров.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах"));
			
			Если НЕ СтруктураПараметров.Исправление И НЕ СчетФактураКомитента Тогда
				Если НЕ УчетнаяПолитика.РаздельныйУчетНДС(СтруктураПараметров.Организация, СтруктураПараметров.Дата)
					И НЕ ЕстьСписаниеНДСПоОснованию(СтруктураПараметров) 
					И (СчетФактураПолученВКварталеПоступленияЦенностей(СтруктураПараметров)
					ИЛИ СтруктураПараметров.Дата < '20150101') Тогда
					НДСПредъявленКВычету = Истина;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли СтруктураПараметров.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
			
			НДСПредъявленКВычету = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НДСПредъявленКВычету;
	
КонецФункции

Функция ЕстьСписаниеНДСПоОснованию(СтруктураПараметров)
	
	Если СтруктураПараметров.ДокументОснование  = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	
	ДатаОснования = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтруктураПараметров.ДокументОснование, "Дата");
	Запрос.УстановитьПараметр("Организация",				СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("СчетФактура",				СтруктураПараметров.ДокументОснование);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода",	НачалоКвартала(ДатаОснования));
	Запрос.УстановитьПараметр("КонецНалоговогоПериода",		КонецКвартала(ДатаОснования));
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьСписание
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|ГДЕ
	|	НДСПредъявленный.Организация = &Организация
	|	И НДСПредъявленный.СчетФактура = &СчетФактура
	|	И НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НДСсписанНаРасходы)
	|	И НДСПредъявленный.Период >= &НачалоНалоговогоПериода
	|	И НДСПредъявленный.Период <= &КонецНалоговогоПериода";
				   
	Результат	= Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
 	
КонецФункции

Функция СчетФактураПолученВКварталеПоступленияЦенностей(СтруктураПараметров)
	
	Если СтруктураПараметров.ДокументОснование  = Неопределено Тогда 
		Возврат Истина;
	КонецЕсли;	
	
	ДатаОснования = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтруктураПараметров.ДокументОснование, "Дата");
	
	Возврат КонецКвартала(СтруктураПараметров.Дата) = КонецКвартала(ДатаОснования);
	 	
КонецФункции

// Получаем порядок исправления счетов-фактур, 
//устанавливаем значение Истина для счетов-фактур, требующих создания корректировки
Функция ПолучитьСоответствиеВидовСчетаФактурыПорядкуИсправления() Экспорт

	ПорядокИсправления = Новый Соответствие;
	
	ПорядокИсправления.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление,		Истина);
	ПорядокИсправления.Вставить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный, Истина);
	ПорядокИсправления.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаАванс,			  Ложь);
	ПорядокИсправления.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента,	  Ложь);
	
	Возврат ПорядокИсправления;

КонецФункции

Функция ПолучитьПредставлениеДокумента(ДокументСсылка, ВидСчетаФактуры) Экспорт
			
	ТекстПредставлениеКраткое	= "";
	ТекстПредставление 			= "";
	ТекстОсновноеПредставление	= "";
	
	Корректировочный = Ложь;
			
	Если ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление Тогда 
		ТекстОсновноеПредставление = НСтр("ru = 'Счет-фактура полученный на поступление'");	
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда 
		ТекстОсновноеПредставление = НСтр("ru = 'Счет-фактура полученный на аванс'");
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда
		ТекстОсновноеПредставление = НСтр("ru = 'Счет-фактура полученный на аванс комитента на закупку'");
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		Корректировочный = Истина;
		ТекстОсновноеПредставление = НСтр("ru = 'Корректировочный счет-фактура полученный'");
	КонецЕсли;	
			
	Если ЗначениеЗаполнено(ДокументСсылка) И ОбщегоНазначения.СсылкаСуществует(ДокументСсылка) Тогда
		
		РеквизитыСчетаФактуры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДокументСсылка, "ВидСчетаФактуры, Исправление, НомерИсправления, ДатаИсправления, 
			|НомерВходящегоДокумента, ДатаВходящегоДокумента, БланкСтрогойОтчетности");
			
		РеквизитыСчетаФактуры.Вставить("Корректировочный", Корректировочный);
		
		СтруктураПредставленияПоРеквизитам = ПолучитьПредставлениеПоРеквизитам(РеквизитыСчетаФактуры, ТекстОсновноеПредставление);	
		ТекстПредставлениеКраткое 	= СтруктураПредставленияПоРеквизитам.ТекстПредставлениеКраткое;
		ТекстПредставление 			= СтруктураПредставленияПоРеквизитам.ТекстПредставление;
		
	Иначе
		ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (создание)'"), ТекстОсновноеПредставление);
	КонецЕсли;
	
	СтруктураПредставления = Новый Структура;
	СтруктураПредставления.Вставить("СчетФактураКраткоеПредставление", ТекстПредставлениеКраткое);
	СтруктураПредставления.Вставить("СчетФактураПредставление", ТекстПредставление);
	
	Возврат СтруктураПредставления;
	
КонецФункции

Функция ПолучитьПредставлениеПоРеквизитам(РеквизитыСчетаФактуры = Неопределено, ТекстОсновноеПредставление = "") Экспорт 
	
	СтруктураПредставленияПоРеквизитам = Новый Структура;
	
	Если РеквизитыСчетаФактуры = Неопределено Тогда 
		ТекстПредставлениеКраткое 	= "";
		ТекстПредставление 			= "";
	Иначе
		Если РеквизитыСчетаФактуры.БланкСтрогойОтчетности Тогда
			ТекстОсновноеПредставление = НСтр("ru = 'Счет-фактура (бланк строгой отчетности)'");
		КонецЕсли; 	
		
		Если РеквизитыСчетаФактуры.Исправление Тогда
			ТекстПредставлениеКраткое = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (испр. %2) от %3'"),
			РеквизитыСчетаФактуры.НомерВходящегоДокумента, РеквизитыСчетаФактуры.НомерИсправления, Формат(РеквизитыСчетаФактуры.ДатаИсправления,"ДЛФ=Д"));
			ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2'"), ТекстОсновноеПредставление, ТекстПредставлениеКраткое);
		Иначе
			ТекстПредставлениеКраткое = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"),
			РеквизитыСчетаФактуры.НомерВходящегоДокумента, Формат(РеквизитыСчетаФактуры.ДатаВходящегоДокумента,"ДЛФ=Д"));
			ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2'"), ТекстОсновноеПредставление, ТекстПредставлениеКраткое);	
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПредставленияПоРеквизитам.Вставить("ТекстПредставлениеКраткое", ТекстПредставлениеКраткое);
	СтруктураПредставленияПоРеквизитам.Вставить("ТекстПредставление", ТекстПредставление);

	Возврат СтруктураПредставленияПоРеквизитам;
	
КонецФункции

// Корректировочный Счет-фактура

Функция ПолучитьРеквизитыИсходногоСчетаФактурыДляКорректировки(ДокументОснование, СчетФактура, ПолучатьПредставление = Ложь) Экспорт
	
	Если СчетФактура.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыПолученного.Корректировочный 
		ИЛИ ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ДокументПоступления = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументОснование, "ДокументПоступления");	
	
	Если ДокументПоступления <> Неопределено Тогда 
		Если СчетФактура.Исправление Тогда 
			ИсходныйДокументПоступления = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументПоступления(ДокументОснование);
			Если ТипЗнч(ИсходныйДокументПоступления) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
				ИсходныйДокументПоступления = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ИсходныйДокументПоступления, "ДокументПоступления");
			КонецЕсли; 
		Иначе
			ИсходныйДокументПоступления = ДокументПоступления;
		КонецЕсли;
		
		РеквизитыИсходногоСчетаФактуры = ПолучитьРеквизитыСчетаФактурыПолученного(ИсходныйДокументПоступления, ПолучатьПредставление);
	Иначе
		РеквизитыИсходногоСчетаФактуры = Неопределено;
	КонецЕсли;
	
	Возврат РеквизитыИсходногоСчетаФактуры;
			
КонецФункции

Функция ПолучитьРеквизитыСчетаФактурыПолученного(ДокументОснование, ПолучатьПредставление) Экспорт
	
	РеквизитыСчетаФактуры = Новый Структура("СчетФактура, СчетФактураПредставление, СчетФактураКраткоеПредставление, НомерСчетаФактуры, ДатаСчетаФактуры, 
			|Исправление, НомерИсправления, ДатаИсправления, НомерИсходногоДокумента, ДатаИсходногоДокумента,
			|УчитыватьИсправлениеИсходногоДокумента, НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента");
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ДокументОснование", ДокументОснование.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.Ссылка КАК Ссылка,
	|	СчетФактураПолученныйДокументыОснования.НомерИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.ДатаИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.УчитыватьИсправлениеИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.НомерИсправленияИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.ДатаИсправленияИсходногоДокумента
	|ПОМЕСТИТЬ ВТ_СчетФактураПолученныйДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.Ссылка,
	|	СчетФактураПолученныйДокументыОснования.НомерИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.ДатаИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.УчитыватьИсправлениеИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.НомерИсправленияИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.ДатаИсправленияИсходногоДокумента
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура,
	|	СчетФактураПолученный.НомерВходящегоДокумента КАК НомерСчетаФактуры,
	|	СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаСчетаФактуры,
	|	СчетФактураПолученный.Исправление,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Исправление
	|			ТОГДА СчетФактураПолученный.НомерИсправления
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Исправление
	|			ТОГДА СчетФактураПолученный.ДатаИсправления
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.НомерИсходногоДокумента
	|	КОНЕЦ КАК НомерИсходногоДокумента,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.ДатаИсходногоДокумента
	|	КОНЕЦ КАК ДатаИсходногоДокумента,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученныйДокументыОснования.УчитыватьИсправлениеИсходногоДокумента
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьИсправлениеИсходногоДокумента,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученныйДокументыОснования.НомерИсправленияИсходногоДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерИсправленияИсходногоДокумента,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученныйДокументыОснования.ДатаИсправленияИсходногоДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаИсправленияИсходногоДокумента,
	|	СчетФактураПолученный.ВидСчетаФактуры
	|ИЗ
	|	ВТ_СчетФактураПолученныйДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СчетФактураПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (СчетФактураПолученный.Ссылка = ДанныеПервичныхДокументов.Документ)
	|			И (СчетФактураПолученный.Организация = ДанныеПервичныхДокументов.Организация)
	|ГДЕ
	|	НЕ (ДанныеПервичныхДокументов.Документ ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураПолученный.ПометкаУдаления,
	|	СчетФактураПолученный.Проведен УБЫВ,
	|	СчетФактураПолученный.Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, Выборка);
		Если ПолучатьПредставление Тогда
			ПредставлениеДокумента = ПолучитьПредставлениеДокумента(Выборка.СчетФактура, Выборка.ВидСчетаФактуры);
			ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, ПредставлениеДокумента);
		КонецЕсли;
		Возврат РеквизитыСчетаФактуры;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьИсправлениеИсходногоДокумента");
	МассивРеквизитов.Добавить("УдалитьНомерИсправленияИсходногоДокумента");
	МассивРеквизитов.Добавить("УдалитьДатаИсправленияИсходногоДокумента");
	МассивРеквизитов.Добавить("УдалитьКорректировочныйСчетФактура");
	МассивРеквизитов.Добавить("УдалитьНаАванс");
	
	
	Возврат МассивРеквизитов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ЗАПОЛНЕНИЯ ДОКУМЕНТА НА ОСНОВАНИИ

Функция ПодготовитьПараметрыЗаполненияАванс(ДокументОснование, ДокументСсылка, ДоговорКонтрагента = Неопределено, Отказ) Экспорт

	МассивВидовДоговоров	= Новый Массив;
	МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование",		ДокументОснование);
	Запрос.УстановитьПараметр("ДокументСсылка",			?(ЗначениеЗаполнено(ДокументСсылка), ДокументСсылка, Неопределено));
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ?(ЗначениеЗаполнено(ДоговорКонтрагента), ДоговорКонтрагента, Неопределено));
	Запрос.УстановитьПараметр("ВалютаРеглУчета",		ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("МассивВидовДоговоров",	МассивВидовДоговоров);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = Документы[ДокументОснование.Метаданные().Имя].ТекстЗапросаСчетФактураПолученныйНаАвансРасшифровкаПлатежа(НомераТаблиц)
		+ ТекстЗапросаСуммыАвансовПоВзаиморасчетам(НомераТаблиц)
		+ ТекстЗапросаДанныеПлатежа(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	СуммыАвансов = Результат[НомераТаблиц.СуммыАвансов].Выгрузить();
	Если СуммыАвансов.Количество() = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружены данные об авансах по документу %1.'"),
			ДокументОснование);
		Отказ = Истина;
		Возврат ТекстСообщения;
	КонецЕсли;
	
	РасшифровкаПлатежа = Результат[НомераТаблиц.РасшифровкаПлатежа].Выгрузить();
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружены авансы по документу %1, на которые не выставлены счета-фактуры на аванс.'"),
			ДокументОснование);
		Отказ = Истина;
		Возврат ТекстСообщения;
	КонецЕсли;
			
	// Распределяем рублевые суммы авансов по ставкам НДС из расшифровки платежа
	АвансыПоСчетамНаОплату = РасшифровкаПлатежа.СкопироватьКолонки();
	ОтборСтрокПлатежа = Новый Структура("Контрагент,ДоговорКонтрагента");
	Для каждого СтрокаАванса Из СуммыАвансов Цикл
		ЗаполнитьЗначенияСвойств(ОтборСтрокПлатежа, СтрокаАванса);
		ПлатежиСАвансом = РасшифровкаПлатежа.Скопировать(ОтборСтрокПлатежа);
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(СтрокаАванса.Сумма, ПлатежиСАвансом, "Сумма");
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ПлатежиСАвансом, АвансыПоСчетамНаОплату);
	КонецЦикла;
	АвансыПоСчетамНаОплату.Свернуть(
		"Дата,ДокументОснование,Организация,Контрагент,ДоговорКонтрагента,СтавкаНДС", 
		"Сумма, СуммаНДС");
		
	Для каждого СтрокаАванса Из АвансыПоСчетамНаОплату Цикл 
		СтрокаАванса.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаАванса.Сумма, Истина, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаАванса.СтавкаНДС));	
	КонецЦикла;		
		
	// Удаляем строки со ставками "Без НДС" и 0% - счета-фактуры на такие авансы не выписываются
	АвансыБезНДС = АвансыПоСчетамНаОплату.НайтиСтроки(Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.БезНДС));
	Для каждого СтрокаБезНДС Из АвансыБезНДС Цикл
		АвансыПоСчетамНаОплату.Удалить(СтрокаБезНДС);
	КонецЦикла;
	Авансы0 = АвансыПоСчетамНаОплату.НайтиСтроки(Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС0));
	Для каждого Строка0 Из Авансы0 Цикл
		АвансыПоСчетамНаОплату.Удалить(Строка0);
	КонецЦикла;
	Если АвансыПоСчетамНаОплату.Количество() = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружены авансы по документу %1 по ставкам НДС, 
			|на которые требуется регистрировать счет-фактуру на аванс.'"),
			ДокументОснование);
		Отказ = Истина;
		Возврат ТекстСообщения;
	КонецЕсли;
	
	
	Реквизиты = Новый Структура("Дата,ДокументОснование,Организация,Контрагент,ДоговорКонтрагента");
	ЗаполнитьЗначенияСвойств(Реквизиты, АвансыПоСчетамНаОплату[0]);
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Реквизиты", Реквизиты);
	ПараметрыЗаполнения.Вставить("Авансы",    АвансыПоСчетамНаОплату);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ТекстЗапросаСуммыАвансовПоВзаиморасчетам(НомераТаблиц)
	
	// Временная таблица авансов по результатам проведения документа
	НомераТаблиц.Вставить("ВТ_СуммыАвансов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Проводки.СубконтоДт1 КАК Контрагент,
	|	Проводки.СубконтоДт2 КАК ДоговорКонтрагента,
	|	Проводки.СчетДт КАК СчетАвансов,
	|	СУММА(Проводки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ СуммыАвансов
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			,
	|			,
	|			Регистратор = &ДокументОснование
	|				И ВидСубконтоДт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|				И ВидСубконтоДт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|				И ВидСубконтоДт3 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)
	|				И (&ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|					ИЛИ СубконтоДт2 = &ДоговорКонтрагента)
	|				И СубконтоДт3 = &ДокументОснование,
	|			,
	|			) КАК Проводки
	|
	|СГРУППИРОВАТЬ ПО
	|	Проводки.СубконтоДт1,
	|	Проводки.СубконтоДт2,
	|	Проводки.СчетДт";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаДанныеПлатежа(НомераТаблиц)

	// Временная таблица договоров из ВТ РасшифровкаПлатежа 
	//	Если в запрос передана ссылка на существующий счет-фактуру, 
	//	таблица договоров формируется с отбором по договору из счета-фактуры
	НомераТаблиц.Вставить("ВТ_ДоговорыПлатежа", НомераТаблиц.Количество());
	
	// Временная таблица договоров из ВТ ДоговорыПлатежа, 
	//	содержит 1 договор, по которому есть аванс, но не был выставлен СФ на аванс
	НомераТаблиц.Вставить("ВТ_ДоговорыСчетаФактуры", НомераТаблиц.Количество());
	
	// Суммы авансов из ВТ СуммыАвансов
	НомераТаблиц.Вставить("СуммыАвансов", НомераТаблиц.Количество());
	
	// Расшифровка платежа документа из ВТ РасшифровкаПлатежа 
	//	с отбором по договору из ВТ ДоговорыСчетаФактуры
	НомераТаблиц.Вставить("РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ДоговорыПлатежа
	|ИЗ
	|	РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ДоговорыСчетаФактуры
	|ИЗ
	|	ДоговорыПлатежа КАК ДоговорыПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СуммыАвансов КАК СуммыАвансов
	|		ПО ДоговорыПлатежа.ДоговорКонтрагента = СуммыАвансов.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактура
	|		ПО (СчетФактура.ДокументОснование = &ДокументОснование)
	|			И (СчетФактура.Ссылка <> &ДокументСсылка)
	|			И (СчетФактура.ПометкаУдаления = ЛОЖЬ)
	|			И (СчетФактура.ВидСчетаФактуры В (ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс), ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента)))
	|			И ДоговорыПлатежа.ДоговорКонтрагента = СчетФактура.ДоговорКонтрагента
	|ГДЕ
	|	СчетФактура.ДоговорКонтрагента ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыАвансов.Контрагент КАК Контрагент,
	|	СуммыАвансов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СуммыАвансов.СчетАвансов КАК СчетАвансов,
	|	СуммыАвансов.Сумма КАК Сумма
	|ИЗ
	|	СуммыАвансов КАК СуммыАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыСчетаФактуры КАК ДоговорыСчетаФактуры
	|		ПО (ДоговорыСчетаФактуры.ДоговорКонтрагента = СуммыАвансов.ДоговорКонтрагента)
	|ГДЕ
	|	ДоговорыСчетаФактуры.ДоговорКонтрагента.ВидДоговора В (&МассивВидовДоговоров)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Дата КАК Дата,
	|	РасшифровкаПлатежа.ДокументОснование КАК ДокументОснование,
	|	РасшифровкаПлатежа.Организация КАК Организация,
	|	РасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	РасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	РасшифровкаПлатежа.СчетАвансов КАК СчетАвансов,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА РасшифровкаПлатежа.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ РасшифровкаПлатежа.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	РасшифровкаПлатежа.Сумма КАК Сумма,
	|	РасшифровкаПлатежа.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыСчетаФактуры КАК ДоговорыСчетаФактуры
	|		ПО (ДоговорыСчетаФактуры.ДоговорКонтрагента = РасшифровкаПлатежа.ДоговорКонтрагента)";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Если Реквизиты.СформированПриВводеНачальныхОстатковНДС Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Реквизиты.Вставить("ПлательщикНДС", УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ВерсияНДС",     УчетНДСКлиентСервер.Версия(Реквизиты.Период));
	Реквизиты.Вставить("ИспользуетсяПостановление1137", УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(Реквизиты.Период));
	Реквизиты.Вставить("ВедетсяУчетНДСПоФЗ134", УчетНДС.ВедетсяУчетНДСПоФЗ134(Реквизиты.Период));
	Реквизиты.Вставить("ИностранныйСчетФактура", УчетНДС.КонтрагентРезидентТаможенногоСоюза(Реквизиты.Контрагент));
	
	Запрос.УстановитьПараметр("Период", Новый Граница(Реквизиты.Период, ВидГраницы.Включая));
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаНДСПоАвансамВыданным(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаЖурналУчетаСчетовФактур(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для каждого ИндексТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(ИндексТаблицы.Ключ, Результат[ИндексТаблицы.Значение].Выгрузить());
		КонецЦикла; 
	КонецЕсли;
	
	Если Реквизиты.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление Тогда
		ПараметрыПроведения.Вставить("РеквизитыПоступление", ТаблицаРеквизиты);
	Иначе
		ПараметрыПроведения.Вставить("РеквизитыПоступление", Неопределено);
	КонецЕсли;
		
	Если Реквизиты.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
		ПараметрыПроведения.Вставить("РеквизитыАванс", ТаблицаРеквизиты);
	Иначе
		ПараметрыПроведения.Вставить("РеквизитыАванс", Неопределено);
	КонецЕсли;
		
	Возврат ПараметрыПроведения;
	
КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.ДокументОснование,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.Контрагент,
	|	Реквизиты.КППКонтрагента КАК КППКонтрагента,
	|	Реквизиты.Продавец,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДокументОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ВидСчетаФактуры,
	|	Реквизиты.ДатаВходящегоДокумента,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.Исправление,
	|	Реквизиты.НомерИсправления,
	|	Реквизиты.ДатаИсправления,
	|	Реквизиты.СформированПриВводеНачальныхОстатковНДС,
	|	Реквизиты.БланкСтрогойОтчетности,
	|	Реквизиты.НДСПредъявленКВычету,
	|	Реквизиты.КодСпособаПолучения,
	|	Реквизиты.КодВидаОперации,
	|	Реквизиты.СуммаДокумента,
	|	Реквизиты.СуммаНДСДокумента,
	|	Реквизиты.СуммаУвеличение,
	|	Реквизиты.СуммаУменьшение,
	|	Реквизиты.СуммаНДСУвеличение,
	|	Реквизиты.СуммаНДСУменьшение,
	|	Реквизиты.СуммаДокументаКомиссия,
	|	Реквизиты.СуммаНДСДокументаКомиссия,
	|	Реквизиты.СуммаУвеличениеКомиссия,
	|	Реквизиты.СуммаУменьшениеКомиссия,
	|	Реквизиты.СуммаНДСУвеличениеКомиссия,
	|	Реквизиты.СуммаНДСУменьшениеКомиссия,
	|	Реквизиты.СчетФактураБезНДС,
	|	Реквизиты.Субкомиссионер,
	|	Реквизиты.СчетФактураВыданныйПокупателю,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РеализацияТоваровКомитента,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СводныйСчетФактураКомитентаПо1279,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку)
	|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2015, 1, 1)
	|				И Реквизиты.СводныйКомиссионный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СводныйСчетФактураКомиссионераПо1279
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (Реквизиты.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс))
	|			И Реквизиты.Организация = ДанныеПервичныхДокументов.Организация
	|			И Реквизиты.ДокументОснование = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВидСчетаФактуры,
	|	Реквизиты.СформированПриВводеНачальныхОстатковНДС,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДокументОснование,
	|	Реквизиты.Исправление,
	|	Реквизиты.БланкСтрогойОтчетности,
	|	Реквизиты.НДСПредъявленКВычету,
	|	Реквизиты.Контрагент,
	|	Реквизиты.СводныйСчетФактураКомитентаПо1279,
	|	Реквизиты.СводныйСчетФактураКомиссионераПо1279,
	|	Реквизиты.КодВидаОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНДСПоАвансамВыданным(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ПлательщикНДС
		ИЛИ Реквизиты.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
		ПараметрыПроведения.Вставить("ТаблицаАвансов", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаАвансов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ДокументОснование КАК СчетФактура,
	|	ТаблицаАвансы.СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным) КАК СчетУчетаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ЗаписьДополнительногоЛиста,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйПериод,
	|	Реквизиты.Дата КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА Реквизиты.Исправление
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) КАК СуммаБезНДС,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокументаОплаты,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, НЕОПРЕДЕЛЕНО) КАК НомерДокументаОплаты,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ Реквизиты.КодВидаОперации
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	Документ.СчетФактураПолученный.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = Реквизиты.ДокументОснование)
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И НЕ Реквизиты.СводныйСчетФактураКомиссионераПо1279
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДокументОснование,
	|	ТаблицаАвансы.СтавкаНДС,
	|	Реквизиты.Дата,
	|	ДанныеПервичныхДокументов.Дата,
	|	ДанныеПервичныхДокументов.Номер,
	|	ВЫБОР
	|		КОГДА Реквизиты.Исправление
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ Реквизиты.КодВидаОперации
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДокументОснование,
	|	ТаблицаАвансы.СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Реквизиты.Дата,
	|	ВЫБОР
	|		КОГДА Реквизиты.Исправление
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	СУММА(ТаблицаАвансы.СуммаНДС),
	|	СУММА(ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ Реквизиты.КодВидаОперации
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученный.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И Реквизиты.СводныйСчетФактураКомиссионераПо1279
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДокументОснование,
	|	ТаблицаАвансы.СтавкаНДС,
	|	Реквизиты.Дата,
	|	ВЫБОР
	|		КОГДА Реквизиты.Исправление
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ Реквизиты.КодВидаОперации
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДокументОснование,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Реквизиты.Дата,
	|	ВЫБОР
	|		КОГДА Реквизиты.Исправление
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ПлатежноРасчетныеДокументы.ДатаДокумента,
	|	ПлатежноРасчетныеДокументы.НомерДокумента,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата < ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ Реквизиты.КодВидаОперации
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученный.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ПлатежноРасчетныеДокументы КАК ПлатежноРасчетныеДокументы
	|		ПО (ПлатежноРасчетныеДокументы.Ссылка = ТаблицаАвансы.Ссылка)
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И Реквизиты.СводныйСчетФактураКомиссионераПо1279";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЖурналУчетаСчетовФактур(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если (НЕ Реквизиты.ПлательщикНДС И НЕ Реквизиты.ВедетсяУчетНДСПоФЗ134)
		ИЛИ Реквизиты.ВерсияНДС = 1
		ИЛИ Реквизиты.БланкСтрогойОтчетности 
		ИЛИ Реквизиты.ИностранныйСчетФактура Тогда
		ПараметрыПроведения.Вставить("ЗаписьЖурналаПоступлениеАванс", Неопределено);
		ПараметрыПроведения.Вставить("ЗаписьЖурналаКорректировка",    Неопределено);
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если НЕ Реквизиты.ИспользуетсяПостановление1137 Тогда
		
		ПараметрыПроведения.Вставить("ЗаписьЖурналаПоступлениеАванс", Неопределено);
		ПараметрыПроведения.Вставить("ЗаписьЖурналаКорректировка",    Неопределено);
		
	ИначеЕсли Реквизиты.СводныйСчетФактураКомитентаПо1279 Тогда
		
		ПараметрыПроведения.Вставить("ЗаписьЖурналаКорректировка", Неопределено);
		
		НомераТаблиц.Вставить("ВременнаяТаблицаСчетаФактурыВыданныеПокупателям", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ЗаписьЖурналаПоступлениеАванс", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	СУММА(СчетаФактурыВыданныеПокупателям.Сумма) КАК Сумма,
		|	СУММА(СчетаФактурыВыданныеПокупателям.НДС) КАК НДС,
		|	МИНИМУМ(СчетаФактурыВыданныеПокупателям.НомерСтроки) КАК НомерСтроки,
		|	СчетаФактурыВыданныеПокупателям.Субкомиссионер,
		|	СчетаФактурыВыданныеПокупателям.СчетФактура
		|ПОМЕСТИТЬ СчетаФактурыВыданныеПокупателям
		|ИЗ
		|	Документ.СчетФактураПолученный.СчетаФактурыВыданныеПокупателям КАК СчетаФактурыВыданныеПокупателям
		|ГДЕ
		|	СчетаФактурыВыданныеПокупателям.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыВыданныеПокупателям.Субкомиссионер,
		|	СчетаФактурыВыданныеПокупателям.СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент,
		|	Реквизиты.КППКонтрагента,
		|	ВЫБОР
		|		КОГДА Реквизиты.Продавец = Реквизиты.Контрагент
		|				ИЛИ Реквизиты.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Реквизиты.Продавец
		|	КОНЕЦ КАК Продавец,
		|	Реквизиты.Ссылка КАК СчетФактура,
		|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
		|	Реквизиты.Дата КАК ДатаВыставленияПолучения,
		|	Реквизиты.КодСпособаПолучения КАК КодСпособаВыставленияПолучения,
		|	Реквизиты.КодВидаОперации КАК КодВидаОперации,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерСчетаФактуры,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК НомерКорректировочногоСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаКорректировочногоСчетаФактуры,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.НомерИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НомерИсправления,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.ДатаИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДатаИсправления,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> &ВалютаРеглУчета
		|				И Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА &ВалютаРеглУчета
		|		ИНАЧЕ Реквизиты.ВалютаДокумента
		|	КОНЕЦ КАК Валюта,
		|	СчетаФактурыВыданныеПокупателям.Сумма КАК СуммаПоСчетуФактуре,
		|	СчетаФактурыВыданныеПокупателям.Сумма КАК СуммаПоСчетуФактуреКомиссия,
		|	СчетаФактурыВыданныеПокупателям.НДС КАК СуммаНДС,
		|	СчетаФактурыВыданныеПокупателям.НДС КАК СуммаНДСКомиссия,
		|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
		|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
		|	0 КАК СуммаНДСРазницаУвеличение,
		|	0 КАК СуммаНДСРазницаУменьшение,
		|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
		|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
		|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
		|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
		|	Реквизиты.СчетФактураБезНДС КАК ПоСтавкеБезНДС,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактураНеВыставляется,
		|	Реквизиты.РасчетыВУсловныхЕдиницах,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияКорректировочногоСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияКорректировочногоСчетаФактуры,
		|	СчетаФактурыВыданныеПокупателям.НомерСтроки - 1 КАК ИндексСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	СчетаФактурыВыданныеПокупателям.Субкомиссионер КАК Субкомиссионер,
		|	СчетаФактурыВыданныеПокупателям.СчетФактура КАК СчетФактураВыданныйПокупателю,
		|	2 КАК КодВидаСделки,
		|	НЕОПРЕДЕЛЕНО КАК Посредник,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактурыПродавца,
		|	НЕОПРЕДЕЛЕНО КАК КодВидаОперацииКомиссия
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактурыВыданныеПокупателям КАК СчетаФактурыВыданныеПокупателям
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИндексСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ИначеЕсли Реквизиты.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		
		ПараметрыПроведения.Вставить("ЗаписьЖурналаКорректировка", Неопределено);
		
		НомераТаблиц.Вставить("ВременнаяТаблицаПродавцы",           НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаДокументыОснования", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",  НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_ЗакупленныеТоварыКомитентов",     НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ЗаписьЖурналаПоступлениеАванс",      НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	СчетФактураПолученныйПродавцы.Продавец,
		|	МИНИМУМ(СчетФактураПолученныйПродавцы.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВременнаяТаблицаПродавцы
		|ИЗ
		|	Документ.СчетФактураПолученный.Продавцы КАК СчетФактураПолученныйПродавцы
		|ГДЕ
		|	СчетФактураПолученныйПродавцы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетФактураПолученныйПродавцы.Продавец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыОснования
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|ГДЕ
		|	СчетФактураПолученныйДокументыОснования.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего) КАК РазницаВсегоРуб,
		|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС) КАК РазницаНДСРуб,
		|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС) КАК РазницаНалоговаяБазаНДСРуб,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоРуб,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НДСРуб,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НалоговаяБазаНДСРуб
		|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ИЗ
		|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|ГДЕ
		|	НЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ВозвратнаяТара)
		|	И НЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОплатаПоставщикам)
		|	И ВЫБОР
		|			КОГДА ВременнаяТаблицаДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|					И РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА НЕ ВременнаяТаблицаДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
		|						ТОГДА ВЫБОР
		|								КОГДА ВременнаяТаблицаДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах
		|										И РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПустаяСсылка)
		|									ТОГДА ЛОЖЬ
		|								ИНАЧЕ ИСТИНА
		|							КОНЕЦ
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗакупленныеТоварыКомитентов.КоличествоОборот КАК Количество
		|ПОМЕСТИТЬ ТоварыЗакупленныеДляКомитентов
		|ИЗ
		|	РегистрНакопления.ЗакупленныеТоварыКомитентов.Обороты(, &Период, , ) КАК ЗакупленныеТоварыКомитентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО ЗакупленныеТоварыКомитентов.Партия = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент,
		|	Реквизиты.КППКонтрагента,
		|	ВЫБОР
		|		КОГДА Реквизиты.Продавец = Реквизиты.Контрагент
		|				ИЛИ Реквизиты.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				ИЛИ Реквизиты.СводныйСчетФактураКомиссионераПо1279
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Реквизиты.Продавец
		|	КОНЕЦ КАК Продавец,
		|	Реквизиты.Ссылка КАК СчетФактура,
		|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
		|	Реквизиты.Дата КАК ДатаВыставленияПолучения,
		|	Реквизиты.КодСпособаПолучения КАК КодСпособаВыставленияПолучения,
		|	Реквизиты.КодВидаОперации КАК КодВидаОперации,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерСчетаФактуры,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК НомерКорректировочногоСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаКорректировочногоСчетаФактуры,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.НомерИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НомерИсправления,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.ДатаИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДатаИсправления,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> &ВалютаРеглУчета
		|				И Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА &ВалютаРеглУчета
		|		ИНАЧЕ Реквизиты.ВалютаДокумента
		|	КОНЕЦ КАК Валюта,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> &ВалютаРеглУчета
		|				И Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб, 0) = 0
		|						ТОГДА Реквизиты.СуммаДокумента
		|					ИНАЧЕ ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб, 0)
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.СуммаДокумента
		|	КОНЕЦ КАК СуммаПоСчетуФактуре,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> &ВалютаРеглУчета
		|				И Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб, 0) = 0
		|						ТОГДА Реквизиты.СуммаНДСДокумента
		|					ИНАЧЕ ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб, 0)
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.СуммаНДСДокумента
		|	КОНЕЦ КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА Реквизиты.СуммаНДСДокумента = 0
		|				ИЛИ Реквизиты.СуммаНДСДокументаКомиссия = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|						ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|							И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|					ТОГДА Реквизиты.СуммаНДСДокументаКомиссия
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб, 0) = 0
		|							ТОГДА Реквизиты.СуммаНДСДокументаКомиссия
		|						ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб / Реквизиты.СуммаНДСДокумента * Реквизиты.СуммаНДСДокументаКомиссия
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаНДСКомиссия,
		|	ВЫБОР
		|		КОГДА Реквизиты.СуммаДокумента = 0
		|				ИЛИ Реквизиты.СуммаДокументаКомиссия = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|						ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|							И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|					ТОГДА Реквизиты.СуммаДокументаКомиссия
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб, 0) = 0
		|							ТОГДА Реквизиты.СуммаДокументаКомиссия
		|						ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб / Реквизиты.СуммаДокумента * Реквизиты.СуммаДокументаКомиссия
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаПоСчетуФактуреКомиссия,
		|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
		|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
		|	0 КАК СуммаНДСРазницаУвеличение,
		|	0 КАК СуммаНДСРазницаУменьшение,
		|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
		|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
		|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
		|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
		|	Реквизиты.СчетФактураБезНДС КАК ПоСтавкеБезНДС,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактураНеВыставляется,
		|	Реквизиты.РасчетыВУсловныхЕдиницах,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияКорректировочногоСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияКорректировочногоСчетаФактуры,
		|	0 КАК ИндексСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	ВЫБОР
		|		КОГДА Реквизиты.РеализацияТоваровКомитента
		|			ТОГДА Реквизиты.Субкомиссионер
		|		КОГДА Реквизиты.Продавец <> Реквизиты.Контрагент
		|				И Реквизиты.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				И НЕ ТоварыЗакупленныеДляКомитентов.Количество ЕСТЬ NULL 
		|			ТОГДА Реквизиты.Контрагент
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Субкомиссионер,
		|	ВЫБОР
		|		КОГДА Реквизиты.РеализацияТоваровКомитента
		|			ТОГДА Реквизиты.СчетФактураВыданныйПокупателю
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СчетФактураВыданныйПокупателю,
		|	ВЫБОР
		|		КОГДА Реквизиты.РеализацияТоваровКомитента
		|			ТОГДА 2
		|		КОГДА НЕ ТоварыЗакупленныеДляКомитентов.Количество ЕСТЬ NULL 
		|				ИЛИ Реквизиты.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента)
		|			ТОГДА 1
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК КодВидаСделки,
		|	НЕОПРЕДЕЛЕНО КАК Посредник,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактурыПродавца,
		|	НЕОПРЕДЕЛЕНО КАК КодВидаОперацииКомиссия
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыЗакупленныеДляКомитентов КАК ТоварыЗакупленныеДляКомитентов
		|		ПО (ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Ссылка,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент,
		|	Реквизиты.КППКонтрагента,
		|	ТаблицаПродавцы.Продавец,
		|	Реквизиты.Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры),
		|	Реквизиты.Дата,
		|	Реквизиты.КодСпособаПолучения,
		|	Реквизиты.КодВидаОперации,
		|	Реквизиты.НомерВходящегоДокумента,
		|	Реквизиты.ДатаВходящегоДокумента,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.НомерИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.ДатаИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> &ВалютаРеглУчета
		|				И Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА &ВалютаРеглУчета
		|		ИНАЧЕ Реквизиты.ВалютаДокумента
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	Реквизиты.СчетФактураБезНДС,
		|	НЕОПРЕДЕЛЕНО,
		|	Реквизиты.РасчетыВУсловныхЕдиницах,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаПродавцы.НомерСтроки,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПродавцы КАК ТаблицаПродавцы
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Реквизиты.СводныйСчетФактураКомиссионераПо1279
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИндексСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	Иначе
		
		ПараметрыПроведения.Вставить("ЗаписьЖурналаПоступлениеАванс", Неопределено);
		НомераТаблиц.Вставить("ВТ_ДокументыОснования",                            НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалютеПредварительная", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",                НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_ЗакупленныеТоварыКомитентов",     			  НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ЗаписьЖурналаКорректировка",                       НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование,
		|	СчетФактураПолученныйДокументыОснования.НомерИсходногоДокумента,
		|	СчетФактураПолученныйДокументыОснования.ДатаИсходногоДокумента,
		|	СчетФактураПолученныйДокументыОснования.УчитыватьИсправлениеИсходногоДокумента,
		|	СчетФактураПолученныйДокументыОснования.НомерИсправленияИсходногоДокумента,
		|	СчетФактураПолученныйДокументыОснования.ДатаИсправленияИсходногоДокумента,
		|	СчетФактураПолученныйДокументыОснования.СуммаУвеличение,
		|	СчетФактураПолученныйДокументыОснования.СуммаУменьшение,
		|	СчетФактураПолученныйДокументыОснования.СуммаНДСУвеличение,
		|	СчетФактураПолученныйДокументыОснования.СуммаНДСУменьшение,
		|	СчетФактураПолученныйДокументыОснования.НомерСтроки
		|ПОМЕСТИТЬ ВременнаяТаблицаДокументыОснования
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|ГДЕ
		|	СчетФактураПолученныйДокументыОснования.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента,
		|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего) КАК РазницаВсегоРуб,
		|	СУММА(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС) КАК РазницаНДСРуб
		|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная
		|ИЗ
		|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.Регистратор,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаВсегоРуб < 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаВсегоРуб * -1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаУменьшения,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаВсегоРуб > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаВсегоРуб
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаУвеличения,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаНДСРуб < 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаНДСРуб * -1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаНДСУменьшения,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаНДСРуб > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.РазницаНДСРуб
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаНДСУвеличения
		|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ИЗ
		|	РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная КАК РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрСведенийРублевыеСуммыДокументовВВалютеПредварительная.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Количество
		|ПОМЕСТИТЬ ТоварыЗакупленныеДляКомитентов
		|ИЗ
		|	РегистрНакопления.ЗакупленныеТоварыКомитентов КАК ЗакупленныеТоварыКомитентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО ЗакупленныеТоварыКомитентов.Регистратор = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение), , , , ) КАК ХозрасчетныйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыОснования КАК ВременнаяТаблицаДокументыОснования
		|		ПО ХозрасчетныйОбороты.Регистратор = ВременнаяТаблицаДокументыОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент,
		|	Реквизиты.КППКонтрагента,
		|	ВЫБОР
		|		КОГДА Реквизиты.Продавец = Реквизиты.Контрагент
		|				ИЛИ Реквизиты.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Реквизиты.Продавец
		|	КОНЕЦ КАК Продавец,
		|	Реквизиты.Ссылка КАК СчетФактура,
		|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
		|	Реквизиты.Дата КАК ДатаВыставленияПолучения,
		|	Реквизиты.КодСпособаПолучения КАК КодСпособаВыставленияПолучения,
		|	Реквизиты.КодВидаОперации КАК КодВидаОперации,
		|	Основания.ДокументОснование КАК ДокументОснование,
		|	Основания.НомерИсходногоДокумента КАК НомерСчетаФактуры,
		|	Основания.ДатаИсходногоДокумента КАК ДатаСчетаФактуры,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерКорректировочногоСчетаФактуры,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаКорректировочногоСчетаФактуры,
		|	Основания.УчитыватьИсправлениеИсходногоДокумента КАК Исправление,
		|	ВЫБОР
		|		КОГДА Основания.НомерИсправленияИсходногоДокумента <> 0
		|			ТОГДА Основания.НомерИсправленияИсходногоДокумента
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НомерИсправления,
		|	Основания.ДатаИсправленияИсходногоДокумента КАК ДатаИсправления,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|				И Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА &ВалютаРеглУчета
		|		ИНАЧЕ Реквизиты.ВалютаДокумента
		|	КОНЕЦ КАК Валюта,
		|	0 КАК СуммаПоСчетуФактуре,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаПоСчетуФактуреКомиссия,
		|	0 КАК СуммаНДСКомиссия,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|				ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|					И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА Основания.СуммаУвеличение
		|		ИНАЧЕ ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаУвеличения, 0)
		|	КОНЕЦ КАК СуммаПоСчетуФактуреРазницаУвеличение,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|				ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|					И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА Основания.СуммаУменьшение
		|		ИНАЧЕ ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаУменьшения, 0)
		|	КОНЕЦ КАК СуммаПоСчетуФактуреРазницаУменьшение,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|				ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|					И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА Основания.СуммаНДСУвеличение
		|		ИНАЧЕ ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДСУвеличения, 0)
		|	КОНЕЦ КАК СуммаНДСРазницаУвеличение,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|				ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|					И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|			ТОГДА Основания.СуммаНДСУменьшение
		|		ИНАЧЕ ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДСУменьшения, 0)
		|	КОНЕЦ КАК СуммаНДСРазницаУменьшение,
		|	ВЫБОР
		|		КОГДА Реквизиты.СуммаУвеличениеКомиссия = 0
		|				ИЛИ Основания.СуммаУвеличение = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|						ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|							И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|					ТОГДА Реквизиты.СуммаУвеличениеКомиссия
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаУвеличения, 0) = 0
		|							ТОГДА Реквизиты.СуммаУвеличениеКомиссия
		|						ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаУвеличения / Основания.СуммаУвеличение * Реквизиты.СуммаУвеличениеКомиссия
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
		|	ВЫБОР
		|		КОГДА Реквизиты.СуммаНДСУвеличениеКомиссия = 0
		|				ИЛИ Основания.СуммаНДСУвеличение = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|						ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|							И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|					ТОГДА Реквизиты.СуммаНДСУвеличениеКомиссия
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДСУвеличения, 0) = 0
		|							ТОГДА Реквизиты.СуммаНДСУвеличениеКомиссия
		|						ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДСУвеличения / Основания.СуммаНДСУвеличение * Реквизиты.СуммаНДСУвеличениеКомиссия
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаНДСРазницаУвеличениеКомиссия,
		|	ВЫБОР
		|		КОГДА Реквизиты.СуммаНДСУменьшениеКомиссия = 0
		|				ИЛИ Основания.СуммаНДСУменьшение = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|						ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|							И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|					ТОГДА Реквизиты.СуммаНДСУменьшениеКомиссия
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДСУменьшения, 0) = 0
		|							ТОГДА Реквизиты.СуммаНДСУменьшениеКомиссия
		|						ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДСУменьшения / Основания.СуммаНДСУменьшение * Реквизиты.СуммаНДСУменьшениеКомиссия
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаНДСРазницаУменьшениеКомиссия,
		|	ВЫБОР
		|		КОГДА Реквизиты.СуммаУменьшениеКомиссия = 0
		|				ИЛИ Основания.СуммаУменьшение = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|						ИЛИ НЕ Реквизиты.ВалютаДокумента = &ВалютаРеглУчета
		|							И НЕ Реквизиты.РасчетыВУсловныхЕдиницах
		|					ТОГДА Реквизиты.СуммаУменьшениеКомиссия
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаУменьшения, 0) = 0
		|							ТОГДА Реквизиты.СуммаУменьшениеКомиссия
		|						ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаУменьшения / Основания.СуммаУменьшение * Реквизиты.СуммаУменьшениеКомиссия
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
		|	Реквизиты.СчетФактураБезНДС КАК ПоСтавкеБезНДС,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактураНеВыставляется,
		|	Реквизиты.РасчетыВУсловныхЕдиницах,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.НомерИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НомерИсправленияКорректировочногоСчетаФактуры,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА Реквизиты.ДатаИсправления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДатаИсправленияКорректировочногоСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ИсходныйСчетФактура,
		|	Основания.НомерСтроки - 1 КАК ИндексСтроки,
		|	ВЫБОР
		|		КОГДА Реквизиты.РеализацияТоваровКомитента
		|			ТОГДА Реквизиты.Субкомиссионер
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Субкомиссионер,
		|	ВЫБОР
		|		КОГДА Реквизиты.РеализацияТоваровКомитента
		|			ТОГДА Реквизиты.СчетФактураВыданныйПокупателю
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СчетФактураВыданныйПокупателю,
		|	ВЫБОР
		|		КОГДА Реквизиты.РеализацияТоваровКомитента
		|			ТОГДА 2
		|		КОГДА НЕ ТоварыЗакупленныеДляКомитентов.Количество ЕСТЬ NULL 
		|			ТОГДА 1
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК КодВидаСделки,
		|	НЕОПРЕДЕЛЕНО КАК Посредник,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактурыПродавца,
		|	НЕОПРЕДЕЛЕНО КАК КодВидаОперацииКомиссия
		|ИЗ
		|	ВременнаяТаблицаДокументыОснования КАК Основания
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО Основания.ДокументОснование = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыЗакупленныеДляКомитентов КАК ТоварыЗакупленныеДляКомитентов
		|		ПО (ИСТИНА)"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет-фактура от поставщика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура за поставщика'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактурПолученных";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаНаПоступление,ФормаДокументаКорректировочный";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Счет-фактура полученный""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"СчетФактура", "Счет-фактура", 
			УчетНДСБП.ПечатьСчетовФактур(МассивОбъектов, ОбъектыПечати, ТекстЗапросаПечатьСчетовФактур(Ложь)),,
			"ОбщийМакет.ПФ_MXL_СчетФактура451");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура1137") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"СчетФактура1137", "Счет-фактура",
			УчетНДС.ПечатьСчетовФактур1137(МассивОбъектов, ОбъектыПечати, ТекстЗапросаПечатьСчетовФактур()),,
			"ОбщийМакет.ПФ_MXL_СчетФактура1137");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КорректировочныйСчетФактура") Тогда		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"КорректировочныйСчетФактура", "Корректировочный счет-фактура", 
			УчетНДСБП.ПечатьКорректировочныхСчетовФактур(МассивОбъектов, ОбъектыПечати, ТекстЗапросаПечатьКорректировочныхСчетовФактур(Ложь, Ложь)),, 
			"ОбщийМакет.ПФ_MXL_КорректировочныйСчетФактура");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КорректировочныйСчетФактура1137") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"КорректировочныйСчетФактура1137", "Корректировочный счет-фактура", 
			УчетНДС.ПечатьКорректировочныхСчетовФактур1137(МассивОбъектов, ОбъектыПечати, ТекстЗапросаПечатьКорректировочныхСчетовФактур(, Ложь)), 
			"ОбщийМакет.ПФ_MXL_КорректировочныйСчетФактура1137");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КорректировочныйСчетФактура952") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"КорректировочныйСчетФактура952", "Корректировочный счет-фактура",
			УчетНДС.ПечатьКорректировочныхСчетовФактур952(МассивОбъектов, ОбъектыПечати, ТекстЗапросаПечатьКорректировочныхСчетовФактур()),,
			"ОбщийМакет.ПФ_MXL_КорректировочныйСчетФактура952");
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
		
КонецПроцедуры

Функция ТекстЗапросаПечатьСчетовФактур(ИспользуетсяПостановлениеНДС1137 = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК СчетФактура,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ДокументыОснования.НомерСтроки КАК НомерСтроки,
	|	ДокументыОснования.Ссылка.ДатаВходящегоДокумента КАК Дата,
	|	ДокументыОснования.Ссылка.НомерВходящегоДокумента КАК Номер,
	|	ДокументыОснования.Ссылка.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	ДокументыОснования.Ссылка.СчетФактураБезНДС КАК СчетФактураБезНДС,
	|	ДокументыОснования.Ссылка.Исправление КАК Исправление,
	|	ДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ДокументыОснования.Ссылка.Дата КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.Ссылка.Исправление
	|			ТОГДА ДокументыОснования.Ссылка.ДатаИсправления
	|		КОГДА ДокументыОснования.Ссылка.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументыОснования.Ссылка.ДатаВходящегоДокумента
	|		ИНАЧЕ ДокументыОснования.Ссылка.Дата
	|	КОНЕЦ КАК ДатаСведений,
	|	ДокументыОснования.Ссылка.Контрагент КАК Контрагент,
	|	ДокументыОснования.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДокументыОснования.Ссылка.КППКонтрагента КАК КППСчетаФактуры,
	|	ДокументыОснования.Ссылка.СводныйКомиссионный
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате
	|	И НЕ ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|	И НЕ ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента)
	|	И НЕ ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|	И НЕ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(УдалитьПрефиксыИзНомера),
	|	МАКСИМУМ(ЭтоСчетФактураВыданный),
	|	МАКСИМУМ(ВыводитьСуммуБезНДС)
	|ПО
	|	СчетФактура";
	
	Если ИспользуетсяПостановлениеНДС1137 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
		"ДокументыОснования.Ссылка.Дата >= &НачалоПримененияПостановления1137");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
		"ДокументыОснования.Ссылка.Дата < &НачалоПримененияПостановления1137");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции 

Функция ТекстЗапросаПечатьКорректировочныхСчетовФактур(ИспользуетсяПостановлениеНДС1137 = Истина, ИспользуетсяПостановлениеНДС952 = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК СчетФактура,
	|	ДокументыОснования.Ссылка.ДатаВходящегоДокумента КАК Дата,
	|	ДокументыОснования.Ссылка.НомерВходящегоДокумента КАК Номер,
	|	ДокументыОснования.Ссылка.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	ДокументыОснования.Ссылка.СчетФактураБезНДС КАК СчетФактураБезНДС,
	|	ДокументыОснования.Ссылка.Исправление КАК Исправление,
	|	ДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ДокументыОснования.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ДокументыОснования.УчитыватьИсправлениеИсходногоДокумента КАК УчитыватьИсправлениеИсходногоДокумента,
	|	ДокументыОснования.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|	ДокументыОснования.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|	ДокументыОснования.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	ДокументыОснования.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|	ДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправленияКорректировочного,
	|	ДокументыОснования.Ссылка.ДатаИсправления КАК ДатаИсправленияКорректировочного,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.Ссылка.Исправление
	|			ТОГДА ДокументыОснования.Ссылка.ДатаИсправления
	|		КОГДА ДокументыОснования.Ссылка.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументыОснования.Ссылка.ДатаВходящегоДокумента
	|		ИНАЧЕ ДокументыОснования.Ссылка.Дата
	|	КОНЕЦ КАК ДатаСведений,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.Ссылка.Контрагент.ОбособленноеПодразделение
	|				И ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДокументыОснования.Ссылка.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументыОснования.Ссылка.КППКонтрагента КАК КППСчетаФактуры,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ДокументыОснования.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате
	|	И ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	СчетФактура,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ВидСчетаФактуры),
	|	МАКСИМУМ(СчетФактураБезНДС),
	|	МАКСИМУМ(Исправление),
	|	МАКСИМУМ(НомерИсправления),
	|	МАКСИМУМ(ДатаИсправления),
	|	МАКСИМУМ(НомерИсправленияКорректировочного),
	|	МАКСИМУМ(ДатаИсправленияКорректировочного),
	|	МАКСИМУМ(УдалитьПрефиксыИзНомера),
	|	МАКСИМУМ(ЭтоСчетФактураВыданный),
	|	МАКСИМУМ(ВыводитьСуммуБезНДС)
	|ПО
	|	СчетФактура";
	
	Если ИспользуетсяПостановлениеНДС1137 Тогда
		Если ИспользуетсяПостановлениеНДС952 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
				"ДокументыОснования.Ссылка.Дата >= ДАТАВРЕМЯ(2013,11,6)");
		Иначе	
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
				"ДокументыОснования.Ссылка.Дата МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2013,11,5,23,59,59)");
		КонецЕсли; 
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ДокументыОснования.Ссылка.Дата < &НачалоПримененияПостановления1137");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("ВТ_Реквизиты",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",	НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА НЕ Реквизиты.Продавец = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Продавец
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Поставщик,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаДокумента
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	&ПустоеПодразделение КАК Подразделение,
	|	"""" КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Поставщик.ОбособленноеПодразделение
	|				И Реквизиты.Поставщик.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Поставщик.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	Реквизиты.Поставщик.ИНН КАК ИННпоставщика,
	|	Реквизиты.Поставщик КАК ОбособленноеПодразделениеПоставщика,
	|	""он же"" КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПокупателя,
	|	Реквизиты.Организация КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	ЛОЖЬ КАК ЕстьТовары,
	|	"""" КАК АдресДоставки
	|ИЗ
	|	ВТ_Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	"""" КАК Товар,
	|	"""" КАК ТоварКод,
	|	"""" КАК ТоварАртикул,
	|	"""" КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК ЕдиницаИзмерения,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ТаблицаТовары.Сумма КАК ВсегоРуб,
	|	ТаблицаТовары.СуммаНДС КАК НДСРуб,
	|	ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.СчетФактураПолученный.Авансы КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И (ТаблицаТовары.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ИЛИ ТаблицаТовары.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента))";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("Информация",              "Контрагент");
	Результат.Вставить("Номер,",                  "Таб.ПредставлениеНомера");
	Результат.Вставить("НомерВходящегоДокумента", "НомерВходящегоДокумента");
	Результат.Вставить("ДатаВходящегоДокумента",  "ДатаВходящегоДокумента");
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Открываемая форма документа определяется в зависимости от указанного вида счета-фактуры
//
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка"
		ИЛИ ВидФормы = "ФормаВыбора" Тогда
		Возврат;
	КонецЕсли;
	
	БланкСтрогойОтчетности = Ложь;
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		РеквизитыСчетаФактуры	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Параметры.Ключ, "ВидСчетаФактуры, БланкСтрогойОтчетности");
		ВидСчетаФактуры        = РеквизитыСчетаФактуры.ВидСчетаФактуры;
		БланкСтрогойОтчетности = РеквизитыСчетаФактуры.БланкСтрогойОтчетности;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") 
		И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура")
		И Параметры.ЗначенияЗаполнения.Свойство("ВидСчетаФактуры") Тогда 
		ВидСчетаФактуры = Параметры.ЗначенияЗаполнения.ВидСчетаФактуры;
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") 
		И ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
		И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда 
		ВидСчетаФактуры = Параметры.ЗначениеКопирования.ВидСчетаФактуры;
	ИначеЕсли Параметры.Свойство("Основание") 
		И ЗначениеЗаполнено(Параметры.Основание) Тогда
		ВидСчетаФактуры = УчетНДСПереопределяемый.ОпределитьВидСчетаФактурыПолученногоПоТипуОснования(Параметры.Основание);
	Иначе
		ВидСчетаФактуры = Неопределено;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	
	Если ВидСчетаФактуры = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
		ВыбраннаяФорма = "ФормаДокументаНаАванс";
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда
		ВыбраннаяФорма = "ФормаДокументаНаАванс";
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		ВыбраннаяФорма = "ФормаДокументаКорректировочный";
	ИначеЕсли БланкСтрогойОтчетности Тогда
		ВыбраннаяФорма = "ФормаДокументаБланкСтрогойОтчетности";
	Иначе
		ВыбраннаяФорма = "ФормаДокументаНаПоступление";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция СоздатьДокументНаОсновании(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного, Продавец = Неопределено) Экспорт
	
	СчетФактура = Документы.СчетФактураПолученный.СоздатьДокумент();
	
	СчетФактура.Заполнить(Основание);
	
	СчетФактура.НомерВходящегоДокумента = НомерСчетаФактурыПолученного;
	СчетФактура.ДатаВходящегоДокумента = ДатаСчетаФактурыПолученного;
	СчетФактура.Дата = Макс(ДатаСчетаФактурыПолученного, Основание.Дата);
	
	Если ЗначениеЗаполнено(Продавец) Тогда
		СчетФактура.Продавец = Продавец;
	КонецЕсли;
	
	РежимЗаписи = ?(Основание.Проведен, 
		РежимЗаписиДокумента.Проведение, 
		РежимЗаписиДокумента.Запись);
	
	СчетФактура.Записать(РежимЗаписи);
	
	Возврат СчетФактура.Ссылка;
	
КонецФункции

Функция СоздатьДокументНаОснованииИсправления(Основание, НомерИсправления, ДатаИсправления) Экспорт
	
	СчетФактура = Документы.СчетФактураПолученный.СоздатьДокумент();
	
	СчетФактура.Заполнить(Основание);
	
	СчетФактура.НомерИсправления = НомерИсправления;
	СчетФактура.ДатаИсправления = ДатаИсправления;
	СчетФактура.Дата = Макс(ДатаИсправления, Основание.Дата);
	
	РежимЗаписи = ?(Основание.Проведен, 
		РежимЗаписиДокумента.Проведение, 
		РежимЗаписиДокумента.Запись);
	
	СчетФактура.Записать(РежимЗаписи);
	
	Возврат СчетФактура.Ссылка;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ОБНОВЛЕНИЯ

// Обработчик обновления 3.0.23.7
//
// Отбираются все счета-фактуры полученные - исправления поступления и корректировочные
// у которых не заполнен реквизит ИсправляемыйСчетФактура для установки значения данного реквизита 
// Необходимо при переходе с 2.0 в случае когда исправлялся документ поступления
Процедура ОбработатьСчетаФактурыИзПредыдущейВерсии() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|						И СчетФактураПолученный.Исправление
	|					ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|				ТОГДА ВЫБОР
	|						КОГДА СчетФактураПолученный.ИсправляемыйСчетФактура = ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбрабатываемыйСчетФактура = Выборка.Ссылка;
			
			Если ОбрабатываемыйСчетФактура.ДокументыОснования.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ОбъектСчетФактура = ОбрабатываемыйСчетФактура.ПолучитьОбъект();
			
			Если ТипЗнч(ОбъектСчетФактура.ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
				РезультатПоискаИсправляемыйСчетФактура = УчетНДСПереопределяемый.НайтиПодчиненныйСчетФактуруПолученный(
				ОбъектСчетФактура.ДокументыОснования[0].ДокументОснование.ИсправляемыйДокументПоступления);
				Если РезультатПоискаИсправляемыйСчетФактура = Неопределено Тогда
					РезультатПоискаИсправляемыйСчетФактура = Документы.СчетФактураВыданный.ПустаяСсылка();
				КонецЕсли;
			Иначе
				РезультатПоискаИсправляемыйСчетФактура = Документы.СчетФактураПолученный.ПустаяСсылка();
			КонецЕсли;
			
			ОбъектСчетФактура.ИсправляемыйСчетФактура = РезультатПоискаИсправляемыйСчетФактура;
			ОбъектСчетФактура.ОбменДанными.Загрузка = Истина;
			
			НачатьТранзакцию();
			
			Попытка
				ОбъектСчетФактура.Записать();							
			Исключение
				ТекстСообщения	= НСтр("ru = 'Не удалось обновить данные документа'");
				ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));			
				ОтменитьТранзакцию();
			КонецПопытки;
			
			ЗафиксироватьТранзакцию();
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Обработчик обновления 3.0.24.1
//
// Для всех счетов-фактур полученных устанавливается реквизит ПредставлениеНомера
// Для корректировочных счетов-фактур переопределяется СуммаДокумента и СуммаНДСДокумента
Процедура ОбработатьНомераИСуммыСчетаФактуры() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
	|				ТОГДА КорректировкаПоступленияТовары.Сумма
	|			ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
	|		КОНЕЦ) КАК СуммаДокумента,
	|	СУММА(КорректировкаПоступленияТовары.СуммаНДС) КАК СуммаНДСДокумента,
	|	КорректировкаПоступленияТовары.Ссылка КАК Документ
	|ПОМЕСТИТЬ ВТ_ОснованияКоррСФ
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПоступленияТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
	|				ТОГДА КорректировкаПоступленияУслуги.Сумма
	|			ИНАЧЕ КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС
	|		КОНЕЦ),
	|	СУММА(КорректировкаПоступленияУслуги.СуммаНДС),
	|	КорректировкаПоступленияУслуги.Ссылка
	|ИЗ
	|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПоступленияУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	|				ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
	|			ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
	|		КОНЕЦ),
	|	СУММА(КорректировкаПоступленияАгентскиеУслуги.СуммаНДС),
	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка
	|ИЗ
	|	Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.Ссылка КАК Ссылка,
	|	СУММА(ЕСТЬNULL(ВТ_ОснованияКоррСФ.СуммаНДСДокумента, 0)) КАК СуммаНДСДокумента,
	|	СУММА(ЕСТЬNULL(ВТ_ОснованияКоррСФ.СуммаДокумента, 0)) КАК СуммаДокумента
	|ПОМЕСТИТЬ ВТ_СуммыКорректировочныхСФ
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОснованияКоррСФ КАК ВТ_ОснованияКоррСФ
	|		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование = ВТ_ОснованияКоррСФ.Документ
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученныйДокументыОснования.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА ВТ_СуммыКорректировочныхСФ.СуммаНДСДокумента
	|		ИНАЧЕ СчетФактураПолученный.СуммаНДСДокумента
	|	КОНЕЦ КАК СуммаНДСДокументаПосле,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА ВТ_СуммыКорректировочныхСФ.СуммаДокумента
	|		ИНАЧЕ СчетФактураПолученный.СуммаДокумента
	|	КОНЕЦ КАК СуммаДокументаПосле,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Корректировочный,
	|	СчетФактураПолученный.СуммаДокумента КАК СуммаДокументаДо,
	|	СчетФактураПолученный.СуммаНДСДокумента КАК СуммаНДСДокументаДо,
	|	СчетФактураПолученный.ПредставлениеНомера
	|ПОМЕСТИТЬ ВТ_СчетаФактурыПредварительная
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыКорректировочныхСФ КАК ВТ_СуммыКорректировочныхСФ
	|		ПО (ВТ_СуммыКорректировочныхСФ.Ссылка = СчетФактураПолученный.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СчетаФактурыПредварительная.Ссылка,
	|	ВТ_СчетаФактурыПредварительная.СуммаНДСДокументаПосле КАК СуммаНДСДокумента,
	|	ВТ_СчетаФактурыПредварительная.СуммаДокументаПосле КАК СуммаДокумента,
	|	ВТ_СчетаФактурыПредварительная.Корректировочный
	|ИЗ
	|	ВТ_СчетаФактурыПредварительная КАК ВТ_СчетаФактурыПредварительная
	|ГДЕ
	|	(ВТ_СчетаФактурыПредварительная.ПредставлениеНомера = """"
	|			ИЛИ ВТ_СчетаФактурыПредварительная.СуммаДокументаДо <> ВТ_СчетаФактурыПредварительная.СуммаДокументаПосле
	|			ИЛИ ВТ_СчетаФактурыПредварительная.СуммаНДСДокументаДо <> ВТ_СчетаФактурыПредварительная.СуммаНДСДокументаПосле)";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбрабатываемыйСчетФактура = Выборка.Ссылка;
			
			ОбъектСчетФактура = ОбрабатываемыйСчетФактура.ПолучитьОбъект();
			
			Если Выборка.Корректировочный Тогда
				ЗаполнитьЗначенияСвойств(ОбъектСчетФактура, Выборка); 
			КонецЕсли;
			
			ОбъектСчетФактура.ОбменДанными.Загрузка = Истина;
			
			НачатьТранзакцию();
			
			Попытка
				ОбъектСчетФактура.Записать();							
			Исключение
				ТекстСообщения	= НСтр("ru = 'Не удалось обновить данные документа'");
				ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));			
				ОтменитьТранзакцию();
			КонецПопытки;
			
			ЗафиксироватьТранзакцию();
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Обработчик обновления
//
//Устанавливает новый код вида операции для сводных счетов-фактур по комиссии
Процедура УстановитьКодВидаОперацииСводныйКомиссионный() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Ссылка,
	|	""27"" КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.КодВидаОперации = ""27""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КодУстановлен
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	(СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|			ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный))
	|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.СводныйКомиссионный = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка,
	|	""28"",
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.КодВидаОперации = ""28""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	(СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента))
	|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.СводныйКомиссионный = ИСТИНА
	|ИТОГИ
	|	СУММА(КодУстановлен)
	|ПО
	|	ОБЩИЕ";
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаИтоги.Следующий()
		И ВыборкаИтоги.КодУстановлен = 0 Тогда
		ВыборкаДокументы = ВыборкаИтоги.Выбрать();
		Пока ВыборкаДокументы.Следующий() Цикл
			СчетФактураДокумент = ВыборкаДокументы.Ссылка.ПолучитьОбъект();
			СчетФактураДокумент.КодВидаОПерации = ВыборкаДокументы.КодВидаОперации;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СчетФактураДокумент);
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецЕсли

