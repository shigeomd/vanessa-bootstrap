
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначенияЗаполнения.Свойство("СписокДокументовОснований") Тогда 
		
		ТаблицаТекущихОснований = Параметры.ЗначенияЗаполнения.СписокДокументовОснований;
		ПодразделениеОснований = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		
		Если ТаблицаТекущихОснований.Количество() > 0 Тогда 
			МетаданныеДокумента = ТаблицаТекущихОснований[0].Значение.Метаданные();
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ПодразделениеОрганизации", МетаданныеДокумента) Тогда
				ПодразделениеОснований = ТаблицаТекущихОснований[0].Значение.ПодразделениеОрганизации;
			КонецЕсли;
		КонецЕсли;
		
		ИспользоватьВалютныйУчет = ПолучитьФункциональнуюОпцию("ИспользоватьВалютныйУчет");
		Для Каждого СтрокаТаблицы Из ТаблицаТекущихОснований Цикл
			СтрокаДокументОснование = ДокументыОснования.Добавить();
			СтрокаДокументОснование.ДокументОснование	= СтрокаТаблицы.Значение;
			СтрокаДокументОснование.Договор				= Параметры.Отбор.Договор;
			Если ИспользоватьВалютныйУчет Тогда
				СтрокаДокументОснование.Валюта 			= Параметры.Отбор.Валюта;
			КонецЕсли;
			СтрокаДокументОснование.Подразделение 		= ПодразделениеОснований;
		КонецЦикла;
	
	КонецЕсли;
    
	Организация = Параметры.Отбор.Организация;
	Контрагент  = Параметры.Отбор.Контрагент;
	СчетФактура = Параметры.ЗначенияЗаполнения.СчетФактура;
	Исправление = Параметры.ЗначенияЗаполнения.Исправление;
	ВидСчетаФактуры = Параметры.ЗначенияЗаполнения.ВидСчетаФактуры;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПеренестиДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура ПеренестиДанные(Отказ = Ложь)
	
	ОчиститьСообщения();
	
	СписокДокументовОснований = Новый СписокЗначений;
	ПерваяСтрока = Истина;
	
	РазныеДоговора 		= Ложь;
	РазныеВалюты 		= Ложь;
	РазныеПодразделения	= Ложь;
	
	Для Индекс = 0 По ДокументыОснования.Количество() - 1 Цикл
		
		СтрокаТаблицы = ДокументыОснования[Индекс];
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 не выбран документ.'"),
				Индекс + 1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		Если СписокДокументовОснований.НайтиПоЗначению(СтрокаТаблицы.ДокументОснование) <> Неопределено
		 И ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 повторно указан документ %2.'"),
				Индекс + 1,
				СтрокаТаблицы.ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДокументыОснования[Индекс].ДокументОснование) Тогда 
			Если ПерваяСтрока Тогда
				
				Договор 		= ДокументыОснования[Индекс].Договор;
				Валюта 			= ДокументыОснования[Индекс].Валюта;
				Подразделение 	= ДокументыОснования[Индекс].Подразделение;
				
				ПерваяСтрока = Ложь;
				
			Иначе
				РазныеДоговора 		= РазныеДоговора ИЛИ Договор <> ДокументыОснования[Индекс].Договор;
				РазныеВалюты 		= РазныеВалюты ИЛИ Валюта <> ДокументыОснования[Индекс].Валюта;
				РазныеПодразделения	= РазныеПодразделения ИЛИ Подразделение <> ДокументыОснования[Индекс].Подразделение;
			КонецЕсли;
		КонецЕсли;
						
		СписокДокументовОснований.Добавить(СтрокаТаблицы.ДокументОснование);
		
	КонецЦикла;
	
	Если РазныеДоговора ИЛИ РазныеВалюты ИЛИ РазныеПодразделения Тогда
		
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='В список документов-оснований можно выбирать документы с одинаковым договором, валютой и подразделением'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ДокументыОснования"); 
		
	КонецЕсли;
				
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		ОповеститьОВыборе(СписокДокументовОснований);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура();
		
	СтруктураПараметров.Вставить("ПодобранныеОснования", Новый СписокЗначений);
	Для Каждого СтрокаТаблицы Из ДокументыОснования Цикл
		СтруктураПараметров.ПодобранныеОснования.Добавить(СтрокаТаблицы.ДокументОснование)
	КонецЦикла;
	
	СтруктураПараметров.Вставить("СчетФактура", СчетФактура);
	СтруктураПараметров.Вставить("ВидСчетаФактуры", ВидСчетаФактуры);
	СтруктураПараметров.Вставить("Исправление", Исправление);
	СтруктураПараметров.Вставить("ТипСчетаФактуры", "Выданный");
	СтруктураПараметров.Вставить("Исправление", Исправление);
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("Контрагент", Контрагент);
	СтрокаДокумента = Элементы.ДокументыОснования.ТекущиеДанные;
	ТекущийДокумент = Неопределено;
	Если СтрокаДокумента <> Неопределено Тогда 
		ТекущийДокумент = СтрокаДокумента.ДокументОснование;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ТекущийДокумент", ТекущийДокумент);
	
	ОткрытьФорму("Обработка.ПодборОснованийСчетаФактуры.Форма.ФормаПодбораОснованийСчетаФактуры", СтруктураПараметров, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ДокументыОснования.ТекущиеДанные;
	ТекСтрока.ДокументОснование = ВыбранноеЗначение.Документ;
	ЭлементКоллекции = ДокументыОснования.НайтиПоИдентификатору(ТекСтрока.ПолучитьИдентификатор());
	
	Если ЭлементКоллекции <> Неопределено Тогда 
		ЭлементКоллекции.Подразделение 	= ВыбранноеЗначение.Подразделение;
		ЭлементКоллекции.Договор 		= ВыбранноеЗначение.Договор;
		ЭлементКоллекции.Валюта 		= ВыбранноеЗначение.Валюта;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиДанные();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры