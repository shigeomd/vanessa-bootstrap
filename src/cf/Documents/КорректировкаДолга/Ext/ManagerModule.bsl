#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ТекстЗапросаСчетФактураВыданныйНалоговыйАгентРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДебиторскаяЗадолженность.Ссылка.Организация КАК Организация,
	|	ДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор КАК Контрагент,
	|	ДебиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДебиторскаяЗадолженность.КорДоговорКонтрагента.НаименованиеДляСчетаФактурыНаАванс КАК Номенклатура,
	|	ДебиторскаяЗадолженность.Ссылка.Дата КАК Дата,
	|	ДебиторскаяЗадолженность.Ссылка КАК ДокументОснование,
	|	ДебиторскаяЗадолженность.КорСчетУчетаРасчетов КАК СчетАвансов,
	|	СУММА(ДебиторскаяЗадолженность.СуммаВзаиморасчетов) КАК СуммаБезНДС
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	Документ.КорректировкаДолга.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.Ссылка = &ДокументОснование
	|	И ДебиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	ДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ДебиторскаяЗадолженность.КорДоговорКонтрагента,
	|	ДебиторскаяЗадолженность.Ссылка.Дата,
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.КорСчетУчетаРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3.НаименованиеДляСчетаФактурыНаАванс
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДебиторскаяЗадолженность.Ссылка.Дата,
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.Ссылка.СчетДт,
	|	СУММА(ДебиторскаяЗадолженность.СуммаВзаиморасчетов)
	|ИЗ
	|	Документ.КорректировкаДолга.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.Ссылка = &ДокументОснование
	|	И ДебиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|	И ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	ДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ДебиторскаяЗадолженность.КорДоговорКонтрагента,
	|	ДебиторскаяЗадолженность.Ссылка.Дата,
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.КорСчетУчетаРасчетов,
	|	ДебиторскаяЗадолженность.Ссылка.СчетДт,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3.НаименованиеДляСчетаФактурыНаАванс
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСчетФактураВыданныйНаАвансРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(КредиторскаяЗадолженность.СуммаВзаиморасчетов * 18 / 118) КАК СуммаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118) КАК СтавкаНДС,
	|	КредиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКонтрагента,
	|	КредиторскаяЗадолженность.КорДоговорКонтрагента.НаименованиеДляСчетаФактурыНаАванс КАК Номенклатура,
	|	СУММА(КредиторскаяЗадолженность.СуммаВзаиморасчетов) КАК Сумма,
	|	КредиторскаяЗадолженность.Ссылка.КонтрагентКредитор КАК Контрагент,
	|	КредиторскаяЗадолженность.Ссылка.Дата КАК Дата,
	|	КредиторскаяЗадолженность.Ссылка.Организация КАК Организация,
	|	КредиторскаяЗадолженность.Ссылка КАК ДокументОснование,
	|	КредиторскаяЗадолженность.КорСчетУчетаРасчетов КАК СчетАвансов,
	|	ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка) КАК СчетНаОплату
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	Документ.КорректировкаДолга.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|ГДЕ
	|	КредиторскаяЗадолженность.Ссылка = &ДокументОснование
	|	И КредиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	КредиторскаяЗадолженность.КорДоговорКонтрагента,
	|	КредиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	КредиторскаяЗадолженность.Ссылка.Дата,
	|	КредиторскаяЗадолженность.Ссылка.Организация,
	|	КредиторскаяЗадолженность.Ссылка,
	|	КредиторскаяЗадолженность.КорСчетУчетаРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(КредиторскаяЗадолженность.СуммаВзаиморасчетов * 18 / 118),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3.НаименованиеДляСчетаФактурыНаАванс
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ,
	|	СУММА(КредиторскаяЗадолженность.СуммаВзаиморасчетов),
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	КредиторскаяЗадолженность.Ссылка.Дата,
	|	КредиторскаяЗадолженность.Ссылка.Организация,
	|	КредиторскаяЗадолженность.Ссылка,
	|	КредиторскаяЗадолженность.Ссылка.СчетКт,
	|	ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка)
	|ИЗ
	|	Документ.КорректировкаДолга.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|ГДЕ
	|	КредиторскаяЗадолженность.Ссылка = &ДокументОснование
	|	И КредиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|	И ВЫБОР
	|			КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2.НаименованиеДляСчетаФактурыНаАванс
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3.НаименованиеДляСчетаФактурыНаАванс
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт1
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт2
	|		КОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА КредиторскаяЗадолженность.Ссылка.СубконтоКт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	КредиторскаяЗадолженность.Ссылка.Дата,
	|	КредиторскаяЗадолженность.Ссылка.Организация,
	|	КредиторскаяЗадолженность.Ссылка,
	|	КредиторскаяЗадолженность.Ссылка.СчетКт";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСчетФактураПолученныйНаАвансРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ДебиторскаяЗадолженность.СуммаВзаиморасчетов * 18 / 118) КАК СуммаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118) КАК СтавкаНДС,
	|	ДебиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СУММА(ДебиторскаяЗадолженность.СуммаВзаиморасчетов) КАК Сумма,
	|	ДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор КАК Контрагент,
	|	ДебиторскаяЗадолженность.Ссылка.Дата КАК Дата,
	|	ДебиторскаяЗадолженность.Ссылка.Организация КАК Организация,
	|	ДебиторскаяЗадолженность.Ссылка КАК ДокументОснование,
	|	ДебиторскаяЗадолженность.КорСчетУчетаРасчетов КАК СчетАвансов
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	Документ.КорректировкаДолга.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.Ссылка = &ДокументОснование
	|	И ДебиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДебиторскаяЗадолженность.КорДоговорКонтрагента,
	|	ДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ДебиторскаяЗадолженность.Ссылка.Дата,
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.КорСчетУчетаРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ДебиторскаяЗадолженность.СуммаВзаиморасчетов * 18 / 118),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	СУММА(ДебиторскаяЗадолженность.СуммаВзаиморасчетов),
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДебиторскаяЗадолженность.Ссылка.Дата,
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.Ссылка.СчетКт
	|ИЗ
	|	Документ.КорректировкаДолга.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.Ссылка = &ДокументОснование
	|	И ДебиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|	И ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт1
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт2
	|		КОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ДебиторскаяЗадолженность.Ссылка.СубконтоДт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДебиторскаяЗадолженность.Ссылка.Дата,
	|	ДебиторскаяЗадолженность.Ссылка.Организация,
	|	ДебиторскаяЗадолженность.Ссылка,
	|	ДебиторскаяЗадолженность.Ссылка.СчетКт";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

//Процедуры обновления документов "Корректировка долга". В зависимости от выбранных 
//в табличных частях видов договор, заполненности табличных частей и реквизита ИспользоватьВспомогательныйСчет
//устанавливаются реквизиты ВидОперации, ВидАвансаЗадолженност, ТипАвансаЗадолженности и прочие,
//связанные с ними реквизиты таким образом, чтобы результат перепроведения документа остался прежним,
//т.е. таким, каким был до обновления.
Процедура КонвертацияДокументаКорректировкаДолгаПоМоделиМетаданныхРелиза3020ИСтарше(Объект) Экспорт
	
	ВидДоговораСПокупателем = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	ВидДоговораСПоставщиком = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	ВидДоговораПрочее       = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
	
	СтруктураНовыхРеквизитовДокумента = Новый Структура;
	
	КоличествоДебиторки  = Объект.ДебиторскаяЗадолженность.Количество();
	КоличествоКредиторки = Объект.КредиторскаяЗадолженность.Количество();
	
	Если ЗначениеЗаполнено(Объект.УдалитьДоговорКонтрагента) Тогда
		СтруктураНовыхРеквизитовДокумента.Вставить("УдалитьДоговорКонтрагента", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	
	СтруктураНовыхРеквизитовДокумента.Вставить("ИспользоватьВспомогательныйСчет", Ложь);
		
	Если Объект.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.УдалитьПроведениеВзаимозачета Тогда
		
		Если Объект.ИспользоватьВспомогательныйСчет Тогда
			
			СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
			
			СтруктураНовыхРеквизитовДокумента.Вставить("СчетКт",      Объект.СчетДт);
			СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт1", Объект.СубконтоДт1);
			СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт2", Объект.СубконтоДт2);
			СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт3", Объект.СубконтоДт3);
			
		Иначе
			
			ПризнакВидаОперацииПрочее = Ложь;
			
			ВидДоговораДебиторки = Неопределено;
			ВидДоговораКредиторки = Неопределено;
			
			МаксимальноеКоличество = Макс(КоличествоДебиторки, КоличествоКредиторки) - 1;
			
			Для Сч = 0 по МаксимальноеКоличество Цикл
				
				Если Сч <= (КоличествоДебиторки - 1) Тогда
					
					СтрокаДебиторки = Объект.ДебиторскаяЗадолженность[Сч];
					
					ВидДоговораДебиторкиТекущий = СтрокаДебиторки.ДоговорКонтрагента.ВидДоговора;
					
					Если ВидДоговораДебиторкиТекущий = ВидДоговораПрочее Тогда
						
						ПризнакВидаОперацииПрочее = Истина;
						Прервать;
						
					КонецЕсли;	
					
					Если ВидДоговораДебиторкиТекущий = ВидДоговораСПокупателем 
						или ВидДоговораДебиторкиТекущий = ВидДоговораСПоставщиком Тогда
						
						Если ВидДоговораДебиторки = Неопределено Тогда
							ВидДоговораДебиторки = ВидДоговораДебиторкиТекущий;
						Иначе
							
							Если ВидДоговораДебиторки <> ВидДоговораДебиторкиТекущий Тогда
								
								ПризнакВидаОперацииПрочее = Истина;
								Прервать;
								
							КонецЕсли;	
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если Сч <= (КоличествоКредиторки - 1) Тогда
					
					СтрокаКредиторки = Объект.КредиторскаяЗадолженность[Сч];
					
					ВидДоговораКредиторкиТекущий = СтрокаКредиторки.ДоговорКонтрагента.ВидДоговора;
					
					Если ВидДоговораКредиторкиТекущий = ВидДоговораПрочее Тогда
						
						ПризнакВидаОперацииПрочее = Истина;
						Прервать;
						
					КонецЕсли;	
					
					Если ВидДоговораКредиторкиТекущий = ВидДоговораСПокупателем 
						или ВидДоговораКредиторкиТекущий = ВидДоговораСПоставщиком Тогда
						
						Если ВидДоговораКредиторки = Неопределено Тогда
							ВидДоговораКредиторки = ВидДоговораКредиторкиТекущий;
						Иначе
							
							Если ВидДоговораКредиторки <> ВидДоговораКредиторкиТекущий Тогда
								
								ПризнакВидаОперацииПрочее = Истина;
								Прервать;
								
							КонецЕсли;	
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПризнакВидаОперацииПрочее Тогда
				СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
			Иначе
				
				Если НЕ ВидДоговораКредиторки = Неопределено и НЕ ВидДоговораДебиторки = Неопределено Тогда
					
					Если ВидДоговораКредиторки = ВидДоговораДебиторки Тогда
						
						Если ВидДоговораКредиторки = ВидДоговораСПокупателем Тогда
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПокупателя);
							
						Иначе
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПоставщику);
							
						КонецЕсли;	
						
						Если Объект.КонтрагентДебитор = Объект.КонтрагентКредитор Тогда
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.СамогоКонтрагента);
						Иначе
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.ТретьегоЛица);
						КонецЕсли;
						
					Иначе
						
						Если ВидДоговораКредиторки = ВидДоговораСПокупателем 
							и ВидДоговораДебиторки = ВидДоговораСПоставщиком Тогда
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
						Иначе
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
							
							Если Объект.КонтрагентДебитор = Объект.КонтрагентКредитор Тогда
								СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.СамогоКонтрагента);
							Иначе
								СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.ТретьегоЛица);
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе
					
					Если НЕ ВидДоговораКредиторки = Неопределено 
						и ВидДоговораДебиторки = Неопределено Тогда
						
						Если ВидДоговораКредиторки = ВидДоговораСПокупателем Тогда
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПокупателя);
							
						Иначе
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПоставщику);
							
						КонецЕсли;
						
						Если Объект.КонтрагентДебитор = Объект.КонтрагентКредитор Тогда
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.СамогоКонтрагента);
						Иначе
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.ТретьегоЛица);
						КонецЕсли;
						
					ИначеЕсли ВидДоговораКредиторки = Неопределено 
						и НЕ ВидДоговораДебиторки = Неопределено Тогда
						
						Если ВидДоговораДебиторки = ВидДоговораСПокупателем Тогда
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
							
						Иначе
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов);
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПоставщику);
							
						КонецЕсли;
						
						Если Объект.КонтрагентДебитор = Объект.КонтрагентКредитор Тогда
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.СамогоКонтрагента);
						Иначе
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.ТретьегоЛица);
						КонецЕсли;
						
					Иначе
						
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности);
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
						
						Если Объект.КонтрагентДебитор = Объект.КонтрагентКредитор Тогда
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.СамогоКонтрагента);
						Иначе
							СтруктураНовыхРеквизитовДокумента.Вставить("ТипАвансаЗадолженности", Перечисления.ТипыЗадолженности.ТретьегоЛица);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности Тогда
		
		ВидДоговораШапки = Объект.УдалитьДоговорКонтрагента.ВидДоговора;
		
		ВалютаДоговораШапки = Объект.УдалитьДоговорКонтрагента.ВалютаВзаиморасчетов;
		
		Если ВидДоговораШапки = ВидДоговораПрочее 
			или (ВалютаДоговораШапки <> Объект.ВалютаДокумента и НЕ Объект.УдалитьДоговорКонтрагента.РасчетыВУсловныхЕдиницах) Тогда
			
			СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
			
			Если КоличествоДебиторки > 0 Тогда
				
				КоллекцияСубконтоСчета = Объект.СчетДт.ВидыСубконто;
				
				КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
				
				Для Сч = 0 по КоличествоСубконтоСчета Цикл
					
					Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.КонтрагентКредитор);
					ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				
				СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентДебитор", Справочники.Контрагенты.ПустаяСсылка());
				СтруктураНовыхРеквизитовДокумента.Вставить("СчетДт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
				
			КонецЕсли;
			
			Если КоличествоКредиторки > 0 Тогда
				
				СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Объект.КонтрагентДебитор);
				
				КоллекцияСубконтоСчета = Объект.СчетКт.ВидыСубконто;
				
				КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
				
				Для Сч = 0 по КоличествоСубконтоСчета Цикл
					
					Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.КонтрагентКредитор);
					ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				
				СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Справочники.Контрагенты.ПустаяСсылка());
				СтруктураНовыхРеквизитовДокумента.Вставить("СчетКт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
				
			КонецЕсли;
			
		Иначе	
			
			Если НЕ ВидДоговораШапки = ВидДоговораСПокупателем и НЕ ВидДоговораШапки = ВидДоговораСПоставщиком Тогда
				ВидДоговораШапки = Неопределено;
			КонецЕсли;	
			
			Если КоличествоКредиторки > 0 
				и КоличествоДебиторки > 0 Тогда
				
				СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
				СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Объект.КонтрагентДебитор);
				
				КоллекцияСубконтоСчета = Объект.СчетДт.ВидыСубконто;
				
				КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
				
				Для Сч = 0 по КоличествоСубконтоСчета Цикл
					
					Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.КонтрагентКредитор);
					ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
					КонецЕсли;
					
				КонецЦикла;
				
				КоллекцияСубконтоСчета = Объект.СчетКт.ВидыСубконто;
				
				КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
				
				Для Сч = 0 по КоличествоСубконтоСчета Цикл
					
					Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.КонтрагентКредитор);
					ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе 
				
				Если КоличествоКредиторки > 0 Тогда
					
					ПризнакВидаОперацииПрочее = Ложь;
					
					ВидДоговора    = Неопределено;
					
					МаксимальноеКоличество = КоличествоКредиторки - 1;
					
					Для Сч = 0 по МаксимальноеКоличество Цикл
						
						СтрокаТабличнойЧасти = Объект.КредиторскаяЗадолженность[Сч];
						
						ВидДоговораТекущий = СтрокаТабличнойЧасти.ДоговорКонтрагента.ВидДоговора;
						
						Если ВидДоговораТекущий = ВидДоговораПрочее Тогда
							
							ПризнакВидаОперацииПрочее = Истина;
							Прервать;
							
						КонецЕсли;	
						
						Если ВидДоговораТекущий = ВидДоговораСПокупателем 
							или ВидДоговораТекущий = ВидДоговораСПоставщиком Тогда
							
							Если ВидДоговора = Неопределено Тогда
								ВидДоговора = ВидДоговораТекущий;
							Иначе
								
								Если ВидДоговора <> ВидДоговораТекущий Тогда
									
									ПризнакВидаОперацииПрочее = Истина;
									Прервать;
									
								КонецЕсли;	
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
					Если ПризнакВидаОперацииПрочее Тогда
						
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
						СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Объект.КонтрагентДебитор);
						СтруктураНовыхРеквизитовДокумента.Вставить("СчетДт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
						СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентДебитор", Справочники.Контрагенты.ПустаяСсылка());
						
						КоллекцияСубконтоСчета = Объект.СчетКт.ВидыСубконто;
						
						КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
						
						Для Сч = 0 по КоличествоСубконтоСчета Цикл
							
							Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
								СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.КонтрагентКредитор);
							ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
								СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						
						Если ВидДоговора <> ВидДоговораШапки  и НЕ ВидДоговораШапки = Неопределено Тогда
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
							СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Объект.КонтрагентДебитор);
							СтруктураНовыхРеквизитовДокумента.Вставить("СчетДт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
							СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентДебитор", Справочники.Контрагенты.ПустаяСсылка());
							
							КоллекцияСубконтоСчета = Объект.СчетКт.ВидыСубконто;
							
							КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
							
							Для Сч = 0 по КоличествоСубконтоСчета Цикл
								
								Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
									СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.КонтрагентКредитор);
								ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
									СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоКт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
								КонецЕсли;
								
							КонецЦикла;
							
						Иначе	
							
							Если ВидДоговора = ВидДоговораСПокупателем Тогда
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПокупателя);
								
								СтруктураТабличнойЧасти = Новый Структура;
								
								СтруктураТабличнойЧасти.Вставить("КорДоговорКонтрагента", Объект.УдалитьДоговорКонтрагента);
								СтруктураТабличнойЧасти.Вставить("КорСчетУчетаРасчетов", Объект.СчетКт);
								
								СтруктураНовыхРеквизитовДокумента.Вставить("КредиторскаяЗадолженность", СтруктураТабличнойЧасти);
								
							ИначеЕсли ВидДоговора = ВидДоговораСПоставщиком Тогда
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПоставщику);
								
								СтруктураТабличнойЧасти = Новый Структура;
								
								СтруктураТабличнойЧасти.Вставить("КорДоговорКонтрагента", Объект.УдалитьДоговорКонтрагента);
								СтруктураТабличнойЧасти.Вставить("КорСчетУчетаРасчетов", Объект.СчетКт);
								
								СтруктураНовыхРеквизитовДокумента.Вставить("КредиторскаяЗадолженность", СтруктураТабличнойЧасти);
								
							Иначе
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПоставщику);
								
								СтруктураТабличнойЧасти = Новый Структура;
								
								СтруктураТабличнойЧасти.Вставить("КорДоговорКонтрагента", Объект.УдалитьДоговорКонтрагента);
								СтруктураТабличнойЧасти.Вставить("КорСчетУчетаРасчетов", Объект.СчетКт);
								
								СтруктураНовыхРеквизитовДокумента.Вставить("КредиторскаяЗадолженность", СтруктураТабличнойЧасти);
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе
					
					ПризнакВидаОперацииПрочее = Ложь;
					
					ВидДоговора    = Неопределено;
					
					МаксимальноеКоличество = КоличествоДебиторки - 1;
					
					Для Сч = 0 по МаксимальноеКоличество Цикл
						
						СтрокаТабличнойЧасти = Объект.ДебиторскаяЗадолженность[Сч];
						
						ВидДоговораТекущий = СтрокаТабличнойЧасти.ДоговорКонтрагента.ВидДоговора;
						
						Если ВидДоговораТекущий = ВидДоговораПрочее Тогда
							
							ПризнакВидаОперацииПрочее = Истина;
							Прервать;
							
						КонецЕсли;	
						
						Если ВидДоговораТекущий = ВидДоговораСПокупателем 
							или ВидДоговораТекущий = ВидДоговораСПоставщиком Тогда
							
							Если ВидДоговора = Неопределено Тогда
								ВидДоговора = ВидДоговораТекущий;
							Иначе
								
								Если ВидДоговора <> ВидДоговораТекущий Тогда
									
									ПризнакВидаОперацииПрочее = Истина;
									Прервать;
									
								КонецЕсли;	
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
					Если ПризнакВидаОперацииПрочее Тогда
						
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
						СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Справочники.Контрагенты.ПустаяСсылка());
						СтруктураНовыхРеквизитовДокумента.Вставить("СчетКт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
						
						КоллекцияСубконтоСчета = Объект.СчетДт.ВидыСубконто;
						
						КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
						
						Для Сч = 0 по КоличествоСубконтоСчета Цикл
							
							Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
								СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.КонтрагентКредитор);
							ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
								СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						
						Если ВидДоговора <> ВидДоговораШапки  и НЕ ВидДоговораШапки = Неопределено Тогда
							
							СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
							СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Справочники.Контрагенты.ПустаяСсылка());
							СтруктураНовыхРеквизитовДокумента.Вставить("СчетКт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
							
							КоллекцияСубконтоСчета = Объект.СчетДт.ВидыСубконто;
							
							КоличествоСубконтоСчета = КоллекцияСубконтоСчета.Количество() - 1;
							
							Для Сч = 0 по КоличествоСубконтоСчета Цикл
								
								Если КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
									СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.КонтрагентКредитор);
								ИначеЕсли КоллекцияСубконтоСчета[Сч].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
									СтруктураНовыхРеквизитовДокумента.Вставить("СубконтоДт"+(Сч + 1), Объект.УдалитьДоговорКонтрагента);
								КонецЕсли;
								
							КонецЦикла;
							
						Иначе	
							
							Если ВидДоговора = ВидДоговораСПокупателем Тогда
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
								
								СтруктураТабличнойЧасти = Новый Структура;
								
								СтруктураТабличнойЧасти.Вставить("КорДоговорКонтрагента", Объект.УдалитьДоговорКонтрагента);
								СтруктураТабличнойЧасти.Вставить("КорСчетУчетаРасчетов", Объект.СчетДт);
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ДебиторскаяЗадолженность", СтруктураТабличнойЧасти);
								
							ИначеЕсли ВидДоговора = ВидДоговораСПоставщиком Тогда
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПоставщику);
								
								СтруктураТабличнойЧасти = Новый Структура;
								
								СтруктураТабличнойЧасти.Вставить("КорДоговорКонтрагента", Объект.УдалитьДоговорКонтрагента);
								СтруктураТабличнойЧасти.Вставить("КорСчетУчетаРасчетов", Объект.СчетДт);
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ДебиторскаяЗадолженность", СтруктураТабличнойЧасти);
								
							Иначе
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
								
								СтруктураТабличнойЧасти = Новый Структура;
								
								СтруктураТабличнойЧасти.Вставить("КорДоговорКонтрагента", Объект.УдалитьДоговорКонтрагента);
								СтруктураТабличнойЧасти.Вставить("КорСчетУчетаРасчетов", Объект.СчетДт);
								
								СтруктураНовыхРеквизитовДокумента.Вставить("ДебиторскаяЗадолженность", СтруктураТабличнойЧасти);
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если КоличествоКредиторки > 0 
			и КоличествоДебиторки > 0 Тогда
			
			СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
			СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Объект.КонтрагентДебитор);
			
		Иначе
			
			Если КоличествоДебиторки > 0 Тогда
				
				ПризнакВидаОперацииПрочее = Ложь;
				
				ВидДоговора    = Неопределено;
				
				МаксимальноеКоличество = КоличествоДебиторки - 1;
				
				Для Сч = 0 по МаксимальноеКоличество Цикл
					
					СтрокаТабличнойЧасти = Объект.ДебиторскаяЗадолженность[Сч];
					
					ВидДоговораТекущий = СтрокаТабличнойЧасти.ДоговорКонтрагента.ВидДоговора;
					
					Если ВидДоговораТекущий = ВидДоговораПрочее Тогда
						
						ПризнакВидаОперацииПрочее = Истина;
						Прервать;
						
					КонецЕсли;	
					
					Если ВидДоговораТекущий = ВидДоговораСПокупателем 
						или ВидДоговораТекущий = ВидДоговораСПоставщиком Тогда
						
						Если ВидДоговора = Неопределено Тогда
							ВидДоговора = ВидДоговораТекущий;
						Иначе
							
							Если ВидДоговора <> ВидДоговораТекущий Тогда
								
								ПризнакВидаОперацииПрочее = Истина;
								Прервать;
								
							КонецЕсли;	
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если ПризнакВидаОперацииПрочее Тогда
					
					СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
					СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Справочники.Контрагенты.ПустаяСсылка());
					СтруктураНовыхРеквизитовДокумента.Вставить("СчетКт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
					
				Иначе
					
					Если ВидДоговора = ВидДоговораСПокупателем Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
					ИначеЕсли ВидДоговора = ВидДоговораСПоставщиком Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПоставщику);
					Иначе
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПокупателя);
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				ПризнакВидаОперацииПрочее = Ложь;
				
				ВидДоговора    = Неопределено;
				
				МаксимальноеКоличество = КоличествоКредиторки - 1;
				
				Для Сч = 0 по МаксимальноеКоличество Цикл
					
					СтрокаТабличнойЧасти = Объект.КредиторскаяЗадолженность[Сч];
					
					ВидДоговораТекущий = СтрокаТабличнойЧасти.ДоговорКонтрагента.ВидДоговора;
					
					Если ВидДоговораТекущий = ВидДоговораПрочее Тогда
						
						ПризнакВидаОперацииПрочее = Истина;
						Прервать;
						
					КонецЕсли;	
					
					Если ВидДоговораТекущий = ВидДоговораСПокупателем 
						или ВидДоговораТекущий = ВидДоговораСПоставщиком Тогда
						
						Если ВидДоговора = Неопределено Тогда
							ВидДоговора = ВидДоговораТекущий;
						Иначе
							
							Если ВидДоговора <> ВидДоговораТекущий Тогда
								
								ПризнакВидаОперацииПрочее = Истина;
								Прервать;
								
							КонецЕсли;	
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если ПризнакВидаОперацииПрочее Тогда
					
					СтруктураНовыхРеквизитовДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийКорректировкаДолга.Прочее);
					СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентКредитор", Объект.КонтрагентДебитор);
					СтруктураНовыхРеквизитовДокумента.Вставить("КонтрагентДебитор", Справочники.Контрагенты.ПустаяСсылка());
					СтруктураНовыхРеквизитовДокумента.Вставить("СчетДт", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
					
				Иначе
					
					Если ВидДоговора = ВидДоговораСПокупателем Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.АвансыПокупателя);
					ИначеЕсли ВидДоговора = ВидДоговораСПоставщиком Тогда
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПоставщику);
					Иначе
						СтруктураНовыхРеквизитовДокумента.Вставить("ВидАвансаЗадолженности", Перечисления.ВидыАвансаЗадолженности.ЗадолженностьПоставщику);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЕсли;
	
	Если СтруктураНовыхРеквизитовДокумента.Количество() > 0 Тогда
		
		Для Каждого ЭлементСтруктуры Из СтруктураНовыхРеквизитовДокумента Цикл
			
			Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("Структура") Тогда
				
				ТабличнаяЧасть = Объект[ЭлементСтруктуры.Ключ];
				
				Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
					
					Для Каждого ЭлементСтруктурыВложенной Из ЭлементСтруктуры.Значение Цикл
						СтрокаТабличнойЧасти[ЭлементСтруктурыВложенной.Ключ] = ЭлементСтруктурыВложенной.Значение;
					КонецЦикла;
					
				КонецЦикла;
				
			Иначе
				Объект[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;
			КонецЕсли;
			
		КонецЦикла;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
		
КонецПроцедуры		

// Возвращает курс аванса, рассчитанный как частное от деления
// рублевого остатка по договору на валютный.
//
Функция ПолучитьКурсВалютыАванса(Договор, Организация, ДатаКурса, КурсДокумента = 1) Экспорт
	
	ПорядокСубконто = Новый Массив;
	ПорядокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ПорядокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаКурса", ДатаКурса);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Контрагент", Договор.Владелец);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПорядокСубконто", ПорядокСубконто);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасчетов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчикамиВал))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаКурса,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчетаРасчетов.Счет
	|				ИЗ
	|					ВТ_СчетаУчетаРасчетов),
	|			&ПорядокСубконто,
	|			Субконто1 = &Контрагент
	|				И Субконто2 = &Договор
	|				И Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат КурсДокумента;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат ?(Выборка.ВалютнаяСуммаОстаток = 0, КурсДокумента, Окр(Выборка.СуммаОстаток / Выборка.ВалютнаяСуммаОстаток, 4));
		
	КонецЕсли;
	
КонецФункции

// Заполняет документ остатками взаиморасчетов по контрагенту
//
Процедура ЗаполнитьОстаткамиВзаиморасчетов(ДокументОбъект, ПоКонтрагенту, ВидЗадолженности, ЭтоНовый, МассивВидовДоговоров = Неопределено) Экспорт

	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	СчетаРасчетов = Новый Массив();
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);

	СчетаИсключаемые = Новый Массив();
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.ВекселяВыданные);
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.ВекселяПолученные);
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИмущественномуЛичномуИДобровольномуСтрахованию);
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам);
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНДСотложенномуДляУплатыВБюджет);
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ХозрасчетныйВидыСубконто.ВидСубконто = &ВидСубконтоКонтрагенты
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьКонтрагенты,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ХозрасчетныйВидыСубконто.ВидСубконто = &ВидСубконтоДоговоры
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьДоговоры,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ХозрасчетныйВидыСубконто.ВидСубконто = &ВидСубконтоДокументыРасчетов
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьДокументыРасчетов
	|ПОМЕСТИТЬ НаличиеНужныхСубконто
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйВидыСубконто.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НаличиеНужныхСубконто.ЕстьДокументыРасчетов = 1
	|			ТОГДА Хозрасчетный.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетаПоДокументам,
	|	ВЫБОР
	|		КОГДА НаличиеНужныхСубконто.ЕстьДокументыРасчетов = 0
	|			ТОГДА Хозрасчетный.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетаБезДокументов,
	|	НаличиеНужныхСубконто.ЕстьДокументыРасчетов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаличиеНужныхСубконто КАК НаличиеНужныхСубконто
	|		ПО Хозрасчетный.Ссылка = НаличиеНужныхСубконто.Ссылка
	|ГДЕ
	|	НаличиеНужныхСубконто.ЕстьКонтрагенты = 1
	|	И НаличиеНужныхСубконто.ЕстьДоговоры = 1
	|	И Хозрасчетный.ЗапретитьИспользоватьВПроводках = ЛОЖЬ
	|	И Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасчетов)
	|	И (НЕ Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетаИсключаемые))";

	Запрос.УстановитьПараметр("СчетаРасчетов", СчетаРасчетов);
	Запрос.УстановитьПараметр("СчетаИсключаемые", СчетаИсключаемые);
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("ВидСубконтоДоговоры", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("ВидСубконтоДокументыРасчетов", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);

	СчетаУчетаРасчетов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);

	СчетаРасчетовБезАналитикиПоДокументам = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(СчетаУчетаРасчетов.ВыгрузитьКолонку("СчетаБезДокументов"),Истина);
	СчетаРасчетовСАналитикойПоДокументам = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(СчетаУчетаРасчетов.ВыгрузитьКолонку("СчетаПоДокументам"),Истина);

	Запрос = Новый Запрос;

	Запрос.Текст = "";	

	Если СчетаРасчетовБезАналитикиПоДокументам.Количество() <> 0 Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетов,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора КАК ВидДоговора,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|		&Период,
		|		Счет В (&СчетаРасчетовБезАналитикиПоДокументам),
		|		&ВидыСубконтоБезДокументов,
		|		Организация = &Организация
		|		    И Субконто1 = &Контрагент) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ВалютаДокумента В (&ВалютаРегУчета)
		|				ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах = ИСТИНА
		|						ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов В (&ВалютаРегУчета)
		|			ИНАЧЕ (НЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов В (&ВалютаРегУчета))
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах = ИСТИНА
		|					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов В (&ВалютаРегУчета)
		|				ТОГДА ВЫБОР
		|						КОГДА &ВидЗадолженности = &ВидЗадолженностиДебиторская
		|							ТОГДА ХозрасчетныйОстатки.СуммаОстаток > 0
		|						ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток < 0
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА &ВидЗадолженности = &ВидЗадолженностиДебиторская
		|						ТОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстаток > 0
		|					ИНАЧЕ ХозрасчетныйОстатки.ВалютнаяСуммаОстаток < 0
		|				КОНЕЦ
		|		КОНЕЦ"
	КонецЕсли;

	Если СчетаРасчетовСАналитикойПоДокументам.Количество() <> 0 Тогда

		Запрос.Текст = ?(ПустаяСтрока(Запрос.Текст), "", Запрос.Текст + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" +Символы.ПС)+
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
		|	ХозрасчетныйОстатки.Субконто3 КАК ДокументРасчетов,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора КАК ВидДоговора,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|		&Период,
		|		Счет В (&СчетаРасчетовСАналитикойПоДокументам),
		|		&ВидыСубконтоСДокументами,
		|		Организация = &Организация
		|		    И Субконто1 = &Контрагент) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ВалютаДокумента В (&ВалютаРегУчета)
		|				ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах = ИСТИНА
		|						ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов В (&ВалютаРегУчета)
		|			ИНАЧЕ (НЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов В (&ВалютаРегУчета))
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах = ИСТИНА
		|					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВалютаВзаиморасчетов В (&ВалютаРегУчета)
		|				ТОГДА ВЫБОР
		|						КОГДА &ВидЗадолженности = &ВидЗадолженностиДебиторская
		|							ТОГДА ХозрасчетныйОстатки.СуммаОстаток > 0
		|						ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток < 0
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА &ВидЗадолженности = &ВидЗадолженностиДебиторская
		|						ТОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстаток > 0
		|					ИНАЧЕ ХозрасчетныйОстатки.ВалютнаяСуммаОстаток < 0
		|				КОНЕЦ
		|		КОНЕЦ";

	КонецЕсли;
	
	Если НЕ МассивВидовДоговоров = Неопределено Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|	И ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидДоговора В (&МассивВидовДоговоров)";
		
	КонецЕсли;	
	
	Если ЭтоНовый Тогда
		Запрос.УстановитьПараметр("Период", Новый МоментВремени(КонецДня(ДокументОбъект.Дата), ДокументОбъект.Ссылка));
	Иначе
		Запрос.УстановитьПараметр("Период", Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация",				  ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Контрагент", 				  ПоКонтрагенту);
	Запрос.УстановитьПараметр("ВидЗадолженности", 			  ВидЗадолженности);
	Запрос.УстановитьПараметр("ВидЗадолженностиДебиторская",  Перечисления.ВидыЗадолженности.Дебиторская);
	Запрос.УстановитьПараметр("ВидЗадолженностиКредиторская", Перечисления.ВидыЗадолженности.Кредиторская);
	Запрос.УстановитьПараметр("МассивВидовДоговоров",         МассивВидовДоговоров);
	
	СписокВалютыРеглУчета = Новый СписокЗначений;
	СписокВалютыРеглУчета.Добавить(ВалютаРеглУчета);
	СписокВалютыРеглУчета.Добавить(Справочники.Валюты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВалютаРегУчета",  СписокВалютыРеглУчета);
	Запрос.УстановитьПараметр("ВалютаДокумента", ДокументОбъект.ВалютаДокумента);

	Если СписокВалютыРеглУчета.НайтиПоЗначению(ДокументОбъект.ВалютаДокумента) = Неопределено Тогда
		//Документ в иностранной валюте. Установим отбор только по договорам в нужной валюте
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Организация = &Организация","Организация = &Организация и Валюта = &ВалютаДокумента");
	КонецЕсли;

	Запрос.УстановитьПараметр("СчетаРасчетовБезАналитикиПоДокументам",СчетаРасчетовБезАналитикиПоДокументам);
	Запрос.УстановитьПараметр("СчетаРасчетовСАналитикойПоДокументам", СчетаРасчетовСАналитикойПоДокументам);

	ВидыСубконтоБезДокументов = Новый Массив();
	ВидыСубконтоБезДокументов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоБезДокументов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);

	Запрос.УстановитьПараметр("ВидыСубконтоБезДокументов",ВидыСубконтоБезДокументов);

	ВидыСубконтоСДокументами = Новый Массив();
	ВидыСубконтоСДокументами.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоСДокументами.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидыСубконтоСДокументами.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);

	Запрос.УстановитьПараметр("ВидыСубконтоСДокументами", ВидыСубконтоСДокументами);

	ТекущийРезультат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	Множитель = ?(ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская,1,-1);
	Для каждого СтрокаОстатков Из ТекущийРезультат Цикл
		Если ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
		    НоваяСтрока = ДокументОбъект.ДебиторскаяЗадолженность.Добавить();
		Иначе
		    НоваяСтрока = ДокументОбъект.КредиторскаяЗадолженность.Добавить();
		КонецЕсли;
		НоваяСтрока.ДоговорКонтрагента = СтрокаОстатков.Договор;
		НоваяСтрока.Сделка = СтрокаОстатков.ДокументРасчетов;
		НоваяСтрока.СчетУчетаРасчетов = СтрокаОстатков.Счет;
		
		НоваяСтрока.СуммаВзаиморасчетов = Множитель*СтрокаОстатков.ВалютнаяСуммаОстаток;
		
		ДокументВВалюте          = СписокВалютыРеглУчета.НайтиПоЗначению(ДокументОбъект.ВалютаДокумента) = Неопределено;
		ДокументВРубляхРасчетыУЕ = СписокВалютыРеглУчета.НайтиПоЗначению(СтрокаОстатков.ВалютаВзаиморасчетов) = Неопределено;
		
		ОбязательстваВВалюте = Ложь;
		
		Если ДокументВВалюте Тогда
			ОбязательстваВВалюте = Истина;
		Иначе
			Если ДокументВРубляхРасчетыУЕ Тогда
				ОбязательстваВВалюте = Истина;
			КонецЕсли;
		КонецЕсли;	
		
		Если ОбязательстваВВалюте Тогда
		
			Если ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
				ЭтоАванс = СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком 
				ИЛИ (СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
				ИЛИ СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку
				ИЛИ СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером
				ИЛИ СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку)
				И (БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СтрокаОстатков.Счет, ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
				ИЛИ БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СтрокаОстатков.Счет, ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал));
			Иначе
				ЭтоАванс = СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем
				ИЛИ (СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
				ИЛИ СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку
				ИЛИ СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером
				ИЛИ СтрокаОстатков.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку)
				И (БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СтрокаОстатков.Счет, ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками)
				ИЛИ БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СтрокаОстатков.Счет, ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчикамиВал));
			КонецЕсли;
			
			Если ЭтоАванс Тогда
				
				НоваяСтрока.КурсВзаиморасчетов = ?(СтрокаОстатков.ВалютнаяСуммаОстаток = 0, НоваяСтрока.КурсВзаиморасчетов, Окр(СтрокаОстатков.СуммаОстаток / СтрокаОстатков.ВалютнаяСуммаОстаток, 4));
				НоваяСтрока.КратностьВзаиморасчетов = 1;
				
			Иначе
				
				Если СписокВалютыРеглУчета.НайтиПоЗначению(ДокументОбъект.ВалютаДокумента) = Неопределено Тогда
				
					НоваяСтрока.КурсВзаиморасчетов = ДокументОбъект.КурсДокумента;
					НоваяСтрока.КратностьВзаиморасчетов = ДокументОбъект.КратностьДокумента;
					
				Иначе
					
					КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СтрокаОстатков.ВалютаВзаиморасчетов, ДокументОбъект.Дата);
					
					НоваяСтрока.КурсВзаиморасчетов = КурсИКратность.Курс;
					НоваяСтрока.КратностьВзаиморасчетов = КурсИКратность.Кратность;
					
				КонецЕсли;	
				
			КонецЕсли;
			
			Если СтрокаОстатков.РасчетыВУсловныхЕдиницах Тогда
				
				Если ЭтоАванс Тогда
					НоваяСтрока.Сумма = Множитель*СтрокаОстатков.СуммаОстаток;
				Иначе	
					
					НоваяСтрока.Сумма = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(НоваяСтрока.СуммаВзаиморасчетов,
					СтрокаОстатков.ВалютаВзаиморасчетов, ВалютаРеглУчета,
					НоваяСтрока.КурсВзаиморасчетов, 1,
					НоваяСтрока.КратностьВзаиморасчетов, 1);
					
				КонецЕсли;	
				
			Иначе
				НоваяСтрока.Сумма = НоваяСтрока.СуммаВзаиморасчетов;
			КонецЕсли;

		Иначе
			
			НоваяСтрока.СуммаВзаиморасчетов 	= Множитель * СтрокаОстатков.СуммаОстаток;
			НоваяСтрока.КурсВзаиморасчетов 		= 1;
			НоваяСтрока.КратностьВзаиморасчетов = 1;
			
			НоваяСтрока.Сумма = Множитель*СтрокаОстатков.СуммаОстаток;
			
		КонецЕсли;
		
		Если ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности Тогда
			НоваяСтрока.СуммаНУ = НоваяСтрока.Сумма;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьДоговорКонтрагента");
	
	Возврат МассивРеквизитов;
	
КонецФункции

Функция ПодготовитьСтруктуруДляСуммовыхРазниц(СтруктураТаблиц, Отказ) Экспорт;
	
	Если СтруктураТаблиц = Неопределено Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	
	Для Каждого ЭлементСтруктуры Из СтруктураТаблиц Цикл
		
		КлючИсходнойТаблицы = ЭлементСтруктуры.Ключ;
		
		ИсходнаяТаблица = ЭлементСтруктуры.Значение;
		
		ТаблицаДляСуммовыхРазниц = УчетВзаиморасчетов.ПустаяТаблицаВзаимозачет();
		
		Для Каждого СтрокаТаблицы Из ИсходнаяТаблица Цикл
			
			Если СтрокаТаблицы.Разница <> 0 Тогда
				
				НоваяСтрока = ТаблицаДляСуммовыхРазниц.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				
			КонецЕсли;
			
			Если СтрокаТаблицы.КорРазница <> 0 Тогда
				
				НоваяСтрока = ТаблицаДляСуммовыхРазниц.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				
				НоваяСтрока.Контрагент           = НоваяСтрока.КорСубконто1;
				НоваяСтрока.ДоговорКонтрагента   = НоваяСтрока.КорСубконто2;
				НоваяСтрока.ДокументРасчетов     = НоваяСтрока.КорСубконто3;
				НоваяСтрока.СчетРасчетов         = НоваяСтрока.СчетРасчетов;
				НоваяСтрока.Разница              = НоваяСтрока.КорРазница;
				НоваяСтрока.Подразделение        = НоваяСтрока.КорПодразделение;
				НоваяСтрока.ВалютаВзаиморасчетов = НоваяСтрока.КорВалютаВзаиморасчетов;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтруктураВозврата.Вставить(КлючИсходнойТаблицы, ИсходнаяТаблица);
		СтруктураВозврата.Вставить(КлючИсходнойТаблицы+"СуммовыеРазницы", ТаблицаДляСуммовыхРазниц);
		
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|   Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.СчетДт КАК СчетДт,
	|	Реквизиты.СубконтоДт1 КАК СубконтоДт1,
	|	Реквизиты.СубконтоДт2 КАК СубконтоДт2,
	|	Реквизиты.СубконтоДт3 КАК СубконтоДт3,
	|	Реквизиты.СчетКт КАК СчетКт,
	|	Реквизиты.СубконтоКт1 КАК СубконтоКт1,
	|	Реквизиты.СубконтоКт2 КАК СубконтоКт2,
	|	Реквизиты.СубконтоКт3 КАК СубконтоКт3,
	|	Реквизиты.СуммаКтЗадолженности,
	|	Реквизиты.СуммаДтЗадолженности
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСН", УчетнаяПолитика.ПрименяетсяУСН(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСНПатент", УчетнаяПолитика.ПрименяетсяУСНПатент(Выборка.Организация, Выборка.Период));
	Запрос.УстановитьПараметр("ДебиторскаяЗадолженностьСделкаПустыеЗначения", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьМассивПустыхЗначенийПоОписаниюТипов(
		ДокументСсылка.Метаданные().ТабличныеЧасти.ДебиторскаяЗадолженность.Реквизиты.Сделка.Тип));
	Запрос.УстановитьПараметр("КредиторскаяЗадолженностьСделкаПустыеЗначения", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьМассивПустыхЗначенийПоОписаниюТипов(
		ДокументСсылка.Метаданные().ТабличныеЧасти.КредиторскаяЗадолженность.Реквизиты.Сделка.Тип));
	Запрос.УстановитьПараметр("СодержаниеПроводкиПроведениеВзаимозачета", "Взаимозачет");
	Запрос.УстановитьПараметр("СодержаниеПроводкиПереносЗадолженности", "Переуступка долга");
	Запрос.УстановитьПараметр("СодержаниеПроводкиСписаниеЗадолженности", "Списание задолженности");
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицы(НомераТаблиц)
		+ ТекстЗапросаРеквизиты(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПереносЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПереносЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаРеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаТаблицаПереносЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаТаблицаПереносЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаРеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаРеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаРеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаРеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)
		+ ТекстЗапросаТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)
		+ ТекстЗапросаТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Если НЕ УчетнаяПолитика.ПлательщикНДФЛ(Выборка.Организация, Выборка.Период) Тогда
		
		ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьИП", Неопределено);
		ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьИП", Неопределено);
		
	Иначе
		
		Если НЕ Выборка.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ЗачетАвансов
		И НЕ Выборка.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности Тогда
		
			Если НЕ (Выборка.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.Прочее
				и Выборка.СчетДт = Выборка.СчетКт
				и Выборка.СубконтоДт1 = Выборка.СубконтоКт1
				и Выборка.СубконтоДт2 = Выборка.СубконтоКт2
				и Выборка.СубконтоДт3 = Выборка.СубконтоКт3
				и Выборка.СуммаКтЗадолженности = Выборка.СуммаДтЗадолженности) Тогда
				
				ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьИП", Неопределено);
				ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьИП", Неопределено);
				
			Иначе
				
				ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьИП", ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность.Скопировать());
				ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьИП", ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность.Скопировать());
				
			КонецЕсли;
			
		Иначе	
			
			ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьИП", ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность.Скопировать());
			ПараметрыПроведения.Вставить("РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьИП", ПараметрыПроведения.РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность.Скопировать());
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ПараметрыПроведения;
	
КонецФункции 

Функция ТекстЗапросаВременныеТаблицы(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_СчетаУчетаРасчетовСПоставщиками", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СчетаУчетаРасчетовСПокупателями", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ДебиторскаяЗадолженность", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_КредиторскаяЗадолженность", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_КредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасчетовСПоставщиками
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаУчетаРасчетовСПокупателями
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчикамиВал))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.КонтрагентДебитор,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ТаблицаДебиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКредитора,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.Сделка В (&ДебиторскаяЗадолженностьСделкаПустыеЗначения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.Автоматически)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.ПоДокументу)
	|	КОНЕЦ КАК СпособПогашенияЗадолженности,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДебиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.КорДоговорКонтрагента.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт2.ВалютаВзаиморасчетов
	|				ИНАЧЕ ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.Сделка КАК ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетАвансов,
	|	ТаблицаДебиторскаяЗадолженность.КорСчетУчетаРасчетов КАК КорСчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.ИспользоватьВспомогательныйСчет КАК ИспользоватьВспомогательныйСчет,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СчетДт КАК СчетДт,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт1 КАК СубконтоДт1,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт2 КАК СубконтоДт2,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт3 КАК СубконтоДт3,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СчетКт КАК СчетКт,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоКт1 КАК СубконтоКт1,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоКт2 КАК СубконтоКт2,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоКт3 КАК СубконтоКт3,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.ПодразделениеОрганизации КАК КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДебиторскаяЗадолженность.Сумма
	|			ИНАЧЕ ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов * (ТаблицаДебиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДебиторскаяЗадолженность.СуммаНУ
	|			ИНАЧЕ ТаблицаДебиторскаяЗадолженность.СуммаНУ * (ТаблицаДебиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНУ,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаДебиторскаяЗадолженность.Сумма КАК СуммаВВалютеДокумента
	|ПОМЕСТИТЬ ВТ_ДебиторскаяЗадолженность
	|ИЗ
	|	Документ.КорректировкаДолга.ДебиторскаяЗадолженность КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка = &Ссылка
	|	И НЕ(ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	|				ИЛИ ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|					И ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов В
	|						(ВЫБРАТЬ
	|							ВТ_СчетаУчетаРасчетовСПоставщиками.Счет
	|						ИЗ
	|							ВТ_СчетаУчетаРасчетовСПоставщиками)
	|				ИЛИ ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку))
	|					И ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов В
	|						(ВЫБРАТЬ
	|							ВТ_СчетаУчетаРасчетовСПоставщиками.Счет
	|						ИЗ
	|							ВТ_СчетаУчетаРасчетовСПоставщиками))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка КАК Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.КонтрагентДебитор,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ТаблицаДебиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКредитора,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.Сделка В (&ДебиторскаяЗадолженностьСделкаПустыеЗначения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.Автоматически)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.ПоДокументу)
	|	КОНЕЦ КАК СпособПогашенияЗадолженности,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДебиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.КорДоговорКонтрагента.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт2.ВалютаВзаиморасчетов
	|				ИНАЧЕ ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.Сделка КАК ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетАвансов,
	|	ТаблицаДебиторскаяЗадолженность.КорСчетУчетаРасчетов КАК КорСчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.ИспользоватьВспомогательныйСчет КАК ИспользоватьВспомогательныйСчет,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СчетДт КАК СчетДт,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт1 КАК СубконтоДт1,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт2 КАК СубконтоДт2,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоДт3 КАК СубконтоДт3,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СчетКт КАК СчетКт,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоКт1 КАК СубконтоКт1,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоКт2 КАК СубконтоКт2,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.СубконтоКт3 КАК СубконтоКт3,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.ПодразделениеОрганизации КАК КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДебиторскаяЗадолженность.Сумма
	|			ИНАЧЕ ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов * (ТаблицаДебиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДебиторскаяЗадолженность.СуммаНУ
	|			ИНАЧЕ ТаблицаДебиторскаяЗадолженность.СуммаНУ * (ТаблицаДебиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНУ,
	|	ТаблицаДебиторскаяЗадолженность.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаДебиторскаяЗадолженность.Сумма КАК СуммаВВалютеДокумента
	|ПОМЕСТИТЬ ВТ_ДебиторскаяЗадолженностьВозвратАванса
	|ИЗ
	|	Документ.КорректировкаДолга.ДебиторскаяЗадолженность КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка = &Ссылка
	|	И (ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|				И ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов В
	|					(ВЫБРАТЬ
	|						ВТ_СчетаУчетаРасчетовСПоставщиками.Счет
	|					ИЗ
	|						ВТ_СчетаУчетаРасчетовСПоставщиками)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку))
	|				И ТаблицаДебиторскаяЗадолженность.СчетУчетаРасчетов В
	|					(ВЫБРАТЬ
	|						ВТ_СчетаУчетаРасчетовСПоставщиками.Счет
	|					ИЗ
	|						ВТ_СчетаУчетаРасчетовСПоставщиками))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.КонтрагентДебитор,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ТаблицаКредиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКредитора,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.Сделка В (&КредиторскаяЗадолженностьСделкаПустыеЗначения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.Автоматически)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.ПоДокументу)
	|	КОНЕЦ КАК СпособПогашенияЗадолженности,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаКредиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.КорДоговорКонтрагента.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт2.ВалютаВзаиморасчетов
	|				ИНАЧЕ ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.Сделка КАК ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетАвансов,
	|	ТаблицаКредиторскаяЗадолженность.КорСчетУчетаРасчетов КАК КорСчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.ИспользоватьВспомогательныйСчет КАК ИспользоватьВспомогательныйСчет,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СчетДт КАК СчетДт,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоДт1 КАК СубконтоДт1,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоДт2 КАК СубконтоДт2,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоДт3 КАК СубконтоДт3,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СчетКт КАК СчетКт,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт1 КАК СубконтоКт1,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт2 КАК СубконтоКт2,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт3 КАК СубконтоКт3,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.ПодразделениеОрганизации КАК КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаКредиторскаяЗадолженность.Сумма
	|			ИНАЧЕ ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов * (ТаблицаКредиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаКредиторскаяЗадолженность.СуммаНУ
	|			ИНАЧЕ ТаблицаКредиторскаяЗадолженность.СуммаНУ * (ТаблицаКредиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНУ,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаКредиторскаяЗадолженность.Сумма КАК СуммаВВалютеДокумента
	|ПОМЕСТИТЬ ВТ_КредиторскаяЗадолженность
	|ИЗ
	|	Документ.КорректировкаДолга.КредиторскаяЗадолженность КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка = &Ссылка
	|	И НЕ(ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|				ИЛИ ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|					И ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов В
	|						(ВЫБРАТЬ
	|							ВТ_СчетаУчетаРасчетовСПокупателями.Счет
	|						ИЗ
	|							ВТ_СчетаУчетаРасчетовСПокупателями)
	|				ИЛИ ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку))
	|					И ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов В
	|						(ВЫБРАТЬ
	|							ВТ_СчетаУчетаРасчетовСПокупателями.Счет
	|						ИЗ
	|							ВТ_СчетаУчетаРасчетовСПокупателями))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка КАК Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.КонтрагентДебитор,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.КонтрагентКредитор,
	|	ТаблицаКредиторскаяЗадолженность.КорДоговорКонтрагента КАК ДоговорКредитора,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.Сделка В (&КредиторскаяЗадолженностьСделкаПустыеЗначения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.Автоматически)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.ПоДокументу)
	|	КОНЕЦ КАК СпособПогашенияЗадолженности,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаКредиторскаяЗадолженность.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.КорДоговорКонтрагента.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт2.ВалютаВзаиморасчетов
	|				ИНАЧЕ ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.Сделка КАК ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов КАК СчетАвансов,
	|	ТаблицаКредиторскаяЗадолженность.КорСчетУчетаРасчетов КАК КорСчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.ИспользоватьВспомогательныйСчет КАК ИспользоватьВспомогательныйСчет,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СчетДт КАК СчетДт,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоДт1 КАК СубконтоДт1,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоДт2 КАК СубконтоДт2,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоДт3 КАК СубконтоДт3,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СчетКт КАК СчетКт,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт1 КАК СубконтоКт1,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт2 КАК СубконтоКт2,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.СубконтоКт3 КАК СубконтоКт3,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.ПодразделениеОрганизации КАК КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаКредиторскаяЗадолженность.Сумма
	|			ИНАЧЕ ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов * (ТаблицаКредиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаКредиторскаяЗадолженность.СуммаНУ
	|			ИНАЧЕ ТаблицаКредиторскаяЗадолженность.СуммаНУ * (ТаблицаКредиторскаяЗадолженность.КурсВзаиморасчетов / ВЫБОР
	|					КОГДА ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов = 0
	|						ТОГДА 1
	|					ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КратностьВзаиморасчетов
	|				КОНЕЦ)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНУ,
	|	ТаблицаКредиторскаяЗадолженность.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаКредиторскаяЗадолженность.Сумма КАК СуммаВВалютеДокумента
	|ПОМЕСТИТЬ ВТ_КредиторскаяЗадолженностьВозвратАванса
	|ИЗ
	|	Документ.КорректировкаДолга.КредиторскаяЗадолженность КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка = &Ссылка
	|	И (ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку))
	|				И ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов В
	|					(ВЫБРАТЬ
	|						ВТ_СчетаУчетаРасчетовСПокупателями.Счет
	|					ИЗ
	|						ВТ_СчетаУчетаРасчетовСПокупателями)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку))
	|				И ТаблицаКредиторскаяЗадолженность.СчетУчетаРасчетов В
	|					(ВЫБРАТЬ
	|						ВТ_СчетаУчетаРасчетовСПокупателями.Счет
	|					ИЗ
	|						ВТ_СчетаУчетаРасчетовСПокупателями))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизиты(НомераТаблиц)

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Вид операции "Проведение взаимозачета".

Функция ТекстЗапросаРеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА КАК РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ИСТИНА КАК РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА КАК РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ИСТИНА КАК РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДебиторскаяЗадолженность.Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаДебиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаДебиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СчетДт
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаДебиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПроведениеВзаимозачета КАК Содержание
	|ИЗ
	|	ВТ_ДебиторскаяЗадолженность КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетАвансов)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|				И ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроведениеВзаимозачетаДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаДебиторскаяЗадолженность.Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаДебиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаДебиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СчетДт
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаДебиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПроведениеВзаимозачета КАК Содержание
	|ИЗ
	|	ВТ_ДебиторскаяЗадолженностьВозвратАванса КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетАвансов)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|				И ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаКредиторскаяЗадолженность.Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаКредиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаКредиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СчетДт
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоДт1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоДт2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоДт3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаКредиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПроведениеВзаимозачета КАК Содержание
	|ИЗ
	|	ВТ_КредиторскаяЗадолженность КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетАвансов)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|				И ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроведениеВзаимозачетаКредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаКредиторскаяЗадолженность.Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаКредиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаКредиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СчетДт
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоДт1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоДт2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоДт3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаКредиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПроведениеВзаимозачета КАК Содержание
	|ИЗ
	|	ВТ_КредиторскаяЗадолженностьВозвратАванса КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетЗадолженности)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ЗачетАвансов)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|				И ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Вид операции "Перенос задолженности".

Функция ТекстЗапросаРеквизитыПереносЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПереносЗадолженностиДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыПереносЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПереносЗадолженностиКредиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПереносЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПереносЗадолженностиДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаДебиторскаяЗадолженность.Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаДебиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаДебиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СчетДт
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КорСчетРасчетов
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт1
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КонтрагентКредитор
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт2
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.ДоговорКредитора
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт3
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.Ссылка
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаДебиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПереносЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_ДебиторскаяЗадолженность КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПереносЗадолженностиДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаДебиторскаяЗадолженность.Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаДебиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаДебиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СчетДт
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КорСчетРасчетов
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт1
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.КонтрагентКредитор
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт2
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.ДоговорКредитора
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаДебиторскаяЗадолженность.СубконтоДт3
	|		ИНАЧЕ ТаблицаДебиторскаяЗадолженность.Ссылка
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаДебиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПереносЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_ДебиторскаяЗадолженностьВозвратАванса КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПереносЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПереносЗадолженностиКредиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаКредиторскаяЗадолженность.Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаКредиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаКредиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СчетКт
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КорСчетРасчетов
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КонтрагентКредитор
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.ДоговорКредитора
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.Ссылка
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаКредиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПереносЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_КредиторскаяЗадолженность КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПереносЗадолженностиКредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаКредиторскаяЗадолженность.Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаКредиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаКредиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СчетКт
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КорСчетРасчетов
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.КонтрагентКредитор
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.ДоговорКредитора
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|			ТОГДА ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|		ИНАЧЕ ТаблицаКредиторскаяЗадолженность.Ссылка
	|	КОНЕЦ КАК КорСубконто3,
	|	ТаблицаКредиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СуммаРуб,
	|	&СодержаниеПроводкиПереносЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_КредиторскаяЗадолженностьВозвратАванса КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты)
	|				И (ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаКредиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Вид операции "Списание задолженности".

Функция ТекстЗапросаРеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ИСТИНА РасчетыПоРеализации
	|ИЗ
	|	Документ.КорректировкаДолга КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаДебиторскаяЗадолженность.Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаДебиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаДебиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ТаблицаДебиторскаяЗадолженность.СчетДт КАК КорСчет,
	|	ТаблицаДебиторскаяЗадолженность.СубконтоДт1 КАК КорСубконто1,
	|	ТаблицаДебиторскаяЗадолженность.СубконтоДт2 КАК КорСубконто2,
	|	ТаблицаДебиторскаяЗадолженность.СубконтоДт3 КАК КорСубконто3,
	|	ТаблицаДебиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СуммаРуб,
	|	ТаблицаДебиторскаяЗадолженность.СуммаНУ,
	|	&СодержаниеПроводкиСписаниеЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_ДебиторскаяЗадолженность КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|				И (НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСписаниеЗадолженностиДебиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДебиторскаяЗадолженность.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаДебиторскаяЗадолженность.Подразделение,
	|	ТаблицаДебиторскаяЗадолженность.Контрагент,
	|	ТаблицаДебиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДебиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаДебиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаДебиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ТаблицаДебиторскаяЗадолженность.СчетДт КАК КорСчет,
	|	ТаблицаДебиторскаяЗадолженность.СубконтоДт1 КАК КорСубконто1,
	|	ТаблицаДебиторскаяЗадолженность.СубконтоДт2 КАК КорСубконто2,
	|	ТаблицаДебиторскаяЗадолженность.СубконтоДт3 КАК КорСубконто3,
	|	ТаблицаДебиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаДебиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаДебиторскаяЗадолженность.СуммаРуб,
	|	ТаблицаДебиторскаяЗадолженность.СуммаНУ,
	|	&СодержаниеПроводкиСписаниеЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_ДебиторскаяЗадолженностьВозвратАванса КАК ТаблицаДебиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаДебиторскаяЗадолженность.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаДебиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаДебиторскаяЗадолженность.СчетДт = ТаблицаДебиторскаяЗадолженность.СчетКт
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт1 = ТаблицаДебиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт2 = ТаблицаДебиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаДебиторскаяЗадолженность.СубконтоДт3 = ТаблицаДебиторскаяЗадолженность.СубконтоКт3
	|				И (НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаДебиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаДебиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДебиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаКредиторскаяЗадолженность.Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаКредиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаКредиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ТаблицаКредиторскаяЗадолженность.СчетКт КАК КорСчет,
	|	ТаблицаКредиторскаяЗадолженность.СубконтоКт1 КАК КорСубконто1,
	|	ТаблицаКредиторскаяЗадолженность.СубконтоКт2 КАК КорСубконто2,
	|	ТаблицаКредиторскаяЗадолженность.СубконтоКт3 КАК КорСубконто3,
	|	ТаблицаКредиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СуммаРуб,
	|	ТаблицаКредиторскаяЗадолженность.СуммаНУ,
	|	&СодержаниеПроводкиСписаниеЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_КредиторскаяЗадолженность КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|				И (НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСписаниеЗадолженностиКредиторскаяЗадолженностьВозвратАванса", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаКредиторскаяЗадолженность.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки,
	|	ТаблицаКредиторскаяЗадолженность.Подразделение,
	|	ТаблицаКредиторскаяЗадолженность.Контрагент,
	|	ТаблицаКредиторскаяЗадолженность.ДоговорКонтрагента,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетовСПолучателем,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВУсловныхЕдиницах,
	|	ТаблицаКредиторскаяЗадолженность.РасчетыВВалюте,
	|	ТаблицаКредиторскаяЗадолженность.СпособПогашенияЗадолженности,
	|	ТаблицаКредиторскаяЗадолженность.ДокументРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетРасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СчетАвансов,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокОтраженияАванса,
	|	ТаблицаКредиторскаяЗадолженность.СчетКт КАК КорСчет,
	|	ТаблицаКредиторскаяЗадолженность.СубконтоКт1 КАК КорСубконто1,
	|	ТаблицаКредиторскаяЗадолженность.СубконтоКт2 КАК КорСубконто2,
	|	ТаблицаКредиторскаяЗадолженность.СубконтоКт3 КАК КорСубконто3,
	|	ТаблицаКредиторскаяЗадолженность.КорПодразделение,
	|	ТаблицаКредиторскаяЗадолженность.СуммаВзаиморасчетов,
	|	ТаблицаКредиторскаяЗадолженность.СуммаРуб,
	|	ТаблицаКредиторскаяЗадолженность.СуммаНУ,
	|	&СодержаниеПроводкиСписаниеЗадолженности КАК Содержание
	|ИЗ
	|	ВТ_КредиторскаяЗадолженностьВозвратАванса КАК ТаблицаКредиторскаяЗадолженность
	|ГДЕ
	|	(ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И НЕ ТаблицаКредиторскаяЗадолженность.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				И (НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|			ИЛИ ТаблицаКредиторскаяЗадолженность.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.Прочее)
	|				И ТаблицаКредиторскаяЗадолженность.СчетДт = ТаблицаКредиторскаяЗадолженность.СчетКт
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт1 = ТаблицаКредиторскаяЗадолженность.СубконтоКт1
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт2 = ТаблицаКредиторскаяЗадолженность.СубконтоКт2
	|				И ТаблицаКредиторскаяЗадолженность.СубконтоДт3 = ТаблицаКредиторскаяЗадолженность.СубконтоКт3
	|				И (НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|					ИЛИ НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|						И НЕ ТаблицаКредиторскаяЗадолженность.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|				И НЕ ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаДтЗадолженности = ТаблицаКредиторскаяЗадолженность.Ссылка.СуммаКтЗадолженности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКредиторскаяЗадолженность.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Акт взаимозачета
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КорректировкаДолга";
	КомандаПечати.Представление = НСтр("ru = 'Акт взаимозачета'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Корректировка долга""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ПечатьАктаВзаимозачета(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.РазмерКолонтитулаСверху	= 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу	= 0;
	ТабличныйДокумент.АвтоМасштаб				= Истина;
	ТабличныйДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати		= "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаДолга_Акт";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаДолга.Ссылка,
	|	КорректировкаДолга.Номер,
	|	КорректировкаДолга.Дата КАК Дата,
	|	КорректировкаДолга.КонтрагентДебитор КАК Дебитор,
	|	КорректировкаДолга.КонтрагентКредитор КАК Кредитор,
	|	КорректировкаДолга.Организация,
	|	КорректировкаДолга.ВалютаДокумента,
	|	КорректировкаДолга.ДебиторскаяЗадолженность.(
	|		ДоговорКонтрагента,
	|		ДоговорКонтрагента.Наименование КАК ДоговорПредставление,
	|		Сумма,
	|		СуммаВзаиморасчетов
	|	),
	|	КорректировкаДолга.КредиторскаяЗадолженность.(
	|		ДоговорКонтрагента,
	|		ДоговорКонтрагента.Наименование КАК ДоговорПредставление,
	|		Сумма,
	|		СуммаВзаиморасчетов
	|	)
	|ИЗ
	|	Документ.КорректировкаДолга КАК КорректировкаДолга
	|ГДЕ
	|	КорректировкаДолга.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	КорректировкаДолга.Ссылка,
	|	КорректировкаДолга.ДебиторскаяЗадолженность.НомерСтроки,
	|	КорректировкаДолга.КредиторскаяЗадолженность.НомерСтроки";
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КорректировкаДолга.ПФ_MXL_Взаимозачет");
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		
		СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Кредитор, Шапка.Дата);
		ПредставлениеКредитора   = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
		
		СтрокаКредиторки = НСтр("ru = '1. Задолженность %ПредставлениеОрганизации% перед %ПредставлениеКредитора% составляет'")+ " ";
		СтрокаКредиторки = СтрЗаменить(СтрокаКредиторки,"%ПредставлениеОрганизации%",ПредставлениеОрганизации);
		СтрокаКредиторки = СтрЗаменить(СтрокаКредиторки,"%ПредставлениеКредитора%",ПредставлениеКредитора);
		Если Шапка.ВалютаДокумента = ВалютаРеглУчета или НЕ ЗначениеЗаполнено(Шапка.ВалютаДокумента) Тогда
			КолонкаСуммы        = "Сумма";
			ПредставлениеВалюты = строка(ВалютаРеглУчета);
		Иначе	
			КолонкаСуммы        = "СуммаВзаиморасчетов";
			ПредставлениеВалюты = строка(Шапка.ВалютаДокумента);
		КонецЕсли; 
		
		ДебиторскаяЗадолженность = Шапка.ДебиторскаяЗадолженность.Выгрузить();
		КредиторскаяЗадолженность = Шапка.КредиторскаяЗадолженность.Выгрузить();
		ДебиторскаяЗадолженность.Свернуть("ДоговорКонтрагента,ДоговорПредставление","Сумма,СуммаВзаиморасчетов");
		ДебиторскаяЗадолженность.Сортировать("ДоговорПредставление,Сумма");
		КредиторскаяЗадолженность.Свернуть("ДоговорКонтрагента,ДоговорПредставление","Сумма,СуммаВзаиморасчетов");
		КредиторскаяЗадолженность.Сортировать("ДоговорПредставление,Сумма");
		
		СтрокаШапки = НСтр("ru = 'Акт взаимозачета № %Номер% от %Дата%'"); 
		СтрокаШапки = СтрЗаменить(СтрокаШапки,"%Номер%", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина, Ложь));
		СтрокаШапки = СтрЗаменить(СтрокаШапки,"%Дата%",   Формат(Шапка.Дата, "ДЛФ=DD"));
		СтрокаКредиторки  = СтрокаКредиторки + Формат(КредиторскаяЗадолженность.Итог(КолонкаСуммы), "ЧЦ=15; ЧДЦ=2; ЧН=Ноль") + " " + ПредставлениеВалюты + " " +НСтр("ru = 'по следующим договорам:'");
		
		ОбластьМакета.Параметры.СтрокаШапки      = СтрокаШапки;
		ОбластьМакета.Параметры.СтрокаКредиторки = СтрокаКредиторки;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаКредиторки");
		Для каждого СтрокаЗадолженности Из КредиторскаяЗадолженность Цикл
			ОбластьМакета.Параметры.СтрокаДокументовКред = сокрЛП(СтрокаЗадолженности.ДоговорПредставление) + " :"+ символы.Таб + Формат(СтрокаЗадолженности[КолонкаСуммы], "ЧЦ=15; ЧДЦ=2; ЧН=Ноль") + " " + ПредставлениеВалюты;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ОбластьМакета         = Макет.ПолучитьОбласть("ЗаголовокДебиторки");
		
		СведенияОКонтрагенте  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Дебитор, Шапка.Дата);
		ПредставлениеДебитора = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
		
		СтрокаДебиторки       = НСтр("ru = '2. Задолженность %ПредставлениеДебитора% перед %ПредставлениеОрганизации% составляет "
		                      + "%Сумма% %ПредставлениеВалюты% по следующим договорам:'");
		СтрокаДебиторки = СтрЗаменить(СтрокаДебиторки,"%ПредставлениеДебитора%", ПредставлениеДебитора);
		СтрокаДебиторки = СтрЗаменить(СтрокаДебиторки,"%ПредставлениеОрганизации%", ПредставлениеОрганизации);
		СтрокаДебиторки = СтрЗаменить(СтрокаДебиторки,"%ПредставлениеВалюты%", ПредставлениеВалюты);
		СтрокаДебиторки = СтрЗаменить(СтрокаДебиторки,"%Сумма%", Формат(ДебиторскаяЗадолженность.Итог(КолонкаСуммы), "ЧЦ=15; ЧДЦ=2; ЧН=Ноль"));
		
		ОбластьМакета.Параметры.СтрокаДебиторки = СтрокаДебиторки;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаДебиторки");
		Для каждого СтрокаЗадолженности Из ДебиторскаяЗадолженность Цикл
			ОбластьМакета.Параметры.СтрокаДокументовДеб = сокрЛП(СтрокаЗадолженности.ДоговорПредставление) + " :" + Символы.Таб + Формат(СтрокаЗадолженности[КолонкаСуммы], "ЧЦ=15; ЧДЦ=2; ЧН=Ноль") + " " + ПредставлениеВалюты;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ОбластьПодвала     = Макет.ПолучитьОбласть("Подвал");
		СтрокаВзаимозачета = НСтр("ru = '3. Взаимозачет производится на сумму'")+ " "
		                   + Формат(ДебиторскаяЗадолженность.Итог(КолонкаСуммы), "ЧЦ=15; ЧДЦ=2; ЧН=Ноль") + " " + ПредставлениеВалюты;
		ОбластьПодвала.Параметры.СтрокаВзаимозачета       = СтрокаВзаимозачета;
		ОбластьПодвала.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		ОбластьПодвала.Параметры.ПредставлениеКредитора   = ПредставлениеКредитора;
		ТабличныйДокумент.Вывести(ОбластьПодвала);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КорректировкаДолга") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КорректировкаДолга", "Акт взаимозачета", 
			ПечатьАктаВзаимозачета(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("Контрагент###", "КонтрагентДебитор");
	Результат.Вставить("Информация",    "КонтрагентДебитор");
	Результат.Вставить("Валюта",        "Неопределено");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли
