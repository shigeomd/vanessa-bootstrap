////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним реквизиты формы из параметров.
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,
		"Организация, Контрагент, Грузоотправитель, Грузополучатель,
		|БанковскийСчетОрганизации, ОтпускПроизвел, АдресДоставки,
		|Руководитель, ЗаРуководителяПоПриказу,
		|ГлавныйБухгалтер, ЗаГлавногоБухгалтераПоПриказу,
		|ОтпускПроизвел,
		|ДоверенностьВыдана, ДоверенностьДата, ДоверенностьНомер, ДоверенностьЧерезКого
		|");

	ПолноеНаименованиеКонтрагента = "";

	// Отобразим грузоотправителя и грузополучателя
	Если НЕ ЗначениеЗаполнено(Грузоотправитель) Тогда
		ГрузоотправительОнЖе = 1;
	Иначе
		ГрузоотправительОнЖе = 0;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Грузополучатель) Тогда
		ГрузополучательОнЖе = 1;
	Иначе
	    ГрузополучательОнЖе = 0;
	КонецЕсли;

	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстГрузоотправительОнЖе = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование");
	Иначе
		ТекстГрузоотправительОнЖе = НСтр("ru = 'Организация'");
	КонецЕсли;
	Элементы.ГрузоотправительОнЖе1.СписокВыбора[0].Представление = ТекстГрузоотправительОнЖе;

	Если ЗначениеЗаполнено(Контрагент) Тогда
		РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Контрагент, "Наименование, НаименованиеПолное");
	
		ТекстГрузополучательОнЖе = РеквизитыКонтрагента.Наименование;
		
		Если ЗначениеЗаполнено(РеквизитыКонтрагента.НаименованиеПолное) Тогда
			ПолноеНаименованиеКонтрагента = РеквизитыКонтрагента.НаименованиеПолное;
		Иначе
			НаименованиеКонтрагента = РеквизитыКонтрагента.Наименование;
		КонецЕсли;
	Иначе
		ТекстГрузополучательОнЖе = НСтр("ru = 'Контрагент'");
	КонецЕсли;
	Элементы.ГрузополучательОнЖе1.СписокВыбора[0].Представление = ТекстГрузополучательОнЖе;

	// Заполним списки выбора адреса доставки и доверенности значениями по умолчанию
	РеализацияТоваровУслугФормы.ЗаполнитьСписокАдресовДоставки(ЭтаФорма, Контрагент, Грузополучатель);
	
	Если ЗначениеЗаполнено(ПолноеНаименованиеКонтрагента) Тогда
		Элементы.ДоверенностьВыдана.СписокВыбора.Добавить(ПолноеНаименованиеКонтрагента);
	КонецЕсли;

	СписокКонтактныхЛиц = Справочники.КонтактныеЛица.СписокКонтактныхЛиц(Контрагент);
	Для Каждого ЭлементСписка Из СписокКонтактныхЛиц Цикл
		Элементы.ДоверенностьЧерезКого.СписокВыбора.Добавить(ЭлементСписка.Представление);
	КонецЦикла;

	// Заполнение группы информационных ссылок
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтаФорма, ЭтаФорма.Элементы.ИнформационныеСсылки);

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;

	Если ПеренестиВДокумент И НЕ Отказ Тогда
		ОбработкаПроверкиЗаполненияНаКлиенте(Отказ);
	КонецЕсли;

	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	Если ПеренестиВДокумент Тогда
		СтруктураРезультат = Новый Структура("
			|Грузоотправитель,Грузополучатель,
			|БанковскийСчетОрганизации, 
			|Руководитель, ЗаРуководителяПоПриказу,
			|ГлавныйБухгалтер, ЗаГлавногоБухгалтераПоПриказу,
			|ОтпускПроизвел,
			|АдресДоставки,
			|ДоверенностьНомер, ДоверенностьДата,
			|ДоверенностьВыдана, ДоверенностьЧерезКого");
		 
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, ЭтаФорма);
		
		Если ГрузоотправительОнЖе = 1 Тогда
			СтруктураРезультат.Грузоотправитель = Неопределено;
		КонецЕсли;

		Если ГрузополучательОнЖе = 1 Тогда
			СтруктураРезультат.Грузополучатель = Неопределено;
		КонецЕсли;
		
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ГрузоотправительОнЖеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательОнЖеПриИзменении(Элемент)
	
	ГрузополучательОнЖеПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	ОбновитьСписокАдресовДоставки();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;

	Элементы.Грузоотправитель.Доступность 	= (Форма.ГрузоотправительОнЖе = 0);
	Элементы.Грузополучатель.Доступность	= (Форма.ГрузополучательОнЖе = 0);

КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокАдресовДоставки()

	Если ГрузополучательОнЖе = 1 Тогда
		ВыбранныйГрузополучатель = Контрагент;
	Иначе
		ВыбранныйГрузополучатель = Грузополучатель;
	КонецЕсли;

	РеализацияТоваровУслугФормы.ЗаполнитьСписокАдресовДоставки(ЭтаФорма, Контрагент, ВыбранныйГрузополучатель);
	Если Элементы.АдресДоставки.СписокВыбора.Количество() > 0 Тогда
		АдресДоставки = Элементы.АдресДоставки.СписокВыбора[0].Значение;
	Иначе
		АдресДоставки = "";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПроверкиЗаполненияНаКлиенте(Отказ)

	Если ГрузоотправительОнЖе = 0 Тогда
		Если НЕ ЗначениеЗаполнено(Грузоотправитель) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Грузоотправитель'"));
			Поле = "Грузоотправитель";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "", Отказ);
		КонецЕсли;
	КонецЕсли;

	Если ГрузополучательОнЖе = 0 Тогда
		Если НЕ ЗначениеЗаполнено(Грузополучатель) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Грузополучатель'"));
			Поле = "Грузополучатель";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, "", Отказ);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ГрузополучательОнЖеПриИзмененииНаСервере()

	ОбновитьСписокАдресовДоставки();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры