&НаКлиенте
Перем ЗакрытьПослеЗаписи;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	РазмерАвансаВПроцентахПоУмолчанию = РасчетЗарплатыФормы.РазмерАвансаВПроцентахПоУмолчанию(Объект.Организация);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Заполним дату приема
		Если Не ЗначениеЗаполнено(Объект.ДатаПриема) Тогда
			Объект.ДатаПриема = ТекущаяДатаСеанса();
		КонецЕсли; 
		
		// Очистим реквизит Сотрудник, если он уже принят.
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) И Параметры.ЗначениеКопирования.Проведен Тогда
			Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
			Объект.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли; 
		
		// Заполним реквизиты из значений заполнения.
		Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Объект.Организация = Параметры.Организация;
		КонецЕсли;
		Если Параметры.Свойство("Сотрудник") И ЗначениеЗаполнено(Параметры.Сотрудник) Тогда 
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
		Если Параметры.Свойство("ДатаПриема") И ЗначениеЗаполнено(Параметры.ДатаПриема) Тогда 
			Объект.ДатаПриема = Параметры.ДатаПриема;
		КонецЕсли;
		Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда 
			Объект.Подразделение = Параметры.Подразделение;
		КонецЕсли;
		Если Параметры.Свойство("Должность") И ЗначениеЗаполнено(Параметры.Должность) Тогда 
			Объект.Должность = Параметры.Должность;
		КонецЕсли;
		Если Параметры.Свойство("Начисления") И Параметры.Начисления.Количество() > 0 Тогда 
			Объект.Начисления.Загрузить(Параметры.Начисления.Выгрузить());
		КонецЕсли;
			
		Если Объект.Начисления.Количество() = 0 Тогда
			ПовременныеНачисления = РасчетЗарплаты.НачисленияПоКатегории(
				Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда, Новый Структура("ПометкаУдаления", Ложь));
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(Объект.Начисления, ПовременныеНачисления, "Начисление");
		КонецЕсли;
		
		УстановитьФункциональныеОпцииФормы();
		УстановитьУсловияПриема(ЭтаФорма);
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			
			ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
			УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
			УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
			
		КонецЕсли; 
		
		ВидЗанятостиПредыдущий = Объект.ВидЗанятости;
		
		РасчетЗарплатыКлиентСервер.УстановитьПоказРазмераАванса(ЭтаФорма);
		Если Объект.СпособРасчетаАванса = Перечисления.СпособыРасчетаАванса.ПроцентомОтТарифа
			И Объект.Аванс = 0 Тогда
			
			Объект.Аванс = РазмерАвансаВПроцентахПоУмолчанию;
			
		КонецЕсли; 
	
	КонецЕсли;
	
	ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
	
	УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ЗакрытьПослеЗаписи = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьФункциональныеОпцииФормы();
	
	ВидЗанятостиПредыдущий = ТекущийОбъект.ВидЗанятости;
	
	РасчетЗарплатыКлиентСервер.УстановитьПоказРазмераАванса(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РасчетЗарплатыДляНебольшихОрганизаций") Тогда
		МодульРасчетЗарплатыДляНебольшихОрганизаций = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("РасчетЗарплатыДляНебольшихОрганизаций");
		МодульРасчетЗарплатыДляНебольшихОрганизаций.ЗапомнитьТекущееКоличествоСотрудников(ЭтаФорма, Объект.Организация);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РасчетЗарплатыФормы.ЗапомнитьРазмерАвансаПоУмолчанию(
		ТекущийОбъект.Аванс, ТекущийОбъект.Организация, ТекущийОбъект.СпособРасчетаАванса);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	КадровыйУчетКлиент.ОповеститьОбИзмененииРабочегоМеста(ЭтаФорма);
	
	ПредупреждениеПоказано = Ложь;
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РасчетЗарплатыДляНебольшихОрганизаций") Тогда
		МодульРасчетЗарплатыДляНебольшихОрганизацийКлиент = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("РасчетЗарплатыДляНебольшихОрганизацийКлиент");
		ПредупреждениеПоказано = МодульРасчетЗарплатыДляНебольшихОрганизацийКлиент.ПоказатьПредупреждениеОбОграниченияхРежимаРасчетаЗарплатыДляНебольшихОрганизаций(
			ЭтаФорма, Объект.Организация);
	КонецЕсли;
	
	Если НЕ ПредупреждениеПоказано Тогда
		ПоказатьПредупреждениеОбОграниченияхРежимаРасчетаЗарплатыДляНебольшихОрганизацийЗавершение();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
	УстановитьСвязиПараметровВыбораОрганизации();
	УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗанятостиПриИзменении(Элемент)
	
	СотрудникиКлиент.ПроверитьКонфликтыВидаЗанятостиССуществующимиСотрудниками(
		Объект.Сотрудник,
		Объект.ФизическоеЛицо,
		Объект.Организация,
		Объект.ВидЗанятости,
		Объект.ДатаПриема);
		
	УстановитьУсловияПриема(ЭтаФорма);
	ВидЗанятостиПредыдущий = Объект.ВидЗанятости;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаАвансаПриИзменении(Элемент)
	
	Если Объект.СпособРасчетаАванса = ПредопределенноеЗначение("Перечисление.СпособыРасчетаАванса.ПроцентомОтТарифа") Тогда
		Объект.Аванс = РазмерАвансаВПроцентахПоУмолчанию;
	КонецЕсли; 
	
	РасчетЗарплатыКлиентСервер.УстановитьПоказРазмераАванса(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ЗакрытьПослеЗаписи = Истина;
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, Объект.ДатаПриема);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	КадровыйУчетФормы.ЗаполнитьОтветственныхЛицПоОрганизации(ЭтаФорма);
	УстановитьФункциональныеОпцииФормы();
	УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
	РазмерАвансаВПроцентахПоУмолчанию = РасчетЗарплатыФормы.РазмерАвансаВПроцентахПоУмолчанию(Объект.Организация);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидЗанятостиНовогоСотрудника(Форма)
	
	Форма.Объект.ВидЗанятости = СотрудникиВызовСервера.ПолучитьВидЗанятостиДляНовогоСотрудника(Форма.Объект.Сотрудник, Форма.Объект.Организация);
	УстановитьУсловияПриема(Форма);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловияПриема(Форма)
	
	УсловияПриема = УсловияПриемаПоВидуЗанятости(Форма.Объект.ВидЗанятости);
	
	УсловияПриемаПриОткрытии = УсловияПриемаПоВидуЗанятости(Форма.ВидЗанятостиПредыдущий);
	
	Если ПустаяСтрока(Форма.Объект.УсловияПриема) 
		ИЛИ УсловияПриемаПриОткрытии = Форма.Объект.УсловияПриема Тогда
		
		Форма.Объект.УсловияПриема = УсловияПриема;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УсловияПриемаПоВидуЗанятости(ВидЗанятости)
	
	Если ВидЗанятости = ПредопределенноеЗначение("Перечисление.ВидыЗанятости.ОсновноеМестоРаботы") Тогда
		
		Возврат НСтр("ru='Основное место работы, полная занятость'");
		
	Иначе
		
		Возврат НСтр("ru='Работа по совместительству, сокращенная рабочая неделя'");
		
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ГоловнаяОрганизацияСотрудника(Сотрудник)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "ГоловнаяОрганизация");
	
КонецФункции

&НаКлиенте
Процедура УстановитьСвязиПараметровВыбораОрганизации()
	
	СотрудникЗаполнен = ЗначениеЗаполнено(Объект.Сотрудник);
	СвязиПараметровВыбораОрганизацииУстановлены = Элементы.Организация.СвязиПараметровВыбора.Количество() > 0;
	
	НеобходимоПереустановитьСвязиПараметровВыбораОрганизации = 
		СотрудникЗаполнен И НЕ СвязиПараметровВыбораОрганизацииУстановлены
		ИЛИ НЕ СотрудникЗаполнен И СвязиПараметровВыбораОрганизацииУстановлены;
		
	Если НеобходимоПереустановитьСвязиПараметровВыбораОрганизации Тогда
			
		УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораОрганизацииНаСервере()
	
	СвязиПараметровВыбора = Новый Массив;
	Если ЗначениеЗаполнено(ГоловнаяОрганизацияСотрудника) Тогда
		Связь = Новый СвязьПараметраВыбора("Отбор.ГоловнаяОрганизация", "ГоловнаяОрганизацияСотрудника");
		СвязиПараметровВыбора.Добавить(Связь);
	КонецЕсли; 
		
	Элементы.Организация.СвязиПараметровВыбора  = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеОбОграниченияхРежимаРасчетаЗарплатыДляНебольшихОрганизацийЗавершение(ОписаниеОповещения = Неопределено) Экспорт
	
	Если ЗакрытьПослеЗаписи И Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

ЗакрытьПослеЗаписи = Ложь;
