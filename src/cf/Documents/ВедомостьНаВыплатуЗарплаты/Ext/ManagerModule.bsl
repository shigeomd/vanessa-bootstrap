
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получение данных о документах подсистемы зарплата.
//
// Параметры:
//	Ведомости			- массив документов ВедомостьНаВыплатуЗарплаты.
//	ФизическиеЛица		- массив элементов справочника ФизическиеЛица, чьи данные необходимо получить из ведомостей.
//	ФормаРасчетов		- ПеречислениеСсылка.ФормыОплаты, определяющая, какие ведомости необходимо вернуть: наличные или
//	                 безналичные.
//	Регистратор			- ссылка на документ оплаты, для заполнения которого используется получение данных ведомостей, 
//							нужен для того, чтобы игнорировать движения.
//
// Возвращаемое значение:
//	ТаблицаЗначений с колонками:
//		ФизическоеЛицо					- тип СправочникСсылка.ФизическиеЛица.
//		СуммаКВыплате					- тип Число.
//		КомпенсацияЗаЗадержкуЗарплаты	- тип Число.
//		Ведомость						- тип ДокументСсылка.ВедомостьНаВыплатуЗарплаты.
//
Функция ДанныеВедомостей(Ведомости, ФормаРасчетов, ФизическиеЛица = Неопределено, ВыплатаДепонентов = Неопределено, Регистратор = Неопределено) Экспорт
	
	ВидМестаВыплаты = Новый Массив;
	Если ФормаРасчетов = Перечисления.ФормыОплаты.Безналичная Тогда
		ВидМестаВыплаты.Добавить(Перечисления.ВидыМестВыплатыЗарплаты.БанковскийСчет);
		ВидМестаВыплаты.Добавить(Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект);
		
	Иначе
		ВидМестаВыплаты.Добавить(Перечисления.ВидыМестВыплатыЗарплаты.Касса);
		ВидМестаВыплаты.Добавить(Перечисления.ВидыМестВыплатыЗарплаты.Раздатчик);
		
		Если ВыплатаДепонентов = Неопределено Тогда
			ВыплатаДепонентов = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыплатаДепонентов = Истина Тогда
		УсловиеПоДепонированию =
		"	И ВедомостьНаВыплатуЗарплатыЗарплата.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)";
		
	ИначеЕсли ВыплатаДепонентов = Ложь Тогда
		УсловиеПоДепонированию =
		"	И НЕ ВедомостьНаВыплатуЗарплатыЗарплата.ВыплаченностьЗарплаты В (ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.НеВыплачено), ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано))";
		
	Иначе // Неопределено
		УсловиеПоДепонированию = "";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьНаВыплатуЗарплатыЗарплата.Сумма КАК СуммаКВыплате,
	|	ВедомостьНаВыплатуЗарплатыЗарплата.КомпенсацияЗаЗадержкуЗарплаты КАК КомпенсацияЗаЗадержкуЗарплаты,
	|	ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка КАК Ведомость,
	|	ВедомостьНаВыплатуЗарплатыЗарплата.Сумма + ВедомостьНаВыплатуЗарплатыЗарплата.КомпенсацияЗаЗадержкуЗарплаты КАК ИтогоКВыплате
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплаты.Зарплата КАК ВедомостьНаВыплатуЗарплатыЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОплатаВедомостейНаВыплатуЗарплаты КАК ОплатаВедомостейНаВыплатуЗарплаты
	|		ПО (ОплатаВедомостейНаВыплатуЗарплаты.Ведомость = ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка)
	|			И (ОплатаВедомостейНаВыплатуЗарплаты.ФизическоеЛицо = ВедомостьНаВыплатуЗарплатыЗарплата.ФизическоеЛицо)
	|			И (ОплатаВедомостейНаВыплатуЗарплаты.Регистратор <> &Регистратор)
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка В(&Ведомости)
	|	И (&ПоВсемФизлицам
	|			ИЛИ ВедомостьНаВыплатуЗарплатыЗарплата.ФизическоеЛицо В (&ФизическиеЛица))
	|	И ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка.ВидМестаВыплаты В(&ВидМестаВыплаты)
	|	И ОплатаВедомостейНаВыплатуЗарплаты.ФизическоеЛицо ЕСТЬ NULL
	|	#УсловиеПоДепонированию";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#УсловиеПоДепонированию", УсловиеПоДепонированию);
	
	Запрос.УстановитьПараметр("Ведомости",			Ведомости);
	Запрос.УстановитьПараметр("ПоВсемФизлицам",		ФизическиеЛица = Неопределено);
	Запрос.УстановитьПараметр("ФизическиеЛица",		ФизическиеЛица);
	Запрос.УстановитьПараметр("ВидМестаВыплаты",	ВидМестаВыплаты);
	Запрос.УстановитьПараметр("Регистратор",		Регистратор);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#КонецЕсли