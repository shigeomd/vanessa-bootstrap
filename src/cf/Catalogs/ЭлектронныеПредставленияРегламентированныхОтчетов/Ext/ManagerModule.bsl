#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьНаименование(ВидОтчета, НачалоПериода, КонецПериода, Организация) Экспорт
	
	ТипДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидОтчета, "ТипДокумента");
	
	Если ТипДокумента = Перечисления.ТипыОтправляемыхДокументов.РеестрСведенийФСС
		ИЛИ ТипДокумента = Перечисления.ТипыОтправляемыхДокументов.ИсходящееУведомлениеФНС Тогда
		ШаблонНаименования = НСтр("ru = '%1 (%2)'");
	Иначе
		ШаблонНаименования = НСтр("ru = '%1 за %3 (%2)'");
	КонецЕсли;
		
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонНаименования, ВидОтчета, Организация,
				ПолучитьПредставлениеПериода(ВидОтчета, НачалоПериода, КонецПериода));
	
КонецФункции
			
Функция ПолучитьПредставлениеВидаДокумента(Вид) Экспорт
	
	Если Вид = 0 Тогда
		Возврат "П";
	ИначеЕсли Вид = Неопределено Тогда
		Возврат "-";
	Иначе
		Возврат "К/" + Вид;
	КонецЕсли;
	
КонецФункции 

Функция ПолучитьПредставлениеПериода(ВидОтчета, НачалоПериода, КонецПериода) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидОтчета) Тогда
		Возврат "";
	КонецЕсли;
	
	ТипДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидОтчета, "ТипДокумента");
	
	Если ТипДокумента = Перечисления.ТипыОтправляемыхДокументов.РеестрСведенийФСС
		ИЛИ ТипДокумента = Перечисления.ТипыОтправляемыхДокументов.ИсходящееУведомлениеФНС Тогда
		Возврат "";
	КонецЕсли;

	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		Возврат ПредставлениеПериода(НачалоПериода, КонецДня(КонецПериода), "ФП=Истина");
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Процедура ОбновитьНаименование(Параметры) Экспорт
	
	НачатьТранзакцию();
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭлектронныеПредставленияРегламентированныхОтчетов.Ссылка
		|ИЗ
		|	Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов КАК ЭлектронныеПредставленияРегламентированныхОтчетов
		|ГДЕ
		|	НЕ ЭлектронныеПредставленияРегламентированныхОтчетов.ВидОтчета.ТипДокумента ЕСТЬ NULL ";
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ЭлектронныеПредставленияРегламентированныхОтчетов");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Ссылка");
		Блокировка.Заблокировать();
		

		Пока Выборка.Следующий() Цикл
			ЗагруженныйОтчетОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ЗагруженныйОтчетОбъект.Записать();
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда 
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Справочник", "ЭлектронныеПредставленияРегламентированныхОтчетов", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли