#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получение параметров отбора.
	Параметры.Отбор.Свойство("ТекущаяОрганизация", ОтборТекущаяОрганизация);
	Параметры.Отбор.Свойство("ГоловнаяОрганизация", ОтборГоловнаяОрганизация);
	Параметры.Отбор.Свойство("ТекущееПодразделение", ОтборТекущееПодразделение);
	
	Параметры.Отбор.Удалить("ТекущаяОрганизация");
	Параметры.Отбор.Удалить("ГоловнаяОрганизация");
	Параметры.Отбор.Удалить("ТекущееПодразделение");
	
	// Считается, что организация такая же как и головная организация, если организация не задана.
	Если НЕ ЗначениеЗаполнено(ОтборГоловнаяОрганизация) Тогда
		ОтборГоловнаяОрганизация = ОтборТекущаяОрганизация;
	ИначеЕсли НЕ ЗначениеЗаполнено(ОтборТекущаяОрганизация) Тогда
		ОтборТекущаяОрганизация = ОтборГоловнаяОрганизация;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ОтборГоловнаяОрганизация) Тогда
		ОтборГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(ОтборГоловнаяОрганизация);
	КонецЕсли; 
			
	// Получение значений по умолчанию, если организация не задана.
	Если НЕ ЗначениеЗаполнено(ОтборТекущаяОрганизация) Тогда
		
		ЗаполняемыеЗначения = Новый Структура;
		ЗаполняемыеЗначения.Вставить("Организация", "ОтборТекущаяОрганизация");
		ЗаполняемыеЗначения.Вставить("Подразделение", "ОтборТекущееПодразделение");
		
		ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗаполняемыеЗначения);
		
	КонецЕсли; 
	
	// Настройка формы для режима выбора.
	Если Параметры.РежимВыбора Тогда
		
		Элементы.Список.РежимВыбора = Истина;
		Список.АвтоматическоеСохранениеПользовательскихНастроек = Ложь;
		
		Если Параметры.ЗакрыватьПриВыборе = Ложь Тогда
			Элементы.Список.МножественныйВыбор = Истина;
			Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
		КонецЕсли;
		
		// Если это выбор из особенного документа, например "Прием на работу"
		// управляем отборами в зависимости от "принятости на работу".
		Параметры.Свойство("ДоступныНепринятые", ДоступныНепринятые);
		Если ДоступныНепринятые Тогда
			
			ОтборТекущаяОрганизация = ОтборГоловнаяОрганизация;
			ОтборТекущееПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			ОтборГоловнаяОрганизация = Справочники.Организации.ПустаяСсылка();
			
			МассивПараметровВыбора = Новый Массив;
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ОбособленноеПодразделение", Ложь));
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ОтборТекущаяОрганизация",
				"ПараметрыВыбора",
				Новый ФиксированныйМассив(МассивПараметровВыбора)
			);
			
			Параметры.Отбор.Вставить("ОформленПоТрудовомуДоговору", Ложь);
			
			// Если при открытии формы выбора передан сотрудник, и он уже принят на работу
			// отключим отбор по непринятым сотрудникам.
			Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
				
				КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Параметры.ТекущаяСтрока, "ТекущаяОрганизация", ТекущаяДатаСеанса());
				Если КадровыеДанные.Количество() > 0 Тогда
					Если ЗначениеЗаполнено(КадровыеДанные[0].ТекущаяОрганизация) Тогда
						Параметры.Отбор.Удалить("ОформленПоТрудовомуДоговору");
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"СписокКомпоновщикНастроекПользовательскиеНастройкиТекущееПодразделение",
				"Видимость",
				Ложь);
			
		Иначе
			
			Параметры.Свойство("ДоступныПринятыеИУволенные", ДоступныПринятыеИУволенные);
		
			НачалоПериодаПримененияОтбора = '00010101';
			ОкончаниеПериодаПримененияОтбора = '00010101';
			
			Если Параметры.Отбор.Свойство("ДатаПримененияОтбора")
				И ЗначениеЗаполнено(Параметры.Отбор.ДатаПримененияОтбора) Тогда
				
				НачалоПериодаПримененияОтбора = Параметры.Отбор.ДатаПримененияОтбора;
				ОкончаниеПериодаПримененияОтбора = Параметры.Отбор.ДатаПримененияОтбора;
			
			КонецЕсли;
				
			Если Параметры.Отбор.Свойство("НачалоПериодаПримененияОтбора")
				И ЗначениеЗаполнено(Параметры.Отбор.НачалоПериодаПримененияОтбора) Тогда
				
				НачалоПериодаПримененияОтбора = Параметры.Отбор.НачалоПериодаПримененияОтбора;
				
				Если Параметры.Отбор.Свойство("ОкончаниеПериодаПримененияОтбора")
					И ЗначениеЗаполнено(Параметры.Отбор.ОкончаниеПериодаПримененияОтбора) Тогда
					
					ОкончаниеПериодаПримененияОтбора = Параметры.Отбор.ОкончаниеПериодаПримененияОтбора;
						
				Иначе
					ОкончаниеПериодаПримененияОтбора = КонецМесяца(НачалоПериодаПримененияОтбора);
				КонецЕсли;
			
			КонецЕсли; 
			
			// Установка отбора по периоду работы.
			Если ЗначениеЗаполнено(НачалоПериодаПримененияОтбора) Тогда
				
				Если НачалоДня(НачалоПериодаПримененияОтбора) = НачалоДня(ОкончаниеПериодаПримененияОтбора) Тогда
					ЗаголовокЭлементаОтбора = НСтр("ru='Работающие'") + " " + Формат(НачалоПериодаПримененияОтбора, "ДЛФ=DD");
				Иначе
					ЗаголовокЭлементаОтбора = НСтр("ru='Работающие в периоде с'") + " " + Формат(НачалоПериодаПримененияОтбора, "ДЛФ=DD") + " " + НСтр("ru='по'") + " " + Формат(ОкончаниеПериодаПримененияОтбора, "ДЛФ=DD");
				КонецЕсли;
				
				ГруппаОтбораИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
					Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, ЗаголовокЭлементаОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
				ГруппаОтбораИ.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаОтбораИ, "ДатаПриема", , ВидСравненияКомпоновкиДанных.Заполнено, , Истина);
				
				ГруппаОтбораИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбораИ, , ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаОтбораИЛИ, "ДатаПриема", ОкончаниеПериодаПримененияОтбора, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, , Истина);
					
				ГруппаОтбораИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбораИ, , ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаОтбораИЛИ, "ДатаУвольнения", , ВидСравненияКомпоновкиДанных.НеЗаполнено, НСтр("ru='Заполненность даты увольнения'"), Истина);
				
				ГруппаОтбораИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбораИЛИ, , ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаОтбораИЛИ, "ДатаУвольнения", НачалоПериодаПримененияОтбора, ВидСравненияКомпоновкиДанных.БольшеИлиРавно, , Истина);
					
			КонецЕсли; 
			
			// Режим в котором доступны все сотрудники.
			Если НЕ Параметры.Свойство("ДоступныВсеСотрудники") Тогда
				Параметры.Отбор.Вставить("ОформленПоТрудовомуДоговору", Истина);
			КонецЕсли;
			
		КонецЕсли;
		
		Элементы.Список.ИзменятьСоставСтрок = ДоступныНепринятые ИЛИ ДоступныПринятыеИУволенные;
		
		// Настройка заголовка формы
		АвтоЗаголовок = Ложь;
		Если ЗначениеЗаполнено(ОтборТекущаяОрганизация) ИЛИ ЗначениеЗаполнено(ОтборГоловнаяОрганизация) Тогда
			
			ОрганизацияЗаголовка = ?(ЗначениеЗаполнено(ОтборТекущаяОрганизация), ОтборТекущаяОрганизация, ОтборГоловнаяОрганизация);
			НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЗаголовка, "Наименование");;
			
		Иначе
			НаименованиеОрганизации = НСтр("ru = '<Организация не указана>'");
		КонецЕсли;
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сотрудники (%1)'"), НаименованиеОрганизации);
		
		// Подготовка списка подобранных сотрудников.
		АдресСпискаПодобранныхСотрудников = "";
		Если Параметры.Свойство("АдресСпискаПодобранныхСотрудников", АдресСпискаПодобранныхСотрудников) Тогда
			Если НЕ ПустаяСтрока(АдресСпискаПодобранныхСотрудников) Тогда
				СписокПодобранных.ЗагрузитьЗначения(ПолучитьИзВременногоХранилища(АдресСпискаПодобранныхСотрудников));
			КонецЕсли; 
		КонецЕсли; 
		
	Иначе
		
		// Заполнение меню ввода на основании.
		СотрудникиФормы.УстановитьМенюВводаНаОсновании(ЭтаФорма, "ОформитьДокумент");
		
		// СтандартныеПодсистемы.Печать
		УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.КоманднаяПанельФормы);
		// Конец СтандартныеПодсистемы.Печать
		
	КонецЕсли; 
	
	// Установка признаков использования быстрых отборов.
	ОтборТекущаяОрганизацияИспользование = ЗначениеЗаполнено(ОтборТекущаяОрганизация);
	ОтборТекущееПодразделениеИспользование = ЗначениеЗаполнено(ОтборТекущееПодразделение);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

	// Заполнение группы информационных ссылок.
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ТехнологияСервиса.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрСервер");
		Модуль.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);
	КонецЕсли;
	
	// Установка отбора по головной организации.
	Если ЗначениеЗаполнено(ОтборГоловнаяОрганизация) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор,
			"ГоловнаяОрганизация",
			ОтборГоловнаяОрганизация,
			,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			
	Иначе
			
		// Очистка  связей параметров выбора организации.
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ОтборТекущаяОрганизация",
			"СвязиПараметровВыбора",
			Новый ФиксированныйМассив(Новый Массив)
		);
		
	КонецЕсли;
	
	УстановитьСписокПодобранныхСотрудников();
	
	// Перенос отборов из параметров формы в настройки динамического списка.
	ЗарплатаКадрыКлиентСервер.НастроитьОтборыПараметровФормыСписка(Список, Параметры);
	
	ПрименитьОтборНаСервере();
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список", , , , "ТекущаяОрганизация, ТекущееПодразделение");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
	Если ИмяСобытия = "ИзменениеДанныхМестаРаботы" Тогда
		
		Элементы.Список.Обновить();
		
	ИначеЕсли ИмяСобытия = "СозданСотрудник" Тогда
		
		Если Параметры.РежимВыбора И Источник = ЭтаФорма Тогда
			ОповеститьОВыборе(Параметр);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ТехнологияСервиса.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрКлиент");
		Модуль.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ТехнологияСервиса.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрКлиент");
		Модуль.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТекущаяОрганизацияИспользованиеПриИзменении(Элемент)
	
	ПрименитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТекущаяОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОтбораПоОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТекущееПодразделениеИспользованиеПриИзменении(Элемент)
	
	ПрименитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТекущееПодразделениеПриИзменении(Элемент)
	
	ОтборТекущееПодразделениеИспользование = ЗначениеЗаполнено(ОтборТекущееПодразделение);
	ПрименитьОтбор();

КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Истина);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ОткрытиеФормыЭлементаСправочникаСотрудники");
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("СозданиеНовогоЭлементаСправочникаСотрудники");

	Если Элементы.Список.РежимВыбора И ДоступныНепринятые Тогда
		
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		
		Если ЗначениеЗаполнено(ОтборГоловнаяОрганизация) Тогда
			ПараметрыФормы.Вставить("ГоловнаяОрганизация", ОтборГоловнаяОрганизация);
		КонецЕсли;
		
		Если ОтборТекущаяОрганизацияИспользование И ЗначениеЗаполнено(ОтборТекущаяОрганизация) Тогда
			ПараметрыФормы.Вставить("ТекущаяОрганизация",  ОтборТекущаяОрганизация);
		КонецЕсли;
		
		ПараметрыФормы.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		ОткрытьФорму(
			"Справочник.Сотрудники.ФормаОбъекта",
			ПараметрыФормы,
			ЭтаФорма);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьОповещениеОВыборе(Элемент, Значение);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ОформитьНаОсновании(Команда)
	
	СотрудникиКлиент.ОформитьНаОсновании(ЭтаФорма, Элементы.Список.ТекущаяСтрока, Команда.Имя);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьОповещениеОВыборе(Элемент, Значение)
	
	Если Элемент.РежимВыбора И НЕ ЗакрыватьПриВыборе Тогда
		ОбновитьСписокПодобранных(Значение);
	КонецЕсли;
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПодобранных(Значение)
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		
		Для каждого ВыбранноеЗначение Из Значение Цикл
			СписокПодобранных.Добавить(ВыбранноеЗначение);
		КонецЦикла;
		
	Иначе
		СписокПодобранных.Добавить(Значение);
	КонецЕсли;
	
	УстановитьСписокПодобранныхСотрудников();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокПодобранныхСотрудников()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"СписокПодобранных",
		СписокПодобранных.ВыгрузитьЗначения());
		
КонецПроцедуры
	
&НаКлиенте
Процедура ПрименитьОтбор()
	
	УстановитьБыстрыйОтборСписка(
		Список,
		ОтборТекущаяОрганизацияИспользование,
		ОтборТекущаяОрганизация,
		ОтборТекущееПодразделениеИспользование,
		ОтборТекущееПодразделение,
		ДоступныНепринятые,
		ПолучитьФункциональнуюОпциюФормы("ИспользоватьНесколькоОрганизацийЗарплатаКадрыБазовая"));	
		
КонецПроцедуры

&НаСервере
Процедура ПрименитьОтборНаСервере()
	
	УстановитьБыстрыйОтборСписка(
		Список,
		ОтборТекущаяОрганизацияИспользование,
		ОтборТекущаяОрганизация,
		ОтборТекущееПодразделениеИспользование,
		ОтборТекущееПодразделение,
		ДоступныНепринятые,
		ПолучитьФункциональнуюОпциюФормы("ИспользоватьНесколькоОрганизацийЗарплатаКадрыБазовая"));	
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьБыстрыйОтборСписка(Список, ИспользованиеОрганизации, Организация, ИспользованиеПодразделения, Подразделение, ДоступныНепринятые, ИспользоватьНесколькоОрганизаций)
	
	Если ДоступныНепринятые Тогда
		ИмяПоляОтбораПоОрганизации = "ГоловнаяОрганизация";
	Иначе
		ИмяПоляОтбораПоОрганизации = "ТекущаяОрганизация";
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, ИмяПоляОтбораПоОрганизации);
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, "ТекущееПодразделение");
	
	Если ИспользованиеОрганизации И ИспользоватьНесколькоОрганизаций Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор,
			ИмяПоляОтбораПоОрганизации,
			Организация,
			,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			
	КонецЕсли; 
	
	Если ИспользованиеПодразделения Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор,
			"ТекущееПодразделение",
			Подразделение,
			,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОтбораПоОрганизации()
	
	ОтборТекущаяОрганизацияИспользование = ЗначениеЗаполнено(ОтборТекущаяОрганизация);
	ОтборТекущееПодразделение = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
	ОтборТекущееПодразделениеИспользование = Ложь;
	ПрименитьОтбор();
	
КонецПроцедуры

#КонецОбласти

