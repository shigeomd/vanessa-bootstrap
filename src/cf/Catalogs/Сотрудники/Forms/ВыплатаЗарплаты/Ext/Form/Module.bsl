
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Заголовок,СотрудникСсылка,ДатаПриема,ТекущаяОрганизация");
	СозданиеНового = Параметры.СозданиеНового;
	
	ЦветСтиляЦветТекстаПоля = ЦветаСтиля.ЦветТекстаПоля;
	ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СотрудникСсылка, "ФизическоеЛицо");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтаФорма,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		Параметры.АдресВХранилище);
	
	ПроинициализироватьФорму();
	
	ОтражениеЗарплатыВБухучете.УстановитьСписокВыбораОтношениеКЕНВД(Элементы, "ОтношениеКЕНВД");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, "ВыплатаЗарплаты");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ОтредактированаИстория" И Параметр.ИмяРегистра = "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам" Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамОбработкаОповещения(ИмяСобытия, Параметр, Источник);
	ИначеЕсли ИмяСобытия = "ОтредактированаИстория" И СотрудникСсылка = Источник Тогда
		
		Если Параметр.ИмяРегистра = "БухучетЗарплатыСотрудников" Тогда
			Если БухучетЗарплатыСотрудниковНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
					ЭтаФорма,
					СотрудникСсылка,
					ИмяСобытия,
					Параметр,
					Источник);
				ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// Значения введенные документом не изменяем.
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Период", ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период);
	Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Документ", ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Документ);
	Запрос.УстановитьПараметр("НомерЛицевогоСчета", ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета);
	Запрос.УстановитьПараметр("ЗарплатныйПроект", ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период
	|ИЗ
	|	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	|ГДЕ
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период = &Период
	|	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация = &Организация
	|	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо = &ФизическоеЛицо
	|	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Документ <> ЗНАЧЕНИЕ(Документ.ПодтверждениеОткрытияЛицевыхСчетовСотрудников.ПустаяСсылка)
	|	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Документ <> &Документ
	|	И (ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета <> &НомерЛицевогоСчета
	|			ИЛИ ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект <> &ЗарплатныйПроект)";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Существует запись, введенная документом, о номере лицевого счета с датой сведений %1.'"),
				ЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(Выборка.Период));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "НаборЗаписей.Период", , Отказ);
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураВедущихОбъектов = Новый Структура();
	СтруктураВедущихОбъектов.Вставить("Организация", ТекущаяОрганизация);
	СтруктураВедущихОбъектов.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФормеПоСтруктуре(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", СтруктураВедущихОбъектов, Отказ);
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "БухучетЗарплатыСотрудников", СотрудникСсылка, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерЛицевогоСчетаПриИзменении(Элемент)
	
	Если ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект = ПредопределенноеЗначение("Справочник.ЗарплатныеПроекты.ПустаяСсылка");
	ИначеЕсли Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект = ЗарплатныйПроектПоОрганизации(ТекущаяОрганизация);
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатныйПроектПриИзменении(Элемент)
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура СпособОтраженияЗарплатыВБухучетеПриИзменении(Элемент)
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
КонецПроцедуры

&НаКлиенте
Процедура ОтношениеКЕНВДПриИзменении(Элемент)
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСтатьяФинансированияПриИзменении(Элемент)
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПериодСтрокой", Модифицированность);
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтаФорма,
		ЭтаФорма,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период",
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПериодСтрокой", Направление, Модифицированность);
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействующийЛицевойСчет(Команда)
	
	ЛицевыеСчетаСотрудника = СписокЛицевыхСчетовСотрудника(ТекущаяОрганизация, ФизическоеЛицо, 
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя);
			
	ДополнительныеПараметры = Новый Структура("ЛицевыеСчетаСотрудника", ЛицевыеСчетаСотрудника);		
			
	Оповещение = Новый ОписаниеОповещения("ДействующийЛицевойСчетПродолжение", ЭтотОбъект, ДополнительныеПараметры); 
	ЛицевыеСчетаСотрудника.ПоказатьВыборЭлемента(Оповещение, НСтр("ru = 'Выберите действующий лицевой счет сотрудника.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДействующийЛицевойСчетПродолжение(ВыбранныйЭлементСписка, ДополнительныеПараметры) Экспорт 

	Если ВыбранныйЭлементСписка = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЛицевыеСчетаСотрудника = ДополнительныеПараметры.ЛицевыеСчетаСотрудника;
	
	СтруктураЛицевогоСчета = ВыбранныйЭлементСписка.Значение;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЛицевыеСчетаСотрудника", ЛицевыеСчетаСотрудника);
	ДополнительныеПараметры.Вставить("СтруктураЛицевогоСчета", СтруктураЛицевогоСчета);
	
	Оповещение = Новый ОписаниеОповещения("ДействующийЛицевойСчетЗавершение", ЭтотОбъект, ДополнительныеПараметры); 
	
	ТекстВопроса = НСтр("ru='Для перечисления зарплаты сотруднику будет использоваться счет в банке %1.
							|Номера лицевых счетов в других банках будут удалены. Продолжить?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, СтруктураЛицевогоСчета.Банк);
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействующийЛицевойСчетЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЛицевыеСчетаСотрудника = ДополнительныеПараметры.ЛицевыеСчетаСотрудника;
	СтруктураЛицевогоСчета = ДополнительныеПараметры.СтруктураЛицевогоСчета;
	
	УдалитьНеДействующиеЛицевыеСчетаСервере(ЛицевыеСчетаСотрудника, СтруктураЛицевогоСчета, ТекущаяОрганизация, ФизическоеЛицо);
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамКоличество = 1;
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект = СтруктураЛицевогоСчета.ЗарплатныйПроект;
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета = СтруктураЛицевогоСчета.НомерЛицевогоСчета;
	
	УстановитьСтраницуБанкСчетИнфо(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамИстория(Команда)
	
	СтруктураВедущихОбъектов = Новый Структура();
	СтруктураВедущихОбъектов.Вставить("Организация", ТекущаяОрганизация);
	СтруктураВедущихОбъектов.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсториюПоСтруктуре("ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", СтруктураВедущихОбъектов, ЭтаФорма, ТолькоПросмотр);
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковИстория(Команда)

	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("БухучетЗарплатыСотрудников", СотрудникСсылка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено)
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
		
	Если Не СозданиеНового И Не Отказ Тогда
		
		Оповещение = Новый ОписаниеОповещения("СохранитьДанныеЗавершение", ЭтотОбъект, ОповещениеЗавершения);
		
		ТекстКнопкиДа = НСтр("ru = 'Изменился номер лицевого счета'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При редактировании Вы изменили номер лицевого счета или зарплатный проект. 
			|Если Вы исправили прежнюю запись лицевого счета (она была ошибочной), нажмите ""Исправлена ошибка"".
			|Если у лицевого счета изменился номер или зарплатный проект с %1, нажмите ""%2""'"), 
			Формат(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период, "ДФ='д ММММ гггг ""г""'"),
			ТекстКнопкиДа);
		
		РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
		
		ЗапроситьРежимИзмененияБухгалтерскогоУчета(БухучетЗарплатыСотрудников.Период, Отказ, ОповещениеЗавершения);
		
	Иначе 
		СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт  

	Если Не Отказ Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			ВозвращаемыйПараметр = Новый Структура;
			ВозвращаемыйПараметр.Вставить("ИмяФормы", ИмяФормы);
			ВозвращаемыйПараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
			
			Оповестить(
			"ИзмененыДанныеДополнительнойФормы",
			ВозвращаемыйПараметр,
			ВладелецФормы);
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт  

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗарплатныйПроектПоОрганизации(ТекущаяОрганизация)
	Возврат ОбменСБанкамиПоЗарплатнымПроектам.ЗарплатныйПроектПоОрганизации(ТекущаяОрганизация);
КонецФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	Если ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = Неопределено Тогда
		ПрочитатьЛицевыеСчетаСотрудника();
	КонецЕсли; 
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПериодСтрокой");
	
	Если НЕ ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
		СтруктураПояснения = СтруктураПоясненияКНомеруЛицевогоСчета(
			ФизическоеЛицо,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя);
		
		ФизическоеЛицоЛСВведенДокументом = СтруктураПояснения.ВведенДокументом;
		
		ОбменСБанкамиПоЗарплатнымПроектамКлиентСервер.УстановитьПояснениеКНомеруЛицевогоСчета(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета", СтруктураПояснения);
	Иначе
		ОбменСБанкамиПоЗарплатнымПроектамКлиентСервер.УстановитьПояснениеКНомеруЛицевогоСчета(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета");
	КонецЕсли;
	
	УстановитьДоступностьБанкСчет();
	УстановитьСтраницуБанкСчетИнфо(ЭтаФорма);
	
	Если БухучетЗарплатыСотрудниковПрежняя = Неопределено Тогда
		РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "БухучетЗарплатыСотрудников", СотрудникСсылка);
	КонецЕсли; 
	
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, ТекущаяДатаСеанса());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокЛицевыхСчетовСотрудника(Организация, ФизическоеЛицо, ЗарплатныйПроект, НомерСчета, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период КАК Период,
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект КАК ЗарплатныйПроект,
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Банк КАК Банк,
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета КАК НомерЛицевогоСчета
	|ИЗ
	|	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СрезПоследних(
	|			&ДатаСреза,
	|			Организация = &Организация
	|				И ФизическоеЛицо = &ФизическоеЛицо) КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам";
	
	ЛицевыеСчетаСотрудника = Запрос.Выполнить().Выбрать();
	
	СписокЛицевыхСчетов = Новый СписокЗначений;
	
	Пока ЛицевыеСчетаСотрудника.Следующий() Цикл
		
		СтруктураЛицевогоСчета = Новый Структура;
		СтруктураЛицевогоСчета.Вставить("Период", ЛицевыеСчетаСотрудника.Период);
		СтруктураЛицевогоСчета.Вставить("НомерЛицевогоСчета", ЛицевыеСчетаСотрудника.НомерЛицевогоСчета);
		СтруктураЛицевогоСчета.Вставить("ЗарплатныйПроект", ЛицевыеСчетаСотрудника.ЗарплатныйПроект);
		СтруктураЛицевогоСчета.Вставить("Банк", ЛицевыеСчетаСотрудника.Банк);
		
		СписокЛицевыхСчетов.Добавить(СтруктураЛицевогоСчета,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'"),
					ЛицевыеСчетаСотрудника.НомерЛицевогоСчета,
					ЛицевыеСчетаСотрудника.Банк));
		
	КонецЦикла;
	
	// Если изменили лицевой счет на форме, то заменим его в списке.
	Для каждого ЭлементСписка Из СписокЛицевыхСчетов Цикл
		ЛицевойСчетСотрудника = ЭлементСписка.Значение;
		Если ЛицевойСчетСотрудника.Период = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя.Период
			И ЛицевойСчетСотрудника.НомерЛицевогоСчета = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя.НомерЛицевогоСчета
			И ЛицевойСчетСотрудника.ЗарплатныйПроект = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя.ЗарплатныйПроект Тогда
			
			ЛицевойСчетСотрудника.НомерЛицевогоСчета = НомерСчета;
			ЛицевойСчетСотрудника.ЗарплатныйПроект = ЗарплатныйПроект;
			ЭлементСписка.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'"),
										НомерСчета,
										?(ЗначениеЗаполнено(ЗарплатныйПроект),
													ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗарплатныйПроект, "Банк"),
													ЛицевойСчетСотрудника.Банк));
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокЛицевыхСчетов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьНеДействующиеЛицевыеСчетаСервере(СписокЛицевыхСчетовСотрудника, СтруктураВыбранногоЭлемента, Организация, ФизическоеЛицо)
	
	Для каждого ЭлементСписка Из СписокЛицевыхСчетовСотрудника Цикл
		
		СтруктураЛицевогоСчета = ЭлементСписка.Значение;
		Если СтруктураЛицевогоСчета.Банк = СтруктураВыбранногоЭлемента.Банк
			И СтруктураЛицевогоСчета.НомерЛицевогоСчета = СтруктураВыбранногоЭлемента.НомерЛицевогоСчета
			И СтруктураЛицевогоСчета.ЗарплатныйПроект = СтруктураВыбранногоЭлемента.ЗарплатныйПроект Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ЗаписьНабора = РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СоздатьМенеджерЗаписи();
		ЗаписьНабора.Организация = Организация;
		ЗаписьНабора.ФизическоеЛицо = ФизическоеЛицо;
		ЗаписьНабора.Банк = СтруктураЛицевогоСчета.Банк;
		ЗаписьНабора.Прочитать();
		
		ЗаписьНабора.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуБанкСчетИнфо(Форма) Экспорт
	
	Если Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамКоличество > 1 Тогда
		
		Форма.Элементы.ЛицевойСчетСтраницы.ТекущаяСтраница = Форма.Элементы.ЛицевойСчетСтраницаДействующий;
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамДействующийИнфо = НСтр("ru = 'В настоящий момент зарегистрированы лицевые счета и в других банках.
			|Для корректного заполнения документов следует использовать единственный лицевой счет.'");
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамДействующийКартинка = БиблиотекаКартинок.Предупреждение;
		
	Иначе
		
		Форма.Элементы.ЛицевойСчетСтраницы.ТекущаяСтраница = Форма.Элементы.ЛицевойСчетСтраницаИнфо;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьБанкСчет() Экспорт
	
	ОрганизацияЗаполнена = ЗначениеЗаполнено(ТекущаяОрганизация);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗарплатныйПроект",
		"Доступность",
		ОрганизацияЗаполнена И Не ФизическоеЛицоЛСВведенДокументом);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"Доступность",
		ОрганизацияЗаполнена И Не ФизическоеЛицоЛСВведенДокументом);
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамИнфо = ?(ОрганизацияЗаполнена, "", СотрудникиФормыВнутренний.БанковскийСчетИнформацияОПричинахНедоступности());
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамКартинка = ?(ОрганизацияЗаполнена, Новый Картинка, БиблиотекаКартинок.Информация);
	
	Если ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета)
		И НЕ ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
		ОтметкаНезаполненного = Ложь;
	ИначеЕсли ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект)
		И НЕ ОбменСБанкамиПоЗарплатнымПроектам.ИспользоватьЭОИСБанком(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
		ОтметкаНезаполненного = Ложь;
	Иначе
		ОтметкаНезаполненного = Истина;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"АвтоОтметкаНезаполненного",
		ОтметкаНезаполненного);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗарплатныйПроект",
		"АвтоОтметкаНезаполненного",
		ОтметкаНезаполненного);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"ОтметкаНезаполненного",
		ОтметкаНезаполненного);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗарплатныйПроект",
		"ОтметкаНезаполненного",
		ОтметкаНезаполненного);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЛицевыеСчетаСотрудника()
	
	СтруктураВедущихОбъектов = Новый Структура();
	СтруктураВедущихОбъектов.Вставить("Организация", ТекущаяОрганизация);
	СтруктураВедущихОбъектов.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеПоСтруктуре(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", СтруктураВедущихОбъектов);
	
	МассивСотрудников = Новый Массив;
	МассивСотрудников.Добавить(СотрудникСсылка);
	ЛицевыеСчетаФизическогоЛица = ОбменСБанкамиПоЗарплатнымПроектам.ЛицевыеСчетаСотрудников(МассивСотрудников, Истина, ТекущаяОрганизация);
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамКоличество = ЛицевыеСчетаФизическогоЛица.Количество();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНовуюЗаписьЛицевыеСчетаСотрудниковПоЗарплатнымПроектам()
	
	Если Не ЭтаФорма["ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНаборЗаписейПрочитан"] Тогда
		
		СтруктураВедущихОбъектов = Новый Структура();
		СтруктураВедущихОбъектов.Вставить("Организация", ТекущаяОрганизация);
		СтруктураВедущихОбъектов.Вставить("ФизическоеЛицо", ФизическоеЛицо);
		ПрочитатьНаборЗаписейПериодическихСведенийПоСтруктуре("ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", СтруктураВедущихОбъектов);
		
	КонецЕсли;
	
	НоваяЗапись = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяЗапись, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам);
	Если ЗначениеЗаполнено(НоваяЗапись.Документ) Тогда
		НоваяЗапись.Документ = Неопределено;
	КонецЕсли;
	НовыйПериод = НачалоМесяца(ТекущаяДатаСеанса());
	Если ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНаборЗаписей.Количество() > 1 Тогда
		ПоследнийПериод = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНаборЗаписей.Получить(
				ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНаборЗаписей.Количество() - 2).Период;
	Иначе
		ПоследнийПериод = '00010101000000';
	КонецЕсли;
	Если НовыйПериод <= ПоследнийПериод Тогда
		НовыйПериод = КонецМесяца(ПоследнийПериод) + 1;
	КонецЕсли;
	НоваяЗапись.Период = НовыйПериод;
	
	ЗаполнитьЗначенияСвойств(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам, НоваяЗапись);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПериодСтрокой");
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНоваяЗапись = Истина;
	
	СтруктураЗаписиСтрокой = "";
	ПрежняяЗапись = Новый Структура;
	НужнаЗапятая = Ложь;
	Для Каждого КлючЗначение Из ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя Цикл
		Если НужнаЗапятая Тогда
			СтруктураЗаписиСтрокой = СтруктураЗаписиСтрокой + ",";
		КонецЕсли;
		СтруктураЗаписиСтрокой = СтруктураЗаписиСтрокой + КлючЗначение.Ключ;
		НужнаЗапятая = Истина;
		ПрежняяЗапись.Вставить(КлючЗначение.Ключ);
	КонецЦикла;
	ЗаполнитьЗначенияСвойств(ПрежняяЗапись, НоваяЗапись);
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = Новый ФиксированнаяСтруктура(ПрежняяЗапись);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении()
	
	// Значения введенные документом не изменяем.
	Если ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя.Документ) Тогда
		СоздатьНовуюЗаписьЛицевыеСчетаСотрудниковПоЗарплатнымПроектам();
	КонецЕсли;
	
	СтруктураВедущихОбъектов = Новый Структура();
	СтруктураВедущихОбъектов.Вставить("Организация", ТекущаяОрганизация);
	СтруктураВедущихОбъектов.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВводаПоСтруктуре(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", СтруктураВедущихОбъектов);
	
	Если НЕ ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
		СтруктураПояснения = СтруктураПоясненияКНомеруЛицевогоСчета(
			ФизическоеЛицо,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя);
		
		ФизическоеЛицоЛСВведенДокументом = СтруктураПояснения.ВведенДокументом;
		
		ОбменСБанкамиПоЗарплатнымПроектамКлиентСервер.УстановитьПояснениеКНомеруЛицевогоСчета(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета", СтруктураПояснения);
	Иначе
		ОбменСБанкамиПоЗарплатнымПроектамКлиентСервер.УстановитьПояснениеКНомеруЛицевогоСчета(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета");
	КонецЕсли;
	
	УстановитьДоступностьБанкСчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СтруктураВедущихОбъектов = Новый Структура();
	СтруктураВедущихОбъектов.Вставить("Организация", ТекущаяОрганизация);
	СтруктураВедущихОбъектов.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	
	РедактированиеПериодическихСведенийКлиент.ОбработкаОповещенияПоСтруктуре(ЭтаФорма, СтруктураВедущихОбъектов, ИмяСобытия, Параметр, Источник);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПериодСтрокой");
	
	Если НЕ ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
		СтруктураПояснения = СтруктураПоясненияКНомеруЛицевогоСчета(
			ФизическоеЛицо,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя);
		
		ФизическоеЛицоЛСВведенДокументом = СтруктураПояснения.ВведенДокументом;
		
		ОбменСБанкамиПоЗарплатнымПроектамКлиентСервер.УстановитьПояснениеКНомеруЛицевогоСчета(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета", СтруктураПояснения);
	Иначе
		ОбменСБанкамиПоЗарплатнымПроектамКлиентСервер.УстановитьПояснениеКНомеруЛицевогоСчета(ЭтаФорма, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураПоясненияКНомеруЛицевогоСчета(ФизическоеЛицо, ЗарплатныйПроект, НомерЛицевогоСчета, Знач ЛицевыеСчета, ЛицевыеСчетаПрежняя)
	
	СтруктураПояснения = ОбменСБанкамиПоЗарплатнымПроектам.СтруктураПоясненияКНомеруЛицевогоСчета(
			ФизическоеЛицо,
			ЗарплатныйПроект,
			НомерЛицевогоСчета,
			ЛицевыеСчета,
			ЛицевыеСчетаПрежняя);
	
	Возврат СтруктураПояснения;
	
КонецФункции

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведенийПоСтруктуре(ИмяРегистра, СтруктураВедущихОбъектов) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтаФорма, ИмяРегистра, СтруктураВедущихОбъектов);
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтаФорма);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОБухучетеПериод(Форма, ДатаСеанса) Экспорт
	
	// Не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о бухучете еще нет.
	Если ЗарплатаКадрыКлиентСервер.СведенияОБухучетеСотрудникаПоУмолчанию(Форма.БухучетЗарплатыСотрудников) И 
		НЕ ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудниковПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Форма.БухучетЗарплатыСотрудников.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Если ЗначениеЗаполнено(Форма.ДатаПриема) Тогда
				Форма.БухучетЗарплатыСотрудников.Период = НачалоДня(Форма.ДатаПриема);
			Иначе
				Форма.БухучетЗарплатыСотрудников.Период = НачалоДня(ДатаСеанса);
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "БухучетЗарплатыСотрудников", Форма.СотрудникСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияБухгалтерскогоУчета(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияБухгалтерскогоУчетаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru = 'Изменился бухучет'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru =  'При редактировании изменился бухгалтерский учет для сотрудника. 
					|Если просто исправлены прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
					|Если бухучет сотрудника изменился с %1, нажмите ""Изменился бухучет""'"), 
		Формат(ДатаИзменения, "ДЛФ=DD"));
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "БухучетЗарплатыСотрудников", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияБухгалтерскогоУчетаЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	СохранитьДанныеЗавершение(Отказ, ДополнительныеПараметры.ОповещениеЗавершения);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

#КонецОбласти
