#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыполнитьПроверкуКлючевыхРеквизитов(Отказ)

	Если ЭтоНовый() тогда
		//В случае нового договора не производить проверку
		Возврат;
	КонецЕсли;

	// Получим значения реквизитов договора из информационной базы
	РеквизитыДоговораИзИБ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"ПометкаУдаления, Владелец, ВалютаВзаиморасчетов, ВидДоговора, 
		|Организация, РасчетыВУсловныхЕдиницах, УчетАгентскогоНДС, ПредъявляетНДС");

	Если ПометкаУдаления <> РеквизитыДоговораИзИБ.ПометкаУдаления тогда
		//В случае установки или снятия пометки удаления не производить проверку
		Возврат;
	КонецЕсли;


	// Проверим, можно ли изменять реквизиты договора.

	УстановитьПривилегированныйРежим(Истина);

	Если ЭтоГруппа Тогда

		// Для группы владельца менять нельзя
		Если Владелец <> РеквизитыДоговораИзИБ.Владелец Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя изменять контрагента для группы договоров.'"); 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", 
								НСтр("ru = 'Контрагент'"), , , ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Владелец", "Объект", Отказ);
		КонецЕсли;

	Иначе

		// Для элемента нужно получить документы, в которых использован договор:
		ЕстьПроведенныеДокументыПоДоговору = Ложь;
		ЕстьОформленныеДокументыПоДоговору = Ложь;
		
		НеобходимаПроверка = ОпределитьНеобходимостьПроверки(РеквизитыДоговораИзИБ, 
			ЕстьПроведенныеДокументыПоДоговору, ЕстьОформленныеДокументыПоДоговору);
		
		Если НеобходимаПроверка Тогда

			// Проверим возможность смены владельца для договора
			Если ЕстьОформленныеДокументыПоДоговору = Истина Тогда
				ТекстСообщения = НСтр("ru = 'Существуют документы, оформленные по договору %1.'"); 
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Наименование);
				СообщитьОНекорректномРеквизите("Владелец", НСтр("ru = 'Контрагент'"), ТекстСообщения, Отказ);
			КонецЕсли;

			Если ЕстьПроведенныеДокументыПоДоговору Тогда
				СписокРеквизитов = Новый Структура("ВалютаВзаиморасчетов, ВидДоговора, Организация, РасчетыВУсловныхЕдиницах, УчетАгентскогоНДС, ПредъявляетНДС", 
							НСтр("ru = 'Валюта расчетов'"), 
							НСтр("ru = 'Вид договора'"), 
							НСтр("ru = 'Организация'"), 
							НСтр("ru = 'Расчеты в условных единицах'"),
							НСтр("ru = 'Налоговый агент'"),
							НСтр("ru = 'Предъявляет НДС'"));
				ТекстСообщения = НСтр("ru = 'Существуют документы, проведенные по договору %1.
					|Реквизит %2 не может быть изменен.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Наименование);
				Для Каждого КлючИЗначение Из СписокРеквизитов Цикл
					СообщитьОНекорректномРеквизите(КлючИЗначение.Ключ, КлючИЗначение.Значение, ТекстСообщения, Отказ);
				КонецЦикла;
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Функция ОпределитьНеобходимостьПроверки(РеквизитыДоговораИзИБ, ЕстьПроведенныеДокументыПоДоговору, ЕстьОформленныеДокументыПоДоговору)

	ЕстьПроведенныеДокументыПоДоговору = Ложь;
	ЕстьОформленныеДокументыПоДоговору = Ложь;

	ПроверятьПризнакПредъявляетНДС = ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком
		ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером
		ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку
		ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом;
		
	Если Владелец <> РеквизитыДоговораИзИБ.Владелец
		ИЛИ ВалютаВзаиморасчетов <> РеквизитыДоговораИзИБ.ВалютаВзаиморасчетов 
		ИЛИ ВидДоговора <> РеквизитыДоговораИзИБ.ВидДоговора
		ИЛИ Организация <> РеквизитыДоговораИзИБ.Организация
		ИЛИ РасчетыВУсловныхЕдиницах <> РеквизитыДоговораИзИБ.РасчетыВУсловныхЕдиницах 
		ИЛИ УчетАгентскогоНДС <> РеквизитыДоговораИзИБ.УчетАгентскогоНДС
		ИЛИ ПроверятьПризнакПредъявляетНДС 
		И ПредъявляетНДС <> РеквизитыДоговораИзИБ.ПредъявляетНДС Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Договор", Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыПоДоговоруКонтрагента.Ссылка КАК ДокументПоДоговору
		|ИЗ
		|	КритерийОтбора.ДокументыПоДоговоруКонтрагента(&Договор) КАК ДокументыПоДоговоруКонтрагента";
		
		МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументПоДоговору");
		
		Если МассивДокументов.Количество() > 0 Тогда
		
			МассивНеПроведенныхДокументов = ОбщегоНазначения.ПроверитьПроведенностьДокументов(МассивДокументов);
			
			ЕстьОформленныеДокументыПоДоговору = Истина;
			ЕстьПроведенныеДокументыПоДоговору = (МассивНеПроведенныхДокументов.Количество() < МассивДокументов.Количество());
			
		КонецЕсли;
			
		Возврат Истина;

	Иначе

		// Проверку запускать не надо, ключевые реквизиты не менялись
		Возврат Ложь;

	КонецЕсли;

КонецФункции

Процедура СообщитьОНекорректномРеквизите(ИмяРеквизита, СинонимРеквизита, ШаблонСообщения, Отказ)

	Если ЭтотОбъект[ИмяРеквизита] <> Ссылка[ИмяРеквизита] Тогда
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%2", СинонимРеквизита);
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", 
			СинонимРеквизита, , , ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, ИмяРеквизита, "Объект", Отказ);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКопировании(ОбъектКопирования)
	
	ФайлДоговора = Неопределено;

КонецПроцедуры

// Процедура вызывается перед записью элемента справочника.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		Валютный      = (ВалютаВзаиморасчетов <> ВалютаРегламентированногоУчета);
		ОплатаВВалюте = (ВалютаВзаиморасчетов <> ВалютаРегламентированногоУчета) И НЕ РасчетыВУсловныхЕдиницах;
	КонецЕсли;

	ВыполнитьПроверкуКлючевыхРеквизитов(Отказ);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнениеДокументов.ЗаполнитьПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	Если НЕ ЭтоГруппа Тогда
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		КонецЕсли;
		Если ЗначениеЗаполнено(Организация) Тогда
			Организация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
		
		Справочники.ДоговорыКонтрагентов.ЗаполнитьРуководителяОрганизации(ЭтотОбъект);
		Справочники.ДоговорыКонтрагентов.ЗаполнитьРуководителяКонтрагента(ЭтотОбъект);
		
	КонецЕсли;

КонецПроцедуры
#КонецЕсли

