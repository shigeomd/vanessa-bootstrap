#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// Отбор по полю "Организация" всегда выполняется по головной организации.
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Если ЗначениеЗаполнено(Параметры.Отбор.Организация) Тогда
			Параметры.Отбор.Организация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Параметры.Отбор.Организация);
		КонецЕсли;
	КонецЕсли;

	Если Параметры.Свойство("ВалютаВзаиморасчетовНеРавно") Тогда
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(Список, "ВалютаВзаиморасчетов",
		                                                        Параметры.ВалютаВзаиморасчетовНеРавно,
		                                                        ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;
	
	ОткрытИзПлатежки = Параметры.Свойство("ОткрытИзПлатежки");
	
	// При отборе по виду договора проверяем на виды, связанные с отключаемыми функциональными опциями
	Если Параметры.Отбор.Свойство("ВидДоговора") Тогда
		ЕстьНедоступные   = Ложь;
		ДоступныеЗначения = Перечисления.ВидыДоговоровКонтрагентов.ПолучитьСписокДоступныхЗначений(
			Параметры.Отбор.ВидДоговора, ЕстьНедоступные);
		Если ЕстьНедоступные Тогда
			Если ДоступныеЗначения.Количество() = 0 Тогда
				ЗначениеОтбора = Неопределено;
			ИначеЕсли ДоступныеЗначения.Количество() = 1 Тогда
				ЗначениеОтбора = ДоступныеЗначения[0].Значение;
			Иначе
				ЗначениеОтбора = Новый ФиксированныйМассив(ДоступныеЗначения.ВыгрузитьЗначения());
			КонецЕсли;
			Параметры.Отбор.ВидДоговора = ЗначениеОтбора;
		КонецЕсли;
	КонецЕсли;
	ЕстьНедоступные      = Ложь;
	ВсеДоступныеЗначения = Перечисления.ВидыДоговоровКонтрагентов.ПолучитьСписокДоступныхЗначений(
		Неопределено, ЕстьНедоступные);
	Если ЕстьНедоступные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ДоступныеВидыДоговоров", 
			Новый ФиксированныйМассив(ВсеДоступныеЗначения.ВыгрузитьЗначения()));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("Запись_ДоговорыКонтрагентов", , ДанныеСтроки.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	Если Группа Тогда
		Возврат;
	КонецЕсли;

	Отказ = Истина;

	ПараметрыФормы = Новый Структура;
	Если Копирование Тогда
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Список.ТекущиеДанные.Ссылка);
	ИначеЕсли ОткрытИзПлатежки Тогда
		ПараметрыФормы.Вставить("ОткрытИзПлатежки");
	КонецЕсли;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", СтруктураОтборовСписка());
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("Родитель", Родитель);

	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)

	СписокПуст = Элементы.Список.ТекущиеДанные = Неопределено;
	
	Если СписокПуст или Элементы.Список.ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;

	Отказ = Истина;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элемент.ТекущаяСтрока);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", СтруктураОтборовСписка());

	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Функция СтруктураОтборовСписка()

	СтруктураОтборов = Новый Структура;
	Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда 
			СтруктураОтборов.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение);
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
			СтруктураОтборов.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение.ВыгрузитьЗначения());
		КонецЕсли;
	КонецЦикла;
	Возврат СтруктураОтборов;
	
КонецФункции

#КонецОбласти
