
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПредварительнаяАвторизацияОперацииЗавершение(Результат, Параметры) Экспорт
	 
	ПараметрыФормы = Новый Структура;
	Если Параметры.Свойство("УказатьДополнительныеДанные") Тогда
		ПараметрыФормы.Вставить("УказатьДополнительныеДанные", Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("ЗапретРедактированияСуммы") Тогда
		ПараметрыФормы.Вставить("ЗапретРедактированияСуммы", Параметры.ЗапретРедактированияСуммы);
	КонецЕсли;
	
	Если Параметры.Свойство("ТипТранзакции") Тогда
		Результат.Вставить("ТипТранзакции", Параметры.ТипТранзакции);
	КонецЕсли;
	
	Если Параметры.Свойство("БезВозвращаемыхПараметров") Тогда
		Результат.Вставить("БезВозвращаемыхПараметров", Параметры.БезВозвращаемыхПараметров);
	КонецЕсли;
	
	Если Параметры.Свойство("УказатьСсылочныйНомер") Тогда
		Результат.Вставить("УказатьСсылочныйНомер", Параметры.УказатьСсылочныйНомер);
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(Параметры.ОповещениеОбработки, ЭтотОбъект, Результат);
	ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ", ПараметрыФормы,,,  ,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОперациюПоПлатежнойКартеЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если НЕ Параметры.Свойство("ТипТранзакции") Тогда
			ТекстСообщения = НСтр("ru = 'Не указан тип транзакции.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ТекстСлипЧека  = "";
		СуммаОперации  = Результат.Сумма;
		НомерЧека      = Результат.НомерЧека;
		ДанныеКарты    = Результат.ДанныеКарты;
		СсылочныйНомер = Результат.СсылочныйНомер;
		
		ВходныеПараметры.Добавить(СуммаОперации);
		ВходныеПараметры.Добавить(ДанныеКарты);
		Если Параметры.Свойство("УказатьСсылочныйНомер") Тогда
			ВходныеПараметры.Добавить(СсылочныйНомер);
			ВходныеПараметры.Добавить(НомерЧека);
		Иначе
			ВходныеПараметры.Добавить(НомерЧека);
			ВходныеПараметры.Добавить(СсылочныйНомер);
		КонецЕсли;
		
		// Выполнение операции на ЭТ.
		РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(Параметры.ИдентификаторПодключенногоУстройстваЭТ, Параметры.ТипТранзакции, ВходныеПараметры, ВыходныеПараметры);
		
		Если Не РезультатЭТ Тогда
			ТекстСообщения = НСтр("ru = 'При выполнении операции возникла ошибка:
					|""%ОписаниеОшибки%"".
					|Операция по карте не была произведена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ВыходныеПараметры[1]);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			
			Если Параметры.Свойство("БезВозвращаемыхПараметров") Тогда
				НомерКарты          = "";
				НомерСсылкиОперации = "";
				НомерЧека           = "";
				ТекстСлипЧека       = ВыходныеПараметры[0][1];
			Иначе
				НомерКарты          = ВыходныеПараметры[0];
				НомерСсылкиОперации = ВыходныеПараметры[1];
				НомерЧека           = ВыходныеПараметры[2];
				ТекстСлипЧека       = ВыходныеПараметры[3][1];
			КонецЕсли;
			
			Если Не ПустаяСтрока(ТекстСлипЧека) Тогда
				глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ТекстСлипЧека);
			КонецЕсли;
			
			РезультатПУ = Истина;
			
			Если Не Параметры.ПечатьКвитанцийНаТерминале И Не Параметры.ИдентификаторПодключенногоПУ = Неопределено Тогда
				Если Не ПустаяСтрока(ТекстСлипЧека) Тогда
					ВходныеПараметры = Новый Массив();
					ВходныеПараметры.Добавить(ТекстСлипЧека);
					ВыходныеПараметры = Неопределено;
					РезультатПУ = МенеджерОборудованияКлиент.ВыполнитьКоманду(Параметры.ИдентификаторПодключенногоПУ, "PrintText", ВходныеПараметры, ВыходныеПараметры);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатЭТ И Не РезультатПУ Тогда
				ОписаниеОшибкиПУ  = ВыходныеПараметры[1];
				ВходныеПараметры  = Новый Массив();
				
				ВыходныеПараметры = Неопределено;
				ВходныеПараметры.Добавить(СуммаОперации);
				ВходныеПараметры.Добавить(НомерСсылкиОперации);
				ВходныеПараметры.Добавить(НомерЧека);
				// Выполнение операции на ЭТ
				МенеджерОборудованияКлиент.ВыполнитьКоманду(Параметры.ИдентификаторПодключенногоУстройстваЭТ, "EmergencyVoid", ВходныеПараметры, ВыходныеПараметры);
				
				ТекстСообщения = НСтр("ru = 'При печати слип чека возникла ошибка:
							|""%ОписаниеОшибки%"".
							|Операция по карте была отменена.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибкиПУ);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Иначе
				ТекстСообщения = НСтр("ru = 'Операция выполнена успешно.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	МенеджерОборудованияКлиент.ОтключитьЭквайринговыйТерминал(УникальныйИдентификатор, Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьПлатежнойКартой(Команда)
	
	ОчиститьСообщения();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОбработки"         , "ВыполнитьОперациюПоПлатежнойКартеЗавершение");
	Контекст.Вставить("ТипТранзакции"               , "AuthorizeSales");
	Контекст.Вставить("УказатьДополнительныеДанные" , Истина);

	ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительнаяАвторизацияОперацииЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.НачатьПодключенияЭквайринговогоТерминала(ОписаниеОповещения, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ВернутьПлатежПоКарте(Команда)
	
	ОчиститьСообщения();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОбработки"         , "ВыполнитьОперациюПоПлатежнойКартеЗавершение");
	Контекст.Вставить("ТипТранзакции"               , "AuthorizeRefund");
	Контекст.Вставить("УказатьДополнительныеДанные" , Истина);
	Контекст.Вставить("УказатьСсылочныйНомер"       , Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительнаяАвторизацияОперацииЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.НачатьПодключенияЭквайринговогоТерминала(ОписаниеОповещения, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПлатежПоКарте(Команда)
	
	ОчиститьСообщения();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОбработки"         , "ВыполнитьОперациюПоПлатежнойКартеЗавершение");
	Контекст.Вставить("ТипТранзакции"               , "AuthorizeVoid");
	Контекст.Вставить("УказатьДополнительныеДанные" , Истина);
	Контекст.Вставить("БезВозвращаемыхПараметров"   , Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительнаяАвторизацияОперацииЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.НачатьПодключенияЭквайринговогоТерминала(ОписаниеОповещения, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСверкуИтогов(Команда)
	
	ОчиститьСообщения();
	
	МенеджерОборудованияКлиент.ВыполнитьСверкуИтоговНаЭквайринговомТерминале(УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПреавторизацию(Команда)
	
	ОчиститьСообщения();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОбработки" , "ВыполнитьОперациюПоПлатежнойКартеЗавершение");
	Контекст.Вставить("ТипТранзакции"       , "AuthorizePreSales");
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительнаяАвторизацияОперацииЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.НачатьПодключенияЭквайринговогоТерминала(ОписаниеОповещения, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПреавторизацию(Команда)
	
	ОчиститьСообщения();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОбработки"         , "ВыполнитьОперациюПоПлатежнойКартеЗавершение");
	Контекст.Вставить("ТипТранзакции"               , "AuthorizeCompletion");
	Контекст.Вставить("БезВозвращаемыхПараметров"   , "БезВозвращаемыхПараметров");
	Контекст.Вставить("УказатьДополнительныеДанные" , Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительнаяАвторизацияОперацииЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.НачатьПодключенияЭквайринговогоТерминала(ОписаниеОповещения, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПреавторизацию(Команда)
	
	ОчиститьСообщения();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОбработки"         , "ВыполнитьОперациюПоПлатежнойКартеЗавершение");
	Контекст.Вставить("ТипТранзакции"               , "AuthorizeVoidPreSales");
	Контекст.Вставить("БезВозвращаемыхПараметров"   , "БезВозвращаемыхПараметров");
	Контекст.Вставить("УказатьДополнительныеДанные" , Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредварительнаяАвторизацияОперацииЗавершение", ЭтотОбъект, Контекст);
	МенеджерОборудованияКлиент.НачатьПодключенияЭквайринговогоТерминала(ОписаниеОповещения, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьПоследнийСлипЧекЗавершение(ИдентификаторУстройства, Параметры) Экспорт
	
	ОписаниеОшибки = "";
	
	// Подключение устройства печати.
	РезультатПУ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройства, ОписаниеОшибки);
	
	Если РезультатПУ Тогда
		
		Если Не ПустаяСтрока(глПодключаемоеОборудование.ПоследнийСлипЧек) Тогда
			ВходныеПараметры = Новый Массив();
			ВходныеПараметры.Добавить(глПодключаемоеОборудование.ПоследнийСлипЧек);
			ВыходныеПараметры = Неопределено;
			
			РезультатПУ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства, "PrintText", ВходныеПараметры, ВыходныеПараметры);
			Если Не РезультатПУ Тогда
				ТекстСообщения = НСтр("ru = 'При печати документа произошла ошибка:
						|""%ОписаниеОшибки%"".'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ВыходныеПараметры[1]);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru = 'Отсутствует последний слип чек.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		// Отключение устройства печати.
		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройства);
		
	Иначе
		ТекстСообщения = НСтр("ru = 'При подключении фискального регистратора произошла ошибка:
			|""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьПоследнийСлипЧек(Команда)
	
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НапечататьПоследнийСлипЧекЗавершение", ЭтотОбъект, Параметры);
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ФискальныйРегистратор");
	ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru='Выберите устройсво для печати эквайринговых чеков'"), НСтр("ru='Устройсво для печати эквайринговых чеков не подключено.'"));
		
КонецПроцедуры

#КонецОбласти