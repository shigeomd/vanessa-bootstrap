#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	// Найдем типовые условия
	ДополнительныеУсловияПоУмолчанию = Справочники.ДополнительныеУсловия.ПолучитьТиповыеУсловия();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ИндивидуальныйПредприниматель");
		Если НЕ ОбособленноеПодразделение Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ГоловнаяОрганизация");
		КонецЕсли; 
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ГоловнаяОрганизация");
	КонецЕсли;
	
	Если ВидОбменаСКонтролирующимиОрганами <> Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате Тогда
		МассивНепроверяемыхРеквизитов.Добавить("УчетнаяЗаписьОбмена");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	// Реквизит ГоловнаяОрганизация должен быть заполнен всегда, 
	// даже когда в организации нет обособленных подразделений.
	// В последнем (тривиальном) случае ГоловнаяОрганизация должна указывать на саму организацию - 
	// ссылаться сама на себя.
	// Многие прикладные алгоритмы не рассчитаны на то, что реквизит ГоловнаяОрганизация не будет заполнен.
	// Поэтому обеспечим его заполнение в тривиальном случае.
	
	Если ОбособленноеПодразделение И (ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо) Тогда
		ОбособленноеПодразделение = Ложь;
	КонецЕсли;
	
	Если Не ОбособленноеПодразделение Тогда
		
		Если Не ЭтоНовый() Тогда
			
			Если ГоловнаяОрганизация <> Ссылка Тогда
				ГоловнаяОрганизация = Ссылка;
			КонецЕсли;
			
		Иначе
			
			// Свойство "Ссылка" заведомо не заполнено.
			// Но в ходе обмена ссылка может быть передана.
			
			СсылкаНового = ПолучитьСсылкуНового();
			Если Не СсылкаНового.Пустая() Тогда
				Если ГоловнаяОрганизация <> СсылкаНового Тогда
					ГоловнаяОрганизация = СсылкаНового;
				КонецЕсли;
			Иначе
				УстановитьСсылкуНового(Справочники.Организации.ПолучитьСсылку());
				ГоловнаяОрганизация = ПолучитьСсылкуНового();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ДанныеРуководителя")
		И ТипЗнч(ДополнительныеСвойства.ДанныеРуководителя) = Тип("Структура") Тогда
		
		Фамилия = "";
		Имя = "";
		Отчество = "";
		ДополнительныеСвойства.ДанныеРуководителя.Свойство("Фамилия", Фамилия);
		ДополнительныеСвойства.ДанныеРуководителя.Свойство("Имя", Имя);
		ДополнительныеСвойства.ДанныеРуководителя.Свойство("Отчество", Отчество);
		НаименованиеРуководителя = КадровыйУчетКлиентСервер.ПолноеНаименованиеСотрудника(Фамилия, Имя, Отчество, "");
		
		Запрос = Новый Запрос();
		Запрос.Параметры.Вставить("Наименование", НаименованиеРуководителя);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФИзическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Наименование = &Наименование";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			
			ФизическоеЛицоРуководитель = Выборка.Ссылка;
			
		Иначе
			
			НовоеФизлицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
			ДополнительныеСвойства.ДанныеРуководителя.Свойство("ИНН", НовоеФизлицо.ИНН);
			
			НовоеФизлицо.ФИО = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2 %3'"), Фамилия, Имя, Отчество);
			НовоеФизлицо.Наименование = НаименованиеРуководителя;
			
			НовоеФизлицо.Пол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(Отчество);
			Если НЕ ЗначениеЗаполнено(НовоеФизлицо.Пол) Тогда
				НовоеФизлицо.Пол = Перечисления.ПолФизическогоЛица.Мужской;
			КонецЕсли;
			НовоеФизлицо.Записать();
			
			ФИОФизическихЛиц = РегистрыСведений.ФИОФизическихЛиц.СоздатьМенеджерЗаписи();
			ФИОФизическихЛиц.Период = Дата(1899, 12, 31);
			ФИОФизическихЛиц.ФизическоеЛицо = НовоеФизлицо.Ссылка;
			ФИОФизическихЛиц.Фамилия = Фамилия;
			ФИОФизическихЛиц.Имя = Имя;
			ФИОФизическихЛиц.Отчество = Отчество;
			ФИОФизическихЛиц.Записать();
			
			ФизическоеЛицоРуководитель = НовоеФизлицо.Ссылка;
			
		КонецЕсли;
		
		ОтветственныеЛицаМенеджерЗаписи = РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
		ОтветственныеЛицаМенеджерЗаписи.Период = НачалоДня(ТекущаяДатаСеанса());
		ОтветственныеЛицаМенеджерЗаписи.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		ОтветственныеЛицаМенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицоРуководитель;
		Если ДополнительныеСвойства.ДанныеРуководителя.Свойство("Должность")
			И ЗначениеЗаполнено(ДополнительныеСвойства.ДанныеРуководителя.Должность) Тогда
			
			Запрос = Новый Запрос();
			Запрос.Параметры.Вставить("Наименование", ДополнительныеСвойства.ДанныеРуководителя.Должность);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Должности.Ссылка
			|ИЗ
			|	Справочник.Должности КАК Должности
			|ГДЕ
			|	Должности.Наименование = &Наименование";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ОтветственныеЛицаМенеджерЗаписи.Должность = Выборка.Ссылка;
			Иначе
				ДолжностьРуководителя = Справочники.Должности.СоздатьЭлемент();
				ДолжностьРуководителя.Наименование = ДополнительныеСвойства.ДанныеРуководителя.Должность;
				ДолжностьРуководителя.Записать();
				ОтветственныеЛицаМенеджерЗаписи.Должность = ДолжностьРуководителя.Ссылка;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоНовый() Тогда
			СсылкаНового = ПолучитьСсылкуНового();
			Если НЕ ЗначениеЗаполнено(СсылкаНового) Тогда
				СсылкаНового = Справочники.Организации.ПолучитьСсылку();
			КонецЕсли;
			УстановитьСсылкуНового(СсылкаНового);
			ОтветственныеЛицаМенеджерЗаписи.СтруктурнаяЕдиница = СсылкаНового;
		Иначе
			ОтветственныеЛицаМенеджерЗаписи.СтруктурнаяЕдиница = Ссылка;
		КонецЕсли;
		ОтветственныеЛицаМенеджерЗаписи.Записать();
		
	КонецЕсли;
	
	Если РайонныйКоэффициент < 1 
		ИЛИ РайонныйКоэффициент > 3 Тогда
		РайонныйКоэффициент = 1;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбособленноеПодразделение Тогда
		ИНН	= "";
		ГоловнаяОрганизация	= Неопределено;
	КонецЕсли;
	
	КПП					= "";
	КодНалоговогоОргана	= "";
	РегистрацияВНалоговомОргане		= Неопределено;
	НаименованиеНалоговогоОргана	= "";
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.БанковскиеСчета.ПроверитьУстановитьЗначениеОпцииИспользоватьНесколькоБанковскихСчетовОрганизации(Ссылка);
	
	СоздатьОсновноеПодразделение();
	СоздатьСтавкиНалогаНаИмущество();
	ЗаписатьУчетнуюПолитикуОбособленногоПодразделения();
	УчетЗарплаты.СоздатьПараметрыУчетаЗарплаты(Ссылка);
	
	Справочники.Организации.ОбновитьИспользуемыеВидыОрганизаций();
	
	// БРО
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПриЗаписиОрганизации(ЭтотОбъект, Отказ);
	
	Если НЕ Отказ И ОбособленноеПодразделение Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьОсновноеПодразделение()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация";
	Запрос.УстановитьПараметр("Организация", Ссылка);
	
	Если Запрос.Выполнить().Выбрать().Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Подразделение = Справочники.ПодразделенияОрганизаций.СоздатьЭлемент();
	Подразделение.Владелец = Ссылка;
	Подразделение.Наименование = "Основное подразделение";
	Подразделение.Записать();
		
КонецПроцедуры

Процедура СоздатьСтавкиНалогаНаИмущество()

	НаборЗаписей = РегистрыСведений.СтавкиНалогаНаИмущество.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = НачалоГода(ТекущаяДатаСеанса());
	Запись.Организация = Ссылка;
	Запись.НалоговаяСтавка = 2.2;

	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаписатьУчетнуюПолитикуОбособленногоПодразделения()

	Если НЕ ОбособленноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписиГоловнойОрганизации = РегистрыСведений.УчетнаяПолитикаОрганизаций.СоздатьНаборЗаписей();
	ЗаписиГоловнойОрганизации.Отбор.Организация.Установить(ГоловнаяОрганизация);
	ЗаписиГоловнойОрганизации.Прочитать();
	
	ЗаписиПодразделения = РегистрыСведений.УчетнаяПолитикаОрганизаций.СоздатьНаборЗаписей();
	ЗаписиПодразделения.Отбор.Организация.Установить(Ссылка);
	Для каждого Запись Из ЗаписиГоловнойОрганизации Цикл
		НоваяЗапись = ЗаписиПодразделения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
		НоваяЗапись.Организация = Ссылка;
	КонецЦикла;
	ЗаписиПодразделения.Записать(Истина);

КонецПроцедуры

#КонецЕсли