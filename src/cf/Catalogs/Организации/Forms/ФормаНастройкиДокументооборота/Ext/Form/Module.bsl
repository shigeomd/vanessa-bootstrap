////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗакрыватьПриВыборе	= Ложь;
	
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОбменаСКонтролирующимиОрганами) Тогда
		ВидОбменаСКонтролирующимиОрганами	= Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменОтключен;
	КонецЕсли;
	
	Элементы.НастроитьПараметрыСпринтер.Видимость	= ЗначениеЗаполнено(Организация);
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ ВидОбменаСКонтролирующимиОрганами = Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате Тогда
		МассивНепроверяемыхРеквизитов.Добавить("УчетнаяЗаписьОбмена");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВидОбменаСКонтролирующимиОрганамиПриИзменении(Элемент)
	
	Модифицированность	= Истина;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяЗаписьОбменаПриИзменении(Элемент)
	
	Модифицированность	= Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НастроитьПараметрыСпринтер(Команда)
	
	ПараметрыФормы = Новый Структура("ОрганизацияСсылка", Организация);
	ОткрытьФорму("РегистрСведений.НастройкиИнтеграцииСоСпринтером.ФормаЗаписи", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьДанные();
		Закрыть();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы	= Форма.Элементы;
	
	Если Форма.ВидОбменаСКонтролирующимиОрганами =
		ПредопределенноеЗначение("Перечисление.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате") Тогда
		
		Элементы.ГруппаНастройки.ТекущаяСтраница	= Элементы.ГруппаОбменВУниверсальномФормате;
		
	ИначеЕсли Форма.ВидОбменаСКонтролирующимиОрганами =
		ПредопределенноеЗначение("Перечисление.ВидыОбменаСКонтролирующимиОрганами.ОбменЧерезСпринтер") Тогда
		
		Элементы.ГруппаНастройки.ТекущаяСтраница	= Элементы.ГруппаОбменЧерезСпринтер;
		
	Иначе
		Элементы.ГруппаНастройки.ТекущаяСтраница	= Элементы.ГруппаОбменОтключен;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные()
	
	Модифицированность	= Ложь;
	
	ЗначениеВыбора	= Новый Структура(
		"ВидОбменаСКонтролирующимиОрганами, УчетнаяЗаписьОбмена",
		ВидОбменаСКонтролирующимиОрганами, УчетнаяЗаписьОбмена);
		
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьЗаполнение() Тогда
			ЗаписатьДанные();
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПривязатьУчетнуюЗаписьКОрганизации" И Организация = Параметр.Организация Тогда
		ВидОбменаСКонтролирующимиОрганами = ПредопределенноеЗначение("Перечисление.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате");
		УчетнаяЗаписьОбмена = Параметр.УчетнаяЗапись;
		Параметр.Вставить("ОповещениеОтработано", Истина);
	КонецЕсли;
	
КонецПроцедуры



