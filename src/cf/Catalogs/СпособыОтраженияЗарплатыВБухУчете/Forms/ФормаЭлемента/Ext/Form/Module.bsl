////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаСервере
Процедура ИнициализироватьЗаписьДляРедактированияВФорме(Форма, ВедущийОбъект)
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете;	
	
	ИмяЭлемента = "ПорядокОтраженияВБухУчете";
	МенеджерЗаписи = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	МенеджерЗаписи.ЕНВД = Ложь;
	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, ИмяЭлемента);
	
	ИмяЭлемента = "ПорядокОтраженияВБухУчетеЕНВД";
	МенеджерЗаписиЕНВД = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписиЕНВД.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	МенеджерЗаписиЕНВД.ЕНВД = Истина;
	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписиЕНВД, ИмяЭлемента);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаписьДляРедактированияВФорме(Форма, ВедущийОбъект)
	
	Если НЕ Форма.Параметры.Ключ.Пустая() Тогда
		ИнициализироватьЗаписьДляРедактированияВФорме(Форма, ВедущийОбъект);
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете;	
		
	ИмяЭлемента = "ПорядокОтраженияВБухУчете";
	МенеджерЗаписи = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	МенеджерЗаписи.ЕНВД = Ложь;
	МенеджерЗаписи.Прочитать();
	
	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, ИмяЭлемента);
	
	ИмяЭлемента = "ПорядокОтраженияВБухУчетеЕНВД";
	МенеджерЗаписи = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	МенеджерЗаписи.ЕНВД = Истина;
	МенеджерЗаписи.Прочитать();
	
	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, ИмяЭлемента);
	
	Для НомерСубконто = 1 По 3 Цикл				
		Если ТипЗнч(Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") 
			ИЛИ ТипЗнч(Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
			Форма.ВидЗатратЕНВД = Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто];	
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьЗаписьДляРедактированияВФорме(Форма, ВедущийОбъект, КопируемыйОбъект)
	
	Если НЕ Форма.Параметры.Ключ.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете;	
	
	МенеджерЗаписиКопируемыйОбъект = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписиКопируемыйОбъект.СпособОтраженияЗарплатыВБухУчете = КопируемыйОбъект;
	МенеджерЗаписиКопируемыйОбъект.ЕНВД = Ложь;
	МенеджерЗаписиКопируемыйОбъект.Прочитать();
	
	МенеджерЗаписиЕНВДКопируемыйОбъект = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписиЕНВДКопируемыйОбъект.СпособОтраженияЗарплатыВБухУчете = КопируемыйОбъект;
	МенеджерЗаписиЕНВДКопируемыйОбъект.ЕНВД = Истина;
	МенеджерЗаписиЕНВДКопируемыйОбъект.Прочитать();
	
		
	ИмяЭлемента = "ПорядокОтраженияВБухУчете";
	МенеджерЗаписи = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	МенеджерЗаписи.ЕНВД = Ложь;
	МенеджерЗаписи.Прочитать();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МенеджерЗаписиКопируемыйОбъект);
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	
	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, ИмяЭлемента);
	
	ИмяЭлемента = "ПорядокОтраженияВБухУчетеЕНВД";
	МенеджерЗаписи = РегистрыСведений.ПорядокОтраженияЗарплатыВБухУчете.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	МенеджерЗаписи.ЕНВД = Истина;
	МенеджерЗаписи.Прочитать();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МенеджерЗаписиЕНВДКопируемыйОбъект);
	МенеджерЗаписи.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект;
	
	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, ИмяЭлемента);
	
	Для НомерСубконто = 1 По 3 Цикл				
		Если ТипЗнч(Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") 
			ИЛИ ТипЗнч(Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
			Форма.ВидЗатратЕНВД = Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто];	
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(Форма)
	
	ТекущаяЗапись = Форма.ПорядокОтраженияВБухУчете;
		
	Текст = "Счет учета расходов по страховым взносам ";
	
	Если ЗначениеЗаполнено(ТекущаяЗапись.Счет) Тогда
	    		
		Если ТекущаяЗапись.Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов") Тогда
			
			Текст = Текст + "по БУ: " + ТекущаяЗапись.Счет + " по НУ: " + ТекущаяЗапись.СчетНУ;
					
		Иначе
			
			Текст = "Порядок отражения страховых взносов в БУ и НУ совпадает";
			
		КонецЕсли;
		
	Иначе
		
		Текст = "Порядок отражения страховых взносов в БУ и НУ совпадает";
		
	КонецЕсли;
	
	Форма.НадписьСчетУчетаРасходовПоСтраховымВзносам = Текст;
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеСчетомИСубконтоНУ(Форма)
	
	ТекущаяЗапись = Форма.ПорядокОтраженияВБухУчете;
	
	Если ТекущаяЗапись.Счет <> ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов") Тогда
		ТекущаяЗапись.СчетНУ = "";
		ТекущаяЗапись.СубконтоНУ1 = "";
		ТекущаяЗапись.СубконтоНУ2 = "";
		ТекущаяЗапись.СубконтоНУ3 = "";
		
		УстановитьЗаголовкиИДоступностьСубконто(Форма, ТекущаяЗапись.СчетНУ, "НУ");
		
		ПоляОбъекта = Новый Структура("СубконтоНУ1, СубконтоНУ2, СубконтоНУ3", 
		"СубконтоНУ1", "СубконтоНУ2", "СубконтоНУ3");
		ЗначенияСубконто = Новый Соответствие;
		ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы"), 
			БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа());

		БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(ТекущаяЗапись.Счет, ТекущаяЗапись, ПоляОбъекта,,ЗначенияСубконто);
		
		УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(Форма);
		
		Форма.Элементы.СчетНУ.Доступность      = Ложь;
		Форма.Элементы.СубконтоНУ1.Доступность = Ложь;
		Форма.Элементы.СубконтоНУ2.Доступность = Ложь;
		Форма.Элементы.СубконтоНУ3.Доступность = Ложь;
		Форма.Элементы.СчетНУ.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		
		Форма.Элементы.СчетНУ.Доступность = Истина;
		Форма.Элементы.СчетНУ.АвтоОтметкаНезаполненного = Истина;
		
	КонецЕсли;
	
		
КонецПроцедуры	


&НаСервере
Процедура ЗаписатьЗаписьПослеРедактированияВФорме(Форма, ВедущийОбъект, ДанныеМодифицированы = Ложь)
	      
	Если Форма.Модифицированность Тогда

		Форма.ПорядокОтраженияВБухУчете.ЕНВД = Ложь;
		Форма.ПорядокОтраженияВБухУчете.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект.Ссылка;
		МенеджерЗаписи = Форма.РеквизитФормыВЗначение("ПорядокОтраженияВБухУчете");
		Если НЕ ЗначениеЗаполнено(МенеджерЗаписи.Счет) Тогда
			МенеджерЗаписи.Удалить();
		Иначе
			МенеджерЗаписи.Записать();
		КонецЕсли;
		
		ЗаписыватьЕНВД = Ложь;
		НомерСубконтоСтатьиЗатрат = 0;
		Для НомерСубконто = 1 По 3 Цикл
			Если ТипЗнч(Форма.ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") 
				ИЛИ ТипЗнч(Форма.ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				ЗаписыватьЕНВД = Истина;
				НомерСубконтоСтатьиЗатрат = ?(НомерСубконтоСтатьиЗатрат = 0, НомерСубконто, НомерСубконтоСтатьиЗатрат);
			КонецЕсли;
		КонецЦикла;
		
		Если ЗаписыватьЕНВД Тогда
			Форма.ПорядокОтраженияВБухУчетеЕНВД.Счет = Форма.ПорядокОтраженияВБухУчете.Счет;
		Иначе
			Форма.ПорядокОтраженияВБухУчетеЕНВД.Счет = "";
		КонецЕсли;
		
		Для НомерСубконто = 1 По 3 Цикл				
			Если ЗаписыватьЕНВД Тогда				
				Если ТипЗнч(Форма.ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") 
					ИЛИ ТипЗнч(Форма.ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
					Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = Форма.ВидЗатратЕНВД;	
				Иначе
					Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто];					
				КонецЕсли;
			Иначе				
				Форма.ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = "";
			КонецЕсли;
		КонецЦикла;
			
		Форма.ПорядокОтраженияВБухУчетеЕНВД.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
		Форма.ПорядокОтраженияВБухУчетеЕНВД.ЕНВД = Истина;
		Форма.ПорядокОтраженияВБухУчетеЕНВД.СпособОтраженияЗарплатыВБухУчете = ВедущийОбъект.Ссылка;
		МенеджерЗаписи = Форма.РеквизитФормыВЗначение("ПорядокОтраженияВБухУчетеЕНВД");		
		Если НЕ ЗначениеЗаполнено(МенеджерЗаписи.Счет) ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД") Тогда
			МенеджерЗаписи.Удалить();
		Иначе
			МенеджерЗаписи.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетПриИзменении(Элемент = "", Суффикс = "")
		
	Если Суффикс = "ЕНВД" Тогда
		ЗаписьРегистра = ПорядокОтраженияВБухУчетеЕНВД;		
	Иначе
		ЗаписьРегистра = ПорядокОтраженияВБухУчете;		
	КонецЕсли;	
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3", 
	                              "Субконто1", "Субконто2", "Субконто3");
								  
	ЗначенияСубконто = Новый Соответствие;
	ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы"), 
		БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа());
							  
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, ЗаписьРегистра.Счет, Суффикс);
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(ЗаписьРегистра.Счет, ЗаписьРегистра, ПоляОбъекта,, ЗначенияСубконто);
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, Суффикс);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма, Счет, Суффикс = "")
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
	                            "Субконто" + Суффикс + "1", "Субконто" + Суффикс + "2", "Субконто" + Суффикс + "3");
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
	                                 "ЗаголовокСубконто" + Суффикс + "1", "ЗаголовокСубконто" + Суффикс + "2", 
	                                 "ЗаголовокСубконто" + Суффикс + "3"); 
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоПриИзменении(Элемент, Суффикс = "")
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, Суффикс);

КонецПроцедуры

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Суффикс = "")

	ЗаписьРегистра = "ПорядокОтраженияВБухУчете" + Суффикс;
		
	ПараметрыДокумента = СписокПараметровВыбораСубконто(ЭтаФорма, ЭтаФорма[ЗаписьРегистра], "Субконто%Индекс%");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыДокумента);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, Суффикс)
	
	Если Суффикс = "ЕНВД" Тогда
		СуффиксСубконто = "";
		ЗаписьРегистра = "ПорядокОтраженияВБухУчете" + Суффикс;
	Иначе
		СуффиксСубконто = Суффикс;
		ЗаписьРегистра = "ПорядокОтраженияВБухУчете";
	КонецЕсли;	
    	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма[ЗаписьРегистра], "Субконто" + СуффиксСубконто + "%Индекс%");
	ИзменитьПараметрыВыбораПолейСубконтоЛокально(
		Форма, Форма.Объект, ПараметрыДокумента, Суффикс);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта)

	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("СчетУчета"  ,   ПараметрыОбъекта.Счет);
	СписокПараметров.Вставить("Организация",   ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));

	Возврат СписокПараметров;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконтоЛокально(Форма, Объект, СписокПараметров, Суффикс) 
	
	Если Суффикс = "ЕНВД" Тогда
		СуффиксСубконто = "";
		ЗаписьРегистра = "ПорядокОтраженияВБухУчете" + Суффикс;
	Иначе
		СуффиксСубконто = Суффикс;
		ЗаписьРегистра = "ПорядокОтраженияВБухУчете";
	КонецЕсли;	
		
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма[ЗаписьРегистра], "Субконто" + СуффиксСубконто + "%Индекс%");
	
	ШаблонИмяПоляОбъекта = "Субконто" + СуффиксСубконто + "%Индекс%";
	ШаблонИмяЭлементаФормы = "Субконто" + Суффикс + "%Индекс%";
	
	МассивПараметров = Новый Массив();
	Для Индекс = 1 По 3 Цикл
		ИмяПоляОбъекта   = СтрЗаменить(ШаблонИмяПоляОбъекта  , "%Индекс%", Индекс);
		ИмяЭлементаФормы = СтрЗаменить(ШаблонИмяЭлементаФормы, "%Индекс%", Индекс);

		Если ТипЗнч(Форма[ЗаписьРегистра][ИмяПоляОбъекта]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Если СписокПараметров.Свойство("Контрагент") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Контрагент));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Форма[ЗаписьРегистра][ИмяПоляОбъекта]) = Тип("СправочникСсылка.Субконто") 
			И СписокПараметров.Свойство("СчетУчета") Тогда
			СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СписокПараметров.СчетУчета);
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СвойстваСчета["ВидСубконто" + Индекс]));
		КонецЕсли;
		Если МассивПараметров.Количество() > 0 Тогда
			ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
			Форма.Элементы[ИмяЭлементаФормы].ПараметрыВыбора = ПараметрыВыбора;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеПоУмолчанию(Настройка)

    Возврат БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию(Настройка);
	
КонецФункции

&НаКлиенте
Процедура ПродублироватьЗначенияДляСчетаЕНВД()
		
	Если ПорядокОтраженияВБухУчетеЕНВД.Счет <> ПорядокОтраженияВБухУчете.Счет Тогда
		ПорядокОтраженияВБухУчетеЕНВД.Счет = ПорядокОтраженияВБухУчете.Счет;
		ПродублироватьЗначенияДляСубконтоЕНВД();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПродублироватьЗначенияДляСубконтоЕНВД()
		
	ПоказыватьАналитикуЕНВД = Ложь;	
	Для НомерСубконто = 1 По 3 Цикл
		Если ТипЗнч(ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			ПоказыватьАналитикуЕНВД = Истина;			
			Если ТипЗнч(ВидЗатратЕНВД) <> Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
				ВидЗатратЕНВД = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
			КонецЕсли;
		ИначеЕсли ТипЗнч(ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда			
			ПоказыватьАналитикуЕНВД = Истина;
			Если ТипЗнч(ВидЗатратЕНВД) <> Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = ПредопределенноеЗначение("Справочник.ПрочиеДоходыИРасходы.ПустаяСсылка");				
				ВидЗатратЕНВД = ПредопределенноеЗначение("Справочник.ПрочиеДоходыИРасходы.ПустаяСсылка");
			КонецЕсли;
		Иначе
			ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
			ПорядокОтраженияВБухУчетеЕНВД["Субконто" + НомерСубконто] = ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто];
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ПоказыватьАналитикуЕНВД Тогда
		ВидЗатратЕНВД = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
	КонецЕсли;
	
	ПоказатьАналитикуЕНВД(ЭтаФорма, ПоказыватьАналитикуЕНВД);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьАналитикуЕНВД(Форма, ПоказыватьАналитикуЕНВД = Неопределено)
		
	Если ПоказыватьАналитикуЕНВД = Неопределено Тогда
		ПоказыватьАналитикуЕНВД = Ложь;
		Для НомерСубконто = 1 По 3 Цикл
			Если ТипЗнч(Форма.ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") 
				ИЛИ ТипЗнч(Форма.ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
				ПоказыватьАналитикуЕНВД = Истина;			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Форма.Элементы.ГруппаСтраницаСчетИСубконтоЕНВД.Доступность = ПоказыватьАналитикуЕНВД;
	
	Форма.Элементы.ВидЗатратЕНВД.АвтоОтметкаНезаполненного = ПоказыватьАналитикуЕНВД;
	
	Если ПоказыватьАналитикуЕНВД Тогда
		Форма.НадписьСчетУчетаПоЕНВД = "Расходы отражаются на отдельной статье затрат";
	Иначе
		Форма.НадписьСчетУчетаПоЕНВД = "Отражается аналогично расходам по основной системе налогообложения";
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

&НаКлиенте
Процедура СчетДтПриИзменении(Элемент)
	
	СчетПриИзменении(Элемент);	
	УправлениеСчетомИСубконтоНУ(ЭтаФорма);
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
	ПродублироватьЗначенияДляСчетаЕНВД();
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДтПриИзменении(Элемент)
	
	СубконтоПриИзменении(Элемент);
	ПродублироватьЗначенияДляСубконтоЕНВД();
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетНУПриИзменении(Элемент)
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, ПорядокОтраженияВБухУчете.СчетНУ, "НУ");
	
	ПоляОбъекта = Новый Структура("СубконтоНУ1, СубконтоНУ2, СубконтоНУ3", 
	                              "СубконтоНУ1", "СубконтоНУ2", "СубконтоНУ3");
	ЗначенияСубконто = Новый Соответствие;
	ЗначенияСубконто.Вставить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы"), 
		БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа());
	
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(ПорядокОтраженияВБухУчете.СчетНУ, ПорядокОтраженияВБухУчете, ПоляОбъекта,,ЗначенияСубконто);

	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
									  
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНУПриИзменении(Элемент)
	
	СубконтоПриИзменении(Элемент, "НУ");
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНУНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(ЭтаФорма, ПорядокОтраженияВБухУчете, "СубконтоНУ%Индекс%");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, ПорядокОтраженияВБухУчете, СтандартнаяОбработка, ПараметрыДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗатратЕНВДПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ПоказатьАналитикуЕНВД(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		СпособОтраженияЗарплатыВБухУчетеСсылка = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПолучитьСсылку();
	Иначе
		СпособОтраженияЗарплатыВБухУчетеСсылка = Объект.Ссылка;
	КонецЕсли;
	ИнициализироватьЗаписьДляРедактированияВФорме(ЭтаФорма, СпособОтраженияЗарплатыВБухУчетеСсылка);
	
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.ЗначениеКопирования) Тогда 
		СкопироватьЗаписьДляРедактированияВФорме(ЭтаФорма, СпособОтраженияЗарплатыВБухУчетеСсылка, ЭтаФорма.Параметры.ЗначениеКопирования);	
	Иначе
		ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, СпособОтраженияЗарплатыВБухУчетеСсылка);
	КонецЕсли;
	
	ЗаголовокСчетНУ = "Счет:";
	ЗаголовокОтражениеВУСН = "Отражение в УСН:";	
	
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
	ПоказатьАналитикуЕНВД(ЭтаФорма);
    		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, ПорядокОтраженияВБухУчете.Счет, "");
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, ПорядокОтраженияВБухУчете.СчетНУ, "НУ");
	
	УправлениеСчетомИСубконтоНУ(ЭтаФорма);
	УстановитьТекстНадписиСчетУчетаРасходовПоСтраховымВзносам(ЭтаФорма);
	
	ЗаголовокВидЗатратЕНВД = "Статья затрат:";
	Для НомерСубконто = 1 По 3 Цикл
		Если ТипЗнч(ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.СтатьиЗатрат") Тогда			
			Если ВидЗатратЕНВД = Неопределено Тогда
				ВидЗатратЕНВД = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
			КонецЕсли;
			Прервать;
		ИначеЕсли ТипЗнч(ПорядокОтраженияВБухУчете["Субконто" + НомерСубконто])  = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда			
			Если ВидЗатратЕНВД = Неопределено Тогда
				ВидЗатратЕНВД = ПредопределенноеЗначение("Справочник.ПрочиеДоходыИРасходы.ПустаяСсылка");
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ВидЗатратЕНВД = Неопределено Тогда
		ВидЗатратЕНВД = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, ТекущийОбъект);
    	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
