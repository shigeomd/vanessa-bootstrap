////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВидПеречисления") Тогда
		ВидПеречисления = Параметры.ВидПеречисления;
	Иначе
		ВидПеречисления = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
	КонецЕсли;
	
	Если Параметры.Свойство("КБК") Тогда
		ВходящийКБК         = Сред(Параметры.КБК, 4);
		АдминистраторДохода = Лев(Параметры.КБК,  3);
		ВидДохода           = Сред(Параметры.КБК, 4, 10);
		ПодВидДохода        = Сред(Параметры.КБК, 14, 4);
		КОСГУ               = Сред(Параметры.КБК, 18);
	КонецЕсли;
	
	ДатаАктуальностиКлассификатора = Справочники.ВидыНалоговИПлатежейВБюджет.ДатаАктуальностиКлассификатора();
	ГодАктуальностиКлассификатора  = Год(ДатаАктуальностиКлассификатора);
	Если Параметры.Свойство("ГодПлатежа") Тогда
		ГодПлатежа = ?(Параметры.ГодПлатежа < ГодАктуальностиКлассификатора,
			Год(ДатаАктуальностиКлассификатора - 1), ГодАктуальностиКлассификатора);
	Иначе
		ГодПлатежа = ГодАктуальностиКлассификатора;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказательТипа") Тогда
		ПоказательТипа = Параметры.ПоказательТипа;
	КонецЕсли;
	
	СоздатьСоответствиеВидаИПодвидаДоходаДляСтраховыхВзносов();
	
	ПодобратьНаименованиеКБК(ЭтотОбъект, ВходящийКБК);
	ЗаполнитьСписокПодвидаДохода(ЭтотОбъект);
	
	Если НЕ ПустаяСтрока(ПоказательТипа) И СтрДлина(ВидДохода) = 10 Тогда
		ПодвидДохода = ОпределениеПодвидаДохода(ПодвидДохода, ПоказательТипа, ВидПеречисления,
			ВидДохода, ВидИПодвидДоходаДляСтраховыхВзносов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСоответствиеВидаИПодвидаДоходаДляСтраховыхВзносов()
	
	ВидИПодвидДоходаДляСтраховыхВзносов = Новый Структура();
	
	// Страховые взносы на обязательное медицинское страхование работающего населения,
	// зачисляемые в бюджет Федерального фонда обязательного медицинского страхования
	Взносы = Новый Соответствие;
	Взносы.Вставить("1011",
		НСтр("ru = '1011 - страховые взносы на обязательное медицинское страхование (ОМС)'"));
	Пени   = Новый Соответствие;
	Пени.Вставить("2011",
		НСтр("ru = '2011 - пени по страховым взносам на обязательное медицинское страхование (ОМС)'"));
	Штрафы = Новый Соответствие;
	Штрафы.Вставить("3011",
		НСтр("ru = '3011 - штрафы по страховым взносам на обязательное медицинское страхование (ОМС)'"));
	ПодвидыДохода = Новый Массив;
	ПодвидыДохода.Добавить(Взносы);
	ПодвидыДохода.Добавить(Пени);
	ПодвидыДохода.Добавить(Штрафы);
	ВидИПодвидДоходаДляСтраховыхВзносов.Вставить("ВД1020210108", ПодвидыДохода);
	
	// Дополнительные страховые взносы на накопительную часть трудовой пенсии, зачисляемые в Пенсионный фонд Российской Федерации
	ДопВзносыСамостоятельно = Новый Соответствие;
	ДопВзносыСамостоятельно.Вставить("1100",
		НСтр("ru = '1100 - дополнительные страховые взносы на накопительную часть трудовой пенсии (для лиц уплачивающих самостоятельно)'"));
	ДопВзносыРаботодатель   = Новый Соответствие;
	ДопВзносыРаботодатель.Вставить("1200",
		НСтр("ru = '1200 - дополнительные страховые взносы на накопительную часть трудовой пенсии (софинансирование работодателем)'"));
	ПодвидыДохода = Новый Массив;
	ПодвидыДохода.Добавить(ДопВзносыСамостоятельно);
	ПодвидыДохода.Добавить(ДопВзносыРаботодатель);
	ВидИПодвидДоходаДляСтраховыхВзносов.Вставить("ВД1020204106", ПодвидыДохода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		
		ТекстВопроса = НСтр("ru = 'КБК был изменен, сохранить?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросСохраненияКБКЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура АдминистраторДоходаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИмяМакета",    "АдминистраторыДоходовБюджетов");
	СтруктураПараметров.Вставить("СтрокаПоиска", АдминистраторДохода);
	СтруктураПараметров.Вставить("Заголовок",    НСтр("ru = 'Разряды 1-3 (код администратора поступлений)'"));
	СтруктураПараметров.Вставить("ГодПлатежа",   ГодПлатежа);
	ОткрытьФорму("Справочник.ВидыНалоговИПлатежейВБюджет.Форма.ФормаВыбораКодаИзКлассификатора", СтруктураПараметров, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдминистраторДоходаПриИзменении(Элемент)
	
	АдминистраторДоходаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АдминистраторДоходаПриИзмененииНаСервере()
	
	ВидПеречисления = ПлатежиВБюджетКлиентСервер.ВидПеречисления(
		АдминистраторДохода + "00000000000000000", Дата(ГодПлатежа, 1, 1));
	
	ПодобратьНаименованиеКБК(ЭтотОбъект);
	ЗаполнитьСписокПодвидаДохода(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДоходаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка  = Ложь;
	
	СтруктураПараметров   = Новый Структура;
	СтруктураПараметров.Вставить("ИмяМакета", "КлассификацияДоходовБюджетов");
	СтатьяДоходаДляПоиска = ?(ПустаяСтрока(ВидДохода), "",
		ВидДохода + ?(СтрДлина(ВидДохода) = 10,
			?(ПустаяСтрока(ПодвидДохода) ИЛИ СтрДлина(ПодвидДохода) < 4, "0000",
				ПодвидДохода)
			+ КОСГУ, ""));
	СтруктураПараметров.Вставить("СтрокаПоиска",        СтатьяДоходаДляПоиска);
	СтруктураПараметров.Вставить("КБКИсходный",         ВходящийКБК);
	СтруктураПараметров.Вставить("АдминистраторДохода", АдминистраторДохода);
	СтруктураПараметров.Вставить("Заголовок",           НСтр("ru = 'Разряды 4-20'"));
	СтруктураПараметров.Вставить("ГодПлатежа",          ГодПлатежа);
	ОткрытьФорму("Справочник.ВидыНалоговИПлатежейВБюджет.Форма.ФормаВыбораКодаИзКлассификатора", СтруктураПараметров, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДоходаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВходящийКБК            = ВыбранноеЗначение;
	СтатьяДоходаДляПоиска  = ВидДохода + "0000" + КОСГУ;
	Если ВыбранноеЗначение = СтатьяДоходаДляПоиска Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	ВидДохода = Лев(ВыбранноеЗначение, 10);
	
	ВыбраныйПодвидДохода = Сред(СтрЗаменить(ВыбранноеЗначение, " ", ""), 11, 4);
	Если НЕ ПустаяСтрока(ВыбраныйПодвидДохода) И ВыбраныйПодвидДохода <> "0000"
		И СтрДлина(ВыбраныйПодвидДохода) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ВыбраныйПодвидДохода) Тогда
		ПодвидДохода = ВыбраныйПодвидДохода;
	КонецЕсли;
	
	Если ПустаяСтрока(ПодвидДохода) ИЛИ ПодвидДохода = "0000" Тогда
		Если НЕ ПустаяСтрока(ПоказательТипа) Тогда
			ПодвидДохода = ОпределениеПодвидаДохода(ПодвидДохода, ПоказательТипа, ВидПеречисления,
				ВидДохода, ВидИПодвидДоходаДляСтраховыхВзносов);
		Иначе
			// По умолчанию подставляем подвид "Налог" с кодом 1000
			ПодвидДохода = "1000";
		КонецЕсли;
	КонецЕсли;
	
	КОСГУ = Сред(ВыбранноеЗначение, 15);
	
	Если ВидИПодвидДоходаДляСтраховыхВзносов.Свойство("ВД" + ВидДохода)
		И АдминистраторДохода <> "392" Тогда
		АдминистраторДохода = "392";
		ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ИнойПлатеж");
	КонецЕсли;
	
	ПодобратьНаименованиеКБК(ЭтотОбъект);
	ЗаполнитьСписокПодвидаДохода(ЭтотОбъект);
	
	Если НЕ ПустаяСтрока(ПоказательТипа) И СтрДлина(ВидДохода) = 10 Тогда
		ПодвидДохода = ОпределениеПодвидаДохода(ПодвидДохода, ПоказательТипа, ВидПеречисления,
			ВидДохода, ВидИПодвидДоходаДляСтраховыхВзносов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДоходаПриИзменении(Элемент)
	
	Если ВидИПодвидДоходаДляСтраховыхВзносов.Свойство("ВД" + ВидДохода)
		И АдминистраторДохода <> "392" Тогда
		АдминистраторДохода = "392";
		ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ИнойПлатеж");
	КонецЕсли;
	
	ПодобратьНаименованиеКБК(ЭтотОбъект,, Истина);
	ЗаполнитьСписокПодвидаДохода(ЭтотОбъект);
	
	Если НЕ ПустаяСтрока(ПоказательТипа) И СтрДлина(ВидДохода) = 10 Тогда
		ПодвидДохода = ОпределениеПодвидаДохода(ПодвидДохода, ПоказательТипа, ВидПеречисления,
			ВидДохода, ВидИПодвидДоходаДляСтраховыхВзносов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодвидДоходаПриИзменении(Элемент)
	
	Если ПустаяСтрока(КОСГУ) Тогда
		ПодобратьНаименованиеКБК(ЭтотОбъект,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КОСГУПриИзменении(Элемент)
	
	ПодобратьНаименованиеКБК(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	Если НЕ ЕстьОшибкиЗаполненияРеквизитов() Тогда
		
		Модифицированность = Ложь;
		ОповеститьОВыборе(ПолучитьКБК());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Функция ОпределениеПодвидаДохода(Знач ПодвидДохода, Знач ПоказательТипа, Знач ВидПеречисления,
		Знач ВидДохода, Знач ВидИПодвидДоходаДляСтраховыхВзносов)
	Перем СписокПодвидовДляСтраховых;
	
	// По умолчанию подставляем подвид "Налог" с кодом 1000 для всех случаев, где нет исключений
	
	ПодвидДохода = ?(ПустаяСтрока(ПодвидДохода), "0000", ПодвидДохода);
	ОкончаниеПодвидаДохода = Сред(ПодвидДохода, 2);
	
	КодИсключение = Ложь;
	Если ВидИПодвидДоходаДляСтраховыхВзносов.Свойство("ВД" + ВидДохода, СписокПодвидовДляСтраховых) Тогда
		ВходитВСписок = Ложь;
		Для каждого ПодвидДоходаИзСтруктуры Из СписокПодвидовДляСтраховых Цикл
			Для каждого КлючиИЗначениеПодвидДохода Из ПодвидДоходаИзСтруктуры Цикл
				Если ПодвидДохода = КлючиИЗначениеПодвидДохода.Ключ Тогда
					ВходитВСписок = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если НЕ ВходитВСписок Тогда
			ПодвидДоходаИзСтруктуры = СписокПодвидовДляСтраховых[0];
			Для каждого КлючиИЗначениеПодвидДохода Из ПодвидДоходаИзСтруктуры Цикл
				ПодвидДохода = КлючиИЗначениеПодвидДохода.Ключ;
			КонецЦикла;
		КонецЕсли;
		
		КодИсключение = Лев(ОкончаниеПодвидаДохода, 1) = "1" ИЛИ Лев(ОкончаниеПодвидаДохода, 1) = "2";
	ИначеЕсли ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.НалоговыйПлатеж") Тогда
		КодИсключение = Лев(ПодвидДохода, 0) = "0" И Число(Лев(ОкончаниеПодвидаДохода, 1)) > 2 И Число(Сред(ОкончаниеПодвидаДохода, 2, 1)) > 2
			ИЛИ Число(Лев(ПодвидДохода, 1)) > 4;
		Если НЕ КодИсключение Тогда
			ПодвидДохода = "1000";
		КонецЕсли;
	ИначеЕсли ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ТаможенныйПлатеж") Тогда
		КодИсключение = Лев(ПодвидДохода, 1) = "0";
		Если НЕ КодИсключение Тогда
			ПодвидДохода = "1000";
		КонецЕсли;
	ИначеЕсли ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ИнойПлатеж") Тогда
		КодИсключение = Число(Лев(ПодвидДохода, 1)) > 5;
		Если НЕ КодИсключение Тогда
			ПодвидДохода = "1000";
		КонецЕсли;
	КонецЕсли;
	
	Если КодИсключение Тогда
		Возврат ПодвидДохода;
	КонецЕсли;
	
	ОкончаниеПодвидаДохода = Сред(ПодвидДохода, 2);
	
	Если НЕ ПустаяСтрока(ПоказательТипа) Тогда // с 2015 г. не используется
		Если ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.НалоговыйПлатеж")
			И (ПоказательТипа = "0" // с 2014 г.
			ИЛИ ПоказательТипа = "НС" ИЛИ ПоказательТипа = "АВ") // до 2014 г.
			ИЛИ ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ТаможенныйПлатеж")
			И (ПоказательТипа = "0" ИЛИ ПоказательТипа = "ЗД") Тогда
			ПодвидДохода = "1" + ОкончаниеПодвидаДохода;
		ИначеЕсли ПоказательТипа = "ПЕ" ИЛИ ПоказательТипа = "ПЦ" Тогда
			ПодвидДохода = "2" + ОкончаниеПодвидаДохода;
		ИначеЕсли ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.НалоговыйПлатеж")
			И (ПоказательТипа = "АШ" ИЛИ ПоказательТипа = "СА") // до 2014 г.
			ИЛИ ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ТаможенныйПлатеж") И ПоказательТипа = "ШТ" Тогда
			ПодвидДохода = "3" + ОкончаниеПодвидаДохода;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПодвидДохода;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокПодвидаДохода(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ПодвидДохода.СписокВыбора.Очистить();
	Если Форма.ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.НалоговыйПлатеж") Тогда
		Элементы.ПодвидДохода.СписокВыбора.Добавить("1000",
			НСтр("ru = '1000 - сумма налога (взноса)'"));
		Если Форма.ГодПлатежа < 2015 Тогда
			Элементы.ПодвидДохода.СписокВыбора.Добавить("2000",
				НСтр("ru = '2000 - пени и проценты по налогу (взносу)'"));
		Иначе
			Элементы.ПодвидДохода.СписокВыбора.Добавить("2100",
				НСтр("ru = '2100 - пени по налогу (взносу)'"));
			Элементы.ПодвидДохода.СписокВыбора.Добавить("2200",
				НСтр("ru = '2200 - проценты по налогу (взносу)'"));
		КонецЕсли;
		Элементы.ПодвидДохода.СписокВыбора.Добавить("3000",
			НСтр("ru = '3000 - суммы штрафов по налогу (взносу)'"));
	ИначеЕсли Форма.ВидПеречисления = ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.ТаможенныйПлатеж") Тогда
		Элементы.ПодвидДохода.СписокВыбора.Добавить("0000",
			НСтр("ru = '0000 - сумма авансового платежа'"));
		Элементы.ПодвидДохода.СписокВыбора.Добавить("1000",
			НСтр("ru = '1000 - сумма платежа'"));
		Элементы.ПодвидДохода.СписокВыбора.Добавить("2000",
			НСтр("ru = '2000 - пени и проценты по соответствующему платежу'"));
		Элементы.ПодвидДохода.СписокВыбора.Добавить("3000",
			НСтр("ru = '3000 - суммы денежных взысканий (штрафов) по соответствующему платежу'"));
		Элементы.ПодвидДохода.СписокВыбора.Добавить("6000",
			НСтр("ru = '6000 - в федеральные государственные органы, внебюджетные фонды, Банк России'"));
	Иначе
		Если Форма.ВидИПодвидДоходаДляСтраховыхВзносов.Свойство("ВД" + Форма.ВидДохода) Тогда
			Для каждого ПодвидДохода Из Форма.ВидИПодвидДоходаДляСтраховыхВзносов["ВД" + Форма.ВидДохода] Цикл
				Для каждого КлючиИЗначениеПодвидДохода Из ПодвидДохода Цикл
					Элементы.ПодвидДохода.СписокВыбора.Добавить(КлючиИЗначениеПодвидДохода.Ключ, КлючиИЗначениеПодвидДохода.Значение);
				КонецЦикла;
			КонецЦикла;
		Иначе
			Элементы.ПодвидДохода.СписокВыбора.Добавить("1000",
				НСтр("ru = '1000 - сумма взноса'"));
			Элементы.ПодвидДохода.СписокВыбора.Добавить("2000",
				НСтр("ru = '2000 - пени и проценты по взносу'"));
			Элементы.ПодвидДохода.СписокВыбора.Добавить("3000",
				НСтр("ru = '3000 - суммы штрафов по взносу'"));
			Элементы.ПодвидДохода.СписокВыбора.Добавить("6000",
				НСтр("ru = '6000 - суммы и штрафы в федеральные государственные органы, внебюджетные фонды, Банк России'"));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ПодвидДохода.СписокВыбора.Добавить("", НСтр("ru = '<указать вручную>'"));
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКБК()
	
	Возврат АдминистраторДохода + ВидДохода + ПодвидДохода + КОСГУ;
	
КонецФункции

&НаКлиенте
Функция ЕстьОшибкиЗаполненияРеквизитов()
	
	ЕстьОшибки = Ложь;
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(АдминистраторДохода) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Разряды 1-3'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдминистраторДохода");
		ЕстьОшибки = Истина;
	ИначеЕсли СтрДлина(АдминистраторДохода) <> 3 Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru = 'Разряды 1-3'"),,,
			НСтр("ru = 'Поле должно состоять из 3 знаков'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдминистраторДохода");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(ВидДохода) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Разряды 4-13'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВидДохода");
		ЕстьОшибки = Истина;
	ИначеЕсли СтрДлина(ВидДохода) <> 10 Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru = 'Разряды 4-13'"),,,
			НСтр("ru = 'Поле должно состоять из 10 знаков'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВидДохода");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(ПодвидДохода) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Разряды 14-17'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПодвидДохода");
		ЕстьОшибки = Истина;
	ИначеЕсли СтрДлина(ПодвидДохода) <> 4 Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru = 'Разряды 14-17'"),,,
			НСтр("ru = 'Поле должно состоять из 4 знаков'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ПодвидДохода");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(КОСГУ) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Разряды 18-20'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КОСГУ");
		ЕстьОшибки = Истина;
	ИначеЕсли СтрДлина(КОСГУ) <> 3 Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru = 'Разряды 18-20'"),,,
			НСтр("ru = 'Поле должно состоять из 3 знаков'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КОСГУ");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Возврат ЕстьОшибки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПодобратьНаименованиеКБК(Форма, КБКИсходный = "", ОпределитьКОСГУ = Ложь)
	
	Если СтрДлина(Форма.ВидДохода) < 10 Тогда
		Форма.НаименованиеКБК = "";
		Возврат;
	КонецЕсли;
	
	КБК = Форма.ВидДохода + "0000" + Форма.КОСГУ;
	Если КБКИсходный = "" Тогда
		КБКИсходный = Форма.ВидДохода + Форма.ПодвидДохода + Форма.КОСГУ;
	КонецЕсли;
	
	КодДоходаБюджета = НайтиКодДоходаБюджета(КБК, Форма.ГодПлатежа, КБКИсходный, ОпределитьКОСГУ);
	
	Форма.КОСГУ = КодДоходаБюджета.КОСГУ;
	Форма.НаименованиеКБК = КодДоходаБюджета.Наименование;
	
	Если НЕ ПустаяСтрока(КодДоходаБюджета.ПодвидДохода) Тогда
		Форма.ПодвидДохода = КодДоходаБюджета.ПодвидДохода;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиКодДоходаБюджета(СтрокаПоиска, ГодПлатежа, КБКИсходный, ОпределитьКОСГУ)
	
	Возврат Справочники.ВидыНалоговИПлатежейВБюджет.НайтиКодДоходаБюджета(СтрокаПоиска, ГодПлатежа, КБКИсходный, ОпределитьКОСГУ);
	
КонецФункции

&НаКлиенте
Процедура ВопросСохраненияКБКЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если НЕ ЕстьОшибкиЗаполненияРеквизитов() Тогда
			
			Модифицированность = Ложь;
			ОповеститьОВыборе(ПолучитьКБК());
			
		КонецЕсли;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры
