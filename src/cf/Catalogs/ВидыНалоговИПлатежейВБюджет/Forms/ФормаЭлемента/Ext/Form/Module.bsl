#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьРеквизитыПоТекстуЗаполнения(Параметры.ТекстЗаполнения);
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	УстановитьВидимостьСчетовУчета();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.ВидНалога) Или Объект.Предопределенный Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("КодБК");
		
	ИначеЕсли Не ПустаяСтрока(КодБК) Тогда
		
		Если СтрДлина(КодБК) <> 20 Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru = 'КБК'"),,,
				НСтр("ru = 'КБК должен состоять из 20 знаков'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КодБК",, Отказ);
		КонецЕсли;
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодБК) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru = 'КБК'"),,,
				НСтр("ru = 'КБК должен содержать только цифры'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "КодБК",, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидНалога) Тогда
		Объект.ВидНалога = Неопределено;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("НаименованиеНачалоВыбораЗавершение", ЭтотОбъект);
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого КлючИЗначение Из ПредопределенныеВидыНалогов Цикл
		Если КлючИЗначение.Значение <> ПредопределенноеЗначение("Перечисление.ВидыНалогов.ПрочиеНалогиИСборы") Тогда
			СписокВыбора.Добавить(КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СписокВыбора.НайтиПоЗначению(Объект.ВидНалога);
	
	ПоказатьВыборИзСписка(ОписаниеОповещенияОЗакрытии, СписокВыбора, Элемент, СписокВыбора.НайтиПоЗначению(Объект.ВидНалога));
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Объект.ВидНалога = ВыбранноеЗначение.Значение;
		ЗаполнитьРеквизитыПоВидуНалога(ЭтотОбъект);
		Если Не ЗначениеЗаполнено(Объект.ВидНалога) Тогда
			// В классификаторе может и не быть всех видов налогов
			Объект.Наименование = Строка(ВыбранноеЗначение.Значение);
		КонецЕсли;
		
		УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодБКПриИзменении(Элемент)
	
	КодБК = ОбщегоНазначенияБПКлиентСервер.ОставитьВСтрокеТолькоЦифры(КодБК);
	
	Объект.КодБК = КодБК;
	
	ЗаполнитьРеквизитыПоКБК(ЭтотОбъект);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеПлатежаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидНалога) Тогда
		Объект.ВидНалога = Неопределено;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.КодБК) Тогда
		ЗаполнитьРеквизитыПоСчету(ЭтотОбъект);
		УправлениеФормой(ЭтотОбъект);
	ИначеЕсли ЗначениеЗаполнено(Объект.ВидНалога) Тогда
		Объект.ВидНалога = Неопределено;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КонструкторКБК(Команда)
	
	Если ЗначениеЗаполнено(Объект.ВидНалога) И Не ПустаяСтрока(ПредупреждениеПриРедактировании) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ВопросКонструкторКБКЗавершение", ЭтотОбъект);
		
		ТекстВопроса = ПредупреждениеПриРедактировании + "." + Символы.ПС +
			НСтр("ru = 'Продолжить редактирование?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		
	Иначе
		
		ОткрытьФорму("Справочник.ВидыНалоговИПлатежейВБюджет.Форма.КонструкторКБК", Новый Структура("КБК", Объект.КодБК), Элементы.КодБК);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросКонструкторКБКЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.ВидНалога = Неопределено;
		УправлениеФормой(ЭтотОбъект);
		
		ОткрытьФорму("Справочник.ВидыНалоговИПлатежейВБюджет.Форма.КонструкторКБК", Новый Структура("КБК", Объект.КодБК), Элементы.КодБК);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзКлассификатора(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВопросОбновитьИзКлассификатораЗавершение", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Реквизиты элемента будут заменены значениями из классификатора.
		|Все ручные изменения будут потеряны. Продолжить?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОбновитьИзКлассификатораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаблокироватьДанныеФормыДляРедактирования();
		
		ЗаполнитьРеквизитыПоВидуНалога(ЭтотОбъект);
		Записать();
		
		ОповеститьОбИзменении(Объект.Ссылка);
		
		УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	КодБК = Объект.КодБК;
	
	Элементы.ФормаОбновитьИзКлассификатора.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Обновить из классификатора %1'"), 
		Формат(Справочники.ВидыНалоговИПлатежейВБюджет.ДатаАктуальностиКлассификатора(), "ДФ=yyyy"));
	
	ПредопределенныеВидыНалогов = РасчетыСБюджетом.ВидыНалогов();
	
	Элементы.КодБК.АвтоОтметкаНезаполненного = (Объект.ВидНалога <> Перечисления.ВидыНалогов.ПрочиеНалогиИСборы);
	
	Если ЗначениеЗаполнено(Объект.ВидНалога) Тогда
		ЭтоНовыйЭлемент = Объект.Ссылка.Пустая();
		ТолькоПросмотр = Не ЭтоНовыйЭлемент;
		Элементы.КонструкторКБК.Видимость = ЭтоНовыйЭлемент;
	Иначе
		Элементы.ГруппаКодБК.ЦветФона     = ЦветаСтиля.ФонУправляющегоПоля;
		Элементы.КонструкторКБК.Видимость = Истина;
	КонецЕсли;
	
	СтруктураДанных = НайтиПоставляемыеДанные(Неопределено, Объект.КодБК, Неопределено);
	Если СтруктураДанных <> Неопределено Тогда
		НаименованиеКБК = СтруктураДанных.НаименованиеПолное;
	КонецЕсли;
	
	ПредупреждениеПриРедактировании = НСтр("ru = 'Автоматическое обновление реквизитов будет отключено'");
	
	Элементы.КодБК.ПредупреждениеПриРедактировании              = ПредупреждениеПриРедактировании;
	Элементы.Наименование.ПредупреждениеПриРедактировании       = ПредупреждениеПриРедактировании;
	Элементы.НазначениеПлатежа.ПредупреждениеПриРедактировании  = ПредупреждениеПриРедактировании;
	Элементы.СчетУчета.ПредупреждениеПриРедактировании          = ПредупреждениеПриРедактировании;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоПоставляемыйЭлемент = ЗначениеЗаполнено(Объект.ВидНалога);
	
	Элементы.ФормаОбновитьИзКлассификатора.Доступность = ЭтоПоставляемыйЭлемент;
	
	ВариантОтображениеПредупреждения = ?(ЭтоПоставляемыйЭлемент,
		ОтображениеПредупрежденияПриРедактировании.Отображать,
		ОтображениеПредупрежденияПриРедактировании.НеОтображать);
	
	Элементы.КодБК.ОтображениеПредупрежденияПриРедактировании              = ВариантОтображениеПредупреждения;
	Элементы.Наименование.ОтображениеПредупрежденияПриРедактировании       = ВариантОтображениеПредупреждения;
	Элементы.НазначениеПлатежа.ОтображениеПредупрежденияПриРедактировании  = ВариантОтображениеПредупреждения;
	Элементы.СчетУчета.ОтображениеПредупрежденияПриРедактировании          = ВариантОтображениеПредупреждения;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСчетовУчета()
	
	ЭлементыСчетов = Новый Массив();
	ЭлементыСчетов.Добавить("СчетУчета");
	
	СчетаУчетаВДокументах.УстановитьВидимостьСчетовУчета(Элементы, ЭлементыСчетов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПоТекстуЗаполнения(Знач ТекстЗаполнения)
	
	Если СтрДлина(ТекстЗаполнения) > 13 Тогда
		
		ТекстЗаполнения = СтрЗаменить(ТекстЗаполнения, " ", "");
		
		Если СтрДлина(ТекстЗаполнения) > 13 И СтрДлина(ТекстЗаполнения) <= 20
			И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекстЗаполнения) Тогда
			
			// Строка поиска похожа на КБК
			
			Объект.Наименование = "";
			Объект.КодБК        = ТекстЗаполнения;
			
			ЗаполнитьРеквизитыПоКБК(ЭтотОбъект);
			
			ТекстЗаполнения = Неопределено;
			
		КонецЕсли;
		
	ИначеЕсли СтрДлина(ТекстЗаполнения) > 2 И СтрДлина(ТекстЗаполнения) <= 8 Тогда
		
		ТекстЗаполнения = СтрЗаменить(ТекстЗаполнения, " ", "");
		
		Если СтрДлина(ТекстЗаполнения) > 2 И СтрДлина(ТекстЗаполнения) <= 8
			И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрЗаменить(ТекстЗаполнения, ".", "")) Тогда
			
			// Строка поиска похожа на СчетУчета
			
			СчетУчета = СчетУчетаПоТекстуЗаполнения(ТекстЗаполнения);
			Если ЗначениеЗаполнено(СчетУчета) Тогда
				
				Объект.Наименование = "";
				Объект.СчетУчета    = СчетУчетаПоТекстуЗаполнения(ТекстЗаполнения);
				
				ЗаполнитьРеквизитыПоСчету(ЭтотОбъект);
				
				ТекстЗаполнения = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоВидуНалога(Форма)
	
	Объект = Форма.Объект;
	
	СтруктураДанных = НайтиПоставляемыеДанные(Объект.ВидНалога, Неопределено, Неопределено);
	
	Если СтруктураДанных = Неопределено Тогда
		Объект.ВидНалога = Неопределено;
	Иначе
		ЗаполнитьЗначенияСвойств(Объект, СтруктураДанных);
		Форма.КодБК           = СтруктураДанных.КодБК;
		Форма.НаименованиеКБК = СтруктураДанных.НаименованиеПолное;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоКБК(Форма)
	
	Объект = Форма.Объект;
	
	СтруктураДанных = НайтиПоставляемыеДанные(Неопределено, Объект.КодБК, Неопределено);
	
	Если СтруктураДанных = Неопределено Тогда
		
		Объект.ВидНалога = Неопределено;
		Форма.НаименованиеКБК = "";
		
	Иначе
		
		НаименованиеПодвидаДохода = "";
		Если ПлатежиВБюджетКлиентСервер.ЭтоКБКШтраф(Объект.КодБК) Тогда
			НаименованиеПодвидаДохода = НСтр("ru = '(штраф)'");
		ИначеЕсли ПлатежиВБюджетКлиентСервер.ЭтоКБКПениПроценты(Объект.КодБК) Тогда
			НаименованиеПодвидаДохода = НСтр("ru = '(пени, проценты)'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураДанных.ВидНалога) Тогда
			
			ЗаполнитьЗначенияСвойств(Объект, СтруктураДанных);
			
		Иначе
			
			Если Не ПустаяСтрока(Объект.Наименование) Тогда
				Объект.Наименование = СокрЛП(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1 %2'"),
					СтруктураДанных.Наименование,
					НаименованиеПодвидаДохода));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Объект.СчетУчета) Тогда
				Объект.СчетУчета = СтруктураДанных.СчетУчета;
			КонецЕсли;
			
			Если ПустаяСтрока(Объект.НазначениеПлатежа) Тогда
				Объект.НазначениеПлатежа = СтруктураДанных.НазначениеПлатежа;
			КонецЕсли;
			
		КонецЕсли;
		
		Форма.НаименованиеКБК = СокрЛП(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 %2'"),
			СтруктураДанных.НаименованиеПолное,
			НаименованиеПодвидаДохода));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоСчету(Форма)
	
	Объект = Форма.Объект;
	
	СтруктураДанных = НайтиПоставляемыеДанные(Неопределено, Неопределено, Объект.СчетУчета);
	
	Если СтруктураДанных = Неопределено Тогда
		Объект.ВидНалога = Неопределено;
	Иначе
		Если ЗначениеЗаполнено(СтруктураДанных.ВидНалога) Тогда
			ЗаполнитьЗначенияСвойств(Объект, СтруктураДанных);
		Иначе
			Если ПустаяСтрока(Объект.Наименование) Тогда
				Объект.Наименование = СтруктураДанных.Наименование;
			КонецЕсли;
			Если ПустаяСтрока(Объект.НазначениеПлатежа) Тогда
				Объект.НазначениеПлатежа = СтруктураДанных.НазначениеПлатежа;
			КонецЕсли;
		КонецЕсли;
		Форма.КодБК           = СтруктураДанных.КодБК;
		Форма.НаименованиеКБК = СтруктураДанных.НаименованиеПолное;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиПоставляемыеДанные(Знач ВидНалога = Неопределено, Знач КБК = Неопределено, Знач СчетУчета = Неопределено)
	
	СтруктураДанных = Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоставляемыеДанные(ВидНалога, КБК, СчетУчета);
	
	Если СтруктураДанных <> Неопределено
		И СтруктураДанных.Свойство("ВидНалога")
		И ЗначениеЗаполнено(СтруктураДанных.ВидНалога)
		И Не Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоРеквизиту("ВидНалога", СтруктураДанных.ВидНалога).Пустая() Тогда
		
		СтруктураДанных.ВидНалога = Перечисления.ВидыНалогов.ПустаяСсылка();
		
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция СчетУчетаПоТекстуЗаполнения(ТекстЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ШаблонКода", ТекстЗаполнения + "%");
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Хозрасчетный.Ссылка
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Код ПОДОБНО &ШаблонКода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Хозрасчетный.Ссылка
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.КодБыстрогоВыбора ПОДОБНО &ШаблонКода";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетУчета = Выборка.Ссылка;
	Иначе
		СчетУчета = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СчетУчета;
	
КонецФункции

#КонецОбласти
