#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПометкаУдаления Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоИнтеркампани
		И (СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезОператораЭДОТакском
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP) Тогда
		
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Контрагент"),
				ЭтотОбъект,
				"Контрагент",
				,
				Отказ);
		КонецЕсли;
		
		ПроверитьНастройкиПрямогоОбмена = Ложь;
		
		Если РасширенныйРежимНастройкиСоглашения Тогда
			
			МассивСтрокЭлектронныхДокументов = ИсходящиеДокументы.НайтиСтроки(Новый Структура("Формировать", Истина));
			Для каждого СтрокаТаблицы Из МассивСтрокЭлектронныхДокументов Цикл
				
				Префикс = "ИсходящиеДокументы[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПрофильНастроекЭДО) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Колонка", "ЗАПОЛНЕНИЕ", "Профиль настроек ЭДО",
						СтрокаТаблицы.НомерСтроки, "Электронные документы"),
						ЭтотОбъект,
						Префикс + "ПрофильНастроекЭДО",
						,
						Отказ);
				КонецЕсли;
				Если ЭлектронныеДокументыСлужебныйВызовСервера.ЭтоПрямойОбмен(СтрокаТаблицы.СпособОбменаЭД)
					И Не ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторКонтрагента) Тогда
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Колонка", "ЗАПОЛНЕНИЕ", "Идентификатор контрагента",
						СтрокаТаблицы.НомерСтроки, "Электронные документы"),
						ЭтотОбъект,
						Префикс + "ИдентификаторКонтрагента",
						,
						Отказ);
				КонецЕсли;
				
				Если СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументов");
					ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументов");
				ИначеЕсли СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("ЭлектроннаяПочтаКонтрагента");
				ИначеЕсли СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументовFTP");
					ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументовFTP");
				КонецЕсли;
			КонецЦикла;
		Иначе
			
			Если ЭлектронныеДокументыСлужебныйВызовСервера.ЭтоПрямойОбмен(СпособОбменаЭД)
				И Не ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Идентификатор контрагента"),
					ЭтотОбъект,
					"ИдентификаторКонтрагента",
					,
					Отказ);
			КонецЕсли;
			
			Если СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
				ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументов");
				ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументов");
			ИначеЕсли СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
				
				ПроверяемыеРеквизиты.Добавить("ЭлектроннаяПочтаКонтрагента");
			ИначеЕсли СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
				
				ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументовFTP");
				ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументовFTP");
			КонецЕсли;
		КонецЕсли;
		
		Если СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP
			ИЛИ ПроверитьНастройкиПрямогоОбмена Тогда
			
			МассивСтрокФайловОбмена = ФорматыФайловОбмена.НайтиСтроки(Новый Структура("Использовать, ФорматФайла",
				Истина, ПредопределенноеЗначение("Перечисление.ФорматыФайловОбменаЭД.XML")));
			
			Если МассивСтрокФайловОбмена.Количество() = 0 Тогда
				ТекстСообщения = НСтр("ru='Формат исходящего документа ""ДокументХML(*.xml)"" обязателен к использованию.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,
					"ФорматыФайловОбмена", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Очистить();
	Если ЭтоИнтеркампани И СтатусСоглашения = Перечисления.СтатусыСоглашенийЭД.Действует Тогда
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Организация-отправитель"),
				ЭтотОбъект,
				"Организация",
				,
				Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Идентификатор отправителя"),
				ЭтотОбъект,
				"ИдентификаторОрганизации",
				,
				Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Организация-получатель"),
				ЭтотОбъект,
				"Контрагент",
				,
				Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Идентификатор получателя"),
				ЭтотОбъект,
				"ИдентификаторКонтрагента",
				,
				Отказ);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Если СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезВебРесурсБанка Тогда
		ПроверяемыеРеквизиты.Очистить();
		Отказ = НЕ ЭлектронныеДокументыКлиентСервер.ЗаполненыРеквизитыНастройкиЭДОСБанками(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не НастройкаЭДОУникальна() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	// Обновление состояния контрагента для сервиса 1С-ЭДО
	Если ЗначениеЗаполнено(ЭтотОбъект.ИсходящиеДокументы.Найти(Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО)) Тогда
		ИмяРеквизитаИННКонтрагента = ЭлектронныеДокументыПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННКонтрагента");
		ИмяРеквизитаКППКонтрагента = ЭлектронныеДокументыПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППКонтрагента");
		ПараметрыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтотОбъект.Контрагент,
			ИмяРеквизитаИННКонтрагента + ", " + ИмяРеквизитаКППКонтрагента);
			
		ЗаписьСостояния = РегистрыСведений.СостоянияКонтрагентовЭД.СоздатьМенеджерЗаписи();
		ЗаписьСостояния.Контрагент = ЭтотОбъект.Контрагент;
		ЗаписьСостояния.ИНН = ПараметрыКонтрагента[ИмяРеквизитаИННКонтрагента];
		ЗаписьСостояния.КПП = ПараметрыКонтрагента[ИмяРеквизитаКППКонтрагента];
		
		Если ЭтотОбъект.ПометкаУдаления Тогда
			ЗаписьСостояния.Состояние = Перечисления.СостоянияКонтрагентаЭД.НеПодключен;
		Иначе
			ЗаписьСостояния.Состояние = Перечисления.СостоянияКонтрагентаЭД.НастроенЭДО;
		КонецЕсли;
		
		ЗаписьСостояния.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Только для внутреннего использования
Функция НастройкаЭДОУникальна() Экспорт
	
	Если ПометкаУдаления Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЭтотОбъект.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезВебРесурсБанка
		И (НЕ ЗначениеЗаполнено(ЭтотОбъект.Организация) ИЛИ НЕ ЗначениеЗаполнено(ЭтотОбъект.Контрагент)) Тогда
		Возврат Истина
	КонецЕсли;
	
	ТекущаяНастройкаУникальна = Истина;
	
	// Проверка на уникальное использование настройки по реквизитам: Организация, Контрагент, ДоговорКонтрагента.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НастройкиЭДО.Контрагент КАК Контрагент,
	|	НастройкиЭДО.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НастройкиЭДО.Организация КАК Организация
	|ИЗ
	|	Справочник.СоглашенияОбИспользованииЭД КАК НастройкиЭДО
	|ГДЕ
	|	НЕ НастройкиЭДО.ПометкаУдаления
	|	И НастройкиЭДО.Организация = &Организация
	|	И НастройкиЭДО.Контрагент = &Контрагент
	|	И НастройкиЭДО.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И НастройкиЭДО.Ссылка <> &ТекущаяНастройка";
	Запрос.УстановитьПараметр("ТекущаяНастройка",   ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация",        ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("Контрагент",         ЭтотОбъект.Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ЭтотОбъект.ДоговорКонтрагента);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ТекущаяНастройкаУникальна = Ложь;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ШаблонСообщения = НСтр("ru = 'В информационной базе уже существует настройка ЭДО между контрагентом %1 и организацией %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.Контрагент,
				Выборка.Организация);
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Шаблон = Нстр("ru = '%1 по договору %2'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										Шаблон, ТекстСообщения, Выборка.ДоговорКонтрагента);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекущаяНастройкаУникальна;
	
КонецФункции

#КонецОбласти

#КонецЕсли