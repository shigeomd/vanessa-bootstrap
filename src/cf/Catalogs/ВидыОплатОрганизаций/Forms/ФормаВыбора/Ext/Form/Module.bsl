////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <Список>

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Если Группа Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", Родитель);
	
	Если Копирование Тогда
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Список.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			ЗначенияЗаполнения.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение);
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
			ЗначенияЗаполнения.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение[0].Значение);
		КонецЕсли;
	
	КонецЦикла;
	
	ТипОплатыДоступныеЗначения = ПолучитьДоступныеЗначенияТипаОплаты();
	Если ТипОплатыДоступныеЗначения.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("ТипОплатыДоступныеЗначения", ТипОплатыДоступныеЗначения)
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.ВидыОплатОрганизаций.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)

	Если Элементы.Список.ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элемент.ТекущаяСтрока);
	
	ТипОплатыДоступныеЗначения = ПолучитьДоступныеЗначенияТипаОплаты();
	Если ТипОплатыДоступныеЗначения.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("ТипОплатыДоступныеЗначения", ТипОплатыДоступныеЗначения)
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ВидыОплатОрганизаций.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Функция ПолучитьДоступныеЗначенияТипаОплаты()

	ТипОплатыДоступныеЗначения = Новый Массив;
	
	Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
	
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка(ЭлементОтбора.ЛевоеЗначение) <> "ТипОплаты" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			ТипОплатыДоступныеЗначения.Добавить(ЭлементОтбора.ПравоеЗначение);
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
			Для каждого ЭлементСпискаЗначений Из ЭлементОтбора.ПравоеЗначение Цикл
				ТипОплатыДоступныеЗначения.Добавить(ЭлементСпискаЗначений.Значение);
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;

	Возврат ТипОплатыДоступныеЗначения;

КонецФункции
