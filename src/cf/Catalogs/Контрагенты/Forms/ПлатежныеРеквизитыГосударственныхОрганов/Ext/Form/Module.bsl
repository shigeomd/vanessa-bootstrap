
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("КодГосударственногоОргана")
		И Параметры.Свойство("ВидГосударственногоОргана") Тогда
		КодГосударственногоОргана = Параметры.КодГосударственногоОргана;
		ВидГосударственногоОргана = Параметры.ВидГосударственногоОргана;
	ИначеЕсли Параметры.Свойство("РегистрацияВНалоговомОргане")
		И ЗначениеЗаполнено(Параметры.РегистрацияВНалоговомОргане) Тогда
		КодГосударственногоОргана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.РегистрацияВНалоговомОргане, "Код");
		ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты налоговой инспекции'");
	ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганПФР Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты отделения ПФР'");
	ИначеЕсли ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты отделения ФСС'");
	Иначе
		ЭтаФорма.Заголовок = НСтр("ru = 'Платежные реквизиты'");
	КонецЕсли;
	
	Данные = ДанныеГосударственныхОрганов.ГосударственныйОрган(ВидГосударственногоОргана, КодГосударственногоОргана);
	
	ГосударственныйОрганБанк = Данные.ПлатежныеРеквизиты.Банк;
	ГосударственныйОрганБИК  = Данные.ПлатежныеРеквизиты.БИК;
	ГосударственныйОрганИНН  = Данные.ИНН;
	ГосударственныйОрганКПП  = Данные.КПП;
	ГосударственныйОрганНаименование    = Данные.ПолноеНаименование;
	ГосударственныйОрганРасчетныйСчет   = Данные.ПлатежныеРеквизиты.РасчетныйСчет;
	ГосударственныйОрганТекстПолучателя = Данные.ПлатежныеРеквизиты.ПолучательПлатежа;
	
	Если Параметры.Свойство("НаименованиеГосударственногоОргана")
		И НЕ ЗначениеЗаполнено(ГосударственныйОрганНаименование) Тогда
		ГосударственныйОрганНаименование = Параметры.НаименованиеГосударственногоОргана;
	КонецЕсли;
	
	РазделениеВключено = ОбщегоНазначенияПовтИсп.РазделениеВключено();
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.Справочники.Контрагенты) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ЗаписатьДанныеОПлатежныхРеквизитах();
	
	Закрыть(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВсеБанки(Команда)
	
	ОткрытьФормуВыбораБанка();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиБанк()
	
	ТекущийЭлемент = Элементы.БИКБанка;
	СписокНайденныхБанков = НайтиБанкВКлассификаторе(СокрЛП(ГосударственныйОрганБИК), "БИКБанка", Ложь);
	
	Если СписокНайденныхБанков <> Неопределено И СписокНайденныхБанков.Количество() = 0 Тогда
		ПредложитьСтандартныйВыбор(СокрЛП(ГосударственныйОрганБИК), "БИКБанка", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьСтандартныйВыбор(ТекстДляПоиска, Поле, Валютный)
	Перем ТекстОшибки;
	
	Если Найти(Поле, "БИК") = 1 Тогда
		ОбластьПоиска = "Код";
	ИначеЕсли Найти(Поле, "Коррсчет") = 1 Тогда
		ОбластьПоиска = "КоррСчет";
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ОбластьПоиска = "Код" Тогда
		
		Если НЕ ПроверитьКорректностьБИК(ТекстДляПоиска, ТекстОшибки) Тогда
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, Поле);
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Банк с БИК ""%1"" не найден в справочнике банков'"), ТекстДляПоиска);
		
	ИначеЕсли ОбластьПоиска = "КоррСчет" Тогда
		
		Если НЕ ПроверитьКорректностьНомераСчета(ТекстДляПоиска, Валютный, ТекстОшибки) Тогда
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, Поле);
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Банк с корр. счетом ""%1"" не найден в справочнике банков'"), ТекстДляПоиска);
		
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Выбрать",     НСтр("ru = 'Выбрать из списка'"));
	Если НЕ РазделениеВключено Тогда
		Кнопки.Добавить("Создать", НСтр("ru = 'Создать банк'"));
	КонецЕсли;
	Кнопки.Добавить("Продолжить",  НСтр("ru = 'Продолжить ввод'"));
	Кнопки.Добавить("Отменить",    НСтр("ru = 'Отменить ввод'"));
	
	ДополнительныеПараметры   = Новый Структура("Поле, ТекстДляПоиска", Поле, ТекстДляПоиска);
	ОписаниеОповещениеяВопрос = Новый ОписаниеОповещения("ПредложитьСтандартныйВыборЗавершение",
		ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(
		ОписаниеОповещениеяВопрос,
		ТекстВопроса,
		Кнопки,,
		"Выбрать",
		НСтр("ru = 'Банк не найден'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьСтандартныйВыборЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = "Выбрать" Тогда
		
		ОткрытьФормуВыбораБанка();
		
	ИначеЕсли Ответ = "Создать" Тогда
		
		ПараметрыФормы = Новый Структура("Код, РучноеИзменение", СокрЛП(ДополнительныеПараметры.ТекстДляПоиска), Истина);
		ОткрытьФорму("Справочник.Банки.ФормаОбъекта",
			ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Ответ = "Отменить" Тогда
		//Если ЗначениеЗаполнено(ГосударственныйОрганБанк) Тогда
		//	ЭтотОбъект[ДополнительныеПараметры.Поле] = РеквизитыБанка.Код;
		//Иначе
		//	ЭтотОбъект[ДополнительныеПараметры.Поле] = "";
		//КонецЕсли;
		
	Иначе
		ТекущийЭлемент = Элементы[ДополнительныеПараметры.Поле];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораБанка();
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокНайденныхБанков = НайтиБанкВКлассификаторе(СокрЛП(Текст), Элемент.Имя, Ложь);
	Если СписокНайденныхБанков <> Неопределено Тогда
		Если СписокНайденныхБанков.Количество() > 1 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора         = СписокНайденныхБанков;
		ИначеЕсли СписокНайденныхБанков.Количество() = 1 Тогда
			ГосударственныйОрганБанк = СписокНайденныхБанков[0].Значение;
			ОбработатьВыборБанка(ЭтотОбъект);
		Иначе
			ПредложитьСтандартныйВыбор(СокрЛП(Текст), Элемент.Имя, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ТекущийЭлемент = Элемент;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ГосударственныйОрганБанк = ВыбранноеЗначение;
	ОбработатьВыборБанка(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка     = Ложь;
	ГосударственныйОрганБанк = Неопределено;
	ОбработатьВыборБанка(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ГосударственныйОрганБанк) Тогда
		ОткрытьФорму("Справочник.Банки.ФормаОбъекта", Новый Структура("Ключ", ГосударственныйОрганБанк), ЭтотОбъект);
	Иначе
		ОткрытьФормуВыбораБанка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция НайтиБанкВКлассификаторе(ТекстДляПоиска, Поле, Валютный)
	
	Если ПустаяСтрока(ТекстДляПоиска) Тогда
		ТекстСообщения = "";
		
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
			ОчиститьСообщения();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле);
		КонецЕсли;
		
		Возврат Неопределено;
	КонецЕсли;
	
	Если Найти(Поле, "БИК") = 1 Тогда
		ОбластьПоиска = "Код";
	ИначеЕсли Найти(Поле, "Коррсчет") = 1 Тогда
		ОбластьПоиска = "КоррСчет";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	СписокНайденныхБанков = ПолучитьСписокБанковПоРеквизитам(ОбластьПоиска, ТекстДляПоиска);
	
	Если ОбластьПоиска = "Код" И СписокНайденныхБанков.Количество() = 1 Тогда
		Если Поле = "БИКБанкаДляРасчетов" Тогда
			ДеятельностьБанкаНепрямыхРасчетовПрекращена = ДеятельностьБанкаПрекращена(ТекстДляПоиска);
		Иначе
			ДеятельностьБанкаПрекращена = ДеятельностьБанкаПрекращена(ТекстДляПоиска);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокНайденныхБанков;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьКорректностьБИК(БИК, ТекстОшибки = "")
	
	Результат = Истина;
	
	Если ПустаяСтрока(БИК) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если СтрДлина(БИК) <> 9 Тогда
		ТекстОшибки = ТекстОшибки +
			НСтр("ru = 'БИК банка должен состоять из 9 цифр'");
		Результат   = Ложь;
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(БИК) Тогда
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'В составе БИК банка должны быть только цифры'");
		Результат   = Ложь;
	ИначеЕсли НЕ Лев(БИК, 2) = "04" Тогда
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'Первые 2 цифры БИК банка должны быть ""04""'");
		Результат   = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьКорректностьНомераСчета(Номер, ВалютныйСчет = Ложь, ТекстОшибки = "")
	
	Результат = Истина;
	
	Если ПустаяСтрока(Номер) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ВалютныйСчет И СтрДлина(Номер) <> 20 Тогда
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'Номер счета должен состоять из 20 цифр'");
		Результат   = Ложь;
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Номер) Тогда
		ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", " ") +
			НСтр("ru = 'В номере банковского счета присутствуют не только цифры.
				|Возможно, номер указан неверно'");
		Результат   = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораБанка()
	
	ПараметрыФормы = Новый Структура(
		"ТекущаяСтрока, ПараметрВыборГруппИЭлементов",
		ГосударственныйОрганБанк, ИспользованиеГруппИЭлементов.Элементы);
		
	ОткрытьФорму("Справочник.Банки.ФормаВыбора", ПараметрыФормы, Элементы.БИКБанка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыБанка(Знач Банк)
	
	СтрокаРеквизитов    = Новый Структура("Код, КоррСчет, Наименование, Город");
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк, СтрокаРеквизитов);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьВыборБанка(Форма)
	
	РеквизитыБанка = ПолучитьРеквизитыБанка(Форма.ГосударственныйОрганБанк);
	Форма.ГосударственныйОрганБИК         = РеквизитыБанка.Код;
	
	УправлениеФормой(Форма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокБанковПоРеквизитам(Знач Поле, Знач Значение) Экспорт
	
	СписокБанков = Новый СписокЗначений;
	
	Если ПустаяСтрока(Значение) Тогда
		
		Возврат СписокБанков;
		
	КонецЕсли;
	
	ТаблицаБанков = Справочники.Банки.ПолучитьТаблицуБанковПоРеквизитам(Поле, Значение);
	
	СписокБанков.ЗагрузитьЗначения(ТаблицаБанков.ВыгрузитьКолонку("Ссылка"));
	
	Возврат СписокБанков;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДеятельностьБанкаПрекращена(БИК)
	
	Результат = Ложь;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КлассификаторБанковРФ.ДеятельностьПрекращена
	|ИЗ
	|	Справочник.КлассификаторБанковРФ КАК КлассификаторБанковРФ
	|ГДЕ
	|	КлассификаторБанковРФ.Код = &БИК";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("БИК", БИК);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.ДеятельностьПрекращена;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеОПлатежныхРеквизитах();
	
	ГосударственныйОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(ВидГосударственногоОргана, КодГосударственногоОргана);
	ГосударственныйОрган.Вид = ВидГосударственногоОргана;
	ГосударственныйОрган.Код = КодГосударственногоОргана;
	ГосударственныйОрган.ПолноеНаименование = ГосударственныйОрганНаименование;
	ГосударственныйОрган.ИНН = ГосударственныйОрганИНН;
	ГосударственныйОрган.КПП = ГосударственныйОрганКПП;
	Если НЕ ЗначениеЗаполнено(ГосударственныйОрган.Наименование) Тогда
		ГосударственныйОрган.Наименование = ГосударственныйОрганНаименование;
	КонецЕсли;
	ГосударственныйОрган.ПлатежныеРеквизиты.ПолучательПлатежа = ГосударственныйОрганТекстПолучателя;
	ГосударственныйОрган.ПлатежныеРеквизиты.РасчетныйСчет = ГосударственныйОрганРасчетныйСчет;
	ГосударственныйОрган.ПлатежныеРеквизиты.КоррСчет = "";
	ГосударственныйОрган.ПлатежныеРеквизиты.БИК = ГосударственныйОрганБИК;
	
	ДанныеГосударственныхОрганов.ОбновитьДанныеГосударственногоОргана(ГосударственныйОрган);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Если ЗначениеЗаполнено(Форма.ГосударственныйОрганБанк) Тогда
		Элементы.СтраницыБанк.ТекущаяСтраница = Элементы.СтраницаБанк;
	Иначе
		Элементы.СтраницыБанк.ТекущаяСтраница = Элементы.СтраницаБанкНеВыбран;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти