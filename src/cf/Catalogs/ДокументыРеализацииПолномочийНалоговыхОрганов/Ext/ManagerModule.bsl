#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда 
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Справочник", "ДокументыРеализацииПолномочийНалоговыхОрганов", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

// Обработчик обновления БРО 1.0.1.41
//
Процедура ОбновитьДокументыРеализацииПолномочийНалоговыхОрганов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦиклыОбмена.Ссылка КАК ЦиклОбменаСсылка,
		|	ЦиклыОбмена.ВнешняяОрганизация КАК ЦиклОбменаВнешняяОрганизация,
		|	ЦиклыОбмена.Организация КАК ЦиклОбменаОрганизация,
		|	ЦиклыОбмена.Предмет КАК Предмет,
		|	ЦиклыОбмена.Предмет.ДатаСообщения КАК ПредметДатаСообщения,
		|	ЦиклыОбмена.Предмет.ДатаОтправки КАК ПредметДатаОтправки,
		|	ЦиклыОбмена.Предмет.Идентификатор КАК ПредметИдентификатор,
		|	ЦиклыОбмена.Предмет.ИдентификаторОснования КАК ПредметИдентификаторОснования,
		|	ЦиклыОбменаДополнительныеПредметы.Предмет КАК ДопПредмет,
		|	СтатусыОтправки.Статус КАК СтатусОтправкиПредмета
		|ИЗ
		|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
		|		ПО ЦиклыОбмена.Предмет = СтатусыОтправки.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЦиклыОбмена.ДополнительныеПредметы КАК ЦиклыОбменаДополнительныеПредметы
		|		ПО (ЦиклыОбменаДополнительныеПредметы.Ссылка = ЦиклыОбмена.Ссылка)
		|ГДЕ
		|	ЦиклыОбмена.Тип = &ТипЦиклаДокумент
		|	И ЦиклыОбмена.Предмет ССЫЛКА Справочник.ДокументыРеализацииПолномочийНалоговыхОрганов
		|ИТОГИ ПО
		|	ЦиклОбменаСсылка,
		|	СтатусОтправкиПредмета";

	Запрос.УстановитьПараметр("ТипЦиклаДокумент", Перечисления.ТипыЦикловОбмена.Документ);
	Запрос.УстановитьПараметр("ТипСодержимогоДокумент", Перечисления.ТипыСодержимогоТранспортногоКонтейнера.Документ);

	Результат = Запрос.Выполнить();
	
	ВыборкаСсылка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НачатьТранзакцию();
	
	Пока ВыборкаСсылка.Следующий() Цикл
		
		// создаем документ опись входящих документов в ИБ
		ОписьДокументов = Справочники.ОписиВходящихДокументовИзНалоговыхОрганов.СоздатьЭлемент();
		ОписьДокументов.НалоговыйОрган 			= ВыборкаСсылка.ЦиклОбменаВнешняяОрганизация;
		ОписьДокументов.Организация 			= ВыборкаСсылка.ЦиклОбменаОрганизация;
		ОписьДокументов.Идентификатор 			= ВыборкаСсылка.ПредметИдентификатор;
		ОписьДокументов.ИдентификаторОснования 	= ВыборкаСсылка.ПредметИдентификаторОснования;
		ОписьДокументов.ДатаСообщения 			= ВыборкаСсылка.ПредметДатаСообщения;
		ОписьДокументов.ДатаОтправки 			= ВыборкаСсылка.ПредметДатаОтправки;
		
		ОписьДокументов.Наименование = "Опись входящих документов от НО " + ОписьДокументов.НалоговыйОрган + " от " + Формат(ОписьДокументов.ДатаСообщения, "ДЛФ=D");
		
		// начинаем заполнять табличную часть
		// первый предмет
		НоваяСтрока = ОписьДокументов.ВходящиеДокументы.Добавить();
		НоваяСтрока.СсылкаНаОбъект = ВыборкаСсылка.Предмет;
		
		ВыборкаСтатусОтправки = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаСтатусОтправки.Следующий() Тогда
			
			СтатусОтправки = ВыборкаСтатусОтправки.СтатусОтправкиПредмета;
			
			ВыборкаДетальныеЗаписи = ВыборкаСтатусОтправки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДопПредмет) Тогда
					НоваяСтрока = ОписьДокументов.ВходящиеДокументы.Добавить();
					НоваяСтрока.СсылкаНаОбъект = ВыборкаДетальныеЗаписи.ДопПредмет;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
				
		Попытка
			ОписьДокументов.ОбменДанными.Загрузка = Истина;
			ОписьДокументов.Записать();
			
			// скопировать статус отправки с предыдущего предмета
			МенЗап = РегистрыСведений.СтатусыОтправки.СоздатьМенеджерЗаписи();
			МенЗап.Объект = ОписьДокументов.Ссылка;
			МенЗап.Статус = СтатусОтправки;
			МенЗап.Записать(Истина);
			
			// замена предметов цикла обмена  на один предмет – элемент нового справочника
			ЦиклОбменаОбъект = ВыборкаСсылка.ЦиклОбменаСсылка.ПолучитьОбъект();
			ЦиклОбменаОбъект.ДополнительныеПредметы.Очистить();
			ЦиклОбменаОбъект.Предмет = ОписьДокументов.Ссылка;
			
			ЦиклОбменаОбъект.ОбменДанными.Загрузка = Истина;
			
			ЦиклОбменаОбъект.Записать();

		Исключение
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

#КонецЕсли