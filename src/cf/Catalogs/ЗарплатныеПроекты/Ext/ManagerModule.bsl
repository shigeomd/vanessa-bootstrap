#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

Процедура ЗаполнитьБанкПоКлассификатору() Экспорт
	
	Если Не ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		ДополнитьКласификаторБанков();
	КонецЕсли;
	
	// Справочник ЗарплатныеПроекты
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокСсылок.Ссылка,
	|	КлассификаторБанковРФ.Ссылка КАК Банк
	|ИЗ
	|	Справочник.ЗарплатныеПроекты КАК СписокСсылок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанковРФ КАК КлассификаторБанковРФ
	|		ПО СписокСсылок.УдалитьБанк.Код = КлассификаторБанковРФ.Код
	|ГДЕ
	|	СписокСсылок.УдалитьБанк <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|	И СписокСсылок.Банк = ЗНАЧЕНИЕ(Справочник.КлассификаторБанковРФ.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ЗарплатныйПроект = Выборка.Ссылка.ПолучитьОбъект();
			ЗарплатныйПроект.Банк = Выборка.Банк;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ЗарплатныйПроект);
			
		Исключение
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось заполнить банк для зарплатного проекта ""%1"" по причине:
			|%2'"), 
			Выборка.ЗарплатныйПроект,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,, 
			Выборка.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	// Регистр сведений ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанковРФ КАК КлассификаторБанковРФ
	|		ПО (ВЫРАЗИТЬ(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк КАК Справочник.Банки).Код = КлассификаторБанковРФ.Код)
	|ГДЕ
	|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
	|	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Банк = ЗНАЧЕНИЕ(Справочник.КлассификаторБанковРФ.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Период,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Банк = ЗНАЧЕНИЕ(Справочник.КлассификаторБанковРФ.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(КлассификаторБанковРФ.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторБанковРФ.ПустаяСсылка))
		|		ИНАЧЕ ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Банк
		|	КОНЕЦ КАК Банк,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Документ
		|ИЗ
		|	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанковРФ КАК КлассификаторБанковРФ
		|		ПО (ВЫРАЗИТЬ(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк КАК Справочник.Банки).Код = КлассификаторБанковРФ.Код)";
		
		Попытка
			НаборЗаписей = РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СоздатьНаборЗаписей();
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		Исключение
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось заполнить банк для лицевых счетов по причине:
			|%1'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
		КонецПопытки;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДополнитьКласификаторБанков()
	
	Если Не ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗарплатныеПроекты.УдалитьБанк.Код КАК БИК,
		|	ЗарплатныеПроекты.УдалитьБанк.Наименование КАК Наименование,
		|	""ЗарплатныеПроекты"" КАК ТипИсточника,
		|	СУММА(1) КАК Количество
		|ПОМЕСТИТЬ ВТПоИсточникам
		|ИЗ
		|	Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты
		|ГДЕ
		|	ЗарплатныеПроекты.УдалитьБанк <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗарплатныеПроекты.УдалитьБанк.Код,
		|	ЗарплатныеПроекты.УдалитьБанк.Наименование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк.Код,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк.Наименование,
		|	""ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам"",
		|	СУММА(1)
		|ИЗ
		|	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
		|ГДЕ
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк <> ЗНАЧЕНИЕ(Справочник.Банки.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк.Код,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.УдалитьБанк.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоИсточникам.БИК,
		|	ПоИсточникам.Наименование,
		|	ПоИсточникам.ТипИсточника,
		|	СУММА(ПоИсточникам.Количество) КАК Количество
		|ПОМЕСТИТЬ ПоИсточникам
		|ИЗ
		|	ВТПоИсточникам КАК ПоИсточникам
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоИсточникам.БИК,
		|	ПоИсточникам.Наименование,
		|	ПоИсточникам.ТипИсточника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоИсточникам.БИК,
		|	ПоИсточникам.Наименование,
		|	ПоИсточникам.ТипИсточника,
		|	ПоИсточникам.Количество,
		|	ВЫБОР
		|		КОГДА КлассификаторБанковРФ.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВКлассификаторе
		|ПОМЕСТИТЬ ВТИспользуемыеБанки
		|ИЗ
		|	ПоИсточникам КАК ПоИсточникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанковРФ КАК КлассификаторБанковРФ
		|		ПО ПоИсточникам.БИК = КлассификаторБанковРФ.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИспользуемыеБанки.БИК,
		|	МАКСИМУМ(ИспользуемыеБанки.Наименование) КАК Наименование
		|ИЗ
		|	ВТИспользуемыеБанки КАК ИспользуемыеБанки
		|ГДЕ
		|	НЕ ИспользуемыеБанки.ЕстьВКлассификаторе
		|
		|СГРУППИРОВАТЬ ПО
		|	ИспользуемыеБанки.БИК";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Попытка
					КлассификаторБанковРФОбъект = Справочники.КлассификаторБанковРФ.СоздатьЭлемент();
					КлассификаторБанковРФОбъект.Код = Выборка.БИК;
					КлассификаторБанковРФОбъект.Наименование = Выборка.Наименование;
					КлассификаторБанковРФОбъект.ДеятельностьПрекращена = Истина;
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(КлассификаторБанковРФОбъект);
				Исключение
					// Если не удалось обработать какой-либо документ, повторяем попытку снова.
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось записать банк ""%1"" по причине:
					|%2'"), 
					Выборка.Наименование,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
				КонецПопытки;
				
			КонецЦикла; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ЗаполнитьКодировкуФайловОбменаПоЗарплатнымПроектам() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗарплатныеПроекты.Ссылка
	|ИЗ
	|	Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты
	|ГДЕ
	|	ЗарплатныеПроекты.КодировкаФайла <> ЗНАЧЕНИЕ(Перечисление.КодировкаФайловОбменаПоЗарплатномуПроекту.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		// Обновление уже выполнялось
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ЗарплатныеПроекты.Ссылка
	|ИЗ
	|	Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты
	|ГДЕ
	|	ЗарплатныеПроекты.ИспользоватьЭлектронныйДокументооборотСБанком";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗарплатныйПроект = Выборка.Ссылка.ПолучитьОбъект();
		ЗарплатныйПроект.КодировкаФайла = Перечисления.КодировкаФайловОбменаПоЗарплатномуПроекту.UTF8;
		ЗарплатныйПроект.ОбменДанными.Загрузка = Истина;
		ЗарплатныйПроект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли