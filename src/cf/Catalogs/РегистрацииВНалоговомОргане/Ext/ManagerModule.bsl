#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Если ЗначениеЗаполнено(Параметры.Отбор.Организация) Тогда
			Параметры.Отбор.Организация = РегламентированнаяОтчетность.ГоловнаяОрганизация(Параметры.Отбор.Организация);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКоличествоПодчиненныхЭлементовПоВладельцу(Владелец) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрацииВНалоговомОргане.Ссылка
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Владелец);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество();

КонецФункции

Функция КодТерритории(РегистрацияВНалоговомОргане, Период) Экспорт
	
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		
		Возврат "";
		
	КонецЕсли;
		
	Если Год(Период) < 2014 Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КодПоОКАТО");
	Иначе
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КодПоОКТМО");
	КонецЕсли;
	
КонецФункции

Функция НайтиПоКодуТерритории(Организация, КодТерритории) Экспорт
	
	// Ищем по ОКАТО или ОКТМО - по чему найдем.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("КодТерритории",       КодТерритории);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка КАК Ссылка,
	|	ИСТИНА КАК НайденПоОКТМО,
	|	ЛОЖЬ КАК НайденПоОКАТО
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &ГоловнаяОрганизация
	|	И РегистрацииВНалоговомОргане.КодПоОКТМО = &КодТерритории
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.Ссылка,
	|	ЛОЖЬ,
	|	ИСТИНА
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &ГоловнаяОрганизация
	|	И РегистрацииВНалоговомОргане.КодПоОКАТО = &КодТерритории
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		ОбластьПоиска = Неопределено;
	Иначе
		
		// Выберем более адекватный
		
		ИскатьПоОКТМО = ПлатежиВБюджетКлиентСервер.ЭтоКодОКТМО(КодТерритории);
		ИскатьПоОКАТО = ПлатежиВБюджетКлиентСервер.ЭтоКодОКАТО(КодТерритории);
		Если ИскатьПоОКТМО = ИскатьПоОКАТО Тогда
			ОбластьПоиска = Неопределено;
		ИначеЕсли ИскатьПоОКТМО Тогда
			ОбластьПоиска = "ОКТМО";
		Иначе
			ОбластьПоиска = "ОКАТО";
		КонецЕсли;
		
	КонецЕсли;
	
	Результат = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	Пока Выборка.Следующий() Цикл
		
		Результат = Выборка.Ссылка;
		
		Если (ОбластьПоиска = Неопределено)
			Или (ОбластьПоиска = "ОКТМО" И Выборка.НайденПоОКТМО)
			Или (ОбластьПоиска = "ОКАТО" И Выборка.НайденПоОКАТО) Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция НайтиПоКПП(Организация, КПП) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("КПП",                 КПП);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	РегистрацииВНалоговомОргане.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &ГоловнаяОрганизация
	|	И РегистрацииВНалоговомОргане.КПП = &КПП";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() <> 1 Тогда
		Возврат Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	Иначе
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Код");
	Поля.Добавить("КПП");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Данные.КПП) Тогда
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'КПП %1 в инспекции %2'"),
			Данные.КПП, Данные.Код);
	Иначе
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В инспекции %1'"),
			Данные.Код);
	КонецЕсли;
	
КонецПроцедуры

Функция РегистрацияВНалоговомОргане(Владелец, КПП, КодНалоговогоОргана) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Организация", Владелец);
	Запрос.Параметры.Вставить("КПП", КПП);
	Запрос.Параметры.Вставить("Код", КодНалоговогоОргана);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрацииВНалоговомОргане.Ссылка
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &Организация
	|	И РегистрацииВНалоговомОргане.Код = &Код
	|	И РегистрацииВНалоговомОргане.КПП = &КПП";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	
КонецФункции

Функция НайтиРегистрациюВНалоговомОргане(Организация, НалоговыйОрган) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрацииВНалоговомОргане.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|		ПО (РегистрацииВНалоговомОргане.Код = Контрагенты.КодГосударственногоОргана)
		|ГДЕ
		|	Контрагенты.Ссылка = &НалоговыйОрган
		|	И НЕ Контрагенты.ЭтоГруппа
		|	И Контрагенты.ГосударственныйОрган
		|	И Контрагенты.ВидГосударственногоОргана = ЗНАЧЕНИЕ(Перечисление.ВидыГосударственныхОрганов.НалоговыйОрган)
		|	И РегистрацииВНалоговомОргане.Владелец = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат =  Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли

