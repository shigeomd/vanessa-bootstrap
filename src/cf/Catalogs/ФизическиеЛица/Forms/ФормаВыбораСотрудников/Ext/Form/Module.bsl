#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Отбор по организации
	Если Параметры.Отбор.Свойство("Организация") Тогда
		
		НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.Организация, "Наименование");
		ОрганизацияОтбор = Параметры.Отбор.Организация;
		
		Параметры.Отбор.Удалить("Организация");
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ОрганизацияОтбор",
			"Видимость",
			Ложь
		);
		
	КонецЕсли;
	
	// Отбор по головной организации.
	Если Параметры.Отбор.Свойство("ГоловнаяОрганизация") Тогда
		
		Параметры.Отбор.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Параметры.Отбор.ГоловнаяОрганизация);
		НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.ГоловнаяОрганизация, "Наименование");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ГоловнаяОрганизация", Параметры.Отбор.ГоловнаяОрганизация, ВидСравненияКомпоновкиДанных.Равно, ,
			Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
			
		Параметры.Отбор.Удалить("ГоловнаяОрганизация");
	
		Заголовок = НСтр("ru = 'Сотрудники'") + " (" + НаименованиеОрганизации + ")";
		
	КонецЕсли;
	
	// Отбор по периоду работы	
	Если Параметры.Отбор.Свойство("ДатаПримененияОтбора") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.ДатаПримененияОтбора) Тогда
			
			ДатаНачалаОтбора = НачалоДня(Параметры.Отбор.ДатаПримененияОтбора);
			ДатаОкончанияОтбора = КонецДня(ДатаНачалаОтбора);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаНачалаОтбора)
			И НЕ Параметры.Отбор.Свойство("МесяцПримененияОтбора") Тогда
			
			ДатаНачалаОтбора = НачалоДня(ТекущаяДатаСеанса());
			ДатаОкончанияОтбора = КонецДня(ДатаНачалаОтбора);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			ЗаголовокГруппы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='работающие %1'"),
				Формат(ДатаНачалаОтбора, "ДЛФ=DD"));
				
		КонецЕсли; 
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ДатаНачалаОтбора) И Параметры.Отбор.Свойство("МесяцПримененияОтбора") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.МесяцПримененияОтбора) Тогда
			
			ДатаНачалаОтбора = НачалоМесяца(Параметры.Отбор.МесяцПримененияОтбора);
			ДатаОкончанияОтбора = КонецМесяца(ДатаНачалаОтбора);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			ДатаНачалаОтбора = НачалоМесяца(ТекущаяДатаСеанса());
			ДатаОкончанияОтбора = КонецМесяца(ДатаНачалаОтбора);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			ЗаголовокГруппы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='работающие в период - %1 г.'"),
				Формат(ДатаНачалаОтбора, "ДФ='МММ гггг'"));
		
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Отбор.Удалить("ДатаПримененияОтбора");
	Параметры.Отбор.Удалить("МесяцПримененияОтбора");
	
	ПоказыватьВсехСотрудников = Не ЗначениеЗаполнено(ДатаНачалаОтбора);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПоказыватьВсехСотрудников",
		"Видимость",
		Не ПоказыватьВсехСотрудников
	);
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		ЭтаФорма,
		"ПоказыватьВсехСотрудников",
		НСтр("ru='В списке отображаются только'") + " " + ЗаголовокГруппы
	);
	
	// Отбор по сотрудникам в архиве.
	Если Параметры.Отбор.Свойство("ВАрхиве") Тогда
		
		СкрыватьСотрудниковВАрхиве = НЕ Параметры.Отбор.ВАрхиве;
		Параметры.Отбор.Удалить("ВАрхиве");
			
	КонецЕсли; 
	
	// Настройка списка	
	Если Параметры.РежимВыбора И Параметры.ЗакрыватьПриВыборе = Ложь Тогда
		Элементы.Список.МножественныйВыбор = Истина;
		Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
	КонецЕсли;
	
	Если Элементы.Список.РежимВыбора
		И НЕ ЭтаФорма.ЗакрыватьПриВыборе Тогда
		
		Если НЕ ПустаяСтрока(Параметры.АдресСпискаПодобранныхСотрудников) Тогда
			МассивПодобранных = ПолучитьИзВременногоХранилища(Параметры.АдресСпискаПодобранныхСотрудников);
			СписокПодобранных.ЗагрузитьЗначения(МассивПодобранных);
		КонецЕсли; 
		
	КонецЕсли;
	
	УстановитьСписокПодобранныхСотрудников();
	
	// Применение настроек отбора
	ПрименитьОтборНаСервере();
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)
	
	ПрименитьОтбор();
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказыватьВсехСотрудниковПриИзменении(Элемент)
	
	ПрименитьОтбор();
	
КонецПроцедуры


&НаКлиенте
Процедура СкрыватьСотрудниковВАрхивеПриИзменении(Элемент)
	
	ПрименитьОтбор();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Элементы.Список.РежимВыбора И НЕ ЗакрыватьПриВыборе Тогда
		ОбновитьСписокПодобранных(Значение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокПодобранных(Значение)
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		
		Для каждого ВыбранноеЗначение Из Значение Цикл
			СписокПодобранных.Добавить(ВыбранноеЗначение);
		КонецЦикла;
		
	Иначе
		СписокПодобранных.Добавить(Значение);
	КонецЕсли;
	
	УстановитьСписокПодобранныхСотрудников();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокПодобранныхСотрудников()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"СписокПодобранных",
		СписокПодобранных.ВыгрузитьЗначения());
		
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьОтбор()
	
	УстановитьОтборСписка(
		Список,
		ОрганизацияОтбор,
		ПоказыватьВсехСотрудников,
		ДатаНачалаОтбора,
		ДатаОкончанияОтбора,
		СкрыватьСотрудниковВАрхиве
	);
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьОтборНаСервере()
	
	УстановитьОтборСписка(
		Список,
		ОрганизацияОтбор,
		ПоказыватьВсехСотрудников,
		ДатаНачалаОтбора,
		ДатаОкончанияОтбора,
		СкрыватьСотрудниковВАрхиве
	);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, Организация, ПоказыватьВсехСотрудников, ДатаНачалаОтбора, ДатаОкончанияОтбора, СкрыватьСотрудниковВАрхиве)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Организация");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, , "ОтборПоПериодуРаботы");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ВАрхиве");
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Организация",
			Организация,
			,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			
	КонецЕсли; 
	
	Если Не ПоказыватьВсехСотрудников И ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
		
		// Пункт отбора
		ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы, "ОтборПоПериодуРаботы", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		ГруппаИ.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ГруппаИ.ИдентификаторПользовательскойНастройки = "РаботающиеСотрудники";
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИ, "ДатаПриема", ДатаОкончанияОтбора, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
			
		// Группа для отбора по дате увольнения
		// ДатаУвольнения >= ДатаНачалаОтбора ИЛИ НЕ ЗначениеЗаполнено(ДатаУвольнения)
		ГруппаИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаИ.Элементы, "ГруппаИЛИ", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИЛИ, "ДатаУвольнения", ДатаНачалаОтбора, ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
			
		ГруппаИЛИДляДатаУвольнения = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаИЛИ.Элементы, "ГруппаИЛИДляДатаУвольнения", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ГруппаИЛИДляДатаУвольнения, "ДатаУвольнения", , ВидСравненияКомпоновкиДанных.НеЗаполнено);
		
	КонецЕсли;
	
	Если СкрыватьСотрудниковВАрхиве Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВАрхиве", Ложь, ВидСравненияКомпоновкиДанных.Равно, 
			НСтр("ru='Скрывать в списке сотрудников, по которым уже не выполняются операции'"), Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
